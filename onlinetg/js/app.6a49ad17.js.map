{"version":3,"file":"js/app.6a49ad17.js","mappings":"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","sources":["webpack://okxconnectdemo/./src/App.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue?1b44","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue?e4fb","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue?aa83","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue?089a","webpack://okxconnectdemo/./src/App.vue?7ccd","webpack://okxconnectdemo/./src/main.js","webpack://okxconnectdemo/webpack/bootstrap","webpack://okxconnectdemo/webpack/runtime/amd options","webpack://okxconnectdemo/webpack/runtime/chunk loaded","webpack://okxconnectdemo/webpack/runtime/compat get default export","webpack://okxconnectdemo/webpack/runtime/define property getters","webpack://okxconnectdemo/webpack/runtime/global","webpack://okxconnectdemo/webpack/runtime/hasOwnProperty shorthand","webpack://okxconnectdemo/webpack/runtime/make namespace object","webpack://okxconnectdemo/webpack/runtime/node module decorator","webpack://okxconnectdemo/webpack/runtime/jsonp chunk loading","webpack://okxconnectdemo/webpack/startup"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <el-container>\n      <el-header>OKX Connect</el-header>\n      <el-main>\n        <el-card class=\"wallet-info\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Wallet Info</div>\n          </template>\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Wallet Address:</strong> {{ getWalletAddress }}\n            </el-col>\n          </el-row>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Status :</strong> {{ currentStatus }}\n            </el-col>\n          </el-row>\n\n        </el-card>\n\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Connect Params</div>\n          </template>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"12\">\n              <el-checkbox v-model=\"withUI\" @change=\"handleWithUI\">\n                Show UI</el-checkbox>\n            </el-col>\n\n            <el-col :span=\"12\">\n              <el-checkbox v-model=\"universalToTG\" @change=\"handleUniversalToTG\">\n                Use mini wallet</el-checkbox>\n            </el-col>\n          </el-row>\n\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Modals</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"modals\" placeholder=\"Modals\" @change=\"handleModalsSelect\" multiple>\n                <el-option label=\"Before\" value=\"before\" />\n                <el-option label=\"Success\" value=\"success\" />\n                <el-option label=\"Error\" value=\"error\" />\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center; justify-content: space-between;\">\n            <el-col :span=\"6\" style=\"gap: 2px\">\n              <p style=\"font-size: 11pt; margin: 0px\">Return Strategy</p>\n              <p style=\"font-size: 9pt; margin: 0px\">(Mobile only)</p>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-select\n                v-model=\"returnStrategy\"\n                @change=\"handleReturnStrategySelect\"\n                placeholder=\"Return Strategy\"\n              >\n                <el-option\n                  v-for=\"strategy in returnStrategies\"\n                  :key=\"`return-strategy-select-option-${strategy}`\"\n                  :label=\"strategy\"\n                  :value=\"strategy\"\n                />\n              </el-select>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-input\n                v-if=\"returnStrategy === 'deeplink'\"\n                v-model=\"deeplink\"\n                @change=\"handleReturnStrategyDeeplink\"\n                placeholder=\"Deeplink\"\n                :disabled=\"returnStrategy !== 'deeplink'\"\n                style=\"margin: 0px\"\n              />\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Lang</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"language\" @change=\"handleLanguageSelect\" placeholder=\"Language\">\n                <el-option v-for=\"locale in locales\" :key=\"`language-select-option-${locale}`\" :label=\"locale\"\n                  :value=\"locale\" />\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Theme</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"theme\" @change=\"handleThemeSelect\" placeholder=\"Theme\">\n                <el-option label=\"LIGHT\" :value=\"THEME.LIGHT\" />\n                <el-option label=\"DARK\" :value=\"THEME.DARK\" />\n              </el-select>\n            </el-col>\n          </el-row>\n\n<!--          <el-row>-->\n<!--          <el-row style=\"align-items: center\">-->\n<!--            <el-col :span=\"4\">-->\n<!--              <p style=\"font-size: 11pt\">Connect</p>-->\n<!--              <p style=\"font-size: 11pt\">Methods</p>-->\n<!--            </el-col>-->\n<!--            <el-col :span=\"20\">-->\n<!--              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" placeholder=\"Methods\">-->\n<!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n<!--                           :value=\"methods\" />-->\n\n<!--              </el-select>-->\n<!--            </el-col>-->\n<!--          </el-row>-->\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Connect</p>\n              <p style=\"font-size: 11pt\">Methods</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" multiple placeholder=\"methods\">\n                <el-option\n                    v-for=\"item in connectMethods\"\n                    :key=\"item\"\n                    :label=\"item\"\n                    :value=\"item\">\n                </el-option>\n              </el-select>\n\n\n<!--              <el-select v-model=\"selectedMethod\" placeholder=\"Methods\" @change=\"handleConnectMethodsSelect\" multiple>-->\n<!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n<!--                           :value=\"methods\" />-->\n<!--              </el-select>-->\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">ton_proof</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-input v-model=\"tonProofValue\"  placeholder=\"input ton_proof\"></el-input>\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" align=\"middle\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Required Chains</div>\n            </el-col>\n            <el-col\n              :span=\"6\"\n              v-for=\"item in Object.keys(availableChains)\"\n              :key=\"item\"\n            >\n              <el-checkbox\n                v-model=\"availableChains[item].checked\"\n                :disabled=\"!areChainsInit\"\n                >{{ availableChains[item].name }}</el-checkbox\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" align=\"middle\" style=\"margin-top: 20px\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Optional Chains</div>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(43114)\" @change=\"() => handleOptionChange(43114)\">\n                AVAX</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(10)\" @change=\"() => handleOptionChange(10)\">OP</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(8453)\" @change=\"() => handleOptionChange(8453)\">\n                BASE</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(99781165)\"\n                @change=\"() => handleOptionChange(99781165)\">Nonexist</el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp')\" @change=\"() => handleOptionChange('solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp')\">Solana</el-checkbox>\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"initBtnClicked\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectInitStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                type=\"primary\"\n                @click=\"connectBtnClicked\"\n                icon=\"el-icon-connection\"\n                :disabled=\"!areChainsInit\"\n                >{{ connectStatusStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"syncAllAddressClick\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ syncAllAddressStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                type=\"danger\"\n                @click=\"disconnectAction\"\n                icon=\"el-icon-switch-button\"\n                :disabled=\"!areChainsInit || walletAddress.length == 0\"\n                >{{ disconnectStatusStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n          <teleport to=\"body\">\n            <div v-if=\"showModal\" class=\"modal-overlay\" @click=\"closeModal\">\n              <div class=\"modal-content\" @click.stop>\n                <button class=\"close-button\" @click=\"closeModal\">\n                  &times;\n                </button>\n                <h2>Scan to connect</h2>\n                <qrcode-vue :value=\"qrValue\" :size=\"350\" level=\"L\" />\n              </div>\n            </div>\n          </teleport>\n        </el-card>\n\n        <!-- 发送交易 -->\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Transactions</div>\n          </template>\n\n          <el-tabs v-model=\"activeTab\" type=\"border-card\" @tab-click=\"clickActiveTab\">\n            <!-- ETH -->\n            <el-tab-pane label=\"ETH\" name=\"eip155:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to ETH)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve TONCoin)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(eth mint\n                    nft)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add SPX6900)\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TON\" name=\"ton:-239\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_getAccount\">ton_getAccount</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_sendTransaction\">ton_sendTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- solana -->\n            <el-tab-pane label=\"Sol\" name=\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- Sui-->\n            <el-tab-pane label=\"Sui\" name=\"sui:mainnet\">\n              <SuiPanel @generateTransactionParams=\"sui_generateTransactionParams\" />\n            </el-tab-pane>\n            <!-- BTC -->\n            <el-tab-pane label=\"BTC\" name=\"btc:mainnet\">\n              <BTCPanel @generateTransactionParams=\"btc_generateTransactionParams\" />\n            </el-tab-pane>\n\n            <!-- Fractal BTC -->\n            <el-tab-pane label=\"Fractal\" name=\"fractal:mainnet\">\n              <FractalPanel @generateTransactionParams=\"fractal_generateTransactionParams\" />\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Tron\" name=\"tron:mainnet\">\n              <TronTransactionPanel\n                  @generateTransactionParams=\"tron_generateTransactionParams\"\n                  @generateTransactionResult=\"tron_getTransactionResult\" />\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Aptos\" name=\"aptos:mainnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signTransaction\">aptos_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"aptos_signAndSubmitTransaction\">aptos_signAndSubmitTransaction</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Cosmos\" name=\"cosmos:cosmoshub-4\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <!-- Polygon-->\n            <el-tab-pane label=\"Polygon\" name=\"eip155:137\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send POL)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve sushi)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(polygon mint\n                    nft)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add LGNS)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_testRpc()\">wallet_testRpc(Polygon)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\"\n                  >eth_sendTransaction(转账FUSE)</el-button\n                  >\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\"\n                  >eth_sendTransaction(授权USDC)</el-button\n                  >\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- BSC-->\n            <el-tab-pane label=\"BNB\" name=\"eip155:56\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to BNB)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve POSI)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add FET)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_testRpc()\">wallet_testRpc(check balance on eth)</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Fuse\" name=\"eip155:122\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_swap\">eth_sendTransaction(Swap)</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Sonic testnet\" name=\"svm:70000062\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Movement\" name=\"movement:testnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"move_signTransaction\">move_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"move_signAndSubmitTransaction\">move_signAndSubmitTransaction</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n\n            <el-tab-pane label=\"osmos\" name=\"cosmos:osmosis-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"SEI\" name=\"cosmos:pacific-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TEST \" name=\"test:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"testBase64UrlSafe\">testBase64UrlSafe</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n          </el-tabs>\n\n          <el-col :xs=\"24\" :sm=\"24\" style=\"margin: 16px 0px;\">\n            <el-row style=\"align-items: center; justify-content: space-between; margin-bottom: 8px;\">\n              <el-col :span=\"4\">\n                <p style=\"font-size: 11pt; margin: 0px; text-align: start\">Redirect param (only for ETH, Polygon, BNB, Fuse)</p>\n              </el-col>\n              <el-col :span=\"9\">\n                <el-select\n                  v-model=\"redirect\"\n                  @change=\"handleRedirectSelect\"\n                  placeholder=\"Return Strategy\"\n                  :disabled=\"!canChainAddRedirectParam()\"\n                  >\n                  <el-option\n                    v-for=\"strategy in returnStrategies\"\n                    :key=\"`return-strategy-select-option-${strategy}`\"\n                    :label=\"strategy\"\n                    :value=\"strategy\"\n                  />\n                </el-select>\n              </el-col>\n              <el-col :span=\"10\">\n                <el-input\n                  v-if=\"redirect === 'deeplink'\"\n                  v-model=\"redirectDeeplink\"\n                  @change=\"handleRedirectDeeplink\"\n                  placeholder=\"Deeplink\"\n                  :disabled=\"!canChainAddRedirectParam() || redirect !== 'deeplink'\"\n                  style=\"margin: 0px\"\n                />\n              </el-col>\n            </el-row>\n            <el-button\n              type=\"primary\" @click=\"addRedirectParam()\"\n              :disabled=\"!canChainAddRedirectParam() || !testTransaction\"\n            >\n              Add redirect param to data\n            </el-button>\n          </el-col>\n\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Data:</div>\n            <el-input v-model=\"testTransaction\" type=\"textarea\" :rows=\"5\" placeholder=\"sendTransactions\"></el-input>\n          </el-col>\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Result :</div>\n            <el-input v-model=\"testboc\" type=\"textarea\" :rows=\"5\" placeholder=\"boc\"></el-input>\n          </el-col>\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button type=\"primary\" @click=\"sendTransaction()\">{{\n                testTransactionStr\n                }}</el-button>\n            </el-col>\n          </el-row>\n        </el-card>\n      </el-main>\n    </el-container>\n  </div>\n</template>\n\n<style scoped>\n/* 重置全局边距和内边距 */\nbody,\nhtml {\n  margin: 0;\n  padding: 0;\n  height: 100%;\n}\n\n/* 确保 app 容器占满整个视口 */\n#app {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin: 0 auto;\n  /* 居中 */\n  max-width: 600px;\n  /* 设置最大宽度 */\n  padding: 0 20px;\n  /* 添加一些左右内边距 */\n}\n\n/* 调整 el-container 样式 */\n.el-container {\n  min-height: 100vh;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n}\n\n/* 调整 el-header 样式 */\n.el-header {\n  background-color: #333333;\n  color: white;\n  height: 50px;\n  line-height: 50px;\n  font-size: 18px;\n  font-weight: bold;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1000;\n}\n\n/* 调整 el-main 样式 */\n.el-main {\n  padding: 70px 0 20px;\n  /* 增加顶部内边距以避免被固定header遮挡 */\n  flex-grow: 1;\n}\n\n.el-card {\n  margin-bottom: 20px;\n}\n\n.info-row {\n  margin-bottom: 10px;\n}\n\n.input-label {\n  margin-bottom: 5px;\n  text-align: left;\n}\n\n.el-input {\n  margin-bottom: 10px;\n}\n\n/* 通用按钮样式 */\n.wallet-actions .el-button,\n.transaction .el-button,\n.clear-cache .el-button {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 40px;\n}\n\n.wallet-actions .el-button span,\n.transaction .el-button span,\n.clear-cache .el-button span {\n  margin: 0 auto;\n}\n\n/* 按钮行间距 */\n.wallet-actions .button-row,\n.transaction .button-row {\n  margin-bottom: 8px;\n}\n\n.wallet-actions .button-row:last-child,\n.transaction .button-row:last-child {\n  margin-bottom: 0;\n}\n\n/* 调整图标和文字的对齐 */\n.wallet-actions .el-button [class^=\"el-icon-\"],\n.transaction .el-button [class^=\"el-icon-\"],\n.clear-cache .el-button [class^=\"el-icon-\"] {\n  margin-right: 5px;\n  vertical-align: middle;\n}\n\n/* 新增：调整发送交易按钮与输入框的间距 */\n.transaction .el-row:not(:last-child) {\n  margin-bottom: 10px;\n}\n\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.modal-content {\n  background-color: white;\n  padding: 20px;\n  border-radius: 8px;\n  text-align: center;\n  position: relative;\n  max-width: 90%;\n  width: 400px;\n}\n\n.close-button {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  font-size: 24px;\n  border: none;\n  background: none;\n  cursor: pointer;\n}\n\n/* 响应式调整 */\n@media (max-width: 600px) {\n  #app {\n    padding: 0 10px;\n  }\n\n  .el-main {\n    padding: 60px 0 10px;\n  }\n}\n</style>\n<script>\nimport {OKX_CONNECT_ERROR_CODES, safeJsonStringify,getAppWalletDeepLink,getUniversalLink} from \"@okxconnect/core\"\nimport {\n  OKXBtcProvider,\n  OKXUniversalProvider,\n  OKXCosmosProvider,\n  OKXTonProvider,\n  OKXTronProvider\n} from \"@okxconnect/universal-provider\"\nimport {OKXSolanaProvider} from \"@okxconnect/solana-provider\";\nimport {\n  Connection,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n  TransactionMessage,\n  VersionedTransaction\n} from '@solana/web3.js';\nimport {OKXSuiProvider as SuiAdapter} from \"@okxconnect/sui-provider\"\nimport QrcodeVue from 'qrcode.vue'\n\nimport {OKXAptosProvider} from \"@okxconnect/aptos-provider\";\nimport {Aptos, AptosConfig, Network} from \"@aptos-labs/ts-sdk\";\n\nimport BTCPanel from \"./components/BtcTransactionPanel.vue\";\nimport FractalPanel from \"./components/FractalTransactionPanel.vue\"\nimport SuiPanel from \"./components/SuiTransactionPanel.vue\";\n\nimport {OKXUniversalConnectUI, THEME} from \"@okxconnect/ui\";\nimport { ethers } from 'ethers';\nimport VConsole from 'vconsole';\nimport nacl from \"tweetnacl\";\nconst { verifyADR36Amino } = require('@keplr-wallet/cosmos')\nconst { fromBech32 } = require('@cosmjs/encoding')\nimport { verifyPersonalMessageSignature } from '@mysten/sui/verify';\nimport {useShortLink} from \"@okxconnect/core\";\nimport TronTransactionPanel from \"@/components/TronTransactionPanel.vue\";\nimport {TronWeb} from \"tronweb\";\nnew VConsole();\n\nconst allChains = {\n  1: { name: \"Eth\", checked: false },\n  56: { name: \"BNB\", checked: false },\n  137: { name: \"Polygon\", checked: false },\n  122: { name: \"Fuse\", checked: false },\n  \"ton:-239\":{name: \"TON\",checked: false},\n  \"btc:mainnet\": { name: \"BTC\", checked: false },\n  \"sui:mainnet\": { name: \"Sui\", checked: false },\n  \"aptos:mainnet\": { name: \"Aptos\", checked: false },\n  \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\": {\n    name: \"Solana\",\n    checked: false,\n  },\n  \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\": {\n    name: \"Sol testnet\",\n    checked: false,\n  },\n  \"svm:70000062\": {\n    name: \"Sonic testnet\",\n    checked: false,\n  },\n  \"movement:testnet\": { name: \"Movement\", checked: false },\n  \"fractal:mainnet\": { name: \"Fractal\", checked: false },\n  \"cosmos:osmosis-1\": {name: \"Osmos\", checked: false},\n  \"cosmos:cosmoshub-4\": {name: \"Cosmos\", checked: false},\n  \"cosmos:pacific-1\": {name: \"SEI\", checked: false},\n  \"cosmos:abvdefg\": {name: \"cosmos:abvdefg\", checked: false},\n  \"tron:mainnet\": {name: \"tron\", checked: false},\n  997865: { name: \"Non Exist chain\", checked: false },\n  2020: { name: \"Ronin\", checked: false },\n  1666600000: { name: \"Harmony\", checked: false },\n};\n\nconst chainsThatCanAddRedirectParam = [\n  \"eip\"\n]\n\nvar optionChains = new Set([]);\nvar selectedModals = [\"before\", \"success\", \"error\"];\nvar selectedReturnStrategy = \"none\";\nvar selectedDeepLink = \"tg://resolve\";\nvar selectedLanguage = \"en_US\";\nvar selectedTheme = THEME.LIGHT;\n\n// import QrcodeVue from 'qrcode.vue'\nexport default {\n  name: \"App\",\n  components: {\n    TronTransactionPanel,\n    QrcodeVue,\n    BTCPanel,\n    FractalPanel,\n    SuiPanel\n  },\n\n  data: () => {\n    return {\n      activeTab: \"eip155:1\",\n      testTopic: \"\",\n      testPublicKey: \"\",\n      testProofPayload: \"\",\n      tonProofValue:\"\",\n      pendingDeepLink: \"-\",\n      logList: [],\n      connectReady: false,\n      connectStatusStr: \"Connect\",\n      syncAllAddressStr: \"syncAllAddress\",\n      connectInitStr: \"init test\",\n      disconnectStatusStr: \"Disconnect\",\n      localPubKey: \"\",\n      localSecKey: \"\",\n      testTransaction: \"\",\n      selectedChain: \"eip155:1\",\n      testTransactionStr: \"Send\",\n      walletAddress: \"\",\n      testboc: \"\",\n      ProofPayloadVerify: \"\",\n      showModal: false,\n      showVerifyRow: false,\n      qrValue: \"https://www.okx.com/download\",\n      currentStatus: \"\",\n      areChainsInit: false,\n      availableChains: allChains,\n      isOptionalChecked: (chainId) => {\n        return optionChains.has(chainId);\n      },\n      withUI: localStorage.getItem(\"autoRefresh\") != \"false\",\n      universalToTG: localStorage.getItem(\"universalToTG\") != \"false\",\n      modals: selectedModals,\n      returnStrategies: [\"none\", \"back\", \"deeplink\"],\n      returnStrategy: selectedReturnStrategy,\n      deeplink: selectedDeepLink,\n      locales: [\n        \"en_US\",\n        \"ru_RU\",\n        \"zh_CN\",\n        \"zh\",\n        \"ar_AE\",\n        \"cs_CZ\",\n        \"de_DE\",\n        \"es_ES\",\n        \"es_LAT\",\n        \"fr_FR\",\n        \"id_ID\",\n        \"it_IT\",\n        \"nl_NL\",\n        \"pl_PL\",\n        \"pt_BR\",\n        \"pt_PT\",\n        \"ro_RO\",\n        \"tr_TR\",\n        \"uk_UA\",\n        \"vi_VN\",\n        \"zh_TW\"\n      ],\n      selectedMethod:[],\n      selectedMethodData:[],\n      connectMethods:[\n        \"wallet_addEthereumChain(ETH)\",\n        \"personal_sign(ETH)\",\n        \"solana_signMessage(Sol mainnet)\",\n        \"sui_signMessage(Sui mainnet)\",\n        \"sui_signPersonalMessage(Sui mainnet)\",\n        \"btc_signMessage(BTC)\",\n        \"aptos_signMessage(aptos mainnet)\",\n        \"cosmos_signArbitrary(cosmoshub)\",\n        \"test_noSupport_eth(ETH)\",\n        \"tron_signMessage\",\n        \"tron_signMessageV2\",\n        \"sync_all_addresses\"\n      ],\n\n      language: selectedLanguage,\n      theme: selectedTheme,\n      THEME: THEME,\n      redirect: selectedReturnStrategy,\n      redirectDeeplink: selectedDeepLink,\n      handleWithUI: (isChecked) => {\n        localStorage.setItem(\"autoRefresh\", `${isChecked}`);\n        location.reload();\n      },\n      handleUniversalToTG: (isChecked) => {\n        localStorage.setItem(\"universalToTG\", `${isChecked}`);\n      },\n      handleOptionChange: (chainId) => {\n        if (optionChains.has(chainId)) {\n          optionChains.delete(chainId);\n        } else {\n          optionChains.add(chainId);\n        }\n      },\n    };\n  },\n  computed: {\n    getWalletAddress: function () {\n      return this.walletAddress;\n    },\n  },\n  methods: {\n    isChecked(chainId) {\n      return this.selectedChains.has(chainId);\n    },\n\n    initChains(newChains) {\n      if (newChains.length > 0) {\n        const updatedChains = Object.assign({}, this.availableChains);\n        for (const chainId of newChains) {\n          if (updatedChains[chainId]){\n            updatedChains[chainId].checked = !updatedChains[chainId].checked;\n          }\n        }\n        this.availableChains = updatedChains;\n      }\n\n      this.areChainsInit = true;\n    },\n\n    async clickActiveTab(tab) {\n      const tabName = tab.props ? tab.props.name : tab.name;\n      this.selectedChain = tabName;\n      console.log(`已切换到链 :`, tabName);\n\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      window.provider.setDefaultChain(this.selectedChain);\n    },\n\n    async initBtnClicked() {\n      var initCall;\n      if (!this.withUI) {\n        initCall = OKXUniversalProvider.init({\n          dappMetaData: {\n            name: \"univer test dapp\",\n            icon: \"https://avatars.githubusercontent.com/u/37784886\",\n          },\n        });\n      } else {\n        initCall = OKXUniversalConnectUI.init({\n          dappMetaData: {\n            icon: \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\",\n            name: \"OKX WalletConnect UI Demo\",\n          },\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: \"all\",\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme\n          },\n        });\n      }\n\n      initCall.then((provider) => {\n        window.provider = provider;\n        window.tonProvider = new OKXTonProvider(window.provider);\n        window.tonProvider.onStatusChange((walletInfo) => {\n              console.log('TONConnection onStatusChange:', JSON.stringify(walletInfo));\n            }, (err) => {\n              console.log('TONConnection onStatusChange error:', err);\n            }\n        )\n\n        if (window.provider instanceof OKXUniversalConnectUI) {\n          window.provider.onModalStateChange((state)=>{\n            console.log(`onModalStateChange   ${JSON.stringify(state)}`)\n          })\n        }\n\n        console.log(\"init finished:\", provider);\n        console.log(\"init finished session:\", JSON.stringify(provider.session));\n\n        if (provider.session?.namespaces) {\n          const newChains = [];\n          console.log(\"namespaces\", provider.session.namespaces);\n          Object.entries(provider.session.namespaces).forEach(([key, value]) => {\n            if (key === \"eip155\") {\n              value.chains.forEach((chain) => {\n                newChains.push(parseInt(chain.substring(7)));\n              });\n            }\n            else {\n              value.chains.forEach((chain) => {\n                newChains.push(chain);\n              });\n            }\n          });\n\n          console.log(\"existing chains:\", newChains);\n          this.initChains(newChains);\n        } else {\n          this.initChains([]);\n        }\n\n        provider.on(\"display_uri\", (uri) => {\n          if (!useShortLink()){\n            if (this.isPC()) {\n              if (uri && !this.withUI && !this.universalToTG) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          }\n          console.log(\"通知>>>display_uri  ==> \", uri);\n        });\n\n        provider.on(\"connect_signResponse\", (items) => {\n          console.log(\"通知>>>connect_signResponse  ==> \", JSON.stringify(items));\n          this.verifyMessage(items)\n        })\n\n        provider.on(\"short_display_uri\", (uri) => {\n          if (useShortLink()){\n            if (this.isPC()) {\n              if (uri && !this.withUI && !this.universalToTG) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          }\n          console.log(\"通知>>>short_display_uri  ==> \", uri);\n        });\n\n\n        provider.on(\"session_connecting\", () => {\n          if (useShortLink()){\n            alert(\"session_connecting\")\n          }\n          console.log(\"通知>>>session_connecting  ==> \");\n        });\n\n        provider.on(\"connect\", (session) => {\n          console.log(\"通知>>>get connect session\", session);\n        });\n        provider.on(\"reconnect\", (session) => {\n          console.log(\"通知>>>get reconnect session\", session);\n          this.walletAddress = \"connected\";\n        });\n        provider.on(\"disconnect\", ({ topic }) => {\n          console.log(`通知>>>get disconnect  ${topic}`);\n          this.walletAddress = \"disconnecteddddd\";\n        });\n        provider.on(\"session_delete\", ({ topic }) => {\n          console.log(`通知>>>get session_delete  ${topic}`);\n        });\n        provider.on(\"session_update\", (session) => {\n          console.log(`通知>>>get session_update `, JSON.stringify(session));\n        });\n      });\n    },\n\n    async connectBtnClicked() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        this.testTonSdk();\n      } else {\n        console.log(`connectBtnClicked provider not finish init`);\n      }\n    },\n\n    async syncAllAddressClick() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        if (window.provider instanceof OKXUniversalProvider){\n          if (window.provider.connected()){\n            try {\n              let message = await window.provider.syncAllAddresses()\n              if (typeof message == \"string\") {\n                this.testboc = message\n              } else {\n                this.testboc = JSON.stringify(message)\n              }\n            }catch (e) {\n              this.testboc = JSON.stringify(e)\n            }\n          }else{\n            this.testboc = \"not connected\"\n          }\n        }\n\n      } else {\n        console.log(`syncAllAddress provider not finish init`);\n      }\n    },\n\n    async disconnectAction() {\n      try {\n        console.log(\"get disconnect wallet btn clicked\");\n        // await TON.disconnect();\n        var provider = window.provider;\n        await provider.disconnect();\n        this.walletAddress = \"disconnected\";\n      } catch (error) {\n        console.log(\"Disconnect  error ==>> \", error.message);\n        this.currentStatus = error.message;\n      }\n    },\n\n    async eth_requestAccounts() {\n      var data = { method: \"eth_requestAccounts\" };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_chainId() {\n      var data = { method: \"eth_chainId\" };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async wallet_switchEthereumChain() {\n      var data = { method: \"wallet_switchEthereumChain\" };\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async wallet_addEthereumChain() {\n      var data = {\n        method: \"wallet_addEthereumChain\",\n        params: {\n          blockExplorerUrls: [\"https://explorer.fuse.io\"],\n          chainId: \"0x7a\",\n          chainName: \"Fuse\",\n          nativeCurrency: { name: \"Fuse\", symbol: \"FUSE\", decimals: 18 },\n          rpcUrls: [\"https://rpc.fuse.io\"],\n        },\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n    async personal_sign() {\n      if (this.selectedChain === \"eip155:1\") {\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0x1ca023f10e157d148deed210f8bee193657a1eaa7f187909e20a9dc3b071dbc364c41fde37960c05093359f410a061ec8a7dca8c0c39fc7c1e24de8a3329775d1b\n\n        var accounts = await window.provider.request(\n          { method: \"eth_requestAccounts\" },\n          \"eip155:1\"\n        );\n        var address = accounts[0];\n        console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n        var dataETH = {\n          method: \"personal_sign\",\n          params: [\n            \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n            address,\n          ],\n        };\n\n        this.testTransaction = JSON.stringify(dataETH);\n      } else if (\n        this.selectedChain === \"eip155:137\" ||\n        this.selectedChain === \"eip155:122\"\n      ) {\n        // method\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0xebda9cfa2af43999058dffa0107031d1ef7fc0252dca85dcbd22ea097af922ca39b64d509ef61ce42b7641c5840b8a80337ffd1411b13e87e2260a3f1b6c151c1b\n\n        var dataPolygon = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n        this.testTransaction = JSON.stringify(dataPolygon);\n      } else if (this.selectedChain === \"eip155:56\") {\n        var data = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n\n        this.testTransaction = JSON.stringify(data);\n      }\n    },\n\n    async eth_sendTransaction_swap() {\n      var data = {\n        method: \"eth_sendTransaction\",\n        chainId: \"eip155:122\",\n        params: {\n          value: \"0x38d7ea4c68000\",\n          gas: \"0x2665f\",\n          to: \"0xf2614A233c7C3e7f08b1F887Ba133a13f1eb2c55\",\n          from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n          data: \"0x2646478b000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee00000000000000000000000000000000000000000000000000038d7ea4c68000000000000000000000000000620fd5fa44be6af63715ef4e65ddfa0387ad13f5000000000000000000000000000000000000000000000000000000000000001b000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000700301ffff0201602352A9Eb5234466Eac23E59e7B99bCaE79C39c0BE9e53fd7EDaC9F859882AfdDa116645287C629040BE9e53fd7EDaC9F859882AfdDa116645287C62900602352A9Eb5234466Eac23E59e7B99bCaE79C39c01f2F3e73be57031114dd1f4E75c1DD87658be7F0E000bb800000000000000000000000000000000\",\n        },\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_signTypedData_v4() {\n      // method\n      // eth_signTypedData\n      // address\n      // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n      // valid\n      // true\n      // result\n      // 0xa8bb3c6b33a119d2d567c7632195c21988df778006082742125a591f5c633f716107883a37f7de6531a6312a5f69022135bf46fe5ab77905b62c82b3395f985e1b\n      //\n\n      // var data = {\n      //   \"method\": \"eth_signTypedData_v4\",\n      //   \"params\": {\n      //     \"typedDataJson\":\"{\\\"types\\\":{\\\"EIP712Domain\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"version\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"chainId\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"name\\\":\\\"verifyingContract\\\",\\\"type\\\":\\\"address\\\"}],\\\"Person\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"wallet\\\",\\\"type\\\":\\\"address\\\"}],\\\"Mail\\\":[{\\\"name\\\":\\\"from\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"to\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"contents\\\",\\\"type\\\":\\\"string\\\"}]},\\\"primaryType\\\":\\\"Mail\\\",\\\"domain\\\":{\\\"name\\\":\\\"Ether Mail\\\",\\\"version\\\":\\\"1\\\",\\\"chainId\\\":1,\\\"verifyingContract\\\":\\\"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\\\"},\\\"message\\\":{\\\"from\\\":{\\\"name\\\":\\\"Cow\\\",\\\"wallet\\\":\\\"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\\\"},\\\"to\\\":{\\\"name\\\":\\\"Bob\\\",\\\"wallet\\\":\\\"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\\\"},\\\"contents\\\":\\\"Hello, Bob!\\\"}}\"\n      // }}\n\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n        this.selectedChain\n      );\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n      var data = {\n        method: \"eth_signTypedData_v4\",\n        params: [\n          address,\n          {\n            types: {\n              EIP712Domain: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"version\",\n                  type: \"string\",\n                },\n                {\n                  name: \"chainId\",\n                  type: \"uint256\",\n                },\n                {\n                  name: \"verifyingContract\",\n                  type: \"address\",\n                },\n              ],\n              Person: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"wallet\",\n                  type: \"address\",\n                },\n              ],\n              Mail: [\n                {\n                  name: \"from\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"to\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"contents\",\n                  type: \"string\",\n                },\n              ],\n            },\n            primaryType: \"Mail\",\n            domain: {\n              name: \"Ether Mail\",\n              version: \"1\",\n              chainId: 1,\n              verifyingContract: \"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\",\n            },\n            message: {\n              from: {\n                name: \"Cow\",\n                wallet: \"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\",\n              },\n              to: {\n                name: \"Bob\",\n                wallet: \"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\",\n              },\n              contents: \"Hello, Bob!\",\n            },\n          },\n        ],\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_sendTransaction_transfer() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            chainId: \"0x1\",\n            to: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            value: \"0x5af3107a4000\",\n            maxPriorityFeePerGas: \"0x3b9aca00\",\n            gas: \"0x5e56\",\n            maxFeePerGas: \"0x2643b9db8\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gasPrice: \"0x17003f6530\",\n            nonce: \"0x0d30\",\n            data: \"0x\",\n            value: \"0x00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasLimit: \"0x5208\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x5e56\",\n            value: \"0x5af3107a4000\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasPrice: \"0x3b9aca00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            chainId: \"0x38\",\n          },\n        };\n      }else if(this.selectedChain === \"eip155:122\"){\n         data =   {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            value: \"0x0\",\n            chainId: \"0x7a\",\n          }\n        }\n      }\n\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n        this.selectedChain\n      );\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"to\"] = address;\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_approve() {\n      var data = {};\n\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000000000000022d473030f116ddee9f6b43ac78ba3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x582d872a1b094fc48f5de31d3b73f2d9be47def1\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000f6f8096ac575b0\",\n            to: \"0x0b3F868E0BE5597D5DB7fEB59E1CADBb0fdDa50a\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            value: \"0x0\",\n            gas: \"0xe117\",\n            gasPrice: \"0xb2d05e00\",\n            data: \"0x095ea7b300000000000000000000000031c2f6fcff4f8759b3bd5bf0e1084a055615c768ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x5CA42204cDaa70d5c773946e69dE942b85CA6706\",\n          },\n        };\n      }else if (this.selectedChain === 'eip155:122'){\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000000000000013b3\",\n            to: \"0x620fd5fa44BE6af63715Ef4E65DDFA0387aD13F5\",\n          },\n        };\n      }\n\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n        this.selectedChain\n      );\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_mint() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x4cacb\",\n            data: \"0xa64dfa75000000000000000000000000ed688002f3797599db8b4feacfe8b1dda0df1c8d000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cecb15396825a895ff8da8fc2d2c77a234dccee00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f6261667962656968643737366b6177706e71336f6f6a6635693274787a76617737737164656b34616a776472637472703261366f626b70723773792f7b69647dan            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x30795\",\n            data: \"0xa64dfa75000000000000000000000000341b3687f0309778f08f29336b2c4b9c38b9f110000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f62616679626569686a6279676b68747a71376b68377434336266686e676e793236337668766f6578716a6d6e377161716166366e717a64743777712f7b69647d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002an            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      }\n\n      let str = JSON.stringify(data);\n      console.log(\"-----长度--->\", str.length);\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n          this.selectedChain\n      );\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async wallet_testRpc() {\n      let provider = window.provider;\n      provider.setDefaultChain(\n        `eip155:56`,\n        `https://eth-mainnet.g.alchemy.com/v2/NxUfYJUr-TQtEpLmSXhhD5pXn70GwsyV`\n      );\n      var data = {\n        method: \"eth_getBalance\",\n        params: [\"0x8D97689C9818892B700e27F316cc3E41e17fBeb9\", \"latest\"],\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async wallet_watchAsset() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xe0f63a424a4439cbe457d80e4f4b51ad25b2c56c\",\n              symbol: \"SPX6900\",\n              image:\n                \"https://assets.coingecko.com/coins/images/31401/standard/sticker_%281%29.jpg?1702371083\",\n              decimals: 8,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xeB51D9A39AD5EEF215dC0Bf39a8821ff804A0F01\",\n              symbol: \"LGNS\",\n              image: \"https://polygonscan.com/token/images/originlgns_32.png\",\n              decimals: 9,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0x031b41e504677879370e9dbcf937283a8691fa7f\",\n              symbol: \"FET\",\n              image: \"https://bscscan.com/token/images/fetch_32.png\",\n              decimals: 18,\n            },\n          },\n        };\n      }\n\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async ton_sendTransaction() {\n      var data  = {\n        \"messages\":[{\"address\":\"EQARULUYsmJq1RiZ-YiH-IJLcAZUVkVff-KBPwEmmaQGH6aC\",\"amount\":\"205000000\",\"payload\":\"te6cckEBAgEAhwABbQ+KfqUAAADNgG7tIEATEtAIAO87mQKicbKgHIk4pSPP4k5xhHqutqYgAB7USnesDnCcECwbgQMBAJUlk4VhgBD3JEg1TUr75iTijBghOKm/sxNDXUBl7CD6WMut0Q85x4RafwA/Es89DBXoTxuqxVFxyBbzt9Rav2HBUKl7hmkvLuKHLBCW57aK\"}],\n        \"validUntil\":1792481054,\n        \"network\":'-239'}\n      this.testTransaction = JSON.stringify(data)\n    },\n    ton_getAccount() {\n      this.testTransaction = \"这里是同步获取 不再需要点击 <<发送交易>>\"\n      let result =   window.tonProvider.account()\n      if (result) {\n        this.testboc = JSON.stringify(result);\n      } else {\n        this.testboc = 'null'\n      }\n    },\n\n    async tonUniversalLog() {\n      console.log(\"ton 信息: tonProvider  connected:\",window.tonProvider.connected())\n      console.log(\"ton 信息: tonProvider  account:\",JSON.stringify(window.tonProvider.account()))\n      console.log(\"ton 信息: tonProvider  wallet:\",JSON.stringify(window.tonProvider.wallet()))\n    },\n\n    async sendTransactionAlert() {\n      //\n      const response = await fetch(`https://apitest.fireverse.ai/oauth/okx/getNonce?publicAddress=0x0cecb15396825a895ff8da8fc2d2c77a234dccee`);\n      const data = await response.json();\n      console.log(\"请求数据----\",JSON.stringify(data))\n      await this.personal_sign()\n      if (confirm(\"Are you want to sign message?\")) {\n        this.sendTransaction();\n      }\n\n      // window.open(\"https://www.okx.com/download?deeplink=okx%3A%2F%2Fweb3%2Fwallet%2Fconnect\",'_self')\n    },\n\n    async sendTransaction() {\n      if (this.selectedChain.startsWith(\"aptos\")\n          || this.selectedChain.startsWith(\"movement\")\n          || this.selectedChain.startsWith(\"solana\")\n          || this.selectedChain.startsWith(\"sonic\")\n          || this.selectedChain.startsWith(\"cosmos\")) {\n        return\n      }\n      console.log(\"sendTransaction\", window.provider);\n      console.log(\"sendTransaction内容11------\", this.testTransaction);\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      if (this.testTransaction && window.provider) {\n        // eslint-disable-next-line no-undef\n        const sendData = JSON.parse(this.testTransaction);\n        try {\n          console.log(\"sendTransaction-----22method>>\", sendData.method);\n\n          let chainId = \"eip155:1\";\n          if (this.selectedChain) {\n            chainId = this.selectedChain;\n            console.log(\n              \"sendTransaction-----this.selectedChain>>\",\n              this.selectedChain\n            );\n          }\n          console.log(\"windowOpen[click_1]: \", Date.now());\n          if (chainId == \"sui:mainnet\") {\n            const adapter = new SuiAdapter(window.provider);\n            var suiResult = \"invalid result\";\n            if (this.currentSuiMethod == 'sui_getAccount') {\n              let result = adapter.getAccount()\n              if (typeof result == \"string\") {\n                this.testboc = result\n              } else {\n                this.testboc = JSON.stringify(result)\n              }\n            }\n            if (this.currentSuiMethod == \"sui_signTransaction\") {\n              suiResult = await adapter.signTransaction(\n                this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signAndExecuteTransaction\") {\n              suiResult = await adapter.signAndExecuteTransaction(\n                this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signMessage\") {\n              console.log(\"signMessage----\", this.currentSuiTransaction);\n              suiResult = await adapter.signMessage(this.currentSuiTransaction);\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_signPersonalMessage\") {\n              console.log(\n                \"signPersonalMessage----\",\n                this.currentSuiTransaction\n              );\n              suiResult = await adapter.signPersonalMessage(\n                this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_testRpc\") {\n              console.log(\"test rpc----\", this.currentSuiTransaction);\n              console.log(\n                `请求数据发送 rpc ----->> ${JSON.stringify(sendData)}`\n              );\n              const res = await window.provider.request(sendData, chainId);\n              console.log(`请求数据回调 rpc ----->> ${JSON.stringify(result)}`);\n              if (typeof res == \"string\") {\n                this.testboc = res;\n              } else {\n                this.testboc = JSON.stringify(res);\n              }\n            }\n            console.log(\"windowOpen[click_2]: \", Date.now());\n            return;\n          }else if(chainId === \"ton:-239\"){\n            console.log(\n                `请求数据发送 sendTransaction ---ton-->> ${JSON.stringify(sendData)}`\n            );\n            let result =  await window.tonProvider.sendTransaction(sendData)\n            console.log(\n                `请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`\n            );\n            if (typeof result == \"string\") {\n              this.testboc = result;\n            } else {\n              this.testboc = JSON.stringify(result);\n            }\n            return\n          }\n\n          if (chainId == 'btc:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var btcResult = 'invalid result'\n\n            if (this.currentBtcMethod == 'btc_signMessage') {\n              btcResult = await btcAdapter.signMessage(chainId, this.currentBtcTransaction[\"signStr\"])\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_send') {\n              btcResult = await btcAdapter.send(chainId, this.currentBtcTransaction)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signPsbt') {\n              btcResult = await btcAdapter.signPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n\n              this.hexToBase64(btcResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentBtcMethod == 'btc_signPsbts') {\n              btcResult = await btcAdapter.signPsbts(chainId, this.currentBtcTransaction.psbtHexs, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_sendInscription') {\n              btcResult = await btcAdapter.sendInscription(chainId, this.currentBtcTransaction.address, this.currentBtcTransaction.inscriptionId, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signAndPushPsbt') {\n              btcResult = await btcAdapter.signAndPushPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            }else if (this.currentBtcMethod == 'btc_sendBitcoin') {\n              btcResult = await btcAdapter.sendBitcoin(chainId, this.currentBtcTransaction.toAddress, this.currentBtcTransaction.satoshis, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            }else if (this.currentBtcMethod == 'btc_getAccount'){\n              btcResult = btcAdapter.getAccount(chainId)\n              this.testboc = JSON.stringify(btcResult)\n            }\n\n            return\n          }\n\n          if (chainId == 'fractal:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var fractalResult = 'invalid result'\n\n            if (this.currentFractalMethod == 'fractal_signMessage') {\n              fractalResult = await btcAdapter.signMessage(chainId, this.currentFractalTransaction['signStr'])\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_send') {\n              fractalResult = await btcAdapter.send(chainId, this.currentFractalTransaction)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signPsbt') {\n              fractalResult = await btcAdapter.signPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.hexToBase64(fractalResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentFractalMethod == 'fractal_signPsbts') {\n              fractalResult = await btcAdapter.signPsbts(chainId, this.currentFractalTransaction.psbtHexs, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_sendInscription') {\n              fractalResult = await btcAdapter.sendInscription(chainId, this.currentFractalTransaction.address, this.currentFractalTransaction.inscriptionId, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signAndPushPsbt') {\n              fractalResult = await btcAdapter.signAndPushPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            }else if (this.currentFractalMethod == 'fractal_sendBitcoin') {\n              fractalResult = await btcAdapter.sendBitcoin(chainId, this.currentFractalTransaction.toAddress, this.currentFractalTransaction.satoshis, this.currentFractalTransaction.options)\n\n              this.testboc = JSON.stringify(fractalResult)\n            }else if (this.currentFractalMethod == 'fractal_getAccount'){\n              fractalResult = btcAdapter.getAccount(chainId)\n              this.testboc = JSON.stringify(fractalResult)\n            }\n\n            return\n          }\n\n          console.log(`请求数据发送 sendTransaction ----->> ${JSON.stringify(sendData)}`)\n          var result = await window.provider.request(sendData, chainId)\n          console.log(`请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`)\n\n          console.log(\"windowOpen[click_3]: \", Date.now());\n          if (typeof result == \"string\") {\n            this.testboc = result;\n          } else {\n            this.testboc = JSON.stringify(result);\n          }\n          console.log(\"方法数据回调 --this.testboc--\", this.testboc);\n        } catch (error) {\n          console.error(\"方法数据回调失败 --Error--\", error.message);\n\n          if (error.code === OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n            this.testboc = error.message;\n          } else {\n            this.testboc = \"wrong signature！\" + error.message;\n          }\n        }\n      } else {\n        alert(\"Please input transaction data\");\n      }\n    },\n\n    hexToBase64(hexStr) {\n      var bytes = [];\n      for (var i = 0; i < hexStr.length; i += 2) {\n        bytes.push(parseInt(hexStr.substr(i, 2), 16));\n      }\n      const buffer = new Uint8Array(bytes)\n      const blob = new Blob([buffer]);\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = function (e) {\n          var base64Data = e.target.result.split(\",\")[1]\n          resolve(base64Data);\n        };\n        reader.onerror = function (e) {\n          reject(e);\n        };\n        reader.readAsDataURL(blob);\n      });\n    },\n    testBase64UrlSafe(){\n      let datatest = {\"protocolVer\":1,\"topic\":\"8a7a4c3be73802d0ae2587123ade7bb79f27433b9aa3ca589a2208a2089eecfd\",\"clientId\":\"5f1bbf9eac92160affa7ef04d0a710817ddb6d8c22ebbd6263e86f059930b404\",\"requestId\":\"1731383250054\",\"dAppInfo\":{\"url\":\"connect.oker.vip\",\"origin\":\"https://connect.oker.vip\",\"name\":\"univer test dapp\",\"icon\":\"https://avatars.githubusercontent.com/u/37784886\"},\"requests\":[{\"name\":\"requestAccounts\",\"requiredNamespaces\":[{\"namespace\":\"aptos\",\"chains\":[\"aptos:637\"]}],\"optionalNamespaces\":[],\"connectRequestMethods\":[{\"chainId\":\"aptos:637\",\"method\":\"aptos_signMessage\",\"params\":{\"data\":{\"address\":true,\"application\":true,\"chainId\":true,\"message\":\"123 中文测试!\",\"nonce\":\"1234\"},\"applicationUrl\":\"https://connect.oker.vip\",\"prefix\":\"APTOS\",\"aptosChainId\":\"1\"}}]}],\"redirect\":\"none\"}\n      let json = JSON.stringify(datatest)\n      const utf8Array = new TextEncoder().encode(json);\n      let binary = '';\n      utf8Array.forEach(byte => {\n        binary += String.fromCharCode(byte);\n      });\n\n      let firstStr =  btoa(binary)\n      console.log(\"字符串编码1>>>>\",firstStr)\n      firstStr = firstStr.replace(/\\+/g, '-')  // 替换 '+'\n      console.log(\"字符串编码2>>>>\",firstStr)\n      firstStr = firstStr.replace(/\\//g, '_')  // 替换 '/'\n      console.log(\"字符串编码3>>>>\",firstStr)\n      firstStr = firstStr.replace(/=+$/, '');  // 移除 '=';\n      console.log(\"字符串编码4>>>>\",firstStr)\n\n      let showUrl =  getUniversalLink(getAppWalletDeepLink(firstStr))\n      console.log(\"字符串编码5>>>>\",showUrl)\n      this.qrValue = showUrl;\n      this.showModal = true;\n    },\n\n\n    async testTonSdk() {\n      // 1. connect\n      //  create sub providers for each namespace/chain\n      let nameSpacesChains = [];\n      let optSpaceChains = [];\n\n      let solanaChains = [\n        \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n        \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n        \"svm:70000062\",\n      ];\n      let hasEip155, hasSolana, hasSui, hasBtc, hasAptos, hasTon, hasCosmos, hasTron = false\n\n      let suiChains = [\n        \"sui:mainnet\",\n      ];\n\n      let btcChains = [\n        \"btc:mainnet\",\n        \"fractal:mainnet\"\n      ];\n\n      const chains = Object.entries(this.availableChains)\n          .filter((chain) => chain[1].checked)\n          .map((chain) => chain[0]);\n      console.log(`chains  ===> ${chains.values()}`)\n      chains.forEach(function (chainId) {\n        console.log(`chains.forEach chainId  ===> ${chainId}`)\n\n        if (solanaChains.includes(chainId)) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"ton\")) {\n          nameSpacesChains.push(chainId)\n          hasTon = true\n          return\n        }\n        if (typeof chainId == 'string' && (chainId.startsWith(\"aptos\") || chainId.startsWith(\"movement\"))) {\n          nameSpacesChains.push(chainId)\n          hasAptos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId)\n          hasSolana = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"cosmos\")) {\n          nameSpacesChains.push(chainId)\n          hasCosmos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"tron\")) {\n          nameSpacesChains.push(chainId)\n          hasTron = true\n          return\n        }\n\n        if (suiChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`);\n          nameSpacesChains.push(chainId);\n          hasSui = true;\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`)\n          nameSpacesChains.push(chainId)\n          hasBtc = true\n          return\n        }\n\n        hasEip155 = true\n        nameSpacesChains.push(`eip155:${chainId}`)\n      })\n\n\n      optionChains.forEach(function (chainId) {\n        if (solanaChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n        if (typeof chainId == \"string\" && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (suiChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          optSpaceChains.push(chainId)\n          return\n        }\n\n        optSpaceChains.push(`eip155:${chainId}`)\n      })\n\n      console.log(`namespaceChains  ===> ${JSON.stringify(nameSpacesChains)}`);\n      var connectData = {};\n      if (nameSpacesChains && nameSpacesChains.length > 0) {\n        var requireData = {};\n\n        if (hasEip155) {\n          requireData.eip155 = {\n            chains: nameSpacesChains.filter((item) =>\n              item.startsWith(\"eip155\")\n            ),\n            defaultChain: nameSpacesChains.filter((item) =>\n              item.startsWith(\"eip155\")\n            )[0],\n          };\n        }\n        if (hasSolana) {\n          requireData.solana = {\n            chains: nameSpacesChains.filter(\n              (item) =>\n                item.startsWith(\"solana\") ||\n                item.startsWith(\"sonic\") ||\n                item.startsWith(\"svm\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n              (item) =>\n                item.startsWith(\"solana\") ||\n                item.startsWith(\"sonic\") ||\n                item.startsWith(\"svm\")\n            )[0],\n          };\n        }\n\n        if (hasCosmos) {\n          requireData.cosmos = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            )[0],\n          }\n        }\n        if (hasTron) {\n          requireData.tron = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            )[0],\n          }\n        }\n        if (hasTon) {\n\n          //\n          let tonParams = {\n            ton_addr:{\n              name: 'ton_addr',\n            }\n          };\n          if (this.tonProofValue){\n            tonParams = {\n              ton_addr:{\n                name: 'ton_addr',\n              },\n              ton_proof:{\n                name: 'ton_proof',\n                payload: this.tonProofValue,\n              }\n            };\n          }\n\n\n          requireData.ton = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"ton\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"ton\"))[0],\n            params:tonParams\n          };\n        }\n\n        if (hasSui) {\n          requireData.sui = {\n            chains: nameSpacesChains.filter((item) => item.startsWith(\"sui\")),\n            defaultChain: nameSpacesChains.filter((item) =>\n              item.startsWith(\"sui\")\n            )[0],\n            rpcMap: {\n              \"sui:mainnet\": \"https://www.okx.com/fullnode/sui/discover/rpc\"\n            }\n          };\n        }\n        if (hasAptos) {\n          requireData.aptos = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\"))[0]\n          }\n        }\n\n        if (hasBtc) {\n          let btcChains = nameSpacesChains.filter(item => item.startsWith(\"btc\") || item.startsWith(\"fractal\"))\n          requireData.btc = {\n            chains: btcChains,\n            defaultChain: btcChains[0]\n          }\n        }\n        console.log(`requireData  ===> ${JSON.stringify(requireData)}`)\n        connectData['namespaces'] = requireData;\n        console.log(JSON.stringify(connectData))\n      }\n\n      if (optSpaceChains && optSpaceChains.length > 0) {\n        const optData = {};\n\n        const eip155Chains = optSpaceChains.filter((item) => item.startsWith(\"eip155\"));\n        if (eip155Chains.length > 0) {\n          optData[\"eip155\"] = {\n            chains: eip155Chains,\n            defaultChain: eip155Chains[0],\n          };\n        }\n\n        const solanaChains = optSpaceChains.filter((item) => item.startsWith(\"solana\"));\n        if (solanaChains.length > 0) {\n          optData[\"solana\"] = {\n            chains: solanaChains,\n            defaultChain: solanaChains[0],\n          };\n        }\n\n        connectData[\"optionalNamespaces\"] = optData;\n      }\n\n      if (nameSpacesChains.length === 0 && optSpaceChains.length === 0) {\n        //未选择链\n        alert(\"Please select a chain from above to continue\");\n        return;\n      }\n      console.log(\"=====>connectData \");\n      console.log(connectData);\n\n      var connectMethod;\n      let signMethods = this.getCurrentSelectedMethodData();\n      if (window.provider instanceof OKXUniversalConnectUI) {\n        if (signMethods && signMethods.length>0){\n          connectMethod = window.provider.openModalAndSign(connectData,JSON.parse(JSON.stringify(signMethods)));\n        }else {\n          connectMethod = window.provider.openModal(connectData);\n        }\n      } else {\n        if (this.universalToTG){\n          connectData.sessionConfig = {\n            useMini:true,\n            openUniversalUrl:true,\n            tmaReturnUrl:'back'\n          }\n        }else{\n          connectData.sessionConfig = {\n            redirect: selectedReturnStrategy\n          }\n        }\n        if (signMethods && signMethods.length>0){\n          connectMethod = window.provider.connectAndSign(connectData,JSON.parse(JSON.stringify(signMethods)));\n        }else {\n          connectMethod = window.provider.connect(connectData);\n        }\n      }\n\n      await connectMethod\n        .then((result) => {\n          // 2. set defaul chain\n          this.walletAddress = \"connected\";\n          if (this.isPC()) {\n            this.showModal = false;\n          }\n          if (result){\n            this.testboc = JSON.stringify(result)\n          }\n\n          if (window.provider.session && window.provider.session.namespaces){\n            let ton = window.provider.session.namespaces[\"ton\"];\n          console.log(\"是否包含ton\",ton)\n            if (ton){\n              this.tonUniversalLog()\n            }\n          }\n\n\n\n        })\n        .catch((error) => {\n          if (error.message){\n            alert(error.message)\n          }\n\n          console.error(\"发生了错误：\", error);\n        });\n    },\n\n    getCurrentSelectedMethodData(){// 连接签名\n      var methodList = [];\n      this.selectedMethod.forEach(method =>{\n        switch (method) {\n          case \"wallet_addEthereumChain(ETH)\":\n            methodList.push({\n              method: \"wallet_addEthereumChain\",\n              chainId:\"eip155:1\",\n              params: {\n                blockExplorerUrls: [\"https://explorer.fuse.io\"],\n                chainId: \"0x7a\",\n                chainName: \"Fuse\",\n                nativeCurrency: { name: \"Fuse\", symbol: \"FUSE\", decimals: 18 },\n                rpcUrls: [\"https://rpc.fuse.io\"],\n              },\n            })\n            break;\n          case \"personal_sign(ETH)\":\n            methodList.push(\n              {\n                method: \"personal_sign\",\n                chainId: \"eip155:1\",\n                params: [\n                  \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n                ],\n              });\n            break;\n          case \"solana_signMessage(Sol mainnet)\":\n            methodList.push(\n              {\n                \"chainId\": \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n                \"method\": \"solana_signMessage\",\n                \"params\": {\n                  \"message\": \"Hello Solana\",\n                }\n              }\n            );\n            break;\n          case \"sui_signMessage(Sui mainnet)\":\n          case \"sui_signPersonalMessage(Sui mainnet)\": {\n            let suiData = [\n              76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n              109, 111, 118, 101,\n            ];\n            let uint8Array = new Uint8Array(suiData);\n            let currentMethod = \"sui_signMessage\";\n            this.currentSuiTransaction = {\n              message:uint8Array\n            }\n\n            if(method.startsWith(\"sui_signPersonalMessage\")){\n              currentMethod = \"sui_signPersonalMessage\";\n            }\n            methodList.push(\n                {\n                  method: currentMethod,\n                  chainId: \"sui:mainnet\",\n                  params: {\n                    message: uint8Array,\n                  }\n                }\n            );\n            break;\n          }\n          case \"btc_signMessage(BTC)\":\n            methodList.push(\n              {\n                method: \"btc_signMessage\",\n                chainId: \"btc:mainnet\",\n                params: {\n                  message: \"Welcome to BTC\"\n                }\n              }\n            )\n            break;\n          case \"aptos_signMessage(aptos mainnet)\":\n            methodList.push(\n              {\n                \"chainId\": \"aptos:mainnet\",\n                \"method\": \"aptos_signMessage\",\n                \"params\": {\n                  address: true,\n                  application: true,\n                  chainId: true,\n                  message: \"Hello Aptos\",\n                  nonce: \"1234\"\n                }\n              }\n            )\n            break;\n          case \"cosmos_signArbitrary(cosmoshub)\":\n            methodList.push(\n                {\n                  \"chainId\": \"cosmos:cosmoshub-4\",\n                  \"method\": \"cosmos_signArbitrary\",\n                  \"params\": {\n                    message: \"test cosmos\"\n                  }\n                }\n            )\n\n            break;\n          case \"test_noSupport_eth(ETH)\":\n            methodList.push(\n                {\n                  chainId: \"eip155:1\",\n                  method: \"test_noSupport_eth\",\n                  params: {\n                    message: \"test hello\",\n                  }\n                }\n            )\n            break;\n          case \"sync_all_addresses\":\n            methodList.push(\n                {\n                  method: \"sync_all_addresses\",\n                });\n            break;\n          case \"tron_signMessage\":\n            methodList.push(\n                {\n                  chainId:\"tron:mainnet\",\n                  method: \"tron_signMessage\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n          case \"tron_signMessageV2\":\n            methodList.push(\n                {\n                  chainId:\"tron:mainnet\",\n                  method: \"tron_signMessageV2\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n            //\n          default:\n\n            break;\n        }\n      })\n      this.selectedMethodData = methodList\n      return methodList\n\n    },\n\n\n    closeModal() {\n      this.showModal = false;\n    },\n\n    isPC() {\n      const userAgentInfo = navigator.userAgent;\n      console.log(\"current device ua is ===>\", userAgentInfo);\n\n      const Agents = [\n        \"Android\",\n        \"iPhone\",\n        \"SymbianOS\",\n        \"Windows Phone\",\n        \"iPad\",\n        \"iPod\",\n      ];\n      let flag = true;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = false;\n          break;\n        }\n      }\n      return flag;\n    },\n    isSafariOrChrome() {\n      const userAgentInfo = navigator.userAgent;\n      const Agents = [\"Safari\", \"Chrome\"];\n      let flag = false;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = true;\n          break;\n        }\n      }\n      return flag;\n    },\n\n    /// solana\n    async sol_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      let data = {\n        method: \"solana_signMessage\",\n        params: {\n          message: \"Hello Solana\",\n          pubkey: \"\",\n        },\n      };\n      this.testTransaction = JSON.stringify(data);\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let message = await provider.signMessage(\n          \"Hello Solana\",\n          this.selectedChain\n      );\n      console.log(\"solana_signMessage Result:\",JSON.stringify(message))\n      const result1 = nacl.sign.detached.verify(\n          new TextEncoder().encode(\"Hello Solana\"),\n          message.signature,\n          new PublicKey(message.publicKey).toBytes()\n      );\n      console.log(result1)\n\n      if (typeof message == \"string\") {\n        this.testboc = result1;\n      } else {\n        this.testboc = result1;\n      }\n    },\n\n    async aptos_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      let data = {\n        address: true,\n        application: true,\n        chainId: true,\n        message: \"Hello Aptos\",\n        nonce: \"1234\"\n      }\n\n      let provider = new OKXAptosProvider(window.provider)\n      let message = await provider.signMessage(data, this.selectedChain)\n      this.testTransaction = JSON.stringify(data)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n          functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async move_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async move_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n          functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n        },\n      });\n\n      // let data = {\n      //   \"arguments\": [\"100000\",[\"0\",\"0\",\"10533\"],[\"10\",\"5\",\"5\"],[\"false\",\"false\",\"true\"]],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x3\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\",\"0x73eb84966be67e4697fc5ae75173ca6c35089e802650f75422ab49a8729704ec::coin::DooDoo\",\"0x53a30a6e5936c0a4c5140daed34de39d17ca7fcae08f947c02e979cef98a3719::coin::LSD\",\"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::CurveV1\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x54cb0bb2c18564b86e34539b9f89cfe1186e39d89fce54e1cd007b8e61673a85::bin_steps::X80\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async sol_signVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(\n        provider.getAccount(\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\").address\n      );\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n         recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signTransaction(\n        transaction,\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAndSendVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n        transaction,\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllVersionedTransactions() {\n      let provider = new OKXSolanaProvider(window.provider);\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n        [transaction],\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signTransaction() {\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n         recentBlockhash: blockhash,\n      }).add(\n        SystemProgram.transfer({\n          fromPubkey: new PublicKey(provider.getAccount().address),\n          toPubkey: new PublicKey(provider.getAccount().address),\n          lamports: 1000,\n        })\n      );\n\n      this.testTransaction = safeJsonStringify(transaction)\n      let result = await provider.signTransaction(\n        transaction,\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllTransactions() {\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n        SystemProgram.transfer({\n          fromPubkey: new PublicKey(provider.getAccount().address),\n          toPubkey: new PublicKey(provider.getAccount().address),\n          lamports: \"100\",\n        })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n        [transaction],\n        this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    getSolConnect() {\n      let rpc = \"https://www.okx.com/fullnode/sol/discover/rpc\"\n      if (this.selectedChain === \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\") {\n        rpc = \"https://www.okx.com//fullnode/sol/discover/rpc\"\n      } else if (this.selectedChain === \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\"){\n        rpc = \"https://www.okx.com/fullnode/soltestnet/discover/rpc\"\n      } else if (this.selectedChain === \"svm:70000062\") {\n        rpc = \"https://www.okx.com/fullnode/sonic/testnet/discover/rpc\"\n      }\n      return rpc\n    },\n\n    async sol_signAndSendTransaction() {\n\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n        SystemProgram.transfer({\n          fromPubkey: new PublicKey(provider.getAccount().address),\n          toPubkey: new PublicKey(provider.getAccount().address),\n          lamports: \"100\",\n        })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n        transaction,\n        this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async cosmos_signArbitrary() {\n      let provider = new OKXCosmosProvider(window.provider)\n      let message = await provider.signArbitrary(this.selectedChain, provider.getAccount(this.selectedChain).address, \"test cosmos\")\n      if (typeof message == \"string\") {\n        this.testboc = message;\n      } else {\n        let isValid =  await this.cosmos_verifySignArbitrary(provider.getAccount(this.selectedChain).address,\"test cosmos\",message.signature, message.pub_key.value)\n        console.log(\"verify\",isValid)\n        this.testboc = \"verify:\" + isValid + JSON.stringify(message);\n      }\n    },\n\n    async cosmos_verifySignArbitrary(signer, data, signature, pubkey) {\n      try {\n        console.log(\"cosmos_verifySignArbitrary signer:\",signer)\n        console.log(\"cosmos_verifySignArbitrary data:\",JSON.stringify(data))\n        console.log(\"cosmos_verifySignArbitrary signature:\",signature)\n        console.log(\"cosmos_verifySignArbitrary pubkey:\",pubkey)\n\n        // 将bech32地址转换为公钥\n        const {prefix: prefixStr} = fromBech32(signer)\n\n        const signatureBuffer = Buffer.from(signature, 'base64');\n\n        const uint8Signature = new Uint8Array(signatureBuffer); // Convert the buffer to an Uint8Array\n\n        const pubKeyValueBuffer = Buffer.from(pubkey, 'base64'); // Decode the base64 encoded value\n\n        const pubKeyUint8Array = new Uint8Array(pubKeyValueBuffer); // Convert the buffer to an Uint8Array\n\n        // 验证签名\n        return await verifyADR36Amino(\n            prefixStr,\n            signer,\n            data,\n            pubKeyUint8Array,\n            uint8Signature\n        )\n      } catch (err) {\n        console.error('Verification failed:', err)\n        return false\n      }\n    },\n\n    async cosmos_signAmino(){\n      let provider = new OKXCosmosProvider(window.provider)\n      // const rpcUrl = 'https://osmosis-rpc.publicnode.com:443';\n      // const client = await StargateClient.connect(rpcUrl);\n      // const height = await client.getHeight();\n      // let address = provider.getAccount(this.selectedChain).address\n      // const sequence = await client.getSequence(address)\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      // let signDoc = makeSignDoc(\n      //     transaction.msgs,\n      //     transaction.fee,\n      //     this.selectedChain.split(\":\")[1],\n      //     transaction.memo,\n      //     transaction.accountNumber,\n      //     transaction.sequence,\n      // )\n      let signDoc = {\n        \"chain_id\": \"osmosis-1\",\n        \"account_number\": \"630104\",\n        \"sequence\": \"480\",\n        \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]},\n        \"msgs\": [{\n          \"type\": \"osmosis/poolmanager/swap-exact-amount-in\",\n          \"value\": {\n            \"sender\": \"osmo1u6lts9ng4etxj0zdaxsada6zgl8dudpgelmuyu\",\n            \"routes\": [{\n              \"pool_id\": \"1096\",\n              \"token_out_denom\": \"ibc/987C17B11ABC2B20019178ACE62929FE9840202CE79498E29FE8E5CB02B7C0A4\"\n            }, {\n              \"pool_id\": \"611\",\n              \"token_out_denom\": \"ibc/27394FB092D2ECCD56123C74F36E4C1F926001CEADA9CA97EA622B25F41E5EB2\"\n            }],\n            \"token_in\": {\"denom\": \"uosmo\", \"amount\": \"100\"},\n            \"token_out_min_amount\": \"8\"\n          }\n        }],\n        \"memo\": \"FE\",\n        \"timeout_height\": \"23603788\",\n        \"signOptions\": {\n          \"useOneClickTrading\": false,\n          \"preferNoSetFee\": true,\n          \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]}\n        }\n      }\n\n\n\n\n\n\n\n      // let signOption = {\n      //   memo: true, // optional\n      //   fee: true, // optional\n      //   gasRate: {\n      //     // optional\n      //     average: \"0.2\",\n      //     low: \"0.02\",\n      //     tiny: \"0.002\",\n      //   },\n      // }\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signAmino(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, signDoc)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    messageToBuffer(message) {\n      var buffer = Buffer.from([]);\n      try {\n        if (typeof message === \"string\") {\n          buffer = Buffer.from(message.replace(\"0x\", \"\"), \"hex\");\n        } else {\n          buffer = Buffer.from(message);\n        }\n      } catch (err) {\n        console.log(`messageToBuffer error: ${err}`);\n      }\n      return buffer;\n    },\n\n\n\n    async cosmos_signDirect() {\n      let provider = new OKXCosmosProvider(window.provider)\n\n      let signDoc = {\n        \"bodyBytes\": this.messageToBuffer(\"0x0ac1010a292f6962632e6170706c69636174696f6e732e7472616e736665722e76312e4d73675472616e736665721293010a087472616e7366657212096368616e6e656c2d301a0d0a05756f736d6f120431303030222b6f736d6f3175366c7473396e67346574786a307a64617873616461367a676c386475647067656c6d7579752a2d636f736d6f733175366c7473396e67346574786a307a64617873616461367a676c386475647067337967766a773207080410ebe3f90a3880b0bcafd18cec8218\"),\n        \"authInfoBytes\": this.messageToBuffer(\"0x0a510a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a2102446e19e94ac0e83ea896d2712507577eb39fbdd2d6ae9f0fc0b9759f1fbaba9012040a02080118e00312140a0e0a05756f736d6f1205323530303010859a11\"),\n        \"chainId\": \"osmosis-1\",\n        \"accountNumber\": \"630104\",\n      }\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signDirect(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, transaction)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    sui_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentSuiTransaction = params\n      this.currentSuiMethod = flag\n    },\n\n    btc_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentBtcTransaction = params\n      this.currentBtcMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n\n    fractal_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentFractalTransaction = params\n      this.currentFractalMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n    tron_getTransactionResult(result) {\n      if (typeof result == \"string\") {\n        this.testboc = result\n      } else {\n        this.testboc = JSON.stringify(result)\n      }\n    },\n    tron_generateTransactionParams(params){\n      if (typeof params == \"string\") {\n        this.testTransaction = params\n      } else {\n        this.testTransaction = JSON.stringify(params)\n      }\n    },\n    handleModalsSelect(modals) {\n      selectedModals = modals;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: modals.length === 3 ? \"all\" : modals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n\n    handleReturnStrategySelect(returnStrategy) {\n      selectedReturnStrategy = returnStrategy === \"deeplink\" ? this.deeplink : returnStrategy;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      } else {\n        if (window.provider.sessionConfig) {\n          window.provider.sessionConfig.redirect = selectedReturnStrategy;\n        } else {\n          window.provider.sessionConfig = {\n            redirect: selectedReturnStrategy\n          };\n        }\n      }\n    },\n\n    handleReturnStrategyDeeplink(deeplink) {\n      console.log('handleReturnStrategyDeeplink', deeplink)\n      selectedReturnStrategy = deeplink;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: deeplink,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      } else {\n        if (window.provider.sessionConfig) {\n          window.provider.sessionConfig.redirect = deeplink;\n        } else {\n          window.provider.sessionConfig = {\n            redirect: deeplink\n          };\n        }\n      }\n    },\n\n    handleLanguageSelect(language) {\n      selectedLanguage = language;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: language,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n    handleConnectMethodsSelect() {\n      console.log(\"当前的方法 this.selectedMethod>>>>\",this.selectedMethod);\n    },\n\n    eth_verifyMessage(message, signature,ethAddress) {\n      console.log(\"eth_verifyMessage   message>>>\",message)\n      console.log(\"eth_verifyMessage   signature>>>\",signature)\n      console.log(\"eth_verifyMessage   ethAddress>>>\",ethAddress)\n      if (!message || !signature){\n        return \"\"\n      }\n      let originalMessage = message\n      if (message.startsWith(\"0x\")){\n        originalMessage = originalMessage.replace(/^0x/, '');\n        let str = '';\n        for (let i = 0; i < originalMessage.length; i += 2) {\n          const byte = originalMessage.slice(i, i + 2);\n          str += String.fromCharCode(parseInt(byte, 16));\n        }\n        originalMessage = str\n      }\n      console.log(\"eth_verifyMessage   originalMessage>>>\",originalMessage)\n\n      // const messageHash = ethers.utils.hashMessage(originalMessage);\n      const recoveredAddress = ethers.utils.verifyMessage(originalMessage, signature);\n      console.log(\"eth_verifyMessage recoveredAddress:\", recoveredAddress);\n      return recoveredAddress.toLowerCase() === ethAddress.toLowerCase();\n    },\n\n    async verifyMessage(list){ //连接验签\n\n        if (window.provider && window.provider.session && list && list.length>0){\n          let verifyList = {}\n          for (let methodItem of list){\n            if (\"result\" in methodItem && \"method\" in methodItem){\n              let requestItme = this.selectedMethodData.filter(item => item.method === methodItem.method)[0];\n              console.log(\"验证签名 请求>>>:\", JSON.stringify(requestItme));\n              console.log(\"验证签名 结果>>>:\", JSON.stringify(methodItem));\n              if (methodItem.method === \"personal_sign\"){\n                let ethAddress = await window.provider.request({ method: \"eth_requestAccounts\" },methodItem.chainId)\n                ethAddress = ethAddress[0];\n                console.log(\"验证eth 钱包地址>>>:\", ethAddress);\n                let ethMessage = requestItme.params[0]\n                console.log(\"验证eth 签名消息体>>:\", JSON.stringify(ethMessage));\n                verifyList[methodItem.method] = this.eth_verifyMessage(ethMessage,methodItem.result,ethAddress)\n              }else if(methodItem.method === \"solana_signMessage\"){\n                let solanaMessage = methodItem.result\n                if (\"signature\" in solanaMessage && \"publicKey\" in solanaMessage){\n                  const verifySol = nacl.sign.detached.verify(\n                      new TextEncoder().encode(\"Hello Solana\"),\n                      solanaMessage.signature,\n                      new PublicKey(solanaMessage.publicKey).toBytes()\n                  );\n                  verifyList[methodItem.method] = verifySol\n                }else {\n                  verifyList[methodItem.method] = false\n                }\n              }else if(methodItem.method === \"sui_signPersonalMessage\" || methodItem.method === \"sui_signMessage\"){\n                let suiResult =  this.sui_verifySignature(methodItem.result);\n                  verifyList[methodItem.method] = (await suiResult).result\n              }else if(methodItem.method === \"btc_signMessage\"){\n\n                verifyList[methodItem.method] = \"Not verified yet\"\n\n              }else if(methodItem.method === \"aptos_signMessage\"){\n                let aptosMessage = methodItem.result\n                let aptosProvider = new OKXAptosProvider(window.provider)\n                let  aptosPublicKey  = aptosProvider.getAccount(methodItem.chainId)?.publicKey\n\n                let signStr = aptosMessage.signature\n                if (signStr.startsWith(\"0x\")) {\n                  signStr = signStr.slice(2, signStr.length)\n                }\n\n                console.log(\"aptos_signMessage aptosPublicKey And signStr\",aptosPublicKey,signStr)\n                verifyList[methodItem.method] = nacl.sign.detached.verify(\n                    Buffer.from(aptosMessage.fullMessage),\n                    Buffer.from(signStr, 'hex'),\n                    Buffer.from(aptosPublicKey, 'hex'),\n                );\n              }else if(methodItem.method === \"cosmos_signArbitrary\"){\n                let cosmosProvider = new OKXCosmosProvider(window.provider)\n                let cosmosAddress = cosmosProvider.getAccount(methodItem.chainId)?.address\n                let cosmosMessage = methodItem.result\n                let isValid =  await this.cosmos_verifySignArbitrary(cosmosAddress,\"test cosmos\",cosmosMessage.signature, cosmosMessage.pub_key.value)\n                verifyList[methodItem.method] = isValid\n\n              }else if (methodItem.method === \"tron_signMessage\") {\n                let tronMessage = methodItem.result\n                let tronWeb = new TronWeb({\n                  \"fullHost\": 'https://api.trongrid.io',\n                  \"headers\": {},\n                  \"privateKey\": ''\n                })\n                let provider = new OKXTronProvider(window.provider)\n                verifyList[methodItem.method] = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), tronMessage, provider.getAccount(\"tron:mainnet\").address)\n              } else if (methodItem.method === \"tron_signMessageV2\") {\n                let tronMessage = methodItem.result\n                let tronWeb = new TronWeb({\n                  \"fullHost\": 'https://api.trongrid.io',\n                  \"headers\": {},\n                  \"privateKey\": ''\n                })\n                const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", tronMessage);\n                let provider = new OKXTronProvider(window.provider)\n\n                verifyList[methodItem.method] = base58Address === provider.getAccount(\"tron:mainnet\").address\n              }\n              else {\n                verifyList[methodItem.method] = \"Not verified yet\"\n\n              }\n            }else if(\"method\" in methodItem && \"error\" in methodItem) {\n              verifyList[methodItem.method] = methodItem.error\n            }\n\n          }\n\n          console.log(\"验证签名 最后的结果>>>:\", JSON.stringify(verifyList));\n          this.testTransaction = \"签名验证结果如下: \\n\" + JSON.stringify(verifyList)\n        }else {\n          console.log(\"验证签名 window.provider.session.connectMethodsReply 为空:\");\n\n        }\n\n    },\n\n    handleThemeSelect(theme) {\n      selectedTheme = theme;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: theme,\n          },\n        };\n      }\n    },\n\n    async sui_verifySignature(signatureResult) {\n      let resultObj = signatureResult\n      let result = false\n      let msg = ''\n      try {\n        /// 获取当前account\n        const adapter = new SuiAdapter(window.provider);\n        let account = adapter.getAccount()\n        console.log(`Account中获取的address：${account.address}`)\n\n        /// 验证签名\n        let pubKey = await verifyPersonalMessageSignature(this.currentSuiTransaction.message, resultObj.signature)\n        let address = pubKey.toSuiAddress()\n        console.log(`验签结果计算得到address：${address}`)\n\n        /// 对比pubKey\n        console.log(`account pubkey: ${account.publicKey}`,)\n        console.log(`result pubkey: ${pubKey.toBase64()}`)\n        result = (account.address === address) && (account.publicKey === pubKey.toBase64())\n\n        msg = `address verify: ${account.address === address}\\npublicKey verify: ${account.publicKey === pubKey.toBase64()}`\n        console.log(\"signature verify success: \", pubKey)\n      } catch (e) {\n        console.log(\"signature verify failed: \", e)\n      }\n      return {\n        result,\n        msg\n      }\n    },\n\n\n    handleRedirectSelect(input) {\n      this.redirect = input;\n    },\n\n    handleRedirectDeeplink(input) {\n      this.redirectDeeplink = input;\n    },\n\n    addRedirectParam() {\n      if (this.testTransaction) {\n        const newTransaction = JSON.parse(this.testTransaction);\n        newTransaction.redirect = this.redirect === 'deeplink' ? this.redirectDeeplink : this.redirect;\n        this.testTransaction = JSON.stringify(newTransaction);\n      }\n    },\n\n    canChainAddRedirectParam() {\n      return chainsThatCanAddRedirectParam.some((c) => this.selectedChain.startsWith(c));\n    }\n  },\n  created() {\n    // for (const eventName of Object.values(OKX_TON_CONNECTION_AND_TRANSACTION_EVENT)) {\n    //   console.log(eventName);\n    //   window.addEventListener(eventName, (event) => {\n    //     console.log(eventName,event.detail)\n    //     this.currentStatus = eventName\n    //   });\n    // }\n  },\n\n  mounted() {\n\n    var scriptTag = document.createElement(\"script\");\n    scriptTag.src = \"https://telegram.org/js/telegram-web-app.js\";\n    scriptTag.id = \"tgsdk\";\n    document.getElementsByTagName('head')[0].appendChild(scriptTag);\n\n    this.connectReady = true;\n    document.title = \"OKX Connect\";\n    this.initBtnClicked()\n  },\n};\n</script>\n","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_getAccount()\">getAccount(BTC)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signMessage()\">signMessage(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_send()\">send(BTC)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendBitcoin()\">sendBitcoin(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signPsbt_up()\">signPsbt(上架NFT)</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"btc_signAndPushPsbt_up()\">signAndPushPsbt(上架NFT)</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在OKX App选择要上架的Btc NFT，点击【上架】\n        </li>\n        <li>\n          2. 弹出签名面板，点开高级选项，查看\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出上架流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendInscription()\">sendInscription(BTC)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Btc NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount\n    }\n  },\n  methods: {\n\n    btc_getAccount() {\n      this.$emit('generateTransactionParams', {}, \"btc_getAccount\")\n    },\n\n    btc_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to BTC\"\n      };\n      this.$emit('generateTransactionParams', params, \"btc_signMessage\")\n    },\n\n    btc_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"btc_send\")\n    },\n\n    btc_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"btc_sendBitcoin\")\n    },\n\n    btc_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"btc_signPsbt\")\n    },\n\n    btc_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"btc_signAndPushPsbt\")\n    },\n\n    btc_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"btc_sendInscription\")\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./BtcTransactionPanel.vue?vue&type=template&id=376d03bc&scoped=true\"\nimport script from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./BtcTransactionPanel.vue?vue&type=style&index=0&id=376d03bc&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-376d03bc\"]])\n\nexport default __exports__","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_getAccount()\">getAccount(Fractal)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signMessage()\">signMessage(Fractal)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_send()\">send(Fractal)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_sendBitcoin()\">sendBitcoin(Fractal)</el-button>\n\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signPsbt_up()\">signPsbt(上架NFT)</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_signAndPushPsbt_up()\">signAndPushPsbt(上架NFT)</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在OKX App选择要上架的Fractal NFT，点击【上架】\n        </li>\n        <li>\n          2. 弹出签名面板，点开高级选项，查看\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出上架流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_sendInscription()\">sendInscription(Fractal)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Fractal NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount\n    }\n  },\n  methods: {\n\n    fractal_getAccount() {\n      this.$emit('generateTransactionParams', {}, \"fractal_getAccount\")\n    },\n\n    fractal_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to UniSat!\\n\\nClick to sign in and accept the UniSat Terms of Service (https://unisat.io/terms-of-service.html) and Privacy Policy (https://unisat.io/privacy-policy.html).\\n    \\nThis request will not trigger a blockchain transaction.\\n    \\nYour authentication status will reset after 24 hours.\\n    \\nWallet address:\\nbc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\\n    \\nNonce:\\n162d70e3-8c21-4cfd-9a22-9bf0a4b7be51\\n\"\n      };\n      this.$emit('generateTransactionParams', params, \"fractal_signMessage\")\n    },\n\n    fractal_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_send\")\n    },\n\n    fractal_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_sendBitcoin\")\n    },\n\n    fractal_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"fractal_signPsbt\")\n    },\n\n    fractal_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"fractal_signAndPushPsbt\")\n    },\n\n    fractal_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"fractal_sendInscription\")\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./FractalTransactionPanel.vue?vue&type=template&id=fb2f7e38&scoped=true\"\nimport script from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./FractalTransactionPanel.vue?vue&type=style&index=0&id=fb2f7e38&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-fb2f7e38\"]])\n\nexport default __exports__","<script>\n\nimport {getFullnodeUrl, SuiClient} from \"@mysten/sui/client\";\nimport {Transaction as SuiTransaction} from '@mysten/sui/transactions';\n\nexport default {\n  name: \"SuiTransactionPanel\",\n  methods: {\n    sui_getAccount() {\n      this.$emit('generateTransactionParams', '', \"sui_getAccount\")\n    },\n\n    //对单个交易签名（不发送)\n    async sui_signMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signMessage\")\n    },\n\n    async sui_signPersonalMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signPersonalMessage\")\n    },\n\n    sui_signTransaction2() {\n      // 定义要转移的金额和目标地址\n      const amount = 109; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    async sui_requestRpc() {\n      let provider = window.provider;\n      provider.setDefaultChain(\n          `sui:mainnet`,\n          `https://fullnode.mainnet.sui.io:443`\n      );\n      var data = {\n        method: \"suix_getBalance\",\n        params: [\n          \"0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae\",\n          \"0x168da5bf1f48dafc111b0a488fa454aca95e0b5e::usdc::USDC\",\n        ],\n      };\n\n      this.$emit(\"generateTransactionParams\", data, \"sui_testRpc\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 102; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signAndExecuteTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n      this.$emit(\"generateTransactionParams\", input, \"sui_signAndExecuteTransaction\")\n    },\n\n    /// generate txBytes and txSerialize\n    async generateTsBytesAndSerizlize(input) {\n      /// txBytes and txSerialize may be constructed in advance by the dapp side\n      let resultTuple = [\"\", \"\"];\n      if (\n          \"txBytes\" in input &&\n          input.txBytes.length > 0 &&\n          \"txSerialize\" in input &&\n          input.txSerialize.length > 0\n      ) {\n        resultTuple = [input.txBytes, input.txSerialize];\n      }\n\n      /// Otherwise, a transactionBlock parameter is required.\n      if (!(\"transactionBlock\" in input)) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      // if (this.walletAddress != \"connected\") {\n      //   alert(\"请先连接钱包\");\n      //   return new Promise((resolve) => {\n      //     resolve(resultTuple);\n      //   });\n      // }\n\n      let senderAccounts = window.provider.requestAccountsWithNamespace(\"sui\");\n      if (senderAccounts.length == 0) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      try {\n        let rpcUrl = getFullnodeUrl(\"mainnet\");\n        rpcUrl = \"https://www.okx.com/fullnode/sui/discover/rpc\"\n        const suiClient = new SuiClient({ url: rpcUrl });\n\n        /// sender is required\n        input.transactionBlock.setSender(senderAccounts[0]);\n        const result = await input.transactionBlock.build({\n          client: suiClient,\n        });\n        const txBytes = Buffer(result).toString(\"base64\");\n        const txSerialize = await SuiTransaction.from(txBytes).toJSON();\n        resultTuple = [txBytes, txSerialize];\n      } catch (error) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      return new Promise((resolve) => {\n        resolve(resultTuple)\n      })\n    },\n\n    //签名并发送交易\n    sui_signAndExecuteTransaction() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n        \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.testTransaction = JSON.stringify(input);\n      this.currentSuiTransaction = input;\n      this.currentSuiMethod = \"sui_signAndExecuteTransaction\";\n    },\n  },\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_getAccount()\">getAccount(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signMessage()\">signMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signPersonalMessage()\">signPersonalMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signTransaction2()\">signTransaction(Sui)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signAndExecuteTransaction()\">sendTransaction(Sui)</el-button>\n      <div style=\"font-size: 12px; color: gray;\">(send to Rally Tiger account)</div>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_requestRpc()\">RPC_getBalance</el-button>\n      <div style=\"font-size: 12px; color: gray;\">get USDC balance of address:</div>\n      <div style=\"font-size: 12px; color: gray\">0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae</div>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signTransaction_pre_execution()\">signTransaction(prepared data)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signAndExecuteTransaction_pre_execution()\">sendTransaction(prepared data)</el-button>\n    </el-col>\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./SuiTransactionPanel.vue?vue&type=template&id=56a8eddf&scoped=true\"\nimport script from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./SuiTransactionPanel.vue?vue&type=style&index=0&id=56a8eddf&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-56a8eddf\"]])\n\nexport default __exports__","<script>\n\n\nimport {OKXTronProvider} from \"@okxconnect/universal-provider\";\nimport {TronWeb} from \"tronweb\";\n\nexport default {\n  name: \"TronTransactionPanel\",\n  methods: {\n\n    async tron_signMessage() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessage(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n\n      const verify = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), res, provider.getAccount(\"tron:mainnet\").address)\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" + res, \"tron_signMessage\")\n    },\n\n    async tron_signMessageV2() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessageV2(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", res);\n      console.log(\"tron_signMessageV2_base58Address\", base58Address)\n      console.log(\"tron_signMessageV2_address\", provider.getAccount(\"tron:mainnet\").address)\n      const verify = base58Address === provider.getAccount(\"tron:mainnet\").address\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" +  res, \"tron_signMessage\")\n    },\n\n    async tron_signTransaction(isOnlySign) {\n      let provider = new OKXTronProvider(window.provider)\n        let tronWeb = new TronWeb({\n          \"fullHost\": 'https://api.trongrid.io',\n          \"headers\": {},\n          \"privateKey\": ''\n        })\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const transaction = await tronWeb.transactionBuilder.sendTrx(\"TGBcVLMnVtvJzjPWZpPiYBgwwb7th1w3BF\", 1000, address);\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let res = await provider.signTransaction( transaction, \"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", res, \"tron_signTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async getContract() {\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41e95812d8d5b5412d2b9f3a4d5a87ca15c5c51f33\"\n      \n      try {\n        const contract = await tronWeb.trx.getContract(contractAddress)\n        const abi = contract.abi.entrys;\n        console.log(\"获取到的合约：\")\n        console.log(abi)\n      } catch (error) {\n        console.log(\"Error getting contract ABI:\", error);\n      }\n    },\n    \n    async tron_signAndSendTransactionContract(isOnlySign) {\n      // this.getContract()\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41e95812d8d5b5412d2b9f3a4d5a87ca15c5c51f33\"\n      let provider = new OKXTronProvider(window.provider)\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const parameter = [\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n      ]\n      const ret = await tronWeb.transactionBuilder.triggerSmartContract(contractAddress, \"quote(uint256,uint256,uint256)\", {}, parameter, address);\n      console.log(\"=====>transaction: \")\n      console.log(ret);\n      this.$emit(\"generateTransactionParams\", ret.transaction)\n      if (isOnlySign) {\n        let tx = await provider.signTransaction( ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async tron_signAndSendTransactionApprove(isOnlySign) {\n      let provider = new OKXTronProvider(window.provider)\n\n      let transaction = {\n        \"visible\": false,\n        \"txID\": \"d1ed31b6abd2c37e248254681d3ee61b2e628fbd776def753b5592712ebd98c5\",\n        \"raw_data\": {\n          \"contract\": [{\n            \"parameter\": {\n              \"value\": {\n                \"data\": \"095ea7b3000000000000000000000000e95812d8d5b5412d2b9f3a4d5a87ca15c5c51f33ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n                \"owner_address\": \"4157c140be01fa2bbabf7f055ab879d0c05725293c\",\n                \"contract_address\": \"41b4a428ab7092c2f1395f376ce297033b3bb446c1\"\n              },\n              \"type_url\": \"type.googleapis.com/protocol.TriggerSmartContract\"\n            },\n            \"type\": \"TriggerSmartContract\"\n          }],\n          \"ref_block_bytes\": \"1bde\",\n          \"ref_block_hash\": \"af71fa1aa01b5bd1\",\n          \"expiration\": Date.now() + 60000,\n          \"fee_limit\": 250000000,\n          \"timestamp\": Date.now()\n        },\n        \"raw_data_hex\": \"0a021bde2208af71fa1aa01b5bd140f8b1fa98b4325aae01081f12a9010a31747970652e676f6f676c65617069732e636f6d2f70726f746f636f6c2e54726967676572536d617274436f6e747261637412740a154157c140be01fa2bbabf7f055ab879d0c05725293c121541b4a428ab7092c2f1395f376ce297033b3bb446c12244095ea7b3000000000000000000000000e95812d8d5b5412d2b9f3a4d5a87ca15c5c51f33ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff70f1e6f698b432900180e59a77\"\n      }\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let tx = await provider.signTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n\n    }\n\n  }\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessage()\">tron_signMessage</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessageV2()\">tron_signMessageV2</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(true)\">\n        tron_signTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(true)\">\n        tron_signTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(true)\">\n        tron_signTransaction(Approve)\n      </el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(false)\">\n        tron_signAndSendTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(false)\">\n        tron_signAndSendTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(false)\">\n        tron_signAndSendTransaction(approve)\n      </el-button>\n    </el-col>\n\n\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./TronTransactionPanel.vue?vue&type=template&id=eaaccc08&scoped=true\"\nimport script from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./TronTransactionPanel.vue?vue&type=style&index=0&id=eaaccc08&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-eaaccc08\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=04ff1a45&scoped=true\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=04ff1a45&scoped=true&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-04ff1a45\"]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport ElementPlus from 'element-plus'\nimport 'element-plus/dist/index.css'\nimport App from './App.vue'\n\nconst app = createApp(App)\n\napp.use(ElementPlus)\napp.mount('#app')","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkokxconnectdemo\"] = self[\"webpackChunkokxconnectdemo\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(20074); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["id","_createElementBlock","_hoisted_1","_createVNode","_component_el_container","default","_withCtx","_component_el_header","_cache","_createTextVNode","_","_component_el_main","_component_el_card","class","header","_createElementVNode","style","_component_el_row","_component_el_col","span","_toDisplayString","$options","getWalletAddress","_ctx","currentStatus","_component_el_checkbox","modelValue","withUI","$event","onChange","handleWithUI","universalToTG","handleUniversalToTG","_component_el_select","modals","placeholder","handleModalsSelect","multiple","_component_el_option","label","value","returnStrategy","handleReturnStrategySelect","_Fragment","_renderList","returnStrategies","strategy","_createBlock","key","_component_el_input","deeplink","handleReturnStrategyDeeplink","disabled","_createCommentVNode","language","handleLanguageSelect","locales","locale","theme","handleThemeSelect","THEME","LIGHT","DARK","selectedMethod","handleConnectMethodsSelect","connectMethods","item","tonProofValue","gutter","align","Object","keys","availableChains","checked","areChainsInit","name","isOptionalChecked","handleOptionChange","_component_el_button","type","onClick","initBtnClicked","icon","connectInitStr","connectBtnClicked","connectStatusStr","syncAllAddressClick","syncAllAddressStr","disconnectAction","walletAddress","length","disconnectStatusStr","_Teleport","to","showModal","args","closeModal","_withModifiers","_component_qrcode_vue","qrValue","size","level","_component_el_tabs","activeTab","onTabClick","clickActiveTab","_component_el_tab_pane","eth_requestAccounts","eth_chainId","wallet_switchEthereumChain","wallet_addEthereumChain","personal_sign","eth_signTypedData_v4","eth_sendTransaction_transfer","eth_sendTransaction_approve","eth_sendTransaction_mint","wallet_watchAsset","ton_getAccount","ton_sendTransaction","sol_signMessage","sol_signTransaction","sol_signVersionedTransaction","sol_signAllTransactions","sol_signAllVersionedTransactions","sol_signAndSendTransaction","sol_signAndSendVersionedTransaction","_component_SuiPanel","onGenerateTransactionParams","sui_generateTransactionParams","_component_BTCPanel","btc_generateTransactionParams","_component_FractalPanel","fractal_generateTransactionParams","_component_TronTransactionPanel","tron_generateTransactionParams","onGenerateTransactionResult","tron_getTransactionResult","aptos_signMessage","aptos_signTransaction","aptos_signAndSubmitTransaction","cosmos_signArbitrary","cosmos_signAmino","cosmos_signDirect","wallet_testRpc","eth_sendTransaction_swap","move_signTransaction","move_signAndSubmitTransaction","testBase64UrlSafe","xs","sm","redirect","handleRedirectSelect","canChainAddRedirectParam","redirectDeeplink","handleRedirectDeeplink","addRedirectParam","testTransaction","rows","testboc","sendTransaction","testTransactionStr","btc_getAccount","btc_signMessage","$setup","sendAmount","clearable","btc_send","sendSatoshisAmount","btc_sendBitcoin","psbtHex","btc_signPsbt_up","btc_signAndPushPsbt_up","nftId","receiver","btc_sendInscription","props","msg","String","setup","ref","methods","this","$emit","params","from","signStr","alert","toAddress","satoshis","options","feeRate","autoFinalized","address","inscriptionId","__exports__","fractal_getAccount","fractal_signMessage","fractal_send","fractal_sendBitcoin","fractal_signPsbt_up","fractal_signAndPushPsbt_up","fractal_sendInscription","sui_getAccount","sui_signMessage","sui_signPersonalMessage","sui_signTransaction2","sui_signAndExecuteTransaction","sui_requestRpc","sui_signTransaction_pre_execution","sui_signAndExecuteTransaction_pre_execution","data","uint8Array","Uint8Array","input","message","amount","recipientAddress","tx","SuiTransaction","coin","splitCoins","gas","transferObjects","transactionBlock","account","chain","showEffects","provider","window","setDefaultChain","method","txBytes","txSerialize","generateTsBytesAndSerizlize","resultTuple","Promise","resolve","senderAccounts","requestAccountsWithNamespace","rpcUrl","getFullnodeUrl","suiClient","SuiClient","url","setSender","result","build","client","Buffer","toString","toJSON","error","JSON","stringify","currentSuiTransaction","currentSuiMethod","tron_signMessage","tron_signMessageV2","tron_signTransaction","tron_signAndSendTransactionContract","tron_signAndSendTransactionApprove","OKXTronProvider","res","signMessage","code","tronWeb","TronWeb","verify","trx","verifyMessage","getAccount","signMessageV2","base58Address","verifyMessageV2","console","log","isOnlySign","transaction","transactionBuilder","sendTrx","signTransaction","signAndSendTransaction","getContract","contractAddress","contract","abi","entrys","parameter","ret","triggerSmartContract","Date","now","verifyADR36Amino","require","fromBech32","VConsole","allChains","chainsThatCanAddRedirectParam","optionChains","Set","selectedModals","selectedReturnStrategy","selectedDeepLink","selectedLanguage","selectedTheme","components","TronTransactionPanel","QrcodeVue","BTCPanel","FractalPanel","SuiPanel","testTopic","testPublicKey","testProofPayload","pendingDeepLink","logList","connectReady","localPubKey","localSecKey","selectedChain","ProofPayloadVerify","showVerifyRow","chainId","has","localStorage","getItem","selectedMethodData","isChecked","setItem","location","reload","delete","add","computed","selectedChains","initChains","newChains","updatedChains","assign","tab","tabName","initCall","OKXUniversalConnectUI","init","dappMetaData","actionsConfiguration","uiPreferences","OKXUniversalProvider","then","tonProvider","OKXTonProvider","onStatusChange","walletInfo","err","onModalStateChange","state","session","namespaces","entries","forEach","chains","push","parseInt","substring","on","uri","useShortLink","isPC","items","topic","testTonSdk","connected","syncAllAddresses","e","disconnect","blockExplorerUrls","chainName","nativeCurrency","symbol","decimals","rpcUrls","accounts","request","dataETH","dataPolygon","types","EIP712Domain","Person","Mail","primaryType","domain","version","verifyingContract","wallet","contents","maxPriorityFeePerGas","maxFeePerGas","gasPrice","nonce","gasLimit","str","image","tonUniversalLog","sendTransactionAlert","response","fetch","json","confirm","startsWith","sendData","parse","adapter","SuiAdapter","suiResult","signAndExecuteTransaction","sui_verifySignature","signPersonalMessage","btcAdapter","OKXBtcProvider","btcResult","currentBtcMethod","currentBtcTransaction","send","signPsbt","hexToBase64","bs64Str","catch","signPsbts","psbtHexs","sendInscription","signAndPushPsbt","sendBitcoin","fractalResult","currentFractalMethod","currentFractalTransaction","OKX_CONNECT_ERROR_CODES","USER_REJECTS_ERROR","hexStr","bytes","i","substr","buffer","blob","Blob","reject","reader","FileReader","onload","base64Data","target","split","onerror","readAsDataURL","datatest","utf8Array","TextEncoder","encode","binary","byte","fromCharCode","firstStr","btoa","replace","showUrl","getUniversalLink","getAppWalletDeepLink","hasEip155","hasSolana","hasSui","hasBtc","hasAptos","hasTon","hasCosmos","nameSpacesChains","optSpaceChains","solanaChains","hasTron","suiChains","btcChains","filter","map","values","includes","connectMethod","connectData","requireData","eip155","defaultChain","solana","cosmos","tron","tonParams","ton_addr","ton_proof","payload","ton","sui","rpcMap","aptos","btc","optData","eip155Chains","signMethods","getCurrentSelectedMethodData","openModalAndSign","openModal","sessionConfig","useMini","openUniversalUrl","tmaReturnUrl","connectAndSign","connect","methodList","suiData","currentMethod","application","userAgentInfo","navigator","userAgent","Agents","flag","v","indexOf","isSafariOrChrome","pubkey","OKXSolanaProvider","result1","nacl","detached","signature","PublicKey","publicKey","toBytes","OKXAptosProvider","config","AptosConfig","network","Network","MAINNET","Aptos","simple","sender","function","typeArguments","functionArguments","safeJsonStringify","signAndSubmitTransaction","connection","Connection","getSolConnect","blockhash","getLatestBlockhash","versionedTransactionMessage","TransactionMessage","payerKey","recentBlockhash","instructions","SystemProgram","transfer","fromPubkey","toPubkey","lamports","compileToV0Message","VersionedTransaction","signAllTransactions","Transaction","feePayer","rpc","OKXCosmosProvider","signArbitrary","isValid","cosmos_verifySignArbitrary","pub_key","signer","prefix","prefixStr","signatureBuffer","uint8Signature","pubKeyValueBuffer","pubKeyUint8Array","signDoc","signAmino","messageToBuffer","signDirect","uiOptions","eth_verifyMessage","ethAddress","originalMessage","slice","recoveredAddress","ethers","toLowerCase","list","verifyList","methodItem","requestItme","ethMessage","solanaMessage","verifySol","aptosMessage","aptosProvider","aptosPublicKey","fullMessage","cosmosProvider","cosmosAddress","cosmosMessage","tronMessage","signatureResult","resultObj","pubKey","verifyPersonalMessageSignature","toSuiAddress","toBase64","newTransaction","some","c","created","mounted","scriptTag","document","createElement","src","getElementsByTagName","appendChild","title","render","app","createApp","App","use","ElementPlus","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","loaded","__webpack_modules__","call","m","amdO","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","Function","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","children","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}