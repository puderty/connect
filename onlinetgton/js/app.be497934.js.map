{"version":3,"file":"js/app.be497934.js","mappings":"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","sources":["webpack://okxconnectdemo/../packages/core/src/connect/commands.js","webpack://okxconnectdemo/../packages/core/src/connect/connect.js","webpack://okxconnectdemo/../packages/core/src/connect/connectionManager.js","webpack://okxconnectdemo/../packages/core/src/connect/connectionSplitPackages.js","webpack://okxconnectdemo/../packages/core/src/connect/constants.js","webpack://okxconnectdemo/../packages/core/src/connect/engine.js","webpack://okxconnectdemo/../packages/core/src/connect/index.js","webpack://okxconnectdemo/../packages/core/src/connect/jwt.js","webpack://okxconnectdemo/../packages/core/src/connect/jwtconstants.js","webpack://okxconnectdemo/../packages/core/src/connect/sessionUtils.js","webpack://okxconnectdemo/../packages/core/src/connect/storage.js","webpack://okxconnectdemo/../packages/core/src/connect/storageconstants.js","webpack://okxconnectdemo/../packages/core/src/connect/walletConnectionConstants.js","webpack://okxconnectdemo/../packages/core/src/connect/walletConnectionManager.js","webpack://okxconnectdemo/../packages/core/src/connector/appwallet-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/iconnector.js","webpack://okxconnectdemo/../packages/core/src/connector/index.js","webpack://okxconnectdemo/../packages/core/src/connector/inject-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/okxwallet-inject-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/okxwallet-inject-tonsdk-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/tgwallet-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/ws-connector.js","webpack://okxconnectdemo/../packages/core/src/crypto/crypto.js","webpack://okxconnectdemo/../packages/core/src/index.js","webpack://okxconnectdemo/../packages/core/src/inject/InjectUtils.js","webpack://okxconnectdemo/../packages/core/src/inject/index.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/AptosProvider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/SolProvider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/TONProvider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/btc-provider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/eip155Provider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/index.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/sui-provider.js","webpack://okxconnectdemo/../packages/core/src/protocol/chains.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/engine.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/json-rpc.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/connect-event.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/connect-wallet.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/wallet-info.js","webpack://okxconnectdemo/../packages/core/src/protocol/constants.js","webpack://okxconnectdemo/../packages/core/src/protocol/error/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/error/okx-connect.error.js","webpack://okxconnectdemo/../packages/core/src/protocol/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/misc.js","webpack://okxconnectdemo/../packages/core/src/utils/call-for-success.js","webpack://okxconnectdemo/../packages/core/src/utils/index.js","webpack://okxconnectdemo/../packages/core/src/utils/log.js","webpack://okxconnectdemo/../packages/core/src/utils/media.js","webpack://okxconnectdemo/../packages/core/src/utils/report.js","webpack://okxconnectdemo/../packages/core/src/utils/reportconstants.js","webpack://okxconnectdemo/../packages/core/src/utils/request.js","webpack://okxconnectdemo/../packages/core/src/utils/safejson.js","webpack://okxconnectdemo/../packages/core/src/utils/stringUtils.js","webpack://okxconnectdemo/../packages/core/src/utils/tma-api.js","webpack://okxconnectdemo/../packages/core/src/utils/url.js","webpack://okxconnectdemo/../packages/core/src/utils/utils.js","webpack://okxconnectdemo/../packages/core/src/utils/web-api.js","webpack://okxconnectdemo/../packages/tonsdk/src/index.js","webpack://okxconnectdemo/../packages/tonsdk/src/okx-connect-ton-inner.js","webpack://okxconnectdemo/../packages/tonsdk/src/okx-connect-ton.js","webpack://okxconnectdemo/../packages/tonsdk/src/parsers/rpc-parser.js","webpack://okxconnectdemo/../packages/tonsdk/src/parsers/send-transaction-parser.js","webpack://okxconnectdemo/../packages/tonsdk/src/provider/bridge-connection-storage.js","webpack://okxconnectdemo/../packages/tonsdk/src/provider/bridge/bridge-provider.js","webpack://okxconnectdemo/../packages/tonsdk/src/provider/bridge/models/bridge-connection.js","webpack://okxconnectdemo/../packages/tonsdk/src/tracker/browser-event-dispatcher.js","webpack://okxconnectdemo/../packages/tonsdk/src/tracker/index.js","webpack://okxconnectdemo/../packages/tonsdk/src/tracker/ton-connect-tracker.js","webpack://okxconnectdemo/../packages/tonsdk/src/tracker/tracker-constants.js","webpack://okxconnectdemo/../packages/tonsdk/src/tracker/types.js","webpack://okxconnectdemo/../packages/tonsdk/src/utils/address.js","webpack://okxconnectdemo/../packages/tonsdk/src/utils/constants.js","webpack://okxconnectdemo/../packages/tonsdk/src/utils/feature-support.js","webpack://okxconnectdemo/../packages/tonsdk/src/utils/index.js","webpack://okxconnectdemo/../packages/tonsdk/src/utils/url.js","webpack://okxconnectdemo/./src/App.vue","webpack://okxconnectdemo/./src/App.vue?7ccd","webpack://okxconnectdemo/./src/main.js","webpack://okxconnectdemo/webpack/bootstrap","webpack://okxconnectdemo/webpack/runtime/amd options","webpack://okxconnectdemo/webpack/runtime/chunk loaded","webpack://okxconnectdemo/webpack/runtime/compat get default export","webpack://okxconnectdemo/webpack/runtime/define property getters","webpack://okxconnectdemo/webpack/runtime/global","webpack://okxconnectdemo/webpack/runtime/hasOwnProperty shorthand","webpack://okxconnectdemo/webpack/runtime/make namespace object","webpack://okxconnectdemo/webpack/runtime/jsonp chunk loading","webpack://okxconnectdemo/webpack/startup"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_METHOD_BATCH_FETCHMSG = exports.CONNECT_METHOD_FETCHMSG = exports.CONNECT_METHOD_RECEIVE = exports.CONNECT_METHOD_UNSUB = exports.CONNECT_METHOD_SUB = exports.CONNECT_METHOD_PUBLISH = exports.CONNECT_METHOD_LOGIN = exports.CONNECT_METHOD_PUSH = void 0;\n// --------------- ws methods -------------\nexports.CONNECT_METHOD_PUSH = \"push\";\nexports.CONNECT_METHOD_LOGIN = \"login\";\nexports.CONNECT_METHOD_PUBLISH = \"publish\";\nexports.CONNECT_METHOD_SUB = \"subscribe\";\nexports.CONNECT_METHOD_UNSUB = \"unsubscribe\";\nexports.CONNECT_METHOD_RECEIVE = \"receive\";\nexports.CONNECT_METHOD_FETCHMSG = \"fetchMessages\";\nexports.CONNECT_METHOD_BATCH_FETCHMSG = \"batchFetchMessages\";\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXWalletConnector = void 0;\nconst constants_1 = require(\"./constants\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils\");\nconst utils_2 = require(\"../utils/utils\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst log = __importStar(require(\"../utils/log\"));\nconst protocol_1 = require(\"../protocol\");\nconst report_1 = require(\"../utils/report\");\nconst WS = (0, utils_2.resolveWebSocketImplementation)();\nclass OKXWalletConnector {\n    constructor(url) {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.state = constants_1.ConnectorState.InitState;\n        this.selectedUrlIndex = 0;\n        // reconnect\n        this.retryCount = 0;\n        // default timeout limit: 8 sec\n        this.timeOutLimit = 8000;\n        if (!(0, utils_2.checkWSUrl)(url)) {\n            throw new Error(`CONNECTOR: invalid url ${url}`);\n        }\n        this.url = url;\n        this.heartbeatTimer = null;\n        this.connectionTimeoutTimer = null;\n        this.connectURLStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY + storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n    }\n    get connecting() {\n        return this.state == constants_1.ConnectorState.Connecting;\n    }\n    // ------------------------------------------------------\n    onPayload(e) {\n        if (typeof e.data === \"undefined\")\n            return;\n        log.logDebug('get received data');\n        log.logDebug(e);\n        if (typeof e.data === \"string\") {\n            let rsp = e.data;\n            if (rsp === \"pong\") {\n                log.logDebug(`CONNECT: receive pong ${Date.now().toString()}`);\n                return;\n            }\n        }\n        this.events.emit(\"payload\", e.data);\n    }\n    onClose(event) {\n        var _a;\n        log.logDebug('socket get closed: ', (_a = this.socket) === null || _a === void 0 ? void 0 : _a.url, event.code);\n        this.socket = undefined;\n        this.events.emit(\"close\", event);\n    }\n    onError(id, e) {\n        const payload = { id: id, msg: e.toString() };\n        this.events.emit(\"payload\", payload);\n    }\n    onopen(socket) {\n        socket.onmessage = (event) => this.onPayload(event);\n        socket.onclose = (event) => this.onClose(event);\n        this.socket = socket;\n        this.state = constants_1.ConnectorState.Connected;\n        this.events.emit(\"open\");\n    }\n    // ------------------------------------------------------\n    emitError(errorEvent) {\n        this.events.emit(\"fail\", errorEvent);\n    }\n    // ------------------------------------------------------\n    heartbeat() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.heartbeatTimer) {\n                clearTimeout(this.heartbeatTimer);\n            }\n            if (this.state != constants_1.ConnectorState.Connected && this.state != constants_1.ConnectorState.OnError) {\n                log.logDebug('heart beat close');\n                return;\n            }\n            if (!this.socket) {\n                log.logDebug('socket not exist');\n                if (this.state == constants_1.ConnectorState.Connected || this.state == constants_1.ConnectorState.OnError) {\n                    log.logDebug('socket reconnect by heartbeat');\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                        this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n                    }\n                }\n                return;\n            }\n            if (this.socket.readyState !== WebSocket.OPEN) {\n                log.logDebug('socket not ready');\n                if (this.state == constants_1.ConnectorState.Connected || this.state == constants_1.ConnectorState.OnError) {\n                    log.logDebug('socket reconnect by heartbeat with state', this.state, this.socket.readyState);\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                        this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n                    }\n                }\n                return;\n            }\n            log.logDebug(`send ping heart beat: ${Date.now().toString()}, ${this.socket}`);\n            this.socket.send(\"ping\");\n            this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n        });\n    }\n    registOpen(url = this.url, inRetry = false) {\n        if (!(0, utils_2.checkWSUrl)(url)) {\n            throw new Error(`CONNECTOR: invalid url ${url}`);\n        }\n        this.url = url;\n        if (!inRetry) {\n            log.logDebug('Connection connect:', this.url, new Date().toUTCString());\n        }\n        this.state = constants_1.ConnectorState.Connecting;\n        const origin = new URLSearchParams(url).get(\"origin\");\n        return new Promise((resolve, reject) => {\n            const socket = new WS(url, []);\n            log.logDebug('Connection connect Begin:', this.url, new Date().toUTCString());\n            this.startTimeOutTimer(socket);\n            if ((0, utils_2.hasBuiltInWebSocket)()) {\n                log.logDebug('Add socket error handler');\n                socket.onerror = () => {\n                    reject(new Error('socket error'));\n                    socket.close();\n                };\n            }\n            else {\n                log.logDebug('Add socket error handler');\n                socket.on(\"error\", () => {\n                    reject(new Error('socket error'));\n                    socket.close();\n                });\n            }\n            socket.onopen = () => {\n                log.logDebug('socket opened');\n                this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.FINISHED);\n                this.onopen(socket);\n                this.heartbeat();\n                resolve(socket);\n            };\n        });\n    }\n    checkMaxRetry() {\n        log.logDebug('current retry count:', this.retryCount, 'of', constants_1.OKXCONNECTOR_WS_URL_LIST.length);\n        return this.retryCount > (constants_1.OKXCONNECTOR_WS_URL_LIST.length * 3);\n    }\n    connectionTryNext() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.checkMaxRetry()) {\n                //TODO: mark descent\n                this.retryCount += 1;\n                let nextUrl = this.getNextSelectUrl();\n                log.logDebug('Connection retry:', nextUrl, new Date().toUTCString());\n                return this.registOpen(nextUrl, true);\n            }\n            else {\n                log.logDebug('Max Connection retry ', this.retryCount, new Date().toUTCString());\n            }\n        });\n    }\n    startTimeOutTimer(socket) {\n        if (this.connectionTimeoutTimer) {\n            this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.CANCELED);\n        }\n        this.pendingSocket = socket;\n        this.connectionTimeoutTimer = setTimeout(() => {\n            if (this.pendingSocket) {\n                this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.TIME_OUT);\n            }\n        }, this.timeOutLimit);\n    }\n    resetTimeOutTimer(code) {\n        var _a;\n        // 1. cancel connecting pending sockets\n        if (code == constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.TIME_OUT) {\n            // 2. remove timer\n            clearTimeout(this.connectionTimeoutTimer);\n            (_a = this.pendingSocket) === null || _a === void 0 ? void 0 : _a.close();\n            this.pendingSocket = undefined;\n            log.reportEvent(report_1.OKXReportType.LOG, 'timeout', this.retryCount.toString());\n            throw new Error('socket timeout');\n        }\n        else {\n            this.pendingSocket = undefined;\n            // 2. remove timer\n            clearTimeout(this.connectionTimeoutTimer);\n        }\n    }\n    cacheSuccessUrlSelect() {\n        this.connectURLStorage.saveContent(this.selectedUrlIndex.toString(), storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n    }\n    // private getSuccessUrlSelect(): string {\n    //     let selectIndex = this.connectURLStorage.getItem(OKXCONNECTOR_CACHE_KEY)?.content\n    //     let index = 0\n    //     if (selectIndex) {\n    //         index = Number(selectIndex)\n    //     }\n    //     this.selectedUrlIndex = index\n    //     return OKXCONNECTOR_WS_URL_LIST[index]\n    // }\n    getNextSelectUrl() {\n        this.selectedUrlIndex += 1;\n        this.selectedUrlIndex = this.selectedUrlIndex % constants_1.OKXCONNECTOR_WS_URL_LIST.length;\n        return constants_1.OKXCONNECTOR_WS_URL_LIST[this.selectedUrlIndex];\n    }\n    // ------------------------------------------------------\n    onVisibleChanged() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (document.visibilityState === 'visible') {\n                // check and restore\n                log.logDebug(`get changed ${this.state}, ${this.socket}`);\n                if (this.state == constants_1.ConnectorState.Connected && typeof this.socket === \"undefined\") {\n                    log.logDebug('CONNECTION need reopen');\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                    }\n                    return;\n                }\n            }\n        });\n    }\n    tryRegistOpen() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            if (this.connecting) {\n                log.logDebug('tryRegistOpen => connecting state');\n                return new Promise((resolve, reject) => {\n                    this.events.once('fail', (e) => {\n                        log.logDebug('tryRegistOpen => connecting fail listener', e);\n                        return reject(e);\n                    });\n                    this.events.once(\"open\", () => {\n                        if (typeof this.socket == \"undefined\") {\n                            return reject(new Error(\"Connect lost\"));\n                        }\n                        return resolve(this.socket);\n                    });\n                });\n            }\n            log.logDebug('tryRegistOpen => try registOpen until retry limit is hit');\n            let inRetry = false;\n            while (!this.checkMaxRetry() && !this.socket) {\n                try {\n                    log.logDebug('tryRegistOpen => call registOpen, try count:', this.retryCount, inRetry);\n                    yield this.registOpen(url, inRetry);\n                }\n                catch (err) {\n                    log.logDebug('tryRegistOpen => registOpen failed', err);\n                    this.retryCount += 1;\n                    url = this.getNextSelectUrl();\n                    inRetry = true;\n                }\n            }\n            log.logDebug('tryRegistOpen => exit while loop', this.retryCount, this.socket);\n            if (!this.socket && this.checkMaxRetry()) {\n                log.logDebug('tryRegistOpen => failed to open a socket', this.retryCount, this.socket);\n                this.retryCount = 0;\n                this.state = constants_1.ConnectorState.OnError;\n                this.emitError(new Error('tryRegistOpen failed'));\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CONNECTION_ERROR, \"Failed to connect\");\n            }\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this.tryRegistOpen();\n                // listener for reconnect\n                document.removeEventListener('visibilitychange', this.onVisibleChanged.bind(this));\n                document.addEventListener('visibilitychange', this.onVisibleChanged.bind(this));\n            }\n            catch (e) {\n                log.logDebug('connect => failed to connect', e);\n                throw e;\n            }\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.state = constants_1.ConnectorState.Disconnected;\n            return new Promise((resolve, reject) => {\n                if (typeof this.socket === \"undefined\") {\n                    // reject(new Error(\"CONNECTION closed\"))\n                    resolve();\n                    return;\n                }\n                this.socket.onclose = (event) => {\n                    this.onClose(event);\n                    resolve();\n                };\n                this.socket.close();\n                if (this.heartbeatTimer) {\n                    clearTimeout(this.heartbeatTimer);\n                }\n            });\n        });\n    }\n    currentStatus() {\n        return {\n            state: this.state,\n            url: this.url\n        };\n    }\n    // event will be jsonstr\n    /// @params Promise\n    /// @params success/failed callback\n    addListener(event, decrypt, success, failed, splitCheckComplete) {\n        if (this.listenPayloadHandler) {\n            this.events.removeListener(\"payload\", this.listenPayloadHandler);\n        }\n        this.listenPayloadHandler = (e) => __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            log.logDebug(`<<< get payload ${e}`);\n            let parsedEvent = (0, utils_1.safeJsonParse)(e);\n            // parse the data to chose success or failed\n            if (parsedEvent.params && parsedEvent.params.data) {\n                let rawMsg = (_a = parsedEvent.params.data) === null || _a === void 0 ? void 0 : _a.message;\n                let skipMsg = false;\n                if (rawMsg) {\n                    // 在这里增加检测流程，如果当前包是“分包”，而且没有finalMessage则不继续触发failed/success结果\n                    if (splitCheckComplete) {\n                        let checkResult = yield splitCheckComplete(parsedEvent.params.data);\n                        skipMsg = checkResult.isSplitPackage && (!checkResult.finalMessage);\n                        if (checkResult.isSplitPackage) {\n                            if (checkResult.finalMessage && checkResult.finalMessage.length > 0) {\n                                log.logDebug('CONNECT: update raw msg content');\n                                rawMsg = checkResult.finalMessage;\n                            }\n                            else {\n                                log.logDebug('CONNECT: skip raw msg content');\n                                skipMsg = true;\n                            }\n                        }\n                    }\n                }\n                if (!skipMsg) {\n                    try {\n                        let msg = decrypt(rawMsg);\n                        if (msg === undefined) {\n                            log.logDebug(`CONNECT: decrypt undefined`);\n                            failed(event, 'Decrypt undefined');\n                        }\n                        else {\n                            success(event, msg);\n                        }\n                    }\n                    catch (e) {\n                        log.logDebug(`CONNECT: decrypt failed: ${e}`);\n                        failed(event, e.message);\n                    }\n                }\n            }\n        });\n        this.events.on(\"payload\", this.listenPayloadHandler);\n        if (this.failHandler) {\n            this.events.removeListener(\"fail\", this.failHandler);\n        }\n        this.failHandler = (e) => {\n            if (e) {\n                log.logDebug(`CONNECT failed: ${e}`);\n                failed(event, e.message);\n            }\n            else {\n                failed(event, \"Unkonow error\");\n            }\n        };\n        this.events.on(\"fail\", this.failHandler);\n    }\n    addPackageParse(callback) {\n        if (this.payloadHandler) {\n            this.events.removeListener(\"payload\", this.payloadHandler);\n        }\n        this.payloadHandler = (e) => __awaiter(this, void 0, void 0, function* () {\n            // parse the data to chose success or failed\n            log.logDebug(`CONNECTION @[${new Date().toUTCString()}] <<<< received e:${e}`);\n            let param = (0, utils_1.safeJsonParse)(e);\n            yield callback(param);\n        });\n        this.events.on(\"payload\", this.payloadHandler);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    send(doLogin, payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (typeof this.socket === \"undefined\") {\n                    log.logDebug(`>>> send payload undefined ${payload}`);\n                    // this.socket = await this.registOpen();\n                    yield doLogin();\n                }\n                log.logDebug(`CONNECTION @[${new Date().toUTCString()}]>>> send payload ${(0, utils_1.safeJsonStringify)(payload)}`);\n                if (this.socket) {\n                    this.socket.send((0, utils_1.safeJsonStringify)(payload));\n                }\n            }\n            catch (e) {\n                this.onError(payload.id, e);\n            }\n        });\n    }\n    getMsgPayloadFromHistory(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof msg === \"undefined\")\n                return;\n            let tmpMsg = {\n                params: {\n                    data: msg\n                }\n            };\n            let jsonstr = (0, utils_1.safeJsonStringify)(msg);\n            log.logDebug('get received data from history');\n            log.logDebug(jsonstr);\n            jsonstr = (0, utils_1.safeJsonStringify)(tmpMsg);\n            this.events.emit(\"payload\", jsonstr);\n        });\n    }\n    onOpen(callback) {\n        if (this.openHandler) {\n            this.events.removeListener(\"open\", this.openHandler);\n        }\n        this.openHandler = () => __awaiter(this, void 0, void 0, function* () {\n            log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> ws opened: `);\n            yield callback();\n        });\n        this.events.on(\"open\", this.openHandler);\n        this.cacheSuccessUrlSelect();\n    }\n}\nexports.OKXWalletConnector = OKXWalletConnector;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionManager = void 0;\nconst connect_1 = require(\"./connect\");\nconst commands_1 = require(\"./commands\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst jwtconstants_1 = require(\"./jwtconstants\");\nconst constants_1 = require(\"./constants\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils/utils\");\nconst crypto_1 = require(\"../crypto/crypto\");\nconst jwt_1 = require(\"./jwt\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst report_1 = require(\"../utils/report\");\nconst url_1 = require(\"../utils/url\");\nconst connectionSplitPackages_1 = require(\"./connectionSplitPackages\");\nclass ConnectionManager {\n    constructor(appname = undefined) {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.splitManager = new connectionSplitPackages_1.ConnectionSplitPackages('dapp');\n        // local storage\n        this.connectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY_DAPP + appname, storageconstants_1.OKXCONNECTOR_CACHE_KEY_DAPP);\n        this.tonsdkConnectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_TON_KEY + appname, storageconstants_1.OKXCONNECTOR_TON_KEY);\n        this.crypto = new crypto_1.SessionCrypto();\n        let inTMA = (0, url_1.isInTMA)();\n        (0, log_1.logDebug)('do init:', inTMA);\n        log.reportLog('connection manager do init');\n        if (inTMA) {\n            // recovery from cache\n            try {\n                const keyPairInfo = this.getCachedCryptoKeyPair();\n                (0, log_1.logDebug)('use same pk:', keyPairInfo);\n                this.crypto = new crypto_1.SessionCrypto(keyPairInfo);\n            }\n            catch (error) {\n                this.connectStorage.clearCache();\n                log.reportEvent(report_1.OKXReportType.LOG, 'cache_fail', 'cache failed');\n            }\n        }\n        this.jwtKeyPair = this.getCachedJWTKeyPair();\n        this.saveJWTKeyPair(this.jwtKeyPair);\n        // wss connection\n        this.connector = new connect_1.OKXWalletConnector(constants_1.OKXCONNECTOR_WS_URL_1);\n        this.packageId = Date.now();\n        // connection state\n        this.connectedWalletPK = '';\n        this.currentTopic = '';\n        log.logDebug(`this.connectedWalletPK  constructor   ${this.connectedWalletPK}`);\n    }\n    refreshPackageId() {\n        let nowDate = Date.now();\n        if (nowDate == this.packageId) {\n            this.packageId = nowDate + 1;\n        }\n        this.packageId = nowDate;\n    }\n    saveCryptoKeyPair(keyPair) {\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(keyPair);\n        // encrypt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_CRYPTO_KEY);\n    }\n    getCachedCryptoKeyPair() {\n        // decrypt kp\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_CRYPTO_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            log.logDebug('get cached crypto key:');\n            log.logDebug(content);\n            let keyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            return keyPairInfo;\n        }\n        else {\n            this.connectStorage.clearCache();\n            return null;\n        }\n    }\n    saveJWTKeyPair(keyPair) {\n        var strkeyPair = {\n            publicKey: (0, utils_1.toHexString)(keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(keyPair.secretKey)\n        };\n        log.logDebug('save jwt kp');\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(strkeyPair);\n        log.logDebug(cacheInfo);\n        // encrypt jwt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_JWT_KEY);\n    }\n    getCachedJWTKeyPair() {\n        try {\n            const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_JWT_KEY);\n            const content = kp;\n            if (typeof content == 'string') {\n                // TODO: decrypt jwt kp\n                log.logDebug('get cached jwt kp:');\n                log.logDebug(content);\n                let strKeyPairInfo = (0, safejson_1.safeJsonParse)(content);\n                log.logDebug('save jwt kp');\n                log.logDebug(strKeyPairInfo);\n                var keyPair = {\n                    publicKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.publicKey),\n                    secretKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.secretKey)\n                };\n                return keyPair;\n            }\n            else {\n                return (0, jwt_1.generateKeyPair)();\n            }\n        }\n        catch (error) {\n            log.reportEvent(report_1.OKXReportType.LOG, 'cache_fail', 'cache failed');\n            return (0, jwt_1.generateKeyPair)();\n        }\n    }\n    isWalletPKReady() {\n        log.logDebug(`isWalletPKReady  ===> ${this.connectedWalletPK}`);\n        return this.connectedWalletPK.length > 0;\n    }\n    makeJWT(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, jwt_1.signJWT)(topic, jwtconstants_1.OKXCONNECTOR_JWT_SIDE, jwtconstants_1.OKXCONNECTOR_JWT_TTL, // 24h\n            this.jwtKeyPair);\n        });\n    }\n    parsePackage(input_1) {\n        return __awaiter(this, arguments, void 0, function* (input, ignoreACK = false) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o;\n            this.events.emit(input.id, input);\n            // send back ACK\n            if (!ignoreACK) {\n                yield this.sendACK(input.id, true);\n                let topic = (_a = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE)) === null || _a === void 0 ? void 0 : _a.content;\n                if (topic) {\n                    let inputObj = input;\n                    if ((_c = (_b = inputObj.params) === null || _b === void 0 ? void 0 : _b.data) === null || _c === void 0 ? void 0 : _c.messageId) {\n                        // change into split check receive\n                        let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload((_e = (_d = inputObj.params) === null || _d === void 0 ? void 0 : _d.data) === null || _e === void 0 ? void 0 : _e.message);\n                        if (msgPlayloadObject) {\n                            let msgObject = {\n                                topicId: (_g = (_f = inputObj.params) === null || _f === void 0 ? void 0 : _f.data) === null || _g === void 0 ? void 0 : _g.topic,\n                                messageId: (_j = (_h = inputObj.params) === null || _h === void 0 ? void 0 : _h.data) === null || _j === void 0 ? void 0 : _j.messageId,\n                                messageObject: msgPlayloadObject,\n                                publishedAt: (_l = (_k = inputObj.params) === null || _k === void 0 ? void 0 : _k.data) === null || _l === void 0 ? void 0 : _l.publishedAt,\n                            };\n                            let checkResult = yield this.splitManager.onReceivedPackageCheck(msgObject);\n                            if (checkResult.completeMessageIdList) {\n                                checkResult.completeMessageIdList.forEach((msgId) => __awaiter(this, void 0, void 0, function* () {\n                                    // 发送receive\n                                    this.refreshPackageId();\n                                    yield this.sendReceive(this.packageId.toString(), msgId, topic);\n                                }));\n                            }\n                        }\n                        else {\n                            this.refreshPackageId();\n                            yield this.sendReceive(this.packageId.toString(), (_o = (_m = inputObj.params) === null || _m === void 0 ? void 0 : _m.data) === null || _o === void 0 ? void 0 : _o.messageId, topic);\n                        }\n                    }\n                }\n            }\n        });\n    }\n    restoreConnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.reportLog('connection manager restore connection');\n            log.logDebug(`connectionManager  restoreConenct   ${topic}`);\n            if ((typeof topic !== 'string') || topic.length === 0) {\n                throw new Error('CONNECTION: invalid topic');\n            }\n            log.logDebug(`connectionManager  restoreConenct   disconnect`);\n            yield this.disconnect(true);\n            this.connectStorage.saveContent(topic, storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`connectionManager  restoreConenct   conect`);\n            yield this.connect(true);\n        });\n    }\n    getConnectInfo() {\n        var topic = (0, utils_1.generateTopic)();\n        log.logDebug(`generate topic token: ${topic}`);\n        log.reportLog('connection manager generate connection info');\n        this.currentTopic = topic;\n        const info = {\n            channelId: topic,\n            clientId: this.crypto.stringifyKeypair().publicKey,\n        };\n        return info;\n    }\n    connect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            this.timeLog = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---enter->\", this.timeLog);\n            log.reportLog('connection manager begin connect');\n            let lastConnectId = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            //1. generate topic & jwt\n            var topic = this.currentTopic;\n            log.logDebug(`generate topic token: ${topic}`);\n            // crypto keypair\n            if (fromRestore) {\n                if (typeof lastConnectId !== 'undefined' && lastConnectId !== null) {\n                    log.logDebug(`read last connect id: ${lastConnectId}`);\n                    topic = lastConnectId.content;\n                }\n                var cachedSenderPublicKey = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                if (cachedSenderPublicKey) {\n                    this.connectedWalletPK = cachedSenderPublicKey.content;\n                    (0, log_1.logDebug)(`connectionManager connect() this.connectedWalletPK : ${this.connectedWalletPK}`);\n                }\n                log.reportLog('connection manager do restore connection');\n            }\n            if (fromRestore) {\n                // recovery from cache\n                try {\n                    const keyPairInfo = this.getCachedCryptoKeyPair();\n                    if (keyPairInfo) {\n                        this.crypto = new crypto_1.SessionCrypto(keyPairInfo);\n                    }\n                }\n                catch (error) {\n                    log.logError('get crypto key pair from cache failed');\n                    log.reportEvent(report_1.OKXReportType.LOG, 'cache_fail', 'cache failed');\n                    this.connectStorage.clearCache();\n                    throw new Error('crypto cache failed');\n                }\n            }\n            log.logDebug(`use crypto client id: ${this.crypto.stringifyKeypair().publicKey}`);\n            // cache topic\n            this.connectStorage.saveContent(topic, storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            var jwtToken = yield this.makeJWT(topic);\n            log.logDebug(`generate jwt token: ${jwtToken}`);\n            this.connectStorage.saveContent(jwtToken, 'jwt');\n            return new Promise((resolve, reject) => {\n                // 1. when websocket opened\n                this.connector.onOpen(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug(`1. connector on open`);\n                    log.reportLog('1. connect ws open');\n                    const timeOne = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---open->\", timeOne - this.timeLog);\n                    //2. send jwt to login\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when login');\n                            log.reportLog('2. connect login failed');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // throw error\n                            reject(error);\n                        }\n                        //3. send subscribe\n                        this.refreshPackageId();\n                        this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                            // ack\n                            if (rsp && rsp.error) {\n                                log.logError('failed when subscribe');\n                                log.reportLog('3. connect subscribe failed');\n                                yield this.connector.disconnect();\n                                var error = new Error();\n                                error.message = rsp.error.message;\n                                error.name = rsp.error.code.toString();\n                                // throw error\n                                reject(error);\n                            }\n                            this.refreshPackageId();\n                            log.logDebug(`4. subscribe callback then send fetch: ${this.packageId}`);\n                            log.reportLog('4. subscribe callback then send fetch');\n                            const timeF = new Date().getTime();\n                            (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n                            // 4. fetch messages\n                            yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                            // 5. split init\n                            log.logDebug(`5. splitmanager init: ${this.packageId}`);\n                            log.reportLog('5. splitmanager init');\n                            yield this.splitManager.init(this.sendRaw.bind(this));\n                            resolve();\n                        }));\n                        log.logDebug(`3. login callback then send subscribe: ${this.packageId}`);\n                        log.reportLog('3. connect subscribe failed');\n                        const timeTh = new Date().getTime();\n                        (0, log_1.logDebug)(\"ConnectTime---login callback->\", timeTh - this.timeLog);\n                        yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                            log.logDebug('CONNECT: reconnect before send');\n                            yield this.connector.connect()\n                                .catch((err) => {\n                                (0, log_1.logDebug)('ConnectionManager connect error', err);\n                                reject(err);\n                            });\n                        }), {\n                            id: this.packageId.toString(),\n                            jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                            method: commands_1.CONNECT_METHOD_SUB,\n                            params: {\n                                topic: topic\n                            }\n                        });\n                    }));\n                    log.logDebug(`2. login called`);\n                    log.reportLog('2. connection manager connect call login');\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        yield this.connector.connect()\n                            .catch((err) => {\n                            (0, log_1.logDebug)('ConnectionManager connect error', err);\n                            reject(err);\n                        });\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_LOGIN,\n                        params: {\n                            token: jwtToken\n                        }\n                    });\n                    // 4. listen when dapp back to front, receive wallet public key\n                    this.connector.addPackageParse((event) => {\n                        var _a;\n                        log.logDebug(`connect: parse package`);\n                        log.logDebug(event);\n                        if (!(\"params\" in event) || !(\"data\" in event[\"params\"])) {\n                            this.parsePackage(event, true);\n                            return;\n                        }\n                        let rawMsg = (_a = event.params.data) === null || _a === void 0 ? void 0 : _a.message;\n                        if (typeof rawMsg !== 'undefined') {\n                            rawMsg = rawMsg.replace(/'/g, '\"');\n                            let parsedMessage = (0, safejson_1.safeJsonParse)(rawMsg);\n                            if (typeof parsedMessage !== 'string' && \"clientId\" in parsedMessage && parsedMessage.clientId && parsedMessage.clientId.length > 0) {\n                                this.connectedWalletPK = parsedMessage.clientId;\n                                log.logDebug(`this.connectedWalletPK  addPackageParse   ${this.connectedWalletPK}`);\n                                // exchange sender public key\n                                // cache wallet public key\n                                this.connectStorage.saveContent(this.connectedWalletPK, storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                                // cache crypto keypair\n                                this.saveCryptoKeyPair(this.crypto.stringifyKeypair());\n                            }\n                        }\n                        // ignore receive echo\n                        this.parsePackage(event, event.method === commands_1.CONNECT_METHOD_RECEIVE);\n                    });\n                }));\n                this.connector.connect().catch((err) => {\n                    (0, log_1.logDebug)('ConnectionManager connect error', err);\n                    reject(err);\n                });\n            });\n        });\n    }\n    disconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            yield this.connector.disconnect();\n            log.reportLog('connect disconnect');\n            //clean cached topic\n            //如果是恢复连接，就不清理解密public key\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            if (!fromRestore) {\n                this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                this.connectedWalletPK = '';\n                (0, log_1.logDebug)(`connectionManager disconnect() this.connectedWalletPK : ${this.connectedWalletPK}`);\n            }\n        });\n    }\n    updateProtocolVersion(topic, protocolVersion) {\n        this.splitManager.updateTopicSenderVersion(topic, protocolVersion);\n    }\n    addListener(event, success, fail) {\n        this.connector.addListener((0, safejson_1.safeJsonStringify)(event), (rawMsg) => {\n            rawMsg = rawMsg.replace(/'/g, '\"');\n            log.logDebug(`addListener ===> ${rawMsg}`);\n            if (typeof rawMsg !== 'undefined') {\n                var msgObj = (0, safejson_1.safeJsonParse)(rawMsg);\n                var msg = msgObj.message;\n                let result;\n                if (msg.trimStart().startsWith('{')) {\n                    result = msg;\n                }\n                else {\n                    if (msgObj.clientId && msgObj.clientId.length > 0) {\n                        this.connectedWalletPK = msgObj.clientId;\n                        this.connectStorage.saveContent(this.connectedWalletPK, storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                        log.logDebug(`this.connectedWalletPK  addListener   ${this.connectedWalletPK}`);\n                        log.logDebug(`this.cryptoKey  addListener   ${(0, utils_1.toHexString)(this.crypto.keyPair.publicKey)}`);\n                        // cache crypto keypair\n                        this.saveCryptoKeyPair(this.crypto.stringifyKeypair());\n                    }\n                    result = this.crypto.decrypt(msg, this.connectedWalletPK);\n                }\n                log.logDebug(`addListener ===> ${result}`);\n                return result;\n            }\n            return undefined;\n        }, success, fail, (inputDataObj) => {\n            // 判断获取是否是分包，如果是则返回合包结果，如果不是则继续\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(inputDataObj.message);\n                if (msgPlayloadObject) {\n                    let msgObject = {\n                        topicId: inputDataObj.topic,\n                        messageId: inputDataObj === null || inputDataObj === void 0 ? void 0 : inputDataObj.messageId,\n                        messageObject: msgPlayloadObject,\n                        publishedAt: inputDataObj === null || inputDataObj === void 0 ? void 0 : inputDataObj.publishedAt,\n                    };\n                    let msgResult = yield this.splitManager.onReceivedPackageCheck(msgObject);\n                    resolve(msgResult);\n                }\n                else {\n                    resolve({\n                        isSplitPackage: false,\n                    });\n                }\n            }));\n        });\n    }\n    sendRaw(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.logDebug(`message send =====> ${msg}`);\n            log.reportLog('connect send raw msg');\n            let message = msg;\n            log.logDebug(`message send =====encrypt message.length>>>> ${message.length}`);\n            // only one topic\n            let topic = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`message send =====topic>>>> ${topic === null || topic === void 0 ? void 0 : topic.content}`);\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                method: commands_1.CONNECT_METHOD_PUBLISH,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                params: {\n                    message: {\n                        topic: topic === null || topic === void 0 ? void 0 : topic.content,\n                        message: message,\n                        ttl: constants_1.OKXCONNECTOR_MESSAGE_TTL\n                    }\n                } // crypted\n            };\n            this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                // ack\n                if (rsp && rsp.error) {\n                    log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                }\n                else if (rsp && !rsp.error) {\n                    log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                }\n            }));\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n            return this.packageId;\n        });\n    }\n    sendEncryptedMsg(topic_1, encryptedMsg_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, encryptedMsg, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL) {\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                method: commands_1.CONNECT_METHOD_PUBLISH,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                params: {\n                    message: {\n                        topic: topic,\n                        message: encryptedMsg,\n                        ttl: ttl\n                    }\n                } // crypted\n            };\n            this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                // ack\n                if (rsp && rsp.error) {\n                    log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                }\n                else if (rsp && !rsp.error) {\n                    log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                }\n            }));\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    send(msg_1) {\n        return __awaiter(this, arguments, void 0, function* (msg, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL) {\n            // make send msg payload\n            log.logDebug(`message send =====> ${msg}`);\n            log.reportLog('connect send msg');\n            if (!this.isWalletPKReady()) {\n                // channel not ready\n                throw new Error('connection not finish');\n            }\n            let message = this.crypto.encrypt(msg, this.connectedWalletPK);\n            log.logDebug(`message send =====encrypt message.length>>>> ${message.length}`);\n            log.reportEvent(report_1.OKXReportType.LOG, 'msg_size', message.length.toString());\n            // only one topic\n            let topic = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`message send =====topic>>>> ${topic === null || topic === void 0 ? void 0 : topic.content}`);\n            // before send message check split\n            yield this.splitManager.sendSplitPackages(topic === null || topic === void 0 ? void 0 : topic.content, message, this.sendEncryptedMsg.bind(this), this.sendRaw.bind(this));\n            // await this.sendEncryptedMsg(topic?.content, message, ttl)\n            // this.refreshPackageId()\n            // const payload : ConnectPayloadReq = {\n            //    id : this.packageId.toString(),\n            //    method: CONNECT_METHOD_PUBLISH,\n            //    jsonrpc: CONNECT_JSONRPC_VER,\n            //    params: {\n            //       message: {\n            //          topic: topic?.content,\n            //          message: message,\n            //          ttl: ttl\n            //       }\n            //    } // crypted\n            // }\n            // this.events.once(this.packageId.toString(), async (rsp:ConnectPayloadRsp)=>{\n            //    // ack\n            //    if (rsp && rsp.error) {\n            //       log.logError(`@${new Date().toUTCString()} >>> failed when send msg`)\n            //    } else if ( rsp && !rsp.error) {\n            //       log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`)\n            //    }\n            // })\n            // await this.connector.send(async ()=>{\n            //    log.logDebug('CONNECT: reconnect before send')\n            //    return await this.connector.connect();\n            // }, payload)\n            return this.packageId;\n        });\n    }\n    sendACK(msgId_1, success_1) {\n        return __awaiter(this, arguments, void 0, function* (msgId, success, reason = undefined) {\n            if (success === true) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    result: true\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n            else if (reason) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    error: {\n                        code: reason.code, //int\n                        message: reason.message\n                    }\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    // send receive\n    sendReceive(msgId, messageId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECEIVE,\n                params: {\n                    data: {\n                        messageId: messageId,\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    // send receive\n    // 1. fetch all \n    // 2. send back receive\n    // 3. check has more, if so, repeat from 1st step\n    sendFetchAndConsumeMessages(msgId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(msgId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic == topic) {\n                                let messageId = msg.messageId;\n                                log.reportLog('5. get fetch result');\n                                // fetch result receive control\n                                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(msg.message);\n                                if (msgPlayloadObject) {\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                    log.logDebug('skip receive');\n                                }\n                                else {\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                    // send receive command to relay server\n                                    this.refreshPackageId();\n                                    yield this.sendReceive(this.packageId.toString(), messageId, topic);\n                                }\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            log.reportLog('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_FETCHMSG,\n                params: {\n                    data: {\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    cleanCache() {\n        log.reportLog('connection cache clean called');\n        this.connectStorage.clearCache();\n    }\n    saveSessionContent(key, data) {\n        if (!data) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(data);\n        this.connectStorage.encryptStoreMsg(jsonData, storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n    }\n    getSessionContent(key) {\n        try {\n            let jsonStr = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n            if (jsonStr) {\n                let object = (0, safejson_1.safeJsonParse)(jsonStr);\n                return object;\n            }\n        }\n        catch (error) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        return undefined;\n    }\n    getCurrentConnectionReady() {\n        let cryptoKeyReady = false;\n        try {\n            const cryptoKeyPair = this.getCachedCryptoKeyPair();\n            if (cryptoKeyPair) {\n                cryptoKeyReady = true;\n            }\n        }\n        catch (error) {\n            log.logError('check connection ready failed');\n        }\n        return this.isWalletPKReady() && cryptoKeyReady;\n    }\n    getCryptoKeyEnable() {\n        let cryptoKeyReady = false;\n        try {\n            const cryptoKeyPair = this.getCachedCryptoKeyPair();\n            if (cryptoKeyPair) {\n                cryptoKeyReady = true;\n            }\n        }\n        catch (error) {\n            log.logError('check connection ready failed');\n        }\n        return cryptoKeyReady;\n    }\n}\nexports.ConnectionManager = ConnectionManager;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionSplitPackages = void 0;\nconst storageconstants_1 = require(\"./storageconstants\");\nconst localforage_1 = __importDefault(require(\"localforage\"));\nconst utils_1 = require(\"../utils/utils\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst ConnectionSplitSupportedVersionLimit = 2;\nconst ConnectionSplitSupportedSizeLimit = 63000;\n// test\n//  const ConnectionSplitSupportedSizeLimit = 500\nconst ConnectionReceiveKey = 'ConnectionReceiveKey';\nconst ConnectionSendKey = 'ConnectionSendKey';\nconst ConnectionTopicVersionKey = 'ConnectionSenderVersionKey';\nclass ConnectionSplitPackages {\n    constructor(side) {\n        // 发送队列, 保存分片数据，需要断点续传发送，\n        this.splitMessageSendArray = new Map();\n        // 接收队列, 保存回包数据，需要冗余去重复\n        this.splitMessageReceivedArray = new Map();\n        // sender 版本校验缓存\n        this.splitMessageSenderVersionMap = new Map();\n        this.splitPackageCache = localforage_1.default.createInstance({\n            name: storageconstants_1.OKXCONNECTOR_STORAGE_PROTOCOL_CACHE + side\n        });\n    }\n    init(sendRawMsg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // 1. 恢复缓存\n            yield this.recoverFromCache();\n            //2. 缓存中发送队列重发\n            if (this.splitMessageSendArray.size > 0) {\n                for (const [topic, payloadList] of this.splitMessageSendArray.entries()) {\n                    for (let i = 0; i < payloadList.length;) {\n                        const payload = payloadList[i];\n                        try {\n                            // 尝试发送消息\n                            yield sendRawMsg((0, safejson_1.safeJsonStringify)(payload), topic);\n                            log.logDebug(`Successfully sent payload: ${(0, safejson_1.safeJsonStringify)(payload)} to topic: ${topic}`);\n                            // 成功后移除元素\n                            payloadList.splice(i, 1);\n                        }\n                        catch (error) {\n                            log.logError(`Failed to send payload: ${(0, safejson_1.safeJsonStringify)(payload)} to topic: ${topic}`, error);\n                            // 重试逻辑（最多重试 3 次）\n                            payload.retryCount = (payload.retryCount || 0) + 1;\n                            if (payload.retryCount > 3) {\n                                log.logError(`Payload failed after 3 retries: ${(0, safejson_1.safeJsonStringify)(payload)}`);\n                                payloadList.splice(i, 1); // 放弃重试，移除元素\n                            }\n                            else {\n                                i++; // 跳过当前元素，继续处理下一个\n                            }\n                        }\n                    }\n                }\n                yield this.syncCache();\n            }\n        });\n    }\n    tryParseMessageSplitPayload(message) {\n        var _a;\n        let result = undefined;\n        try {\n            if (message.trimStart().startsWith('{')) {\n                let messageObj = (0, safejson_1.safeJsonParse)(message);\n                if (messageObj\n                    && messageObj.protocol_version\n                    && messageObj.protocol_version >= 2) {\n                    let protocolMessageObject = messageObj;\n                    if (protocolMessageObject.package_group_id && ((_a = protocolMessageObject.package_group_id) === null || _a === void 0 ? void 0 : _a.length) > 0) {\n                        result = messageObj;\n                    }\n                }\n            }\n            else {\n                (0, log_1.logDebug)('not split packages');\n            }\n        }\n        catch (error) {\n            (0, log_1.logDebug)('not split packages');\n        }\n        return result;\n    }\n    updateTopicSenderVersion(topic, protocolVersion) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.splitMessageSenderVersionMap.set(topic, protocolVersion);\n            yield this.syncCache();\n            (0, log_1.logDebug)('get update topic sender version: ', topic, protocolVersion);\n        });\n    }\n    /**\n     * topic\n     * message 待发送的消息体\n     * sendMsg 正常发送消息的方法\n     * sendRawMsg 发送明文格式，即拆包消息的方法\n    */\n    sendSplitPackages(topic, message, sendMsg, sendRawMsg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // 1. 长度校验拆分子包\n            // 2. 确认连接协议最大支持版本\n            // 3. 分包缓存\n            // 4. 缓存包发送\n            // 5. ACK确认并清理缓存\n            if (!topic) {\n                log.logError('sendSplitPackages invalid topic');\n                return;\n            }\n            let senderVersion = this.splitMessageSenderVersionMap.get(topic);\n            let msgLength = message.length;\n            try {\n                if (msgLength < ConnectionSplitSupportedSizeLimit) {\n                    throw new Error(`no need to split (size:${msgLength})`);\n                }\n                if (!senderVersion || (senderVersion && senderVersion < ConnectionSplitSupportedVersionLimit)) {\n                    throw new Error(`version not support split (version: ${senderVersion})`);\n                }\n                const msg_parts = [];\n                let msg_part_length = ConnectionSplitSupportedSizeLimit;\n                for (let i = 0; i < message.length; i += msg_part_length) {\n                    if (i + msg_part_length < message.length) {\n                        msg_parts.push(message.slice(i, i + msg_part_length));\n                    }\n                    else {\n                        msg_parts.push(message.slice(i));\n                    }\n                }\n                let groupId = (0, utils_1.generateGroupId)();\n                let splitMessagePackages = msg_parts.map((msg, index) => {\n                    // make msg split parts\n                    let msgObj = {\n                        topicId: topic,\n                        protocol_version: ConnectionSplitSupportedVersionLimit,\n                        total_count: msg_parts.length,\n                        package_index: index,\n                        package_group_id: groupId,\n                        content: msg\n                    };\n                    return msgObj;\n                });\n                // save cache\n                this.mergePackageArray(true, splitMessagePackages);\n                // try send out\n                for (let i = 0; i < splitMessagePackages.length;) {\n                    const msgObj = splitMessagePackages[i];\n                    const payload = (0, safejson_1.safeJsonStringify)(msgObj);\n                    try {\n                        // 尝试发送消息\n                        yield sendRawMsg(payload, topic);\n                        log.logDebug(`Successfully sent payload: ${payload} to topic: ${topic}`);\n                        // 成功后移除元素\n                        splitMessagePackages.splice(i, 1);\n                    }\n                    catch (error) {\n                        log.logError(`Failed to send payload: ${payload} to topic: ${topic}`, error);\n                        // 重试逻辑（最多重试 3 次）\n                        msgObj.retryCount = (msgObj.retryCount || 0) + 1;\n                        if (msgObj.retryCount > 3) {\n                            log.logError(`Payload failed after 3 retries: ${payload}`);\n                            splitMessagePackages.splice(i, 1); // 放弃重试，移除元素\n                        }\n                        else {\n                            i++; // 跳过当前元素，继续处理下一个\n                        }\n                    }\n                }\n                // clean cache\n                this.splitMessageSendArray.set(topic, []);\n                yield this.syncCache();\n            }\n            catch (e) {\n                (0, log_1.logDebug)('send split packages no split');\n                (0, log_1.logDebug)(e);\n                yield sendMsg(topic, message);\n            }\n        });\n    }\n    onReceivedPackageCheck(payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // 1. merge 进入缓存\n            this.mergePackageArray(false, [payload]);\n            let completeMap = new Map();\n            let inputTopic = payload.topicId;\n            // 2. 返回检查结果,输出完整message结果\n            this.splitMessageReceivedArray.forEach((itemList, topic) => {\n                if (topic == payload.topicId) {\n                    itemList.forEach((item) => {\n                        if (item.messageObject.package_group_id) {\n                            let messageCache = completeMap.get(item.messageObject.package_group_id);\n                            if (!messageCache) {\n                                messageCache = new Array();\n                            }\n                            messageCache.push(item);\n                            completeMap.set(item.messageObject.package_group_id, messageCache);\n                        }\n                    });\n                }\n            });\n            (0, log_1.logDebug)('on received message, check message cache');\n            let checkResult = {\n                isSplitPackage: false,\n                // finalMessage: undefined,\n                // completeMessageIdList: undefined \n            };\n            if (payload.messageObject.package_group_id) {\n                checkResult.isSplitPackage = true;\n                let messageCache = completeMap.get(payload.messageObject.package_group_id);\n                // 判断是否收齐\n                if (messageCache === null || messageCache === void 0 ? void 0 : messageCache.length) {\n                    let index_check = new Set();\n                    messageCache.forEach((item) => {\n                        if (item.messageObject.package_index !== undefined) {\n                            index_check.add(item.messageObject.package_index);\n                        }\n                    });\n                    if (index_check.size == payload.messageObject.total_count) {\n                        // 满足条件，更新checkResult\n                        messageCache.sort((a, b) => {\n                            if ((a.messageObject.package_index || a.messageObject.package_index === 0)\n                                && (b.messageObject.package_index || b.messageObject.package_index === 0)) {\n                                return a.messageObject.package_index - b.messageObject.package_index;\n                            }\n                            else {\n                                return 0;\n                            }\n                        });\n                        let messageList = messageCache.reduce((msgList, item) => {\n                            msgList.push(item.messageObject.content);\n                            return msgList;\n                        }, []);\n                        let messageIdList = messageCache.reduce((msgIdList, item) => {\n                            msgIdList.push(item.messageId);\n                            return msgIdList;\n                        }, []);\n                        checkResult.isSplitPackage = true;\n                        checkResult.finalMessage = messageList.join('');\n                        checkResult.completeMessageIdList = messageIdList;\n                        // 清理缓存\n                        let receivedList = this.splitMessageReceivedArray.get(inputTopic);\n                        if (receivedList) {\n                            receivedList = receivedList.filter((item) => {\n                                return !messageIdList.includes(item.messageId);\n                            });\n                            this.splitMessageReceivedArray.set(inputTopic, receivedList);\n                        }\n                        yield this.syncCache();\n                    }\n                }\n            }\n            // 抛出，交给manager来发送receive\n            return checkResult;\n        });\n    }\n    /* -------------------------- */\n    /** private methods */\n    /* -------------------------- */\n    mergePackageArray(isSending, inputPayloadArray) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('append sending array');\n            if (isSending) {\n                let inputSendArray = inputPayloadArray;\n                let filtedArray = inputSendArray.filter((payload) => {\n                    let inputTopic = payload.topicId;\n                    let accept = true;\n                    let sendCacheArray = this.splitMessageSendArray.get(inputTopic);\n                    sendCacheArray === null || sendCacheArray === void 0 ? void 0 : sendCacheArray.forEach((cachedPayload) => {\n                        if (cachedPayload.package_group_id == payload.package_group_id\n                            && cachedPayload.total_count == payload.total_count\n                            && cachedPayload.package_index == payload.package_index) {\n                            accept = false;\n                        }\n                    });\n                    return accept;\n                });\n                if (filtedArray.length > 0) {\n                    let inputTopic = filtedArray[0].topicId;\n                    let sendArray = this.splitMessageSendArray.get(inputTopic);\n                    if (!sendArray) {\n                        sendArray = new Array();\n                    }\n                    sendArray = sendArray.concat(filtedArray);\n                    this.splitMessageSendArray.set(inputTopic, sendArray);\n                    (0, log_1.logDebug)('append sending array (after filted): ', sendArray);\n                }\n            }\n            else {\n                let inputReceiveArray = inputPayloadArray;\n                let filtedArray = inputReceiveArray.filter((payload) => {\n                    let inputTopic = payload.topicId;\n                    let accept = true;\n                    let receiveCacheArray = this.splitMessageReceivedArray.get(inputTopic);\n                    receiveCacheArray === null || receiveCacheArray === void 0 ? void 0 : receiveCacheArray.forEach((cachedPayload) => {\n                        if (cachedPayload.messageId == payload.messageId) {\n                            accept = false;\n                        }\n                    });\n                    return accept;\n                });\n                if (filtedArray.length > 0) {\n                    let inputTopic = filtedArray[0].topicId;\n                    let receiveArray = this.splitMessageReceivedArray.get(inputTopic);\n                    if (!receiveArray) {\n                        receiveArray = new Array();\n                    }\n                    receiveArray = receiveArray.concat(filtedArray);\n                    this.splitMessageReceivedArray.set(inputTopic, receiveArray);\n                    (0, log_1.logDebug)('append received array (after filted): ', receiveArray);\n                }\n            }\n        });\n    }\n    syncCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('sync split message cache');\n            yield this.splitPackageCache.setItem(ConnectionReceiveKey, this.splitMessageReceivedArray);\n            yield this.splitPackageCache.setItem(ConnectionSendKey, this.splitMessageSendArray);\n            yield this.splitPackageCache.setItem(ConnectionTopicVersionKey, this.splitMessageSenderVersionMap);\n        });\n    }\n    recoverFromCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // rec\n            let rec_array = yield this.splitPackageCache.getItem(ConnectionReceiveKey);\n            if (rec_array) {\n                this.splitMessageReceivedArray = rec_array;\n            }\n            else {\n                this.splitMessageReceivedArray = new Map();\n            }\n            //send\n            let send_array = yield this.splitPackageCache.getItem(ConnectionSendKey);\n            if (send_array) {\n                this.splitMessageSendArray = send_array;\n            }\n            else {\n                this.splitMessageSendArray = new Map();\n            }\n            // topic/version cach\n            let topic = yield this.splitPackageCache.getItem(ConnectionTopicVersionKey);\n            if (topic) {\n                this.splitMessageSenderVersionMap = topic;\n            }\n            else {\n                this.splitMessageSenderVersionMap = new Map();\n            }\n        });\n    }\n}\nexports.ConnectionSplitPackages = ConnectionSplitPackages;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectorState = exports.CONNECT_PROTOCOL_VER = exports.CONNECT_JSONRPC_VER = exports.OKXCONNECTOR_MESSAGE_TTL = exports.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE = exports.OKXCONNECTOR_WS_URL_LIST = exports.OKXCONNECTOR_WS_URL_IDX_KEY = exports.OKXCONNECTOR_WS_URL_3 = exports.OKXCONNECTOR_WS_URL_2 = exports.OKXCONNECTOR_WS_URL_1 = exports.EVENT_EMITTER_MAX_LISTENERS = exports.OKXCONNECTOR_PROTOCOL_VERSION = void 0;\nexports.OKXCONNECTOR_PROTOCOL_VERSION = 2;\nexports.EVENT_EMITTER_MAX_LISTENERS = 10;\nexports.OKXCONNECTOR_WS_URL_1 = \"wss://wsdexpri.okx.com/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_2 = \"wss://wsdexpri.okx.ac/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_3 = \"wss://wsdexpri.coinall.ltd/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_IDX_KEY = \"wuik\";\nexports.OKXCONNECTOR_WS_URL_LIST = [\n    exports.OKXCONNECTOR_WS_URL_1,\n    exports.OKXCONNECTOR_WS_URL_2,\n    exports.OKXCONNECTOR_WS_URL_3,\n];\nexports.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE = {\n    TIME_OUT: 3990,\n    CANCELED: 3991,\n    FINISHED: 3992,\n};\nexports.OKXCONNECTOR_MESSAGE_TTL = 300000;\n// --------------- JSON RPC ---------------\nexports.CONNECT_JSONRPC_VER = \"2.0\";\n// --------------- Protocol Version -------\nexports.CONNECT_PROTOCOL_VER = 2;\nexports.ConnectorState = {\n    InitState: 0,\n    Connecting: 1,\n    Connected: 2,\n    Disconnected: 3,\n    OnError: 4,\n};\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Engine = void 0;\nconst protocol_1 = require(\"../protocol\");\nconst constants_1 = require(\"./constants\");\nconst utils_1 = require(\"../utils\");\nconst iconnector_1 = require(\"../connector/iconnector\");\nconst connectionManager_1 = require(\"./connectionManager\");\nconst sessionUtils_1 = require(\"./sessionUtils\");\nconst wallet_info_1 = require(\"../protocol/connect/wallet-info\");\nclass Engine {\n    constructor(appName) {\n        this.connectors = [];\n        this.useConnector = undefined;\n        this.connectionManager = new connectionManager_1.ConnectionManager(appName);\n        this.addConnectionListener();\n    }\n    getConnector() {\n        if (this.useConnector) {\n            return this.useConnector;\n        }\n    }\n    setAccountChangeListener(accountChangeListener) {\n        this.accountChangeListener = accountChangeListener;\n        (0, utils_1.logDebug)(\"setAccountChangeListener: engine\", accountChangeListener);\n        for (const connector of this.connectors) {\n            connector.setAccountChangeListener(accountChangeListener);\n        }\n    }\n    registerConnector(connectors) {\n        this.connectors = connectors;\n        for (const connector of connectors) {\n            connector.setConnectionManager(this.connectionManager);\n        }\n    }\n    hasWsConnector() {\n        for (const connector of this.connectors) {\n            if (this.isWsConnector(connector)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    isWsConnector(connector) {\n        if (!connector)\n            return false;\n        return (connector.getTag() === iconnector_1.OKX_TG_WALLET\n            || connector.getTag() === iconnector_1.OKX_APP_WALLET);\n    }\n    isInjectedConnector(connector) {\n        if (!connector)\n            return false;\n        return connector.getTag() === iconnector_1.OKX_INJECT_WALLET;\n    }\n    universalConnect(request, sessionConfig, connectInfoAndUrl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.addConnectionListener();\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b, _c, _d;\n                try {\n                    (0, utils_1.logDebug)(\"engine universalConnect request :\", JSON.stringify(request));\n                    (0, utils_1.logDebug)(\"engine universalConnect sessionConfig :\", JSON.stringify(sessionConfig));\n                    let universalRequest = [];\n                    request.forEach((item) => {\n                        let name = item.name;\n                        if (name.startsWith(\"requestAccounts\") || name.startsWith(\"ton\")) {\n                            universalRequest.push(item);\n                        }\n                    });\n                    (0, utils_1.logDebug)(\"engine universalConnect universalRequest :\", JSON.stringify(universalRequest));\n                    const connectInfo = this.connectionManager.getConnectInfo();\n                    const requestId = Date.now().toString();\n                    let openUniversalLink = (_a = sessionConfig.openUniversalUrl) !== null && _a !== void 0 ? _a : false;\n                    const universalConnectRequest = {\n                        protocolVer: Number(protocol_1.tonConnectSdkVersion),\n                        topic: connectInfo.channelId,\n                        clientId: connectInfo.clientId,\n                        requestId: requestId,\n                        dAppInfo: sessionConfig.dappInfo,\n                        requests: universalRequest,\n                        redirect: (_b = sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect) !== null && _b !== void 0 ? _b : \"none\"\n                    };\n                    const base64Encoded = (0, utils_1.encodeConnectParams)(universalConnectRequest);\n                    universalConnectRequest.redirect = (_c = sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect) !== null && _c !== void 0 ? _c : \"none\";\n                    (0, utils_1.logDebug)('engine universalConnect ==>>universalConnectRequest:', JSON.stringify(universalConnectRequest));\n                    var openOKXLink = \"\";\n                    // open app wallet\n                    if (openUniversalLink) {\n                        openOKXLink = (0, utils_1.getOKXLink)(universalConnectRequest, sessionConfig.useMini, sessionConfig.tmaReturnUrl);\n                        (0, utils_1.logDebug)('engine universalConnect ==>>openOKXLink:', openOKXLink);\n                    }\n                    const openMethod = () => {\n                        if (this.connectors.length == 1 && this.connectors[0].getTag() === iconnector_1.OKX_INJECT_WALLET) {\n                            return this.connectors[0].openWallet({\n                                connectRequest: universalConnectRequest\n                            });\n                        }\n                        else {\n                            if (sessionConfig.useMini) {\n                                return (0, utils_1.openOKXTMAWalletlinkWithFallback)(openOKXLink);\n                            }\n                            if ((0, utils_1.useShortLink)()) {\n                                return (0, utils_1.openOKXUniversalLink)(openOKXLink);\n                            }\n                            return (0, utils_1.openOKXDeeplinkWithFallback)(openOKXLink);\n                        }\n                    };\n                    (0, utils_1.logDebug)('engine universalConnect ==>>openOKXLink:', openOKXLink);\n                    const isIOS = (0, utils_1.isIos)();\n                    if (isIOS && openUniversalLink) {\n                        (0, utils_1.logDebug)(`engine universalConnect ==>>isIOS: ${isIOS}   openUniversalLink: ${openUniversalLink}`);\n                        openMethod();\n                    }\n                    this.addOnConnectResultListener((response) => {\n                        var _a, _b, _c, _d;\n                        try {\n                            this.addOnConnectResultListener(undefined);\n                            let connectResponse = response;\n                            if (connectResponse.method == \"connect\") {\n                                (0, utils_1.logDebug)(\"engin  universalConnect success connectResponse:>>>\", JSON.stringify(connectResponse));\n                                let namespaces = (0, sessionUtils_1.buildNameSpacesByConnectResponse)(connectResponse);\n                                if (namespaces) {\n                                    let walletName = undefined;\n                                    if (((_b = (_a = connectResponse.payload) === null || _a === void 0 ? void 0 : _a.responses) === null || _b === void 0 ? void 0 : _b[0]) && \"walletName\" in connectResponse.payload.responses[0]) {\n                                        walletName = connectResponse.payload.responses[0]['walletName'];\n                                    }\n                                    let appName = (_c = connectResponse.payload) === null || _c === void 0 ? void 0 : _c.wallet.appName;\n                                    var tag;\n                                    switch (appName) {\n                                        case wallet_info_1.OKXWalletName:\n                                            tag = iconnector_1.OKX_APP_WALLET;\n                                            break;\n                                        case wallet_info_1.OKXMiniWalletName:\n                                            tag = iconnector_1.OKX_TG_WALLET;\n                                            break;\n                                        case wallet_info_1.OKXInjectWalletName:\n                                            tag = iconnector_1.OKX_INJECT_WALLET;\n                                            break;\n                                    }\n                                    var connector = this.connectors.find((connector) => connector.getTag() === tag);\n                                    if (!connector) {\n                                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n                                    }\n                                    let session = Object.assign({ topic: connectInfo.channelId, sessionConfig: sessionConfig, namespaces: namespaces }, (connectResponse.payload && {\n                                        wallet: Object.assign(Object.assign({}, connectResponse.payload.wallet), { walletName: walletName })\n                                    }));\n                                    let methodsResponse = connectResponse.payload.responses.find(item => item.name === 'requestAccounts');\n                                    if (methodsResponse && methodsResponse.connectRequestMethods) {\n                                        session.signResponse = methodsResponse.connectRequestMethods;\n                                    }\n                                    (0, utils_1.logDebug)(\"engin  universalConnect success session:>>>\", JSON.stringify(session));\n                                    if (this.isWsConnector(connector)) {\n                                        (0, utils_1.logDebug)(\"engine update protocol version\");\n                                        this.connectionManager.updateProtocolVersion(connectInfo.channelId, connectResponse.payload.wallet.maxProtocolVersion);\n                                    }\n                                    resolve(session);\n                                    this.setUseConnector(connector);\n                                }\n                                else {\n                                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n                                }\n                            }\n                            else if (connectResponse.method == \"connect_error\" && ((_d = connectResponse.payload) === null || _d === void 0 ? void 0 : _d.code) != undefined) {\n                                throw new protocol_1.OKXConnectError(connectResponse.payload.code);\n                            }\n                        }\n                        catch (e) {\n                            reject(e);\n                        }\n                    });\n                    if (this.hasWsConnector()) {\n                        yield ((_d = this.connectionManager) === null || _d === void 0 ? void 0 : _d.disconnect(false));\n                        try {\n                            yield this.connectionManager.connect();\n                        }\n                        catch (e) {\n                            (0, utils_1.logDebug)('Engine universalConnect error', e);\n                            throw e;\n                        }\n                        (0, utils_1.logDebug)('engin  universalConnect ==>> connectInfoAndUrl:', connectInfoAndUrl);\n                        this.sendSession(base64Encoded);\n                    }\n                    if (!isIOS && openUniversalLink) {\n                        openMethod();\n                    }\n                    (0, utils_1.logDebug)('engin  universalConnect ==>> connectInfoAndUrl:', connectInfoAndUrl);\n                    if (connectInfoAndUrl) {\n                        const info = {\n                            connectRequest: universalConnectRequest,\n                            redirect: sessionConfig.redirect,\n                            tmaReturnUrl: sessionConfig.tmaReturnUrl,\n                        };\n                        (0, utils_1.logDebug)(\"universalConnect connectInfoAndUrl info :\", JSON.stringify(info));\n                        connectInfoAndUrl(info);\n                    }\n                }\n                catch (error) {\n                    (0, utils_1.logDebug)(\"Engine universalConnect catch error\", error);\n                    reject(error);\n                }\n            }));\n        });\n    }\n    addOnConnectResultListener(connectResultListener) {\n        for (const connector of this.connectors) {\n            if (this.isInjectedConnector(connector)) {\n                connector.setOnConnectResultListener(connectResultListener);\n            }\n        }\n        this.connectResultListener = connectResultListener;\n    }\n    openWallet(engineConnectInfo, connector) {\n        var _a;\n        if (connector) {\n            connector.openWallet(engineConnectInfo);\n        }\n        else {\n            (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.openWallet(engineConnectInfo);\n        }\n    }\n    send(request, requestAnswer, ttl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            return (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.send(request, requestAnswer, ttl);\n        });\n    }\n    clearData() {\n        var _a;\n        (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.clearData();\n    }\n    addDisconnectListener(disconnecter) {\n        var _a;\n        (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.addDisconnectListener(disconnecter);\n    }\n    saveSessionContent(key, data) {\n        this.connectionManager.saveSessionContent(key, data);\n    }\n    getSessionContent(key) {\n        var _a;\n        var session = this.connectionManager.getSessionContent(key);\n        if (session) {\n            var tag = \"\";\n            if (typeof session === \"object\") {\n                tag = (0, iconnector_1.getTagByappName)((_a = session.wallet) === null || _a === void 0 ? void 0 : _a.appName);\n            }\n            if (this.connectors.find((connector) => {\n                return connector.getTag() === tag;\n            })) {\n                return session;\n            }\n        }\n        return undefined;\n    }\n    setConnectConnector(wallet) {\n        var tag = (0, iconnector_1.getTagByappName)(wallet === null || wallet === void 0 ? void 0 : wallet.appName);\n        if (!tag)\n            return;\n        this.setUseConnector(this.connectors.find((connector) => {\n            return connector.getTag() === tag;\n        }));\n    }\n    setUseConnector(connector) {\n        this.useConnector = connector;\n        if (this.isWsConnector(connector)) {\n            connector.addConnectionListener();\n        }\n    }\n    // for es connect\n    setSessionConnectingListener(sessionConnectingListener) {\n        this.sessionConnectingListener = sessionConnectingListener;\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.restoreconnect(sessionInfo, onConnectResult));\n        });\n    }\n    restoreconnectFromTopic(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.isWsConnector(this.getConnector())) {\n                yield this.getConnector().restoreconnectFromTopic(topic);\n            }\n        });\n    }\n    getCurrentConnectionReady(namespaceKeys) {\n        var _a;\n        return !!((_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.getCurrentConnectionReady(namespaceKeys));\n    }\n    connectManagerDisconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            var _a;\n            yield ((_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.connectManagerDisconnect(fromRestore));\n        });\n    }\n    sendSession(sessionInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, utils_1.logDebug)('[Connect] sendSession called:', sessionInfo);\n            const requestId = Date.now().toString();\n            let request = {\n                method: 'session_info',\n                params: { protocolVersion: constants_1.CONNECT_PROTOCOL_VER, sessionInfo: sessionInfo }\n            };\n            yield this.connectionManager.sendRaw(JSON.stringify(Object.assign(Object.assign({}, request), { requestId: requestId })));\n        });\n    }\n    addConnectionListener() {\n        var _a;\n        (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.addListener(\"sdk_response\", (event, msg) => {\n            var jsonResponse = (0, utils_1.safeJsonParse)(msg);\n            (0, utils_1.logDebug)(`Engine ==>> addListener ==> success ==> ${jsonResponse}`);\n            if (jsonResponse.method === 'connect' || jsonResponse.method === 'connect_error') {\n                if (this.connectResultListener) {\n                    this.connectResultListener(jsonResponse);\n                }\n            }\n            else if (jsonResponse.method === \"session_connecting\") {\n                (0, utils_1.logDebug)(\"Engine ==>> handleResponse_4  ===> sessionConnectingListener\");\n                if (this.sessionConnectingListener) {\n                    (0, utils_1.logDebug)(\"Engine ==>> handleResponse_4  ===> sessionConnectingListener not null\");\n                    this.sessionConnectingListener();\n                    this.sessionConnectingListener = undefined;\n                }\n            }\n        }, function () {\n        });\n    }\n}\nexports.Engine = Engine;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Storage = exports.Engine = exports.WalletConnectionManager = exports.ConnectionManager = exports.OKXWalletConnector = void 0;\nvar connect_1 = require(\"./connect\");\nObject.defineProperty(exports, \"OKXWalletConnector\", { enumerable: true, get: function () { return connect_1.OKXWalletConnector; } });\nvar connectionManager_1 = require(\"./connectionManager\");\nObject.defineProperty(exports, \"ConnectionManager\", { enumerable: true, get: function () { return connectionManager_1.ConnectionManager; } });\nvar walletConnectionManager_1 = require(\"./walletConnectionManager\");\nObject.defineProperty(exports, \"WalletConnectionManager\", { enumerable: true, get: function () { return walletConnectionManager_1.WalletConnectionManager; } });\nvar engine_1 = require(\"./engine\");\nObject.defineProperty(exports, \"Engine\", { enumerable: true, get: function () { return engine_1.Engine; } });\nvar storage_1 = require(\"./storage\");\nObject.defineProperty(exports, \"Storage\", { enumerable: true, get: function () { return storage_1.Storage; } });\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MULTICODEC_ED25519_LENGTH = exports.MULTICODEC_ED25519_HEADER = exports.MULTICODEC_ED25519_BASE = exports.MULTICODEC_ED25519_ENCODING = exports.DID_METHOD = exports.DID_PREFIX = exports.DID_DELIMITER = exports.KEY_PAIR_SEED_LENGTH = exports.DATA_ENCODING = exports.JSON_ENCODING = exports.JWT_ENCODING = exports.JWT_DELIMITER = exports.JWT_IRIDIUM_TYP = exports.JWT_IRIDIUM_ALG = exports.JWTHeaderType = void 0;\nexports.generateKeyPair = generateKeyPair;\nexports.decodeJSON = decodeJSON;\nexports.encodeJSON = encodeJSON;\nexports.encodeIss = encodeIss;\nexports.decodeIss = decodeIss;\nexports.encodeSig = encodeSig;\nexports.decodeSig = decodeSig;\nexports.encodeData = encodeData;\nexports.decodeData = decodeData;\nexports.encodeJWT = encodeJWT;\nexports.decodeJWT = decodeJWT;\nexports.signJWT = signJWT;\nexports.verifyJWT = verifyJWT;\nconst ed25519 = __importStar(require(\"@stablelib/ed25519\"));\nconst safejson_1 = require(\"../utils/safejson\");\nconst utils_1 = require(\"../utils/utils\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst log = __importStar(require(\"../utils/log\"));\nconst stringUtils_1 = require(\"../utils/stringUtils\");\nexports.JWTHeaderType = \"dapp\";\nexports.JWT_IRIDIUM_ALG = \"EdDSA\";\nexports.JWT_IRIDIUM_TYP = \"JWT\";\nexports.JWT_DELIMITER = \".\";\nexports.JWT_ENCODING = \"base64url\";\nexports.JSON_ENCODING = \"utf8\";\nexports.DATA_ENCODING = \"utf8\";\nexports.KEY_PAIR_SEED_LENGTH = 32;\nexports.DID_DELIMITER = \":\";\nexports.DID_PREFIX = \"did\";\nexports.DID_METHOD = \"key\";\nexports.MULTICODEC_ED25519_ENCODING = \"base58btc\";\nexports.MULTICODEC_ED25519_BASE = \"z\";\nexports.MULTICODEC_ED25519_HEADER = \"K36\";\nexports.MULTICODEC_ED25519_LENGTH = 32;\nfunction generateKeyPair() {\n    // let local_seed = randomBytes(KEY_PAIR_SEED_LENGTH)\n    // return ed25519.generateKeyPairFromSeed(local_seed);\n    return tweetnacl_1.default.sign.keyPair();\n}\nfunction decodeJSON(str) {\n    return (0, safejson_1.safeJsonParse)((0, stringUtils_1.okxtoString)((0, stringUtils_1.okxfromString)(str, exports.JWT_ENCODING), exports.JSON_ENCODING));\n}\nfunction encodeJSON(val) {\n    return (0, stringUtils_1.okxtoString)((0, stringUtils_1.okxfromString)((0, safejson_1.safeJsonStringify)(val), exports.JSON_ENCODING), exports.JWT_ENCODING);\n}\nfunction encodeIss(publicKey) {\n    log.logDebug(`publicKey: ${(0, utils_1.toHexString)(publicKey)}`);\n    var publicKeyStr = (0, stringUtils_1.okxtoString)(publicKey, exports.MULTICODEC_ED25519_ENCODING);\n    return [exports.DID_PREFIX, exports.DID_METHOD, publicKeyStr].join(exports.DID_DELIMITER);\n}\nfunction decodeIss(issuer) {\n    const [prefix, method, multicodec] = issuer.split(exports.DID_DELIMITER);\n    if (prefix !== exports.DID_PREFIX || method !== exports.DID_METHOD) {\n        throw new Error(`Issuer must be a DID with method \"key\"`);\n    }\n    if (multicodec === undefined) {\n        throw new Error('multicodec is undefined');\n    }\n    const publicKey = (0, stringUtils_1.okxfromString)(multicodec, exports.MULTICODEC_ED25519_ENCODING);\n    if (publicKey === undefined || publicKey.length !== exports.MULTICODEC_ED25519_LENGTH) {\n        throw new Error(`Issuer must be a public key with length 32 bytes`);\n    }\n    return publicKey;\n}\n// ---------- Signature ----------------------------------------------- //\nfunction encodeSig(bytes) {\n    return (0, stringUtils_1.okxtoString)(bytes, exports.JWT_ENCODING);\n}\nfunction decodeSig(encoded) {\n    return (0, stringUtils_1.okxfromString)(encoded, exports.JWT_ENCODING);\n}\n// ---------- Data ----------------------------------------------- //\nfunction encodeData(params) {\n    return (0, stringUtils_1.okxfromString)([encodeJSON(params.header), encodeJSON(params.payload)].join(exports.JWT_DELIMITER), exports.DATA_ENCODING);\n}\nfunction decodeData(data) {\n    var _a, _b;\n    const params = (0, stringUtils_1.okxtoString)(data, exports.DATA_ENCODING).split(exports.JWT_DELIMITER);\n    const header = decodeJSON((_a = params[0]) !== null && _a !== void 0 ? _a : '{}');\n    const payload = decodeJSON((_b = params[1]) !== null && _b !== void 0 ? _b : '{}');\n    return { header, payload };\n}\n// ---------- JWT ----------------------------------------------- //\nfunction encodeJWT(params) {\n    return [encodeJSON(params.header), encodeJSON(params.payload), encodeSig(params.signature)].join(exports.JWT_DELIMITER);\n}\nfunction decodeJWT(jwt) {\n    var _a, _b, _c;\n    const params = jwt.split(exports.JWT_DELIMITER);\n    const header = decodeJSON((_a = params[0]) !== null && _a !== void 0 ? _a : '{}');\n    const payload = decodeJSON((_b = params[1]) !== null && _b !== void 0 ? _b : '{}');\n    const signature = decodeSig((_c = params[2]) !== null && _c !== void 0 ? _c : '{}');\n    const data = (0, stringUtils_1.okxfromString)(params.slice(0, 2).join(exports.JWT_DELIMITER), exports.DATA_ENCODING);\n    return { header, payload, signature, data };\n}\nfunction signJWT(sub_1, aud_1, ttl_1, keyPair_1) {\n    return __awaiter(this, arguments, void 0, function* (sub, aud, ttl, keyPair, iat = Math.floor(Date.now())) {\n        const header = { alg: exports.JWT_IRIDIUM_ALG, typ: exports.JWT_IRIDIUM_TYP };\n        const iss = encodeIss(keyPair.publicKey);\n        const exp = iat + ttl;\n        const act = \"authenticate user\";\n        const payload = { iss, sub, aud, act, iat, exp };\n        const data = encodeData({ header, payload });\n        // const signature = ed25519.sign(keyPair.secretKey, data);\n        log.logDebug(`get sec kp: ${keyPair.secretKey} {${keyPair.secretKey.length}}`);\n        const signature = tweetnacl_1.default.sign.detached(data, keyPair.secretKey);\n        return encodeJWT({ header, payload, signature });\n    });\n}\nfunction verifyJWT(jwt) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { header, payload, data, signature } = decodeJWT(jwt);\n        if (header.alg !== exports.JWT_IRIDIUM_ALG || header.typ !== exports.JWT_IRIDIUM_TYP) {\n            throw new Error(\"JWT must use EdDSA algorithm\");\n        }\n        const publicKey = decodeIss(payload.iss);\n        return ed25519.verify(publicKey, data, signature);\n    });\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCONNECTOR_JWT_TTL = exports.OKXCONNECTOR_JWT_WALLET_SIDE = exports.OKXCONNECTOR_JWT_SIDE = void 0;\nexports.OKXCONNECTOR_JWT_SIDE = \"wallet\";\nexports.OKXCONNECTOR_JWT_WALLET_SIDE = \"dapp\";\nexports.OKXCONNECTOR_JWT_TTL = 86400000;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.buildNameSpacesByConnectResponse = buildNameSpacesByConnectResponse;\nexports.buildRequestAccountNameSpacesByConnectResponse = buildRequestAccountNameSpacesByConnectResponse;\nexports.buildAccountNameSpaces = buildAccountNameSpaces;\nconst log_1 = require(\"../utils/log\");\nfunction buildNameSpacesByConnectResponse(connectResponse) {\n    let requestAccountNameSpaces = buildRequestAccountNameSpacesByConnectResponse(connectResponse);\n    return requestAccountNameSpaces;\n}\nfunction buildRequestAccountNameSpacesByConnectResponse(connectResponse) {\n    let result = {};\n    (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start connectResponse111>>', JSON.stringify(connectResponse));\n    let universalResponse = connectResponse.payload.responses.find(item => item.name === 'requestAccounts');\n    if (universalResponse && universalResponse.accounts) {\n        let filterAccount = [];\n        for (const item of universalResponse.accounts) {\n            if (item.namespace === \"ton\") {\n                if (item.data && item.data.ton_addr) {\n                    if (item.data.ton_addr.address && item.data.ton_addr.address.length > 0) {\n                        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start TON>>', JSON.stringify(item));\n                        filterAccount.push(item);\n                    }\n                }\n            }\n            else {\n                (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start other>>', JSON.stringify(item));\n                filterAccount.push(item);\n            }\n        }\n        universalResponse.accounts = filterAccount;\n    }\n    const tonAddress = connectResponse.payload.responses.find(item => item.name === 'ton_addr');\n    const tonProof = connectResponse.payload.responses.find(item => item.name === 'ton_proof');\n    if (tonAddress && !universalResponse) { //adapt tonsdk\n        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse adapt ton data >>');\n        let address = tonAddress.address;\n        address = 'ton:' + tonAddress.network + \":\" + address;\n        let data = {\n            ton_addr: tonAddress\n        };\n        if (tonProof) {\n            data.ton_proof = tonProof;\n        }\n        universalResponse = {\n            name: \"requestAccounts\",\n            accounts: [{\n                    namespace: 'ton',\n                    addresses: [address],\n                    methods: ['ton_sendTransaction'],\n                    extra: {},\n                    data: data,\n                }]\n        };\n    }\n    (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse end universalResponse>>>', JSON.stringify(universalResponse));\n    buildAccountNameSpaces(universalResponse.accounts, result);\n    return result;\n}\nfunction buildAccountNameSpaces(accounts, result) {\n    accounts.forEach(item => {\n        var chains = [];\n        var accounts = [];\n        item.addresses.forEach(addressItem => {\n            var addressArr = addressItem.split(\":\");\n            (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse addressArr>>', addressArr.length);\n            if (addressArr.length >= 3) {\n                let chain = addressArr.slice(0, 2).join(\":\");\n                chains.push(chain);\n                accounts.push(addressItem);\n                (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse chain:>>', chain, \"addressItem:\", addressItem);\n            }\n        });\n        if (item.data && item.data.ton_addr) {\n            item.data.ton_addr.name = 'ton_addr';\n        }\n        if (item.data && item.data.ton_proof) {\n            item.data.ton_proof.name = 'ton_proof';\n        }\n        result[item.namespace] = {\n            chains: chains,\n            accounts: accounts,\n            methods: item.methods,\n            extra: item.extra,\n            payload: item.data\n        };\n        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse result>>', JSON.stringify(result));\n    });\n}\n/*export function buildTonNameSpaceByConnectResponse(connectResponse: ConnectResponseSuccess): Namespaces | undefined {\n    const tonAddrItem: TonAddressItemReply = connectResponse.payload.responses.find(\n        item => item.name === 'ton_addr'\n    ) as TonAddressItemReply;\n\n    const tonProfItem: TonProofItemReply = connectResponse.payload.responses.find(\n        item => item.name === 'ton_proof'\n    ) as TonProofItemReply;\n\n    if (!tonAddrItem) {\n        return undefined\n    }\n\n    return {\n        NameSpaceKeyTON: {\n            chains: [tonAddrItem.network],\n            accounts: [],\n            methods: connectResponse.payload.wallet.features?.ton,\n            payload: {\n                tonAccount: {\n                    address: tonAddrItem.address,\n                    chain: tonAddrItem.network,\n                    walletStateInit: tonAddrItem.walletStateInit,\n                    publicKey: tonAddrItem.publicKey\n                },\n                tonProof: tonProfItem\n            }\n        }\n    }\n}*/\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Storage = void 0;\nconst storageconstants_1 = require(\"./storageconstants\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst utils_1 = require(\"../utils/utils\");\nconst utils_2 = require(\"../utils\");\nconst log = __importStar(require(\"../utils/log\"));\nconst utils_3 = require(\"../utils\");\nconst crypto_js_1 = require(\"crypto-js\");\nclass Storage {\n    constructor(subKey, beforeKey = undefined) {\n        const localStorage = (0, utils_1.resolveLocalStorage)();\n        // 0. check and upgrade beforeKey\n        // log.logDebug('------ update before cache ------')\n        // if (beforeKey) {\n        // this.checkAndUpgradeCache(beforeKey, subKey)\n        // }\n        // 1. load data from local storage\n        this.storeKey = '';\n        this.cipherIV = '';\n        this.subKey = subKey;\n        log.logDebug('--------get current local storage --------');\n        log.logDebug(localStorage);\n        this.synchronizedCache();\n    }\n    checkAndUpgradeCache(fromCacheKey, toCacheKey) {\n        if (fromCacheKey && fromCacheKey.length > 0 && toCacheKey && toCacheKey.length > 0) {\n            // 1. get all infos from from-cache-key\n            log.logDebug('--------get current local storage --------');\n            log.logDebug(localStorage);\n            const cacheStr = localStorage.getItem(Storage.cacheKey + fromCacheKey);\n            if (typeof cacheStr === \"undefined\" || cacheStr === null) {\n                log.logDebug(\"no pre cache content\");\n                return;\n            }\n            log.logDebug(cacheStr);\n            if ((cacheStr === null || cacheStr === void 0 ? void 0 : cacheStr.length) > 0) {\n                // 2. save to to-cache-key\n                log.logDebug(\"write in cache content: \", fromCacheKey, '->', toCacheKey);\n                localStorage.setItem(Storage.cacheKey + toCacheKey, cacheStr);\n                // 3. clean from item\n                log.logDebug(\"clean in cache content: \", fromCacheKey);\n                localStorage.removeItem(Storage.cacheKey + fromCacheKey);\n            }\n        }\n        else {\n            log.logDebug('no pre cache key:', fromCacheKey);\n        }\n    }\n    saveContent(content, key, id = '-') {\n        let item = {\n            id: id,\n            timestamp: Date.now().toString(),\n            content: content\n        };\n        this.saveItem(item, key);\n    }\n    saveItem(item, key) {\n        let localKey = Storage.cacheKey + this.subKey;\n        const localStorage = (0, utils_1.resolveLocalStorage)();\n        log.logDebug(this.cache);\n        log.logDebug(`get cache obj: ${this.cache}, ${key}, ${item}`);\n        this.cache[key] = item;\n        let totalCacheStr = (0, utils_2.safeJsonStringify)(this.cache);\n        log.logDebug(`STORAGE: ${key} @ ${this.cache}`);\n        localStorage.setItem(localKey, totalCacheStr);\n    }\n    getItem(key) {\n        log.logDebug(`STORAGE >> getItem: ${key} @ ${this.cache}`);\n        return this.cache[key];\n    }\n    synchronizedCache() {\n        const cacheStr = localStorage.getItem(Storage.cacheKey + this.subKey);\n        if (typeof cacheStr === \"undefined\" || cacheStr === null) {\n            log.logDebug(\"with no cache\");\n            this.cache = {};\n            return;\n        }\n        log.logDebug(cacheStr);\n        if ((cacheStr === null || cacheStr === void 0 ? void 0 : cacheStr.length) > 0) {\n            var cacheObj = (0, utils_2.safeJsonParse)(cacheStr);\n            this.cache = cacheObj;\n        }\n        log.logDebug(`get cache obj: ${this.cache}`);\n        if (typeof this.cache === 'undefined' || this.cache == null) {\n            this.cache = {};\n        }\n    }\n    getCachedPBKDF2InfoKey() {\n        var _a, _b, _c, _d;\n        const pwLen = 32;\n        const saltLen = 24;\n        if (this.storeKey.length > 0 && ((_a = this.cipherIV) === null || _a === void 0 ? void 0 : _a.length) > 0) {\n            return {\n                pw: this.storeKey,\n                iv: this.cipherIV\n            };\n        }\n        let salt = (_b = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGER_CRYPTO_SALT)) === null || _b === void 0 ? void 0 : _b.content;\n        if (!salt) {\n            salt = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(saltLen));\n            this.saveContent(salt, storageconstants_1.OKXCONNECTOR_STORAGER_CRYPTO_SALT);\n        }\n        let pw = (_c = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD)) === null || _c === void 0 ? void 0 : _c.content;\n        if (!pw) {\n            pw = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(pwLen));\n            this.saveContent(pw, storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD);\n        }\n        let cipherIV = (_d = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV)) === null || _d === void 0 ? void 0 : _d.content;\n        if (!cipherIV) {\n            // let ivBuffer = Buffer.from(nacl.randomBytes(16))\n            let ivBuffer = tweetnacl_1.default.randomBytes(16);\n            cipherIV = (0, utils_1.toHexString)(ivBuffer);\n            this.saveContent(cipherIV, storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV);\n        }\n        this.cipherIV = cipherIV;\n        this.storeKey = (0, crypto_js_1.PBKDF2)(pw, salt, { iterations: 10 }).toString();\n        return {\n            pw: this.storeKey,\n            iv: this.cipherIV\n        };\n    }\n    encryptStoreMsg(msg, key) {\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg start ${Date.now()}`);\n        let storeInfo = this.getCachedPBKDF2InfoKey();\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg mid ${Date.now()}`);\n        var result = crypto_js_1.AES.encrypt(msg, storeInfo.pw).toString();\n        this.saveContent(result, key);\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg end ${Date.now()}`);\n    }\n    getAndDecrypt(key) {\n        (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt start ${Date.now()}`);\n        let item = this.getItem(key);\n        if (item && item.content) {\n            let storeInfo = this.getCachedPBKDF2InfoKey();\n            (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt mid ${Date.now()}`);\n            let result = crypto_js_1.AES.decrypt(item.content, storeInfo.pw).toString(crypto_js_1.enc.Utf8);\n            (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt end ${Date.now()}`);\n            return result;\n        }\n        return null;\n    }\n    clearCache(key = undefined) {\n        if (key === undefined) {\n            // clean all\n            const localStorage = (0, utils_1.resolveLocalStorage)();\n            this.cache = {};\n            let localKey = Storage.cacheKey + this.subKey;\n            localStorage.setItem(localKey, '');\n        }\n        else {\n            let localKey = Storage.cacheKey + this.subKey;\n            const localStorage = (0, utils_1.resolveLocalStorage)();\n            log.logDebug(this.cache);\n            this.cache[key] = null;\n            let totalCacheStr = (0, utils_2.safeJsonStringify)(this.cache);\n            log.logDebug(`STORAGE: clean key ${key} @ ${this.cache}`);\n            localStorage.setItem(localKey, totalCacheStr);\n        }\n    }\n}\nexports.Storage = Storage;\nStorage.cacheKey = 'OKXStorageKey';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCONNECTOR_STORAGE_PROTOCOL_CACHE = exports.OKXCONNECTOR_STORAGE_CIPHER_METHOD = exports.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV = exports.OKXCONNECTOR_STORAGER_CRYPTO_SALT = exports.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD = exports.OKXCONNECTOR_TON_KEY = exports.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE = exports.OKXCONNECTOR_TOKEN_CACHE = exports.OKXCONNECTOR_JWT_KEY = exports.OKXCONNECTOR_SESSION_PREFIX_KEY = exports.OKXCONNECTOR_CRYPTO_KEY = exports.OKXCONNECTOR_CACHE_KEY_DAPP = exports.OKXCONNECTOR_CACHE_KEY = void 0;\nexports.OKXCONNECTOR_CACHE_KEY = \"ck\";\nexports.OKXCONNECTOR_CACHE_KEY_DAPP = \"ck_dapp\";\nexports.OKXCONNECTOR_CRYPTO_KEY = \"cck_k\";\nexports.OKXCONNECTOR_SESSION_PREFIX_KEY = \"cspk_\";\nexports.OKXCONNECTOR_JWT_KEY = \"cjk_k\";\nexports.OKXCONNECTOR_TOKEN_CACHE = \"ct\";\nexports.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE = \"csp\";\nexports.OKXCONNECTOR_TON_KEY = \"OKXStorage_ctc\";\nexports.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD = \"scp\";\nexports.OKXCONNECTOR_STORAGER_CRYPTO_SALT = \"scs\";\nexports.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV = \"scpc\";\nexports.OKXCONNECTOR_STORAGE_CIPHER_METHOD = \"aes-256-cbc\";\nexports.OKXCONNECTOR_STORAGE_PROTOCOL_CACHE = 'okx_connect_split_cache_key';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletConnectionManagerEvent = exports.WalletConnectionManagerTopicInfoCacheKey = void 0;\nexports.WalletConnectionManagerTopicInfoCacheKey = \"wcmtic\";\nexports.WalletConnectionManagerEvent = {\n    RECEIVE_REQUEST: \"payload\"\n};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletConnectionManager = void 0;\nconst connect_1 = require(\"./connect\");\nconst commands_1 = require(\"./commands\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst jwtconstants_1 = require(\"./jwtconstants\");\nconst constants_1 = require(\"./constants\");\nconst walletConnectionConstants_1 = require(\"./walletConnectionConstants\");\nconst connectionSplitPackages_1 = require(\"./connectionSplitPackages\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils/utils\");\nconst crypto_1 = require(\"../crypto/crypto\");\nconst jwt_1 = require(\"./jwt\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst utils_2 = require(\"../utils\");\nclass WalletConnectionManager {\n    constructor() {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.communicateEvents = new eventemitter3_1.EventEmitter();\n        this.splitManager = new connectionSplitPackages_1.ConnectionSplitPackages('wallet');\n        log.logDebug('connect manager construct');\n        // local storage\n        this.connectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n        this.jwtKeyPair = this.getCachedJWTKeyPair();\n        this.saveJWTKeyPair(this.jwtKeyPair);\n        // wss connection\n        this.connector = new connect_1.OKXWalletConnector(constants_1.OKXCONNECTOR_WS_URL_1);\n        this.packageId = Date.now();\n        // connection state\n        this.sessionCryptoInfoMap = new Map();\n        // log.logDebug(`this.connectedWalletPK  constructor   ${this.connectedWalletPK}`)\n        this.inLogin = false;\n        this.isLogined = false;\n    }\n    refreshPackageId(offset = 0) {\n        let nowDate = Date.now() + offset;\n        if (nowDate == this.packageId) {\n            this.packageId = nowDate + 1;\n        }\n        this.packageId = nowDate;\n    }\n    saveCryptoKeyPair(topicId, keyPair) {\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(keyPair);\n        // encrypt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_CRYPTO_KEY + topicId);\n    }\n    getCachedCryptoKeyPair(topicId) {\n        // decrypt kp\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_CRYPTO_KEY + topicId);\n        const content = kp;\n        if (typeof content == 'string') {\n            log.logDebug('get cached crypto key:');\n            log.logDebug(content);\n            let keyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            return keyPairInfo;\n        }\n        else {\n            this.connectStorage.clearCache();\n        }\n        return null;\n    }\n    saveJWTKeyPair(keyPair) {\n        var strkeyPair = {\n            publicKey: (0, utils_1.toHexString)(keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(keyPair.secretKey)\n        };\n        log.logDebug('save jwt kp');\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(strkeyPair);\n        log.logDebug(cacheInfo);\n        // encrypt jwt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        log.logDebug('after save jwt kp');\n    }\n    getCachedJWTKeyPair() {\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            // TODO: decrypt jwt kp\n            log.logDebug('get cached jwt kp:');\n            log.logDebug(content);\n            let strKeyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            log.logDebug('save jwt kp');\n            log.logDebug(strKeyPairInfo);\n            var keyPair = {\n                publicKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.publicKey),\n                secretKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.secretKey)\n            };\n            return keyPair;\n        }\n        else {\n            return (0, jwt_1.generateKeyPair)();\n        }\n    }\n    isTopicPublicKeyExist(topicId) {\n        log.logDebug(`isTopicPublicKeyExist  ===> ${topicId}`);\n        return this.sessionCryptoInfoMap.get(topicId);\n    }\n    makeJWT(timestampStr) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, jwt_1.signJWT)(timestampStr, jwtconstants_1.OKXCONNECTOR_JWT_WALLET_SIDE, jwtconstants_1.OKXCONNECTOR_JWT_TTL, // 24h\n            this.jwtKeyPair);\n        });\n    }\n    parseInternalMsg(internalMsg) {\n        try {\n            let internalObj = (0, safejson_1.safeJsonParse)(internalMsg);\n            let origin = internalObj['ivur-igbfft-ptjip'];\n            if (origin && origin.length > 0) {\n                let originContent = (0, utils_2.base64decode)(origin, true);\n                return originContent.toString();\n            }\n        }\n        catch (error) {\n            log.logError('parse internal msg', error);\n        }\n    }\n    updateClientId(topic, clientId) {\n        let sessionInfo = this.sessionCryptoInfoMap.get(topic);\n        (0, log_1.logDebug)('updateClientId', sessionInfo, topic, clientId);\n        if (sessionInfo && clientId && clientId.length > 0) {\n            if (sessionInfo.cid) {\n                // check\n                let lastCheck = (0, utils_1.getLastSixMd5Hash)(clientId);\n                if (sessionInfo.cid == lastCheck) {\n                    sessionInfo.dappPublicKey = clientId;\n                }\n                else {\n                    log.logError('cid check failed', sessionInfo, topic, clientId);\n                }\n            }\n            else {\n                sessionInfo.dappPublicKey = clientId;\n            }\n            // \n            this.syncCacheSessionInfo();\n        }\n        return false;\n    }\n    parsePackage(topic_1, input_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, input, ignoreACK = false) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s;\n            this.events.emit(input.id, input);\n            // emit event\n            let sessionInfo = this.sessionCryptoInfoMap.get(topic);\n            log.logDebug('get sessionInfo for decrypt topic:', topic);\n            log.logDebug('get sessionInfo for decrypt:', input.id, topic, sessionInfo, this.sessionCryptoInfoMap);\n            let ignoreReceive = false;\n            if (sessionInfo && input.params.data) {\n                if ((_a = input.params.data) === null || _a === void 0 ? void 0 : _a.message) {\n                    // try parse internal message\n                    if ((_b = input.params.data) === null || _b === void 0 ? void 0 : _b.isInternalData) {\n                        let inner_message = (_c = input.params.data) === null || _c === void 0 ? void 0 : _c.message;\n                        let inner_topic = (_d = input.params.data) === null || _d === void 0 ? void 0 : _d.topic;\n                        let originContent = this.parseInternalMsg(inner_message);\n                        (0, log_1.logDebug)('parse internal origin: ', originContent);\n                        if (originContent && originContent.length > 0) {\n                            this.communicateEvents.emit(\"origin\", originContent, inner_topic);\n                        }\n                    }\n                    else {\n                        // try parse message base64\n                        try {\n                            let message = (_e = input.params.data) === null || _e === void 0 ? void 0 : _e.message;\n                            if (message.trimStart().startsWith('{')) {\n                                // 判断是否是分包数据\n                                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(message);\n                                if (msgPlayloadObject) {\n                                    (0, log_1.logDebug)('parse split msg object: ', msgPlayloadObject);\n                                    // 屏蔽后续的receive逻辑\n                                    ignoreReceive = true;\n                                    let msgObject = {\n                                        topicId: (_g = (_f = input.params) === null || _f === void 0 ? void 0 : _f.data) === null || _g === void 0 ? void 0 : _g.topic,\n                                        messageId: (_j = (_h = input.params) === null || _h === void 0 ? void 0 : _h.data) === null || _j === void 0 ? void 0 : _j.messageId,\n                                        messageObject: msgPlayloadObject,\n                                        publishedAt: (_l = (_k = input.params) === null || _k === void 0 ? void 0 : _k.data) === null || _l === void 0 ? void 0 : _l.publishedAt,\n                                    };\n                                    let checkResult = yield this.splitManager.onReceivedPackageCheck(msgObject);\n                                    if (checkResult.completeMessageIdList) {\n                                        checkResult.completeMessageIdList.forEach((msgId) => __awaiter(this, void 0, void 0, function* () {\n                                            // 发送批量receive\n                                            this.refreshPackageId();\n                                            yield this.sendReceive(this.packageId.toString(), msgId, topic);\n                                        }));\n                                    }\n                                    // 抛出finalmessage\n                                    if (checkResult.finalMessage) {\n                                        let message = sessionInfo.crypto.decryptWallet(checkResult.finalMessage, sessionInfo.dappPublicKey);\n                                        (0, log_1.logDebug)('<<< receive msg from split:', topic, message);\n                                        this.communicateEvents.emit(topic, message);\n                                    }\n                                }\n                                else {\n                                    let messageObj = (0, safejson_1.safeJsonParse)(message);\n                                    if (messageObj.method) {\n                                        if (messageObj.method == 'session_info') {\n                                            let sessionInfoString = messageObj.params.sessionInfo;\n                                            let base64Content = (0, utils_2.base64decode)(sessionInfoString, false);\n                                            (0, log_1.logDebug)(\"wallet connection manager requset base64Content:\", base64Content);\n                                            (0, log_1.logDebug)(\"base64Content:\" + base64Content);\n                                            let inner_connection = base64Content.toObject();\n                                            this.updateClientId(topic, inner_connection.clientId);\n                                        }\n                                        (0, log_1.logDebug)('<<< parse raw msg:', topic, messageObj);\n                                        this.communicateEvents.emit(topic, message);\n                                    }\n                                }\n                            }\n                            else {\n                                let message = sessionInfo.crypto.decryptWallet((_m = input.params.data) === null || _m === void 0 ? void 0 : _m.message, sessionInfo.dappPublicKey);\n                                (0, log_1.logDebug)('<<< receive msg:', topic, message);\n                                this.communicateEvents.emit(topic, message);\n                            }\n                        }\n                        catch (error) {\n                            let message = sessionInfo.crypto.decryptWallet((_o = input.params.data) === null || _o === void 0 ? void 0 : _o.message, sessionInfo.dappPublicKey);\n                            (0, log_1.logDebug)('<<< receive msg:', topic, message);\n                            this.communicateEvents.emit(topic, message);\n                        }\n                    }\n                }\n                else {\n                }\n            }\n            // send back ACK\n            if (!ignoreACK) {\n                yield this.sendACK(input.id, true);\n                if (topic && !ignoreReceive) {\n                    let inputObj = input;\n                    if ((_q = (_p = inputObj.params) === null || _p === void 0 ? void 0 : _p.data) === null || _q === void 0 ? void 0 : _q.messageId) {\n                        this.refreshPackageId();\n                        yield this.sendReceive(this.packageId.toString(), (_s = (_r = inputObj.params) === null || _r === void 0 ? void 0 : _r.data) === null || _s === void 0 ? void 0 : _s.messageId, topic);\n                    }\n                }\n            }\n        });\n    }\n    recovrySessionInfoFromCache() {\n        // get topic ids and keys from session\n        // WalletConnectionCryptoCacheMap\n        // {[topicId]: {cryptoKeypair: {publicKey:string, secretKey:string}, dappPublicKey:clientId}}\n        let jsonStr = this.connectStorage.getAndDecrypt(walletConnectionConstants_1.WalletConnectionManagerTopicInfoCacheKey);\n        log.logDebug('get cached sessionInfos:', jsonStr);\n        if (jsonStr) {\n            let cacheMap = (0, safejson_1.safeJsonParse)(jsonStr);\n            for (let topicId in cacheMap) {\n                let topicItem = cacheMap[topicId];\n                log.logDebug('make topicItem:', topicItem);\n                let cryptoItem = {\n                    topic: topicId,\n                    crypto: new crypto_1.SessionCrypto({\n                        publicKey: topicItem.cryptoKeyPair.publicKey,\n                        secretKey: topicItem.cryptoKeyPair.secretKey\n                    }),\n                    dappPublicKey: topicItem.dappPublicKey,\n                    cid: topicItem.cid\n                };\n                this.sessionCryptoInfoMap.set(topicId, cryptoItem);\n            }\n        }\n        log.logDebug('get cached sessionInfos map:', this.sessionCryptoInfoMap);\n    }\n    syncCacheSessionInfo() {\n        let cacheMap = {};\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            log.logDebug('for each Keys', topicId);\n            if (cryptoItem) {\n                cacheMap[topicId] = {\n                    cryptoKeyPair: cryptoItem.crypto.stringifyKeypair(),\n                    dappPublicKey: cryptoItem.dappPublicKey,\n                    cid: cryptoItem.cid\n                };\n            }\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(cacheMap);\n        log.logDebug('sync cache sessionInfos:', jsonData);\n        this.connectStorage.encryptStoreMsg(jsonData, walletConnectionConstants_1.WalletConnectionManagerTopicInfoCacheKey);\n    }\n    cacheSessionInfo(topic, sessionInfo, sync = true) {\n        let dappPublicKey = sessionInfo.dappPublicKey;\n        // 1. search dapp public related topic ids\n        let duplicatedTopics = [];\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            log.logDebug('for each Keys', topicId);\n            if (cryptoItem.dappPublicKey == dappPublicKey) {\n                log.logDebug('duplicated dapp public key:', topicId, dappPublicKey);\n                duplicatedTopics.push(topicId);\n            }\n        }\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            if (duplicatedTopics.includes(topicId)) {\n                this.sessionCryptoInfoMap.delete(topicId);\n            }\n        }\n        // discard useless topics\n        log.logDebug('cleaned connect session cache:', this.sessionCryptoInfoMap);\n        // 2. remove previous connected topic ids\n        // 3. write in current topic\n        this.sessionCryptoInfoMap.set(topic, sessionInfo);\n        // TODO: search domain info and then delete \n        log.logDebug('cache sessionInfo:', topic, sessionInfo, this.sessionCryptoInfoMap);\n        if (sync) {\n            this.syncCacheSessionInfo();\n        }\n        return duplicatedTopics;\n    }\n    updateProtocolVersion(topic, protocolVersion) {\n        this.splitManager.updateTopicSenderVersion(topic, protocolVersion);\n    }\n    // add and subscribe topic\n    appendTopic(topic, sessionPublicKey, cid) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('4.1. get append Topic:', topic);\n            // 1. check if connected\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                if (!this.isLogined) {\n                    var error = new Error();\n                    error.message = \"connection is not logined\";\n                    error.name = \"append error\";\n                    // throw error\n                    reject(error);\n                    return;\n                }\n                // 2. subscribe topic and session public key\n                let cryptoItem = {\n                    topic: topic,\n                    crypto: new crypto_1.SessionCrypto(),\n                    dappPublicKey: sessionPublicKey ? sessionPublicKey : \"\",\n                    cid: cid\n                };\n                let duplicatedTopics = this.cacheSessionInfo(topic, cryptoItem, false);\n                // make sure cache session info before subscribe\n                yield this.subscribeTopics(Array.from([topic]));\n                this.refreshPackageId();\n                log.logDebug(`5. subscribe callback then fetch append message: ${this.packageId}, ${topic}`);\n                log.reportLog(`5. subscribe callback then fetch append message`);\n                const timeF = new Date().getTime();\n                (0, log_1.logDebug)(\"Append --subscribe callback->\", timeF - this.timeLog);\n                resolve(duplicatedTopics);\n            }));\n        });\n    }\n    confirmAppendingTopics() {\n        this.syncCacheSessionInfo();\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.timeLog = new Date().getTime();\n            (0, log_1.logDebug)(\"[Wallet] ConnectTime---enter->\", this.timeLog);\n            log.reportLog('wallet connect connect called');\n            // 0. get cached topics and infos\n            let timestampStr = Date.now().toString();\n            var jwtToken = yield this.makeJWT(timestampStr);\n            log.logDebug(`generate jwt token: ${jwtToken}`);\n            this.connectStorage.saveContent(jwtToken, 'jwt');\n            this.recovrySessionInfoFromCache();\n            // 1.\n            return new Promise((resolve, reject) => {\n                // 1. when websocket opened\n                this.inLogin = true;\n                this.connector.onOpen(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug(`1. connector on open`);\n                    log.reportLog('1. wallet connect connect on open');\n                    const timeOne = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---open->\", timeOne - this.timeLog);\n                    //2. send jwt to login\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when login');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // throw error\n                            reject(error);\n                        }\n                        else {\n                            this.isLogined = true;\n                            resolve();\n                            // 3. subscribe cached topics\n                            log.logDebug('3. subscribe cached topics', this.sessionCryptoInfoMap);\n                            log.reportLog('3. wallet connect connect subscribe cached topics');\n                            if (this.sessionCryptoInfoMap.size > 0) {\n                                yield this.subscribeTopics(Array.from(this.sessionCryptoInfoMap.keys()));\n                            }\n                        }\n                    }));\n                    log.logDebug(`2. login called`);\n                    log.reportLog('2. wallet connect login called');\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        return yield this.connector.connect();\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_LOGIN,\n                        params: {\n                            token: jwtToken\n                        }\n                    });\n                }));\n                this.connector.connect().catch((err) => {\n                    (0, log_1.logDebug)('WalletConnectionManager connect error', err);\n                    reject(err);\n                });\n                // add callback\n                this.connector.addPackageParse((event) => {\n                    var _a, _b;\n                    log.logDebug(`connect: parse package`);\n                    log.logDebug(event);\n                    if (!(\"params\" in event) || !(\"data\" in event[\"params\"])) {\n                        this.parsePackage(\"\", event, true);\n                        return;\n                    }\n                    // ignore receive echo\n                    if ((_a = event.params.data) === null || _a === void 0 ? void 0 : _a.topic) {\n                        this.parsePackage((_b = event.params.data) === null || _b === void 0 ? void 0 : _b.topic, event, event.method === commands_1.CONNECT_METHOD_RECEIVE);\n                    }\n                });\n                // this.connector.addListener(safeJsonStringify(event), (rawMsg: string)=> {\n                //    rawMsg = rawMsg.replace(/'/g, '\"')\n                //    log.logDebug(`addListener ===> ${rawMsg}`)\n                //    if (typeof rawMsg !== 'undefined') {\n                //       var msgObj = safeJsonParse(rawMsg)\n                //       var msg = msgObj.message\n                //       let crypto = \n                //       var result = this.crypto.decrypt(msg, this.connectedWalletPK)\n                //       log.logDebug(`addListener ===> ${result}`)\n                //       return result\n                //    }\n                //    return undefined\n                // }, ()=>{\n                //    // emit success\n                // }, ()=>{\n                //    // emit fail\n                // })\n            });\n        });\n    }\n    // 获取对应topic session下的钱包公钥\n    // 在返回approve时需要填充到clientId字段中\n    getSessionPublicKey(topicId) {\n        if (this.isTopicPublicKeyExist(topicId)) {\n            let item = this.sessionCryptoInfoMap.get(topicId);\n            if (item) {\n                return (0, utils_1.toHexString)(item.crypto.keyPair.publicKey);\n            }\n        }\n        return undefined;\n    }\n    getCurrentCachedTopicIdList() {\n        return Array.from(this.sessionCryptoInfoMap.keys());\n    }\n    disconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            yield this.connector.disconnect();\n            //clean cached topic\n            //如果是恢复连接，就不清理解密public key\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            if (!fromRestore) {\n                this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n            }\n        });\n    }\n    sendRaw(msg, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (topic) {\n                yield this.sendMsg(topic, msg, constants_1.OKXCONNECTOR_MESSAGE_TTL);\n            }\n        });\n    }\n    sendMsg(topic, message, ttl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (message) {\n                this.refreshPackageId();\n                const payload = {\n                    id: this.packageId.toString(),\n                    method: commands_1.CONNECT_METHOD_PUBLISH,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    params: {\n                        message: {\n                            topic: topic,\n                            message: message,\n                            ttl: ttl\n                        }\n                    } // crypted\n                };\n                this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                    // ack\n                    if (rsp && rsp.error) {\n                        log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                    }\n                    else if (rsp && !rsp.error) {\n                        log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                    }\n                }));\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    send(topic_1, msg_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, msg, needPublicKey = false, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL, useRaw = false) {\n            var _a, _b;\n            // make send msg payload\n            log.logDebug(`message send =====> ${msg}`);\n            if (!this.isTopicPublicKeyExist(topic)) {\n                // channel not ready\n                throw new Error('connection not finish');\n            }\n            let connectedDappPK = (_a = this.sessionCryptoInfoMap.get(topic)) === null || _a === void 0 ? void 0 : _a.dappPublicKey;\n            let cryptoObject = (_b = this.sessionCryptoInfoMap.get(topic)) === null || _b === void 0 ? void 0 : _b.crypto;\n            let messageObj = undefined;\n            if (useRaw) {\n                messageObj = {\n                    message: msg,\n                };\n            }\n            let useCrypto = false;\n            if (cryptoObject && connectedDappPK && !useRaw) {\n                let message = cryptoObject.encryptWallet(msg, connectedDappPK);\n                useCrypto = true;\n                messageObj = {\n                    message: message,\n                };\n            }\n            if (messageObj) {\n                if (needPublicKey && cryptoObject) {\n                    messageObj.clientId = (0, utils_1.toHexString)(cryptoObject.keyPair.publicKey);\n                    // let privateKey = toHexString(cryptoObject.keyPair.secretKey)\n                    // log.logDebug(`message send use dapp publicKey =====> ${connectedDappPK}`)\n                    // log.logDebug(`message send use publicKey =====> ${messageObj.clientId}`)\n                    // log.logDebug(`message send use secretKey =====> ${privateKey}`)\n                }\n                let messageStr = (0, safejson_1.safeJsonStringify)(messageObj);\n                if (!useRaw && useCrypto) {\n                    yield this.splitManager.sendSplitPackages(topic, messageStr, this.sendMsg.bind(this), this.sendRaw.bind(this));\n                }\n                else {\n                    yield this.sendMsg(topic, messageStr, ttl);\n                }\n            }\n        });\n    }\n    sendACK(msgId_1, success_1) {\n        return __awaiter(this, arguments, void 0, function* (msgId, success, reason = undefined) {\n            if (success === true) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    result: true\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n            else if (reason) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    error: {\n                        code: reason.code, //int\n                        message: reason.message\n                    }\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    // send receive\n    sendReceive(msgId, messageId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECEIVE,\n                params: {\n                    data: {\n                        messageId: messageId,\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendUnsubscribe(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO: make disconnect payload\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), {\n                id: this.packageId.toString(),\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_UNSUB,\n                params: {\n                    topic: topic\n                }\n            });\n            // remove topicId\n            this.sessionCryptoInfoMap.delete(topic);\n            this.syncCacheSessionInfo();\n        });\n    }\n    // send receive\n    // 1. fetch all \n    // 2. send back receive\n    // 3. check has more, if so, repeat from 1st step\n    sendFetchAndConsumeMessages(msgId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(msgId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic == topic) {\n                                let messageId = msg.messageId;\n                                yield this.connector.getMsgPayloadFromHistory(msg);\n                                // send receive command to relay server\n                                this.refreshPackageId();\n                                yield this.sendReceive(this.packageId.toString(), messageId, topic);\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_FETCHMSG,\n                params: {\n                    data: {\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendBatchFetchAndConsumeMessages(packageId, topicIdList) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(packageId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic) {\n                                // send receive command to relay server\n                                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(msg.message);\n                                if (msgPlayloadObject) {\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                }\n                                else {\n                                    let messageId = msg.messageId;\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                    this.refreshPackageId(i);\n                                    yield this.sendReceive(this.packageId.toString(), messageId, msg.topic);\n                                }\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendBatchFetchAndConsumeMessages(this.packageId.toString(), topicIdList);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            log.reportLog('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: packageId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_BATCH_FETCHMSG,\n                params: {\n                    topics: topicIdList,\n                    withInternalData: true\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                yield this.connector.connect();\n            }), payload);\n        });\n    }\n    cleanCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.connectStorage.clearCache();\n        });\n    }\n    saveSessionContent(key, data) {\n        if (!data) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(data);\n        this.connectStorage.encryptStoreMsg(jsonData, storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n    }\n    getSessionContent(key) {\n        let jsonStr = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        if (jsonStr) {\n            let object = (0, safejson_1.safeJsonParse)(jsonStr);\n            return object;\n        }\n        return undefined;\n    }\n    // subscribe then fetch messages for each topics\n    subscribeTopics(topicIdList) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)(\"4. topicid list\", topicIdList);\n            log.reportLog(\"4. topicid list\");\n            this.refreshPackageId();\n            const timeF = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let finishCount = 0;\n                //3. send subscribe\n                for (let idx = 0; idx < topicIdList.length; ++idx) {\n                    let topicId = topicIdList[idx];\n                    this.refreshPackageId(idx);\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when subscribe');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // reject(error)\n                            finishCount += 1;\n                            if (finishCount == topicIdList.length) {\n                                resolve();\n                            }\n                        }\n                        this.refreshPackageId(idx);\n                        const timeF = new Date().getTime();\n                        (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n                        finishCount += 1;\n                        if (finishCount == topicIdList.length) {\n                            // 4. fetch messages\n                            log.logDebug(`5. send fetch msg: ${this.packageId}, ${topicId}`);\n                            yield this.sendBatchFetchAndConsumeMessages(this.packageId.toString(), topicIdList);\n                            // 5. split manager resend\n                            yield this.splitManager.init(this.sendRaw.bind(this));\n                            resolve();\n                        }\n                    }));\n                    log.logDebug(`3. login callback then send subscribe: ${this.packageId}, ${topicId}`);\n                    log.reportLog('3. login callback then send subscribe');\n                    const timeTh = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---login callback->\", timeTh - this.timeLog);\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        return yield this.connector.connect();\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_SUB,\n                        params: {\n                            topic: topicId\n                        }\n                    });\n                }\n            }));\n        });\n    }\n}\nexports.WalletConnectionManager = WalletConnectionManager;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AppwalletConnector = void 0;\nconst ws_connector_1 = require(\"./ws-connector\");\nconst iconnector_1 = require(\"./iconnector\");\nconst utils_1 = require(\"../utils\");\nconst constants_1 = require(\"../protocol/constants\");\nclass AppwalletConnector extends ws_connector_1.WsConnector {\n    constructor() {\n        super();\n        this.walletName = 'OKX App';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectApp';\n    }\n    getTag() {\n        return iconnector_1.OKX_APP_WALLET;\n    }\n    openWallet(engineConnectInfo) {\n        var _a;\n        if (engineConnectInfo && engineConnectInfo.connectRequest) {\n            let connectRequest = engineConnectInfo.connectRequest;\n            (0, utils_1.logDebug)(`appwallet-connector openwallet before useSHortLink engineConnectInfo.connectRequest JSON ${JSON.stringify(engineConnectInfo)}`);\n            if ((0, utils_1.useShortLink)()) {\n                let shortUniversalLink = (0, utils_1.getOKXLink)(connectRequest);\n                (0, utils_1.openOKXUniversalLink)(shortUniversalLink);\n            }\n            else {\n                (0, utils_1.logDebug)(`appwallet-connector openwallet else connectRequest ${connectRequest}`);\n                let appConnectEncodeParams = (0, utils_1.encodeConnectParams)(Object.assign(Object.assign({}, connectRequest), { redirect: (_a = engineConnectInfo.redirect) !== null && _a !== void 0 ? _a : \"none\" }));\n                let appDeepLink = (0, utils_1.getAppWalletDeepLink)(appConnectEncodeParams);\n                (0, utils_1.openOKXDeeplinkWithFallback)(appDeepLink);\n            }\n        }\n        else {\n            if ((0, utils_1.isOS)('android')) {\n                (0, utils_1.openDeeplinkWithFallback)(constants_1.stackDeepLink, () => { });\n            }\n            else {\n                (0, utils_1.openLinkBlank)(constants_1.standardUniversalLink);\n            }\n        }\n    }\n}\nexports.AppwalletConnector = AppwalletConnector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_TG_WALLET = exports.OKX_APP_WALLET = exports.OKX_INJECT_WALLET = void 0;\nexports.getTagByappName = getTagByappName;\nconst protocol_1 = require(\"../protocol\");\nconst wallet_info_1 = require(\"../protocol/connect/wallet-info\");\nexports.OKX_INJECT_WALLET = \"okx_inject_wallet\";\nexports.OKX_APP_WALLET = \"okx_app_wallet\";\nexports.OKX_TG_WALLET = \"okx_tg_wallet\";\nfunction getTagByappName(appName) {\n    var tag = '';\n    if (appName) {\n        switch (appName) {\n            case protocol_1.OKXWalletName:\n                tag = exports.OKX_APP_WALLET;\n                break;\n            case wallet_info_1.OKXMiniWalletName:\n                tag = exports.OKX_TG_WALLET;\n                break;\n            case wallet_info_1.OKXInjectWalletName:\n                tag = exports.OKX_INJECT_WALLET;\n        }\n    }\n    return tag;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OkxwalletInjectTonsdkConnector = exports.OkxwalletInjectConnector = exports.WsConnector = exports.TgwalletConnector = exports.InjectConnector = exports.getTagByappName = exports.OKX_INJECT_WALLET = exports.OKX_APP_WALLET = exports.OKX_TG_WALLET = exports.AppwalletConnector = void 0;\nvar appwallet_connector_1 = require(\"./appwallet-connector\");\nObject.defineProperty(exports, \"AppwalletConnector\", { enumerable: true, get: function () { return appwallet_connector_1.AppwalletConnector; } });\nvar iconnector_1 = require(\"./iconnector\");\nObject.defineProperty(exports, \"OKX_TG_WALLET\", { enumerable: true, get: function () { return iconnector_1.OKX_TG_WALLET; } });\nObject.defineProperty(exports, \"OKX_APP_WALLET\", { enumerable: true, get: function () { return iconnector_1.OKX_APP_WALLET; } });\nObject.defineProperty(exports, \"OKX_INJECT_WALLET\", { enumerable: true, get: function () { return iconnector_1.OKX_INJECT_WALLET; } });\nObject.defineProperty(exports, \"getTagByappName\", { enumerable: true, get: function () { return iconnector_1.getTagByappName; } });\nvar inject_connector_1 = require(\"./inject-connector\");\nObject.defineProperty(exports, \"InjectConnector\", { enumerable: true, get: function () { return inject_connector_1.InjectConnector; } });\nvar tgwallet_connector_1 = require(\"./tgwallet-connector\");\nObject.defineProperty(exports, \"TgwalletConnector\", { enumerable: true, get: function () { return tgwallet_connector_1.TgwalletConnector; } });\nvar ws_connector_1 = require(\"./ws-connector\");\nObject.defineProperty(exports, \"WsConnector\", { enumerable: true, get: function () { return ws_connector_1.WsConnector; } });\nvar okxwallet_inject_connector_1 = require(\"./okxwallet-inject-connector\");\nObject.defineProperty(exports, \"OkxwalletInjectConnector\", { enumerable: true, get: function () { return okxwallet_inject_connector_1.OkxwalletInjectConnector; } });\nvar okxwallet_inject_tonsdk_connector_1 = require(\"./okxwallet-inject-tonsdk-connector\");\nObject.defineProperty(exports, \"OkxwalletInjectTonsdkConnector\", { enumerable: true, get: function () { return okxwallet_inject_tonsdk_connector_1.OkxwalletInjectTonsdkConnector; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InjectConnector = void 0;\nconst protocol_1 = require(\"../protocol\");\nconst utils_1 = require(\"../utils\");\nconst iconnector_1 = require(\"./iconnector\");\nconst SolProvider_1 = require(\"../inject/provider/SolProvider\");\nconst wallet_info_1 = require(\"../protocol/connect/wallet-info\");\nconst AptosProvider_1 = require(\"../inject/provider/AptosProvider\");\nconst media_1 = require(\"../utils/media\");\nconst TONProvider_1 = require(\"../inject/provider/TONProvider\");\nconst inject_1 = require(\"../inject\");\nconst sui_provider_1 = require(\"../inject/provider/sui-provider\");\nconst utils_2 = require(\"../utils/utils\");\nconst sessionUtils_1 = require(\"../connect/sessionUtils\");\nconst btc_provider_1 = require(\"../inject/provider/btc-provider\");\nclass InjectConnector {\n    constructor() {\n        this.disconnectListener = [];\n        this.providerMap = new Map();\n        this.disconnectHandler = null;\n        this.walletName = \"\";\n        this.walletNameKey = '';\n        this.enable = true;\n        this.providerMap.set(protocol_1.NameSpaceKeyEip155, new inject_1.Eip155Provider());\n        this.providerMap.set(protocol_1.NameSpaceKeySOL, new SolProvider_1.SolProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeyAptos, new AptosProvider_1.AptosProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeyTON, new TONProvider_1.TONProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeySui, new sui_provider_1.SuiProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeyBtc, new btc_provider_1.BtcProvider());\n    }\n    setAccountChangeListener(accountChangeListener) {\n        (0, utils_1.logDebug)(\"setAccountChangeListener: inject\", accountChangeListener);\n        this.accountChangeListener = accountChangeListener;\n    }\n    setConnectionManager(connectionManager) {\n        this.connectionManager = connectionManager;\n    }\n    getInjectProvider(nameSpace) {\n        if (!nameSpace)\n            return;\n        for (const [mapKey, value] of this.providerMap.entries()) {\n            if (nameSpace.includes(mapKey)) {\n                return value;\n            }\n        }\n        return undefined;\n    }\n    openWallet(engineConnectInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c;\n            (0, utils_1.logDebug)(\"InjectEngine connect begin:\", JSON.stringify(engineConnectInfo));\n            if (!engineConnectInfo) {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR);\n            }\n            this.dappInfo = engineConnectInfo.connectRequest.dAppInfo;\n            var universalConnectRequest = engineConnectInfo.connectRequest;\n            try {\n                if (window && window.okxwallet) {\n                    if (universalConnectRequest.requests) {\n                        let requestAccounts = universalConnectRequest.requests\n                            .find(item => item.name === \"requestAccounts\");\n                        let version = yield window.okxwallet.getVersion();\n                        let result = {\n                            method: \"connect\",\n                            requestId: universalConnectRequest.requestId,\n                            payload: {\n                                wallet: {\n                                    platform: (_a = navigator.platform) !== null && _a !== void 0 ? _a : \"/\",\n                                    appName: wallet_info_1.OKXInjectWalletName,\n                                    appVersion: version !== null && version !== void 0 ? version : \"1.0.0\",\n                                    maxProtocolVersion: 1,\n                                },\n                                responses: []\n                            },\n                        };\n                        let responseItem = {\n                            name: \"requestAccounts\",\n                            accounts: [],\n                        };\n                        result.payload.responses.push(responseItem);\n                        yield this.disconnect();\n                        const required = (_b = requestAccounts.requiredNamespaces) !== null && _b !== void 0 ? _b : [];\n                        const optional = (_c = requestAccounts.optionalNamespaces) !== null && _c !== void 0 ? _c : [];\n                        let needPop = true;\n                        let signalChain = false;\n                        if (required.length + optional.length === 1 && !(0, media_1.isDevice)(\"mobile\")) {\n                            const singleItem = required.length === 1 ? required[0] : optional[0];\n                            const singleProvider = this.getInjectProvider(singleItem.namespace);\n                            // await singleProvider?.connect(singleItem,this.dappInfo)\n                            let singleConnectResult = yield (singleProvider === null || singleProvider === void 0 ? void 0 : singleProvider.singleConnect(singleItem, this.dappInfo));\n                            if (!!singleConnectResult) {\n                                signalChain = true;\n                                needPop = false;\n                            }\n                        }\n                        var accounts = yield this.getAccountByRequestWallets(needPop, false, signalChain, required, optional);\n                        if (accounts) {\n                            responseItem.accounts.push(...accounts);\n                            if (responseItem.accounts.length === 0) {\n                                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"connect connectAccounts is null\");\n                            }\n                        }\n                        else {\n                            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"connect requestWallets is null\");\n                        }\n                        if (this.connectResultListener) {\n                            if (this.disconnectHandler) {\n                                window.okxwallet.removeListener('disconnect', this.disconnectHandler);\n                            }\n                            this.disconnectHandler = () => {\n                                console.log(\"window.okxwallet disconnect:\");\n                                this.disconnectListener.forEach(listener => listener());\n                                this.disconnectListener = [];\n                            };\n                            window.okxwallet.on('disconnect', this.disconnectHandler);\n                            this.connectResultListener(result);\n                        }\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR);\n                }\n            }\n            catch (error) {\n                var code = protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR;\n                var message = '';\n                if (error instanceof protocol_1.OKXConnectError) {\n                    code = error.code;\n                    message = error.message;\n                }\n                if (this.connectResultListener) {\n                    this.connectResultListener({\n                        requestId: \"-1\",\n                        method: 'connect_error',\n                        payload: {\n                            code: code\n                        }\n                    });\n                }\n            }\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, utils_1.logDebug)('InjectEngine ==>> disconnect  okxwallet.disconnect()');\n            if (window.okxwallet) {\n                yield window.okxwallet.disconnect();\n                (0, utils_1.logDebug)('InjectEngine ==>> disconnect end okxwallet.disconnect()');\n            }\n        });\n    }\n    getRequestId() {\n        const requestId = Date.now().toString();\n        (0, utils_1.logDebug)('InjectEngine ==>> getRequestId ==>', requestId);\n        return requestId;\n    }\n    send(request, requestAnswer) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                (0, utils_1.logDebug)(\"InjectEngine send  > request:\", (0, utils_1.safeJsonStringify)(request));\n                let newRequest = request;\n                if (newRequest.method === 'disconnect') {\n                    yield this.disconnect();\n                    this.disconnectListener.forEach(listener => listener());\n                    this.disconnectListener = [];\n                    (_a = requestAnswer.onAck) === null || _a === void 0 ? void 0 : _a.call(requestAnswer);\n                    return;\n                }\n                yield this.checkWalletMatch();\n                const injectProvider = this.getInjectProvider((0, utils_1.getNamespaceKeyByChain)(newRequest.chainId));\n                if (injectProvider) {\n                    injectProvider.send(newRequest).then(result => {\n                        var _a;\n                        (0, utils_1.logDebug)(\"InjectEngine ==>> send > result:\", result);\n                        (_a = requestAnswer.resolve) === null || _a === void 0 ? void 0 : _a.call(requestAnswer, result);\n                    }).catch(error => {\n                        var _a;\n                        let code = error.code;\n                        if (code === 4001) {\n                            code = protocol_1.OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR;\n                        }\n                        let errorResponse = {\n                            requestId: this.getRequestId(),\n                            method: request.method,\n                            error: {\n                                code: code,\n                                message: error.message\n                            }\n                        };\n                        (0, utils_1.logDebug)(\"InjectEngine ==>> send > errorResponse:\", JSON.stringify(errorResponse));\n                        (_a = requestAnswer.resolve) === null || _a === void 0 ? void 0 : _a.call(requestAnswer, errorResponse);\n                    });\n                    return;\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"InjectEngine ==>> send  ===> error:\", error);\n                return Promise.reject(error);\n            }\n        });\n    }\n    checkWalletMatch() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                var _a;\n                let sessionLocal = (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getSessionContent('connectSession');\n                if (!sessionLocal) {\n                    reject(new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED));\n                }\n                this.restoreconnect(sessionLocal, (session) => {\n                    if (session) {\n                        resolve();\n                    }\n                    else {\n                        reject(new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED));\n                    }\n                });\n            });\n        });\n    }\n    checkAccountChanged() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                let sessionLocal = (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getSessionContent('connectSession');\n                if (!sessionLocal) {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED);\n                }\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged --sessionInfo:\", JSON.stringify(sessionLocal));\n                let requiredNamespaces = this.getRequireNameSpaceFromSession(sessionLocal);\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged --requiredNamespaces:\", JSON.stringify(requiredNamespaces));\n                // 使用 await 等待异步操作完成\n                let accounts = yield this.getAccountByRequestWallets(false, true, false, requiredNamespaces, []);\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged --accounts:\", JSON.stringify(accounts));\n                if (accounts) {\n                    let resultNameSpace = {};\n                    (0, sessionUtils_1.buildAccountNameSpaces)(accounts, resultNameSpace);\n                    if (!this.compareAndModifyNamespaces(sessionLocal.namespaces, resultNameSpace)) {\n                        (0, utils_1.logDebug)(\"inject-connector checkAccountChanged --result sessionLocal:\", JSON.stringify(sessionLocal));\n                        if (this.accountChangeListener) {\n                            (0, utils_1.logDebug)(\"inject-connector checkAccountChanged -accountChangeListener:\", this.accountChangeListener);\n                            this.accountChangeListener(sessionLocal);\n                        }\n                        else {\n                            (0, utils_1.logDebug)(\"inject-connector checkAccountChanged disconnect:\");\n                            yield this.disconnect();\n                        }\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"connect requestWallets is null\");\n                }\n            }\n            catch (e) {\n                (0, utils_1.logDebug)(\"inject-connector restoreconnect catch error\", JSON.stringify(e));\n                throw e;\n            }\n        });\n    }\n    compareAndModifyNamespaces(nameSpaces1, nameSpaces2) {\n        let isAccountsSame = true;\n        for (const key in nameSpaces1) {\n            if (nameSpaces2[key]) {\n                const ns1 = nameSpaces1[key];\n                const ns2 = nameSpaces2[key];\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged ns1:\", JSON.stringify(ns1));\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged ns2:\", JSON.stringify(ns2));\n                const areAccountsSame = JSON.stringify([...ns1.accounts].sort()) === JSON.stringify([...ns2.accounts].sort());\n                if (!areAccountsSame) {\n                    isAccountsSame = false;\n                    ns1.accounts = [...ns2.accounts];\n                    ns1.extra = Object.assign({}, ns2.extra);\n                    ns1.payload = Object.assign({}, ns2.payload);\n                }\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged new ns1:\", JSON.stringify(ns1));\n            }\n        }\n        (0, utils_1.logDebug)(`inject-connector checkAccountChanged compareAndModifyNamespaces ===> ${isAccountsSame}`);\n        return isAccountsSame;\n    }\n    clearData() {\n        this.connectResultListener = undefined;\n    }\n    addDisconnectListener(disconnecter) {\n        this.disconnectListener.push(disconnecter);\n    }\n    setOnConnectResultListener(connectResultListener) {\n        this.connectResultListener = connectResultListener;\n    }\n    connectManagerDisconnect() {\n        return __awaiter(this, arguments, void 0, function* (_ = false) {\n        });\n    }\n    getCurrentConnectionReady(namespaceKeys) {\n        if (!namespaceKeys) {\n            return false;\n        }\n        const allReady = namespaceKeys.every(namespaceKey => { var _a; return (_a = this.getInjectProvider(namespaceKey)) === null || _a === void 0 ? void 0 : _a.connectReady(); });\n        return allReady;\n    }\n    getTag() {\n        return iconnector_1.OKX_INJECT_WALLET;\n    }\n    toJSON() {\n        return \"inject-connector\";\n    }\n    getRequireNameSpaceFromSession(sessionInfo) {\n        var _a, _b;\n        var requiredNamespaces = [];\n        for (let namespacesKey in sessionInfo.namespaces) {\n            let nameSpace = sessionInfo.namespaces[namespacesKey];\n            let connectWalletNameSpace = {\n                namespace: namespacesKey,\n                chains: nameSpace.chains\n            };\n            if (namespacesKey === protocol_1.NameSpaceKeyAptos) {\n                let aptosChains = [];\n                nameSpace.chains.forEach((chainStr) => {\n                    let aptosChain = (0, utils_2.replaceChainNameToChainId)(chainStr);\n                    aptosChains.push(aptosChain);\n                });\n                connectWalletNameSpace = {\n                    namespace: namespacesKey,\n                    chains: aptosChains\n                };\n            }\n            else if (namespacesKey === protocol_1.NameSpaceKeyTON) {\n                let ton_proof_result_Item = undefined;\n                let proofItem = undefined;\n                if ((_a = nameSpace.payload) === null || _a === void 0 ? void 0 : _a.ton_proof) {\n                    ton_proof_result_Item = (_b = nameSpace.payload) === null || _b === void 0 ? void 0 : _b.ton_proof;\n                    if (ton_proof_result_Item.proof.payload) {\n                        proofItem = {\n                            name: \"ton_proof\",\n                            payload: ton_proof_result_Item.proof.payload\n                        };\n                    }\n                }\n                connectWalletNameSpace = {\n                    namespace: namespacesKey,\n                    chains: nameSpace.chains,\n                    params: {\n                        ton_addr: { name: 'ton_addr' },\n                        ton_proof: proofItem\n                    },\n                };\n            }\n            requiredNamespaces.push(connectWalletNameSpace);\n        }\n        return requiredNamespaces;\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        var _a;\n        if (!window.okxwallet) {\n            onConnectResult(null);\n            return;\n        }\n        this.dappInfo = (_a = sessionInfo.sessionConfig) === null || _a === void 0 ? void 0 : _a.dappInfo;\n        (0, utils_1.logDebug)(\"inject-connector restoreconnect --sessionInfo:\", JSON.stringify(sessionInfo));\n        var requiredNamespaces = this.getRequireNameSpaceFromSession(sessionInfo);\n        (0, utils_1.logDebug)(\"inject-connector restoreconnect --requiredNamespaces:\", JSON.stringify(requiredNamespaces));\n        this.getAccountByRequestWallets(false, false, false, requiredNamespaces, [])\n            .then((accounts) => {\n            (0, utils_1.logDebug)(\"inject-connector restoreconnect --accounts:\", JSON.stringify(accounts));\n            //compare account with sessionInfo\n            let allEqual = true;\n            for (let namespacesKey in sessionInfo.namespaces) {\n                var accountsItem = accounts.find((item) => item.namespace === namespacesKey);\n                var sessionAccounts = sessionInfo.namespaces[namespacesKey].accounts;\n                if (!accountsItem) {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"resotreconnect error: accountItem error\");\n                }\n                let newSessionAccounts = sessionAccounts;\n                if (namespacesKey === protocol_1.NameSpaceKeyAptos && newSessionAccounts && newSessionAccounts.length > 0) {\n                    newSessionAccounts = sessionAccounts.map((address) => {\n                        return (0, utils_2.replaceChainNameToChainId)(address);\n                    });\n                }\n                const areEqual = accountsItem.addresses.length === newSessionAccounts.length &&\n                    accountsItem.addresses.slice().sort().every((value, index) => {\n                        if (namespacesKey === protocol_1.NameSpaceKeyAptos) {\n                            let aptosAdd = newSessionAccounts.slice().sort()[index];\n                            (0, utils_1.logDebug)(\"check aptos address -value and aptosAdd--\", value, aptosAdd);\n                            return aptosAdd === value;\n                        }\n                        else {\n                            return value === newSessionAccounts.slice().sort()[index];\n                        }\n                    });\n                if (!areEqual) {\n                    allEqual = false;\n                }\n            }\n            if (allEqual) {\n                onConnectResult(sessionInfo);\n            }\n            else {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"resotreconnect error: address not as same as session\");\n            }\n        }).catch((e) => {\n            (0, utils_1.logDebug)(\"inject-connector restoreconnect catch error\", JSON.stringify(e));\n            onConnectResult(null);\n        });\n    }\n    getAccountByRequestWallets(needPop, isAccountChange, signalChain, requiredNamespaces, optionalNamespaces) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                var walletInfo = [];\n                var accountResult = [];\n                if ((0, media_1.isDevice)(\"mobile\")) {\n                    var walletInfoItem = yield window.okxwallet.connectWallet(needPop, {\n                        requiredNamespaces: requiredNamespaces,\n                        optionalNamespaces: optionalNamespaces\n                    });\n                    walletInfo.push(walletInfoItem);\n                }\n                else {\n                    walletInfo = (yield window.okxwallet.requestWallets(needPop));\n                }\n                var allNameSpace = [...(requiredNamespaces !== null && requiredNamespaces !== void 0 ? requiredNamespaces : []), ...(optionalNamespaces !== null && optionalNamespaces !== void 0 ? optionalNamespaces : [])];\n                let walletInfoFirst = walletInfo[0];\n                (0, utils_1.logDebug)(\" InjectEngine connect connectAccounts:\", JSON.stringify(walletInfoFirst));\n                let eventkey;\n                if (allNameSpace && walletInfoFirst && walletInfoFirst.address) {\n                    for (const [mapKey, provider] of this.providerMap.entries()) {\n                        let itemResult = yield provider.parseConnectResponse(needPop, isAccountChange, signalChain, allNameSpace, walletInfoFirst, this.dappInfo);\n                        if (itemResult) {\n                            eventkey = mapKey;\n                            accountResult.push(itemResult);\n                        }\n                    }\n                }\n                // check require\n                let cheeckRequire = requiredNamespaces.every(requireItem => {\n                    // requireItem.namespace\n                    let resultSel = accountResult.find(resultItem => {\n                        return resultItem.namespace === requireItem.namespace;\n                    });\n                    if (resultSel) {\n                        let hasChainAdd = requireItem.chains.every(chain => {\n                            let addItem = resultSel.addresses.find(address => {\n                                return address.startsWith(chain + \":\");\n                            });\n                            return !!addItem;\n                        });\n                        return hasChainAdd;\n                    }\n                    return false;\n                });\n                (0, utils_1.logDebug)(\"InjectEngine connect requiredNamespaces:\", JSON.stringify(requiredNamespaces));\n                (0, utils_1.logDebug)(\"InjectEngine connect accountResult:\", JSON.stringify(accountResult));\n                if (!cheeckRequire) {\n                    yield this.disconnect();\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED);\n                }\n                if (!(0, media_1.isDevice)(\"mobile\")) {\n                    this.configEventWithKey(eventkey);\n                    yield window.okxwallet.requestWallets(needPop);\n                }\n                return accountResult;\n            }\n            catch (e) {\n                if (e && typeof e === \"object\" && \"code\" in e) {\n                    if (e.code === 4001) {\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR);\n                    }\n                }\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n            }\n        });\n    }\n    configEventWithKey(key) {\n        var _a, _b;\n        for (let providerMapKey in this.providerMap) {\n            (_a = this.providerMap.get(providerMapKey)) === null || _a === void 0 ? void 0 : _a.removeListener();\n        }\n        (_b = this.getInjectProvider(key)) === null || _b === void 0 ? void 0 : _b.addListener(() => {\n            this.checkAccountChanged().catch(e => {\n                console.log(\"window.okxwallet configEventWithKey error: \", e);\n            });\n        });\n    }\n}\nexports.InjectConnector = InjectConnector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OkxwalletInjectConnector = void 0;\nconst inject_connector_1 = require(\"./inject-connector\");\nclass OkxwalletInjectConnector extends inject_connector_1.InjectConnector {\n    constructor() {\n        super();\n        this.walletName = 'OKX Wallet extension';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectInjected';\n    }\n}\nexports.OkxwalletInjectConnector = OkxwalletInjectConnector;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OkxwalletInjectTonsdkConnector = void 0;\nconst inject_connector_1 = require(\"./inject-connector\");\nconst protocol_1 = require(\"../protocol\");\nconst utils_1 = require(\"../utils\");\nconst media_1 = require(\"../utils/media\");\nclass OkxwalletInjectTonsdkConnector extends inject_connector_1.InjectConnector {\n    constructor() {\n        super();\n        this.walletName = 'OKX Wallet extension';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectInjected';\n    }\n    checkWalletMatch() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c;\n            (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.tonsdkConnectStorage.synchronizedCache();\n            let stored = (_b = this.connectionManager) === null || _b === void 0 ? void 0 : _b.tonsdkConnectStorage.getItem('ton_connect_info_adapter_universal');\n            if (!stored || !(stored === null || stored === void 0 ? void 0 : stored.content)) {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            const content = stored === null || stored === void 0 ? void 0 : stored.content;\n            let connection = JSON.parse(content);\n            let localItem = connection.connectEvent.payload.items.find((item) => {\n                if ('name' in item) {\n                    return item.name === 'ton_addr';\n                }\n                return false;\n            });\n            this.dappInfo = connection.dappInfo;\n            let localAddress = undefined;\n            if (localItem && 'address' in localItem) {\n                localAddress = localItem.address;\n            }\n            if (!localAddress) {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED);\n            }\n            (0, utils_1.logDebug)(`inject-connector localTonaddress : ${localAddress}`);\n            if ((0, media_1.isDevice)('mobile')) {\n                let connectWalletNameSpace;\n                let proofItem = undefined;\n                connectWalletNameSpace = {\n                    namespace: protocol_1.NameSpaceKeyTON,\n                    chains: [protocol_1.TON_CHAINS.MAINNET],\n                    params: {\n                        ton_addr: { name: 'ton_addr' },\n                    },\n                };\n                let requestWalletAccount = yield this.getAccountByRequestWallets(false, false, false, [connectWalletNameSpace], []);\n                if (requestWalletAccount && requestWalletAccount.length == 1) {\n                    let tonAccount = requestWalletAccount[0];\n                    let tonAddr = (_c = tonAccount.data) === null || _c === void 0 ? void 0 : _c.ton_addr;\n                    let tonaddress = tonAddr === null || tonAddr === void 0 ? void 0 : tonAddr.address;\n                    if (localAddress === tonaddress) {\n                        return;\n                    }\n                }\n            }\n            else {\n                let connectResult = yield window.okxTonWallet.tonconnect.restoreConnection();\n                if (connectResult.event === 'connect') {\n                    let ton_addr = connectResult.payload.items.find((item) => item.name === \"ton_addr\").address;\n                    if (ton_addr == localAddress) {\n                        return;\n                    }\n                }\n            }\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED);\n        });\n    }\n}\nexports.OkxwalletInjectTonsdkConnector = OkxwalletInjectTonsdkConnector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TgwalletConnector = void 0;\nconst ws_connector_1 = require(\"./ws-connector\");\nconst iconnector_1 = require(\"./iconnector\");\nconst utils_1 = require(\"../utils\");\nclass TgwalletConnector extends ws_connector_1.WsConnector {\n    constructor() {\n        super();\n        this.walletName = 'OKX Mini Wallet';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectMini';\n    }\n    getTag() {\n        return iconnector_1.OKX_TG_WALLET;\n    }\n    openWallet(engineConnectInfo) {\n        var _a;\n        var encodeTGParams;\n        if (engineConnectInfo && engineConnectInfo.connectRequest) {\n            encodeTGParams = (0, utils_1.encodeTWAConnectURLParams)(Object.assign(Object.assign({}, engineConnectInfo.connectRequest), { redirect: \"none\" }));\n        }\n        var tgUrl = (0, utils_1.getTelegramWalletTWAUrl)(encodeTGParams, (_a = engineConnectInfo === null || engineConnectInfo === void 0 ? void 0 : engineConnectInfo.tmaReturnUrl) !== null && _a !== void 0 ? _a : \"back\");\n        (0, utils_1.openOKXTMAWalletlinkWithFallback)(tgUrl);\n    }\n}\nexports.TgwalletConnector = TgwalletConnector;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WsConnector = void 0;\nconst safejson_1 = require(\"../utils/safejson\");\nconst log_1 = require(\"../utils/log\");\nclass WsConnector {\n    constructor() {\n        this.disconnectListener = [];\n        this.walletName = '';\n        this.walletNameKey = '';\n        this.enable = true;\n        this.pendingRequests = new Map();\n        // report api begin\n        (0, log_1.getDefaultReporter)().beginReport();\n    }\n    setAccountChangeListener(accountChangeListener) {\n        this.accountChangeListener = accountChangeListener;\n    }\n    setConnectionManager(connectionManager) {\n        this.connectionManager = connectionManager;\n    }\n    addConnectionListener() {\n        var _a;\n        (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.addListener(\"sdk_response\", (event, msg) => {\n            var jsonResponse = (0, safejson_1.safeJsonParse)(msg);\n            (0, log_1.logDebug)(`Engine ==>> addListener ==> success ==> ${jsonResponse}`);\n            this.handleResponse(event, jsonResponse);\n        }, function () {\n        });\n    }\n    addDisconnectListener(disconnecter) {\n        this.disconnectListener.push(disconnecter);\n    }\n    connectManagerDisconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.disconnect(fromRestore));\n        });\n    }\n    openWallet(engineConnectInfo) {\n    }\n    bindRequestForPromise(requestId, resolve) {\n        this.pendingRequests.set(requestId, resolve);\n    }\n    send(request, requestAnswer, ttl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b;\n            (0, log_1.logDebug)('Engine ==>> send  request==>', JSON.stringify(request));\n            const requestId = this.getRequestId();\n            try {\n                let packageId = yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.send(JSON.stringify(Object.assign(Object.assign({}, request), { requestId: requestId })), ttl));\n                if (packageId) {\n                    (_b = this.connectionManager) === null || _b === void 0 ? void 0 : _b.events.once(packageId.toString(), (event) => {\n                        var _a;\n                        (0, log_1.logDebug)(`Engine ==> send => onAck => ${(0, safejson_1.safeJsonStringify)(event)}`);\n                        if (event && event.result) {\n                            (_a = requestAnswer.onAck) === null || _a === void 0 ? void 0 : _a.call(requestAnswer);\n                        }\n                    });\n                }\n                if (requestAnswer.resolve) {\n                    this.bindRequestForPromise(requestId, requestAnswer.resolve);\n                }\n            }\n            catch (e) {\n                return Promise.reject(e);\n            }\n        });\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.restoreConnect(sessionInfo.topic));\n            onConnectResult(sessionInfo);\n        });\n    }\n    restoreconnectFromTopic(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.restoreConnect(topic));\n        });\n    }\n    getRequestId() {\n        const requestId = Date.now().toString();\n        (0, log_1.logDebug)('Engine ==>> getRequestId ==>', requestId);\n        return requestId;\n    }\n    handleResponse(event, response) {\n        (0, log_1.logDebug)(`Engine ==>> handleResponse_1  ======>response: ${(0, safejson_1.safeJsonStringify)(response)}`, event);\n        if (\"requestId\" in response) {\n            (0, log_1.logDebug)(\"Engine ==>> handleResponse_2  ===> in response\");\n            let requestId = response.requestId;\n            const resolve = this.pendingRequests.get(requestId);\n            if (resolve) {\n                (0, log_1.logDebug)(\"Engine ==>> handleResponse_3  ===> find resolve:\", resolve);\n                resolve(response);\n                // 从pendingRequests中删除这个Promise\n                this.pendingRequests.delete(requestId);\n            }\n            else {\n                (0, log_1.logDebug)(\"Engine ==>> handleResponse_3  ===> not find resolve:\");\n                if (response.method === \"disconnect\") {\n                    this.disconnectListener.forEach(listener => listener());\n                    this.disconnectListener = [];\n                    this.clearData();\n                }\n            }\n        }\n    }\n    getCurrentConnectionReady() {\n        var _a;\n        return !!((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getCurrentConnectionReady());\n    }\n    saveSessionContent(key, data) {\n        var _a;\n        (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.saveSessionContent(key, data);\n    }\n    getSessionContent(key) {\n        var _a;\n        return (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getSessionContent(key);\n    }\n    setOnConnectResultListener(connectResultListener) {\n        this.connectResultListener = connectResultListener;\n    }\n    getTag() {\n        return \"\";\n    }\n    toJSON() {\n        return \"ws-connector\";\n    }\n    clearData() {\n        this.pendingRequests.clear();\n    }\n}\nexports.WsConnector = WsConnector;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SessionCrypto = void 0;\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst utils_1 = require(\"../utils/utils\");\nclass SessionCrypto {\n    constructor(keyPair = undefined) {\n        this.nonceLength = 24;\n        this.sessionKeyPair = keyPair ? this.createKeypairFromString(keyPair) : this.createKeypair();\n    }\n    createKeypair() {\n        return tweetnacl_1.default.box.keyPair();\n    }\n    createKeypairFromString(keyPair) {\n        return {\n            publicKey: (0, utils_1.hexToByteArray)(keyPair.publicKey),\n            secretKey: (0, utils_1.hexToByteArray)(keyPair.secretKey),\n        };\n    }\n    createNonce() {\n        return tweetnacl_1.default.randomBytes(this.nonceLength);\n    }\n    get keyPair() {\n        return this.sessionKeyPair;\n    }\n    // dapp 加密:\n    // base64(hex（nonce+加密内容）)\n    encrypt(message, receiverPublicKey) {\n        const encodedMessage = new TextEncoder().encode(message);\n        const nonce = this.createNonce();\n        const encrypted = tweetnacl_1.default.box(encodedMessage, nonce, (0, utils_1.hexToByteArray)(receiverPublicKey), this.keyPair.secretKey);\n        let concatInfo = (0, utils_1.concatUint8Arrays)(nonce, encrypted);\n        var hexResult = (0, utils_1.toHexString)(concatInfo);\n        var encodedResult = new TextEncoder().encode(hexResult);\n        return (0, utils_1.base64encode)(encodedResult, false);\n    }\n    // 钱包加密内容\n    // 注意：没有中间hex的环节\n    // base64（nonce+加密内容)\n    encryptWallet(message, receiverPublicKey) {\n        const encodedMessage = new TextEncoder().encode(message);\n        const nonce = this.createNonce();\n        const encrypted = tweetnacl_1.default.box(encodedMessage, nonce, (0, utils_1.hexToByteArray)(receiverPublicKey), this.keyPair.secretKey);\n        let concatInfo = (0, utils_1.concatUint8Arrays)(nonce, encrypted);\n        return (0, utils_1.base64encode)(concatInfo, false);\n    }\n    // dapp 解密\n    // base64(split(nonce+加密内容))\n    decrypt(message, senderPublicKey) {\n        let base64Content = (0, utils_1.base64decode)(message, true);\n        let messageByteArray = base64Content.toUint8Array();\n        const [nonce, internalMessage] = (0, utils_1.splitToUint8Arrays)(messageByteArray, this.nonceLength);\n        const decrypted = tweetnacl_1.default.box.open(internalMessage, nonce, (0, utils_1.hexToByteArray)(senderPublicKey), this.keyPair.secretKey);\n        if (!decrypted) {\n            throw new Error(`Decryption error: \\n message: ${message.toString()} \\n sender pubkey: ${senderPublicKey.toString()} \\n keypair pubkey: ${(0, utils_1.toHexString)(this.keyPair.publicKey)} \\n keypair secretkey: ${(0, utils_1.toHexString)(this.keyPair.secretKey)}`);\n        }\n        return new TextDecoder().decode(decrypted);\n    }\n    // dapp 解密\n    // base64(hextoByte(split(nonce+加密内容)))\n    decryptWallet(message, senderPublicKey) {\n        let base64Content = (0, utils_1.base64decode)(message, true);\n        let messageByteArray = (0, utils_1.hexToByteArray)(base64Content.toString());\n        const [nonce, internalMessage] = (0, utils_1.splitToUint8Arrays)(messageByteArray, this.nonceLength);\n        const decrypted = tweetnacl_1.default.box.open(internalMessage, nonce, (0, utils_1.hexToByteArray)(senderPublicKey), this.keyPair.secretKey);\n        if (!decrypted) {\n            throw new Error(`Decryption error: \\n message: ${message.toString()} \\n sender pubkey: ${senderPublicKey.toString()} \\n keypair pubkey: ${(0, utils_1.toHexString)(this.keyPair.publicKey)} \\n keypair secretkey: ${(0, utils_1.toHexString)(this.keyPair.secretKey)}`);\n        }\n        return new TextDecoder().decode(decrypted);\n    }\n    stringifyKeypair() {\n        return {\n            publicKey: (0, utils_1.toHexString)(this.keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(this.keyPair.secretKey)\n        };\n    }\n}\nexports.SessionCrypto = SessionCrypto;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./connect\"), exports);\n__exportStar(require(\"./protocol\"), exports);\n__exportStar(require(\"./utils\"), exports);\n__exportStar(require(\"./inject\"), exports);\n__exportStar(require(\"./connector\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BtcMethods = exports.SuiMethods = exports.TONMethods = exports.AptosMethods = exports.SOLANAMethods = exports.Eip55Methods = void 0;\nexports.hasOKXInjectedProvider = hasOKXInjectedProvider;\nfunction hasOKXInjectedProvider() {\n    if (typeof getWindowProviderNamespace(\"okxwallet\") !== 'undefined') {\n        return true;\n    }\n    return false;\n}\nfunction getWindowProviderNamespace(namespace) {\n    const providerSearch = (provider, namespace) => {\n        const [property, ...path] = namespace.split('.');\n        const _provider = provider[property];\n        if (_provider) {\n            if (path.length === 0)\n                return _provider;\n            return providerSearch(_provider, path.join('.'));\n        }\n    };\n    if (typeof window !== 'undefined')\n        return providerSearch(window, namespace);\n}\nexports.Eip55Methods = [\n    \"personal_sign\",\n    \"eth_signTypedData_v4\",\n    \"eth_sendTransaction\",\n    \"wallet_addEthereumChain\",\n    \"wallet_watchAsset\",\n    \"wallet_switchEthereumChain\",\n    \"eth_requestAccounts\",\n    \"eth_accounts\",\n    \"eth_chainId\"\n];\nexports.SOLANAMethods = [\n    \"solana_signTransaction\",\n    \"solana_signMessage\",\n    \"solana_signAllTransactions\",\n    \"solana_signAndSendTransaction\"\n];\nexports.AptosMethods = [\n    \"aptos_signMessage\",\n    \"aptos_signTransaction\",\n    \"aptos_signAndSubmitTransaction\"\n];\nexports.TONMethods = [\n    \"ton_sendTransaction\",\n];\nexports.SuiMethods = [\n    \"sui_signMessage\",\n    \"sui_signPersonalMessage\",\n    \"sui_signTransactionBlock\",\n    \"sui_signAndExecuteTransactionBlock\"\n];\nexports.BtcMethods = [\n    \"btc_signMessage\",\n    \"btc_signPsbts\",\n    \"btc_send\",\n    \"btc_sendInscription\",\n    \"btc_signAndPushPsbt\",\n    \"btc_inscribeTransfer\",\n    \"btc_sendRunes\"\n];\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./InjectUtils\"), exports);\n__exportStar(require(\"./provider\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AptosProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nconst media_1 = require(\"../../utils/media\");\nconst localforage_1 = require(\"localforage\");\nconst aptosChainList = Object.freeze([\n    \"637\",\n    \"70000060\",\n    \"70000066\",\n]);\nconst aptosInjectChainMap = new Map();\naptosInjectChainMap.set(\"aptos:637\", \"Mainnet\");\naptosInjectChainMap.set(\"aptos:70000060\", \"Movement Testnet\");\naptosInjectChainMap.set(\"aptos:70000066\", \"Movement Mainnet\");\nclass AptosProvider {\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                (0, utils_1.logDebug)(\"AptosProvider send request:\", (0, utils_1.safeJsonStringify)(request));\n                yield this.restoreConnect();\n                let network = yield window.okxwallet.aptos.network();\n                let searchNetwork = this.searchChainIdToInjectChainName(request.chainId);\n                (0, utils_1.logDebug)(\"AptosProvider send network and searchNetwork:\", network, \"-----\", searchNetwork);\n                if (!(network && searchNetwork && network.toLowerCase() === searchNetwork.toLowerCase())) {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Please switch your wallet link to '${searchNetwork}'`);\n                }\n                const method = request.method;\n                let result;\n                switch (method) {\n                    case \"aptos_signMessage\":\n                        {\n                            if (request.injectParams) {\n                                let message = yield window.okxwallet.aptos.signMessage(request.injectParams);\n                                result = {\n                                    method: request.method,\n                                    result: message.signature,\n                                    injectResult: message\n                                };\n                                (0, utils_1.logDebug)(\"AptosProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                                return result;\n                            }\n                            else {\n                                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `param is error method: '${method}'`);\n                            }\n                        }\n                        break;\n                    case \"aptos_signTransaction\":\n                        {\n                            (0, utils_1.logDebug)(\"AptosProvider Method>>>> :\", method);\n                            let message = yield window.okxwallet.aptos.signTransaction(request.params);\n                            result = {\n                                method: request.method,\n                                result: message,\n                            };\n                            (0, utils_1.logDebug)(\"AptosProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                            return result;\n                        }\n                        break;\n                    case \"aptos_signAndSubmitTransaction\":\n                        {\n                            (0, utils_1.logDebug)(\"AptosProvider Method>>>> :\", method);\n                            let message = yield window.okxwallet.aptos.signAndSubmitTransaction(request.params);\n                            result = {\n                                method: request.method,\n                                result: message.hash,\n                            };\n                            (0, utils_1.logDebug)(\"AptosProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                            return result;\n                        }\n                        break;\n                    default:\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, ` method: '${method}'`);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"AptosProvider send error:\", error);\n                throw error;\n            }\n        });\n    }\n    searchChainIdToInjectChainName(chainId) {\n        let chainName = chainId;\n        aptosInjectChainMap.forEach((value, key) => {\n            if (chainId.includes(key)) {\n                chainName = value;\n            }\n        });\n        return chainName;\n    }\n    connectReady() {\n        return true;\n    }\n    disconnect() {\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return this.connect();\n        }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let connectChain = [];\n            connectWalletNameSpace.forEach(item => {\n                if (item.namespace === protocol_1.NameSpaceKeyAptos) {\n                    connectChain.push(...item.chains);\n                }\n            });\n            let addresses = [];\n            let extra = {};\n            (0, utils_1.logDebug)(\"AptosProvider parseConnectResponse connectChain\", JSON.stringify(connectChain));\n            let publicKey = undefined;\n            if (!(0, media_1.isDevice)('mobile') && connectChain && connectChain.length > 0) {\n                let aptosAccount = yield window.okxwallet.aptos.connect();\n                publicKey = aptosAccount.publicKey;\n            }\n            connectChain.forEach((chainStr) => {\n                let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                    return (aptosChainList.includes(addressItem.chainId) && addressItem.coinType === 637) || (addressItem.namespaceChainId === chainStr);\n                });\n                if (selectedAddress) {\n                    addresses.push(chainStr + \":\" + selectedAddress.address);\n                    extra[chainStr] = {\n                        publicKey: selectedAddress.publicKey ? selectedAddress.publicKey : publicKey\n                    };\n                }\n            });\n            (0, utils_1.logDebug)(\"AptosProvider parseConnectResponse addresses\", JSON.stringify(addresses));\n            if (addresses && addresses.length > 0) {\n                let nameSpaceResponse = {\n                    namespace: protocol_1.NameSpaceKeyAptos,\n                    addresses: addresses,\n                    methods: [...InjectUtils_1.AptosMethods],\n                    extra: extra\n                };\n                return nameSpaceResponse;\n            }\n            return undefined;\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return window.okxwallet.aptos.connect();\n        });\n    }\n    singleConnect() {\n        return this.connect();\n    }\n    addListener(accountChangeListener) {\n        window.okxwallet.aptos.onAccountChange((newAccount) => {\n            console.log(\"window.okxwallet configEventWithKey_aptos:\", Date.now(), localforage_1.key, JSON.stringify(newAccount));\n            if (newAccount) {\n                accountChangeListener();\n            }\n        });\n    }\n    removeListener() {\n    }\n}\nexports.AptosProvider = AptosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SolProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass SolProvider {\n    constructor() {\n        // TOOD\n        // 问题: 是否需要切链  不切链, 主网 测试网络  sonic 如何区别\n        this.accountChangedSolanaPublicKeyHandler = null;\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                yield this.restoreConnect();\n                (0, utils_1.logDebug)(\"SolProvider send request:\", JSON.stringify(request));\n                const method = request.method;\n                let result;\n                if (request.injectParams) {\n                    switch (method) {\n                        case \"solana_signMessage\":\n                            {\n                                if (request.injectParams && typeof request.injectParams === 'object' && 'message' in request.injectParams) {\n                                    var message = (_a = request.injectParams) === null || _a === void 0 ? void 0 : _a.message;\n                                    const encodedMessage = new TextEncoder().encode(message);\n                                    const signedMessage = yield window.okxwallet.solana.signMessage(encodedMessage, \"utf8\");\n                                    result = {\n                                        method: request.method,\n                                        result: bs58_1.default.encode(signedMessage.signature),\n                                    };\n                                    (0, utils_1.logDebug)(\"SolProvider send result:\", JSON.stringify(signedMessage));\n                                    return result;\n                                }\n                                else {\n                                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `param is error method: '${method}'`);\n                                }\n                            }\n                            break;\n                        case \"solana_signTransaction\":\n                            {\n                                let bufferResult = yield window.okxwallet.solana.signTransaction(request.injectParams);\n                                (0, utils_1.logDebug)(\"SolProvider send bufferResult:\", JSON.stringify(bufferResult));\n                                result = {\n                                    method: request.method,\n                                    injectResult: bufferResult,\n                                };\n                                (0, utils_1.logDebug)(\"SolProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                                return result;\n                            }\n                            break;\n                        case \"solana_signAllTransactions\":\n                            {\n                                let allResult = yield window.okxwallet.solana.signAllTransactions(request.injectParams);\n                                (0, utils_1.logDebug)(\"SolProvider send result:\", (0, utils_1.safeJsonStringify)(allResult));\n                                result = {\n                                    method: request.method,\n                                    injectResult: allResult,\n                                };\n                                return result;\n                            }\n                            break;\n                        case \"solana_signAndSendTransaction\":\n                            {\n                                var signAndSendResult = yield window.okxwallet.solana.signAndSendTransaction(request.injectParams);\n                                (0, utils_1.logDebug)(\"SolProvider send result:\", (0, utils_1.safeJsonStringify)(signAndSendResult));\n                                result = {\n                                    method: request.method,\n                                    injectResult: signAndSendResult,\n                                };\n                                return result;\n                            }\n                            break;\n                        default:\n                            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, `method: '${method}'`);\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `param is error method: '${method}'`);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"SolProvider send error:\", error);\n                throw error;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    disconnect() {\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return this.connect();\n        }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let connectChain = [];\n            connectWalletNameSpace.forEach(item => {\n                if (item.namespace === protocol_1.NameSpaceKeySOL) {\n                    connectChain.push(...item.chains);\n                }\n            });\n            let addresses = [];\n            let extra = {};\n            let accounts = {};\n            // if (!isDevice(\"mobile\")){\n            //      accounts = await window.okxwallet.solana.connect()\n            //     logDebug(\"parseConnectResponse solana.connect() :\",JSON.stringify(accounts))\n            // }\n            connectChain.forEach((chainStr) => {\n                let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                    return (addressItem.chainId === \"501\" && addressItem.coinType === 501)\n                        || (addressItem.namespaceChainId === chainStr);\n                });\n                if (selectedAddress) {\n                    addresses.push(chainStr + \":\" + selectedAddress.address);\n                    if (accounts && \"publicKey\" in accounts) {\n                        extra[chainStr] = accounts;\n                    }\n                    else {\n                        extra[chainStr] = {\n                            publicKey: selectedAddress.publicKey\n                        };\n                    }\n                }\n            });\n            if (addresses && addresses.length > 0) {\n                let nameSpaceResponse = {\n                    namespace: protocol_1.NameSpaceKeySOL,\n                    addresses: addresses,\n                    methods: [...InjectUtils_1.SOLANAMethods],\n                    extra: extra\n                };\n                (0, utils_1.logDebug)(\"parseConnectResponse nameSpaceResponse :\", JSON.stringify(nameSpaceResponse));\n                return nameSpaceResponse;\n            }\n            return undefined;\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return window.okxwallet.solana.connect();\n        });\n    }\n    singleConnect() {\n        return this.connect();\n    }\n    addListener(accountChangeListener) {\n        console.log(\"window.okxwallet configEventWithKey:\", 'sol');\n        this.accountChangedSolanaPublicKeyHandler = (publicKey) => {\n            console.log(\"window.okxwallet configEventWithKey_solana:\", Date.now(), 'sol', publicKey);\n            if (publicKey) {\n                accountChangeListener();\n            }\n        };\n        window.okxwallet.solana.on('accountChanged', this.accountChangedSolanaPublicKeyHandler);\n    }\n    removeListener() {\n        if (this.accountChangedSolanaPublicKeyHandler) {\n            window.okxwallet.solana.removeListener('accountChanged', this.accountChangedSolanaPublicKeyHandler);\n        }\n    }\n}\nexports.SolProvider = SolProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TONProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass TONProvider {\n    constructor() {\n        this.signalChainConnectResult = undefined;\n        this.accountChangedTONHandler = null;\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                (0, utils_1.logDebug)(\"TONProvider send request:\", (0, utils_1.safeJsonStringify)(request));\n                // await this.restoreConnect()//To initialize data in Discover\n                let tonParams = null;\n                switch (request.method) {\n                    case \"ton_sendTransaction\":\n                        if (request.params) {\n                            tonParams = {\n                                method: \"sendTransaction\",\n                                params: [JSON.stringify(request.params)],\n                                id: Date.now().toString()\n                            };\n                            (0, utils_1.logDebug)(\"TONProvider tonParams first:\", JSON.stringify(tonParams));\n                        }\n                        break;\n                    default:\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n                if (tonParams) {\n                    const resultMe = yield window.okxTonWallet.tonconnect.send(tonParams);\n                    (0, utils_1.logDebug)(\"TONProvider send request result:\", (0, utils_1.safeJsonStringify)(resultMe));\n                    if (resultMe.error) {\n                        throw new protocol_1.OKXConnectError(resultMe.error.code, resultMe.error.message);\n                    }\n                    return {\n                        result: resultMe.result,\n                        method: request.method,\n                    };\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"TONProvider encountered an error:\", error);\n                throw error;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    restoreConnect() {\n        // if (isDevice(\"mobile\") && window.okxTonWallet){\n        //     return  window.okxTonWallet.tonconnect.restoreConnection()\n        // }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeyTON) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                connectChain.forEach((chainStr) => {\n                    let currentChain = (0, utils_1.getChainId)(chainStr);\n                    let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                        return (addressItem.chainId === \"607\" && addressItem.coinType === 607)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                    if (selectedAddress) {\n                        addresses.push(chainStr + \":\" + selectedAddress.address);\n                        extra[chainStr] = {\n                            publicKey: selectedAddress.publicKey\n                        };\n                    }\n                });\n                (0, utils_1.logDebug)(\"tonprovider parseConnectResponse needPop and addresses: \", needPop, JSON.stringify(addresses));\n                if (addresses && addresses.length > 0) {\n                    let tonItem = connectWalletNameSpace.find(tonItem => {\n                        return tonItem.namespace === protocol_1.NameSpaceKeyTON;\n                    });\n                    (0, utils_1.logDebug)(\"tonprovider parseConnectResponse ton: \", JSON.stringify(tonItem));\n                    let tonResult = undefined;\n                    if (tonItem && tonItem.params && dappInfo && dappInfo.manifestUrl) {\n                        this.dappInfo = dappInfo;\n                        let itmes = [tonItem.params.ton_addr];\n                        let params = {\n                            manifestUrl: dappInfo.manifestUrl,\n                            items: itmes\n                        };\n                        let needProof = needPop || accountChange;\n                        if (needProof && tonItem.params.ton_proof) {\n                            itmes.push(tonItem.params.ton_proof);\n                        }\n                        (0, utils_1.logDebug)(\"parseConnectResponse ton connect params: \", JSON.stringify(params));\n                        if ((0, media_1.isDevice)(\"mobile\")) {\n                            tonResult = (yield window.okxTonWallet.tonconnect.connect(2, params));\n                        }\n                        else {\n                            if (needPop || accountChange) {\n                                tonResult = (yield window.okxTonWallet.tonconnect.connect(2, params));\n                            }\n                            else {\n                                //No proof is needed here, the result is only used for address verification\n                                tonResult = (yield window.okxTonWallet.tonconnect.restoreConnection());\n                            }\n                        }\n                    }\n                    else {\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"manifestUrl is nil\");\n                    }\n                    if (signalChain && this.signalChainConnectResult) {\n                        tonResult = this.signalChainConnectResult;\n                        this.signalChainConnectResult = undefined;\n                    }\n                    (0, utils_1.logDebug)(\"parseConnectResponse ton connect result: \", JSON.stringify(tonResult));\n                    if (tonResult && tonItem) {\n                        if (tonResult.event === \"connect_error\") {\n                            throw new protocol_1.OKXConnectError(tonResult.payload.code, tonResult.payload.message);\n                        }\n                        else {\n                            let ton_addr = tonResult.payload.items.find(item => item.name === \"ton_addr\");\n                            let ton_proof = tonResult.payload.items.find(item => item.name === \"ton_proof\");\n                            (0, utils_1.logDebug)(\"tonprovider connect isSignalChain: \", signalChain);\n                            let nameSpaceResponse = {\n                                namespace: protocol_1.NameSpaceKeyTON,\n                                addresses: addresses,\n                                methods: [...InjectUtils_1.TONMethods],\n                                extra: extra,\n                                data: {\n                                    ton_addr: ton_addr,\n                                    ton_proof: ton_proof,\n                                    manifestUrl: dappInfo.manifestUrl\n                                }\n                            };\n                            return nameSpaceResponse;\n                        }\n                    }\n                }\n                return undefined;\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"tonprovider parseConnectResponse error: \", JSON.stringify(error));\n                throw error;\n            }\n        });\n    }\n    connect(nameSpace, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (nameSpace && dappInfo && dappInfo.manifestUrl && nameSpace.params) {\n                this.dappInfo = dappInfo;\n                let itmes = [nameSpace.params.ton_addr];\n                let params = {\n                    manifestUrl: dappInfo.manifestUrl,\n                    items: itmes\n                };\n                if (nameSpace.params.ton_proof) {\n                    itmes.push(nameSpace.params.ton_proof);\n                }\n                (0, utils_1.logDebug)(\"tonprovider connect params: \", JSON.stringify(params));\n                try {\n                    let tonResult = yield window.okxTonWallet.tonconnect.connect(2, params);\n                    (0, utils_1.logDebug)(\"tonprovider connect tonResult: \", JSON.stringify(tonResult));\n                    this.signalChainConnectResult = tonResult;\n                    return tonResult;\n                }\n                catch (error) {\n                    (0, utils_1.logDebug)(\"tonprovider connect error: \", JSON.stringify(error));\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"tonconnect error\");\n                }\n            }\n            else {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"manifestUrl or params is nil\");\n            }\n        });\n    }\n    singleConnect(nameSpace, dappInfo) {\n        return this.connect(nameSpace, dappInfo);\n    }\n    addListener(accountChangeListener) {\n        console.log(\"window.okxwallet configEventWithKey:\", 'ton');\n        this.accountChangedTONHandler = () => {\n            console.log(\"window.okxwallet configEventWithKey_TON:\", Date.now(), 'ton');\n            accountChangeListener();\n        };\n        window.okxTonWallet.tonconnect.on('accountChanged', this.accountChangedTONHandler);\n    }\n    removeListener() {\n        if (this.accountChangedTONHandler) {\n            window.okxTonWallet.tonconnect.off('accountChanged', this.accountChangedTONHandler);\n        }\n    }\n}\nexports.TONProvider = TONProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BtcProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nconst media_1 = require(\"../../utils/media\");\nclass BtcProvider {\n    constructor() {\n        this.accountChangedBtcHandler = null;\n    }\n    connect() {\n        return window.okxwallet.unisat.connect();\n    }\n    switchChain(chain) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let okxwallet = window.okxwallet.unisat;\n            switch (chain) {\n                case protocol_1.BTC_CHAINS.MAINNET:\n                    yield okxwallet.switchChain('BITCOIN_MAINNET');\n                    break;\n                case protocol_1.BTC_CHAINS.FRACTAL:\n                    yield okxwallet.switchChain('FRACTAL_BITCOIN_MAINNET');\n                    break;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeyBtc) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                if (connectChain.length == 0) {\n                    return undefined;\n                }\n                const findAddress = (addresses, chainStr) => {\n                    return addresses.find((addressItem) => {\n                        const matchCoin = (addressItem.name === 'bitcoin' && chainStr === protocol_1.BTC_CHAINS.MAINNET)\n                            || (addressItem.name === 'fractalbitcoin' && chainStr === protocol_1.BTC_CHAINS.FRACTAL);\n                        return (addressItem.coinType === 0 && matchCoin)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                };\n                const processChain = (chainStr) => __awaiter(this, void 0, void 0, function* () {\n                    let selectedAddress = findAddress(connectRequestWalletResponse.address, chainStr);\n                    if (!selectedAddress)\n                        return;\n                    addresses.push(chainStr + \":\" + selectedAddress.address);\n                    let accounts = yield this.connect();\n                    extra[chainStr] = {\n                        publicKey: accounts.publicKey,\n                        compressedPublicKey: accounts.compressedPublicKey\n                    };\n                });\n                const promises = connectChain.map(processChain);\n                yield Promise.all(promises);\n                if (addresses && addresses.length > 0) {\n                    let nameSpaceResponse = {\n                        namespace: protocol_1.NameSpaceKeyBtc,\n                        addresses: addresses,\n                        methods: [...InjectUtils_1.BtcMethods],\n                        extra: extra\n                    };\n                    return nameSpaceResponse;\n                }\n                return undefined;\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n    restoreConnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if ((0, media_1.isDevice)(\"mobile\")) {\n                return this.connect();\n            }\n            return Promise.resolve();\n        });\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                (0, utils_1.logDebug)(\"btcProvider send request:\", JSON.stringify(request));\n                const method = request.method;\n                const chain = request.chainId;\n                yield this.restoreConnect();\n                yield this.switchChain(chain);\n                let result;\n                if (request.params) {\n                    switch (method) {\n                        case \"btc_signMessage\": {\n                            const { signStr, type } = (request.params || {});\n                            const signature = yield window.okxwallet.unisat.signMessage(signStr, type);\n                            return {\n                                method: request.method,\n                                result: signature,\n                            };\n                        }\n                        case \"btc_send\": {\n                            const { from, to, value, satBytes } = (request.params || {});\n                            const hash = yield window.okxwallet.unisat.send({ from, to, value, satBytes });\n                            return {\n                                method: request.method,\n                                result: hash,\n                            };\n                        }\n                        case \"btc_signPsbts\": {\n                            const { psbtHexs, options } = (request.params || {});\n                            let signatures;\n                            if (Array.isArray(psbtHexs) && psbtHexs.length === 1) {\n                                let signature;\n                                if (Array.isArray(options)) {\n                                    signature = yield window.okxwallet.unisat.signPsbt(psbtHexs[0], options.length > 0 && typeof options[0] === \"object\" ? options[0] : undefined);\n                                }\n                                else {\n                                    signature = yield window.okxwallet.unisat.signPsbt(psbtHexs[0]);\n                                }\n                                signatures = [signature];\n                            }\n                            else {\n                                signatures = yield window.okxwallet.unisat.signPsbts(psbtHexs, options);\n                            }\n                            return {\n                                method: request.method,\n                                result: (0, utils_1.safeJsonStringify)(signatures),\n                            };\n                        }\n                        case \"btc_signAndPushPsbt\": {\n                            const { psbtHex, options } = (request.params || {});\n                            const signedPsbt = yield window.okxwallet.unisat.signPsbt(psbtHex, options);\n                            const hash = yield window.okxwallet.unisat.pushPsbt(signedPsbt);\n                            return {\n                                method: request.method,\n                                result: (0, utils_1.safeJsonStringify)({\n                                    signedPsbt: signedPsbt,\n                                    txHash: hash\n                                }),\n                            };\n                        }\n                        case \"btc_sendInscription\": {\n                            const { address, inscriptionId, options } = (request.injectParams || {});\n                            const result = yield window.okxwallet.unisat.sendInscription(address, inscriptionId, options);\n                            return {\n                                method: request.method,\n                                result: result,\n                            };\n                        }\n                        // case \"btc_sendRunes\": {\n                        //     const {address,inscriptionId, options} = (request.injectParams || {}) as Record<string, unknown>;\n                        //     // const result = await window.okxwallet.unisat.signPsbt(address,inscriptionId,options)\n                        //     // return {\n                        //     //     method: request.method,\n                        //     //     result: result,\n                        //     // };\n                        // }\n                        case \"btc_inscribeTransfer\": {\n                            if ((0, media_1.isDevice)('mobile')) {\n                                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, `method: '${method}'`);\n                            }\n                            const { ticker, amount } = (request.params || {});\n                            const result = yield window.okxwallet.unisat.inscribeTransfer(ticker, amount);\n                            return {\n                                method: request.method,\n                                result: result,\n                            };\n                        }\n                        default:\n                            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, `method: '${method}'`);\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, `param is error method: '${method}'`);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"BtcProvider send error:\", error);\n                throw error;\n            }\n        });\n    }\n    singleConnect(itemNameSpace) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (itemNameSpace.chains.length == 1) {\n                return this.connect();\n            }\n            return false;\n        });\n    }\n    addListener(accountChangeListener) {\n        this.accountChangedBtcHandler = (accounts) => {\n            console.log(\"window.okxwallet btc:\", Date.now(), \"btc\", accounts);\n            if (accounts && accounts.length > 0) { //\n                accountChangeListener();\n            }\n        };\n        window.okxwallet.unisat.on('accountsChanged', this.accountChangedBtcHandler);\n    }\n    removeListener() {\n        window.okxwallet.unisat.removeListener('accountsChanged', this.accountChangedBtcHandler);\n    }\n}\nexports.BtcProvider = BtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Eip155Provider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass Eip155Provider {\n    constructor() {\n        this.accountChangedEVMHandler = null;\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                (0, utils_1.logDebug)(\"Eip155Provider send request:\", (0, utils_1.safeJsonStringify)(request));\n                yield this.restoreConnect(); //To initialize data in Discover\n                let ethParams = null;\n                switch (request.method) {\n                    case \"personal_sign\":\n                        if (request.params && \"message\" in request.params) {\n                            ethParams = {\n                                method: request.method,\n                                params: [\n                                    request.params.message,\n                                    request.address,\n                                ],\n                            };\n                        }\n                        break;\n                    case \"eth_sendTransaction\":\n                    case \"wallet_addEthereumChain\":\n                    case \"wallet_switchEthereumChain\":\n                        {\n                            if (request.params) {\n                                ethParams = {\n                                    method: request.method,\n                                    params: [request.params],\n                                };\n                            }\n                        }\n                        break;\n                    case \"eth_signTypedData_v4\":\n                        {\n                            if (request.params && \"typedDataJson\" in request.params && ((_a = request.params) === null || _a === void 0 ? void 0 : _a.typedDataJson) && typeof request.params.typedDataJson === \"string\") {\n                                ethParams = {\n                                    method: request.method,\n                                    params: [\n                                        request.address,\n                                        request.params.typedDataJson,\n                                    ],\n                                };\n                            }\n                        }\n                        break;\n                    case \"wallet_watchAsset\":\n                        {\n                            if (request.params) {\n                                ethParams = {\n                                    method: request.method,\n                                    params: request.params,\n                                };\n                            }\n                        }\n                        break;\n                    default:\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n                if (ethParams) {\n                    // 特殊处理 \"wallet_switchEthereumChain\"\n                    if ((request.method === \"wallet_switchEthereumChain\" || request.method === \"wallet_addEthereumChain\")\n                        && request.params\n                        && \"chainId\" in request.params) {\n                        (0, utils_1.logDebug)(\"Eip155Provider send request switch requestParams:\", (0, utils_1.safeJsonStringify)(ethParams));\n                        const switchChainId = parseInt(request.params.chainId, 16).toString();\n                        yield window.okxwallet.request(ethParams);\n                        const resultSwitch = `eip155:${switchChainId}:${request.address}`;\n                        (0, utils_1.logDebug)(\"Eip155Provider send request switch result:\", resultSwitch);\n                        return {\n                            result: resultSwitch,\n                            method: request.method,\n                        };\n                    }\n                    else {\n                        const chain = (0, utils_1.getChainId)(request.chainId);\n                        const chainHex = `0x${Number(chain).toString(16)}`;\n                        (0, utils_1.logDebug)(\"Eip155Provider current chainId:\", chain, chainHex);\n                        if (chainHex) {\n                            yield window.okxwallet.request({\n                                method: \"wallet_switchEthereumChain\",\n                                params: [{ chainId: chainHex }],\n                            });\n                            (0, utils_1.logDebug)(\"Eip155Provider send request requestParams:\", chainHex, (0, utils_1.safeJsonStringify)(ethParams));\n                            const resultMe = yield window.okxwallet.request(ethParams);\n                            (0, utils_1.logDebug)(\"Eip155Provider send request result:\", (0, utils_1.safeJsonStringify)(resultMe));\n                            return {\n                                result: resultMe,\n                                method: request.method,\n                            };\n                        }\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"Eip155Provider encountered an error:\", error);\n                throw error;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return window.okxwallet.request({ method: 'eth_requestAccounts' });\n        }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeyEip155) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                connectChain.forEach((chainStr) => {\n                    let currentChain = (0, utils_1.getChainId)(chainStr);\n                    let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                        return (addressItem.chainId === currentChain && addressItem.coinType === 60)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                    if (selectedAddress) {\n                        addresses.push(chainStr + \":\" + selectedAddress.address);\n                        extra[chainStr] = {\n                            publicKey: selectedAddress.publicKey\n                        };\n                    }\n                });\n                if (addresses && addresses.length > 0) {\n                    let nameSpaceResponse = {\n                        namespace: protocol_1.NameSpaceKeyEip155,\n                        addresses: addresses,\n                        methods: [...InjectUtils_1.Eip55Methods],\n                        extra: extra\n                    };\n                    return nameSpaceResponse;\n                }\n                return undefined;\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return window.okxwallet.request({ method: 'eth_requestAccounts' });\n        });\n    }\n    singleConnect() {\n        return this.connect();\n    }\n    addListener(accountChangeListener) {\n        console.log(\"window.okxwallet configEventWithKey: eip155\");\n        this.accountChangedEVMHandler = (accounts) => {\n            console.log(\"window.okxwallet configEventWithKey_evm:\", Date.now(), \"eip155\", accounts);\n            if (accounts && accounts.length > 0) { //\n                accountChangeListener();\n            }\n        };\n        window.okxwallet.on('accountsChanged', this.accountChangedEVMHandler);\n    }\n    removeListener() {\n        if (this.accountChangedEVMHandler) {\n            window.okxwallet.removeListener('accountsChanged', this.accountChangedEVMHandler);\n        }\n    }\n}\nexports.Eip155Provider = Eip155Provider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./eip155Provider\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SuiProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass SuiProvider {\n    constructor() {\n        this.accountChangedHandler = null;\n        // const GlobalWallet: {\n        //     [key: string]: any;\n        //     register: (wallet: any) => void;\n        // } = {\n        //     register: (wallet) => {\n        //         GlobalWallet[wallet.chainName] = wallet; // 动态添加属性\n        //     },\n        // }\n        // const event = new CustomEvent('wallet-standard:app-ready', { detail: GlobalWallet });\n        // window.dispatchEvent(event);\n        // this.suiWallet = GlobalWallet[\"suiMainnet\"]\n    }\n    connectReady() {\n        return true;\n    }\n    getSuiPublicKey() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const suiAccount = yield this.connect();\n            let publicKey = suiAccount.accounts[0].publicKey;\n            return publicKey;\n        });\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeySui) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                if (connectChain.length == 0) {\n                    return undefined;\n                }\n                const suiPublicKey = yield this.getSuiPublicKey();\n                connectChain.forEach((chainStr) => {\n                    var _a;\n                    let currentChain = (0, utils_1.getChainId)(chainStr);\n                    let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                        return (addressItem.coinType === 784)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                    if (selectedAddress) {\n                        addresses.push(chainStr + \":\" + selectedAddress.address);\n                        extra[chainStr] = {\n                            publicKey: (_a = selectedAddress.publicKey) !== null && _a !== void 0 ? _a : suiPublicKey\n                        };\n                    }\n                });\n                if (addresses && addresses.length > 0) {\n                    let nameSpaceResponse = {\n                        namespace: protocol_1.NameSpaceKeySui,\n                        addresses: addresses,\n                        methods: [...InjectUtils_1.SuiMethods],\n                        extra: extra\n                    };\n                    return nameSpaceResponse;\n                }\n                return undefined;\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return this.connect();\n        }\n        return Promise.resolve();\n    }\n    getSuiWallet() {\n        return window.okxwallet.sui;\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this.restoreConnect();\n                (0, utils_1.logDebug)(\"suiProvider send request:\", JSON.stringify(request));\n                const method = request.method;\n                let result;\n                if (request.injectParams && this.getSuiWallet()) {\n                    let originalRarams = request.injectParams;\n                    switch (method) {\n                        case \"sui_signTransactionBlock\":\n                            const injectSignResult = yield this.getSuiWallet().features['sui:signTransactionBlock'].signTransactionBlock(originalRarams);\n                            //{transactionBlockBytes: 'AAACAAhmAAAAAAAAAAAgcveY+LcJkCRT1LtVxlZh6eBBVKUGdl…7bLNXSJ4Qz1jZurage0aGdH6Zb+4CAAAAAAAAIAo1AAAAAAAA', hash: '2pxcesyfKVCs3EegDYUDeQ28m3V3tn5VR32aUZSdg3dc', signature: 'ADDzSloxm5wEQX4BaTMJEON9t/xGgZ66ybiy5uT4TUimdl6Q9/…NeA3YOy/QsAD4XwjQ0rSuNkeKyfNy+VZPtJsmnKWswbGHSw=='}\n                            result = {\n                                method: \"sui_signTransactionBlock\",\n                                result: injectSignResult.signature\n                            };\n                            break;\n                        case \"sui_signAndExecuteTransactionBlock\":\n                            const injectSendResult = yield this.getSuiWallet().features['sui:signAndExecuteTransactionBlock'].signAndExecuteTransactionBlock(originalRarams);\n                            result = {\n                                method: \"sui_signAndExecuteTransactionBlock\",\n                                result: injectSendResult.digest\n                            };\n                            break;\n                        case \"sui_signMessage\":\n                            const injectResult = yield this.getSuiWallet().features['sui:signMessage'].signMessage(originalRarams);\n                            result = {\n                                method: \"sui_signMessage\",\n                                result: injectResult.signature\n                            };\n                            break;\n                        case \"sui_signPersonalMessage\":\n                            const injectPersonalResult = yield this.getSuiWallet().features['sui:signPersonalMessage'].signPersonalMessage(originalRarams);\n                            result = {\n                                method: \"sui_signPersonalMessage\",\n                                result: injectPersonalResult.signature\n                            };\n                            break;\n                    }\n                }\n                return result;\n            }\n            catch (e) {\n                (0, utils_1.logDebug)(\"suiProvider send error:\", e);\n                throw e;\n            }\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            return (_a = this.getSuiWallet()) === null || _a === void 0 ? void 0 : _a.features['standard:connect'].connect();\n        });\n    }\n    singleConnect() {\n        return this.connect();\n    }\n    addListener(accountChangeListener) {\n        console.log(\"window.okxwallet configEventWithKey:\", 'sui');\n        this.accountChangedHandler = (publicKey) => {\n            console.log(\"window.okxwallet configEventWithKey_sui:\", Date.now(), 'sui', publicKey);\n            if (publicKey) {\n                accountChangeListener();\n            }\n        };\n        window.okxwallet.sui.on('accountChanged', this.accountChangedHandler);\n    }\n    removeListener() {\n        if (this.accountChangedHandler) {\n            window.okxwallet.sui.removeListener('accountChanged', this.accountChangedHandler);\n        }\n    }\n}\nexports.SuiProvider = SuiProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NAMES_CHAINS = exports.TON_CHAINS = exports.COSMOS_CHAINS = exports.APTOS_CHAINS = exports.SUI_CHAINS = exports.SOLANA_CHAINS = exports.BTC_CHAINS = void 0;\nconst misc_1 = require(\"./misc\");\nexports.BTC_CHAINS = {\n    MAINNET: 'btc:mainnet',\n    FRACTAL: 'fractal:mainnet',\n};\nexports.SOLANA_CHAINS = {\n    MAINNET: 'solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp',\n    TESTNET: 'solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z',\n    SONIC_TESTNET: 'sonic:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z'\n};\nexports.SUI_CHAINS = {\n    MAINNET: 'sui:mainnet'\n};\nexports.APTOS_CHAINS = {\n    MAINNET: 'aptos:mainnet', // aptos mainnet\n    MOVEMENT_MAINNET: 'movement:mainnet',\n    MOVEMENT_TESTNET: 'movement:testnet',\n};\nexports.COSMOS_CHAINS = {\n    COSMOS_MAINNET: 'cosmos:cosmoshub-4'\n};\nexports.TON_CHAINS = {\n    MAINNET: 'ton:-239', // mainnet\n};\nexports.NAMES_CHAINS = {\n    [misc_1.NameSpaceKeyBtc]: Object.values(exports.BTC_CHAINS),\n    [misc_1.NameSpaceKeySOL]: Object.values(exports.SOLANA_CHAINS),\n    [misc_1.NameSpaceKeyTON]: Object.values(exports.TON_CHAINS),\n    [misc_1.NameSpaceKeySui]: Object.values(exports.SUI_CHAINS),\n    [misc_1.NameSpaceKeyAptos]: Object.values(exports.APTOS_CHAINS),\n    [misc_1.NameSpaceKeyCosmos]: Object.values(exports.COSMOS_CHAINS)\n};\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IEngine = exports.ISignClient = exports.ISignClientEvents = exports.IEngineEvents = void 0;\nconst eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\nclass IEngineEvents extends eventemitter3_1.default {\n    constructor() {\n        super();\n    }\n}\nexports.IEngineEvents = IEngineEvents;\nclass ISignClientEvents extends eventemitter3_1.default {\n    constructor() {\n        super();\n    }\n}\nexports.ISignClientEvents = ISignClientEvents;\nclass ISignClient {\n    constructor(data) {\n        this.data = data;\n    }\n}\nexports.ISignClient = ISignClient;\nclass IEngine {\n    constructor(client) {\n        this.client = client;\n    }\n}\nexports.IEngine = IEngine;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXWalletName = exports.creatOKXInjectWalletInfo = exports.creatOKXMiniAppWalletInfo = exports.creatOKXWalletInfo = exports.ISignClientEvents = exports.IEngine = exports.IEngineEvents = exports.ISignClient = exports.getBigIntRpcId = exports.formatJsonRpcRequest = exports.isJsonRpcError = exports.isJsonRpcResponse = exports.parseConnectionError = exports.isHttpUrl = exports.formatJsonRpcError = void 0;\nvar json_rpc_1 = require(\"./json-rpc\");\nObject.defineProperty(exports, \"formatJsonRpcError\", { enumerable: true, get: function () { return json_rpc_1.formatJsonRpcError; } });\nObject.defineProperty(exports, \"isHttpUrl\", { enumerable: true, get: function () { return json_rpc_1.isHttpUrl; } });\nObject.defineProperty(exports, \"parseConnectionError\", { enumerable: true, get: function () { return json_rpc_1.parseConnectionError; } });\nObject.defineProperty(exports, \"isJsonRpcResponse\", { enumerable: true, get: function () { return json_rpc_1.isJsonRpcResponse; } });\nObject.defineProperty(exports, \"isJsonRpcError\", { enumerable: true, get: function () { return json_rpc_1.isJsonRpcError; } });\nObject.defineProperty(exports, \"formatJsonRpcRequest\", { enumerable: true, get: function () { return json_rpc_1.formatJsonRpcRequest; } });\nObject.defineProperty(exports, \"getBigIntRpcId\", { enumerable: true, get: function () { return json_rpc_1.getBigIntRpcId; } });\nvar engine_1 = require(\"./engine\");\nObject.defineProperty(exports, \"ISignClient\", { enumerable: true, get: function () { return engine_1.ISignClient; } });\nObject.defineProperty(exports, \"IEngineEvents\", { enumerable: true, get: function () { return engine_1.IEngineEvents; } });\nObject.defineProperty(exports, \"IEngine\", { enumerable: true, get: function () { return engine_1.IEngine; } });\nObject.defineProperty(exports, \"ISignClientEvents\", { enumerable: true, get: function () { return engine_1.ISignClientEvents; } });\n__exportStar(require(\"./ton\"), exports);\nvar wallet_info_1 = require(\"./wallet-info\");\nObject.defineProperty(exports, \"creatOKXWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXWalletInfo; } });\nObject.defineProperty(exports, \"creatOKXMiniAppWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXMiniAppWalletInfo; } });\nObject.defineProperty(exports, \"creatOKXInjectWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXInjectWalletInfo; } });\nObject.defineProperty(exports, \"OKXWalletName\", { enumerable: true, get: function () { return wallet_info_1.OKXWalletName; } });\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isJsonRpcPayload = isJsonRpcPayload;\nexports.isJsonRpcRequest = isJsonRpcRequest;\nexports.isJsonRpcResponse = isJsonRpcResponse;\nexports.isJsonRpcResult = isJsonRpcResult;\nexports.isJsonRpcError = isJsonRpcError;\nexports.payloadId = payloadId;\nexports.getBigIntRpcId = getBigIntRpcId;\nexports.formatJsonRpcRequest = formatJsonRpcRequest;\nexports.formatJsonRpcResult = formatJsonRpcResult;\nexports.formatJsonRpcError = formatJsonRpcError;\nexports.isReservedErrorCode = isReservedErrorCode;\nexports.getError = getError;\nexports.getErrorByCode = getErrorByCode;\nexports.formatErrorMessage = formatErrorMessage;\nexports.isHttpUrl = isHttpUrl;\nexports.isWsUrl = isWsUrl;\nexports.parseConnectionError = parseConnectionError;\nfunction isJsonRpcPayload(payload) {\n    return (typeof payload === \"object\" &&\n        \"id\" in payload &&\n        \"jsonrpc\" in payload &&\n        payload.jsonrpc === \"2.0\");\n}\nfunction isJsonRpcRequest(payload) {\n    return isJsonRpcPayload(payload) && \"method\" in payload;\n}\nfunction isJsonRpcResponse(payload) {\n    return isJsonRpcPayload(payload) && (isJsonRpcResult(payload) || isJsonRpcError(payload));\n}\nfunction isJsonRpcResult(payload) {\n    return \"result\" in payload;\n}\nfunction isJsonRpcError(payload) {\n    return \"error\" in payload;\n}\nconst okx_connect_error_1 = require(\"../error/okx-connect.error\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nclass IncrementalRandomGenerator {\n    constructor(bits) {\n        this.i = 1;\n        const typedArray = bits === 8 ? new Uint8Array(1) : bits === 16 ? new Uint16Array(1) : new Uint32Array(1);\n        if (bits) {\n            this.initialValue = tweetnacl_1.default.randomBytes(bits / 8)[0];\n        }\n        else {\n            this.initialValue = 0;\n        }\n    }\n    getNextValue() {\n        return this.initialValue + this.i++;\n    }\n}\nconst uint8Generator = new IncrementalRandomGenerator(8);\nconst uint16Generator = new IncrementalRandomGenerator(16);\nfunction payloadId() {\n    const date = Date.now() * 1000;\n    const extra = uint8Generator.getNextValue();\n    return date + extra;\n}\nfunction getBigIntRpcId() {\n    const date = BigInt(Date.now()) * BigInt(1000000);\n    const extra = BigInt(uint16Generator.getNextValue());\n    return date + extra;\n}\nfunction formatJsonRpcRequest(method, params, id) {\n    return {\n        id: id || payloadId(),\n        jsonrpc: \"2.0\",\n        method,\n        params,\n    };\n}\nfunction formatJsonRpcResult(id, result) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        result,\n    };\n}\nfunction formatJsonRpcError(id, error, data) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        error: formatErrorMessage(error, data),\n    };\n}\nfunction isReservedErrorCode(code) {\n    return okx_connect_error_1.RESERVED_ERROR_CODES.includes(code);\n}\nfunction getError(type) {\n    if (!Object.keys(okx_connect_error_1.STANDARD_ERROR_MAP).includes(type)) {\n        return okx_connect_error_1.STANDARD_ERROR_MAP[okx_connect_error_1.DEFAULT_ERROR];\n    }\n    return okx_connect_error_1.STANDARD_ERROR_MAP[type];\n}\nfunction getErrorByCode(code) {\n    const match = Object.values(okx_connect_error_1.STANDARD_ERROR_MAP).find((e) => e.code === code);\n    if (!match) {\n        return okx_connect_error_1.STANDARD_ERROR_MAP[okx_connect_error_1.DEFAULT_ERROR];\n    }\n    return match;\n}\nfunction formatErrorMessage(error, data) {\n    if (typeof error === \"undefined\") {\n        return getError(okx_connect_error_1.INTERNAL_ERROR);\n    }\n    if (typeof error === \"string\") {\n        error = Object.assign(Object.assign({}, getError(okx_connect_error_1.SERVER_ERROR)), { message: error });\n    }\n    if (typeof data !== \"undefined\") {\n        error.data = data;\n    }\n    if (isReservedErrorCode(error.code)) {\n        error = getErrorByCode(error.code);\n    }\n    return error;\n}\nfunction getUrlProtocol(url) {\n    const matches = url.match(new RegExp(/^\\w+:/, \"gi\"));\n    if (!matches || !matches.length)\n        return;\n    return matches[0];\n}\nfunction matchRegexProtocol(url, regex) {\n    const protocol = getUrlProtocol(url);\n    if (typeof protocol === \"undefined\")\n        return false;\n    return new RegExp(regex).test(protocol);\n}\nfunction isHttpUrl(url) {\n    return matchRegexProtocol(url, \"^https?:\");\n}\nfunction isWsUrl(url) {\n    return matchRegexProtocol(url, \"^wss?:\");\n}\nfunction parseConnectionError(e, url, type) {\n    return e.message.includes(\"getaddrinfo ENOTFOUND\") || e.message.includes(\"connect ECONNREFUSED\")\n        ? new Error(`Unavailable ${type} RPC url at ${url}`)\n        : e;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_ITEM_ERROR_CODES = void 0;\nvar CONNECT_ITEM_ERROR_CODES;\n(function (CONNECT_ITEM_ERROR_CODES) {\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n})(CONNECT_ITEM_ERROR_CODES || (exports.CONNECT_ITEM_ERROR_CODES = CONNECT_ITEM_ERROR_CODES = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TONCHAIN = void 0;\nvar TONCHAIN;\n(function (TONCHAIN) {\n    TONCHAIN[\"MAINNET\"] = \"-239\";\n})(TONCHAIN || (exports.TONCHAIN = TONCHAIN = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_ITEM_ERROR_CODES = exports.TONCHAIN = void 0;\nvar connect_wallet_1 = require(\"./connect-wallet\");\nObject.defineProperty(exports, \"TONCHAIN\", { enumerable: true, get: function () { return connect_wallet_1.TONCHAIN; } });\nvar connect_event_1 = require(\"./connect-event\");\nObject.defineProperty(exports, \"CONNECT_ITEM_ERROR_CODES\", { enumerable: true, get: function () { return connect_event_1.CONNECT_ITEM_ERROR_CODES; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXInjectWalletName = exports.OKXMiniWalletName = exports.OKXWalletName = void 0;\nexports.creatOKXWalletInfo = creatOKXWalletInfo;\nexports.creatOKXMiniAppWalletInfo = creatOKXMiniAppWalletInfo;\nexports.creatOKXInjectWalletInfo = creatOKXInjectWalletInfo;\nexports.OKXWalletName = \"OKX Wallet\";\nexports.OKXMiniWalletName = \"OKX Mini Wallet\";\nexports.OKXInjectWalletName = \"OKX Inject Wallet\";\nfunction creatOKXWalletInfo() {\n    return {\n        \"appName\": \"okxAppWallet\",\n        \"name\": exports.OKXWalletName,\n        \"imageUrl\": \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\"\n    };\n}\nfunction creatOKXMiniAppWalletInfo() {\n    return {\n        \"appName\": \"okxMiniApp\",\n        \"name\": exports.OKXMiniWalletName,\n        \"imageUrl\": \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\"\n    };\n}\nfunction creatOKXInjectWalletInfo() {\n    return {\n        \"appName\": \"okxInjectWallet\",\n        \"name\": exports.OKXInjectWalletName,\n        \"imageUrl\": \"\"\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_MINI_WALLET_NAME = exports.OKX_APP_WALLET_NAME = exports.stackDeepLink = exports.tgwalletAppName = exports.tgwalletName = exports.tonConnectSdkVersion = exports.shortUniversalLink = exports.standardDeeplink = exports.downloadUrl = exports.standardUniversalLink = exports.okxDeeplink = void 0;\nexports.getTestTwaUrl = getTestTwaUrl;\nexports.getTestTgTwaUrl = getTestTgTwaUrl;\nexports.getBotNameAndAppName = getBotNameAndAppName;\nexports.okxDeeplink = 'okx://web3';\nexports.standardUniversalLink = typeof window !== \"undefined\" && window.location.hostname.includes(\"okx.com\")\n    ? \"https://link.okx.com/download\"\n    : \"https://www.okx.com/download\";\nexports.downloadUrl = \"https://www.okx.com/download\";\n// export const standardUniversalLink = 'http://localhost:5173';\nexports.standardDeeplink = `${exports.okxDeeplink}/wallet/connect`;\nexports.shortUniversalLink = `https://www.okx.com/ul/connect`;\n// export const standardDeeplink = 'http://localhost:5173';\nexports.tonConnectSdkVersion = '1';\n// export const tgwalletName: string = \"TCTestqdqwdqwdqBot\"\nexports.tgwalletName = \"OKX_WALLET_BOT\";\nexports.tgwalletAppName = \"start\";\n// https://t.me/OKX_WALLET_BOT/start\nexports.stackDeepLink = 'okx://web3?stack=true';\nfunction getTestTwaUrl() {\n    return window.okxTesttwaUrl;\n}\nfunction getTestTgTwaUrl() {\n    return window.okxTestTgtwaUrl;\n}\nfunction getBotNameAndAppName(url) {\n    const urlObj = new URL(url);\n    const pathnameParts = urlObj.pathname.split('/').filter(Boolean);\n    if (pathnameParts.length >= 2) {\n        const botName = pathnameParts[0]; // 获取 'test_12312313123_bot'\n        const appName = pathnameParts[1]; // 获取 'testtest'\n        return { botName, appName };\n    }\n}\nexports.OKX_APP_WALLET_NAME = 'OKX Wallet';\nexports.OKX_MINI_WALLET_NAME = 'OKX Mini Wallet';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_CONNECT_ERROR_CODES = exports.OKXConnectError = void 0;\nvar okx_connect_error_1 = require(\"./okx-connect.error\");\nObject.defineProperty(exports, \"OKXConnectError\", { enumerable: true, get: function () { return okx_connect_error_1.OKXConnectError; } });\nObject.defineProperty(exports, \"OKX_CONNECT_ERROR_CODES\", { enumerable: true, get: function () { return okx_connect_error_1.OKX_CONNECT_ERROR_CODES; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEFAULT_ERROR = exports.STANDARD_ERROR_MAP = exports.SERVER_ERROR_CODE_RANGE = exports.RESERVED_ERROR_CODES = exports.SERVER_ERROR = exports.INTERNAL_ERROR = exports.INVALID_PARAMS = exports.METHOD_NOT_FOUND = exports.INVALID_REQUEST = exports.PARSE_ERROR = exports.OKX_CONNECT_ERROR_CODES = exports.OKXConnectError = void 0;\nclass OKXConnectError extends Error {\n    constructor(code, message) {\n        if (message == undefined) {\n            message = getDefaultMessageByCode(code);\n        }\n        super(message);\n        this.code = code;\n        this.message = `${OKXConnectError.prefix} ${message ? '\\n' + message : ''}`;\n        Object.setPrototypeOf(this, OKXConnectError.prototype);\n    }\n    toJSON() {\n        return {\n            message: this.message,\n            code: this.code\n        };\n    }\n}\nexports.OKXConnectError = OKXConnectError;\nOKXConnectError.prefix = '[OKX_CONNECT_SDK_ERROR]';\nfunction getDefaultMessageByCode(code) {\n    if (code == OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR) {\n        return \"unknown error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR) {\n        return \"bad request error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.ALREADY_CONNECTED_ERROR) {\n        return \"already connected error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR) {\n        return \"not connected error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.UNKNOWN_APP_ERROR) {\n        return \"unknown app error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n        return \"user rejects error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR_CAUSE_REGISTER) {\n        return \"wallet address are registering\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED) {\n        return \"method not supported\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.CONNECTION_ERROR) {\n        return \"connect error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED) {\n        return \"chain not supported\";\n    }\n    return \"unknown error\";\n}\nvar OKX_CONNECT_ERROR_CODES;\n(function (OKX_CONNECT_ERROR_CODES) {\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"BAD_REQUEST_ERROR\"] = 1] = \"BAD_REQUEST_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"ALREADY_CONNECTED_ERROR\"] = 11] = \"ALREADY_CONNECTED_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"NOT_CONNECTED_ERROR\"] = 12] = \"NOT_CONNECTED_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"UNKNOWN_APP_ERROR\"] = 100] = \"UNKNOWN_APP_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"USER_REJECTS_ERROR\"] = 300] = \"USER_REJECTS_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"USER_REJECTS_ERROR_CAUSE_REGISTER\"] = 301] = \"USER_REJECTS_ERROR_CAUSE_REGISTER\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"CHAIN_NOT_SUPPORTED\"] = 500] = \"CHAIN_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"WALLET_NOT_SUPPORTED\"] = 600] = \"WALLET_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"CONNECTION_ERROR\"] = 700] = \"CONNECTION_ERROR\";\n})(OKX_CONNECT_ERROR_CODES || (exports.OKX_CONNECT_ERROR_CODES = OKX_CONNECT_ERROR_CODES = {}));\nexports.PARSE_ERROR = \"PARSE_ERROR\";\nexports.INVALID_REQUEST = \"INVALID_REQUEST\";\nexports.METHOD_NOT_FOUND = \"METHOD_NOT_FOUND\";\nexports.INVALID_PARAMS = \"INVALID_PARAMS\";\nexports.INTERNAL_ERROR = \"INTERNAL_ERROR\";\nexports.SERVER_ERROR = \"SERVER_ERROR\";\nexports.RESERVED_ERROR_CODES = [-32700, -32600, -32601, -32602, -32603];\nexports.SERVER_ERROR_CODE_RANGE = [-32000, -32099];\nexports.STANDARD_ERROR_MAP = {\n    [exports.PARSE_ERROR]: { code: -32700, message: \"Parse error\" },\n    [exports.INVALID_REQUEST]: { code: -32600, message: \"Invalid Request\" },\n    [exports.METHOD_NOT_FOUND]: { code: -32601, message: \"Method not found\" },\n    [exports.INVALID_PARAMS]: { code: -32602, message: \"Invalid params\" },\n    [exports.INTERNAL_ERROR]: { code: -32603, message: \"Internal error\" },\n    [exports.SERVER_ERROR]: { code: -32000, message: \"Server error\" },\n};\nexports.DEFAULT_ERROR = exports.SERVER_ERROR;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NAMES_CHAINS = exports.TON_CHAINS = exports.COSMOS_CHAINS = exports.APTOS_CHAINS = exports.SUI_CHAINS = exports.SOLANA_CHAINS = exports.BTC_CHAINS = exports.downloadUrl = exports.okxDeeplink = exports.tonConnectSdkVersion = exports.standardDeeplink = exports.standardUniversalLink = exports.NameSpaceKeyStarknet = exports.NameSpaceKeyTron = exports.NameSpaceKeyCosmos = exports.NameSpaceKeyAptos = exports.NameSpaceKeyBtc = exports.NameSpaceKeySui = exports.NameSpaceKeyTON = exports.NameSpaceKeySOL = exports.NameSpaceKeyEip155 = void 0;\n__exportStar(require(\"./error\"), exports);\nvar misc_1 = require(\"./misc\");\nObject.defineProperty(exports, \"NameSpaceKeyEip155\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyEip155; } });\nObject.defineProperty(exports, \"NameSpaceKeySOL\", { enumerable: true, get: function () { return misc_1.NameSpaceKeySOL; } });\nObject.defineProperty(exports, \"NameSpaceKeyTON\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyTON; } });\nObject.defineProperty(exports, \"NameSpaceKeySui\", { enumerable: true, get: function () { return misc_1.NameSpaceKeySui; } });\nObject.defineProperty(exports, \"NameSpaceKeyBtc\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyBtc; } });\nObject.defineProperty(exports, \"NameSpaceKeyAptos\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyAptos; } });\nObject.defineProperty(exports, \"NameSpaceKeyCosmos\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyCosmos; } });\nObject.defineProperty(exports, \"NameSpaceKeyTron\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyTron; } });\nObject.defineProperty(exports, \"NameSpaceKeyStarknet\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyStarknet; } });\nvar constants_1 = require(\"./constants\");\nObject.defineProperty(exports, \"standardUniversalLink\", { enumerable: true, get: function () { return constants_1.standardUniversalLink; } });\nObject.defineProperty(exports, \"standardDeeplink\", { enumerable: true, get: function () { return constants_1.standardDeeplink; } });\nObject.defineProperty(exports, \"tonConnectSdkVersion\", { enumerable: true, get: function () { return constants_1.tonConnectSdkVersion; } });\nObject.defineProperty(exports, \"okxDeeplink\", { enumerable: true, get: function () { return constants_1.okxDeeplink; } });\nObject.defineProperty(exports, \"downloadUrl\", { enumerable: true, get: function () { return constants_1.downloadUrl; } });\n__exportStar(require(\"./connect\"), exports);\nvar chains_1 = require(\"./chains\");\nObject.defineProperty(exports, \"BTC_CHAINS\", { enumerable: true, get: function () { return chains_1.BTC_CHAINS; } });\nObject.defineProperty(exports, \"SOLANA_CHAINS\", { enumerable: true, get: function () { return chains_1.SOLANA_CHAINS; } });\nObject.defineProperty(exports, \"SUI_CHAINS\", { enumerable: true, get: function () { return chains_1.SUI_CHAINS; } });\nObject.defineProperty(exports, \"APTOS_CHAINS\", { enumerable: true, get: function () { return chains_1.APTOS_CHAINS; } });\nObject.defineProperty(exports, \"COSMOS_CHAINS\", { enumerable: true, get: function () { return chains_1.COSMOS_CHAINS; } });\nObject.defineProperty(exports, \"TON_CHAINS\", { enumerable: true, get: function () { return chains_1.TON_CHAINS; } });\nObject.defineProperty(exports, \"NAMES_CHAINS\", { enumerable: true, get: function () { return chains_1.NAMES_CHAINS; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NameSpaceKeyStarknet = exports.NameSpaceKeyTron = exports.NameSpaceKeyCosmos = exports.NameSpaceKeyAptos = exports.NameSpaceKeyBtc = exports.NameSpaceKeySui = exports.NameSpaceKeyTON = exports.NameSpaceKeySOL = exports.NameSpaceKeyEip155 = void 0;\nexports.NameSpaceKeyEip155 = \"eip155\";\nexports.NameSpaceKeySOL = \"solana\";\nexports.NameSpaceKeyTON = \"ton\";\nexports.NameSpaceKeySui = \"sui\";\nexports.NameSpaceKeyBtc = \"btc\";\nexports.NameSpaceKeyAptos = \"aptos\";\nexports.NameSpaceKeyCosmos = \"cosmos\";\nexports.NameSpaceKeyTron = \"tron\";\nexports.NameSpaceKeyStarknet = \"starknet\";\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.callForSuccess = callForSuccess;\nexports.delay = delay;\n/**\n * Function to call ton api until we get response.\n * Because ton network is pretty unstable we need to make sure response is final.\n * @param {T} fn - function to call\n * @param {CallForSuccessOptions} [options] - optional configuration options\n */\nfunction callForSuccess(fn, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b;\n        const attempts = (_a = options === null || options === void 0 ? void 0 : options.attempts) !== null && _a !== void 0 ? _a : 3;\n        const delayMs = (_b = options === null || options === void 0 ? void 0 : options.delayMs) !== null && _b !== void 0 ? _b : 800;\n        if (typeof fn !== 'function') {\n            throw new Error(`Expected a function, got ${typeof fn}`);\n        }\n        let i = 0;\n        let lastError;\n        while (i < attempts) {\n            try {\n                return yield fn();\n            }\n            catch (err) {\n                lastError = err;\n                i++;\n                if (i < attempts) {\n                    yield delay(delayMs);\n                }\n            }\n        }\n        throw lastError;\n    });\n}\n/**\n * Delays the execution of code for a specified number of milliseconds.\n * @param {number} timeout - The number of milliseconds to delay the execution.\n * @param {DelayOptions} [options] - Optional configuration options for the delay.\n * @return {Promise<void>} - A promise that resolves after the specified delay, or rejects if the delay is aborted.\n */\nfunction delay(timeout, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            var _a, _b;\n            if ((_a = options === null || options === void 0 ? void 0 : options.signal) === null || _a === void 0 ? void 0 : _a.aborted) {\n                reject(new Error('Delay aborted'));\n                return;\n            }\n            const timeoutId = setTimeout(() => resolve(), timeout);\n            (_b = options === null || options === void 0 ? void 0 : options.signal) === null || _b === void 0 ? void 0 : _b.addEventListener('abort', () => {\n                clearTimeout(timeoutId);\n                reject(new Error('Delay aborted'));\n            });\n        });\n    });\n}\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getNamespaceKeyByChain = exports.chainName2IdMap = exports.replaceChainIdToChainName = exports.replaceChainNameToChainId = exports.checkMetaData = exports.versionCompare = exports.isBrowser = exports.isOS = exports.isMobileUserAgent = exports.openDeeplinkWithFallback = exports.openLinkBlank = exports.openLink = exports.getChainId = exports.useShortLink = exports.toSafeBase64FromBase64 = exports.isValidObject = exports.isIos = exports.base64decode = exports.base64encode = exports.splitToUint8Arrays = exports.concatUint8Arrays = exports.toHexString = exports.hexToByteArray = exports.getOKXLink = exports.openOKXUniversalLink = exports.getAppWalletShortDeepLink = exports.encodeTWAConnectURLParams = exports.encodeConnectParams = exports.openOKXTMAWalletlinkWithFallback = exports.getTelegramWalletTWAUrl = exports.getAppWalletDeepLink = exports.encodeTelegramUrlParameters = exports.isTelegramUrl = exports.openOKXDeeplinkWithFallback = exports.openOKXDeeplink = exports.getUniversalLink = exports.safeJsonStringify = exports.safeJsonParse = exports.getDefaultReporter = exports.reportEvent = exports.reportLog = exports.logWarning = exports.logError = exports.logDebug = exports.callForSuccess = void 0;\nvar call_for_success_1 = require(\"./call-for-success\");\nObject.defineProperty(exports, \"callForSuccess\", { enumerable: true, get: function () { return call_for_success_1.callForSuccess; } });\nvar log_1 = require(\"./log\");\nObject.defineProperty(exports, \"logDebug\", { enumerable: true, get: function () { return log_1.logDebug; } });\nObject.defineProperty(exports, \"logError\", { enumerable: true, get: function () { return log_1.logError; } });\nObject.defineProperty(exports, \"logWarning\", { enumerable: true, get: function () { return log_1.logWarning; } });\nObject.defineProperty(exports, \"reportLog\", { enumerable: true, get: function () { return log_1.reportLog; } });\nObject.defineProperty(exports, \"reportEvent\", { enumerable: true, get: function () { return log_1.reportEvent; } });\nObject.defineProperty(exports, \"getDefaultReporter\", { enumerable: true, get: function () { return log_1.getDefaultReporter; } });\n__exportStar(require(\"./reportconstants\"), exports);\n__exportStar(require(\"./report\"), exports);\nvar safejson_1 = require(\"./safejson\");\nObject.defineProperty(exports, \"safeJsonParse\", { enumerable: true, get: function () { return safejson_1.safeJsonParse; } });\nObject.defineProperty(exports, \"safeJsonStringify\", { enumerable: true, get: function () { return safejson_1.safeJsonStringify; } });\nvar url_1 = require(\"./url\");\nObject.defineProperty(exports, \"getUniversalLink\", { enumerable: true, get: function () { return url_1.getUniversalLink; } });\nObject.defineProperty(exports, \"openOKXDeeplink\", { enumerable: true, get: function () { return url_1.openOKXDeeplink; } });\nObject.defineProperty(exports, \"openOKXDeeplinkWithFallback\", { enumerable: true, get: function () { return url_1.openOKXDeeplinkWithFallback; } });\nObject.defineProperty(exports, \"isTelegramUrl\", { enumerable: true, get: function () { return url_1.isTelegramUrl; } });\nObject.defineProperty(exports, \"encodeTelegramUrlParameters\", { enumerable: true, get: function () { return url_1.encodeTelegramUrlParameters; } });\nObject.defineProperty(exports, \"getAppWalletDeepLink\", { enumerable: true, get: function () { return url_1.getAppWalletDeepLink; } });\nObject.defineProperty(exports, \"getTelegramWalletTWAUrl\", { enumerable: true, get: function () { return url_1.getTelegramWalletTWAUrl; } });\nObject.defineProperty(exports, \"openOKXTMAWalletlinkWithFallback\", { enumerable: true, get: function () { return url_1.openOKXTMAWalletlinkWithFallback; } });\nObject.defineProperty(exports, \"encodeConnectParams\", { enumerable: true, get: function () { return url_1.encodeConnectParams; } });\nObject.defineProperty(exports, \"encodeTWAConnectURLParams\", { enumerable: true, get: function () { return url_1.encodeTWAConnectURLParams; } });\nObject.defineProperty(exports, \"getAppWalletShortDeepLink\", { enumerable: true, get: function () { return url_1.getAppWalletShortDeepLink; } });\nObject.defineProperty(exports, \"openOKXUniversalLink\", { enumerable: true, get: function () { return url_1.openOKXUniversalLink; } });\nObject.defineProperty(exports, \"getOKXLink\", { enumerable: true, get: function () { return url_1.getOKXLink; } });\nvar utils_1 = require(\"./utils\");\nObject.defineProperty(exports, \"hexToByteArray\", { enumerable: true, get: function () { return utils_1.hexToByteArray; } });\nObject.defineProperty(exports, \"toHexString\", { enumerable: true, get: function () { return utils_1.toHexString; } });\nObject.defineProperty(exports, \"concatUint8Arrays\", { enumerable: true, get: function () { return utils_1.concatUint8Arrays; } });\nObject.defineProperty(exports, \"splitToUint8Arrays\", { enumerable: true, get: function () { return utils_1.splitToUint8Arrays; } });\nObject.defineProperty(exports, \"base64encode\", { enumerable: true, get: function () { return utils_1.base64encode; } });\nObject.defineProperty(exports, \"base64decode\", { enumerable: true, get: function () { return utils_1.base64decode; } });\nObject.defineProperty(exports, \"isIos\", { enumerable: true, get: function () { return utils_1.isIos; } });\nObject.defineProperty(exports, \"isValidObject\", { enumerable: true, get: function () { return utils_1.isValidObject; } });\nObject.defineProperty(exports, \"toSafeBase64FromBase64\", { enumerable: true, get: function () { return utils_1.toSafeBase64FromBase64; } });\nObject.defineProperty(exports, \"useShortLink\", { enumerable: true, get: function () { return utils_1.useShortLink; } });\nObject.defineProperty(exports, \"getChainId\", { enumerable: true, get: function () { return utils_1.getChainId; } });\nvar web_api_1 = require(\"./web-api\");\nObject.defineProperty(exports, \"openLink\", { enumerable: true, get: function () { return web_api_1.openLink; } });\nObject.defineProperty(exports, \"openLinkBlank\", { enumerable: true, get: function () { return web_api_1.openLinkBlank; } });\nObject.defineProperty(exports, \"openDeeplinkWithFallback\", { enumerable: true, get: function () { return web_api_1.openDeeplinkWithFallback; } });\nObject.defineProperty(exports, \"isMobileUserAgent\", { enumerable: true, get: function () { return web_api_1.isMobileUserAgent; } });\nObject.defineProperty(exports, \"isOS\", { enumerable: true, get: function () { return web_api_1.isOS; } });\nObject.defineProperty(exports, \"isBrowser\", { enumerable: true, get: function () { return web_api_1.isBrowser; } });\nvar tma_api_1 = require(\"./tma-api\");\nObject.defineProperty(exports, \"versionCompare\", { enumerable: true, get: function () { return tma_api_1.versionCompare; } });\nvar request_1 = require(\"./request\");\nObject.defineProperty(exports, \"checkMetaData\", { enumerable: true, get: function () { return request_1.checkMetaData; } });\nvar utils_2 = require(\"./utils\");\nObject.defineProperty(exports, \"replaceChainNameToChainId\", { enumerable: true, get: function () { return utils_2.replaceChainNameToChainId; } });\nObject.defineProperty(exports, \"replaceChainIdToChainName\", { enumerable: true, get: function () { return utils_2.replaceChainIdToChainName; } });\nObject.defineProperty(exports, \"chainName2IdMap\", { enumerable: true, get: function () { return utils_2.chainName2IdMap; } });\nObject.defineProperty(exports, \"getNamespaceKeyByChain\", { enumerable: true, get: function () { return utils_2.getNamespaceKeyByChain; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getDefaultReporter = getDefaultReporter;\nexports.logDebug = logDebug;\nexports.logError = logError;\nexports.logWarning = logWarning;\nexports.reportEvent = reportEvent;\nexports.reportLog = reportLog;\nconst debug = false;\nconst forceReport = false;\nconst report_1 = require(\"./report\");\nconst defaultReporter = new report_1.OKXReporter();\nfunction getDefaultReporter() {\n    return defaultReporter;\n}\nconst packageJson = require('../../package.json');\nconst version = packageJson.version;\nfunction logDebug(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.log(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction logError(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.error(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n            if (forceReport || !debug) {\n                let content = '';\n                content += [...args].reduce((result, item) => {\n                    if (typeof item == 'string') {\n                        result += ',' + item;\n                    }\n                    else if (typeof item == 'object') {\n                        result += JSON.stringify(item);\n                    }\n                });\n                defaultReporter.sendRecordContent(content, report_1.OKXReportType.LOG, '');\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction logWarning(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.warn(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction reportEvent(type, action, content) {\n    return __awaiter(this, void 0, void 0, function* () {\n        yield defaultReporter.sendRecordContent(content, type, action);\n    });\n}\nfunction reportLog(content_1) {\n    return __awaiter(this, arguments, void 0, function* (content, action = 'default') {\n        // await defaultReporter.sendRecordContent(content, OKXReportType.LOG, action)\n    });\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mediaNotTouch = exports.mediaTouch = exports.maxWidth = void 0;\nexports.isDevice = isDevice;\nexports.media = media;\nexports.mediaMin = mediaMin;\nexports.mediaMax = mediaMax;\nexports.mediaMinMax = mediaMinMax;\nconst web_api_1 = require(\"../utils/web-api\");\nconst tma_api_1 = require(\"../utils/tma-api\");\nconst url_1 = require(\"./url\");\nconst log_1 = require(\"./log\");\nexports.maxWidth = {\n    mobile: 440,\n    tablet: 1020\n};\nfunction isDevice(device) {\n    var _a;\n    const window = (0, url_1.getWindow)();\n    if (!window) {\n        return device === 'desktop';\n    }\n    // TODO: remove this check when weba will fix viewport width\n    if ((0, tma_api_1.isTmaPlatform)('weba')) {\n        return true;\n    }\n    const width = window.innerWidth;\n    switch (device) {\n        case 'desktop':\n            return width > exports.maxWidth.tablet;\n        case 'tablet':\n            return width > exports.maxWidth.mobile;\n        default:\n        case 'mobile':\n            let isMobile = width <= exports.maxWidth.mobile || (0, web_api_1.isOS)('ios', 'android', 'ipad');\n            if (isMobile) {\n                const isTelegram = !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n                const maxTouchPoints = navigator.maxTouchPoints || 0;\n                if (isTelegram && maxTouchPoints === 0) {\n                    isMobile = false;\n                }\n                (0, log_1.logDebug)(\"isDevice mobile isTelegram and maxTouchPoints:\", isMobile, isTelegram, maxTouchPoints);\n            }\n            return isMobile;\n    }\n}\nfunction media(device) {\n    switch (device) {\n        case 'mobile':\n            return `@media (max-width: ${exports.maxWidth.mobile}px)`;\n        case 'tablet':\n            return `@media (max-width: ${exports.maxWidth.tablet}px) (min-width: ${exports.maxWidth.mobile}px)`;\n        default:\n        case 'desktop':\n            return `@media (min-width: ${exports.maxWidth.tablet}px)`;\n    }\n}\nfunction mediaMin(px) {\n    return `@media (min-width: ${px}px)`;\n}\nfunction mediaMax(px) {\n    return `@media (max-width: ${px}px)`;\n}\nfunction mediaMinMax(pxMin, pxMax) {\n    return `@media (min-width: ${pxMin}px) and (max-width: ${pxMax}px)`;\n}\nexports.mediaTouch = '@media (hover: none)';\nexports.mediaNotTouch = '@media not all and (hover: none)';\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXReporter = exports.OKXReportSide = exports.OKXReportType = exports.versionStr = void 0;\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nconst log_1 = require(\"./log\");\nconst url_1 = require(\"./url\");\nconst utils_1 = require(\"../utils\");\nconst localforage_1 = __importDefault(require(\"localforage\"));\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nexports.versionStr = '1.7.1';\nconst reportApiList = [\n    'https://www.okx.com/dappstat/wallet-connect',\n    'https://www.okx.ac/dappstat/wallet-connect'\n];\nconst reportCacheKey = 'OKX_RP_CK';\nconst reportUUIDKey = 'OKX_RP_UUID_CK';\nconst MAX_LIMIT_REPORTCOUNT = 100;\nconst DEFAULT_HTTP_HEADERS = {\n    Accept: \"*/*\",\n    \"Content-Type\": \"text/plain\",\n};\nconst DEFAULT_HTTP_METHOD = \"POST\";\nconst DEFAULT_FETCH_OPTS = {\n    headers: DEFAULT_HTTP_HEADERS,\n    method: DEFAULT_HTTP_METHOD,\n};\nexports.OKXReportType = {\n    PAGE_IN: 'page_in',\n    PAGE_OUT: 'page_out',\n    CLICK: 'click',\n    LOG: 'log',\n};\nexports.OKXReportSide = {\n    DAPP: 'dapp',\n    WALLET: 'wallet',\n};\nclass IReporter {\n}\nconst fetchWithTimeout = (url, options, timeout = 5000) => {\n    const controller = new AbortController();\n    const signal = controller.signal;\n    const fetchPromise = (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, options), { signal }));\n    const timeoutPromise = new Promise((_, reject) => setTimeout(() => {\n        controller.abort();\n        reject(new Error('Request timed out'));\n    }, timeout));\n    return Promise.race([fetchPromise, timeoutPromise]);\n};\nconst fetchListWithTimeout = (urls_1, ...args_1) => __awaiter(void 0, [urls_1, ...args_1], void 0, function* (urls, options = {}, timeout = 5000) {\n    for (const url of urls) {\n        try {\n            const controller = new AbortController();\n            const signal = controller.signal;\n            const fetchPromise = (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, options), { signal }));\n            const timeoutPromise = new Promise((_, reject) => setTimeout(() => {\n                controller.abort();\n                reject(new Error('Request timed out'));\n            }, timeout));\n            const response = yield Promise.race([fetchPromise, timeoutPromise]);\n            if (response.ok) {\n                return response;\n            }\n            if (response.status == 502) {\n                console.error(`Fetch error status 502`, url);\n                return response;\n            }\n        }\n        catch (error) {\n            console.error(`Fetch error for ${url}:`, error);\n        }\n    }\n    console.error(`'All fetch attempts failed.'`);\n    throw new Error('All fetch attempts failed.');\n});\nclass OKXReporter {\n    constructor() {\n        this.currentSide = exports.OKXReportSide.DAPP;\n        this.currentVersion = exports.versionStr;\n        this.storage = localforage_1.default.createInstance({\n            name: \"OKXReporter\"\n        });\n        this.recordList = new Array();\n        this.currentUUID = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(16));\n    }\n    configVersionAndSide(version, side, appname) {\n        this.currentVersion = version;\n        this.currentSide = side;\n        this.appName = appname;\n    }\n    get recordCacheKey() {\n        return reportCacheKey + \"@\" + this.appName;\n    }\n    get reportPlatform() {\n        if ((0, utils_1.isMobileUserAgent)()) {\n            if ((0, utils_1.isIos)()) {\n                return 'iOS';\n            }\n            else {\n                return 'android';\n            }\n        }\n        else {\n            return 'pc';\n        }\n    }\n    beginReport() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.startErrorCatching();\n            let records = yield this.storage.getItem(this.recordCacheKey);\n            let uuid = yield this.storage.getItem(reportUUIDKey);\n            if (uuid) {\n                this.currentUUID = uuid;\n            }\n            else {\n                this.storage.setItem(reportUUIDKey, this.currentUUID);\n            }\n            if (records) {\n                this.recordList = records;\n                (0, log_1.logDebug)('resume records from cache length: ', this.recordList.length);\n                yield this.sendCachedRecords();\n            }\n        });\n    }\n    startErrorCatching() {\n        let window = (0, url_1.getWindow)();\n        if (window) {\n            (0, log_1.logDebug)('begin capture console error');\n            // window.onerror = (event: Event | string, source?: string, lineno?: number, colno?: number, error?: Error) => {\n            //     logDebug('capture error info:', error, source)\n            //     this.markRecord(error?.message+'/'+error?.name+'/'+error?.stack, OKXReportType.LOG, '', this.currentSide)\n            // }\n        }\n    }\n    cachedErrors() {\n        return this.recordList;\n    }\n    sendRecord(record) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    const body = JSON.stringify(record);\n                    (0, log_1.logDebug)('[REPORT] record: ', body);\n                    const res = yield fetchListWithTimeout(reportApiList, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body: body }));\n                    (0, log_1.logDebug)('[REPORT] get rsp:', res);\n                    if (res && res.status && res.status == 200) {\n                        this.recordList = this.recordList.filter((item) => {\n                            return item.timestamp != record.timestamp || item.content != record.content;\n                        });\n                        yield this.storage.setItem(this.recordCacheKey, this.recordList);\n                        resolve(true);\n                    }\n                    else {\n                        reject(false);\n                    }\n                }\n                catch (e) {\n                    (0, log_1.logDebug)('send record error:', e);\n                    resolve(true);\n                    // reject(e)\n                }\n            }));\n        });\n    }\n    sendRecordContent(content, type, action) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            let path = (_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.location.pathname;\n            let location = (_b = (0, url_1.getWindow)()) === null || _b === void 0 ? void 0 : _b.location.origin;\n            if (path && location) {\n                location = location + path;\n            }\n            let language = (_c = (0, url_1.getWindow)()) === null || _c === void 0 ? void 0 : _c.navigator.language;\n            let ua = (_d = (0, url_1.getWindow)()) === null || _d === void 0 ? void 0 : _d.navigator.userAgent;\n            let platform = this.reportPlatform;\n            let reportItem = {\n                uuid: this.currentUUID,\n                version: this.currentVersion,\n                content: content,\n                action: action,\n                side: this.currentSide,\n                timestamp: new Date().getTime(),\n                url: location,\n                lang: language,\n                type: type,\n                platform: platform,\n                \"user-agent\": ua\n            };\n            yield this.markRecordItem(reportItem);\n            yield this.sendRecord(reportItem);\n        });\n    }\n    sendCachedRecords() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let sendList = this.recordList.map(record => this.sendRecord(record));\n                (0, log_1.logDebug)('[REPORT] submit & clean recorded caches begin @', new Date().toUTCString());\n                Promise.allSettled(sendList).then((results) => {\n                    (0, log_1.logDebug)('[REPORT] submit & clean recorded caches ends @', new Date().toUTCString());\n                    let keepIndex = [];\n                    results.forEach((result, index) => {\n                        if (result.status == \"rejected\") {\n                            keepIndex.push(index);\n                        }\n                    });\n                    this.recordList = this.recordList.filter((_, index) => !keepIndex.includes(index));\n                    this.storage.setItem(this.recordCacheKey, this.recordList).then(function (value) {\n                        resolve();\n                    }).catch(function (err) {\n                        reject(err);\n                    });\n                });\n            }));\n        });\n    }\n    markRecordItem(item) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.recordList.push(item);\n            if (this.recordList.length > MAX_LIMIT_REPORTCOUNT) {\n                let offset = this.recordList.length - MAX_LIMIT_REPORTCOUNT;\n                this.recordList.splice(0, offset);\n            }\n            return new Promise((resolve, reject) => {\n                this.storage.setItem(this.recordCacheKey, this.recordList).then(function (value) {\n                    resolve(item);\n                }).catch(function (err) {\n                    reject(err);\n                });\n            });\n        });\n    }\n    markRecord(content, type, action, side) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            let path = (_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.location.pathname;\n            let location = (_b = (0, url_1.getWindow)()) === null || _b === void 0 ? void 0 : _b.location.origin;\n            if (path && location) {\n                location = location + path;\n            }\n            let language = (_c = (0, url_1.getWindow)()) === null || _c === void 0 ? void 0 : _c.navigator.language;\n            let platform = this.reportPlatform;\n            let ua = (_d = (0, url_1.getWindow)()) === null || _d === void 0 ? void 0 : _d.navigator.userAgent;\n            let reportItem = {\n                uuid: this.currentUUID,\n                version: this.currentVersion,\n                content: content,\n                action: action,\n                side: side,\n                timestamp: new Date().getTime(),\n                url: location,\n                lang: language,\n                type: type,\n                platform: platform,\n                \"user-agent\": ua\n            };\n            return yield this.markRecordItem(reportItem);\n        });\n    }\n}\nexports.OKXReporter = OKXReporter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Report_WalletType_Key = exports.Report_ConnectDapp_ConnectAndSign_Click = exports.Report_Proceed_QRCode_Click = exports.Report_ChooseType_Download_Click = exports.Report_ChooseType_ConnectWallet_Click = exports.Report_Proceed_Retry_Click = exports.Report_ChooseType_ConnectWallet_View = exports.Report_Loading_ConnectWallet_View = exports.Report_Proceed_QRCode_View = exports.Report_Proceed_Proceed_View = void 0;\nexports.Report_Proceed_Proceed_View = \"OKXConnectSDK_Proceed_Proceed_View\";\nexports.Report_Proceed_QRCode_View = \"OKXConnectSDK_Proceed_QRCode_View\";\nexports.Report_Loading_ConnectWallet_View = \"OKXConnectSDK_Loading_ConnectWallet_View\";\nexports.Report_ChooseType_ConnectWallet_View = \"OKXConnectSDK_ChooseType_ConnectWallet_View\";\nexports.Report_Proceed_Retry_Click = \"OKXConnectSDK_Proceed_Retry_Click\";\nexports.Report_ChooseType_ConnectWallet_Click = \"OKXConnectSDK_ChooseType_ConnectWallet_Click\";\nexports.Report_ChooseType_Download_Click = \"OKXConnectSDK_ChooseType_Download_Click\";\nexports.Report_Proceed_QRCode_Click = \"OKXConnectSDK_Proceed_QRCode_Click\";\nexports.Report_ConnectDapp_ConnectAndSign_Click = \"OKXConnectSDK_ConnectDapp_ConnectAndSign_Click\";\nexports.Report_WalletType_Key = 'wallet_type';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkMetaData = checkMetaData;\nconst protocol_1 = require(\"../protocol\");\nfunction checkMetaData(dappMetaData) {\n    if (!dappMetaData) {\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"You have to specify a `dappMetaData`in the options.\");\n    }\n    if (!dappMetaData.name) {\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"dappName is required\");\n    }\n    if (!dappMetaData.icon) {\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"icon is required\");\n    }\n    return true;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.safeJsonParse = safeJsonParse;\nexports.safeJsonStringify = safeJsonStringify;\nconst log_1 = require(\"./log\");\nconst JSONStringify = (data) => JSON.stringify(data, (_, value) => (typeof value === \"bigint\" ? value.toString() + \"n\" : value));\n/*\n  Function to parse JSON.\n  If JSON has values in our custom format BigInt (strings with \"n\" character at the end), we just parse them to BigInt values.\n  If JSON has big number values, but not in our custom format, we copy it, and in a copy we convert those values to our custom format,\n  then parse them to BigInt values.\n  Other values (not big numbers and not our custom format BigInt values) are not affected and parsed as native JSON.parse() would parse them.\n*/\nconst JSONParse = (json) => {\n    /*\n      Big numbers are found and marked using Regex with this condition:\n      Number's length is bigger than 16 || Number's length is 16 and any numerical digit of the number is greater than that of the Number.MAX_SAFE_INTEGER\n      Additionally, it skips values that are strings (between double quotes).\n      */\n    // prettier-ignore\n    // eslint-disable-next-line no-useless-escape\n    const numbersBiggerThanMaxInt = /:(\\b\\d{17,}|\\b(?:[9](?:[1-9]07199254740991|0[1-9]7199254740991|00[8-9]199254740991|007[2-9]99254740991|007199[3-9]54740991|0071992[6-9]4740991|00719925[5-9]740991|007199254[8-9]40991|0071992547[5-9]0991|00719925474[1-9]991|00719925474099[2-9])))(?=[,\\}\\]]|$)/g;\n    const serializedData = json.replace(numbersBiggerThanMaxInt, (match, group) => `:\"${group}n\"`);\n    try {\n        return JSON.parse(serializedData, (_, value) => {\n            const isCustomFormatBigInt = typeof value === \"string\" && value.match(/^\\d+n$/);\n            if (isCustomFormatBigInt)\n                return BigInt(value.substring(0, value.length - 1));\n            return value;\n        });\n    }\n    catch (e) {\n        return JSON.parse(json);\n    }\n};\nfunction safeJsonParse(value) {\n    if (typeof value !== \"string\") {\n        (0, log_1.logDebug)(value);\n        throw new Error(`Cannot safe json parse value of type ${typeof value}`);\n    }\n    try {\n        return JSONParse(value);\n    }\n    catch (e) {\n        // eslint-disable-next-line no-console\n        console.error(\"safeJsonParse error:\", e);\n        return value;\n    }\n}\nfunction safeJsonStringify(value) {\n    return typeof value === \"string\" ? value : JSONStringify(value) || \"\";\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.okxfromString = okxfromString;\nexports.okxtoString = okxtoString;\nexports.alloc = alloc;\nexports.allocUnsafe = allocUnsafe;\nconst basics_1 = require(\"multiformats/basics\");\nconst log_1 = require(\"../utils/log\");\nfunction okxfromString(string, encoding = 'utf8') {\n    const base = BASES[encoding];\n    (0, log_1.logDebug)(\"okxfromstring ====> \");\n    if (!base) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    return base.decoder.decode(`${base.prefix}${string}`);\n}\nfunction okxtoString(array, encoding = 'utf8') {\n    const base = BASES[encoding];\n    (0, log_1.logDebug)(\"okxtoString ====> \");\n    if (!base) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    return base.encoder.encode(array).substring(1);\n}\nfunction alloc(size = 0) {\n    return new Uint8Array(size);\n}\nfunction allocUnsafe(size = 0) {\n    return new Uint8Array(size);\n}\nfunction createCodec(name, prefix, encode, decode) {\n    return {\n        name,\n        prefix,\n        encoder: {\n            name,\n            prefix,\n            encode\n        },\n        decoder: { decode }\n    };\n}\nconst string = createCodec('utf8', 'u', buf => {\n    const decoder = new TextDecoder('utf8');\n    return 'u' + decoder.decode(buf);\n}, str => {\n    const encoder = new TextEncoder();\n    return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', buf => {\n    let result = 'a';\n    for (let i = 0; i < buf.length; i++) {\n        let bufNum = buf[i];\n        if (bufNum && String.fromCharCode(bufNum)) {\n            result += String.fromCharCode(bufNum);\n        }\n    }\n    return result;\n}, str => {\n    str = str.substring(1);\n    const buf = allocUnsafe(str.length);\n    for (let i = 0; i < str.length; i++) {\n        buf[i] = str.charCodeAt(i);\n    }\n    return buf;\n});\nconst BASES = Object.assign({ utf8: string, 'utf-8': string, hex: basics_1.bases.base16, latin1: ascii, ascii: ascii, binary: ascii }, basics_1.bases);\n","\"use strict\";\nvar _a, _b, _c, _d, _e, _f, _g;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isTmaPlatform = isTmaPlatform;\nexports.isInTMA = isInTMA;\nexports.inTg = inTg;\nexports.isInTelegramBrowser = isInTelegramBrowser;\nexports.sendExpand = sendExpand;\nexports.sendOpenTelegramLink = sendOpenTelegramLink;\nexports.versionCompare = versionCompare;\nconst url_1 = require(\"./url\");\nconst log_1 = require(\"./log\");\nconst protocol_1 = require(\"../protocol\");\nconst web_api_1 = require(\"./web-api\");\nlet initParams = {};\ntry {\n    let locationHash = location.hash.toString();\n    initParams = urlParseHashParams(locationHash);\n}\ncatch (e) { }\nlet tmaPlatform = 'unknown';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppPlatform) {\n    tmaPlatform = (_a = initParams.tgWebAppPlatform) !== null && _a !== void 0 ? _a : 'unknown';\n}\nif (tmaPlatform === 'unknown') {\n    const window = (0, url_1.getWindow)();\n    tmaPlatform = (_d = (_c = (_b = window === null || window === void 0 ? void 0 : window.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) === null || _c === void 0 ? void 0 : _c.platform) !== null && _d !== void 0 ? _d : 'unknown';\n}\nlet webAppVersion = '6.0';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppVersion) {\n    webAppVersion = initParams.tgWebAppVersion;\n}\nif (!webAppVersion) {\n    const window = (0, url_1.getWindow)();\n    webAppVersion = (_g = (_f = (_e = window === null || window === void 0 ? void 0 : window.Telegram) === null || _e === void 0 ? void 0 : _e.WebApp) === null || _f === void 0 ? void 0 : _f.version) !== null && _g !== void 0 ? _g : '6.0';\n}\n/**\n * Returns true if the app is running in TMA on the specified platform.\n * @param platforms\n */\nfunction isTmaPlatform(...platforms) {\n    return platforms.includes(tmaPlatform);\n}\n/**\n * Returns true if the app is running in TMA.\n */\nfunction isInTMA() {\n    var _a;\n    return tmaPlatform !== 'unknown' || !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n}\nfunction inTg() {\n    // return true\n    return isInTelegramBrowser() || isInTMA();\n}\n/**\n * Returns true if the app is running in the Telegram browser.\n */\nfunction isInTelegramBrowser() {\n    var _a;\n    const isTelegramWebview = !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebview);\n    return (isInTMA() || isTelegramWebview) && tmaPlatform === 'unknown';\n}\n/**\n * Expand the app window.\n */\nfunction sendExpand() {\n    postEvent('web_app_expand', {});\n}\n/**\n * Opens link in TMA or in new tab and returns a function that closes the tab.\n * @param link The link to open.\n * @param fallback The function to call if the link can't be opened in TMA.\n */\nfunction sendOpenTelegramLink(link, fallback) {\n    const url = new URL(link);\n    if (url.protocol !== 'http:' && url.protocol !== 'https:') {\n        if (fallback) {\n            return fallback();\n        }\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Url protocol is not supported: ${url}`);\n    }\n    if (url.hostname !== 't.me') {\n        if (fallback) {\n            return fallback();\n        }\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Url host is not supported: ${url}`);\n    }\n    const pathFull = url.pathname + url.search;\n    if (isIframe() || versionAtLeast('6.1')) {\n        postEvent('web_app_open_tg_link', { path_full: pathFull });\n    }\n    else {\n        (0, web_api_1.openLinkBlank)('https://t.me' + pathFull);\n    }\n}\nfunction isIframe() {\n    try {\n        const window = (0, url_1.getWindow)();\n        if (!window) {\n            return false;\n        }\n        return window.parent != null && window !== window.parent;\n    }\n    catch (e) {\n        return false;\n    }\n}\nfunction postEvent(eventType, eventData) {\n    try {\n        const window = (0, url_1.getWindow)();\n        if (!window) {\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Can't post event to parent window: window is not defined`);\n        }\n        if (window.TelegramWebviewProxy !== undefined) {\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.TelegramWebviewProxy.postEvent(eventType, JSON.stringify(eventData));\n        }\n        else if (window.external && 'notify' in window.external) {\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.external.notify(JSON.stringify({ eventType: eventType, eventData: eventData }));\n        }\n        else if (isIframe()) {\n            const trustedTarget = '*';\n            const message = JSON.stringify({ eventType: eventType, eventData: eventData });\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.parent.postMessage(message, trustedTarget);\n        }\n        else {\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Can't post event to TMA`);\n        }\n    }\n    catch (e) {\n        (0, log_1.logError)(`Can't post event to parent window: ${e}`);\n    }\n}\nfunction urlParseHashParams(locationHash) {\n    locationHash = locationHash.replace(/^#/, '');\n    let params = {};\n    if (!locationHash.length) {\n        return params;\n    }\n    if (locationHash.indexOf('=') < 0 && locationHash.indexOf('?') < 0) {\n        params._path = urlSafeDecode(locationHash);\n        return params;\n    }\n    let qIndex = locationHash.indexOf('?');\n    if (qIndex >= 0) {\n        let pathParam = locationHash.substr(0, qIndex);\n        params._path = urlSafeDecode(pathParam);\n        locationHash = locationHash.substr(qIndex + 1);\n    }\n    let query_params = urlParseQueryString(locationHash);\n    for (let k in query_params) {\n        params[k] = query_params[k];\n    }\n    return params;\n}\nfunction urlSafeDecode(urlencoded) {\n    try {\n        urlencoded = urlencoded.replace(/\\+/g, '%20');\n        return decodeURIComponent(urlencoded);\n    }\n    catch (e) {\n        return urlencoded;\n    }\n}\nfunction urlParseQueryString(queryString) {\n    let params = {};\n    if (!queryString.length) {\n        return params;\n    }\n    let queryStringParams = queryString.split('&');\n    let i, param, paramName, paramValue;\n    for (i = 0; i < queryStringParams.length; i++) {\n        param = queryStringParams[i].split('=');\n        paramName = urlSafeDecode(param[0]);\n        paramValue = param[1] == null ? null : urlSafeDecode(param[1]);\n        params[paramName] = paramValue;\n    }\n    return params;\n}\nfunction versionCompare(v1, v2) {\n    if (typeof v1 !== 'string')\n        v1 = '';\n    if (typeof v2 !== 'string')\n        v2 = '';\n    let v1List = v1.replace(/^\\s+|\\s+$/g, '').split('.');\n    let v2List = v2.replace(/^\\s+|\\s+$/g, '').split('.');\n    let a, i, p1, p2;\n    a = Math.max(v1List.length, v2List.length);\n    for (i = 0; i < a; i++) {\n        p1 = parseInt(v1List[i]) || 0;\n        p2 = parseInt(v2List[i]) || 0;\n        if (p1 === p2)\n            continue;\n        if (p1 > p2)\n            return 1;\n        return -1;\n    }\n    return 0;\n}\nfunction versionAtLeast(ver) {\n    return versionCompare(webAppVersion, ver) >= 0;\n}\n","\"use strict\";\nvar _a, _b, _c, _d;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.removeUrlLastSlash = removeUrlLastSlash;\nexports.addPathToUrl = addPathToUrl;\nexports.getUniversalLink = getUniversalLink;\nexports.openOKXDeeplink = openOKXDeeplink;\nexports.openOKXUniversalLink = openOKXUniversalLink;\nexports.openOKXDeeplinkWithFallback = openOKXDeeplinkWithFallback;\nexports.getWindow = getWindow;\nexports.isTelegramUrl = isTelegramUrl;\nexports.encodeTelegramUrlParameters = encodeTelegramUrlParameters;\nexports.encodeConnectParams = encodeConnectParams;\nexports.encodeTWAConnectURLParams = encodeTWAConnectURLParams;\nexports.getAppWalletDeepLink = getAppWalletDeepLink;\nexports.getAppWalletShortDeepLink = getAppWalletShortDeepLink;\nexports.getTelegramWalletTWAUrl = getTelegramWalletTWAUrl;\nexports.openOKXTMAWalletlinkWithFallback = openOKXTMAWalletlinkWithFallback;\nexports.isInTMA = isInTMA;\nexports.isInTelegramBrowser = isInTelegramBrowser;\nexports.getOKXLink = getOKXLink;\nconst protocol_1 = require(\"../protocol\");\nconst log_1 = require(\"./log\");\nconst constants_1 = require(\"../protocol/constants\");\nconst utils_1 = require(\"./utils\");\nconst tma_api_1 = require(\"./tma-api\");\nconst constants_2 = require(\"../connect/constants\");\nfunction removeUrlLastSlash(url) {\n    if (url.slice(-1) === '/') {\n        return url.slice(0, -1);\n    }\n    return url;\n}\nfunction addPathToUrl(url, path) {\n    return removeUrlLastSlash(url) + '/' + path;\n}\nfunction getUniversalLink(deeplinkUrl, useStandardUniversalLink = false) {\n    console.log(\"getUniversalLink deeplinkUrl:\", deeplinkUrl, \", useStandardUniversalLink:\", useStandardUniversalLink);\n    /*const replaceStrWithParam = `${standardDeeplink}?param=`\n    if(!useStandardUniversalLink && deeplinkUrl.startsWith(replaceStrWithParam)){\n        const cleanUrl = deeplinkUrl.replace(replaceStrWithParam, '');\n        logDebug(\"getUniversalLink cleanUrl:\",cleanUrl)\n        const deeplinkEncodeUrl= encodeURIComponent(cleanUrl);\n        logDebug(\"getUniversalLink standardUniversalLink:\",standardUniversalLink)\n        logDebug(\"getUniversalLink `${shortUniversalLink}?param=${deeplinkEncodeUrl}`:\",`${shortUniversalLink}?param=${deeplinkEncodeUrl}`)\n        return `${shortUniversalLink}?param=${deeplinkEncodeUrl}`;\n    }else if(!useStandardUniversalLink && deeplinkUrl == standardDeeplink){\n        logDebug(\"getUniversalLink shortUniversalLink:\",shortUniversalLink)\n        return shortUniversalLink;\n    }else {\n        const deeplinkEncodeUrl= encodeURIComponent(deeplinkUrl);\n        console.log(\"getUniversalLink standardUniversalLink:\",standardUniversalLink)\n\n        return `${standardUniversalLink}?deeplink=${deeplinkEncodeUrl}`;\n    }*/\n    const deeplinkEncodeUrl = encodeURIComponent(deeplinkUrl);\n    console.log(\"getUniversalLink standardUniversalLink:\", protocol_1.standardUniversalLink);\n    console.log(\"getUniversalLink standardUniversalLink:\", `${protocol_1.standardUniversalLink}?deeplink=${deeplinkEncodeUrl}`);\n    return `${protocol_1.standardUniversalLink}?deeplink=${deeplinkEncodeUrl}`;\n}\nfunction openOKXDeeplink(deeplinkUrl) {\n    var _a;\n    const fullUrl = getUniversalLink(deeplinkUrl);\n    const isTelegram = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n    console.log(\"openOKXDeeplink fullUrl:\", fullUrl);\n    if (!(0, utils_1.isIos)() || (0, utils_1.isInIOSLine)()) {\n        if (isTelegram) {\n            window.open(deeplinkUrl, '_blank');\n        }\n        else {\n            window.location.href = deeplinkUrl;\n        }\n    }\n    else {\n        openOKXUniversalLink(fullUrl);\n    }\n}\nfunction openOKXUniversalLink(fullUrl) {\n    if (!(0, utils_1.isIos)()) {\n        // if (isTelegram) {\n        window.open(fullUrl, '_blank');\n        // } else {\n        //     window.location.href = fullUrl;\n        // }\n    }\n    else {\n        if (isInTMA()) {\n            window.open(fullUrl, '_blank');\n        }\n        else {\n            console.log(\"windowOpen[before]: \", Date.now());\n            if (window === null || window === void 0 ? void 0 : window.okxLogDebug) {\n                window.open(fullUrl, '_blank');\n            }\n            else {\n                window.open(fullUrl, '_self');\n            }\n            console.log(\"windowOpen[after]: \", Date.now());\n        }\n    }\n}\nfunction openOKXDeeplinkWithFallback(deeplinkUrl) {\n    var _a;\n    const fullUrl = getUniversalLink(deeplinkUrl);\n    const isTelegram = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n    console.log(\"openOKXDeeplinkWithFallback fullUrl:\", fullUrl);\n    let deepLinkOpened = false;\n    const timeoutDuration = 3000; // 1.5秒的等待时间\n    const downloadUrl = protocol_1.standardUniversalLink;\n    console.log(\"openOKXDeeplinkWithFallback standardUniversalLink:\", protocol_1.standardUniversalLink);\n    let newWindow = null;\n    let fallbackToDownloadPage = () => {\n        console.log(\"fallbackToDownloadPage :empty\");\n    };\n    if (!(0, utils_1.isIos)()) {\n        fallbackToDownloadPage = () => {\n            if (!deepLinkOpened) {\n                if (newWindow) {\n                    newWindow.open(fullUrl, '_self');\n                }\n                else {\n                    window.open(fullUrl, '_blank');\n                }\n            }\n        };\n    }\n    else if ((0, utils_1.isInIOSLine)()) {\n        fallbackToDownloadPage = () => {\n            if (!deepLinkOpened) {\n                window.open(fullUrl, '_self');\n            }\n        };\n    }\n    if (!(0, utils_1.isIos)() || (0, utils_1.isInIOSLine)() || (0, utils_1.isInIOSLark)() || (0, utils_1.isInIOSWeChat)()) {\n        if (isTelegram) {\n            newWindow = window.open(deeplinkUrl, '_blank');\n        }\n        else {\n            window.location.href = deeplinkUrl;\n        }\n        setTimeout(fallbackToDownloadPage, timeoutDuration);\n        let count = 0;\n        let interval = setInterval(() => {\n            count++;\n            console.log(\"windowOpen --> interval:\", count, document.hidden, document.visibilityState);\n            if (count >= 10 || document.hidden) {\n                deepLinkOpened = true;\n                clearInterval(interval);\n                console.log(\"windowOpen :cleat: ${count}\");\n            }\n        }, 200);\n        window.addEventListener('blur', () => {\n            deepLinkOpened = true;\n        }, { once: true });\n        document.addEventListener('visibilitychange', () => {\n            if (document.visibilityState === 'hidden') {\n                deepLinkOpened = true;\n            }\n        });\n    }\n    else {\n        if (isTelegram) {\n            window.open(fullUrl, '_blank');\n        }\n        else {\n            console.log(\"windowOpen[before]: \", Date.now());\n            if (window === null || window === void 0 ? void 0 : window.okxLogDebug) {\n                window.open(fullUrl, '_blank');\n            }\n            else {\n                window.open(fullUrl, '_self');\n            }\n            console.log(\"windowOpen[after]: \", Date.now());\n        }\n    }\n}\nfunction getWindow() {\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    return undefined;\n}\nfunction isTelegramUrl(link) {\n    if (!link) {\n        return false;\n    }\n    const url = new URL(link);\n    return url.protocol === 'tg:' || url.hostname === 't.me';\n}\nfunction encodeTelegramUrlParameters(parameters) {\n    let encodedParameters = parameters;\n    encodedParameters = encodedParameters.replace(/\\./g, '%2E');\n    encodedParameters = encodedParameters.replace(/-/g, '%2D');\n    encodedParameters = encodedParameters.replace(/_/g, '%5F');\n    encodedParameters = encodedParameters.replace(/&/g, '-');\n    encodedParameters = encodedParameters.replace(/=/g, '__');\n    encodedParameters = encodedParameters.replace(/%/g, '--');\n    return encodedParameters;\n}\nfunction encodeConnectParams(connectRequest) {\n    let connectRequestWithVersion = Object.assign(Object.assign({}, connectRequest), { protocolVersion: constants_2.CONNECT_PROTOCOL_VER });\n    const connectRequestStr = JSON.stringify(connectRequestWithVersion);\n    (0, log_1.logDebug)(\"url encodeConnectParams connectRequestStr \", connectRequestStr);\n    const utf8Array = new TextEncoder().encode(connectRequestStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    // .replace(/\\+/g, '-')\n    // .replace(/\\//g, '_')\n    // .replace(/=+$/, ''); //Compatible with older versions of iOS. Cannot be added directly  (Base64 URL Safe)\n    (0, log_1.logDebug)(\"url encodeConnectParams base64Encoded \", base64Encoded);\n    return base64Encoded;\n}\nfunction encodeTWAConnectURLParams(connectRequest) {\n    const connectRequestStr = JSON.stringify({ topic: connectRequest.topic, clientId: connectRequest.clientId });\n    (0, log_1.logDebug)(\"url encodeConnectParams connectRequestStr\", connectRequestStr);\n    const utf8Array = new TextEncoder().encode(connectRequestStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    return base64Encoded;\n}\nfunction getAppWalletDeepLink(connectParam) {\n    return `${protocol_1.standardDeeplink}?param=${connectParam}`;\n}\nfunction getAppWalletShortDeepLink(topic, clientId) {\n    return `${constants_1.shortUniversalLink}?topic=${topic}${(0, utils_1.getLastSixMd5Hash)(clientId)}`;\n}\n//  make telegram okx wallet TWA url\nfunction getTelegramWalletTWAUrl(connectParam, redirectStr) {\n    let base64Content = { okxconnect: \"\", redirect: \"\", extraparams: \"\", fromtg: false };\n    if (connectParam) {\n        base64Content.okxconnect = connectParam;\n    }\n    if (redirectStr) {\n        base64Content.redirect = redirectStr;\n    }\n    if (!isInTMA()) {\n        base64Content.fromtg = false;\n    }\n    else {\n        base64Content.fromtg = true;\n    }\n    (0, log_1.logDebug)('getTelegramWalletTWAUrl redirect:', base64Content.redirect);\n    let base64ContentStr = JSON.stringify(base64Content);\n    const utf8Array = new TextEncoder().encode(base64ContentStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    const urlSafeBase64 = (0, utils_1.toSafeBase64FromBase64)(base64Encoded);\n    (0, log_1.logDebug)('[TWA] open link:', base64Content, base64Encoded);\n    if (connectParam || redirectStr) {\n        if (!isInTMA()) {\n            // return `http://localhost:5173?tgWebAppStartParam=${urlSafeBase64}`\n            if ((0, constants_1.getTestTwaUrl)()) {\n                return `${(0, constants_1.getTestTwaUrl)()}?tgWebAppStartParam=${urlSafeBase64}`;\n            }\n            else if ((0, constants_1.getTestTgTwaUrl)()) {\n                let result = (0, constants_1.getBotNameAndAppName)((0, constants_1.getTestTgTwaUrl)());\n                if (result) {\n                    let { botName, appName } = result;\n                    return `tg://resolve?domain=${botName}&appname=${appName}&startapp=${urlSafeBase64}`;\n                }\n                return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}&startapp=${urlSafeBase64}`;\n            }\n            else {\n                return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}&startapp=${urlSafeBase64}`;\n            }\n        }\n        else {\n            if ((0, constants_1.getTestTgTwaUrl)()) {\n                return `${(0, constants_1.getTestTgTwaUrl)()}?startapp=${urlSafeBase64}`;\n            }\n            else {\n                return `https://t.me/${constants_1.tgwalletName}/start?startapp=${urlSafeBase64}`;\n            }\n        }\n    }\n    if (!isInTMA()) {\n        // return \"http://localhost:5173\"\n        if ((0, constants_1.getTestTwaUrl)()) {\n            return `${(0, constants_1.getTestTwaUrl)()}`;\n        }\n        else if ((0, constants_1.getTestTgTwaUrl)()) {\n            let result = (0, constants_1.getBotNameAndAppName)((0, constants_1.getTestTgTwaUrl)());\n            if (result) {\n                let { botName, appName } = result;\n                return `tg://resolve?domain=${botName}&appname=${appName}`;\n            }\n            return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}`;\n        }\n        else {\n            return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}`;\n        }\n    }\n    else {\n        if ((0, constants_1.getTestTgTwaUrl)()) {\n            return `${(0, constants_1.getTestTgTwaUrl)()}`;\n        }\n        else {\n            return `https://t.me/${constants_1.tgwalletName}/start`;\n        }\n    }\n}\n//  open TWA url in telegram\nfunction openOKXTMAWalletlinkWithFallback(twaDeepLink) {\n    var _a, _b, _c, _d, _e;\n    (0, log_1.logDebug)('[TWA] open link:', twaDeepLink, \"isInTMA ==> \", isInTMA());\n    if (!isInTMA()) {\n        if ((0, constants_1.getTestTwaUrl)()) {\n            window.open(twaDeepLink, '_blank');\n        }\n        else {\n            window.open(twaDeepLink, '_self');\n        }\n    }\n    else {\n        if ((_b = (_a = getWindow()) === null || _a === void 0 ? void 0 : _a.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) {\n            (_e = (_d = (_c = getWindow()) === null || _c === void 0 ? void 0 : _c.Telegram) === null || _d === void 0 ? void 0 : _d.WebApp) === null || _e === void 0 ? void 0 : _e.openTelegramLink(twaDeepLink);\n        }\n        else {\n            (0, tma_api_1.sendOpenTelegramLink)(twaDeepLink);\n        }\n    }\n}\n/**\n * Returns true if the app is running in TMA.\n */\nfunction urlSafeDecode(urlencoded) {\n    try {\n        urlencoded = urlencoded.replace(/\\+/g, '%20');\n        return decodeURIComponent(urlencoded);\n    }\n    catch (e) {\n        return urlencoded;\n    }\n}\nfunction urlParseQueryString(queryString) {\n    let params = {};\n    if (!queryString.length) {\n        return params;\n    }\n    let queryStringParams = queryString.split('&');\n    let i, param, paramName, paramValue;\n    for (i = 0; i < queryStringParams.length; i++) {\n        param = queryStringParams[i].split('=');\n        paramName = urlSafeDecode(param[0]);\n        paramValue = param[1] == null ? null : urlSafeDecode(param[1]);\n        params[paramName] = paramValue;\n    }\n    return params;\n}\nfunction urlParseHashParams(locationHash) {\n    locationHash = locationHash.replace(/^#/, '');\n    let params = {};\n    if (!locationHash.length) {\n        return params;\n    }\n    if (locationHash.indexOf('=') < 0 && locationHash.indexOf('?') < 0) {\n        params._path = urlSafeDecode(locationHash);\n        return params;\n    }\n    let qIndex = locationHash.indexOf('?');\n    if (qIndex >= 0) {\n        let pathParam = locationHash.substr(0, qIndex);\n        params._path = urlSafeDecode(pathParam);\n        locationHash = locationHash.substr(qIndex + 1);\n    }\n    let query_params = urlParseQueryString(locationHash);\n    for (let k in query_params) {\n        params[k] = query_params[k];\n    }\n    return params;\n}\nlet initParams = {};\ntry {\n    let locationHash = location.hash.toString();\n    initParams = urlParseHashParams(locationHash);\n}\ncatch (e) { }\nlet tmaPlatform = 'unknown';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppPlatform) {\n    tmaPlatform = (_a = initParams.tgWebAppPlatform) !== null && _a !== void 0 ? _a : 'unknown';\n}\nif (tmaPlatform === 'unknown') {\n    const window = getWindow();\n    tmaPlatform = (_d = (_c = (_b = window === null || window === void 0 ? void 0 : window.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) === null || _c === void 0 ? void 0 : _c.platform) !== null && _d !== void 0 ? _d : 'unknown';\n}\nfunction isInTMA() {\n    var _a;\n    return tmaPlatform !== 'unknown' || !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n}\n/**\n * Returns true if the app is running in the Telegram browser.\n */\nfunction isInTelegramBrowser() {\n    var _a;\n    const isTelegramWebview = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebview);\n    return (isInTMA() || isTelegramWebview) && tmaPlatform === 'unknown';\n}\nfunction getOKXLink(connectRequest, useMini = false, tmaReturnUrl) {\n    (0, log_1.logDebug)(`url  getOKXLink() called connectRequest==> ${JSON.stringify(connectRequest)}  useMini=> ${useMini}  tmaReturnUrl==> ${tmaReturnUrl}`);\n    if (useMini) {\n        if (connectRequest) {\n            var encodeTGParams = encodeTWAConnectURLParams(connectRequest);\n            return getTelegramWalletTWAUrl(encodeTGParams, tmaReturnUrl !== null && tmaReturnUrl !== void 0 ? tmaReturnUrl : \"back\");\n        }\n        else {\n            return getTelegramWalletTWAUrl(undefined, tmaReturnUrl !== null && tmaReturnUrl !== void 0 ? tmaReturnUrl : \"back\");\n        }\n    }\n    else {\n        if ((0, utils_1.useShortLink)()) {\n            if (connectRequest) {\n                return getAppWalletShortDeepLink(connectRequest.topic, connectRequest.clientId);\n            }\n            else {\n                return constants_1.shortUniversalLink;\n            }\n        }\n        else {\n            if (connectRequest) {\n                const base64Encoded = encodeConnectParams(connectRequest);\n                return `${protocol_1.standardDeeplink}?param=${base64Encoded}`;\n            }\n            else {\n                return protocol_1.standardDeeplink;\n            }\n        }\n    }\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.chainName2IdMap = exports.isValidObject = exports.RANDOM_LENGTH = exports.isBrowser = exports.resolveLocalStorage = exports.hasLocalStorage = exports.hasBuiltInWebSocket = exports.resolveWebSocketImplementation = void 0;\nexports.hexToByteArray = hexToByteArray;\nexports.getChainId = getChainId;\nexports.toHexString = toHexString;\nexports.concatUint8Arrays = concatUint8Arrays;\nexports.splitToUint8Arrays = splitToUint8Arrays;\nexports.base64encode = base64encode;\nexports.base64decode = base64decode;\nexports.checkWSUrl = checkWSUrl;\nexports.hashKey = hashKey;\nexports.generateRandomBytes32 = generateRandomBytes32;\nexports.generateTopic = generateTopic;\nexports.generateGroupId = generateGroupId;\nexports.isInIOSLine = isInIOSLine;\nexports.isInIOSLark = isInIOSLark;\nexports.isInIOSWeChat = isInIOSWeChat;\nexports.isIos = isIos;\nexports.getLastSixMd5Hash = getLastSixMd5Hash;\nexports.toSafeBase64FromBase64 = toSafeBase64FromBase64;\nexports.useShortLink = useShortLink;\nexports.replaceChainNameToChainId = replaceChainNameToChainId;\nexports.replaceChainIdToChainName = replaceChainIdToChainName;\nexports.getNamespaceKeyByChain = getNamespaceKeyByChain;\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst tweetnacl_util_1 = __importDefault(require(\"tweetnacl-util\"));\nconst to_string_1 = require(\"uint8arrays/to-string\");\nconst sha256_1 = require(\"@stablelib/sha256\");\nconst safejson_1 = require(\"./safejson\");\nconst log_1 = require(\"./log\");\nconst stringUtils_1 = require(\"../utils/stringUtils\");\nconst crypto_js_1 = __importDefault(require(\"crypto-js\"));\nconst protocol_1 = require(\"../protocol\");\nconst BASE16 = \"base16\";\nfunction hexToByteArray(hexString) {\n    if (hexString.length % 2 !== 0) {\n        throw new Error(`Cannot convert ${hexString} to bytesArray`);\n    }\n    const result = new Uint8Array(hexString.length / 2);\n    for (let i = 0; i < hexString.length; i += 2) {\n        result[i / 2] = parseInt(hexString.slice(i, i + 2), 16);\n    }\n    return result;\n}\nfunction getChainId(chain) {\n    return chain.includes(\":\") ? chain.split(\":\")[1] : chain;\n}\nfunction toHexString(byteArray) {\n    let hexString = '';\n    byteArray.forEach(byte => {\n        hexString += ('0' + (byte & 0xff).toString(16)).slice(-2);\n    });\n    return hexString;\n}\nfunction concatUint8Arrays(buffer1, buffer2) {\n    const mergedArray = new Uint8Array(buffer1.length + buffer2.length);\n    mergedArray.set(buffer1);\n    mergedArray.set(buffer2, buffer1.length);\n    return mergedArray;\n}\nfunction splitToUint8Arrays(array, index) {\n    if (index >= array.length) {\n        throw new Error('Index is out of buffer');\n    }\n    const subArray1 = array.slice(0, index);\n    const subArray2 = array.slice(index);\n    return [subArray1, subArray2];\n}\nfunction encodeUint8Array(value, urlSafe) {\n    const encoded = tweetnacl_util_1.default.encodeBase64(value);\n    if (!urlSafe) {\n        return encoded;\n    }\n    return encodeURIComponent(encoded);\n}\nfunction decodeToUint8Array(value, urlSafe) {\n    if (urlSafe) {\n        value = decodeURIComponent(value);\n    }\n    return tweetnacl_util_1.default.decodeBase64(value);\n}\nfunction base64encode(value, urlSafe) {\n    let uint8Array;\n    if (value instanceof Uint8Array) {\n        uint8Array = value;\n    }\n    else {\n        if (typeof value !== 'string') {\n            value = (0, safejson_1.safeJsonStringify)(value);\n        }\n        uint8Array = tweetnacl_util_1.default.decodeUTF8(value);\n    }\n    return encodeUint8Array(uint8Array, urlSafe);\n}\nfunction base64decode(value, urlSafe) {\n    const decodedUint8Array = decodeToUint8Array(value, urlSafe);\n    return {\n        toString() {\n            return tweetnacl_util_1.default.encodeUTF8(decodedUint8Array);\n        },\n        toObject() {\n            try {\n                return (0, safejson_1.safeJsonParse)(tweetnacl_util_1.default.encodeUTF8(decodedUint8Array));\n            }\n            catch (e) {\n                return null;\n            }\n        },\n        toUint8Array() {\n            return decodedUint8Array;\n        }\n    };\n}\nfunction checkWSUrl(url) {\n    const match = url.match(new RegExp(/^\\w+:/, \"gi\"));\n    if (!match || !match.length) {\n        return false;\n    }\n    let scheme = match[0];\n    if (scheme === undefined) {\n        return false;\n    }\n    return new RegExp(\"^wss?:\").test(scheme);\n}\nconst resolveWebSocketImplementation = () => {\n    if (typeof WebSocket !== \"undefined\") {\n        return WebSocket;\n    }\n    else if (typeof global !== \"undefined\" && typeof global.WebSocket !== \"undefined\") {\n        return global.WebSocket;\n    }\n    else if (typeof window !== \"undefined\" && typeof window.WebSocket !== \"undefined\") {\n        return window.WebSocket;\n    }\n    else if (typeof self !== \"undefined\" && typeof self.WebSocket !== \"undefined\") {\n        return self.WebSocket;\n    }\n    return WebSocket;\n    //\n    // return require(\"ws\");\n};\nexports.resolveWebSocketImplementation = resolveWebSocketImplementation;\nconst hasBuiltInWebSocket = () => typeof WebSocket !== \"undefined\" ||\n    (typeof global !== \"undefined\" && typeof global.WebSocket !== \"undefined\") ||\n    (typeof window !== \"undefined\" && typeof window.WebSocket !== \"undefined\") ||\n    (typeof self !== \"undefined\" && typeof self.WebSocket !== \"undefined\");\nexports.hasBuiltInWebSocket = hasBuiltInWebSocket;\nconst hasLocalStorage = () => (typeof global !== \"undefined\" && (typeof global.localStorage !== \"undefined\")) ||\n    (typeof window !== \"undefined\" && typeof window.localStorage !== \"undefined\");\nexports.hasLocalStorage = hasLocalStorage;\nconst resolveLocalStorage = () => {\n    if (typeof global !== \"undefined\" && typeof global.localStorage !== \"undefined\") {\n        return global.localStorage;\n    }\n    else if (typeof window !== \"undefined\" && typeof window.localStorage !== \"undefined\") {\n        return window.localStorage;\n    }\n    return localStorage;\n};\nexports.resolveLocalStorage = resolveLocalStorage;\nconst isBrowser = () => typeof window !== \"undefined\";\nexports.isBrowser = isBrowser;\nexports.RANDOM_LENGTH = 32;\nfunction hashKey(key, encode = BASE16) {\n    (0, log_1.logDebug)(`hash key called ${key}`);\n    const result = (0, sha256_1.hash)((0, stringUtils_1.okxfromString)(key, encode));\n    return (0, to_string_1.toString)(result, encode);\n}\nfunction generateRandomBytes32() {\n    return tweetnacl_1.default.randomBytes(exports.RANDOM_LENGTH);\n}\nfunction generateTopic() {\n    let randomBytes32 = generateRandomBytes32();\n    (0, log_1.logDebug)(`generate topic called ${randomBytes32}`);\n    return hashKey((0, to_string_1.toString)(randomBytes32, BASE16));\n}\nfunction generateGroupId() {\n    let randomBytes32 = tweetnacl_1.default.randomBytes(16);\n    (0, log_1.logDebug)(`generate groupid called ${randomBytes32}`);\n    return hashKey((0, to_string_1.toString)(randomBytes32, BASE16));\n}\nconst isValidObject = (obj) => Object.getPrototypeOf(obj) === Object.prototype && Object.keys(obj).length;\nexports.isValidObject = isValidObject;\nfunction isInIOSLine() {\n    const userAgent = navigator.userAgent;\n    const inLine = userAgent.includes('Safari Line/');\n    return inLine && isIos();\n}\nfunction isInIOSLark() {\n    const userAgent = navigator.userAgent;\n    const inLine = userAgent.includes('Lark/');\n    return inLine && isIos();\n}\nfunction isInIOSWeChat() {\n    const userAgent = navigator.userAgent;\n    const inLine = userAgent.includes('MicroMessenger/');\n    return inLine && isIos();\n}\nfunction isIos() {\n    const userAgent = navigator.userAgent;\n    const maxTouchPoints = navigator.maxTouchPoints || 0;\n    // 检测 iPhone、iPod 和传统的 iPad\n    const isIOSDevice = /iPad|iPhone|iPod/.test(userAgent) && !window.MSStream;\n    // 针对 iPadOS 13 及以上的设备进行额外判断\n    const isIPadOS = (userAgent.includes('Mac') && maxTouchPoints > 1);\n    (0, log_1.logDebug)(`utils isIos >>>isIOSDevice: ${isIOSDevice}    >> isIPadOS: ${isIPadOS}`);\n    // 如果是 iOS 设备或者是 iPadOS 设备，返回 true\n    return isIOSDevice || isIPadOS;\n}\nfunction getLastSixMd5Hash(input) {\n    // 生成 MD5 哈希\n    const hash = crypto_js_1.default.MD5(input).toString();\n    // 获取最后六位\n    return hash.slice(-6);\n}\nfunction toSafeBase64FromBase64(base64) {\n    return base64\n        .replace(/=/g, \"\")\n        .replace(/\\+/g, \"-\")\n        .replace(/\\//g, \"_\");\n}\nfunction useShortLink() {\n    // return !!(window as any).useShortLink;\n    return false;\n}\nexports.chainName2IdMap = new Map();\nexports.chainName2IdMap.set(\"aptos:mainnet\", \"aptos:637\");\nexports.chainName2IdMap.set(\"movement:testnet\", \"aptos:70000060\");\nexports.chainName2IdMap.set(\"movement:mainnet\", \"aptos:70000066\");\nexports.chainName2IdMap.set(\"soon:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\", \"svm:70000069\");\nexports.chainName2IdMap.set(\"soon:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\", \"svm:70000067\");\nexports.chainName2IdMap.set(\"eclipse:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\", \"svm:70000068\");\nfunction replaceChainNameToChainId(chainId) {\n    exports.chainName2IdMap.forEach((value, key) => {\n        if (chainId.includes(key)) {\n            chainId = chainId.replace(key, value);\n        }\n    });\n    return chainId;\n}\nfunction replaceChainIdToChainName(chainId) {\n    exports.chainName2IdMap.forEach((value, key) => {\n        if (chainId.includes(value)) {\n            chainId = chainId.replace(value, key);\n        }\n    });\n    return chainId;\n}\nfunction getNamespaceKeyByChain(chain) {\n    for (const [namespaceKey, chains] of Object.entries(protocol_1.NAMES_CHAINS)) {\n        if (Object.values(chains).includes(chain)) {\n            return namespaceKey;\n        }\n    }\n    return chain;\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.openLink = openLink;\nexports.openLinkBlank = openLinkBlank;\nexports.openDeeplinkWithFallback = openDeeplinkWithFallback;\nexports.isMobileUserAgent = isMobileUserAgent;\nexports.getUserAgent = getUserAgent;\nexports.isOS = isOS;\nexports.isBrowser = isBrowser;\nconst ua_parser_js_1 = __importDefault(require(\"ua-parser-js\"));\nconst log_1 = require(\"./log\");\nconst tma_api_1 = require(\"./tma-api\");\nfunction openLink(href, target = '_self') {\n    (0, log_1.logDebug)('openLink', href, target);\n    window.open(href, target, 'noopener noreferrer');\n}\nfunction openLinkBlank(href) {\n    openLink(href, '_blank');\n}\nfunction openDeeplinkWithFallback(href, fallback) {\n    const doFallback = () => {\n        if (isBrowser('safari') || (isOS('android') && isBrowser('firefox'))) {\n            // Safari does not support fallback to direct link.\n            return;\n        }\n        fallback();\n    };\n    const fallbackTimeout = setTimeout(() => doFallback(), 500);\n    window.addEventListener('blur', () => clearTimeout(fallbackTimeout), { once: true });\n    if (isOS('android') && (0, tma_api_1.inTg)()) {\n        openLink(href, '_blank');\n    }\n    else {\n        openLink(href, '_self');\n    }\n}\nfunction isMobileUserAgent() {\n    let check = false;\n    (function (a) {\n        if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) ||\n            /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.slice(0, 4)))\n            check = true;\n    })(navigator.userAgent ||\n        navigator.vendor ||\n        window.opera);\n    return check;\n}\nfunction getUserAgent() {\n    var _a, _b, _c;\n    const results = new ua_parser_js_1.default().getResult();\n    const osName = (_a = results.os.name) === null || _a === void 0 ? void 0 : _a.toLowerCase();\n    const deviceModel = (_b = results.device.model) === null || _b === void 0 ? void 0 : _b.toLowerCase();\n    let os;\n    switch (true) {\n        case deviceModel === 'ipad':\n            os = 'ipad';\n            break;\n        case osName === 'ios':\n            os = 'ios';\n            break;\n        case osName === 'android':\n            os = 'android';\n            break;\n        case osName === 'mac os':\n            os = 'macos';\n            break;\n        case osName === 'linux':\n            os = 'linux';\n            break;\n        case osName === null || osName === void 0 ? void 0 : osName.includes('windows'):\n            os = 'windows';\n            break;\n    }\n    const browserName = (_c = results.browser.name) === null || _c === void 0 ? void 0 : _c.toLowerCase();\n    let browser;\n    switch (true) {\n        case browserName === 'chrome':\n            browser = 'chrome';\n            break;\n        case browserName === 'firefox':\n            browser = 'firefox';\n            break;\n        case browserName === null || browserName === void 0 ? void 0 : browserName.includes('safari'):\n            browser = 'safari';\n            break;\n        case browserName === null || browserName === void 0 ? void 0 : browserName.includes('opera'):\n            browser = 'opera';\n            break;\n    }\n    return {\n        os,\n        browser\n    };\n}\nfunction isOS(...os) {\n    return os.includes(getUserAgent().os);\n}\nfunction isBrowser(...browser) {\n    return browser.includes(getUserAgent().browser);\n}\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toUserFriendlyAddress = exports.removeUrlLastSlash = exports.addPathToUrl = exports.createVersionInfo = exports.BrowserEventDispatcher = exports.createTransactionSigningFailedEvent = exports.createTransactionSignedEvent = exports.createTransactionSentForSignatureEvent = exports.createDisconnectionEvent = exports.createConnectionStartedEvent = exports.createConnectionRestoringStartedEvent = exports.createConnectionRestoringErrorEvent = exports.createConnectionRestoringCompletedEvent = exports.createConnectionErrorEvent = exports.createConnectionCompletedEvent = exports.createResponseVersionEvent = exports.createRequestVersionEvent = exports.OKX_TON_CONNECTION_AND_TRANSACTION_EVENT = exports.OKXTonConnect = void 0;\nvar okx_connect_ton_1 = require(\"./okx-connect-ton\");\nObject.defineProperty(exports, \"OKXTonConnect\", { enumerable: true, get: function () { return okx_connect_ton_1.OKXTonConnect; } });\n__exportStar(require(\"@okxconnect/core\"), exports);\nvar tracker_1 = require(\"./tracker\");\nObject.defineProperty(exports, \"OKX_TON_CONNECTION_AND_TRANSACTION_EVENT\", { enumerable: true, get: function () { return tracker_1.OKX_TON_CONNECTION_AND_TRANSACTION_EVENT; } });\nObject.defineProperty(exports, \"createRequestVersionEvent\", { enumerable: true, get: function () { return tracker_1.createRequestVersionEvent; } });\nObject.defineProperty(exports, \"createResponseVersionEvent\", { enumerable: true, get: function () { return tracker_1.createResponseVersionEvent; } });\nObject.defineProperty(exports, \"createConnectionCompletedEvent\", { enumerable: true, get: function () { return tracker_1.createConnectionCompletedEvent; } });\nObject.defineProperty(exports, \"createConnectionErrorEvent\", { enumerable: true, get: function () { return tracker_1.createConnectionErrorEvent; } });\nObject.defineProperty(exports, \"createConnectionRestoringCompletedEvent\", { enumerable: true, get: function () { return tracker_1.createConnectionRestoringCompletedEvent; } });\nObject.defineProperty(exports, \"createConnectionRestoringErrorEvent\", { enumerable: true, get: function () { return tracker_1.createConnectionRestoringErrorEvent; } });\nObject.defineProperty(exports, \"createConnectionRestoringStartedEvent\", { enumerable: true, get: function () { return tracker_1.createConnectionRestoringStartedEvent; } });\nObject.defineProperty(exports, \"createConnectionStartedEvent\", { enumerable: true, get: function () { return tracker_1.createConnectionStartedEvent; } });\nObject.defineProperty(exports, \"createDisconnectionEvent\", { enumerable: true, get: function () { return tracker_1.createDisconnectionEvent; } });\nObject.defineProperty(exports, \"createTransactionSentForSignatureEvent\", { enumerable: true, get: function () { return tracker_1.createTransactionSentForSignatureEvent; } });\nObject.defineProperty(exports, \"createTransactionSignedEvent\", { enumerable: true, get: function () { return tracker_1.createTransactionSignedEvent; } });\nObject.defineProperty(exports, \"createTransactionSigningFailedEvent\", { enumerable: true, get: function () { return tracker_1.createTransactionSigningFailedEvent; } });\nObject.defineProperty(exports, \"BrowserEventDispatcher\", { enumerable: true, get: function () { return tracker_1.BrowserEventDispatcher; } });\nObject.defineProperty(exports, \"createVersionInfo\", { enumerable: true, get: function () { return tracker_1.createVersionInfo; } });\nvar utils_1 = require(\"./utils\");\nObject.defineProperty(exports, \"addPathToUrl\", { enumerable: true, get: function () { return utils_1.addPathToUrl; } });\nObject.defineProperty(exports, \"removeUrlLastSlash\", { enumerable: true, get: function () { return utils_1.removeUrlLastSlash; } });\nObject.defineProperty(exports, \"toUserFriendlyAddress\", { enumerable: true, get: function () { return utils_1.toUserFriendlyAddress; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTonConnectInner = void 0;\nconst bridge_provider_1 = require(\"./provider/bridge/bridge-provider\");\nconst core_1 = require(\"@okxconnect/core\");\nconst feature_support_1 = require(\"./utils/feature-support\");\nconst ton_connect_tracker_1 = require(\"./tracker/ton-connect-tracker\");\nconst send_transaction_parser_1 = require(\"./parsers/send-transaction-parser\");\nconst bridge_connection_storage_1 = require(\"./provider/bridge-connection-storage\");\nconst constants_1 = require(\"./utils/constants\");\nclass OKXTonConnectInner {\n    constructor(options) {\n        this._wallet = null;\n        this.provider = null;\n        this.statusChangeSubscriptions = [];\n        this.statusChangeErrorSubscriptions = [];\n        this.openUniversalLink = this.provider ? this.provider.openUniversalLink : false;\n        this.connectors = [core_1.AppwalletConnector.getConnector()];\n        (0, core_1.checkMetaData)(options.metaData);\n        if (!options.metaData) {\n            (0, core_1.logDebug)(\"OKXTonConnect constructor error: options.metaData is nil\");\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, 'dapp metaData can not be null');\n        }\n        (0, core_1.logDebug)(\"OKXTonConnect constructor options:\", JSON.stringify(options));\n        this.dappSettings = {\n            metaData: Object.assign(Object.assign({}, options.metaData), { url: window.location.hostname, origin: window.location.origin }),\n        };\n        this.tracker = new ton_connect_tracker_1.TonConnectTracker({\n            OKXtonConnectSdkVersion: constants_1.OKXtonConnectSdkVersion\n        });\n        this.storage = new core_1.Storage(constants_1.OKXCONNECTOR_TON_KEY + this.dappSettings.metaData.name, constants_1.OKXCONNECTOR_TON_KEY);\n        this.bridgeConnectionStorage = new bridge_connection_storage_1.BridgeConnectionStorage(this.storage);\n    }\n    registerConnector(connectors) {\n        this.connectors = connectors;\n    }\n    /**\n     * Shows if the wallet is connected right now.\n     */\n    get connected() {\n        return this._wallet !== null;\n    }\n    /**\n     * Current connected account or null if no account is connected.\n     */\n    get account() {\n        var _a;\n        return ((_a = this._wallet) === null || _a === void 0 ? void 0 : _a.account) || null;\n    }\n    /**\n     * Current connected wallet or null if no account is connected.\n     */\n    get wallet() {\n        return this._wallet;\n    }\n    set wallet(value) {\n        this._wallet = value;\n        this.statusChangeSubscriptions.forEach(callback => callback(this._wallet));\n    }\n    connect(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            (0, core_1.logDebug)('ton-Connect ==>> connect_1 >> request:', request);\n            if (this.connected) {\n                (0, core_1.logError)(\"It's already connected to OKX Wallet, please call disconnect() first\");\n            }\n            yield ((_a = this.provider) === null || _a === void 0 ? void 0 : _a.closeConnection(false, true));\n            if (!this.provider) {\n                this.provider = new bridge_provider_1.BridgeProvider(this.storage, this.dappSettings.metaData.name, this.connectors);\n            }\n            this.provider.listen(this.walletEventsListener.bind(this));\n            this.tracker.trackConnectionStarted();\n            return yield this.provider.connect(this.createConnectRequest(request), request === null || request === void 0 ? void 0 : request.redirect, request === null || request === void 0 ? void 0 : request.openUniversalLink, request === null || request === void 0 ? void 0 : request.tmaReturnUrl);\n        });\n    }\n    walletEventsListener(e) {\n        (0, core_1.logDebug)('ton-Connect ==>> walletEventsListener_1 >> e:', e);\n        switch (e.event) {\n            case 'connect':\n                this.onWalletConnected(e.payload);\n                break;\n            case 'connect_error':\n                this.onWalletConnectError(e.payload);\n                break;\n            case 'disconnect':\n                this.onWalletDisconnected('wallet');\n        }\n    }\n    onWalletConnected(connectEvent) {\n        (0, core_1.logDebug)('ton-Connect ==>> onWalletConnected_1 >> connectEvent:', connectEvent);\n        const tonAccountItem = connectEvent.items.find(item => item.name === 'ton_addr');\n        const tonProofItem = connectEvent.items.find(item => item.name === 'ton_proof');\n        if (!tonAccountItem) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, 'ton_addr connection item was not found');\n        }\n        const wallet = {\n            device: connectEvent.device,\n            provider: this.provider.type,\n            account: {\n                address: tonAccountItem.address,\n                chain: tonAccountItem.network,\n                walletStateInit: tonAccountItem.walletStateInit,\n                publicKey: tonAccountItem.publicKey\n            }\n        };\n        if (tonProofItem) {\n            wallet.connectItems = {\n                tonProof: tonProofItem\n            };\n        }\n        this.wallet = wallet;\n        (0, core_1.logDebug)('ton-Connect ==>> onWalletConnected_2 >> wallet:', wallet);\n        this.tracker.trackConnectionCompleted(wallet);\n    }\n    onWalletConnectError(connectEventError) {\n        var _a;\n        (0, core_1.logDebug)('ton-Connect ==>> onWalletConnectError_1 >> connectEventError:', connectEventError);\n        const error = new core_1.OKXConnectError(connectEventError.code, connectEventError.message);\n        (0, core_1.logDebug)('ton-Connect ==>> onWalletConnectError_1 >> error:', error);\n        this.statusChangeErrorSubscriptions.forEach(errorsHandler => errorsHandler(error));\n        this.tracker.trackConnectionError((_a = connectEventError.message) !== null && _a !== void 0 ? _a : \"\", connectEventError.code);\n    }\n    onWalletDisconnected(scope) {\n        this.tracker.trackDisconnection(this.wallet, scope);\n        this.wallet = null;\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            (0, core_1.logDebug)('ton-Connect ==>> disconnect_1');\n            if (!this.connected) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, 'wallet is not connected');\n            }\n            (0, core_1.logDebug)('ton-Connect ==>> disconnect_222');\n            this.onWalletDisconnected('dapp');\n            yield ((_a = this.provider) === null || _a === void 0 ? void 0 : _a.disconnect());\n        });\n    }\n    onStatusChange(callback, errorsHandler) {\n        this.statusChangeSubscriptions.push(callback);\n        if (errorsHandler) {\n            this.statusChangeErrorSubscriptions.push(errorsHandler);\n        }\n        return () => {\n            this.statusChangeSubscriptions = this.statusChangeSubscriptions.filter(item => item !== callback);\n            if (errorsHandler) {\n                this.statusChangeErrorSubscriptions = this.statusChangeErrorSubscriptions.filter(item => item !== errorsHandler);\n            }\n        };\n    }\n    restoreConnection() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            (0, core_1.logDebug)('ton-Connect ==>> restoreConnection_1');\n            this.tracker.trackConnectionRestoringStarted();\n            let provider = null;\n            try {\n                provider = yield bridge_provider_1.BridgeProvider.fromStorage(this.storage, this.dappSettings.metaData.name, this.connectors);\n            }\n            catch (_b) {\n                this.tracker.trackConnectionRestoringError('Provider is not restored');\n                yield this.bridgeConnectionStorage.removeConnection();\n                provider === null || provider === void 0 ? void 0 : provider.closeConnection();\n                provider = null;\n                return;\n            }\n            if (!provider) {\n                (0, core_1.logError)('Provider is not restored');\n                this.tracker.trackConnectionRestoringError('Provider is not restored');\n                return;\n            }\n            (0, core_1.logDebug)('ton-Connect ==>> restoreConnection_2 ==>> Provider is restored ');\n            (_a = this.provider) === null || _a === void 0 ? void 0 : _a.closeConnection(true, false);\n            this.provider = provider;\n            provider.listen(this.walletEventsListener.bind(this));\n            yield this.provider.restoreConnection();\n            if (this.connected) {\n                this.tracker.trackConnectionRestoringCompleted(this.wallet);\n            }\n            else {\n                this.tracker.trackConnectionRestoringError('Connection restoring failed');\n            }\n        });\n    }\n    sendTransaction(transaction, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            (0, core_1.logDebug)('ton-Connect ==>> sendTransaction_1', transaction);\n            this.checkConnection();\n            (0, feature_support_1.checkSendTransactionSupport)(this.wallet.device.features, {\n                requiredMessagesNumber: transaction.messages.length\n            });\n            this.tracker.trackTransactionSentForSignature(this.wallet, transaction);\n            (0, core_1.logDebug)('ton-Connect ==>> sendTransaction_2 ==>> check params');\n            const { validUntil } = transaction, tx = __rest(transaction, [\"validUntil\"]);\n            const from = transaction.from || this.account.address;\n            let network = this.account.chain;\n            (0, core_1.logDebug)('ton-Connect ==>> sendTransaction_2 ==>> await sendRequest', network);\n            if ((0, core_1.isIos)() && !(options === null || options === void 0 ? void 0 : options.doNotOpenWallet)) {\n                (_a = this.provider) === null || _a === void 0 ? void 0 : _a.openOKXWallet();\n            }\n            const response = yield this.provider.sendRequest(send_transaction_parser_1.sendTransactionParser.convertToRpcRequest(Object.assign(Object.assign({}, tx), { valid_until: validUntil, from,\n                network })), {\n                onRequestSent: () => {\n                    var _a, _b;\n                    if (!(0, core_1.isIos)() && !(options === null || options === void 0 ? void 0 : options.doNotOpenWallet)) {\n                        (_a = this.provider) === null || _a === void 0 ? void 0 : _a.openOKXWallet();\n                    }\n                    (_b = options === null || options === void 0 ? void 0 : options.onRequestSent) === null || _b === void 0 ? void 0 : _b.call(options);\n                }\n            });\n            (0, core_1.logDebug)('ton-Connect ==>> sendTransaction_3 ==>>sendRequest response:', response);\n            if (send_transaction_parser_1.sendTransactionParser.isError(response)) {\n                this.tracker.trackTransactionSigningFailed(this.wallet, transaction, response.error.message, response.error.code);\n                throw new core_1.OKXConnectError(response.error.code, response.error.message);\n            }\n            const result = send_transaction_parser_1.sendTransactionParser.convertFromRpcResponse(response);\n            this.tracker.trackTransactionSigned(this.wallet, transaction, result);\n            return result;\n        });\n    }\n    checkConnection() {\n        (0, core_1.logDebug)('ton-Connect ==>> checkConnection');\n        if (!this.connected) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, \"Wallet not connected\");\n        }\n    }\n    createConnectRequest(request) {\n        (0, core_1.logDebug)('ton-Connect ==>> createConnectRequest');\n        const params = {\n            ton_addr: {\n                name: 'ton_addr'\n            }\n        };\n        if (request === null || request === void 0 ? void 0 : request.tonProof) {\n            params.ton_proof = {\n                name: 'ton_proof',\n                payload: request.tonProof\n            };\n        }\n        return {\n            dappInfo: this.dappSettings.metaData,\n            params: params\n        };\n    }\n    static getWallets() {\n        return this.walletsList;\n    }\n}\nexports.OKXTonConnectInner = OKXTonConnectInner;\nOKXTonConnectInner.walletsList = [(0, core_1.creatOKXWalletInfo)()];\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTonConnect = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nconst okx_connect_ton_inner_1 = require(\"./okx-connect-ton-inner\");\nclass OKXTonConnect {\n    constructor(options) {\n        try {\n            (0, core_1.logDebug)('OKXTonConnect constructor called');\n            if (window && window.okxConnectTonsdkinwindow && window.okxConnectTonsdkinwindow instanceof okx_connect_ton_inner_1.OKXTonConnectInner) {\n                this.tonInner = window.okxConnectTonsdkinwindow;\n                (0, core_1.logDebug)('OKXTonConnect constructor old called');\n            }\n            else {\n                this.tonInner = new okx_connect_ton_inner_1.OKXTonConnectInner(options);\n                (0, core_1.logDebug)('OKXTonConnect constructor new called');\n                this.registerConnector([core_1.AppwalletConnector.getConnector()]);\n                if (window) {\n                    window.okxConnectTonsdkinwindow = this.tonInner;\n                }\n            }\n        }\n        catch (error) {\n            throw error;\n        }\n    }\n    /**\n     * Shows if the wallet is connected right now.\n     */\n    get connected() {\n        return this.tonInner.connected;\n    }\n    get openUniversalLink() {\n        return this.tonInner.openUniversalLink;\n    }\n    get provider() {\n        return this.tonInner.provider;\n    }\n    /**\n     * Current connected account or null if no account is connected.\n     */\n    get account() {\n        return this.tonInner.account;\n    }\n    /**\n     * Current connected wallet or null if no account is connected.\n     */\n    get wallet() {\n        return this.tonInner.wallet;\n    }\n    set wallet(value) {\n        this.tonInner.wallet = value;\n    }\n    connect(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.tonInner.connect(request);\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.tonInner.disconnect();\n        });\n    }\n    onStatusChange(callback, errorsHandler) {\n        return this.tonInner.onStatusChange(callback, errorsHandler);\n    }\n    restoreConnection() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.tonInner.restoreConnection();\n        });\n    }\n    sendTransaction(transaction, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.tonInner.sendTransaction(transaction, options);\n        });\n    }\n    static getWallets() {\n        return okx_connect_ton_inner_1.OKXTonConnectInner.getWallets();\n    }\n    registerConnector(connectors) {\n        this.tonInner.registerConnector(connectors);\n    }\n}\nexports.OKXTonConnect = OKXTonConnect;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RpcParser = void 0;\nclass RpcParser {\n    isError(response) {\n        return 'error' in response;\n    }\n}\nexports.RpcParser = RpcParser;\n","\"use strict\";\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sendTransactionParser = void 0;\nconst rpc_parser_1 = require(\"./rpc-parser\");\nclass SendTransactionParser extends rpc_parser_1.RpcParser {\n    convertToRpcRequest(request) {\n        const { redirect } = request, params = __rest(request, [\"redirect\"]);\n        return {\n            method: \"ton_sendTransaction\",\n            redirect: redirect,\n            params: params,\n        };\n    }\n    convertFromRpcResponse(rpcResponse) {\n        return {\n            boc: rpcResponse.result.toString()\n        };\n    }\n}\nexports.sendTransactionParser = new SendTransactionParser();\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BridgeConnectionStorage = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass BridgeConnectionStorage {\n    constructor(storage) {\n        this.storage = storage;\n        this.storeKey = 'ton_connect_info_adapter_universal';\n    }\n    storeConnection(connection) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"BridgeConnectionStorage ==>> storeConnection ==>> connection:\", connection);\n            return this.storage.saveContent(JSON.stringify(connection), this.storeKey);\n        });\n    }\n    removeConnection() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"BridgeConnectionStorage ==>> removeConnection\");\n            return this.storage.clearCache(this.storeKey);\n        });\n    }\n    getConnection() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const stored = this.storage.getItem(this.storeKey);\n            (0, core_1.logDebug)(\"BridgeConnectionStorage ==>> getConnection ==>>this.storage: \", this.storage);\n            if (!stored || !(stored === null || stored === void 0 ? void 0 : stored.content)) {\n                return null;\n            }\n            try {\n                const content = stored === null || stored === void 0 ? void 0 : stored.content;\n                if (content) {\n                    let connection;\n                    connection = JSON.parse(content);\n                    (0, core_1.logDebug)(\"BridgeConnectionStorage ==>> getConnection ==>>connection: \", connection);\n                    return connection;\n                }\n                else {\n                    return null;\n                }\n            }\n            catch (error) {\n                return null;\n            }\n        });\n    }\n    getHttpConnection() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const connection = yield this.getConnection();\n            if (!connection) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, 'Trying to read HTTP connection source while nothing is stored');\n            }\n            return connection;\n        });\n    }\n    storeLastWalletEventId(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const connection = yield this.getConnection();\n            if (connection && ('connectEvent' in connection)) {\n                connection.lastWalletEventId = id;\n                return this.storeConnection(connection);\n            }\n        });\n    }\n    getLastWalletEventId() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const connection = yield this.getConnection();\n            if (connection && 'lastWalletEventId' in connection) {\n                return connection.lastWalletEventId;\n            }\n            return undefined;\n        });\n    }\n}\nexports.BridgeConnectionStorage = BridgeConnectionStorage;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BridgeProvider = void 0;\nconst bridge_connection_1 = require(\"./models/bridge-connection\");\nconst core_1 = require(\"@okxconnect/core\");\nconst bridge_connection_storage_1 = require(\"../bridge-connection-storage\");\nconst constants_1 = require(\"../../utils/constants\");\nconst ton_connect_tracker_1 = require(\"../../tracker/ton-connect-tracker\");\nclass BridgeProvider {\n    constructor(storage, appname = undefined, connectors) {\n        this.storage = storage;\n        this.type = 'http';\n        this.listeners = [];\n        this.walletConnectionSource = { \"universalLink\": core_1.standardUniversalLink };\n        this.openUniversalLink = false;\n        this.engine = new core_1.Engine(appname + \"_okxton\");\n        this.engine.registerConnector(connectors);\n        this.connectionStorage = new bridge_connection_storage_1.BridgeConnectionStorage(storage);\n        this.tracker = new ton_connect_tracker_1.TonConnectTracker({\n            OKXtonConnectSdkVersion: constants_1.OKXtonConnectSdkVersion\n        });\n        (0, core_1.getDefaultReporter)().configVersionAndSide('tonsdk-1.5.2', 'dapp', appname);\n    }\n    static fromStorage(storage_1) {\n        return __awaiter(this, arguments, void 0, function* (storage, appname = undefined, connectors) {\n            (0, core_1.logDebug)('bridge-provider ==>> fromStorage ==>>storage:', storage);\n            (0, core_1.reportLog)('bridge-provider ==>> fromStorage');\n            const bridgeConnectionStorage = new bridge_connection_storage_1.BridgeConnectionStorage(storage);\n            const connection = yield bridgeConnectionStorage.getHttpConnection();\n            if ((0, bridge_connection_1.isPendingConnectionHttp)(connection)) {\n                return null;\n            }\n            const provider = new BridgeProvider(storage, appname, connectors);\n            provider.openUniversalLink = connection.openUniversalLink;\n            return provider;\n        });\n    }\n    connect(message, redirect, openUniversalLink, tmaReturnUrl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('bridge-provider ==>> connect_1 ==>>message:', message);\n            (0, core_1.logDebug)('bridge-provider ==>> connect_1 ==>>redirect:', redirect);\n            (0, core_1.logDebug)('bridge-provider ==>> connect_1 ==>>openUniversalLink:', openUniversalLink);\n            (0, core_1.logDebug)('bridge-provider ==>> connect_1 ==>>tmaReturnUrl:', tmaReturnUrl);\n            (0, core_1.reportLog)('bridge-provider ==>> connect');\n            return new Promise((resolve, reject) => {\n                try {\n                    this.openUniversalLink = openUniversalLink;\n                    if (this.openUniversalLink === undefined) {\n                        this.openUniversalLink = (0, core_1.isMobileUserAgent)();\n                    }\n                    let tonNameSpace = {\n                        namespace: \"ton\",\n                        chains: [\"ton:-239\"],\n                        params: message.params,\n                    };\n                    let tonRequest = {\n                        name: \"requestAccounts\",\n                        requiredNamespaces: [tonNameSpace]\n                    };\n                    let engineRequest = [];\n                    // Easy to identify tonsdk\n                    if (message.params.ton_addr) {\n                        engineRequest.push(message.params.ton_addr);\n                    }\n                    if (message.params.ton_proof) {\n                        engineRequest.push(message.params.ton_proof);\n                    }\n                    engineRequest.push(tonRequest); //Universal data\n                    let config = {\n                        dappInfo: message.dappInfo,\n                        openUniversalUrl: this.openUniversalLink,\n                        redirect: redirect,\n                        tmaReturnUrl: tmaReturnUrl,\n                    };\n                    this.engine.universalConnect(engineRequest, config, (info) => {\n                        (0, core_1.logDebug)(`bridge-provider: connect: info>>>> ${JSON.stringify(info)}`);\n                        try {\n                            const base64Encoded = (0, core_1.encodeConnectParams)(info.connectRequest);\n                            const deepLink = (0, core_1.getAppWalletDeepLink)(base64Encoded);\n                            const universalUrl = (0, core_1.getUniversalLink)(deepLink);\n                            this.tracker.trackConnectionInfoBeforeJump(info);\n                            resolve(universalUrl);\n                        }\n                        catch (error) {\n                            reject(error);\n                        }\n                    }).then((session) => {\n                        (0, core_1.logDebug)(`bridge-provider: connect: success>>>> ${JSON.stringify(session)}`);\n                        this.connectSuccessHandle(session);\n                    }).catch((e) => {\n                        (0, core_1.logDebug)(`bridge-provider: connect: catch>>>> ${JSON.stringify(e)}`);\n                        const errorMessage = {\n                            event: 'connect_error',\n                            requestId: Number(Date.now()),\n                            payload: {\n                                code: e.code,\n                                message: e.message,\n                            },\n                        };\n                        (0, core_1.logDebug)('bridge-provider ==>> connectListener_4 ==>>connect_error:', errorMessage);\n                        this.listeners.forEach(listener => listener(errorMessage));\n                        reject(e);\n                    });\n                }\n                catch (error) {\n                    console.error('bridge-provider connect try catch error:>>>', JSON.stringify(error));\n                    reject(error);\n                }\n            });\n        });\n    }\n    listen(callback) {\n        this.listeners.push(callback);\n        return () => (this.listeners = this.listeners.filter(listener => listener !== callback));\n    }\n    disconnectListener() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('bridge-provider ==>> disconnectListener');\n            (0, core_1.reportLog)('bridge-provider ==>> disconnectListener');\n            const disconnectMessage = {\n                event: 'disconnect',\n                requestId: Number(1),\n                payload: {},\n            };\n            this.listeners.forEach(listener => listener(disconnectMessage));\n            yield this.closeConnection();\n        });\n    }\n    connectSuccessHandle(response) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b;\n            try {\n                const namespaces = (_a = response.namespaces) === null || _a === void 0 ? void 0 : _a[\"ton\"];\n                const payload = namespaces.payload;\n                const wallet = response.wallet;\n                if (!namespaces || !payload || !wallet || !payload.ton_addr) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n                }\n                const ton_addr = payload.ton_addr;\n                const sessionConfig = response.sessionConfig;\n                let itemArr = [];\n                if (payload.ton_addr) {\n                    itemArr.push(payload.ton_addr);\n                }\n                if (payload.ton_proof) {\n                    itemArr.push(payload.ton_proof);\n                }\n                const tonDeviceInfo = {\n                    platform: wallet.platform,\n                    appName: wallet.appName,\n                    appVersion: wallet.appVersion,\n                    maxProtocolVersion: wallet.maxProtocolVersion,\n                    features: ['ton_sendTransaction'],\n                };\n                const tonConnectInfo = {\n                    type: 'http',\n                    lastWalletEventId: Number(Date.now()),\n                    connectEvent: {\n                        event: 'connect',\n                        payload: {\n                            items: itemArr,\n                            device: tonDeviceInfo,\n                        },\n                    },\n                    connectionSource: this.walletConnectionSource,\n                    channelId: response.topic,\n                    openUniversalLink: sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.openUniversalUrl,\n                };\n                (0, core_1.logDebug)('bridge-provider ==>> connectSuccessHandle_2 ==>>storeConnection:', tonConnectInfo);\n                yield this.connectionStorage.storeConnection(tonConnectInfo);\n                (_b = this.engine) === null || _b === void 0 ? void 0 : _b.addDisconnectListener(this.disconnectListener.bind(this));\n                const successMessage = {\n                    event: 'connect',\n                    requestId: tonConnectInfo.lastWalletEventId,\n                    payload: tonConnectInfo.connectEvent.payload,\n                };\n                (0, core_1.logDebug)('bridge-provider ==>> connectSuccessHandle_3 ==>>listeners.forEach:', successMessage);\n                this.listeners.forEach(listener => listener(successMessage));\n            }\n            catch (error) {\n                (0, core_1.logDebug)('bridge-provider ==>> connectSuccessHandle_4 ==>>error:', error);\n                const errorMessage = {\n                    event: 'connect_error',\n                    requestId: Number(Date.now()),\n                    payload: {\n                        code: core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR,\n                        message: \"Connect success  connectSuccessHandle response error\",\n                    },\n                };\n                (0, core_1.logDebug)('bridge-provider ==>> connectSuccessHandle_4 ==>>connect_error:', errorMessage);\n                this.listeners.forEach(listener => listener(errorMessage));\n            }\n        });\n    }\n    closeConnection() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false, needOpenUrl = false) {\n            var _a, _b;\n            (0, core_1.logDebug)('bridge-provider ==>> closeConnection ==>>fromRestore:', fromRestore, ' needOpenUrl:', needOpenUrl);\n            (0, core_1.reportLog)('bridge-provider ==>> closeConnection');\n            this.listeners = [];\n            if (!needOpenUrl) {\n                yield ((_a = this.engine) === null || _a === void 0 ? void 0 : _a.connectManagerDisconnect(fromRestore));\n            }\n            if (!fromRestore) {\n                (_b = this.engine) === null || _b === void 0 ? void 0 : _b.clearData();\n                yield this.connectionStorage.removeConnection();\n            }\n        });\n    }\n    restoreConnection() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            (0, core_1.logDebug)('bridge-provider ==>> restoreConnection_1');\n            (0, core_1.reportLog)('bridge-provider ==>> restoreConnection');\n            const storedConnection = yield this.connectionStorage.getHttpConnection();\n            if (!storedConnection) {\n                return;\n            }\n            if ((0, bridge_connection_1.isPendingConnectionHttp)(storedConnection)) {\n                return;\n            }\n            (0, core_1.logDebug)('bridge-provider ==>> restoreConnection_2 ==>>storedConnection.channelId:', storedConnection.channelId);\n            if (storedConnection.channelId) {\n                try {\n                    const successMessage = {\n                        event: 'connect',\n                        requestId: Number(0),\n                        payload: storedConnection.connectEvent.payload,\n                    };\n                    this.listeners.forEach(listener => listener(successMessage));\n                    this.engine.setConnectConnector(storedConnection.connectEvent.payload.device);\n                    const channelId = storedConnection.channelId;\n                    (0, core_1.logDebug)('bridge-provider ==>> restoreConnection_3 ==>>this.engine.restoreConnect:', channelId);\n                    (_a = this.engine) === null || _a === void 0 ? void 0 : _a.addDisconnectListener(this.disconnectListener.bind(this));\n                    yield this.engine.restoreconnectFromTopic(channelId);\n                }\n                catch (e) {\n                    (0, core_1.logDebug)('bridge-provider ==>> restoreConnection_4 ==>>closeConnection_1');\n                    yield this.closeConnection();\n                }\n            }\n            else {\n                (0, core_1.logDebug)('bridge-provider ==>> restoreConnection_4 ==>>closeConnection_2');\n                yield this.closeConnection();\n            }\n        });\n    }\n    openOKXWallet() {\n        (0, core_1.logDebug)('bridge-provider ==>> openOKXWallet', this.openUniversalLink);\n        (0, core_1.reportLog)('bridge-provider ==>> openOKXWallet');\n        if (this.openUniversalLink) {\n            (0, core_1.openOKXDeeplink)(core_1.standardDeeplink);\n        }\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('bridge-provider ==>> disconnect_1');\n            (0, core_1.reportLog)('bridge-provider ==>> disconnect');\n            return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n                let called = false;\n                const onRequestSent = () => {\n                    if (!called) {\n                        called = true;\n                        this.closeConnection().then(resolve);\n                    }\n                };\n                try {\n                    yield this.sendRequest({ method: 'disconnect' }, { onRequestSent: onRequestSent, attempts: 1 });\n                }\n                catch (e) {\n                    if (!called) {\n                        this.closeConnection().then(resolve);\n                    }\n                }\n                finally {\n                    onRequestSent();\n                }\n            }));\n        });\n    }\n    sendRequest(request, options, ttl) {\n        (0, core_1.logDebug)('bridge-provider ==>> sendRequest');\n        (0, core_1.reportLog)('bridge-provider ==>> sendRequest');\n        return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                yield ((_a = this.engine) === null || _a === void 0 ? void 0 : _a.send(request, {\n                    resolve: function (response) {\n                        resolve(response);\n                    },\n                    onAck: function () {\n                        var _a;\n                        (_a = options === null || options === void 0 ? void 0 : options.onRequestSent) === null || _a === void 0 ? void 0 : _a.call(options);\n                    }\n                }, ttl));\n            }\n            catch (e) {\n                reject(e);\n            }\n        }));\n    }\n    connectorOpenWallet() {\n        this.engine.openWallet();\n    }\n}\nexports.BridgeProvider = BridgeProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isPendingConnectionHttp = isPendingConnectionHttp;\nfunction isPendingConnectionHttp(connection) {\n    return !('connectEvent' in connection);\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BrowserEventDispatcher = void 0;\n/**\n * A concrete implementation of EventDispatcher that dispatches events to the browser window.\n */\nclass BrowserEventDispatcher {\n    constructor() {\n        /**\n         * The window object, possibly undefined in a server environment.\n         * @private\n         */\n        this.window = window;\n    }\n    /**\n     * Dispatches an event with the given name and details to the browser window.\n     * @param eventName - The name of the event to dispatch.\n     * @param eventDetails - The details of the event to dispatch.\n     * @returns A promise that resolves when the event has been dispatched.\n     */\n    dispatchEvent(eventName, eventDetails) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            const event = new CustomEvent(eventName, { detail: eventDetails });\n            (_a = this.window) === null || _a === void 0 ? void 0 : _a.dispatchEvent(event);\n        });\n    }\n    /**\n     * Adds an event listener to the browser window.\n     * @param eventName - The name of the event to listen for.\n     * @param listener - The listener to add.\n     * @param options - The options for the listener.\n     * @returns A function that removes the listener.\n     */\n    addEventListener(eventName, listener, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            (_a = this.window) === null || _a === void 0 ? void 0 : _a.addEventListener(eventName, listener, options);\n            return () => {\n                var _a;\n                return (_a = this.window) === null || _a === void 0 ? void 0 : _a.removeEventListener(eventName, listener);\n            };\n        });\n    }\n}\nexports.BrowserEventDispatcher = BrowserEventDispatcher;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BrowserEventDispatcher = exports.createVersionInfo = exports.createTransactionSigningFailedEvent = exports.createTransactionSignedEvent = exports.createTransactionSentForSignatureEvent = exports.createDisconnectionEvent = exports.createConnectionStartedEvent = exports.createConnectionRestoringStartedEvent = exports.createConnectionRestoringErrorEvent = exports.createConnectionRestoringCompletedEvent = exports.createConnectionErrorEvent = exports.createConnectionCompletedEvent = exports.createResponseVersionEvent = exports.createRequestVersionEvent = exports.OKX_TON_CONNECTION_AND_TRANSACTION_EVENT = void 0;\nvar tracker_constants_1 = require(\"./tracker-constants\");\nObject.defineProperty(exports, \"OKX_TON_CONNECTION_AND_TRANSACTION_EVENT\", { enumerable: true, get: function () { return tracker_constants_1.OKX_TON_CONNECTION_AND_TRANSACTION_EVENT; } });\nvar types_1 = require(\"./types\");\nObject.defineProperty(exports, \"createRequestVersionEvent\", { enumerable: true, get: function () { return types_1.createRequestVersionEvent; } });\nObject.defineProperty(exports, \"createResponseVersionEvent\", { enumerable: true, get: function () { return types_1.createResponseVersionEvent; } });\nObject.defineProperty(exports, \"createConnectionCompletedEvent\", { enumerable: true, get: function () { return types_1.createConnectionCompletedEvent; } });\nObject.defineProperty(exports, \"createConnectionErrorEvent\", { enumerable: true, get: function () { return types_1.createConnectionErrorEvent; } });\nObject.defineProperty(exports, \"createConnectionRestoringCompletedEvent\", { enumerable: true, get: function () { return types_1.createConnectionRestoringCompletedEvent; } });\nObject.defineProperty(exports, \"createConnectionRestoringErrorEvent\", { enumerable: true, get: function () { return types_1.createConnectionRestoringErrorEvent; } });\nObject.defineProperty(exports, \"createConnectionRestoringStartedEvent\", { enumerable: true, get: function () { return types_1.createConnectionRestoringStartedEvent; } });\nObject.defineProperty(exports, \"createConnectionStartedEvent\", { enumerable: true, get: function () { return types_1.createConnectionStartedEvent; } });\nObject.defineProperty(exports, \"createDisconnectionEvent\", { enumerable: true, get: function () { return types_1.createDisconnectionEvent; } });\nObject.defineProperty(exports, \"createTransactionSentForSignatureEvent\", { enumerable: true, get: function () { return types_1.createTransactionSentForSignatureEvent; } });\nObject.defineProperty(exports, \"createTransactionSignedEvent\", { enumerable: true, get: function () { return types_1.createTransactionSignedEvent; } });\nObject.defineProperty(exports, \"createTransactionSigningFailedEvent\", { enumerable: true, get: function () { return types_1.createTransactionSigningFailedEvent; } });\nObject.defineProperty(exports, \"createVersionInfo\", { enumerable: true, get: function () { return types_1.createVersionInfo; } });\nvar browser_event_dispatcher_1 = require(\"./browser-event-dispatcher\");\nObject.defineProperty(exports, \"BrowserEventDispatcher\", { enumerable: true, get: function () { return browser_event_dispatcher_1.BrowserEventDispatcher; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TonConnectTracker = void 0;\nconst types_1 = require(\"./types\");\nconst browser_event_dispatcher_1 = require(\"./browser-event-dispatcher\");\n/**\n * Tracker for TonConnect user actions, such as transaction signing, connection, etc.\n *\n * List of events:\n *  * `connection-started`: when a user starts connecting a wallet.\n *  * `connection-completed`: when a user successfully connected a wallet.\n *  * `connection-error`: when a user cancels a connection or there is an error during the connection process.\n *  * `connection-restoring-started`: when the dApp starts restoring a connection.\n *  * `connection-restoring-completed`: when the dApp successfully restores a connection.\n *  * `connection-restoring-error`: when the dApp fails to restore a connection.\n *  * `disconnection`: when a user starts disconnecting a wallet.\n *  * `transaction-sent-for-signature`: when a user sends a transaction for signature.\n *  * `transaction-signed`: when a user successfully signs a transaction.\n *  * `transaction-signing-failed`: when a user cancels transaction signing or there is an error during the signing process.\n *\n\n *\n * @internal\n */\nclass TonConnectTracker {\n    /**\n     * Version of the library.\n     */\n    get version() {\n        return (0, types_1.createVersionInfo)({\n            okx_ton_connect_sdk_lib: this.OKXtonConnectSdkVersion,\n            okx_connect_ui_lib: this.OKXConnectUiVersion,\n        });\n    }\n    constructor(options) {\n        /**\n         * Event prefix for user actions.\n         * @private\n         */\n        this.eventPrefix = 'okx-ton-connect-';\n        this.OKXConnectUiVersion = null;\n        this.eventDispatcher = new browser_event_dispatcher_1.BrowserEventDispatcher();\n        this.OKXtonConnectSdkVersion = options.OKXtonConnectSdkVersion;\n        this.init().catch();\n    }\n    init() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this.setRequestVersionHandler();\n                this.OKXConnectUiVersion = yield this.requestTonConnectUiVersion();\n            }\n            catch (e) { }\n        });\n    }\n    /**\n     * Set request version handler.\n     * @private\n     */\n    setRequestVersionHandler() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.eventDispatcher.addEventListener('okx-ton-connect-request-version', () => __awaiter(this, void 0, void 0, function* () {\n                yield this.eventDispatcher.dispatchEvent('okx-ton-connect-response-version', (0, types_1.createResponseVersionEvent)(this.OKXtonConnectSdkVersion));\n            }));\n        });\n    }\n    /**\n     * Request TonConnect UI version.\n     * @private\n     */\n    requestTonConnectUiVersion() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    yield this.eventDispatcher.addEventListener('okx-connect-ui-response-version', (event) => {\n                        resolve(event.detail.version);\n                    }, { once: true });\n                    yield this.eventDispatcher.dispatchEvent('okx-connect-ui-request-version', (0, types_1.createRequestVersionEvent)());\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }));\n        });\n    }\n    /**\n     * Emit user action event to the window.\n     * @param eventDetails\n     * @private\n     */\n    dispatchUserActionEvent(eventDetails) {\n        try {\n            this.eventDispatcher\n                .dispatchEvent(`${this.eventPrefix}${eventDetails.type}`, eventDetails)\n                .catch();\n        }\n        catch (e) { }\n    }\n    /**\n     * Track connection init event.\n     * @param args\n     */\n    trackConnectionStarted(...args) {\n        try {\n            const event = (0, types_1.createConnectionStartedEvent)(this.version, ...args);\n            this.dispatchUserActionEvent(event);\n        }\n        catch (e) { }\n    }\n    /**\n     * Track connection connecting event.\n     * @param args\n     */\n    trackConnectionDeepLink(...args) {\n        try {\n            const event = (0, types_1.createConnectionDeepLinkEvent)(...args);\n            this.dispatchUserActionEvent(event);\n        }\n        catch (e) { }\n    }\n    /**\n     * Track connection success event.\n     * @param args\n     */\n    trackConnectionCompleted(...args) {\n        try {\n            const event = (0, types_1.createConnectionCompletedEvent)(this.version, ...args);\n            this.dispatchUserActionEvent(event);\n        }\n        catch (e) { }\n    }\n    trackConnectionInfoBeforeJump(args) {\n        try {\n            const event = (0, types_1.createConnectionInfoBeforeJumpEvent)(args);\n            this.dispatchUserActionEvent(event);\n        }\n        catch (e) { }\n    }\n    /**\n     * Track connection error event.\n     * @param args\n     */\n    trackConnectionError(...args) {\n        try {\n            const event = (0, types_1.createConnectionErrorEvent)(this.version, ...args);\n            this.dispatchUserActionEvent(event);\n        }\n        catch (e) { }\n    }\n    /**\n     * Track connection restoring init event.\n     * @param args\n     */\n    trackConnectionRestoringStarted(...args) {\n        try {\n            const event = (0, types_1.createConnectionRestoringStartedEvent)(this.version, ...args);\n            this.dispatchUserActionEvent(event);\n        }\n        catch (e) { }\n    }\n    /**\n     * Track connection restoring success event.\n     * @param args\n     */\n    trackConnectionRestoringCompleted(...args) {\n        try {\n            const event = (0, types_1.createConnectionRestoringCompletedEvent)(this.version, ...args);\n            this.dispatchUserActionEvent(event);\n        }\n        catch (e) { }\n    }\n    /**\n     * Track connection restoring error event.\n     * @param args\n     */\n    trackConnectionRestoringError(...args) {\n        try {\n            const event = (0, types_1.createConnectionRestoringErrorEvent)(this.version, ...args);\n            this.dispatchUserActionEvent(event);\n        }\n        catch (e) { }\n    }\n    /**\n     * Track disconnect event.\n     * @param args\n     */\n    trackDisconnection(...args) {\n        try {\n            const event = (0, types_1.createDisconnectionEvent)(this.version, ...args);\n            this.dispatchUserActionEvent(event);\n        }\n        catch (e) { }\n    }\n    /**\n     * Track transaction init event.\n     * @param args\n     */\n    trackTransactionSentForSignature(...args) {\n        try {\n            const event = (0, types_1.createTransactionSentForSignatureEvent)(this.version, ...args);\n            this.dispatchUserActionEvent(event);\n        }\n        catch (e) { }\n    }\n    /**\n     * Track transaction signed event.\n     * @param args\n     */\n    trackTransactionSigned(...args) {\n        try {\n            const event = (0, types_1.createTransactionSignedEvent)(this.version, ...args);\n            this.dispatchUserActionEvent(event);\n        }\n        catch (e) { }\n    }\n    /**\n     * Track transaction error event.\n     * @param args\n     */\n    trackTransactionSigningFailed(...args) {\n        try {\n            const event = (0, types_1.createTransactionSigningFailedEvent)(this.version, ...args);\n            this.dispatchUserActionEvent(event);\n        }\n        catch (e) { }\n    }\n}\nexports.TonConnectTracker = TonConnectTracker;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_TON_CONNECTION_AND_TRANSACTION_EVENT = void 0;\nvar OKX_TON_CONNECTION_AND_TRANSACTION_EVENT;\n(function (OKX_TON_CONNECTION_AND_TRANSACTION_EVENT) {\n    OKX_TON_CONNECTION_AND_TRANSACTION_EVENT[\"OKX_TON_CONNECTION_STARTED\"] = \"okx-ton-connect-connection-started\";\n    OKX_TON_CONNECTION_AND_TRANSACTION_EVENT[\"OKX_TON_CONNECTION_COMPLETED\"] = \"okx-ton-connect-connection-completed\";\n    OKX_TON_CONNECTION_AND_TRANSACTION_EVENT[\"OKX_TON_CONNECTION_ERROR\"] = \"okx-ton-connect-connection-error\";\n    OKX_TON_CONNECTION_AND_TRANSACTION_EVENT[\"OKX_TON_CONNECTION_RESTORING_STARTED\"] = \"okx-ton-connect-connection-restoring-started\";\n    OKX_TON_CONNECTION_AND_TRANSACTION_EVENT[\"OKX_TON_CONNECTION_RESTORING_COMPLETED\"] = \"okx-ton-connect-connection-restoring-completed\";\n    OKX_TON_CONNECTION_AND_TRANSACTION_EVENT[\"OKX_TON_CONNECTION_RESTORING_ERROR\"] = \"okx-ton-connect-connection-restoring-error\";\n    OKX_TON_CONNECTION_AND_TRANSACTION_EVENT[\"OKX_TON_DISCONNECTION\"] = \"okx-ton-connect-disconnection\";\n    OKX_TON_CONNECTION_AND_TRANSACTION_EVENT[\"OKX_TON_TRANSACTION_SENT_FOR_SIGNATURE\"] = \"okx-ton-connect-transaction-sent-for-signature\";\n    OKX_TON_CONNECTION_AND_TRANSACTION_EVENT[\"OKX_TON_TRANSACTION_SIGNED\"] = \"okx-ton-connect-transaction-signed\";\n    OKX_TON_CONNECTION_AND_TRANSACTION_EVENT[\"OKX_TON_TRANSACTION_SIGNING_FAILED\"] = \"okx-ton-connect-transaction-signing-failed\";\n})(OKX_TON_CONNECTION_AND_TRANSACTION_EVENT || (exports.OKX_TON_CONNECTION_AND_TRANSACTION_EVENT = OKX_TON_CONNECTION_AND_TRANSACTION_EVENT = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createRequestVersionEvent = createRequestVersionEvent;\nexports.createResponseVersionEvent = createResponseVersionEvent;\nexports.createVersionInfo = createVersionInfo;\nexports.createConnectionStartedEvent = createConnectionStartedEvent;\nexports.createConnectionDeepLinkEvent = createConnectionDeepLinkEvent;\nexports.createConnectionInfoBeforeJumpEvent = createConnectionInfoBeforeJumpEvent;\nexports.createConnectionCompletedEvent = createConnectionCompletedEvent;\nexports.createConnectionErrorEvent = createConnectionErrorEvent;\nexports.createConnectionRestoringStartedEvent = createConnectionRestoringStartedEvent;\nexports.createConnectionRestoringCompletedEvent = createConnectionRestoringCompletedEvent;\nexports.createConnectionRestoringErrorEvent = createConnectionRestoringErrorEvent;\nexports.createTransactionSentForSignatureEvent = createTransactionSentForSignatureEvent;\nexports.createTransactionSignedEvent = createTransactionSignedEvent;\nexports.createTransactionSigningFailedEvent = createTransactionSigningFailedEvent;\nexports.createDisconnectionEvent = createDisconnectionEvent;\n/**\n * Create a request version event.\n */\nfunction createRequestVersionEvent() {\n    return {\n        type: 'request-version'\n    };\n}\n/**\n * Create a response version event.\n * @param version\n */\nfunction createResponseVersionEvent(version) {\n    return {\n        type: 'response-version',\n        version: version\n    };\n}\n/**\n * Create a version info.\n * @param version\n */\nfunction createVersionInfo(version) {\n    return {\n        okx_ton_connect_sdk_lib: version.okx_ton_connect_sdk_lib,\n        okx_connect_ui_lib: version.okx_connect_ui_lib\n    };\n}\nfunction createConnectionInfo(version, wallet) {\n    var _a, _b, _c, _d, _e, _f, _g, _h;\n    const isTonProof = ((_a = wallet === null || wallet === void 0 ? void 0 : wallet.connectItems) === null || _a === void 0 ? void 0 : _a.tonProof) && 'proof' in wallet.connectItems.tonProof;\n    const authType = isTonProof ? 'ton_proof' : 'ton_addr';\n    return {\n        wallet_address: (_c = (_b = wallet === null || wallet === void 0 ? void 0 : wallet.account) === null || _b === void 0 ? void 0 : _b.address) !== null && _c !== void 0 ? _c : null,\n        wallet_type: (_d = wallet === null || wallet === void 0 ? void 0 : wallet.device.appName) !== null && _d !== void 0 ? _d : null,\n        wallet_version: (_e = wallet === null || wallet === void 0 ? void 0 : wallet.device.appVersion) !== null && _e !== void 0 ? _e : null,\n        auth_type: authType,\n        custom_data: Object.assign({ chain_id: (_g = (_f = wallet === null || wallet === void 0 ? void 0 : wallet.account) === null || _f === void 0 ? void 0 : _f.chain) !== null && _g !== void 0 ? _g : null, provider: (_h = wallet === null || wallet === void 0 ? void 0 : wallet.provider) !== null && _h !== void 0 ? _h : null }, createVersionInfo(version))\n    };\n}\n/**\n * Create a connection init event.\n */\nfunction createConnectionStartedEvent(version) {\n    return {\n        type: 'connection-started',\n        custom_data: createVersionInfo(version)\n    };\n}\n/**\n * Create a connection init event.\n */\nfunction createConnectionDeepLinkEvent(deeplinkUrl) {\n    return {\n        type: 'connection-get-deeplink',\n        deeplinkUrl: deeplinkUrl,\n    };\n}\n// okx-ton-connect-connection-info-before-jump\nfunction createConnectionInfoBeforeJumpEvent(connectInfo) {\n    return {\n        type: 'connection-info-before-jump',\n        connectInfo: connectInfo,\n    };\n}\n/**\n * Create a connection completed event.\n * @param version\n * @param wallet\n */\nfunction createConnectionCompletedEvent(version, wallet) {\n    return Object.assign({ type: 'connection-completed', is_success: true }, createConnectionInfo(version, wallet));\n}\n/**\n * Create a connection error event.\n * @param version\n * @param error_message\n * @param errorCode\n */\nfunction createConnectionErrorEvent(version, error_message, errorCode) {\n    return {\n        type: 'connection-error',\n        is_success: false,\n        error_message: error_message,\n        error_code: errorCode !== null && errorCode !== void 0 ? errorCode : null,\n        custom_data: createVersionInfo(version)\n    };\n}\n/**\n * Create a connection restoring started event.\n */\nfunction createConnectionRestoringStartedEvent(version) {\n    return {\n        type: 'connection-restoring-started',\n        custom_data: createVersionInfo(version)\n    };\n}\n/**\n * Create a connection restoring completed event.\n * @param version\n * @param wallet\n */\nfunction createConnectionRestoringCompletedEvent(version, wallet) {\n    return Object.assign({ type: 'connection-restoring-completed', is_success: true }, createConnectionInfo(version, wallet));\n}\n/**\n * Create a connection restoring error event.\n * @param version\n * @param errorMessage\n */\nfunction createConnectionRestoringErrorEvent(version, errorMessage) {\n    return {\n        type: 'connection-restoring-error',\n        is_success: false,\n        error_message: errorMessage,\n        custom_data: createVersionInfo(version)\n    };\n}\nfunction createTransactionInfo(wallet, transaction) {\n    var _a, _b, _c, _d;\n    return {\n        valid_until: (_a = String(transaction.validUntil)) !== null && _a !== void 0 ? _a : null,\n        from: (_d = (_b = transaction.from) !== null && _b !== void 0 ? _b : (_c = wallet === null || wallet === void 0 ? void 0 : wallet.account) === null || _c === void 0 ? void 0 : _c.address) !== null && _d !== void 0 ? _d : null,\n        messages: transaction.messages.map(message => {\n            var _a, _b;\n            return ({\n                address: (_a = message.address) !== null && _a !== void 0 ? _a : null,\n                amount: (_b = message.amount) !== null && _b !== void 0 ? _b : null\n            });\n        })\n    };\n}\n/**\n * Create a transaction init event.\n * @param version\n * @param wallet\n * @param transaction\n */\nfunction createTransactionSentForSignatureEvent(version, wallet, transaction) {\n    return Object.assign(Object.assign({ type: 'transaction-sent-for-signature' }, createConnectionInfo(version, wallet)), createTransactionInfo(wallet, transaction));\n}\n/**\n * Create a transaction signed event.\n * @param version\n * @param wallet\n * @param transaction\n * @param signedTransaction\n */\nfunction createTransactionSignedEvent(version, wallet, transaction, signedTransaction) {\n    return Object.assign(Object.assign({ type: 'transaction-signed', is_success: true, signed_transaction: signedTransaction.boc }, createConnectionInfo(version, wallet)), createTransactionInfo(wallet, transaction));\n}\n/**\n * Create a transaction error event.\n * @param version\n * @param wallet\n * @param transaction\n * @param errorMessage\n * @param errorCode\n */\nfunction createTransactionSigningFailedEvent(version, wallet, transaction, errorMessage, errorCode) {\n    return Object.assign(Object.assign({ type: 'transaction-signing-failed', is_success: false, error_message: errorMessage, error_code: errorCode !== null && errorCode !== void 0 ? errorCode : null }, createConnectionInfo(version, wallet)), createTransactionInfo(wallet, transaction));\n}\n/**\n * Create a disconnect event.\n * @param version\n * @param wallet\n * @param scope\n * @returns\n */\nfunction createDisconnectionEvent(version, wallet, scope) {\n    return Object.assign({ type: 'disconnection', scope: scope }, createConnectionInfo(version, wallet));\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toUserFriendlyAddress = toUserFriendlyAddress;\nconst core_1 = require(\"@okxconnect/core\");\nconst noBounceableTag = 0x51;\nconst testOnlyTag = 0x80;\n/**\n * Converts raw TON address to no-bounceable user-friendly format. [See details]{@link https://ton.org/docs/learn/overviews/addresses#user-friendly-address}\n * @param hexAddress raw TON address formatted as \"0:<hex string without 0x>\".\n * @param [testOnly=false] convert address to test-only form. [See details]{@link https://ton.org/docs/learn/overviews/addresses#user-friendly-address}\n */\nfunction toUserFriendlyAddress(hexAddress, testOnly = false) {\n    const { wc, hex } = parseHexAddress(hexAddress);\n    let tag = noBounceableTag;\n    if (testOnly) {\n        tag |= testOnlyTag;\n    }\n    const addr = new Int8Array(34);\n    addr[0] = tag;\n    addr[1] = wc;\n    addr.set(hex, 2);\n    const addressWithChecksum = new Uint8Array(36);\n    addressWithChecksum.set(addr);\n    addressWithChecksum.set(crc16(addr), 34);\n    // let addressBase64 = Base64.encode(addressWithChecksum);\n    let addressBase64 = (0, core_1.base64encode)(addressWithChecksum, false);\n    return addressBase64.replace(/\\+/g, '-').replace(/\\//g, '_');\n}\nfunction parseHexAddress(hexAddress) {\n    if (!hexAddress.includes(':')) {\n        throw new Error(`Wrong address ${hexAddress}. Address must include \":\".`);\n    }\n    const parts = hexAddress.split(':');\n    if (parts.length !== 2) {\n        throw new Error(`Wrong address ${hexAddress}. Address must include \":\" only once.`);\n    }\n    const wc = parseInt(parts[0]);\n    if (wc !== 0 && wc !== -1) {\n        throw new Error(`Wrong address ${hexAddress}. WC must be eq 0 or -1, but ${wc} received.`);\n    }\n    const hex = parts[1];\n    if ((hex === null || hex === void 0 ? void 0 : hex.length) !== 64) {\n        throw new Error(`Wrong address ${hexAddress}. Hex part must be 64bytes length, but ${hex === null || hex === void 0 ? void 0 : hex.length} received.`);\n    }\n    return {\n        wc,\n        hex: hexToBytes(hex)\n    };\n}\nfunction crc16(data) {\n    const poly = 0x1021;\n    let reg = 0;\n    const message = new Uint8Array(data.length + 2);\n    message.set(data);\n    for (let byte of message) {\n        let mask = 0x80;\n        while (mask > 0) {\n            reg <<= 1;\n            if (byte & mask) {\n                reg += 1;\n            }\n            mask >>= 1;\n            if (reg > 0xffff) {\n                reg &= 0xffff;\n                reg ^= poly;\n            }\n        }\n    }\n    return new Uint8Array([Math.floor(reg / 256), reg % 256]);\n}\nconst toByteMap = {};\nfor (let ord = 0; ord <= 0xff; ord++) {\n    let s = ord.toString(16);\n    if (s.length < 2) {\n        s = '0' + s;\n    }\n    toByteMap[s] = ord;\n}\nfunction hexToBytes(hex) {\n    hex = hex.toLowerCase();\n    const length2 = hex.length;\n    if (length2 % 2 !== 0) {\n        throw new Error('Hex string must have length a multiple of 2: ' + hex);\n    }\n    const length = length2 / 2;\n    const result = new Uint8Array(length);\n    for (let i = 0; i < length; i++) {\n        const doubled = i * 2;\n        const hexSubstring = hex.substring(doubled, doubled + 2);\n        if (!toByteMap.hasOwnProperty(hexSubstring)) {\n            throw new Error('Invalid hex character: ' + hexSubstring);\n        }\n        result[i] = toByteMap[hexSubstring];\n    }\n    return result;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCONNECTOR_TON_KEY = exports.OKXtonConnectSdkVersion = void 0;\nexports.OKXtonConnectSdkVersion = '1';\nexports.OKXCONNECTOR_TON_KEY = \"OKXStorage_ctc\";\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkSendTransactionSupport = checkSendTransactionSupport;\nconst core_1 = require(\"@okxconnect/core\");\nfunction checkSendTransactionSupport(features, options) {\n    const supportsDeprecatedSendTransactionFeature = features.includes('ton_sendTransaction');\n    if (!supportsDeprecatedSendTransactionFeature) {\n        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Wallet doesn't support SendTransaction feature.\");\n    }\n    if (4 < options.requiredMessagesNumber) {\n        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, `Wallet is not able to handle such SendTransaction request. Max support messages number is ${4}, but ${options.requiredMessagesNumber} is required.`);\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toUserFriendlyAddress = exports.removeUrlLastSlash = exports.addPathToUrl = void 0;\nvar url_1 = require(\"./url\");\nObject.defineProperty(exports, \"addPathToUrl\", { enumerable: true, get: function () { return url_1.addPathToUrl; } });\nObject.defineProperty(exports, \"removeUrlLastSlash\", { enumerable: true, get: function () { return url_1.removeUrlLastSlash; } });\nvar address_1 = require(\"./address\");\nObject.defineProperty(exports, \"toUserFriendlyAddress\", { enumerable: true, get: function () { return address_1.toUserFriendlyAddress; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.removeUrlLastSlash = removeUrlLastSlash;\nexports.addPathToUrl = addPathToUrl;\nfunction removeUrlLastSlash(url) {\n    if (url.slice(-1) === '/') {\n        return url.slice(0, -1);\n    }\n    return url;\n}\nfunction addPathToUrl(url, path) {\n    return removeUrlLastSlash(url) + '/' + path;\n}\n","\n<template>\n\n    <div id=\"app\">\n      <el-container>\n        <el-header>OKX Connect</el-header>\n\n\n        <el-main>\n          <!-- 钱包信息 -->\n          <el-card class=\"wallet-info\">\n            <template #header>\n              <div>钱包信息</div>\n            </template>\n            <el-row class=\"info-row\">\n              <el-col :span=\"24\">\n                <strong>Wallet Address:</strong> {{ getWalletAddress }}\n              </el-col>\n            </el-row>\n\n            <el-row class=\"info-row\">\n              <el-col :span=\"24\">\n                <strong>当前状态 :</strong> {{ currentStatus }}\n              </el-col>\n            </el-row>\n\n            <!--          <el-row class=\"info-row\">-->\n            <!--            <el-col :span=\"24\">-->\n            <!--              <strong>Universal Link:</strong> {{ updateUniLink }}-->\n            <!--            </el-col>-->\n            <!--          </el-row>-->\n          </el-card>\n\n\n          <!-- 连接钱包 -->\n          <el-card class=\"wallet-actions\">\n            <template #header>\n              <div>钱包操作</div>\n            </template>\n\n            <el-row class=\"info-row\">\n              <el-col :span=\"24\">\n                <el-checkbox v-model=\"withUI\" @change=\"handleWithUI\">是否展示UI</el-checkbox>\n              </el-col>\n            </el-row>\n\n            <el-row style=\"align-items: center; justify-content: space-between;\">\n              <el-col :span=\"4\" style=\"gap: 2px\">\n                <p style=\"font-size: 11pt; margin: 0px\">Return Strategy</p>\n                <p style=\"font-size: 9pt; margin: 0px\">(Mobile only)</p>\n              </el-col>\n              <el-col :span=\"10\">\n                <el-select\n                    v-model=\"returnStrategy\"\n                    @change=\"handleReturnStrategySelect\"\n                    placeholder=\"Return Strategy\"\n                >\n                  <el-option\n                      v-for=\"strategy in returnStrategies\"\n                      :key=\"`return-strategy-select-option-${strategy}`\"\n                      :label=\"strategy\"\n                      :value=\"strategy\"\n                  />\n                </el-select>\n              </el-col>\n              <el-col :span=\"10\">\n                <el-input\n                    v-if=\"returnStrategy === 'deeplink'\"\n                    v-model=\"deeplink\"\n                    @change=\"handleReturnStrategyDeeplink\"\n                    placeholder=\"Deeplink\"\n                    :disabled=\"returnStrategy !== 'deeplink'\"\n                    style=\"margin: 0px\"\n                />\n              </el-col>\n            </el-row>\n\n            <el-row :gutter=\"12\">\n              <el-col :span=\"24\">\n                <el-input v-model=\"testProofPayload\" placeholder=\"proofPayload\"></el-input>\n              </el-col>\n            </el-row>\n            <!--          <el-row class=\"info-row\">-->\n            <!--            <el-col :span=\"24\">-->\n            <!--              <el-checkbox v-model=isChecked @change=\"handleChange\"> 自动重连</el-checkbox>-->\n            <!--            </el-col>-->\n            <!--          </el-row>-->\n            <el-row class=\"info-row\" v-if=\"showVerifyRow\">\n              <el-col :span=\"24\" >\n                <strong>签名验证:</strong> {{ ProofPayloadVerify }}\n              </el-col>\n            </el-row>\n\n            <el-row :gutter=\"12\" class=\"button-row\">\n              <el-col :span=\"24\">\n                <el-button type=\"warning\" @click=\"walletInit\" icon=\"el-icon-refresh-right\">钱包初始化</el-button>\n              </el-col>\n            </el-row>\n\n            <el-row :gutter=\"12\" class=\"button-row\">\n              <el-col :span=\"24\">\n                <el-button type=\"primary\" @click=\"connectBtnClicked\" icon=\"el-icon-connection\">{{ connectStatusStr }}</el-button>\n              </el-col>\n            </el-row>\n\n            <teleport to=\"body\">\n              <div v-if=\"showModal\" class=\"modal-overlay\" @click=\"closeModal\">\n                <div class=\"modal-content\" @click.stop>\n                  <button class=\"close-button\" @click=\"closeModal\">&times;</button>\n                  <h2>扫描二维码</h2>\n                  <qrcode-vue :value=\"qrValue\" :size=\"200\" level=\"H\" />\n                </div>\n              </div>\n            </teleport>\n\n            <el-row :gutter=\"12\" class=\"button-row\">\n              <el-col :span=\"24\">\n                <el-button type=\"warning\" @click=\"resotreConnectAction\" icon=\"el-icon-refresh-right\">尝试重连</el-button>\n              </el-col>\n            </el-row>\n            <el-row :gutter=\"12\"  class=\"button-row\">\n              <el-col :span=\"24\">\n                <el-button type=\"danger\" @click=\"disconnectAction\" icon=\"el-icon-switch-button\" :disabled=\"walletAddress.length == 0\">{{ disconnectStatusStr }}</el-button>\n              </el-col>\n            </el-row>\n          </el-card>\n\n          <!-- 发送交易 -->\n          <el-card class=\"transaction\">\n            <template #header>\n              <div>交易</div>\n            </template>\n\n            <el-row :gutter=\"12\">\n              <el-col  :span=\"8\">\n                <el-button type=\"primary\" @click=\"mockSwap()\">swap</el-button>\n              </el-col>\n              <el-col  :span=\"8\">\n                <el-button type=\"success\" @click=\"mockTransaction()\">转账</el-button>\n              </el-col>\n              <!--            <el-col  :span=\"8\">-->\n              <!--              <el-button type=\"warning\" @click=\"mockTransactionNFT()\">转移NFT</el-button>-->\n              <!--            </el-col>-->\n            </el-row>\n\n            <el-col :xs=\"24\" :sm=\"12\">\n              <div class=\"input-label\">交易数据:</div>\n              <el-input v-model=\"testTransaction\" placeholder=\"sendTransactions\"></el-input>\n            </el-col>\n            <el-col :xs=\"24\" :sm=\"12\">\n              <div class=\"input-label\">签名结果 :</div>\n              <el-input v-model=\"testboc\" placeholder=\"boc\"></el-input>\n            </el-col>\n            <el-row :gutter=\"12\" class=\"button-row\">\n              <el-col :span=\"24\">\n                <el-button type=\"primary\" @click=\"sendTransaction()\">{{ testTransactionStr }}</el-button>\n              </el-col>\n            </el-row>\n          </el-card>\n\n          <!-- 本地加解密KeyPair -->\n          <!-- <el-card class=\"keypair-info\">\n            <template #header>\n              <div>本地加解密KeyPair</div>\n            </template>\n            <el-row :gutter=\"12\">\n              <el-col :xs=\"24\" :sm=\"12\">\n                <div class=\"input-label\">PubKey:</div>\n                <el-input v-model=\"localPubKey\" placeholder=\"PublicKey\" disabled></el-input>\n              </el-col>\n              <el-col :xs=\"24\" :sm=\"12\">\n                <div class=\"input-label\">SecKey:</div>\n                <el-input v-model=\"localSecKey\" placeholder=\"SecretKey\" disabled></el-input>\n              </el-col>\n            </el-row>\n          </el-card> -->\n\n          <!-- 清理缓存 -->\n          <!-- <el-card class=\"clear-cache\">\n            <el-row>\n              <el-col :span=\"24\">\n                <el-button type=\"danger\" @click=\"clearCacheKeyPair()\" icon=\"el-icon-delete\">清理本地缓存</el-button>\n              </el-col>\n            </el-row>\n          </el-card> -->\n        </el-main>\n      </el-container>\n\n    </div>\n    <div id=\"button-root\"></div>\n</template>\n\n<style scoped>\n/* 重置全局边距和内边距 */\nbody, html {\n  margin: 0;\n  padding: 0;\n  height: 100%;\n}\n\n/* 确保 app 容器占满整个视口 */\n#app {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin: 0 auto; /* 居中 */\n  max-width: 600px; /* 设置最大宽度 */\n  padding: 0 20px; /* 添加一些左右内边距 */\n}\n\n/* 调整 el-container 样式 */\n.el-container {\n  min-height: 100vh;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n}\n\n/* 调整 el-header 样式 */\n.el-header {\n  background-color: #333333;\n  color: white;\n  height: 50px;\n  line-height: 50px;\n  font-size: 18px;\n  font-weight: bold;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1000;\n}\n\n#button-root1 {\n  align-self: flex-end; /* 该元素会靠右对齐 */\n  margin-top: 80px;\n  margin-right: 20px;\n}\n\n/* 调整 el-main 样式 */\n.el-main {\n  padding: 70px 0 20px; /* 增加顶部内边距以避免被固定header遮挡 */\n  flex-grow: 1;\n}\n\n.el-card {\n  margin-bottom: 20px;\n}\n\n.info-row {\n  margin-bottom: 10px;\n}\n\n.input-label {\n  margin-bottom: 5px;\n  text-align: left;\n}\n\n.el-input {\n  margin-bottom: 10px;\n}\n\n/* 通用按钮样式 */\n.wallet-actions .el-button,\n.transaction .el-button,\n.clear-cache .el-button {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 40px;\n}\n\n.wallet-actions .el-button span,\n.transaction .el-button span,\n.clear-cache .el-button span {\n  margin: 0 auto;\n}\n\n/* 按钮行间距 */\n.wallet-actions .button-row,\n.transaction .button-row {\n  margin-bottom: 8px;\n}\n\n.wallet-actions .button-row:last-child,\n.transaction .button-row:last-child {\n  margin-bottom: 0;\n}\n\n/* 调整图标和文字的对齐 */\n.wallet-actions .el-button [class^=\"el-icon-\"],\n.transaction .el-button [class^=\"el-icon-\"],\n.clear-cache .el-button [class^=\"el-icon-\"] {\n  margin-right: 5px;\n  vertical-align: middle;\n}\n\n/* 新增：调整发送交易按钮与输入框的间距 */\n.transaction .el-row:not(:last-child) {\n  margin-bottom: 10px;\n}\n\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.modal-content {\n  background-color: white;\n  padding: 20px;\n  border-radius: 8px;\n  text-align: center;\n  position: relative;\n  max-width: 90%;\n  width: 300px;\n}\n\n.close-button {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  font-size: 24px;\n  border: none;\n  background: none;\n  cursor: pointer;\n}\n\n/* 响应式调整 */\n@media (max-width: 600px) {\n  #app {\n    padding: 0 10px;\n  }\n\n  .el-main {\n    padding: 60px 0 10px;\n  }\n}\n</style>\n<script>\nimport {OKX_CONNECT_ERROR_CODES,OKXTonConnect,\n  OKX_TON_CONNECTION_AND_TRANSACTION_EVENT} from \"@okxconnect/tonsdk\"\nimport { OKXTonConnectUI, THEME } from \"@okxconnect/ui\";\n\n\nimport QrcodeVue from 'qrcode.vue'\nvar selectedReturnStrategy = \"none\";\nvar selectedDeepLink = \"tg://resolve\";\nvar selectedLanguage = \"en_US\";\nvar selectedTheme = THEME.LIGHT;\n\n\nexport default {\n  name: 'App',\n  components: {\n    QrcodeVue\n  },\n  data: ()=> {\n    return {\n      testTopic: '',\n      testPublicKey: '',\n      testProofPayload: '',\n      pendingDeepLink: '-',\n      logList: [],\n      connectReady: false,\n      connectStatusStr: '连接钱包',\n      disconnectStatusStr: '断开钱包',\n      localPubKey: '',\n      localSecKey: '',\n      testTransaction:'',\n      testTransactionStr:'发送交易',\n      walletAddress:'',\n      testboc:'',\n      ProofPayloadVerify:'',\n      showModal: false,\n      showVerifyRow: false,\n      qrValue: 'https://www.okx.com/download',\n      currentStatus:\"\",\n      language: selectedLanguage,\n      theme: selectedTheme,\n      THEME: THEME,\n      withUI: localStorage.getItem(\"autoRefresh\") == \"true\",\n      returnStrategies: [\"none\", \"back\", \"deeplink\"],\n      returnStrategy: selectedReturnStrategy,\n      deeplink: selectedDeepLink,\n      handleWithUI: (isChecked) => {\n        localStorage.setItem(\"autoRefresh\", `${isChecked}`);\n        location.reload();\n      },\n      // isChecked:localStorage.getItem(\"autoRefresh\") == \"true\",\n      // handleChange:(isChecked) => {\n      //   localStorage.setItem(\"autoRefresh\",`${isChecked}`)\n      // }\n    }\n  },\n  computed: {\n    getWalletAddress:function (){\n      return this.walletAddress;\n    },\n\n\n  },\n  methods: {\n    async connectBtnClicked() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n        this.testTonSdk();\n    },\n\n    async disconnectAction() {\n      try {\n        console.log('get disconnect wallet btn clicked');\n        await window.provider.disconnect();\n      } catch (error) {\n        console.log('Disconnect  error ==>> ',error.message);\n        this.currentStatus = error.message;\n      }\n    },\n    async walletInit() {\n      var TON;\n      if (!this.withUI) {\n        console.log('---init wallet---');\n        TON = new OKXTonConnect({\n          metaData:{\n            name:\"OKX TON Connect Demo\",\n            icon: \"https://avatars.githubusercontent.com/u/37784886\"\n          }})\n      } else {\n        console.log('---init wallet UI--');\n        TON = new OKXTonConnectUI({\n          dappMetaData: {\n            name: \"OKX TON Connect Demo\",\n            icon: \"https://avatars.githubusercontent.com/u/37784886\",\n            manifestUrl:\"https://app.ston.fi/tonconnect-manifest.json\"\n          },\n          actionsConfiguration: {\n            returnStrategy: 'tg://resolve',\n            tmaReturnUrl:'back',\n            modals: \"all\",\n          },\n          uiPreferences: {\n            theme: THEME.LIGHT\n          },\n          buttonRootId: 'button-root',\n          language: 'en_US',\n        });\n      }\n      window.tonTest = TON;\n    },\n\n    async resotreConnectAction() {\n      console.log('get restore wallet btn clicked');\n      window.provider.restoreConnection();\n    },\n    // clearCacheKeyPair: () => {\n    //   console.log(`generate local key pair`)\n    //   testCM.cleanCache()\n    //   // testTonSdk()\n    //\n    // },\n\n    async mockSwap(){\n      var data =  {\"messages\":[{\"address\":\"EQARULUYsmJq1RiZ-YiH-IJLcAZUVkVff-KBPwEmmaQGH6aC\",\"amount\":\"205000000\",\"payload\":\"te6cckEBAgEAhwABbQ+KfqUAAADNgG7tIEATEtAIAO87mQKicbKgHIk4pSPP4k5xhHqutqYgAB7USnesDnCcECwbgQMBAJUlk4VhgBD3JEg1TUr75iTijBghOKm/sxNDXUBl7CD6WMut0Q85x4RafwA/Es89DBXoTxuqxVFxyBbzt9Rav2HBUKl7hmkvLuKHLBCW57aK\"}],\"validUntil\":1792481054,\"network\":-239}\n      this.testTransaction = JSON.stringify(data)\n    },\n    async mockTransaction(){\n     let account = window.provider.account;\n      let address =  account.address\n      var data  = {\"messages\":[{\"address\":\"UQDXlIPZgiC7ugBqdg68ZQ4zBVGaTEfTQd1ywCDB8exACtQK\",\"amount\":1100000}],\n        \"valid_until\":1792481054,\n        \"from\":address,\n        \"network\":\"-239\"}\n      this.testTransaction = JSON.stringify(data)\n    },\n    async mockTransactionNFT(){\n      var data = {\"from\":\"EQD8Szz0MFehPG6rFUXHIFvO31Fq_YcFQqXuGaS8u4ocsMqN\",\"messages\":[{\"address\":\"EQBpDpRrE3b4g01AXoyCQbnUGTpVCCgCBGyTPWvKvwDyQKqZ\",\"amount\":\"20000000\",\"payload\":\"te6cckEBAQEAUwAAoV/MPRQAAAAAAAAAAIAa8pB7MEQXd0ANTsHXjKHGYKozSYj6aDuuWAQYPj2IAVAD8Szz0MFehPG6rFUXHIFvO31Fq/YcFQqXuGaS8u4ocsAgKGBCo0E=\"}],\"valid_until\":1792481054,\"network\":\"-239\"}\n      this.testTransaction = JSON.stringify(data)\n    },\n    async sendTransaction(){\n\n\n      console.log('sendTransaction')\n      console.log('sendTransaction内容------',this.testTransaction)\n      if (this.testTransaction) {\n        // eslint-disable-next-line no-undef\n        const sendData = JSON.parse(this.testTransaction)\n        try {\n          var result = await window.provider.sendTransaction(sendData)\n          this.testboc = result.boc\n        } catch (error) {\n          if (error.code === OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n            this.testboc = \"用户拒绝交易\"\n          } else {\n            this.testboc = \"签名错误！\"\n          }\n        }\n      } else {\n        alert(\"交易数据为空，请选则或输入交易数据。\")\n      }\n    },\n\n    async testTonSdk(){\n      if (window.provider.connected){\n        console.log('you have connected wallet');\n      }else {\n        console.log('APP ---connect Proof--->>>>----',this.testProofPayload);\n        let connectData = {\n          tonProof:this.testProofPayload,\n          redirect:\"tg://resolve\",\n          tmaReturnUrl:\"tg://resolve\",\n        };\n\n        if (this.isPC()) {\n          if (this.isSafariOrChrome() && !window?.TelegramWebview && !window?.TelegramWebviewProxy){\n            connectData.redirect = null;\n          }\n          console.log('Is Mobile ==>',connectData);\n\n        }else {\n          if (this.isSafariOrChrome() && !window?.TelegramWebview && !window?.TelegramWebviewProxy){\n            connectData.redirect = null;\n          }\n          console.log('Is Mobile ==>',connectData);\n        }\n\n        if (window.provider instanceof OKXTonConnectUI) {\n          if (this.testProofPayload){\n            window.provider.setConnectRequestParameters({\n              state: \"ready\",\n              value: {tonProof:this.testProofPayload}\n            });\n          }\n          await window.provider.openModal().catch(\n            (error) => console.error(\"发生了错误：\", error));\n        } else if(window.provider instanceof OKXTonConnect)  {\n           window.provider.connect(connectData).then((url)=>{\n             console.log(\"Current Url ---:\",url)\n             if (url && this.isPC()){\n               this.qrValue = url;\n               this.showModal = true;\n             }\n           });\n        }\n      }\n    },\n\n    closeModal() {\n      this.showModal = false;\n    },\n\n    isPC() {\n      const userAgentInfo = navigator.userAgent\n      console.log('current device ua is ===>',userAgentInfo)\n\n      const Agents = [\"Android\", \"iPhone\", \"SymbianOS\", \"Windows Phone\", \"iPad\", \"iPod\"]\n      let flag = true\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = false\n          break\n        }\n      }\n      return flag\n    },\n    isSafariOrChrome() {\n      const userAgentInfo = navigator.userAgent\n      const Agents = [\"Safari\", \"Chrome\"]\n      let flag = false\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = true\n          break\n        }\n      }\n      return flag\n    },\n\n    handleReturnStrategySelect(returnStrategy) {\n      console.log('handleReturnStrat', window.provider);\n      selectedReturnStrategy = returnStrategy === \"deeplink\" ? this.deeplink : returnStrategy;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: \"all\"\n          },\n          buttonRootId: 'button-root',\n        }\n      }\n    },\n\n    handleReturnStrategyDeeplink(deeplink) {\n      console.log(window.provider);\n      selectedReturnStrategy = deeplink;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: deeplink,\n            modals: \"all\"\n          },\n          buttonRootId: 'button-root',\n        };\n      }\n    }\n  },\n  created() {\n\n    for (const eventName of Object.values(OKX_TON_CONNECTION_AND_TRANSACTION_EVENT)) {\n      console.log(eventName);\n      window.addEventListener(eventName, (event) => {\n        console.log(eventName,event.detail)\n        this.currentStatus = eventName\n      });\n    }\n\n    window.addEventListener(\"okx-ton-connect-connection-info-before-jump\", (event) => {\n      console.log(\"链接详情   :::\",event.detail)\n    });\n\n  },\n\n  mounted() {\n    var scriptTag = document.createElement(\"script\");\n    scriptTag.src = \"https://telegram.org/js/telegram-web-app.js\";\n    scriptTag.id = \"tgsdk\";\n    document.getElementsByTagName('head')[0].appendChild(scriptTag);\n    window.okxLogDebug = true\n    this.connectReady = true\n\n    document.title = \"OKX Connect TON\";\n    var TON;\n    if (!this.withUI) {\n      console.log('---init wallet------');\n\n      TON = new OKXTonConnect({\n        metaData:{\n        name:\"OKX TON Connect Demo\",\n        icon: \"https://avatars.githubusercontent.com/u/37784886\"\n      }})\n\n    } else {\n      console.log('---init wallet UI--');\n      TON = new OKXTonConnectUI({\n        dappMetaData: {\n          name: \"OKX TON Connect Demo\",\n          icon: \"https://avatars.githubusercontent.com/u/37784886\",\n          manifestUrl:\"https://app.ston.fi/tonconnect-manifest.json\"\n        },\n        actionsConfiguration: {\n          returnStrategy: 'tg://resolve',\n          tmaReturnUrl:'back',\n          modals: \"all\",\n        },\n        uiPreferences: {\n          theme: THEME.LIGHT\n        },\n        buttonRootId: 'button-root',\n        language: 'en_US',\n      });\n    }\n      window.provider = TON;\n      \n    window.provider.onStatusChange((walletInfo) => {\n      console.log('APP ---TON.onStatusChange>>----', walletInfo);\n          if (walletInfo) {\n            this.walletAddress = walletInfo.account.address;\n            if (this.testProofPayload) {\n              var checkProofData = {\n                address: this.walletAddress,\n                network: walletInfo.account.chain,\n                public_key:walletInfo.account.publicKey,\n                proof:{\n                  ... walletInfo.connectItems.tonProof.proof,\n                  state_init: walletInfo.account.walletStateInit\n                }\n              }\n              console.log(`checkProof => ${JSON.stringify(checkProofData)}`)\n\n            } else {\n              this.ProofPayloadVerify = \": no proof\";\n            }\n            this.showModal = false;\n\n          } else {\n            this.walletAddress = \"disconnected\";\n          }\n        }, (error) => {\n          this.showModal = false;\n      if (error.code === OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR){\n        this.walletAddress = `用户拒绝链接: code(${error.code}) `;\n      }else {\n        this.walletAddress = `链接报错: code(${error.code})  ${error.message}`;\n      }\n        }\n    )\n\n  }\n}\n</script>","import { render } from \"./App.vue?vue&type=template&id=aad3e5d2&scoped=true\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=aad3e5d2&scoped=true&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-aad3e5d2\"]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport ElementPlus from 'element-plus'\nimport 'element-plus/dist/index.css'\nimport App from './App.vue'\n\nconst app = createApp(App)\n\napp.use(ElementPlus)\napp.mount('#app')","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkokxconnectdemo\"] = self[\"webpackChunkokxconnectdemo\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(9277); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["Object","defineProperty","exports","value","CONNECT_METHOD_BATCH_FETCHMSG","CONNECT_METHOD_FETCHMSG","CONNECT_METHOD_RECEIVE","CONNECT_METHOD_UNSUB","CONNECT_METHOD_SUB","CONNECT_METHOD_PUBLISH","CONNECT_METHOD_LOGIN","CONNECT_METHOD_PUSH","require","__createBinding","this","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","__setModuleDefault","v","__importStar","mod","result","prototype","hasOwnProperty","call","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","next","e","rejected","done","then","apply","OKXWalletConnector","constants_1","storageconstants_1","storage_1","utils_1","utils_2","eventemitter3_1","log","protocol_1","report_1","WS","resolveWebSocketImplementation","constructor","url","events","EventEmitter","state","ConnectorState","InitState","selectedUrlIndex","retryCount","timeOutLimit","checkWSUrl","Error","heartbeatTimer","connectionTimeoutTimer","connectURLStorage","Storage","OKXCONNECTOR_CACHE_KEY","connecting","Connecting","onPayload","data","logDebug","rsp","Date","now","toString","emit","onClose","event","_a","socket","code","onError","id","payload","msg","onopen","onmessage","onclose","Connected","emitError","errorEvent","heartbeat","clearTimeout","OnError","readyState","WebSocket","OPEN","send","setTimeout","bind","tryRegistOpen","logError","registOpen","inRetry","toUTCString","URLSearchParams","startTimeOutTimer","hasBuiltInWebSocket","onerror","close","on","resetTimeOutTimer","OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE","FINISHED","checkMaxRetry","OKXCONNECTOR_WS_URL_LIST","length","connectionTryNext","nextUrl","getNextSelectUrl","CANCELED","pendingSocket","TIME_OUT","reportEvent","OKXReportType","LOG","cacheSuccessUrlSelect","saveContent","onVisibleChanged","document","visibilityState","arguments","once","err","OKXConnectError","OKX_CONNECT_ERROR_CODES","CONNECTION_ERROR","connect","removeEventListener","addEventListener","disconnect","Disconnected","currentStatus","addListener","decrypt","success","failed","splitCheckComplete","listenPayloadHandler","removeListener","parsedEvent","safeJsonParse","params","rawMsg","message","skipMsg","checkResult","isSplitPackage","finalMessage","failHandler","addPackageParse","callback","payloadHandler","param","listener","off","doLogin","safeJsonStringify","getMsgPayloadFromHistory","tmpMsg","jsonstr","onOpen","openHandler","ConnectionManager","connect_1","commands_1","jwtconstants_1","crypto_1","jwt_1","safejson_1","log_1","url_1","connectionSplitPackages_1","appname","splitManager","ConnectionSplitPackages","connectStorage","OKXCONNECTOR_CACHE_KEY_DAPP","tonsdkConnectStorage","OKXCONNECTOR_TON_KEY","crypto","SessionCrypto","inTMA","isInTMA","reportLog","keyPairInfo","getCachedCryptoKeyPair","error","clearCache","jwtKeyPair","getCachedJWTKeyPair","saveJWTKeyPair","connector","OKXCONNECTOR_WS_URL_1","packageId","connectedWalletPK","currentTopic","refreshPackageId","nowDate","saveCryptoKeyPair","keyPair","cacheInfo","encryptStoreMsg","OKXCONNECTOR_CRYPTO_KEY","kp","getAndDecrypt","content","strkeyPair","publicKey","toHexString","secretKey","OKXCONNECTOR_JWT_KEY","strKeyPairInfo","hexToByteArray","generateKeyPair","isWalletPKReady","makeJWT","topic","signJWT","OKXCONNECTOR_JWT_SIDE","OKXCONNECTOR_JWT_TTL","parsePackage","input_1","input","ignoreACK","_b","_c","_d","_e","_f","_g","_h","_j","_k","_l","_m","_o","sendACK","getItem","OKXCONNECTOR_TOKEN_CACHE","inputObj","messageId","msgPlayloadObject","tryParseMessageSplitPayload","msgObject","topicId","messageObject","publishedAt","onReceivedPackageCheck","completeMessageIdList","forEach","msgId","sendReceive","restoreConnect","getConnectInfo","generateTopic","info","channelId","clientId","stringifyKeypair","fromRestore","timeLog","getTime","lastConnectId","cachedSenderPublicKey","OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE","jwtToken","timeOne","name","timeF","sendFetchAndConsumeMessages","init","sendRaw","timeTh","catch","jsonrpc","CONNECT_JSONRPC_VER","method","token","replace","parsedMessage","updateProtocolVersion","protocolVersion","updateTopicSenderVersion","fail","msgObj","trimStart","startsWith","inputDataObj","msgResult","ttl","OKXCONNECTOR_MESSAGE_TTL","sendEncryptedMsg","topic_1","encryptedMsg_1","encryptedMsg","msg_1","encrypt","sendSplitPackages","msgId_1","success_1","reason","fetchedMessages","hasMore","receivedMsgs","i","timeFive","cleanCache","saveSessionContent","key","OKXCONNECTOR_SESSION_PREFIX_KEY","jsonData","getSessionContent","jsonStr","object","getCurrentConnectionReady","cryptoKeyReady","cryptoKeyPair","getCryptoKeyEnable","__importDefault","localforage_1","ConnectionSplitSupportedVersionLimit","ConnectionSplitSupportedSizeLimit","ConnectionReceiveKey","ConnectionSendKey","ConnectionTopicVersionKey","side","splitMessageSendArray","Map","splitMessageReceivedArray","splitMessageSenderVersionMap","splitPackageCache","default","createInstance","OKXCONNECTOR_STORAGE_PROTOCOL_CACHE","sendRawMsg","recoverFromCache","size","payloadList","entries","splice","syncCache","messageObj","protocol_version","protocolMessageObject","package_group_id","set","sendMsg","senderVersion","msgLength","msg_parts","msg_part_length","push","slice","groupId","generateGroupId","splitMessagePackages","map","index","total_count","package_index","mergePackageArray","completeMap","inputTopic","itemList","item","messageCache","Array","index_check","Set","add","sort","a","b","messageList","reduce","msgList","messageIdList","msgIdList","join","receivedList","filter","includes","isSending","inputPayloadArray","inputSendArray","filtedArray","accept","sendCacheArray","cachedPayload","sendArray","concat","inputReceiveArray","receiveCacheArray","receiveArray","setItem","rec_array","send_array","CONNECT_PROTOCOL_VER","OKXCONNECTOR_WS_URL_IDX_KEY","OKXCONNECTOR_WS_URL_3","OKXCONNECTOR_WS_URL_2","EVENT_EMITTER_MAX_LISTENERS","OKXCONNECTOR_PROTOCOL_VERSION","Engine","iconnector_1","connectionManager_1","sessionUtils_1","wallet_info_1","appName","connectors","useConnector","connectionManager","addConnectionListener","getConnector","setAccountChangeListener","accountChangeListener","registerConnector","setConnectionManager","hasWsConnector","isWsConnector","getTag","OKX_TG_WALLET","OKX_APP_WALLET","isInjectedConnector","OKX_INJECT_WALLET","universalConnect","request","sessionConfig","connectInfoAndUrl","JSON","stringify","universalRequest","connectInfo","requestId","openUniversalLink","openUniversalUrl","universalConnectRequest","protocolVer","Number","tonConnectSdkVersion","dAppInfo","dappInfo","requests","redirect","base64Encoded","encodeConnectParams","openOKXLink","getOKXLink","useMini","tmaReturnUrl","openMethod","openWallet","connectRequest","openOKXTMAWalletlinkWithFallback","useShortLink","openOKXUniversalLink","openOKXDeeplinkWithFallback","isIOS","isIos","addOnConnectResultListener","response","connectResponse","namespaces","buildNameSpacesByConnectResponse","UNKNOWN_ERROR","walletName","responses","wallet","tag","OKXWalletName","OKXMiniWalletName","OKXInjectWalletName","find","session","assign","methodsResponse","connectRequestMethods","signResponse","maxProtocolVersion","setUseConnector","sendSession","connectResultListener","setOnConnectResultListener","engineConnectInfo","requestAnswer","clearData","addDisconnectListener","disconnecter","getTagByappName","setConnectConnector","setSessionConnectingListener","sessionConnectingListener","restoreconnect","sessionInfo","onConnectResult","restoreconnectFromTopic","namespaceKeys","connectManagerDisconnect","jsonResponse","WalletConnectionManager","walletConnectionManager_1","engine_1","MULTICODEC_ED25519_LENGTH","MULTICODEC_ED25519_HEADER","MULTICODEC_ED25519_BASE","MULTICODEC_ED25519_ENCODING","DID_METHOD","DID_PREFIX","DID_DELIMITER","KEY_PAIR_SEED_LENGTH","DATA_ENCODING","JSON_ENCODING","JWT_ENCODING","JWT_DELIMITER","JWT_IRIDIUM_TYP","JWT_IRIDIUM_ALG","JWTHeaderType","decodeJSON","encodeJSON","encodeIss","decodeIss","encodeSig","decodeSig","encodeData","decodeData","encodeJWT","decodeJWT","verifyJWT","ed25519","tweetnacl_1","stringUtils_1","sign","str","okxtoString","okxfromString","val","publicKeyStr","issuer","prefix","multicodec","split","bytes","encoded","header","signature","jwt","sub_1","aud_1","ttl_1","keyPair_1","sub","aud","iat","Math","floor","alg","typ","iss","exp","act","detached","verify","OKXCONNECTOR_JWT_WALLET_SIDE","buildRequestAccountNameSpacesByConnectResponse","buildAccountNameSpaces","requestAccountNameSpaces","universalResponse","accounts","filterAccount","namespace","ton_addr","address","tonAddress","tonProof","network","ton_proof","addresses","methods","extra","chains","addressItem","addressArr","chain","utils_3","crypto_js_1","subKey","beforeKey","localStorage","resolveLocalStorage","storeKey","cipherIV","synchronizedCache","checkAndUpgradeCache","fromCacheKey","toCacheKey","cacheStr","cacheKey","removeItem","timestamp","saveItem","localKey","cache","totalCacheStr","cacheObj","getCachedPBKDF2InfoKey","pwLen","saltLen","pw","iv","salt","OKXCONNECTOR_STORAGER_CRYPTO_SALT","randomBytes","OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD","OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV","ivBuffer","PBKDF2","iterations","storeInfo","AES","enc","Utf8","OKXCONNECTOR_STORAGE_CIPHER_METHOD","WalletConnectionManagerEvent","WalletConnectionManagerTopicInfoCacheKey","RECEIVE_REQUEST","walletConnectionConstants_1","communicateEvents","sessionCryptoInfoMap","inLogin","isLogined","offset","isTopicPublicKeyExist","timestampStr","parseInternalMsg","internalMsg","internalObj","origin","originContent","base64decode","updateClientId","cid","lastCheck","getLastSixMd5Hash","dappPublicKey","syncCacheSessionInfo","_p","_q","_r","_s","ignoreReceive","isInternalData","inner_message","inner_topic","decryptWallet","sessionInfoString","base64Content","inner_connection","toObject","recovrySessionInfoFromCache","cacheMap","topicItem","cryptoItem","cacheSessionInfo","sync","duplicatedTopics","delete","appendTopic","sessionPublicKey","subscribeTopics","from","confirmAppendingTopics","keys","getSessionPublicKey","getCurrentCachedTopicIdList","needPublicKey","useRaw","connectedDappPK","cryptoObject","useCrypto","encryptWallet","messageStr","sendUnsubscribe","sendBatchFetchAndConsumeMessages","topicIdList","topics","withInternalData","finishCount","idx","AppwalletConnector","ws_connector_1","WsConnector","super","walletNameKey","shortUniversalLink","appConnectEncodeParams","appDeepLink","getAppWalletDeepLink","isOS","openDeeplinkWithFallback","stackDeepLink","openLinkBlank","standardUniversalLink","OkxwalletInjectTonsdkConnector","OkxwalletInjectConnector","TgwalletConnector","InjectConnector","appwallet_connector_1","inject_connector_1","tgwallet_connector_1","okxwallet_inject_connector_1","okxwallet_inject_tonsdk_connector_1","SolProvider_1","AptosProvider_1","media_1","TONProvider_1","inject_1","sui_provider_1","btc_provider_1","disconnectListener","providerMap","disconnectHandler","enable","NameSpaceKeyEip155","Eip155Provider","NameSpaceKeySOL","SolProvider","NameSpaceKeyAptos","AptosProvider","NameSpaceKeyTON","TONProvider","NameSpaceKeySui","SuiProvider","NameSpaceKeyBtc","BtcProvider","getInjectProvider","nameSpace","mapKey","BAD_REQUEST_ERROR","window","okxwallet","requestAccounts","version","getVersion","platform","navigator","appVersion","responseItem","required","requiredNamespaces","optional","optionalNamespaces","needPop","signalChain","isDevice","singleItem","singleProvider","singleConnectResult","singleConnect","getAccountByRequestWallets","console","getRequestId","newRequest","onAck","checkWalletMatch","injectProvider","getNamespaceKeyByChain","chainId","USER_REJECTS_ERROR","errorResponse","CHAIN_NOT_SUPPORTED","sessionLocal","WALLET_NOT_SUPPORTED","checkAccountChanged","getRequireNameSpaceFromSession","resultNameSpace","compareAndModifyNamespaces","nameSpaces1","nameSpaces2","isAccountsSame","ns1","ns2","areAccountsSame","_","allReady","every","namespaceKey","connectReady","toJSON","namespacesKey","connectWalletNameSpace","aptosChains","chainStr","aptosChain","replaceChainNameToChainId","ton_proof_result_Item","proofItem","proof","allEqual","accountsItem","sessionAccounts","newSessionAccounts","areEqual","aptosAdd","isAccountChange","walletInfo","accountResult","walletInfoItem","connectWallet","requestWallets","allNameSpace","eventkey","walletInfoFirst","provider","itemResult","parseConnectResponse","cheeckRequire","requireItem","resultSel","resultItem","hasChainAdd","addItem","configEventWithKey","providerMapKey","stored","NOT_CONNECTED_ERROR","localAddress","connection","parse","localItem","connectEvent","items","TON_CHAINS","MAINNET","requestWalletAccount","tonAccount","tonAddr","tonaddress","connectResult","okxTonWallet","tonconnect","restoreConnection","encodeTGParams","encodeTWAConnectURLParams","tgUrl","getTelegramWalletTWAUrl","pendingRequests","getDefaultReporter","beginReport","handleResponse","bindRequestForPromise","clear","nonceLength","sessionKeyPair","createKeypairFromString","createKeypair","box","createNonce","receiverPublicKey","encodedMessage","TextEncoder","encode","nonce","encrypted","concatInfo","concatUint8Arrays","hexResult","encodedResult","base64encode","senderPublicKey","messageByteArray","toUint8Array","internalMessage","splitToUint8Arrays","decrypted","open","TextDecoder","decode","__exportStar","p","hasOKXInjectedProvider","getWindowProviderNamespace","providerSearch","property","path","_provider","BtcMethods","SuiMethods","TONMethods","AptosMethods","SOLANAMethods","Eip55Methods","InjectUtils_1","aptosChainList","freeze","aptosInjectChainMap","aptos","searchNetwork","searchChainIdToInjectChainName","toLowerCase","injectParams","signMessage","injectResult","signTransaction","signAndSubmitTransaction","hash","METHOD_NOT_SUPPORTED","chainName","accountChange","connectRequestWalletResponse","connectChain","aptosAccount","selectedAddress","coinType","namespaceChainId","nameSpaceResponse","onAccountChange","newAccount","bs58_1","accountChangedSolanaPublicKeyHandler","signedMessage","solana","bufferResult","allResult","signAllTransactions","signAndSendResult","signAndSendTransaction","signalChainConnectResult","accountChangedTONHandler","tonParams","resultMe","getChainId","tonResult","tonItem","manifestUrl","itmes","needProof","accountChangedBtcHandler","unisat","switchChain","BTC_CHAINS","FRACTAL","findAddress","matchCoin","processChain","compressedPublicKey","promises","all","signStr","type","to","satBytes","psbtHexs","options","signatures","isArray","signPsbt","signPsbts","psbtHex","signedPsbt","pushPsbt","txHash","inscriptionId","sendInscription","ticker","amount","inscribeTransfer","itemNameSpace","accountChangedEVMHandler","ethParams","typedDataJson","switchChainId","parseInt","resultSwitch","chainHex","currentChain","accountChangedHandler","getSuiPublicKey","suiAccount","suiPublicKey","getSuiWallet","sui","originalRarams","injectSignResult","features","signTransactionBlock","injectSendResult","signAndExecuteTransactionBlock","digest","injectPersonalResult","signPersonalMessage","NAMES_CHAINS","COSMOS_CHAINS","APTOS_CHAINS","SUI_CHAINS","SOLANA_CHAINS","misc_1","TESTNET","SONIC_TESTNET","MOVEMENT_MAINNET","MOVEMENT_TESTNET","COSMOS_MAINNET","values","NameSpaceKeyCosmos","IEngine","ISignClient","ISignClientEvents","IEngineEvents","client","creatOKXInjectWalletInfo","creatOKXMiniAppWalletInfo","creatOKXWalletInfo","getBigIntRpcId","formatJsonRpcRequest","isJsonRpcError","isJsonRpcResponse","parseConnectionError","isHttpUrl","formatJsonRpcError","json_rpc_1","isJsonRpcPayload","isJsonRpcRequest","isJsonRpcResult","payloadId","formatJsonRpcResult","isReservedErrorCode","getError","getErrorByCode","formatErrorMessage","isWsUrl","okx_connect_error_1","IncrementalRandomGenerator","bits","Uint8Array","Uint16Array","Uint32Array","initialValue","getNextValue","uint8Generator","uint16Generator","date","BigInt","RESERVED_ERROR_CODES","STANDARD_ERROR_MAP","DEFAULT_ERROR","match","INTERNAL_ERROR","SERVER_ERROR","getUrlProtocol","matches","RegExp","matchRegexProtocol","regex","protocol","test","CONNECT_ITEM_ERROR_CODES","TONCHAIN","connect_wallet_1","connect_event_1","getTestTwaUrl","okxTesttwaUrl","getTestTgTwaUrl","okxTestTgtwaUrl","getBotNameAndAppName","urlObj","URL","pathnameParts","pathname","Boolean","botName","OKX_MINI_WALLET_NAME","OKX_APP_WALLET_NAME","tgwalletAppName","tgwalletName","standardDeeplink","downloadUrl","okxDeeplink","location","hostname","SERVER_ERROR_CODE_RANGE","INVALID_PARAMS","METHOD_NOT_FOUND","INVALID_REQUEST","PARSE_ERROR","getDefaultMessageByCode","setPrototypeOf","ALREADY_CONNECTED_ERROR","UNKNOWN_APP_ERROR","USER_REJECTS_ERROR_CAUSE_REGISTER","NameSpaceKeyStarknet","NameSpaceKeyTron","chains_1","callForSuccess","fn","attempts","delayMs","lastError","delay","timeout","signal","aborted","timeoutId","chainName2IdMap","replaceChainIdToChainName","checkMetaData","versionCompare","isBrowser","isMobileUserAgent","openLink","toSafeBase64FromBase64","isValidObject","getAppWalletShortDeepLink","encodeTelegramUrlParameters","isTelegramUrl","openOKXDeeplink","getUniversalLink","logWarning","call_for_success_1","web_api_1","tma_api_1","request_1","debug","forceReport","defaultReporter","OKXReporter","packageJson","args","okxLogDebug","sendRecordContent","warn","action","content_1","mediaNotTouch","mediaTouch","maxWidth","media","mediaMin","mediaMax","mediaMinMax","device","getWindow","isTmaPlatform","width","innerWidth","tablet","mobile","isMobile","isTelegram","TelegramWebviewProxy","maxTouchPoints","px","pxMin","pxMax","OKXReportSide","versionStr","cross_fetch_1","reportApiList","reportCacheKey","reportUUIDKey","MAX_LIMIT_REPORTCOUNT","DEFAULT_HTTP_HEADERS","Accept","DEFAULT_HTTP_METHOD","DEFAULT_FETCH_OPTS","headers","PAGE_IN","PAGE_OUT","CLICK","DAPP","WALLET","fetchListWithTimeout","urls_1","args_1","urls","controller","AbortController","fetchPromise","timeoutPromise","abort","race","ok","status","currentSide","currentVersion","storage","recordList","currentUUID","configVersionAndSide","recordCacheKey","reportPlatform","startErrorCatching","records","uuid","sendCachedRecords","cachedErrors","sendRecord","record","body","res","language","ua","userAgent","reportItem","lang","markRecordItem","sendList","allSettled","results","keepIndex","markRecord","Report_WalletType_Key","Report_ConnectDapp_ConnectAndSign_Click","Report_Proceed_QRCode_Click","Report_ChooseType_Download_Click","Report_ChooseType_ConnectWallet_Click","Report_Proceed_Retry_Click","Report_ChooseType_ConnectWallet_View","Report_Loading_ConnectWallet_View","Report_Proceed_QRCode_View","Report_Proceed_Proceed_View","dappMetaData","icon","JSONStringify","JSONParse","json","numbersBiggerThanMaxInt","serializedData","group","isCustomFormatBigInt","substring","alloc","allocUnsafe","basics_1","string","encoding","base","BASES","decoder","array","encoder","createCodec","buf","ascii","bufNum","String","fromCharCode","charCodeAt","utf8","hex","bases","base16","latin1","binary","inTg","isInTelegramBrowser","sendExpand","sendOpenTelegramLink","initParams","locationHash","urlParseHashParams","tmaPlatform","tgWebAppPlatform","Telegram","WebApp","webAppVersion","tgWebAppVersion","platforms","isTelegramWebview","TelegramWebview","postEvent","link","fallback","pathFull","search","isIframe","versionAtLeast","path_full","parent","eventType","eventData","external","notify","trustedTarget","postMessage","indexOf","_path","urlSafeDecode","qIndex","pathParam","substr","query_params","urlParseQueryString","urlencoded","decodeURIComponent","queryString","paramName","paramValue","queryStringParams","v1","v2","p1","p2","v1List","v2List","max","ver","removeUrlLastSlash","addPathToUrl","constants_2","deeplinkUrl","useStandardUniversalLink","deeplinkEncodeUrl","encodeURIComponent","fullUrl","isInIOSLine","href","deepLinkOpened","timeoutDuration","newWindow","fallbackToDownloadPage","isInIOSLark","isInIOSWeChat","count","interval","setInterval","hidden","clearInterval","parameters","encodedParameters","connectRequestWithVersion","connectRequestStr","utf8Array","btoa","connectParam","redirectStr","okxconnect","extraparams","fromtg","base64ContentStr","urlSafeBase64","twaDeepLink","openTelegramLink","RANDOM_LENGTH","hasLocalStorage","hashKey","generateRandomBytes32","tweetnacl_util_1","to_string_1","sha256_1","BASE16","hexString","byteArray","byte","buffer1","buffer2","mergedArray","subArray1","subArray2","encodeUint8Array","urlSafe","encodeBase64","decodeToUint8Array","decodeBase64","uint8Array","decodeUTF8","decodedUint8Array","encodeUTF8","scheme","global","self","randomBytes32","obj","getPrototypeOf","inLine","isIOSDevice","MSStream","isIPadOS","MD5","base64","getUserAgent","ua_parser_js_1","target","doFallback","fallbackTimeout","check","vendor","opera","getResult","osName","os","deviceModel","model","browserName","browser","toUserFriendlyAddress","createVersionInfo","BrowserEventDispatcher","createTransactionSigningFailedEvent","createTransactionSignedEvent","createTransactionSentForSignatureEvent","createDisconnectionEvent","createConnectionStartedEvent","createConnectionRestoringStartedEvent","createConnectionRestoringErrorEvent","createConnectionRestoringCompletedEvent","createConnectionErrorEvent","createConnectionCompletedEvent","createResponseVersionEvent","createRequestVersionEvent","OKX_TON_CONNECTION_AND_TRANSACTION_EVENT","OKXTonConnect","okx_connect_ton_1","tracker_1","__rest","s","t","getOwnPropertySymbols","propertyIsEnumerable","OKXTonConnectInner","bridge_provider_1","core_1","feature_support_1","ton_connect_tracker_1","send_transaction_parser_1","bridge_connection_storage_1","_wallet","statusChangeSubscriptions","statusChangeErrorSubscriptions","metaData","dappSettings","tracker","TonConnectTracker","OKXtonConnectSdkVersion","bridgeConnectionStorage","BridgeConnectionStorage","connected","account","closeConnection","BridgeProvider","listen","walletEventsListener","trackConnectionStarted","createConnectRequest","onWalletConnected","onWalletConnectError","onWalletDisconnected","tonAccountItem","tonProofItem","walletStateInit","connectItems","trackConnectionCompleted","connectEventError","errorsHandler","trackConnectionError","scope","trackDisconnection","onStatusChange","trackConnectionRestoringStarted","fromStorage","trackConnectionRestoringError","removeConnection","trackConnectionRestoringCompleted","sendTransaction","transaction","checkConnection","checkSendTransactionSupport","requiredMessagesNumber","messages","trackTransactionSentForSignature","validUntil","tx","doNotOpenWallet","openOKXWallet","sendRequest","sendTransactionParser","convertToRpcRequest","valid_until","onRequestSent","isError","trackTransactionSigningFailed","convertFromRpcResponse","trackTransactionSigned","getWallets","walletsList","okx_connect_ton_inner_1","okxConnectTonsdkinwindow","tonInner","RpcParser","rpc_parser_1","SendTransactionParser","rpcResponse","boc","storeConnection","getConnection","getHttpConnection","storeLastWalletEventId","lastWalletEventId","getLastWalletEventId","bridge_connection_1","listeners","walletConnectionSource","engine","connectionStorage","isPendingConnectionHttp","tonNameSpace","tonRequest","engineRequest","config","deepLink","universalUrl","trackConnectionInfoBeforeJump","connectSuccessHandle","errorMessage","disconnectMessage","itemArr","tonDeviceInfo","tonConnectInfo","connectionSource","successMessage","needOpenUrl","storedConnection","called","connectorOpenWallet","dispatchEvent","eventName","eventDetails","CustomEvent","detail","tracker_constants_1","types_1","browser_event_dispatcher_1","okx_ton_connect_sdk_lib","okx_connect_ui_lib","OKXConnectUiVersion","eventPrefix","eventDispatcher","setRequestVersionHandler","requestTonConnectUiVersion","dispatchUserActionEvent","trackConnectionDeepLink","createConnectionDeepLinkEvent","createConnectionInfoBeforeJumpEvent","createConnectionInfo","isTonProof","authType","wallet_address","wallet_type","wallet_version","auth_type","custom_data","chain_id","is_success","error_message","errorCode","error_code","createTransactionInfo","signedTransaction","signed_transaction","noBounceableTag","testOnlyTag","hexAddress","testOnly","wc","parseHexAddress","addr","Int8Array","addressWithChecksum","crc16","addressBase64","parts","hexToBytes","poly","reg","mask","toByteMap","ord","length2","doubled","hexSubstring","supportsDeprecatedSendTransactionFeature","address_1","_createElementBlock","_Fragment","_createElementVNode","_hoisted_1","_createVNode","_component_el_container","_withCtx","_component_el_header","_cache","_createTextVNode","_component_el_main","_component_el_card","class","_component_el_row","_component_el_col","span","_toDisplayString","$options","getWalletAddress","_ctx","_component_el_checkbox","modelValue","withUI","$event","onChange","handleWithUI","style","_component_el_select","returnStrategy","handleReturnStrategySelect","placeholder","_renderList","returnStrategies","strategy","_createBlock","_component_el_option","label","_component_el_input","deeplink","handleReturnStrategyDeeplink","disabled","_createCommentVNode","gutter","testProofPayload","showVerifyRow","ProofPayloadVerify","_component_el_button","onClick","walletInit","connectBtnClicked","connectStatusStr","_Teleport","showModal","closeModal","_withModifiers","_component_qrcode_vue","qrValue","level","resotreConnectAction","disconnectAction","walletAddress","disconnectStatusStr","mockSwap","mockTransaction","xs","sm","testTransaction","testboc","testTransactionStr","selectedReturnStrategy","selectedDeepLink","selectedLanguage","selectedTheme","THEME","LIGHT","components","QrcodeVue","testTopic","testPublicKey","pendingDeepLink","logList","localPubKey","localSecKey","theme","isChecked","reload","computed","testTonSdk","TON","OKXTonConnectUI","actionsConfiguration","modals","uiPreferences","buttonRootId","tonTest","mockTransactionNFT","sendData","alert","connectData","isPC","isSafariOrChrome","setConnectRequestParameters","openModal","userAgentInfo","Agents","flag","uiOptions","created","mounted","scriptTag","createElement","src","getElementsByTagName","appendChild","title","checkProofData","public_key","state_init","__exports__","render","app","createApp","App","use","ElementPlus","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","__webpack_modules__","amdO","deferred","O","chunkIds","priority","notFulfilled","Infinity","j","r","n","getter","d","definition","g","globalThis","Function","prop","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}