{"version":3,"file":"js/app.fe09003b.js","mappings":"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","sources":["webpack://okxconnectdemo/../packages/core/src/connect/commands.js","webpack://okxconnectdemo/../packages/core/src/connect/connect.js","webpack://okxconnectdemo/../packages/core/src/connect/connectionManager.js","webpack://okxconnectdemo/../packages/core/src/connect/constants.js","webpack://okxconnectdemo/../packages/core/src/connect/engine.js","webpack://okxconnectdemo/../packages/core/src/connect/index.js","webpack://okxconnectdemo/../packages/core/src/connect/jwt.js","webpack://okxconnectdemo/../packages/core/src/connect/jwtconstants.js","webpack://okxconnectdemo/../packages/core/src/connect/sessionUtils.js","webpack://okxconnectdemo/../packages/core/src/connect/storage.js","webpack://okxconnectdemo/../packages/core/src/connect/storageconstants.js","webpack://okxconnectdemo/../packages/core/src/connect/walletConnectionConstants.js","webpack://okxconnectdemo/../packages/core/src/connect/walletConnectionManager.js","webpack://okxconnectdemo/../packages/core/src/crypto/crypto.js","webpack://okxconnectdemo/../packages/core/src/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/engine.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/json-rpc.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/connect-event.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/connect-wallet.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/wallet-info.js","webpack://okxconnectdemo/../packages/core/src/protocol/constants.js","webpack://okxconnectdemo/../packages/core/src/protocol/error/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/error/okx-connect.error.js","webpack://okxconnectdemo/../packages/core/src/protocol/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/misc.js","webpack://okxconnectdemo/../packages/core/src/utils/call-for-success.js","webpack://okxconnectdemo/../packages/core/src/utils/index.js","webpack://okxconnectdemo/../packages/core/src/utils/log.js","webpack://okxconnectdemo/../packages/core/src/utils/report.js","webpack://okxconnectdemo/../packages/core/src/utils/reportconstants.js","webpack://okxconnectdemo/../packages/core/src/utils/safejson.js","webpack://okxconnectdemo/../packages/core/src/utils/stringUtils.js","webpack://okxconnectdemo/../packages/core/src/utils/tma-api.js","webpack://okxconnectdemo/../packages/core/src/utils/url.js","webpack://okxconnectdemo/../packages/core/src/utils/utils.js","webpack://okxconnectdemo/../packages/core/src/utils/web-api.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXBtcProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXCosmosProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXTonProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXUniversalProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/sign-client/client.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/ConnectMethodUtils.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/namespaces.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/events.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/values.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/aptos.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/btc.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/cosmos.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/eip155.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcConnection.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/solana.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/sui.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/ton.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/misc.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/providers.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/globals.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/misc.js","webpack://okxconnectdemo/./src/App.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue?1b44","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue?e4fb","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue?aa83","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue?089a","webpack://okxconnectdemo/./src/App.vue?7ccd","webpack://okxconnectdemo/./src/main.js","webpack://okxconnectdemo/webpack/bootstrap","webpack://okxconnectdemo/webpack/runtime/amd options","webpack://okxconnectdemo/webpack/runtime/chunk loaded","webpack://okxconnectdemo/webpack/runtime/compat get default export","webpack://okxconnectdemo/webpack/runtime/define property getters","webpack://okxconnectdemo/webpack/runtime/global","webpack://okxconnectdemo/webpack/runtime/hasOwnProperty shorthand","webpack://okxconnectdemo/webpack/runtime/make namespace object","webpack://okxconnectdemo/webpack/runtime/node module decorator","webpack://okxconnectdemo/webpack/runtime/jsonp chunk loading","webpack://okxconnectdemo/webpack/startup"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_METHOD_BATCH_FETCHMSG = exports.CONNECT_METHOD_FETCHMSG = exports.CONNECT_METHOD_RECEIVE = exports.CONNECT_METHOD_UNSUB = exports.CONNECT_METHOD_SUB = exports.CONNECT_METHOD_PUBLISH = exports.CONNECT_METHOD_LOGIN = exports.CONNECT_METHOD_PUSH = void 0;\n// --------------- ws methods -------------\nexports.CONNECT_METHOD_PUSH = \"push\";\nexports.CONNECT_METHOD_LOGIN = \"login\";\nexports.CONNECT_METHOD_PUBLISH = \"publish\";\nexports.CONNECT_METHOD_SUB = \"subscribe\";\nexports.CONNECT_METHOD_UNSUB = \"unsubscribe\";\nexports.CONNECT_METHOD_RECEIVE = \"receive\";\nexports.CONNECT_METHOD_FETCHMSG = \"fetchMessages\";\nexports.CONNECT_METHOD_BATCH_FETCHMSG = \"batchFetchMessages\";\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXWalletConnector = void 0;\nconst constants_1 = require(\"./constants\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils\");\nconst utils_2 = require(\"../utils/utils\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst log = __importStar(require(\"../utils/log\"));\nconst protocol_1 = require(\"../protocol\");\nconst WS = (0, utils_2.resolveWebSocketImplementation)();\nclass OKXWalletConnector {\n    constructor(url) {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.state = constants_1.ConnectorState.InitState;\n        this.selectedUrlIndex = 0;\n        // reconnect\n        this.retryCount = 0;\n        // default timeout limit: 8 sec\n        this.timeOutLimit = 8000;\n        if (!(0, utils_2.checkWSUrl)(url)) {\n            throw new Error(`CONNECTOR: invalid url ${url}`);\n        }\n        this.url = url;\n        this.heartbeatTimer = null;\n        this.connectionTimeoutTimer = null;\n        this.connectURLStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY + storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n    }\n    get connecting() {\n        return this.state == constants_1.ConnectorState.Connecting;\n    }\n    // ------------------------------------------------------\n    onPayload(e) {\n        if (typeof e.data === \"undefined\")\n            return;\n        log.logDebug('get received data');\n        log.logDebug(e);\n        if (typeof e.data === \"string\") {\n            let rsp = e.data;\n            if (rsp === \"pong\") {\n                log.logDebug(`CONNECT: receive pong ${Date.now().toString()}`);\n                return;\n            }\n        }\n        this.events.emit(\"payload\", e.data);\n    }\n    onClose(event) {\n        var _a;\n        log.logDebug('socket get closed: ', (_a = this.socket) === null || _a === void 0 ? void 0 : _a.url, event.code);\n        this.socket = undefined;\n        this.events.emit(\"close\", event);\n    }\n    onError(id, e) {\n        const payload = { id: id, msg: e.toString() };\n        this.events.emit(\"payload\", payload);\n    }\n    onopen(socket) {\n        socket.onmessage = (event) => this.onPayload(event);\n        socket.onclose = (event) => this.onClose(event);\n        this.socket = socket;\n        this.state = constants_1.ConnectorState.Connected;\n        this.events.emit(\"open\");\n    }\n    // ------------------------------------------------------\n    emitError(errorEvent) {\n        this.events.emit(\"fail\", errorEvent);\n    }\n    // ------------------------------------------------------\n    heartbeat() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.heartbeatTimer) {\n                clearTimeout(this.heartbeatTimer);\n            }\n            if (this.state != constants_1.ConnectorState.Connected && this.state != constants_1.ConnectorState.OnError) {\n                log.logDebug('heart beat close');\n                return;\n            }\n            if (!this.socket) {\n                log.logDebug('socket not exist');\n                if (this.state == constants_1.ConnectorState.Connected || this.state == constants_1.ConnectorState.OnError) {\n                    log.logDebug('socket reconnect by heartbeat');\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                        this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n                    }\n                }\n                return;\n            }\n            if (this.socket.readyState !== WebSocket.OPEN) {\n                log.logDebug('socket not ready');\n                if (this.state == constants_1.ConnectorState.Connected || this.state == constants_1.ConnectorState.OnError) {\n                    log.logDebug('socket reconnect by heartbeat with state', this.state, this.socket.readyState);\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                        this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n                    }\n                }\n                return;\n            }\n            log.logDebug(`send ping heart beat: ${Date.now().toString()}, ${this.socket}`);\n            this.socket.send(\"ping\");\n            this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n        });\n    }\n    registOpen(url = this.url, inRetry = false) {\n        if (!(0, utils_2.checkWSUrl)(url)) {\n            throw new Error(`CONNECTOR: invalid url ${url}`);\n        }\n        this.url = url;\n        if (!inRetry) {\n            log.logDebug('Connection connect:', this.url, new Date().toUTCString());\n        }\n        this.state = constants_1.ConnectorState.Connecting;\n        const origin = new URLSearchParams(url).get(\"origin\");\n        return new Promise((resolve, reject) => {\n            const socket = new WS(url, []);\n            log.logDebug('Connection connect Begin:', this.url, new Date().toUTCString());\n            this.startTimeOutTimer(socket);\n            if ((0, utils_2.hasBuiltInWebSocket)()) {\n                log.logDebug('Add socket error handler');\n                socket.onerror = () => {\n                    reject(new Error('socket error'));\n                    socket.close();\n                };\n            }\n            else {\n                log.logDebug('Add socket error handler');\n                socket.on(\"error\", () => {\n                    reject(new Error('socket error'));\n                    socket.close();\n                });\n            }\n            socket.onopen = () => {\n                log.logDebug('socket opened');\n                this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.FINISHED);\n                this.onopen(socket);\n                this.heartbeat();\n                resolve(socket);\n            };\n        });\n    }\n    checkMaxRetry() {\n        log.logDebug('current retry count:', this.retryCount, 'of', constants_1.OKXCONNECTOR_WS_URL_LIST.length);\n        return this.retryCount > constants_1.OKXCONNECTOR_WS_URL_LIST.length;\n    }\n    connectionTryNext() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.checkMaxRetry()) {\n                //TODO: mark descent\n                this.retryCount += 1;\n                let nextUrl = this.getNextSelectUrl();\n                log.logDebug('Connection retry:', nextUrl, new Date().toUTCString());\n                return this.registOpen(nextUrl, true);\n            }\n            else {\n                log.logDebug('Max Connection retry ', this.retryCount, new Date().toUTCString());\n            }\n        });\n    }\n    startTimeOutTimer(socket) {\n        if (this.connectionTimeoutTimer) {\n            this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.CANCELED);\n        }\n        this.pendingSocket = socket;\n        this.connectionTimeoutTimer = setTimeout(() => {\n            if (this.pendingSocket) {\n                this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.TIME_OUT);\n            }\n        }, this.timeOutLimit);\n    }\n    resetTimeOutTimer(code) {\n        var _a;\n        // 1. cancel connecting pending sockets\n        if (code != constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.FINISHED) {\n            (_a = this.pendingSocket) === null || _a === void 0 ? void 0 : _a.close(code);\n        }\n        this.pendingSocket = undefined;\n        // 2. remove timer\n        clearTimeout(this.connectionTimeoutTimer);\n    }\n    cacheSuccessUrlSelect() {\n        this.connectURLStorage.saveContent(this.selectedUrlIndex.toString(), storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n    }\n    // private getSuccessUrlSelect(): string {\n    //     let selectIndex = this.connectURLStorage.getItem(OKXCONNECTOR_CACHE_KEY)?.content\n    //     let index = 0\n    //     if (selectIndex) {\n    //         index = Number(selectIndex)\n    //     }\n    //     this.selectedUrlIndex = index\n    //     return OKXCONNECTOR_WS_URL_LIST[index]\n    // }\n    getNextSelectUrl() {\n        this.selectedUrlIndex += 1;\n        this.selectedUrlIndex = this.selectedUrlIndex % constants_1.OKXCONNECTOR_WS_URL_LIST.length;\n        return constants_1.OKXCONNECTOR_WS_URL_LIST[this.selectedUrlIndex];\n    }\n    // ------------------------------------------------------\n    onVisibleChanged() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (document.visibilityState === 'visible') {\n                // check and restore\n                log.logDebug(`get changed ${this.state}, ${this.socket}`);\n                if (this.state == constants_1.ConnectorState.Connected && typeof this.socket === \"undefined\") {\n                    log.logDebug('CONNECTION need reopen');\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                    }\n                    return;\n                }\n            }\n        });\n    }\n    tryRegistOpen() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            if (this.connecting) {\n                log.logDebug('tryRegistOpen => connecting state');\n                return new Promise((resolve, reject) => {\n                    this.events.once('fail', (e) => {\n                        log.logDebug('tryRegistOpen => connecting fail listener', e);\n                        return reject(e);\n                    });\n                    this.events.once(\"open\", () => {\n                        if (typeof this.socket == \"undefined\") {\n                            return reject(new Error(\"Connect lost\"));\n                        }\n                        return resolve(this.socket);\n                    });\n                });\n            }\n            log.logDebug('tryRegistOpen => try registOpen until retry limit is hit');\n            let inRetry = false;\n            while (!this.checkMaxRetry() && !this.socket) {\n                try {\n                    log.logDebug('tryRegistOpen => call registOpen, try count:', this.retryCount, inRetry);\n                    yield this.registOpen(url, inRetry);\n                }\n                catch (err) {\n                    log.logDebug('tryRegistOpen => registOpen failed', err);\n                    this.retryCount += 1;\n                    url = this.getNextSelectUrl();\n                    inRetry = true;\n                }\n            }\n            log.logDebug('tryRegistOpen => exit while loop', this.retryCount, this.socket);\n            if (!this.socket && this.checkMaxRetry()) {\n                log.logDebug('tryRegistOpen => failed to open a socket', this.retryCount, this.socket);\n                this.retryCount = 0;\n                this.state = constants_1.ConnectorState.OnError;\n                this.emitError(new Error('tryRegistOpen failed'));\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CONNECTION_ERROR, \"Failed to connect\");\n            }\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this.tryRegistOpen();\n                // listener for reconnect\n                document.removeEventListener('visibilitychange', this.onVisibleChanged.bind(this));\n                document.addEventListener('visibilitychange', this.onVisibleChanged.bind(this));\n            }\n            catch (e) {\n                log.logDebug('connect => failed to connect', e);\n                throw e;\n            }\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.state = constants_1.ConnectorState.Disconnected;\n            return new Promise((resolve, reject) => {\n                if (typeof this.socket === \"undefined\") {\n                    // reject(new Error(\"CONNECTION closed\"))\n                    resolve();\n                    return;\n                }\n                this.socket.onclose = (event) => {\n                    this.onClose(event);\n                    resolve();\n                };\n                this.socket.close();\n                if (this.heartbeatTimer) {\n                    clearTimeout(this.heartbeatTimer);\n                }\n            });\n        });\n    }\n    currentStatus() {\n        return {\n            state: this.state,\n            url: this.url\n        };\n    }\n    // event will be jsonstr\n    /// @params Promise\n    /// @params success/failed callback\n    addListener(event, decrypt, success, failed) {\n        if (this.listenPayloadHandler) {\n            this.events.removeListener(\"payload\", this.listenPayloadHandler);\n        }\n        this.listenPayloadHandler = (e) => {\n            var _a;\n            log.logDebug(`<<< get payload ${e}`);\n            let parsedEvent = (0, utils_1.safeJsonParse)(e);\n            // parse the data to chose success or failed\n            if (parsedEvent.params && parsedEvent.params.data) {\n                let rawMsg = (_a = parsedEvent.params.data) === null || _a === void 0 ? void 0 : _a.message;\n                if (rawMsg) {\n                    try {\n                        let msg = decrypt(rawMsg);\n                        if (msg === undefined) {\n                            log.logDebug(`CONNECT: decrypt undefined`);\n                            failed(event, 'Decrypt undefined');\n                        }\n                        else {\n                            success(event, msg);\n                        }\n                    }\n                    catch (e) {\n                        log.logDebug(`CONNECT: decrypt failed: ${e}`);\n                        failed(event, e.message);\n                    }\n                }\n            }\n        };\n        this.events.on(\"payload\", this.listenPayloadHandler);\n        if (this.failHandler) {\n            this.events.removeListener(\"fail\", this.failHandler);\n        }\n        this.failHandler = (e) => {\n            if (e) {\n                log.logDebug(`CONNECT failed: ${e}`);\n                failed(event, e.message);\n            }\n            else {\n                failed(event, \"Unkonow error\");\n            }\n        };\n        this.events.on(\"fail\", this.failHandler);\n    }\n    addPackageParse(callback) {\n        if (this.payloadHandler) {\n            this.events.removeListener(\"payload\", this.payloadHandler);\n        }\n        this.payloadHandler = (e) => __awaiter(this, void 0, void 0, function* () {\n            // parse the data to chose success or failed\n            log.logDebug(`CONNECTION @[${new Date().toUTCString()}] <<<< received e:${e}`);\n            let param = (0, utils_1.safeJsonParse)(e);\n            yield callback(param);\n        });\n        this.events.on(\"payload\", this.payloadHandler);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    send(doLogin, payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (typeof this.socket === \"undefined\") {\n                    log.logDebug(`>>> send payload undefined ${payload}`);\n                    // this.socket = await this.registOpen();\n                    yield doLogin();\n                }\n                log.logDebug(`CONNECTION @[${new Date().toUTCString()}]>>> send payload ${(0, utils_1.safeJsonStringify)(payload)}`);\n                if (this.socket) {\n                    this.socket.send((0, utils_1.safeJsonStringify)(payload));\n                }\n            }\n            catch (e) {\n                this.onError(payload.id, e);\n            }\n        });\n    }\n    getMsgPayloadFromHistory(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof msg === \"undefined\")\n                return;\n            let tmpMsg = {\n                params: {\n                    data: msg\n                }\n            };\n            let jsonstr = (0, utils_1.safeJsonStringify)(msg);\n            log.logDebug('get received data from history');\n            log.logDebug(jsonstr);\n            jsonstr = (0, utils_1.safeJsonStringify)(tmpMsg);\n            this.events.emit(\"payload\", jsonstr);\n        });\n    }\n    onOpen(callback) {\n        if (this.openHandler) {\n            this.events.removeListener(\"open\", this.openHandler);\n        }\n        this.openHandler = () => __awaiter(this, void 0, void 0, function* () {\n            log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> ws opened: `);\n            yield callback();\n        });\n        this.events.on(\"open\", this.openHandler);\n        this.cacheSuccessUrlSelect();\n    }\n}\nexports.OKXWalletConnector = OKXWalletConnector;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionManager = void 0;\nconst connect_1 = require(\"./connect\");\nconst commands_1 = require(\"./commands\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst jwtconstants_1 = require(\"./jwtconstants\");\nconst constants_1 = require(\"./constants\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils/utils\");\nconst crypto_1 = require(\"../crypto/crypto\");\nconst jwt_1 = require(\"./jwt\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst url_1 = require(\"../utils/url\");\nclass ConnectionManager {\n    constructor(appname = undefined) {\n        this.events = new eventemitter3_1.EventEmitter();\n        // local storage\n        this.connectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY_DAPP + appname, storageconstants_1.OKXCONNECTOR_CACHE_KEY_DAPP);\n        this.crypto = new crypto_1.SessionCrypto();\n        let inTMA = (0, url_1.isInTMA)();\n        (0, log_1.logDebug)('do init:', inTMA);\n        log.reportLog('connection manager do init');\n        if (inTMA) {\n            // recovery from cache\n            const keyPairInfo = this.getCachedCryptoKeyPair();\n            (0, log_1.logDebug)('use same pk:', keyPairInfo);\n            this.crypto = new crypto_1.SessionCrypto(keyPairInfo);\n        }\n        this.jwtKeyPair = this.getCachedJWTKeyPair();\n        this.saveJWTKeyPair(this.jwtKeyPair);\n        // wss connection\n        this.connector = new connect_1.OKXWalletConnector(constants_1.OKXCONNECTOR_WS_URL_1);\n        this.packageId = Date.now();\n        // connection state\n        this.connectedWalletPK = '';\n        this.currentTopic = '';\n        log.logDebug(`this.connectedWalletPK  constructor   ${this.connectedWalletPK}`);\n    }\n    refreshPackageId() {\n        this.packageId = Date.now();\n    }\n    saveCryptoKeyPair(keyPair) {\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(keyPair);\n        // encrypt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_CRYPTO_KEY);\n    }\n    getCachedCryptoKeyPair() {\n        // decrypt kp\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_CRYPTO_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            log.logDebug('get cached crypto key:');\n            log.logDebug(content);\n            let keyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            return keyPairInfo;\n        }\n        else {\n            this.connectStorage.clearCache();\n        }\n        return null;\n    }\n    saveJWTKeyPair(keyPair) {\n        var strkeyPair = {\n            publicKey: (0, utils_1.toHexString)(keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(keyPair.secretKey)\n        };\n        log.logDebug('save jwt kp');\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(strkeyPair);\n        log.logDebug(cacheInfo);\n        // encrypt jwt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_JWT_KEY);\n    }\n    getCachedJWTKeyPair() {\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            // TODO: decrypt jwt kp\n            log.logDebug('get cached jwt kp:');\n            log.logDebug(content);\n            let strKeyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            log.logDebug('save jwt kp');\n            log.logDebug(strKeyPairInfo);\n            var keyPair = {\n                publicKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.publicKey),\n                secretKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.secretKey)\n            };\n            return keyPair;\n        }\n        else {\n            return (0, jwt_1.generateKeyPair)();\n        }\n    }\n    isWalletPKReady() {\n        log.logDebug(`isWalletPKReady  ===> ${this.connectedWalletPK}`);\n        return this.connectedWalletPK.length > 0;\n    }\n    makeJWT(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, jwt_1.signJWT)(topic, jwtconstants_1.OKXCONNECTOR_JWT_SIDE, jwtconstants_1.OKXCONNECTOR_JWT_TTL, // 24h\n            this.jwtKeyPair);\n        });\n    }\n    parsePackage(input_1) {\n        return __awaiter(this, arguments, void 0, function* (input, ignoreACK = false) {\n            var _a, _b, _c, _d, _e;\n            this.events.emit(input.id, input);\n            // send back ACK\n            if (!ignoreACK) {\n                yield this.sendACK(input.id, true);\n                let topic = (_a = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE)) === null || _a === void 0 ? void 0 : _a.content;\n                if (topic) {\n                    let inputObj = input;\n                    if ((_c = (_b = inputObj.params) === null || _b === void 0 ? void 0 : _b.data) === null || _c === void 0 ? void 0 : _c.messageId) {\n                        this.refreshPackageId();\n                        yield this.sendReceive(this.packageId.toString(), (_e = (_d = inputObj.params) === null || _d === void 0 ? void 0 : _d.data) === null || _e === void 0 ? void 0 : _e.messageId, topic);\n                    }\n                }\n            }\n        });\n    }\n    restoreConnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.reportLog('connection manager restore connection');\n            log.logDebug(`connectionManager  restoreConenct   ${topic}`);\n            if ((typeof topic !== 'string') || topic.length === 0) {\n                throw new Error('CONNECTION: invalid topic');\n            }\n            log.logDebug(`connectionManager  restoreConenct   disconnect`);\n            yield this.disconnect(true);\n            this.connectStorage.saveContent(topic, storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`connectionManager  restoreConenct   conect`);\n            yield this.connect(true);\n        });\n    }\n    getConnectInfo() {\n        var topic = (0, utils_1.generateTopic)();\n        log.logDebug(`generate topic token: ${topic}`);\n        log.reportLog('connection manager generate connection info');\n        this.currentTopic = topic;\n        const info = {\n            channelId: topic,\n            clientId: this.crypto.stringifyKeypair().publicKey,\n        };\n        return info;\n    }\n    connect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            this.timeLog = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---enter->\", this.timeLog);\n            log.reportLog('connection manager begin connect');\n            let lastConnectId = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            //1. generate topic & jwt\n            var topic = this.currentTopic;\n            log.logDebug(`generate topic token: ${topic}`);\n            // crypto keypair\n            if (fromRestore) {\n                if (typeof lastConnectId !== 'undefined' && lastConnectId !== null) {\n                    log.logDebug(`read last connect id: ${lastConnectId}`);\n                    topic = lastConnectId.content;\n                }\n                var cachedSenderPublicKey = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                if (cachedSenderPublicKey) {\n                    this.connectedWalletPK = cachedSenderPublicKey.content;\n                    (0, log_1.logDebug)(`connectionManager connect() this.connectedWalletPK : ${this.connectedWalletPK}`);\n                }\n                log.reportLog('connection manager do restore connection');\n            }\n            if (fromRestore) {\n                // recovery from cache\n                const keyPairInfo = this.getCachedCryptoKeyPair();\n                if (keyPairInfo) {\n                    this.crypto = new crypto_1.SessionCrypto(keyPairInfo);\n                }\n            }\n            log.logDebug(`use crypto client id: ${this.crypto.stringifyKeypair().publicKey}`);\n            // cache topic\n            this.connectStorage.saveContent(topic, storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            var jwtToken = yield this.makeJWT(topic);\n            log.logDebug(`generate jwt token: ${jwtToken}`);\n            this.connectStorage.saveContent(jwtToken, 'jwt');\n            return new Promise((resolve, reject) => {\n                // 1. when websocket opened\n                this.connector.onOpen(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug(`1. connector on open`);\n                    log.reportLog('1. connect ws open');\n                    const timeOne = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---open->\", timeOne - this.timeLog);\n                    //2. send jwt to login\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when login');\n                            log.reportLog('2. connect login failed');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // throw error\n                            reject(error);\n                        }\n                        //3. send subscribe\n                        this.refreshPackageId();\n                        this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                            // ack\n                            if (rsp && rsp.error) {\n                                log.logError('failed when subscribe');\n                                log.reportLog('3. connect subscribe failed');\n                                yield this.connector.disconnect();\n                                var error = new Error();\n                                error.message = rsp.error.message;\n                                error.name = rsp.error.code.toString();\n                                // throw error\n                                reject(error);\n                            }\n                            this.refreshPackageId();\n                            log.logDebug(`4. subscribe callback then send fetch: ${this.packageId}`);\n                            log.reportLog('4. subscribe callback then send fetch');\n                            const timeF = new Date().getTime();\n                            (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n                            // 4. fetch messages\n                            yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                            resolve();\n                        }));\n                        log.logDebug(`3. login callback then send subscribe: ${this.packageId}`);\n                        log.reportLog('3. connect subscribe failed');\n                        const timeTh = new Date().getTime();\n                        (0, log_1.logDebug)(\"ConnectTime---login callback->\", timeTh - this.timeLog);\n                        yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                            log.logDebug('CONNECT: reconnect before send');\n                            yield this.connector.connect()\n                                .catch((err) => {\n                                (0, log_1.logDebug)('ConnectionManager connect error', err);\n                                reject(err);\n                            });\n                        }), {\n                            id: this.packageId.toString(),\n                            jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                            method: commands_1.CONNECT_METHOD_SUB,\n                            params: {\n                                topic: topic\n                            }\n                        });\n                    }));\n                    log.logDebug(`2. login called`);\n                    log.reportLog('2. connection manager connect call login');\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        yield this.connector.connect()\n                            .catch((err) => {\n                            (0, log_1.logDebug)('ConnectionManager connect error', err);\n                            reject(err);\n                        });\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_LOGIN,\n                        params: {\n                            token: jwtToken\n                        }\n                    });\n                    // 4. listen when dapp back to front, receive wallet public key\n                    this.connector.addPackageParse((event) => {\n                        var _a;\n                        log.logDebug(`connect: parse package`);\n                        log.logDebug(event);\n                        if (!(\"params\" in event) || !(\"data\" in event[\"params\"])) {\n                            this.parsePackage(event, true);\n                            return;\n                        }\n                        let rawMsg = (_a = event.params.data) === null || _a === void 0 ? void 0 : _a.message;\n                        if (typeof rawMsg !== 'undefined') {\n                            rawMsg = rawMsg.replace(/'/g, '\"');\n                            let parsedMessage = (0, safejson_1.safeJsonParse)(rawMsg);\n                            if (typeof parsedMessage !== 'string' && \"clientId\" in parsedMessage && parsedMessage.clientId && parsedMessage.clientId.length > 0) {\n                                this.connectedWalletPK = parsedMessage.clientId;\n                                log.logDebug(`this.connectedWalletPK  addPackageParse   ${this.connectedWalletPK}`);\n                                // exchange sender public key\n                                // cache wallet public key\n                                this.connectStorage.saveContent(this.connectedWalletPK, storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                                // cache crypto keypair\n                                this.saveCryptoKeyPair(this.crypto.stringifyKeypair());\n                            }\n                        }\n                        // ignore receive echo\n                        this.parsePackage(event, event.method === commands_1.CONNECT_METHOD_RECEIVE);\n                    });\n                }));\n                this.connector.connect().catch((err) => {\n                    (0, log_1.logDebug)('ConnectionManager connect error', err);\n                    reject(err);\n                });\n            });\n        });\n    }\n    disconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            yield this.connector.disconnect();\n            log.reportLog('connect disconnect');\n            //clean cached topic\n            //如果是恢复连接，就不清理解密public key\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            if (!fromRestore) {\n                this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                this.connectedWalletPK = '';\n                (0, log_1.logDebug)(`connectionManager disconnect() this.connectedWalletPK : ${this.connectedWalletPK}`);\n            }\n        });\n    }\n    addListener(event, success, fail) {\n        this.connector.addListener((0, safejson_1.safeJsonStringify)(event), (rawMsg) => {\n            rawMsg = rawMsg.replace(/'/g, '\"');\n            log.logDebug(`addListener ===> ${rawMsg}`);\n            if (typeof rawMsg !== 'undefined') {\n                var msgObj = (0, safejson_1.safeJsonParse)(rawMsg);\n                var msg = msgObj.message;\n                let result;\n                if (msg.trimStart().startsWith('{')) {\n                    result = msg;\n                }\n                else {\n                    if (msgObj.clientId && msgObj.clientId.length > 0) {\n                        this.connectedWalletPK = msgObj.clientId;\n                        this.connectStorage.saveContent(this.connectedWalletPK, storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                        log.logDebug(`this.connectedWalletPK  addListener   ${this.connectedWalletPK}`);\n                        log.logDebug(`this.cryptoKey  addListener   ${(0, utils_1.toHexString)(this.crypto.keyPair.publicKey)}`);\n                        // cache crypto keypair\n                        this.saveCryptoKeyPair(this.crypto.stringifyKeypair());\n                    }\n                    result = this.crypto.decrypt(msg, this.connectedWalletPK);\n                }\n                log.logDebug(`addListener ===> ${result}`);\n                return result;\n            }\n            return undefined;\n        }, success, fail);\n    }\n    sendRaw(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.logDebug(`message send =====> ${msg}`);\n            log.reportLog('connect send raw msg');\n            let message = msg;\n            log.logDebug(`message send =====encrypt message.length>>>> ${message.length}`);\n            // only one topic\n            let topic = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`message send =====topic>>>> ${topic === null || topic === void 0 ? void 0 : topic.content}`);\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                method: commands_1.CONNECT_METHOD_PUBLISH,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                params: {\n                    message: {\n                        topic: topic === null || topic === void 0 ? void 0 : topic.content,\n                        message: message,\n                        ttl: constants_1.OKXCONNECTOR_MESSAGE_TTL\n                    }\n                } // crypted\n            };\n            this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                // ack\n                if (rsp && rsp.error) {\n                    log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                }\n                else if (rsp && !rsp.error) {\n                    log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                }\n            }));\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n            return this.packageId;\n        });\n    }\n    send(msg_1) {\n        return __awaiter(this, arguments, void 0, function* (msg, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL) {\n            // make send msg payload\n            log.logDebug(`message send =====> ${msg}`);\n            log.reportLog('connect send msg');\n            if (!this.isWalletPKReady()) {\n                // channel not ready\n                throw new Error('connection not finish');\n            }\n            let message = this.crypto.encrypt(msg, this.connectedWalletPK);\n            log.logDebug(`message send =====encrypt message.length>>>> ${message.length}`);\n            // only one topic\n            let topic = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`message send =====topic>>>> ${topic === null || topic === void 0 ? void 0 : topic.content}`);\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                method: commands_1.CONNECT_METHOD_PUBLISH,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                params: {\n                    message: {\n                        topic: topic === null || topic === void 0 ? void 0 : topic.content,\n                        message: message,\n                        ttl: ttl\n                    }\n                } // crypted\n            };\n            this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                // ack\n                if (rsp && rsp.error) {\n                    log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                }\n                else if (rsp && !rsp.error) {\n                    log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                }\n            }));\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n            return this.packageId;\n        });\n    }\n    sendACK(msgId_1, success_1) {\n        return __awaiter(this, arguments, void 0, function* (msgId, success, reason = undefined) {\n            if (success === true) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    result: true\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n            else if (reason) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    error: {\n                        code: reason.code, //int\n                        message: reason.message\n                    }\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    // send receive\n    sendReceive(msgId, messageId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECEIVE,\n                params: {\n                    data: {\n                        messageId: messageId,\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendConnectSessionInfo(msgId, messageId, topic, params) {\n        return __awaiter(this, void 0, void 0, function* () {\n        });\n    }\n    // send receive\n    // 1. fetch all \n    // 2. send back receive\n    // 3. check has more, if so, repeat from 1st step\n    sendFetchAndConsumeMessages(msgId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(msgId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic == topic) {\n                                let messageId = msg.messageId;\n                                log.reportLog('5. get fetch result');\n                                yield this.connector.getMsgPayloadFromHistory(msg);\n                                // send receive command to relay server\n                                this.refreshPackageId();\n                                yield this.sendReceive(this.packageId.toString(), messageId, topic);\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            log.reportLog('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_FETCHMSG,\n                params: {\n                    data: {\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    cleanCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.reportLog('connection cache clean called');\n            this.connectStorage.clearCache();\n        });\n    }\n    saveSessionContent(key, data) {\n        if (!data) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(data);\n        this.connectStorage.encryptStoreMsg(jsonData, storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n    }\n    getSessionContent(key) {\n        let jsonStr = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        if (jsonStr) {\n            let object = (0, safejson_1.safeJsonParse)(jsonStr);\n            return object;\n        }\n        return undefined;\n    }\n    getCurrentConnectionReady() {\n        return this.isWalletPKReady();\n    }\n}\nexports.ConnectionManager = ConnectionManager;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectorState = exports.CONNECT_JSONRPC_VER = exports.OKXCONNECTOR_MESSAGE_TTL = exports.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE = exports.OKXCONNECTOR_WS_URL_LIST = exports.OKXCONNECTOR_WS_URL_IDX_KEY = exports.OKXCONNECTOR_WS_URL_3 = exports.OKXCONNECTOR_WS_URL_2 = exports.OKXCONNECTOR_WS_URL_1 = exports.EVENT_EMITTER_MAX_LISTENERS = void 0;\nexports.EVENT_EMITTER_MAX_LISTENERS = 10;\nexports.OKXCONNECTOR_WS_URL_1 = \"wss://wsdexpri.okx.com/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_2 = \"wss://wsdexpri.okx.ac/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_3 = \"wss://wsdexpri.coinall.ltd/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_IDX_KEY = \"wuik\";\nexports.OKXCONNECTOR_WS_URL_LIST = [\n    exports.OKXCONNECTOR_WS_URL_1,\n    exports.OKXCONNECTOR_WS_URL_2,\n    exports.OKXCONNECTOR_WS_URL_3,\n];\nexports.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE = {\n    TIME_OUT: 3990,\n    CANCELED: 3991,\n    FINISHED: 3992,\n};\nexports.OKXCONNECTOR_MESSAGE_TTL = 300000;\n// --------------- JSON RPC ---------------\nexports.CONNECT_JSONRPC_VER = \"2.0\";\nexports.ConnectorState = {\n    InitState: 0,\n    Connecting: 1,\n    Connected: 2,\n    Disconnected: 3,\n    OnError: 4,\n};\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Engine = void 0;\nconst safejson_1 = require(\"../utils/safejson\");\nconst log_1 = require(\"../utils/log\");\nconst protocol_1 = require(\"../protocol\");\n// import {standardDeeplink, tonConnectSdkVersion} from \"../../ton/tonsdk/constants/version\";\nconst utils_1 = require(\"../utils\");\nconst utils_2 = require(\"../utils\");\nconst sessionUtils_1 = require(\"./sessionUtils\");\nconst url_1 = require(\"../utils/url\");\nclass Engine {\n    constructor(connectionManager) {\n        this.pendingRequests = new Map();\n        this.disconnectListener = [];\n        this.connectionManager = connectionManager;\n        // report api begin\n        (0, log_1.getDefaultReporter)().beginReport();\n        this.connectionManager.addListener(\"sdk_response\", (event, msg) => {\n            var jsonResponse = (0, safejson_1.safeJsonParse)(msg);\n            (0, log_1.logDebug)(`Engine ==>> addListener ==> success ==> ${jsonResponse}`);\n            this.handleResponse(event, jsonResponse);\n        }, function () {\n        });\n    }\n    addDisconnectListener(disconnecter) {\n        this.disconnectListener.push(disconnecter);\n    }\n    setSessionConnectingListener(sessionConnectingListener) {\n        this.sessionConnectingListener = sessionConnectingListener;\n    }\n    disconnect() {\n        (0, log_1.logDebug)('Engine ==>> disconnect');\n        this.pendingRequests.clear();\n    }\n    getRequestId() {\n        const requestId = Date.now().toString();\n        (0, log_1.logDebug)('Engine ==>> getRequestId ==>', requestId);\n        return requestId;\n    }\n    bindRequestForPromise(requestId, resolve) {\n        this.pendingRequests.set(requestId, resolve);\n    }\n    send(request, requestAnswer, option, ttl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('Engine ==>> send  request==>', JSON.stringify(request));\n            const requestId = this.getRequestId();\n            try {\n                let packageId = yield this.connectionManager.send(JSON.stringify(Object.assign(Object.assign({}, request), { requestId: requestId })), ttl);\n                this.connectionManager.events.once(packageId.toString(), (event) => {\n                    var _a;\n                    (0, log_1.logDebug)(`Engine ==> send => onAck => ${(0, safejson_1.safeJsonStringify)(event)}`);\n                    if (event && event.result) {\n                        (_a = requestAnswer.onAck) === null || _a === void 0 ? void 0 : _a.call(requestAnswer);\n                    }\n                });\n                if (requestAnswer.resolve) {\n                    this.bindRequestForPromise(requestId, requestAnswer.resolve);\n                }\n            }\n            catch (e) {\n                return Promise.reject(e);\n            }\n        });\n    }\n    sendSession(sessionInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('[Connect] sendSession called:', sessionInfo);\n            const requestId = this.getRequestId();\n            let request = {\n                method: 'session_info',\n                params: { sessionInfo: sessionInfo }\n            };\n            yield this.connectionManager.sendRaw(JSON.stringify(Object.assign(Object.assign({}, request), { requestId: requestId })));\n            // try {\n            //     let packageId = await callForSuccess(() =>\n            //         , option)\n            //     this.connectionManager.events.once(packageId.toString(),(event)=>{\n            //         logDebug(`Engine ==> send => onAck => ${safeJsonStringify(event)}`)\n            //         if (event && event.result){\n            //             requestAnswer.onAck?.()\n            //         }\n            //     })\n            //     if (requestAnswer.resolve){\n            //         this.bindRequestForPromise(requestId, requestAnswer.resolve)\n            //     }\n            // }catch (e) {\n            //     return Promise.reject(e)\n            // }\n        });\n    }\n    handleResponse(event, response) {\n        (0, log_1.logDebug)(`Engine ==>> handleResponse_1  ======>response: ${(0, safejson_1.safeJsonStringify)(response)}`, event);\n        if (\"requestId\" in response) {\n            (0, log_1.logDebug)(\"Engine ==>> handleResponse_2  ===> in response\");\n            let requestId = response.requestId;\n            const resolve = this.pendingRequests.get(requestId);\n            if (resolve) {\n                (0, log_1.logDebug)(\"Engine ==>> handleResponse_3  ===> find resolve:\", resolve);\n                resolve(response);\n                // 从pendingRequests中删除这个Promise\n                this.pendingRequests.delete(requestId);\n            }\n            else {\n                (0, log_1.logDebug)(\"Engine ==>> handleResponse_3  ===> not find resolve:\");\n                if (response.method === \"disconnect\") {\n                    this.disconnectListener.forEach(listener => listener());\n                    this.disconnectListener = [];\n                    this.disconnect();\n                }\n                else if (response.method === \"session_connecting\") {\n                    (0, log_1.logDebug)(\"Engine ==>> handleResponse_4  ===> sessionConnectingListener\");\n                    if (this.sessionConnectingListener) {\n                        (0, log_1.logDebug)(\"Engine ==>> handleResponse_4  ===> sessionConnectingListener not null\");\n                        this.sessionConnectingListener();\n                        this.sessionConnectingListener = undefined;\n                    }\n                }\n            }\n        }\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.restoreConnect(sessionInfo.topic));\n            onConnectResult(sessionInfo);\n        });\n    }\n    conect(request, sessionConfig, onConnectResult) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b;\n            const connectInfo = this.connectionManager.getConnectInfo();\n            const requestId = this.getRequestId();\n            let openUniversalLink = (_a = sessionConfig.openUniversalUrl) !== null && _a !== void 0 ? _a : false;\n            const connectRequest = {\n                protocolVer: Number(protocol_1.tonConnectSdkVersion),\n                topic: connectInfo.channelId,\n                clientId: connectInfo.clientId,\n                requestId: requestId,\n                dAppInfo: sessionConfig.dappInfo,\n                requests: request,\n            };\n            const connectRequestStr = JSON.stringify(connectRequest);\n            const utf8Array = new TextEncoder().encode(connectRequestStr);\n            const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n            const deeplinkUrl = `${protocol_1.standardDeeplink}?param=${base64Encoded}`;\n            (0, log_1.logDebug)('engine ==>> connect ==>>deeplinkUrl:', deeplinkUrl);\n            const isIOS = (0, utils_2.isIos)();\n            (0, log_1.logDebug)(`engine ==>> connect ==>>isIOS: ${isIOS}   openUniversalLink: ${openUniversalLink}`);\n            if (isIOS && openUniversalLink) {\n                (0, log_1.logDebug)('bridge-provider ==>> connect_3');\n                (0, utils_1.openOKXDeeplinkWithFallback)(deeplinkUrl);\n            }\n            yield ((_b = this.connectionManager) === null || _b === void 0 ? void 0 : _b.disconnect(false));\n            this.bindRequestForPromise(requestId, (response) => {\n                let session = this.onConnect(response, sessionConfig, connectInfo.channelId);\n                onConnectResult(session, response);\n            });\n            try {\n                yield this.connectionManager.connect();\n            }\n            catch (e) {\n                (0, log_1.logDebug)('Engine conect error', e);\n                throw e;\n            }\n            if (!isIOS && openUniversalLink) {\n                (0, log_1.logDebug)('bridge-provider ==>> connect_4');\n                (0, utils_1.openOKXDeeplinkWithFallback)(deeplinkUrl);\n            }\n            return {\n                connectInfo: connectInfo,\n                deeplinkUrl: (0, utils_1.getUniversalLink)(deeplinkUrl)\n            };\n        });\n    }\n    onConnect(connectResponse, sessionConfig, topic) {\n        if (connectResponse.method == \"connect\") {\n            let namespaces = (0, sessionUtils_1.buildNameSpacesByConnectResponse)(connectResponse);\n            if (namespaces) {\n                let session = {\n                    topic: topic,\n                    sessionConfig: sessionConfig,\n                    namespaces: namespaces\n                };\n                return session;\n            }\n        }\n        return null;\n    }\n    universalConnect(request, sessionConfig, connectInfoAndUrl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b, _c, _d, _e;\n                try {\n                    (0, log_1.logDebug)(\"engine universalConnect request :\", JSON.stringify(request));\n                    (0, log_1.logDebug)(\"engine universalConnect sessionConfig :\", JSON.stringify(sessionConfig));\n                    let tonRequest = [];\n                    let universalRequest = [];\n                    request.forEach((item) => {\n                        let name = item.name;\n                        if (name.startsWith(\"requestAccounts\")) {\n                            universalRequest.push(item);\n                        }\n                        else if (name.startsWith(\"ton\")) {\n                            tonRequest.push(item);\n                        }\n                    });\n                    (0, log_1.logDebug)(\"engine universalConnect tonRequest :\", JSON.stringify(tonRequest));\n                    (0, log_1.logDebug)(\"engine universalConnect universalRequest :\", JSON.stringify(universalRequest));\n                    const connectInfo = this.connectionManager.getConnectInfo();\n                    const requestId = this.getRequestId();\n                    let openUniversalLink = (_a = sessionConfig.openUniversalUrl) !== null && _a !== void 0 ? _a : false;\n                    const universalConnectRequest = {\n                        protocolVer: Number(protocol_1.tonConnectSdkVersion),\n                        topic: connectInfo.channelId,\n                        clientId: connectInfo.clientId,\n                        requestId: requestId,\n                        dAppInfo: sessionConfig.dappInfo,\n                        requests: universalRequest,\n                        redirect: (_b = sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect) !== null && _b !== void 0 ? _b : \"none\"\n                    };\n                    const base64Encoded = (0, url_1.encodeConnectParams)(universalConnectRequest);\n                    universalConnectRequest.redirect = (_c = sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect) !== null && _c !== void 0 ? _c : \"none\";\n                    const tonConnectRequest = {\n                        protocolVer: Number(protocol_1.tonConnectSdkVersion),\n                        topic: connectInfo.channelId,\n                        clientId: connectInfo.clientId,\n                        requestId: requestId,\n                        dAppInfo: sessionConfig.dappInfo,\n                        requests: tonRequest,\n                        redirect: (_d = sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect) !== null && _d !== void 0 ? _d : \"none\"\n                    };\n                    let isFromTonSDK = false;\n                    if (tonRequest.length > 0) { //from tonsdk\n                        isFromTonSDK = true;\n                    }\n                    let defaultConnectRequest = isFromTonSDK ? tonConnectRequest : universalConnectRequest;\n                    (0, log_1.logDebug)('engine universalConnect ==>>defaultConnectRequest:', isFromTonSDK, JSON.stringify(defaultConnectRequest));\n                    var openOKXLink = \"\";\n                    // open app wallet\n                    if (openUniversalLink) {\n                        openOKXLink = (0, url_1.getOKXLink)(defaultConnectRequest, sessionConfig.useMini, sessionConfig.tmaReturnUrl);\n                        (0, log_1.logDebug)('engine universalConnect ==>>openOKXLink:', openOKXLink);\n                    }\n                    const openMethod = () => sessionConfig.useMini ? (0, url_1.openOKXTMAWalletlinkWithFallback)(openOKXLink) :\n                        (0, utils_1.useShortLink)() ? (0, utils_1.openOKXDeeplinkWithFallback)(openOKXLink) : (0, utils_1.openOKXUniversalLink)(openOKXLink);\n                    (0, log_1.logDebug)('engine universalConnect ==>>openOKXLink:', openOKXLink);\n                    const isIOS = (0, utils_2.isIos)();\n                    if (isIOS && openUniversalLink) {\n                        (0, log_1.logDebug)(`engine universalConnect ==>>isIOS: ${isIOS}   openUniversalLink: ${openUniversalLink}`);\n                        openMethod();\n                    }\n                    yield ((_e = this.connectionManager) === null || _e === void 0 ? void 0 : _e.disconnect(false));\n                    this.bindRequestForPromise(requestId, (response) => {\n                        var _a, _b;\n                        try {\n                            let connectResponse = response;\n                            if (connectResponse.method == \"connect\") {\n                                (0, log_1.logDebug)(\"engin  universalConnect success connectResponse:>>>\", JSON.stringify(connectResponse));\n                                let namespaces = (0, sessionUtils_1.buildNameSpacesByConnectResponse)(connectResponse);\n                                if (namespaces) {\n                                    let session = {\n                                        topic: connectInfo.channelId,\n                                        sessionConfig: sessionConfig,\n                                        namespaces: namespaces,\n                                        wallet: Object.assign({}, (_a = connectResponse.payload) === null || _a === void 0 ? void 0 : _a.wallet),\n                                    };\n                                    let methodsResponse = connectResponse.payload.responses.find(item => item.name === 'requestAccounts');\n                                    if (methodsResponse && methodsResponse.connectRequestMethods) {\n                                        session.signResponse = methodsResponse.connectRequestMethods;\n                                    }\n                                    (0, log_1.logDebug)(\"engin  universalConnect success session:>>>\", JSON.stringify(session));\n                                    resolve(session);\n                                }\n                                else {\n                                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n                                }\n                            }\n                            else if (connectResponse.method == \"connect_error\" && ((_b = connectResponse.payload) === null || _b === void 0 ? void 0 : _b.code)) {\n                                throw new protocol_1.OKXConnectError(connectResponse.payload.code);\n                            }\n                        }\n                        catch (e) {\n                            reject(e);\n                        }\n                    });\n                    try {\n                        yield this.connectionManager.connect();\n                    }\n                    catch (e) {\n                        (0, log_1.logDebug)('Engine universalConnect error', e);\n                        throw e;\n                    }\n                    if (!isIOS && openUniversalLink) {\n                        openMethod();\n                    }\n                    (0, log_1.logDebug)('engin  universalConnect ==>> connectInfoAndUrl:', connectInfoAndUrl);\n                    this.sendSession(base64Encoded);\n                    if (connectInfoAndUrl) {\n                        const info = {\n                            connectRequest: universalConnectRequest,\n                            redirect: sessionConfig.redirect,\n                            tmaReturnUrl: sessionConfig.tmaReturnUrl,\n                        };\n                        if (isFromTonSDK) {\n                            info.tonConnectRequest = tonConnectRequest;\n                        }\n                        (0, log_1.logDebug)(\"universalConnect connectInfoAndUrl info :\", JSON.stringify(info));\n                        connectInfoAndUrl(info);\n                    }\n                }\n                catch (error) {\n                    (0, log_1.logDebug)(\"Engine universalConnect catch error\", error);\n                    reject(error);\n                }\n            }));\n        });\n    }\n}\nexports.Engine = Engine;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Storage = exports.Engine = exports.WalletConnectionManager = exports.ConnectionManager = exports.OKXWalletConnector = void 0;\nvar connect_1 = require(\"./connect\");\nObject.defineProperty(exports, \"OKXWalletConnector\", { enumerable: true, get: function () { return connect_1.OKXWalletConnector; } });\nvar connectionManager_1 = require(\"./connectionManager\");\nObject.defineProperty(exports, \"ConnectionManager\", { enumerable: true, get: function () { return connectionManager_1.ConnectionManager; } });\nvar walletConnectionManager_1 = require(\"./walletConnectionManager\");\nObject.defineProperty(exports, \"WalletConnectionManager\", { enumerable: true, get: function () { return walletConnectionManager_1.WalletConnectionManager; } });\nvar engine_1 = require(\"./engine\");\nObject.defineProperty(exports, \"Engine\", { enumerable: true, get: function () { return engine_1.Engine; } });\nvar storage_1 = require(\"./storage\");\nObject.defineProperty(exports, \"Storage\", { enumerable: true, get: function () { return storage_1.Storage; } });\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MULTICODEC_ED25519_LENGTH = exports.MULTICODEC_ED25519_HEADER = exports.MULTICODEC_ED25519_BASE = exports.MULTICODEC_ED25519_ENCODING = exports.DID_METHOD = exports.DID_PREFIX = exports.DID_DELIMITER = exports.KEY_PAIR_SEED_LENGTH = exports.DATA_ENCODING = exports.JSON_ENCODING = exports.JWT_ENCODING = exports.JWT_DELIMITER = exports.JWT_IRIDIUM_TYP = exports.JWT_IRIDIUM_ALG = exports.JWTHeaderType = void 0;\nexports.generateKeyPair = generateKeyPair;\nexports.decodeJSON = decodeJSON;\nexports.encodeJSON = encodeJSON;\nexports.encodeIss = encodeIss;\nexports.decodeIss = decodeIss;\nexports.encodeSig = encodeSig;\nexports.decodeSig = decodeSig;\nexports.encodeData = encodeData;\nexports.decodeData = decodeData;\nexports.encodeJWT = encodeJWT;\nexports.decodeJWT = decodeJWT;\nexports.signJWT = signJWT;\nexports.verifyJWT = verifyJWT;\nconst ed25519 = __importStar(require(\"@stablelib/ed25519\"));\nconst safejson_1 = require(\"../utils/safejson\");\nconst utils_1 = require(\"../utils/utils\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst log = __importStar(require(\"../utils/log\"));\nconst stringUtils_1 = require(\"../utils/stringUtils\");\nexports.JWTHeaderType = \"dapp\";\nexports.JWT_IRIDIUM_ALG = \"EdDSA\";\nexports.JWT_IRIDIUM_TYP = \"JWT\";\nexports.JWT_DELIMITER = \".\";\nexports.JWT_ENCODING = \"base64url\";\nexports.JSON_ENCODING = \"utf8\";\nexports.DATA_ENCODING = \"utf8\";\nexports.KEY_PAIR_SEED_LENGTH = 32;\nexports.DID_DELIMITER = \":\";\nexports.DID_PREFIX = \"did\";\nexports.DID_METHOD = \"key\";\nexports.MULTICODEC_ED25519_ENCODING = \"base58btc\";\nexports.MULTICODEC_ED25519_BASE = \"z\";\nexports.MULTICODEC_ED25519_HEADER = \"K36\";\nexports.MULTICODEC_ED25519_LENGTH = 32;\nfunction generateKeyPair() {\n    // let local_seed = randomBytes(KEY_PAIR_SEED_LENGTH)\n    // return ed25519.generateKeyPairFromSeed(local_seed);\n    return tweetnacl_1.default.sign.keyPair();\n}\nfunction decodeJSON(str) {\n    return (0, safejson_1.safeJsonParse)((0, stringUtils_1.okxtoString)((0, stringUtils_1.okxfromString)(str, exports.JWT_ENCODING), exports.JSON_ENCODING));\n}\nfunction encodeJSON(val) {\n    return (0, stringUtils_1.okxtoString)((0, stringUtils_1.okxfromString)((0, safejson_1.safeJsonStringify)(val), exports.JSON_ENCODING), exports.JWT_ENCODING);\n}\nfunction encodeIss(publicKey) {\n    log.logDebug(`publicKey: ${(0, utils_1.toHexString)(publicKey)}`);\n    var publicKeyStr = (0, stringUtils_1.okxtoString)(publicKey, exports.MULTICODEC_ED25519_ENCODING);\n    return [exports.DID_PREFIX, exports.DID_METHOD, publicKeyStr].join(exports.DID_DELIMITER);\n}\nfunction decodeIss(issuer) {\n    const [prefix, method, multicodec] = issuer.split(exports.DID_DELIMITER);\n    if (prefix !== exports.DID_PREFIX || method !== exports.DID_METHOD) {\n        throw new Error(`Issuer must be a DID with method \"key\"`);\n    }\n    if (multicodec === undefined) {\n        throw new Error('multicodec is undefined');\n    }\n    const publicKey = (0, stringUtils_1.okxfromString)(multicodec, exports.MULTICODEC_ED25519_ENCODING);\n    if (publicKey === undefined || publicKey.length !== exports.MULTICODEC_ED25519_LENGTH) {\n        throw new Error(`Issuer must be a public key with length 32 bytes`);\n    }\n    return publicKey;\n}\n// ---------- Signature ----------------------------------------------- //\nfunction encodeSig(bytes) {\n    return (0, stringUtils_1.okxtoString)(bytes, exports.JWT_ENCODING);\n}\nfunction decodeSig(encoded) {\n    return (0, stringUtils_1.okxfromString)(encoded, exports.JWT_ENCODING);\n}\n// ---------- Data ----------------------------------------------- //\nfunction encodeData(params) {\n    return (0, stringUtils_1.okxfromString)([encodeJSON(params.header), encodeJSON(params.payload)].join(exports.JWT_DELIMITER), exports.DATA_ENCODING);\n}\nfunction decodeData(data) {\n    var _a, _b;\n    const params = (0, stringUtils_1.okxtoString)(data, exports.DATA_ENCODING).split(exports.JWT_DELIMITER);\n    const header = decodeJSON((_a = params[0]) !== null && _a !== void 0 ? _a : '{}');\n    const payload = decodeJSON((_b = params[1]) !== null && _b !== void 0 ? _b : '{}');\n    return { header, payload };\n}\n// ---------- JWT ----------------------------------------------- //\nfunction encodeJWT(params) {\n    return [encodeJSON(params.header), encodeJSON(params.payload), encodeSig(params.signature)].join(exports.JWT_DELIMITER);\n}\nfunction decodeJWT(jwt) {\n    var _a, _b, _c;\n    const params = jwt.split(exports.JWT_DELIMITER);\n    const header = decodeJSON((_a = params[0]) !== null && _a !== void 0 ? _a : '{}');\n    const payload = decodeJSON((_b = params[1]) !== null && _b !== void 0 ? _b : '{}');\n    const signature = decodeSig((_c = params[2]) !== null && _c !== void 0 ? _c : '{}');\n    const data = (0, stringUtils_1.okxfromString)(params.slice(0, 2).join(exports.JWT_DELIMITER), exports.DATA_ENCODING);\n    return { header, payload, signature, data };\n}\nfunction signJWT(sub_1, aud_1, ttl_1, keyPair_1) {\n    return __awaiter(this, arguments, void 0, function* (sub, aud, ttl, keyPair, iat = Math.floor(Date.now())) {\n        const header = { alg: exports.JWT_IRIDIUM_ALG, typ: exports.JWT_IRIDIUM_TYP };\n        const iss = encodeIss(keyPair.publicKey);\n        const exp = iat + ttl;\n        const act = \"authenticate user\";\n        const payload = { iss, sub, aud, act, iat, exp };\n        const data = encodeData({ header, payload });\n        // const signature = ed25519.sign(keyPair.secretKey, data);\n        log.logDebug(`get sec kp: ${keyPair.secretKey} {${keyPair.secretKey.length}}`);\n        const signature = tweetnacl_1.default.sign.detached(data, keyPair.secretKey);\n        return encodeJWT({ header, payload, signature });\n    });\n}\nfunction verifyJWT(jwt) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { header, payload, data, signature } = decodeJWT(jwt);\n        if (header.alg !== exports.JWT_IRIDIUM_ALG || header.typ !== exports.JWT_IRIDIUM_TYP) {\n            throw new Error(\"JWT must use EdDSA algorithm\");\n        }\n        const publicKey = decodeIss(payload.iss);\n        return ed25519.verify(publicKey, data, signature);\n    });\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCONNECTOR_JWT_TTL = exports.OKXCONNECTOR_JWT_WALLET_SIDE = exports.OKXCONNECTOR_JWT_SIDE = void 0;\nexports.OKXCONNECTOR_JWT_SIDE = \"wallet\";\nexports.OKXCONNECTOR_JWT_WALLET_SIDE = \"dapp\";\nexports.OKXCONNECTOR_JWT_TTL = 86400000;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.buildNameSpacesByConnectResponse = buildNameSpacesByConnectResponse;\nexports.buildRequestAccountNameSpacesByConnectResponse = buildRequestAccountNameSpacesByConnectResponse;\nconst log_1 = require(\"../utils/log\");\nfunction buildNameSpacesByConnectResponse(connectResponse) {\n    let requestAccountNameSpaces = buildRequestAccountNameSpacesByConnectResponse(connectResponse);\n    return requestAccountNameSpaces;\n}\nfunction buildRequestAccountNameSpacesByConnectResponse(connectResponse) {\n    let result = {};\n    (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start connectResponse>>', JSON.stringify(connectResponse));\n    let universalResponse = connectResponse.payload.responses.find(item => item.name === 'requestAccounts');\n    const tonAddress = connectResponse.payload.responses.find(item => item.name === 'ton_addr');\n    const tonProof = connectResponse.payload.responses.find(item => item.name === 'ton_proof');\n    if (tonAddress && !universalResponse) { //adapt tonsdk\n        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse adapt ton data >>');\n        let address = tonAddress.address;\n        address = 'ton:' + tonAddress.network + \":\" + address;\n        let data = {\n            ton_addr: tonAddress\n        };\n        if (tonProof) {\n            data.ton_proof = tonProof;\n        }\n        universalResponse = {\n            name: \"requestAccounts\",\n            accounts: [{\n                    namespace: 'ton',\n                    addresses: [address],\n                    methods: ['ton_sendTransaction'],\n                    extra: {},\n                    data: data,\n                }]\n        };\n    }\n    (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse end universalResponse>>>', JSON.stringify(universalResponse));\n    universalResponse.accounts.forEach(item => {\n        var chains = [];\n        var accounts = [];\n        item.addresses.forEach(addressItem => {\n            var addressArr = addressItem.split(\":\");\n            (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse addressArr>>', addressArr.length);\n            if (addressArr.length >= 3) {\n                let chain = addressArr.slice(0, 2).join(\":\");\n                chains.push(chain);\n                accounts.push(addressItem);\n                (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse chain:>>', chain, \"addressItem:\", addressItem);\n            }\n        });\n        if (item.data && item.data.ton_addr) {\n            item.data.ton_addr.name = 'ton_addr';\n        }\n        if (item.data && item.data.ton_proof) {\n            item.data.ton_proof.name = 'ton_proof';\n        }\n        result[item.namespace] = {\n            chains: chains,\n            accounts: accounts,\n            methods: item.methods,\n            extra: item.extra,\n            payload: item.data\n        };\n        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse result>>', JSON.stringify(result));\n    });\n    return result;\n}\n/*export function buildTonNameSpaceByConnectResponse(connectResponse: ConnectResponseSuccess): Namespaces | undefined {\n    const tonAddrItem: TonAddressItemReply = connectResponse.payload.responses.find(\n        item => item.name === 'ton_addr'\n    ) as TonAddressItemReply;\n\n    const tonProfItem: TonProofItemReply = connectResponse.payload.responses.find(\n        item => item.name === 'ton_proof'\n    ) as TonProofItemReply;\n\n    if (!tonAddrItem) {\n        return undefined\n    }\n\n    return {\n        NameSpaceKeyTON: {\n            chains: [tonAddrItem.network],\n            accounts: [],\n            methods: connectResponse.payload.wallet.features?.ton,\n            payload: {\n                tonAccount: {\n                    address: tonAddrItem.address,\n                    chain: tonAddrItem.network,\n                    walletStateInit: tonAddrItem.walletStateInit,\n                    publicKey: tonAddrItem.publicKey\n                },\n                tonProof: tonProfItem\n            }\n        }\n    }\n}*/\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Storage = void 0;\nconst storageconstants_1 = require(\"./storageconstants\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst utils_1 = require(\"../utils/utils\");\nconst utils_2 = require(\"../utils\");\nconst log = __importStar(require(\"../utils/log\"));\nconst utils_3 = require(\"../utils\");\nconst crypto_js_1 = require(\"crypto-js\");\nclass Storage {\n    constructor(subKey, beforeKey = undefined) {\n        const localStorage = (0, utils_1.resolveLocalStorage)();\n        // 0. check and upgrade beforeKey\n        log.logDebug('------ update before cache ------');\n        if (beforeKey) {\n            this.checkAndUpgradeCache(beforeKey, subKey);\n        }\n        // 1. load data from local storage\n        this.storeKey = '';\n        this.cipherIV = '';\n        this.subKey = subKey;\n        log.logDebug('--------get current local storage --------');\n        log.logDebug(localStorage);\n        const cacheStr = localStorage.getItem(Storage.cacheKey + subKey);\n        if (typeof cacheStr === \"undefined\" || cacheStr === null) {\n            log.logDebug(\"with no cache\");\n            this.cache = {};\n            return;\n        }\n        log.logDebug(cacheStr);\n        if ((cacheStr === null || cacheStr === void 0 ? void 0 : cacheStr.length) > 0) {\n            var cacheObj = (0, utils_2.safeJsonParse)(cacheStr);\n            this.cache = cacheObj;\n        }\n        log.logDebug(`get cache obj: ${this.cache}`);\n        if (typeof this.cache === 'undefined' || this.cache == null) {\n            this.cache = {};\n        }\n    }\n    checkAndUpgradeCache(fromCacheKey, toCacheKey) {\n        if (fromCacheKey && fromCacheKey.length > 0 && toCacheKey && toCacheKey.length > 0) {\n            // 1. get all infos from from-cache-key\n            log.logDebug('--------get current local storage --------');\n            log.logDebug(localStorage);\n            const cacheStr = localStorage.getItem(Storage.cacheKey + fromCacheKey);\n            if (typeof cacheStr === \"undefined\" || cacheStr === null) {\n                log.logDebug(\"no pre cache content\");\n                return;\n            }\n            log.logDebug(cacheStr);\n            if ((cacheStr === null || cacheStr === void 0 ? void 0 : cacheStr.length) > 0) {\n                // 2. save to to-cache-key\n                log.logDebug(\"write in cache content: \", fromCacheKey, '->', toCacheKey);\n                localStorage.setItem(Storage.cacheKey + toCacheKey, cacheStr);\n                // 3. clean from item\n                log.logDebug(\"clean in cache content: \", fromCacheKey);\n                localStorage.removeItem(Storage.cacheKey + fromCacheKey);\n            }\n        }\n        else {\n            log.logDebug('no pre cache key:', fromCacheKey);\n        }\n    }\n    saveContent(content, key, id = '-') {\n        let item = {\n            id: id,\n            timestamp: Date.now().toString(),\n            content: content\n        };\n        this.saveItem(item, key);\n    }\n    saveItem(item, key) {\n        let localKey = Storage.cacheKey + this.subKey;\n        const localStorage = (0, utils_1.resolveLocalStorage)();\n        log.logDebug(this.cache);\n        log.logDebug(`get cache obj: ${this.cache}, ${key}, ${item}`);\n        this.cache[key] = item;\n        let totalCacheStr = (0, utils_2.safeJsonStringify)(this.cache);\n        log.logDebug(`STORAGE: ${key} @ ${this.cache}`);\n        localStorage.setItem(localKey, totalCacheStr);\n    }\n    getItem(key) {\n        log.logDebug(`STORAGE >> getItem: ${key} @ ${this.cache}`);\n        return this.cache[key];\n    }\n    getCachedPBKDF2InfoKey() {\n        var _a, _b, _c, _d;\n        const pwLen = 32;\n        const saltLen = 24;\n        if (this.storeKey.length > 0 && ((_a = this.cipherIV) === null || _a === void 0 ? void 0 : _a.length) > 0) {\n            return {\n                pw: this.storeKey,\n                iv: this.cipherIV\n            };\n        }\n        let salt = (_b = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGER_CRYPTO_SALT)) === null || _b === void 0 ? void 0 : _b.content;\n        if (!salt) {\n            salt = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(saltLen));\n            this.saveContent(salt, storageconstants_1.OKXCONNECTOR_STORAGER_CRYPTO_SALT);\n        }\n        let pw = (_c = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD)) === null || _c === void 0 ? void 0 : _c.content;\n        if (!pw) {\n            pw = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(pwLen));\n            this.saveContent(pw, storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD);\n        }\n        let cipherIV = (_d = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV)) === null || _d === void 0 ? void 0 : _d.content;\n        if (!cipherIV) {\n            // let ivBuffer = Buffer.from(nacl.randomBytes(16))\n            let ivBuffer = tweetnacl_1.default.randomBytes(16);\n            cipherIV = (0, utils_1.toHexString)(ivBuffer);\n            this.saveContent(cipherIV, storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV);\n        }\n        this.cipherIV = cipherIV;\n        this.storeKey = (0, crypto_js_1.PBKDF2)(pw, salt, { iterations: 10 }).toString();\n        return {\n            pw: this.storeKey,\n            iv: this.cipherIV\n        };\n    }\n    encryptStoreMsg(msg, key) {\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg start ${Date.now()}`);\n        let storeInfo = this.getCachedPBKDF2InfoKey();\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg mid ${Date.now()}`);\n        var result = crypto_js_1.AES.encrypt(msg, storeInfo.pw).toString();\n        this.saveContent(result, key);\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg end ${Date.now()}`);\n    }\n    getAndDecrypt(key) {\n        (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt start ${Date.now()}`);\n        let item = this.getItem(key);\n        if (item && item.content) {\n            let storeInfo = this.getCachedPBKDF2InfoKey();\n            (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt mid ${Date.now()}`);\n            let result = crypto_js_1.AES.decrypt(item.content, storeInfo.pw).toString(crypto_js_1.enc.Utf8);\n            (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt end ${Date.now()}`);\n            return result;\n        }\n        return null;\n    }\n    clearCache(key = undefined) {\n        if (key === undefined) {\n            // clean all\n            this.cache = {};\n            let localKey = Storage.cacheKey + this.subKey;\n            localStorage.setItem(localKey, '');\n        }\n        else {\n            let localKey = Storage.cacheKey + this.subKey;\n            const localStorage = (0, utils_1.resolveLocalStorage)();\n            log.logDebug(this.cache);\n            this.cache[key] = null;\n            let totalCacheStr = (0, utils_2.safeJsonStringify)(this.cache);\n            log.logDebug(`STORAGE: clean key ${key} @ ${this.cache}`);\n            localStorage.setItem(localKey, totalCacheStr);\n        }\n    }\n}\nexports.Storage = Storage;\nStorage.cacheKey = 'OKXStorageKey';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCONNECTOR_STORAGE_CIPHER_METHOD = exports.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV = exports.OKXCONNECTOR_STORAGER_CRYPTO_SALT = exports.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD = exports.OKXCONNECTOR_TON_KEY = exports.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE = exports.OKXCONNECTOR_TOKEN_CACHE = exports.OKXCONNECTOR_JWT_KEY = exports.OKXCONNECTOR_SESSION_PREFIX_KEY = exports.OKXCONNECTOR_CRYPTO_KEY = exports.OKXCONNECTOR_CACHE_KEY_DAPP = exports.OKXCONNECTOR_CACHE_KEY = void 0;\nexports.OKXCONNECTOR_CACHE_KEY = \"ck\";\nexports.OKXCONNECTOR_CACHE_KEY_DAPP = \"ck_dapp\";\nexports.OKXCONNECTOR_CRYPTO_KEY = \"cck_k\";\nexports.OKXCONNECTOR_SESSION_PREFIX_KEY = \"cspk_\";\nexports.OKXCONNECTOR_JWT_KEY = \"cjk_k\";\nexports.OKXCONNECTOR_TOKEN_CACHE = \"ct\";\nexports.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE = \"csp\";\nexports.OKXCONNECTOR_TON_KEY = \"OKXStorage_ctc\";\nexports.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD = \"scp\";\nexports.OKXCONNECTOR_STORAGER_CRYPTO_SALT = \"scs\";\nexports.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV = \"scpc\";\nexports.OKXCONNECTOR_STORAGE_CIPHER_METHOD = \"aes-256-cbc\";\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletConnectionManagerEvent = exports.WalletConnectionManagerTopicInfoCacheKey = void 0;\nexports.WalletConnectionManagerTopicInfoCacheKey = \"wcmtic\";\nexports.WalletConnectionManagerEvent = {\n    RECEIVE_REQUEST: \"payload\"\n};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletConnectionManager = void 0;\nconst connect_1 = require(\"./connect\");\nconst commands_1 = require(\"./commands\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst jwtconstants_1 = require(\"./jwtconstants\");\nconst constants_1 = require(\"./constants\");\nconst walletConnectionConstants_1 = require(\"./walletConnectionConstants\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils/utils\");\nconst crypto_1 = require(\"../crypto/crypto\");\nconst jwt_1 = require(\"./jwt\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst utils_2 = require(\"../utils\");\nclass WalletConnectionManager {\n    constructor() {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.communicateEvents = new eventemitter3_1.EventEmitter();\n        log.logDebug('connect manager construct');\n        // local storage\n        this.connectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n        // this.crypto = new SessionCrypto()\n        this.jwtKeyPair = this.getCachedJWTKeyPair();\n        this.saveJWTKeyPair(this.jwtKeyPair);\n        // wss connection\n        this.connector = new connect_1.OKXWalletConnector(constants_1.OKXCONNECTOR_WS_URL_1);\n        this.packageId = Date.now();\n        // connection state\n        this.sessionCryptoInfoMap = new Map();\n        // log.logDebug(`this.connectedWalletPK  constructor   ${this.connectedWalletPK}`)\n        this.inLogin = false;\n        this.isLogined = false;\n    }\n    refreshPackageId(offset = 0) {\n        this.packageId = Date.now() + offset;\n    }\n    saveCryptoKeyPair(topicId, keyPair) {\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(keyPair);\n        // encrypt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_CRYPTO_KEY + topicId);\n    }\n    getCachedCryptoKeyPair(topicId) {\n        // decrypt kp\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_CRYPTO_KEY + topicId);\n        const content = kp;\n        if (typeof content == 'string') {\n            log.logDebug('get cached crypto key:');\n            log.logDebug(content);\n            let keyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            return keyPairInfo;\n        }\n        else {\n            this.connectStorage.clearCache();\n        }\n        return null;\n    }\n    saveJWTKeyPair(keyPair) {\n        var strkeyPair = {\n            publicKey: (0, utils_1.toHexString)(keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(keyPair.secretKey)\n        };\n        log.logDebug('save jwt kp');\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(strkeyPair);\n        log.logDebug(cacheInfo);\n        // encrypt jwt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        log.logDebug('after save jwt kp');\n    }\n    getCachedJWTKeyPair() {\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            // TODO: decrypt jwt kp\n            log.logDebug('get cached jwt kp:');\n            log.logDebug(content);\n            let strKeyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            log.logDebug('save jwt kp');\n            log.logDebug(strKeyPairInfo);\n            var keyPair = {\n                publicKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.publicKey),\n                secretKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.secretKey)\n            };\n            return keyPair;\n        }\n        else {\n            return (0, jwt_1.generateKeyPair)();\n        }\n    }\n    isTopicPublicKeyExist(topicId) {\n        log.logDebug(`isTopicPublicKeyExist  ===> ${topicId}`);\n        return this.sessionCryptoInfoMap.get(topicId);\n    }\n    makeJWT(timestampStr) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, jwt_1.signJWT)(timestampStr, jwtconstants_1.OKXCONNECTOR_JWT_WALLET_SIDE, jwtconstants_1.OKXCONNECTOR_JWT_TTL, // 24h\n            this.jwtKeyPair);\n        });\n    }\n    parseInternalMsg(internalMsg) {\n        try {\n            let internalObj = (0, safejson_1.safeJsonParse)(internalMsg);\n            let origin = internalObj['ivur-igbfft-ptjip'];\n            if (origin && origin.length > 0) {\n                let originContent = (0, utils_2.base64decode)(origin, true);\n                return originContent.toString();\n            }\n        }\n        catch (error) {\n            log.logError('parse internal msg', error);\n        }\n    }\n    updateClientId(topic, clientId) {\n        let sessionInfo = this.sessionCryptoInfoMap.get(topic);\n        (0, log_1.logDebug)('updateClientId', sessionInfo, topic, clientId);\n        if (sessionInfo && clientId && clientId.length > 0) {\n            if (sessionInfo.cid) {\n                // check \n                let lastCheck = clientId.slice(-6);\n                if (sessionInfo.cid == lastCheck) {\n                    sessionInfo.dappPublicKey = clientId;\n                }\n                else {\n                    log.logError('cid check failed', sessionInfo, topic, clientId);\n                }\n            }\n            else {\n                sessionInfo.dappPublicKey = clientId;\n            }\n            // \n            this.syncCacheSessionInfo();\n        }\n        return false;\n    }\n    parsePackage(topic_1, input_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, input, ignoreACK = false) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;\n            this.events.emit(input.id, input);\n            // emit event\n            let sessionInfo = this.sessionCryptoInfoMap.get(topic);\n            log.logDebug('get sessionInfo for decrypt topic:', topic);\n            log.logDebug('get sessionInfo for decrypt:', input.id, topic, sessionInfo, this.sessionCryptoInfoMap);\n            if (sessionInfo && input.params.data) {\n                if ((_a = input.params.data) === null || _a === void 0 ? void 0 : _a.message) {\n                    // try parse internal message\n                    if ((_b = input.params.data) === null || _b === void 0 ? void 0 : _b.isInternalData) {\n                        let inner_message = (_c = input.params.data) === null || _c === void 0 ? void 0 : _c.message;\n                        let inner_topic = (_d = input.params.data) === null || _d === void 0 ? void 0 : _d.topic;\n                        let originContent = this.parseInternalMsg(inner_message);\n                        (0, log_1.logDebug)('parse internal origin: ', originContent);\n                        if (originContent && originContent.length > 0) {\n                            this.communicateEvents.emit(\"origin\", originContent, inner_topic);\n                        }\n                    }\n                    else {\n                        // try parse message base64\n                        try {\n                            let message = (_e = input.params.data) === null || _e === void 0 ? void 0 : _e.message;\n                            if (message.trimStart().startsWith('{')) {\n                                let messageObj = (0, safejson_1.safeJsonParse)(message);\n                                if (messageObj.method) {\n                                    if (messageObj.method == 'session_info') {\n                                        let sessionInfoString = messageObj.params.sessionInfo;\n                                        let base64Content = (0, utils_2.base64decode)(sessionInfoString, false);\n                                        (0, log_1.logDebug)(\"wallet connection manager requset base64Content:\", base64Content);\n                                        (0, log_1.logDebug)(\"base64Content:\" + base64Content);\n                                        let inner_connection = base64Content.toObject();\n                                        this.updateClientId(topic, inner_connection.clientId);\n                                    }\n                                    (0, log_1.logDebug)('<<< parse raw msg:', topic, messageObj);\n                                    this.communicateEvents.emit(topic, message);\n                                }\n                            }\n                            else {\n                                let message = sessionInfo.crypto.decryptWallet((_f = input.params.data) === null || _f === void 0 ? void 0 : _f.message, sessionInfo.dappPublicKey);\n                                (0, log_1.logDebug)('<<< receive msg:', topic, message);\n                                this.communicateEvents.emit(topic, message);\n                            }\n                        }\n                        catch (error) {\n                            let message = sessionInfo.crypto.decryptWallet((_g = input.params.data) === null || _g === void 0 ? void 0 : _g.message, sessionInfo.dappPublicKey);\n                            (0, log_1.logDebug)('<<< receive msg:', topic, message);\n                            this.communicateEvents.emit(topic, message);\n                        }\n                    }\n                }\n                else {\n                }\n            }\n            // send back ACK\n            if (!ignoreACK) {\n                yield this.sendACK(input.id, true);\n                if (topic) {\n                    let inputObj = input;\n                    if ((_j = (_h = inputObj.params) === null || _h === void 0 ? void 0 : _h.data) === null || _j === void 0 ? void 0 : _j.messageId) {\n                        this.refreshPackageId();\n                        yield this.sendReceive(this.packageId.toString(), (_l = (_k = inputObj.params) === null || _k === void 0 ? void 0 : _k.data) === null || _l === void 0 ? void 0 : _l.messageId, topic);\n                    }\n                }\n            }\n        });\n    }\n    recovrySessionInfoFromCache() {\n        // get topic ids and keys from session\n        // WalletConnectionCryptoCacheMap\n        // {[topicId]: {cryptoKeypair: {publicKey:string, secretKey:string}, dappPublicKey:clientId}}\n        let jsonStr = this.connectStorage.getAndDecrypt(walletConnectionConstants_1.WalletConnectionManagerTopicInfoCacheKey);\n        log.logDebug('get cached sessionInfos:', jsonStr);\n        if (jsonStr) {\n            let cacheMap = (0, safejson_1.safeJsonParse)(jsonStr);\n            for (let topicId in cacheMap) {\n                let topicItem = cacheMap[topicId];\n                log.logDebug('make topicItem:', topicItem);\n                let cryptoItem = {\n                    topic: topicId,\n                    crypto: new crypto_1.SessionCrypto({\n                        publicKey: topicItem.cryptoKeyPair.publicKey,\n                        secretKey: topicItem.cryptoKeyPair.secretKey\n                    }),\n                    dappPublicKey: topicItem.dappPublicKey,\n                    cid: topicItem.cid\n                };\n                this.sessionCryptoInfoMap.set(topicId, cryptoItem);\n            }\n        }\n        log.logDebug('get cached sessionInfos map:', this.sessionCryptoInfoMap);\n    }\n    syncCacheSessionInfo() {\n        let cacheMap = {};\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            log.logDebug('for each Keys', topicId);\n            if (cryptoItem) {\n                cacheMap[topicId] = {\n                    cryptoKeyPair: cryptoItem.crypto.stringifyKeypair(),\n                    dappPublicKey: cryptoItem.dappPublicKey,\n                    cid: cryptoItem.cid\n                };\n            }\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(cacheMap);\n        log.logDebug('sync cache sessionInfos:', jsonData);\n        this.connectStorage.encryptStoreMsg(jsonData, walletConnectionConstants_1.WalletConnectionManagerTopicInfoCacheKey);\n    }\n    cacheSessionInfo(topic, sessionInfo, sync = true) {\n        let dappPublicKey = sessionInfo.dappPublicKey;\n        // 1. search dapp public related topic ids\n        let duplicatedTopics = [];\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            log.logDebug('for each Keys', topicId);\n            if (cryptoItem.dappPublicKey == dappPublicKey) {\n                log.logDebug('duplicated dapp public key:', topicId, dappPublicKey);\n                duplicatedTopics.push(topicId);\n            }\n        }\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            if (duplicatedTopics.includes(topicId)) {\n                this.sessionCryptoInfoMap.delete(topicId);\n            }\n        }\n        // discard useless topics\n        log.logDebug('cleaned connect session cache:', this.sessionCryptoInfoMap);\n        // 2. remove previous connected topic ids\n        // 3. write in current topic\n        this.sessionCryptoInfoMap.set(topic, sessionInfo);\n        // TODO: search domain info and then delete \n        log.logDebug('cache sessionInfo:', topic, sessionInfo, this.sessionCryptoInfoMap);\n        if (sync) {\n            this.syncCacheSessionInfo();\n        }\n        return duplicatedTopics;\n    }\n    // add and subscribe topic\n    appendTopic(topic, sessionPublicKey, cid) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('4.1. get append Topic:', topic);\n            // 1. check if connected\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                if (!this.isLogined) {\n                    var error = new Error();\n                    error.message = \"connection is not logined\";\n                    error.name = \"append error\";\n                    // throw error\n                    reject(error);\n                    return;\n                }\n                // 2. subscribe topic and session public key\n                let cryptoItem = {\n                    topic: topic,\n                    crypto: new crypto_1.SessionCrypto(),\n                    dappPublicKey: sessionPublicKey ? sessionPublicKey : \"\",\n                    cid: cid\n                };\n                let duplicatedTopics = this.cacheSessionInfo(topic, cryptoItem, false);\n                // make sure cache session info before subscribe\n                yield this.subscribeTopics(Array.from([topic]));\n                this.refreshPackageId();\n                log.logDebug(`5. subscribe callback then fetch append message: ${this.packageId}, ${topic}`);\n                log.reportLog(`5. subscribe callback then fetch append message`);\n                const timeF = new Date().getTime();\n                (0, log_1.logDebug)(\"Append --subscribe callback->\", timeF - this.timeLog);\n                resolve(duplicatedTopics);\n            }));\n        });\n    }\n    confirmAppendingTopics() {\n        this.syncCacheSessionInfo();\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.timeLog = new Date().getTime();\n            (0, log_1.logDebug)(\"[Wallet] ConnectTime---enter->\", this.timeLog);\n            log.reportLog('wallet connect connect called');\n            // 0. get cached topics and infos\n            let timestampStr = Date.now().toString();\n            var jwtToken = yield this.makeJWT(timestampStr);\n            log.logDebug(`generate jwt token: ${jwtToken}`);\n            this.connectStorage.saveContent(jwtToken, 'jwt');\n            this.recovrySessionInfoFromCache();\n            // 1.\n            return new Promise((resolve, reject) => {\n                // 1. when websocket opened\n                this.inLogin = true;\n                this.connector.onOpen(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug(`1. connector on open`);\n                    log.reportLog('1. wallet connect connect on open');\n                    const timeOne = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---open->\", timeOne - this.timeLog);\n                    //2. send jwt to login\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when login');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // throw error\n                            reject(error);\n                        }\n                        else {\n                            this.isLogined = true;\n                            resolve();\n                            // 3. subscribe cached topics\n                            log.logDebug('3. subscribe cached topics', this.sessionCryptoInfoMap);\n                            log.reportLog('3. wallet connect connect subscribe cached topics');\n                            if (this.sessionCryptoInfoMap.size > 0) {\n                                yield this.subscribeTopics(Array.from(this.sessionCryptoInfoMap.keys()));\n                            }\n                        }\n                    }));\n                    log.logDebug(`2. login called`);\n                    log.reportLog('2. wallet connect login called');\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        return yield this.connector.connect();\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_LOGIN,\n                        params: {\n                            token: jwtToken\n                        }\n                    });\n                }));\n                this.connector.connect().catch((err) => {\n                    (0, log_1.logDebug)('WalletConnectionManager connect error', err);\n                    reject(err);\n                });\n                // add callback\n                this.connector.addPackageParse((event) => {\n                    var _a, _b;\n                    log.logDebug(`connect: parse package`);\n                    log.logDebug(event);\n                    if (!(\"params\" in event) || !(\"data\" in event[\"params\"])) {\n                        this.parsePackage(\"\", event, true);\n                        return;\n                    }\n                    // ignore receive echo\n                    if ((_a = event.params.data) === null || _a === void 0 ? void 0 : _a.topic) {\n                        this.parsePackage((_b = event.params.data) === null || _b === void 0 ? void 0 : _b.topic, event, event.method === commands_1.CONNECT_METHOD_RECEIVE);\n                    }\n                });\n                // this.connector.addListener(safeJsonStringify(event), (rawMsg: string)=> {\n                //    rawMsg = rawMsg.replace(/'/g, '\"')\n                //    log.logDebug(`addListener ===> ${rawMsg}`)\n                //    if (typeof rawMsg !== 'undefined') {\n                //       var msgObj = safeJsonParse(rawMsg)\n                //       var msg = msgObj.message\n                //       let crypto = \n                //       var result = this.crypto.decrypt(msg, this.connectedWalletPK)\n                //       log.logDebug(`addListener ===> ${result}`)\n                //       return result\n                //    }\n                //    return undefined\n                // }, ()=>{\n                //    // emit success\n                // }, ()=>{\n                //    // emit fail\n                // })\n            });\n        });\n    }\n    // 获取对应topic session下的钱包公钥\n    // 在返回approve时需要填充到clientId字段中\n    getSessionPublicKey(topicId) {\n        if (this.isTopicPublicKeyExist(topicId)) {\n            let item = this.sessionCryptoInfoMap.get(topicId);\n            if (item) {\n                return (0, utils_1.toHexString)(item.crypto.keyPair.publicKey);\n            }\n        }\n        return undefined;\n    }\n    getCurrentCachedTopicIdList() {\n        return Array.from(this.sessionCryptoInfoMap.keys());\n    }\n    disconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            yield this.connector.disconnect();\n            //clean cached topic\n            //如果是恢复连接，就不清理解密public key\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            if (!fromRestore) {\n                this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n            }\n        });\n    }\n    send(topic_1, msg_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, msg, needPublicKey = false, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL, useRaw = false) {\n            var _a, _b;\n            // make send msg payload\n            log.logDebug(`message send =====> ${msg}`);\n            if (!this.isTopicPublicKeyExist(topic)) {\n                // channel not ready\n                throw new Error('connection not finish');\n            }\n            let connectedDappPK = (_a = this.sessionCryptoInfoMap.get(topic)) === null || _a === void 0 ? void 0 : _a.dappPublicKey;\n            let cryptoObject = (_b = this.sessionCryptoInfoMap.get(topic)) === null || _b === void 0 ? void 0 : _b.crypto;\n            let messageObj = undefined;\n            if (useRaw) {\n                messageObj = {\n                    message: msg,\n                };\n            }\n            if (cryptoObject && connectedDappPK && !useRaw) {\n                let message = cryptoObject.encryptWallet(msg, connectedDappPK);\n                messageObj = {\n                    message: message,\n                };\n            }\n            if (messageObj) {\n                if (needPublicKey && cryptoObject) {\n                    messageObj.clientId = (0, utils_1.toHexString)(cryptoObject.keyPair.publicKey);\n                    // let privateKey = toHexString(cryptoObject.keyPair.secretKey)\n                    // log.logDebug(`message send use dapp publicKey =====> ${connectedDappPK}`)\n                    // log.logDebug(`message send use publicKey =====> ${messageObj.clientId}`)\n                    // log.logDebug(`message send use secretKey =====> ${privateKey}`)\n                }\n                this.refreshPackageId();\n                const payload = {\n                    id: this.packageId.toString(),\n                    method: commands_1.CONNECT_METHOD_PUBLISH,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    params: {\n                        message: {\n                            topic: topic,\n                            message: (0, safejson_1.safeJsonStringify)(messageObj),\n                            ttl: ttl\n                        }\n                    } // crypted\n                };\n                this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                    // ack\n                    if (rsp && rsp.error) {\n                        log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                    }\n                    else if (rsp && !rsp.error) {\n                        log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                    }\n                }));\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n                return this.packageId;\n            }\n        });\n    }\n    sendACK(msgId_1, success_1) {\n        return __awaiter(this, arguments, void 0, function* (msgId, success, reason = undefined) {\n            if (success === true) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    result: true\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n            else if (reason) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    error: {\n                        code: reason.code, //int\n                        message: reason.message\n                    }\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    // send receive\n    sendReceive(msgId, messageId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECEIVE,\n                params: {\n                    data: {\n                        messageId: messageId,\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendUnsubscribe(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO: make disconnect payload\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), {\n                id: this.packageId.toString(),\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_UNSUB,\n                params: {\n                    topic: topic\n                }\n            });\n            // remove topicId\n            this.sessionCryptoInfoMap.delete(topic);\n            this.syncCacheSessionInfo();\n        });\n    }\n    // send receive\n    // 1. fetch all \n    // 2. send back receive\n    // 3. check has more, if so, repeat from 1st step\n    sendFetchAndConsumeMessages(msgId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(msgId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic == topic) {\n                                let messageId = msg.messageId;\n                                yield this.connector.getMsgPayloadFromHistory(msg);\n                                // send receive command to relay server\n                                this.refreshPackageId();\n                                yield this.sendReceive(this.packageId.toString(), messageId, topic);\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_FETCHMSG,\n                params: {\n                    data: {\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendBatchFetchAndConsumeMessages(packageId, topicIdList) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(packageId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic) {\n                                let messageId = msg.messageId;\n                                yield this.connector.getMsgPayloadFromHistory(msg);\n                                // send receive command to relay server\n                                this.refreshPackageId(i);\n                                yield this.sendReceive(this.packageId.toString(), messageId, msg.topic);\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendBatchFetchAndConsumeMessages(this.packageId.toString(), topicIdList);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            log.reportLog('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: packageId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_BATCH_FETCHMSG,\n                params: {\n                    topics: topicIdList,\n                    withInternalData: true\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                yield this.connector.connect();\n            }), payload);\n        });\n    }\n    cleanCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.connectStorage.clearCache();\n        });\n    }\n    saveSessionContent(key, data) {\n        if (!data) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(data);\n        this.connectStorage.encryptStoreMsg(jsonData, storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n    }\n    getSessionContent(key) {\n        let jsonStr = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        if (jsonStr) {\n            let object = (0, safejson_1.safeJsonParse)(jsonStr);\n            return object;\n        }\n        return undefined;\n    }\n    // subscribe then fetch messages for each topics\n    subscribeTopics(topicIdList) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)(\"4. topicid list\", topicIdList);\n            log.reportLog(\"4. topicid list\");\n            this.refreshPackageId();\n            const timeF = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let finishCount = 0;\n                //3. send subscribe\n                for (let idx = 0; idx < topicIdList.length; ++idx) {\n                    let topicId = topicIdList[idx];\n                    this.refreshPackageId(idx);\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when subscribe');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // reject(error)\n                            finishCount += 1;\n                            if (finishCount == topicIdList.length) {\n                                resolve();\n                            }\n                        }\n                        this.refreshPackageId(idx);\n                        const timeF = new Date().getTime();\n                        (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n                        finishCount += 1;\n                        if (finishCount == topicIdList.length) {\n                            // 4. fetch messages\n                            log.logDebug(`5. send fetch msg: ${this.packageId}, ${topicId}`);\n                            yield this.sendBatchFetchAndConsumeMessages(this.packageId.toString(), topicIdList);\n                            resolve();\n                        }\n                    }));\n                    log.logDebug(`3. login callback then send subscribe: ${this.packageId}, ${topicId}`);\n                    log.reportLog('3. login callback then send subscribe');\n                    const timeTh = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---login callback->\", timeTh - this.timeLog);\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        return yield this.connector.connect();\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_SUB,\n                        params: {\n                            topic: topicId\n                        }\n                    });\n                }\n            }));\n        });\n    }\n}\nexports.WalletConnectionManager = WalletConnectionManager;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SessionCrypto = void 0;\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst utils_1 = require(\"../utils/utils\");\nclass SessionCrypto {\n    constructor(keyPair = undefined) {\n        this.nonceLength = 24;\n        this.sessionKeyPair = keyPair ? this.createKeypairFromString(keyPair) : this.createKeypair();\n    }\n    createKeypair() {\n        return tweetnacl_1.default.box.keyPair();\n    }\n    createKeypairFromString(keyPair) {\n        return {\n            publicKey: (0, utils_1.hexToByteArray)(keyPair.publicKey),\n            secretKey: (0, utils_1.hexToByteArray)(keyPair.secretKey),\n        };\n    }\n    createNonce() {\n        return tweetnacl_1.default.randomBytes(this.nonceLength);\n    }\n    get keyPair() {\n        return this.sessionKeyPair;\n    }\n    // dapp 加密:\n    // base64(hex（nonce+加密内容）)\n    encrypt(message, receiverPublicKey) {\n        const encodedMessage = new TextEncoder().encode(message);\n        const nonce = this.createNonce();\n        const encrypted = tweetnacl_1.default.box(encodedMessage, nonce, (0, utils_1.hexToByteArray)(receiverPublicKey), this.keyPair.secretKey);\n        let concatInfo = (0, utils_1.concatUint8Arrays)(nonce, encrypted);\n        var hexResult = (0, utils_1.toHexString)(concatInfo);\n        var encodedResult = new TextEncoder().encode(hexResult);\n        return (0, utils_1.base64encode)(encodedResult, false);\n    }\n    // 钱包加密内容\n    // 注意：没有中间hex的环节\n    // base64（nonce+加密内容)\n    encryptWallet(message, receiverPublicKey) {\n        const encodedMessage = new TextEncoder().encode(message);\n        const nonce = this.createNonce();\n        const encrypted = tweetnacl_1.default.box(encodedMessage, nonce, (0, utils_1.hexToByteArray)(receiverPublicKey), this.keyPair.secretKey);\n        let concatInfo = (0, utils_1.concatUint8Arrays)(nonce, encrypted);\n        return (0, utils_1.base64encode)(concatInfo, false);\n    }\n    // dapp 解密\n    // base64(split(nonce+加密内容))\n    decrypt(message, senderPublicKey) {\n        let base64Content = (0, utils_1.base64decode)(message, true);\n        let messageByteArray = base64Content.toUint8Array();\n        const [nonce, internalMessage] = (0, utils_1.splitToUint8Arrays)(messageByteArray, this.nonceLength);\n        const decrypted = tweetnacl_1.default.box.open(internalMessage, nonce, (0, utils_1.hexToByteArray)(senderPublicKey), this.keyPair.secretKey);\n        if (!decrypted) {\n            throw new Error(`Decryption error: \\n message: ${message.toString()} \\n sender pubkey: ${senderPublicKey.toString()} \\n keypair pubkey: ${(0, utils_1.toHexString)(this.keyPair.publicKey)} \\n keypair secretkey: ${(0, utils_1.toHexString)(this.keyPair.secretKey)}`);\n        }\n        return new TextDecoder().decode(decrypted);\n    }\n    // dapp 解密\n    // base64(hextoByte(split(nonce+加密内容)))\n    decryptWallet(message, senderPublicKey) {\n        let base64Content = (0, utils_1.base64decode)(message, true);\n        let messageByteArray = (0, utils_1.hexToByteArray)(base64Content.toString());\n        const [nonce, internalMessage] = (0, utils_1.splitToUint8Arrays)(messageByteArray, this.nonceLength);\n        const decrypted = tweetnacl_1.default.box.open(internalMessage, nonce, (0, utils_1.hexToByteArray)(senderPublicKey), this.keyPair.secretKey);\n        if (!decrypted) {\n            throw new Error(`Decryption error: \\n message: ${message.toString()} \\n sender pubkey: ${senderPublicKey.toString()} \\n keypair pubkey: ${(0, utils_1.toHexString)(this.keyPair.publicKey)} \\n keypair secretkey: ${(0, utils_1.toHexString)(this.keyPair.secretKey)}`);\n        }\n        return new TextDecoder().decode(decrypted);\n    }\n    stringifyKeypair() {\n        return {\n            publicKey: (0, utils_1.toHexString)(this.keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(this.keyPair.secretKey)\n        };\n    }\n}\nexports.SessionCrypto = SessionCrypto;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./connect\"), exports);\n__exportStar(require(\"./protocol\"), exports);\n__exportStar(require(\"./utils\"), exports);\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IEngine = exports.ISignClient = exports.ISignClientEvents = exports.IEngineEvents = void 0;\nconst eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\nclass IEngineEvents extends eventemitter3_1.default {\n    constructor() {\n        super();\n    }\n}\nexports.IEngineEvents = IEngineEvents;\nclass ISignClientEvents extends eventemitter3_1.default {\n    constructor() {\n        super();\n    }\n}\nexports.ISignClientEvents = ISignClientEvents;\nclass ISignClient {\n    constructor(data) {\n        this.data = data;\n    }\n}\nexports.ISignClient = ISignClient;\nclass IEngine {\n    constructor(client) {\n        this.client = client;\n    }\n}\nexports.IEngine = IEngine;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.creatOKXMiniAppWalletInfo = exports.creatOKXWalletInfo = exports.ISignClientEvents = exports.IEngine = exports.IEngineEvents = exports.ISignClient = exports.getBigIntRpcId = exports.formatJsonRpcRequest = exports.isJsonRpcError = exports.isJsonRpcResponse = exports.parseConnectionError = exports.isHttpUrl = exports.formatJsonRpcError = void 0;\nvar json_rpc_1 = require(\"./json-rpc\");\nObject.defineProperty(exports, \"formatJsonRpcError\", { enumerable: true, get: function () { return json_rpc_1.formatJsonRpcError; } });\nObject.defineProperty(exports, \"isHttpUrl\", { enumerable: true, get: function () { return json_rpc_1.isHttpUrl; } });\nObject.defineProperty(exports, \"parseConnectionError\", { enumerable: true, get: function () { return json_rpc_1.parseConnectionError; } });\nObject.defineProperty(exports, \"isJsonRpcResponse\", { enumerable: true, get: function () { return json_rpc_1.isJsonRpcResponse; } });\nObject.defineProperty(exports, \"isJsonRpcError\", { enumerable: true, get: function () { return json_rpc_1.isJsonRpcError; } });\nObject.defineProperty(exports, \"formatJsonRpcRequest\", { enumerable: true, get: function () { return json_rpc_1.formatJsonRpcRequest; } });\nObject.defineProperty(exports, \"getBigIntRpcId\", { enumerable: true, get: function () { return json_rpc_1.getBigIntRpcId; } });\nvar engine_1 = require(\"./engine\");\nObject.defineProperty(exports, \"ISignClient\", { enumerable: true, get: function () { return engine_1.ISignClient; } });\nObject.defineProperty(exports, \"IEngineEvents\", { enumerable: true, get: function () { return engine_1.IEngineEvents; } });\nObject.defineProperty(exports, \"IEngine\", { enumerable: true, get: function () { return engine_1.IEngine; } });\nObject.defineProperty(exports, \"ISignClientEvents\", { enumerable: true, get: function () { return engine_1.ISignClientEvents; } });\n__exportStar(require(\"./ton\"), exports);\nvar wallet_info_1 = require(\"./wallet-info\");\nObject.defineProperty(exports, \"creatOKXWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXWalletInfo; } });\nObject.defineProperty(exports, \"creatOKXMiniAppWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXMiniAppWalletInfo; } });\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isJsonRpcPayload = isJsonRpcPayload;\nexports.isJsonRpcRequest = isJsonRpcRequest;\nexports.isJsonRpcResponse = isJsonRpcResponse;\nexports.isJsonRpcResult = isJsonRpcResult;\nexports.isJsonRpcError = isJsonRpcError;\nexports.payloadId = payloadId;\nexports.getBigIntRpcId = getBigIntRpcId;\nexports.formatJsonRpcRequest = formatJsonRpcRequest;\nexports.formatJsonRpcResult = formatJsonRpcResult;\nexports.formatJsonRpcError = formatJsonRpcError;\nexports.isReservedErrorCode = isReservedErrorCode;\nexports.getError = getError;\nexports.getErrorByCode = getErrorByCode;\nexports.formatErrorMessage = formatErrorMessage;\nexports.isHttpUrl = isHttpUrl;\nexports.isWsUrl = isWsUrl;\nexports.parseConnectionError = parseConnectionError;\nfunction isJsonRpcPayload(payload) {\n    return (typeof payload === \"object\" &&\n        \"id\" in payload &&\n        \"jsonrpc\" in payload &&\n        payload.jsonrpc === \"2.0\");\n}\nfunction isJsonRpcRequest(payload) {\n    return isJsonRpcPayload(payload) && \"method\" in payload;\n}\nfunction isJsonRpcResponse(payload) {\n    return isJsonRpcPayload(payload) && (isJsonRpcResult(payload) || isJsonRpcError(payload));\n}\nfunction isJsonRpcResult(payload) {\n    return \"result\" in payload;\n}\nfunction isJsonRpcError(payload) {\n    return \"error\" in payload;\n}\nconst okx_connect_error_1 = require(\"../error/okx-connect.error\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nclass IncrementalRandomGenerator {\n    constructor(bits) {\n        this.i = 1;\n        const typedArray = bits === 8 ? new Uint8Array(1) : bits === 16 ? new Uint16Array(1) : new Uint32Array(1);\n        if (bits) {\n            this.initialValue = tweetnacl_1.default.randomBytes(bits / 8)[0];\n        }\n        else {\n            this.initialValue = 0;\n        }\n    }\n    getNextValue() {\n        return this.initialValue + this.i++;\n    }\n}\nconst uint8Generator = new IncrementalRandomGenerator(8);\nconst uint16Generator = new IncrementalRandomGenerator(16);\nfunction payloadId() {\n    const date = Date.now() * 1000;\n    const extra = uint8Generator.getNextValue();\n    return date + extra;\n}\nfunction getBigIntRpcId() {\n    const date = BigInt(Date.now()) * BigInt(1000000);\n    const extra = BigInt(uint16Generator.getNextValue());\n    return date + extra;\n}\nfunction formatJsonRpcRequest(method, params, id) {\n    return {\n        id: id || payloadId(),\n        jsonrpc: \"2.0\",\n        method,\n        params,\n    };\n}\nfunction formatJsonRpcResult(id, result) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        result,\n    };\n}\nfunction formatJsonRpcError(id, error, data) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        error: formatErrorMessage(error, data),\n    };\n}\nfunction isReservedErrorCode(code) {\n    return okx_connect_error_1.RESERVED_ERROR_CODES.includes(code);\n}\nfunction getError(type) {\n    if (!Object.keys(okx_connect_error_1.STANDARD_ERROR_MAP).includes(type)) {\n        return okx_connect_error_1.STANDARD_ERROR_MAP[okx_connect_error_1.DEFAULT_ERROR];\n    }\n    return okx_connect_error_1.STANDARD_ERROR_MAP[type];\n}\nfunction getErrorByCode(code) {\n    const match = Object.values(okx_connect_error_1.STANDARD_ERROR_MAP).find((e) => e.code === code);\n    if (!match) {\n        return okx_connect_error_1.STANDARD_ERROR_MAP[okx_connect_error_1.DEFAULT_ERROR];\n    }\n    return match;\n}\nfunction formatErrorMessage(error, data) {\n    if (typeof error === \"undefined\") {\n        return getError(okx_connect_error_1.INTERNAL_ERROR);\n    }\n    if (typeof error === \"string\") {\n        error = Object.assign(Object.assign({}, getError(okx_connect_error_1.SERVER_ERROR)), { message: error });\n    }\n    if (typeof data !== \"undefined\") {\n        error.data = data;\n    }\n    if (isReservedErrorCode(error.code)) {\n        error = getErrorByCode(error.code);\n    }\n    return error;\n}\nfunction getUrlProtocol(url) {\n    const matches = url.match(new RegExp(/^\\w+:/, \"gi\"));\n    if (!matches || !matches.length)\n        return;\n    return matches[0];\n}\nfunction matchRegexProtocol(url, regex) {\n    const protocol = getUrlProtocol(url);\n    if (typeof protocol === \"undefined\")\n        return false;\n    return new RegExp(regex).test(protocol);\n}\nfunction isHttpUrl(url) {\n    return matchRegexProtocol(url, \"^https?:\");\n}\nfunction isWsUrl(url) {\n    return matchRegexProtocol(url, \"^wss?:\");\n}\nfunction parseConnectionError(e, url, type) {\n    return e.message.includes(\"getaddrinfo ENOTFOUND\") || e.message.includes(\"connect ECONNREFUSED\")\n        ? new Error(`Unavailable ${type} RPC url at ${url}`)\n        : e;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_ITEM_ERROR_CODES = void 0;\nvar CONNECT_ITEM_ERROR_CODES;\n(function (CONNECT_ITEM_ERROR_CODES) {\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n})(CONNECT_ITEM_ERROR_CODES || (exports.CONNECT_ITEM_ERROR_CODES = CONNECT_ITEM_ERROR_CODES = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TONCHAIN = void 0;\nvar TONCHAIN;\n(function (TONCHAIN) {\n    TONCHAIN[\"MAINNET\"] = \"-239\";\n})(TONCHAIN || (exports.TONCHAIN = TONCHAIN = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_ITEM_ERROR_CODES = exports.TONCHAIN = void 0;\nvar connect_wallet_1 = require(\"./connect-wallet\");\nObject.defineProperty(exports, \"TONCHAIN\", { enumerable: true, get: function () { return connect_wallet_1.TONCHAIN; } });\nvar connect_event_1 = require(\"./connect-event\");\nObject.defineProperty(exports, \"CONNECT_ITEM_ERROR_CODES\", { enumerable: true, get: function () { return connect_event_1.CONNECT_ITEM_ERROR_CODES; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.creatOKXWalletInfo = creatOKXWalletInfo;\nexports.creatOKXMiniAppWalletInfo = creatOKXMiniAppWalletInfo;\nconst constants_1 = require(\"../constants\");\nfunction creatOKXWalletInfo() {\n    return {\n        \"appName\": \"okxAppWallet\",\n        \"name\": \"OKX Wallet\",\n        \"imageUrl\": \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\",\n        \"aboutUrl\": constants_1.downloadUrl,\n        \"universalLink\": constants_1.standardUniversalLink,\n        \"deepLink\": constants_1.standardDeeplink,\n        \"platforms\": [\"ios\", \"android\"]\n    };\n}\nfunction creatOKXMiniAppWalletInfo() {\n    return {\n        \"appName\": \"okxMiniApp\",\n        \"name\": \"OKX Mini Wallet\",\n        \"imageUrl\": \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\",\n        \"aboutUrl\": constants_1.downloadUrl,\n        \"universalLink\": `https://t.me/${constants_1.tgwalletName}/start`,\n        \"deepLink\": \"\",\n        \"platforms\": [\"ios\", \"android\", 'macos', 'windows']\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.tgwalletName = exports.tonConnectSdkVersion = exports.shortUniversalLink = exports.standardDeeplink = exports.downloadUrl = exports.standardUniversalLink = exports.okxDeeplink = void 0;\nexports.okxDeeplink = 'okx://web3';\nexports.standardUniversalLink = typeof window !== \"undefined\" && window.location.hostname.includes(\"okx.com\")\n    ? \"https://link.okx.com/download\"\n    : \"https://www.okx.com/download\";\nexports.downloadUrl = \"https://www.okx.com/download\";\n// export const standardUniversalLink = 'http://localhost:5173';\nexports.standardDeeplink = `${exports.okxDeeplink}/wallet/connect`;\nexports.shortUniversalLink = `https://www.okx.com/ul/connect`;\n// export const standardDeeplink = 'http://localhost:5173';\nexports.tonConnectSdkVersion = '1';\n// export const tgwalletName: string = \"TCTestqdqwdqwdqBot\"\nexports.tgwalletName = \"OKX_WALLET_BOT\";\n// https://t.me/OKX_WALLET_BOT/start\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_CONNECT_ERROR_CODES = exports.OKXConnectError = void 0;\nvar okx_connect_error_1 = require(\"./okx-connect.error\");\nObject.defineProperty(exports, \"OKXConnectError\", { enumerable: true, get: function () { return okx_connect_error_1.OKXConnectError; } });\nObject.defineProperty(exports, \"OKX_CONNECT_ERROR_CODES\", { enumerable: true, get: function () { return okx_connect_error_1.OKX_CONNECT_ERROR_CODES; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEFAULT_ERROR = exports.STANDARD_ERROR_MAP = exports.SERVER_ERROR_CODE_RANGE = exports.RESERVED_ERROR_CODES = exports.SERVER_ERROR = exports.INTERNAL_ERROR = exports.INVALID_PARAMS = exports.METHOD_NOT_FOUND = exports.INVALID_REQUEST = exports.PARSE_ERROR = exports.OKX_CONNECT_ERROR_CODES = exports.OKXConnectError = void 0;\nclass OKXConnectError extends Error {\n    constructor(code, message) {\n        if (message == undefined) {\n            message = getDefaultMessageByCode(code);\n        }\n        super(message);\n        this.code = code;\n        this.message = `${OKXConnectError.prefix} ${message ? '\\n' + message : ''}`;\n        Object.setPrototypeOf(this, OKXConnectError.prototype);\n    }\n    toJSON() {\n        return {\n            message: this.message,\n            code: this.code\n        };\n    }\n}\nexports.OKXConnectError = OKXConnectError;\nOKXConnectError.prefix = '[OKX_CONNECT_SDK_ERROR]';\nfunction getDefaultMessageByCode(code) {\n    if (code == OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR) {\n        return \"unknown error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR) {\n        return \"bad request error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.ALREADY_CONNECTED_ERROR) {\n        return \"already connected error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR) {\n        return \"not connected error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.UNKNOWN_APP_ERROR) {\n        return \"unknown app error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n        return \"user rejects error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED) {\n        return \"method not supported\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.CONNECTION_ERROR) {\n        return \"connect error\";\n    }\n    return \"unknown error\";\n}\nvar OKX_CONNECT_ERROR_CODES;\n(function (OKX_CONNECT_ERROR_CODES) {\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"BAD_REQUEST_ERROR\"] = 1] = \"BAD_REQUEST_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"ALREADY_CONNECTED_ERROR\"] = 11] = \"ALREADY_CONNECTED_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"NOT_CONNECTED_ERROR\"] = 12] = \"NOT_CONNECTED_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"UNKNOWN_APP_ERROR\"] = 100] = \"UNKNOWN_APP_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"USER_REJECTS_ERROR\"] = 300] = \"USER_REJECTS_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"CHAIN_NOT_SUPPORTED\"] = 500] = \"CHAIN_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"WALLET_NOT_SUPPORTED\"] = 600] = \"WALLET_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"CONNECTION_ERROR\"] = 700] = \"CONNECTION_ERROR\";\n})(OKX_CONNECT_ERROR_CODES || (exports.OKX_CONNECT_ERROR_CODES = OKX_CONNECT_ERROR_CODES = {}));\nexports.PARSE_ERROR = \"PARSE_ERROR\";\nexports.INVALID_REQUEST = \"INVALID_REQUEST\";\nexports.METHOD_NOT_FOUND = \"METHOD_NOT_FOUND\";\nexports.INVALID_PARAMS = \"INVALID_PARAMS\";\nexports.INTERNAL_ERROR = \"INTERNAL_ERROR\";\nexports.SERVER_ERROR = \"SERVER_ERROR\";\nexports.RESERVED_ERROR_CODES = [-32700, -32600, -32601, -32602, -32603];\nexports.SERVER_ERROR_CODE_RANGE = [-32000, -32099];\nexports.STANDARD_ERROR_MAP = {\n    [exports.PARSE_ERROR]: { code: -32700, message: \"Parse error\" },\n    [exports.INVALID_REQUEST]: { code: -32600, message: \"Invalid Request\" },\n    [exports.METHOD_NOT_FOUND]: { code: -32601, message: \"Method not found\" },\n    [exports.INVALID_PARAMS]: { code: -32602, message: \"Invalid params\" },\n    [exports.INTERNAL_ERROR]: { code: -32603, message: \"Internal error\" },\n    [exports.SERVER_ERROR]: { code: -32000, message: \"Server error\" },\n};\nexports.DEFAULT_ERROR = exports.SERVER_ERROR;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.downloadUrl = exports.okxDeeplink = exports.tonConnectSdkVersion = exports.standardDeeplink = exports.standardUniversalLink = exports.NameSpaceKeyTron = exports.NameSpaceKeyCosmos = exports.NameSpaceKeyAptos = exports.NameSpaceKeyBtc = exports.NameSpaceKeySui = exports.NameSpaceKeyTON = exports.NameSpaceKeySOL = exports.NameSpaceKeyEip155 = void 0;\n__exportStar(require(\"./error\"), exports);\nvar misc_1 = require(\"./misc\");\nObject.defineProperty(exports, \"NameSpaceKeyEip155\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyEip155; } });\nObject.defineProperty(exports, \"NameSpaceKeySOL\", { enumerable: true, get: function () { return misc_1.NameSpaceKeySOL; } });\nObject.defineProperty(exports, \"NameSpaceKeyTON\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyTON; } });\nObject.defineProperty(exports, \"NameSpaceKeySui\", { enumerable: true, get: function () { return misc_1.NameSpaceKeySui; } });\nObject.defineProperty(exports, \"NameSpaceKeyBtc\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyBtc; } });\nObject.defineProperty(exports, \"NameSpaceKeyAptos\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyAptos; } });\nObject.defineProperty(exports, \"NameSpaceKeyCosmos\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyCosmos; } });\nObject.defineProperty(exports, \"NameSpaceKeyTron\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyTron; } });\nvar constants_1 = require(\"./constants\");\nObject.defineProperty(exports, \"standardUniversalLink\", { enumerable: true, get: function () { return constants_1.standardUniversalLink; } });\nObject.defineProperty(exports, \"standardDeeplink\", { enumerable: true, get: function () { return constants_1.standardDeeplink; } });\nObject.defineProperty(exports, \"tonConnectSdkVersion\", { enumerable: true, get: function () { return constants_1.tonConnectSdkVersion; } });\nObject.defineProperty(exports, \"okxDeeplink\", { enumerable: true, get: function () { return constants_1.okxDeeplink; } });\nObject.defineProperty(exports, \"downloadUrl\", { enumerable: true, get: function () { return constants_1.downloadUrl; } });\n__exportStar(require(\"./connect\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NameSpaceKeyTron = exports.NameSpaceKeyCosmos = exports.NameSpaceKeyAptos = exports.NameSpaceKeyBtc = exports.NameSpaceKeySui = exports.NameSpaceKeyTON = exports.NameSpaceKeySOL = exports.NameSpaceKeyEip155 = void 0;\nexports.NameSpaceKeyEip155 = \"eip155\";\nexports.NameSpaceKeySOL = \"solana\";\nexports.NameSpaceKeyTON = \"ton\";\nexports.NameSpaceKeySui = \"sui\";\nexports.NameSpaceKeyBtc = \"btc\";\nexports.NameSpaceKeyAptos = \"aptos\";\nexports.NameSpaceKeyCosmos = \"cosmos\";\nexports.NameSpaceKeyTron = \"tron\";\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.callForSuccess = callForSuccess;\nexports.delay = delay;\n/**\n * Function to call ton api until we get response.\n * Because ton network is pretty unstable we need to make sure response is final.\n * @param {T} fn - function to call\n * @param {CallForSuccessOptions} [options] - optional configuration options\n */\nfunction callForSuccess(fn, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b;\n        const attempts = (_a = options === null || options === void 0 ? void 0 : options.attempts) !== null && _a !== void 0 ? _a : 3;\n        const delayMs = (_b = options === null || options === void 0 ? void 0 : options.delayMs) !== null && _b !== void 0 ? _b : 800;\n        if (typeof fn !== 'function') {\n            throw new Error(`Expected a function, got ${typeof fn}`);\n        }\n        let i = 0;\n        let lastError;\n        while (i < attempts) {\n            try {\n                return yield fn();\n            }\n            catch (err) {\n                lastError = err;\n                i++;\n                if (i < attempts) {\n                    yield delay(delayMs);\n                }\n            }\n        }\n        throw lastError;\n    });\n}\n/**\n * Delays the execution of code for a specified number of milliseconds.\n * @param {number} timeout - The number of milliseconds to delay the execution.\n * @param {DelayOptions} [options] - Optional configuration options for the delay.\n * @return {Promise<void>} - A promise that resolves after the specified delay, or rejects if the delay is aborted.\n */\nfunction delay(timeout, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            var _a, _b;\n            if ((_a = options === null || options === void 0 ? void 0 : options.signal) === null || _a === void 0 ? void 0 : _a.aborted) {\n                reject(new Error('Delay aborted'));\n                return;\n            }\n            const timeoutId = setTimeout(() => resolve(), timeout);\n            (_b = options === null || options === void 0 ? void 0 : options.signal) === null || _b === void 0 ? void 0 : _b.addEventListener('abort', () => {\n                clearTimeout(timeoutId);\n                reject(new Error('Delay aborted'));\n            });\n        });\n    });\n}\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isBrowser = exports.isOS = exports.isMobileUserAgent = exports.openDeeplinkWithFallback = exports.openLinkBlank = exports.openLink = exports.useShortLink = exports.toSafeBase64FromBase64 = exports.isValidObject = exports.isIos = exports.base64decode = exports.base64encode = exports.splitToUint8Arrays = exports.concatUint8Arrays = exports.toHexString = exports.hexToByteArray = exports.getOKXLink = exports.openOKXUniversalLink = exports.getAppWalletShortDeepLink = exports.encodeTWAConnectURLParams = exports.encodeConnectParams = exports.openOKXTMAWalletlinkWithFallback = exports.getTelegramWalletTWAUrl = exports.getAppWalletDeepLink = exports.encodeTelegramUrlParameters = exports.isTelegramUrl = exports.openOKXDeeplinkWithFallback = exports.openOKXDeeplink = exports.getUniversalLink = exports.safeJsonStringify = exports.safeJsonParse = exports.getDefaultReporter = exports.reportEvent = exports.reportLog = exports.logWarning = exports.logError = exports.logDebug = exports.callForSuccess = void 0;\nvar call_for_success_1 = require(\"./call-for-success\");\nObject.defineProperty(exports, \"callForSuccess\", { enumerable: true, get: function () { return call_for_success_1.callForSuccess; } });\nvar log_1 = require(\"./log\");\nObject.defineProperty(exports, \"logDebug\", { enumerable: true, get: function () { return log_1.logDebug; } });\nObject.defineProperty(exports, \"logError\", { enumerable: true, get: function () { return log_1.logError; } });\nObject.defineProperty(exports, \"logWarning\", { enumerable: true, get: function () { return log_1.logWarning; } });\nObject.defineProperty(exports, \"reportLog\", { enumerable: true, get: function () { return log_1.reportLog; } });\nObject.defineProperty(exports, \"reportEvent\", { enumerable: true, get: function () { return log_1.reportEvent; } });\nObject.defineProperty(exports, \"getDefaultReporter\", { enumerable: true, get: function () { return log_1.getDefaultReporter; } });\n__exportStar(require(\"./reportconstants\"), exports);\n__exportStar(require(\"./report\"), exports);\nvar safejson_1 = require(\"./safejson\");\nObject.defineProperty(exports, \"safeJsonParse\", { enumerable: true, get: function () { return safejson_1.safeJsonParse; } });\nObject.defineProperty(exports, \"safeJsonStringify\", { enumerable: true, get: function () { return safejson_1.safeJsonStringify; } });\nvar url_1 = require(\"./url\");\nObject.defineProperty(exports, \"getUniversalLink\", { enumerable: true, get: function () { return url_1.getUniversalLink; } });\nObject.defineProperty(exports, \"openOKXDeeplink\", { enumerable: true, get: function () { return url_1.openOKXDeeplink; } });\nObject.defineProperty(exports, \"openOKXDeeplinkWithFallback\", { enumerable: true, get: function () { return url_1.openOKXDeeplinkWithFallback; } });\nObject.defineProperty(exports, \"isTelegramUrl\", { enumerable: true, get: function () { return url_1.isTelegramUrl; } });\nObject.defineProperty(exports, \"encodeTelegramUrlParameters\", { enumerable: true, get: function () { return url_1.encodeTelegramUrlParameters; } });\nObject.defineProperty(exports, \"getAppWalletDeepLink\", { enumerable: true, get: function () { return url_1.getAppWalletDeepLink; } });\nObject.defineProperty(exports, \"getTelegramWalletTWAUrl\", { enumerable: true, get: function () { return url_1.getTelegramWalletTWAUrl; } });\nObject.defineProperty(exports, \"openOKXTMAWalletlinkWithFallback\", { enumerable: true, get: function () { return url_1.openOKXTMAWalletlinkWithFallback; } });\nObject.defineProperty(exports, \"encodeConnectParams\", { enumerable: true, get: function () { return url_1.encodeConnectParams; } });\nObject.defineProperty(exports, \"encodeTWAConnectURLParams\", { enumerable: true, get: function () { return url_1.encodeTWAConnectURLParams; } });\nObject.defineProperty(exports, \"getAppWalletShortDeepLink\", { enumerable: true, get: function () { return url_1.getAppWalletShortDeepLink; } });\nObject.defineProperty(exports, \"openOKXUniversalLink\", { enumerable: true, get: function () { return url_1.openOKXUniversalLink; } });\nObject.defineProperty(exports, \"getOKXLink\", { enumerable: true, get: function () { return url_1.getOKXLink; } });\nvar utils_1 = require(\"./utils\");\nObject.defineProperty(exports, \"hexToByteArray\", { enumerable: true, get: function () { return utils_1.hexToByteArray; } });\nObject.defineProperty(exports, \"toHexString\", { enumerable: true, get: function () { return utils_1.toHexString; } });\nObject.defineProperty(exports, \"concatUint8Arrays\", { enumerable: true, get: function () { return utils_1.concatUint8Arrays; } });\nObject.defineProperty(exports, \"splitToUint8Arrays\", { enumerable: true, get: function () { return utils_1.splitToUint8Arrays; } });\nObject.defineProperty(exports, \"base64encode\", { enumerable: true, get: function () { return utils_1.base64encode; } });\nObject.defineProperty(exports, \"base64decode\", { enumerable: true, get: function () { return utils_1.base64decode; } });\nObject.defineProperty(exports, \"isIos\", { enumerable: true, get: function () { return utils_1.isIos; } });\nObject.defineProperty(exports, \"isValidObject\", { enumerable: true, get: function () { return utils_1.isValidObject; } });\nObject.defineProperty(exports, \"toSafeBase64FromBase64\", { enumerable: true, get: function () { return utils_1.toSafeBase64FromBase64; } });\nObject.defineProperty(exports, \"useShortLink\", { enumerable: true, get: function () { return utils_1.useShortLink; } });\nvar web_api_1 = require(\"./web-api\");\nObject.defineProperty(exports, \"openLink\", { enumerable: true, get: function () { return web_api_1.openLink; } });\nObject.defineProperty(exports, \"openLinkBlank\", { enumerable: true, get: function () { return web_api_1.openLinkBlank; } });\nObject.defineProperty(exports, \"openDeeplinkWithFallback\", { enumerable: true, get: function () { return web_api_1.openDeeplinkWithFallback; } });\nObject.defineProperty(exports, \"isMobileUserAgent\", { enumerable: true, get: function () { return web_api_1.isMobileUserAgent; } });\nObject.defineProperty(exports, \"isOS\", { enumerable: true, get: function () { return web_api_1.isOS; } });\nObject.defineProperty(exports, \"isBrowser\", { enumerable: true, get: function () { return web_api_1.isBrowser; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getDefaultReporter = getDefaultReporter;\nexports.logDebug = logDebug;\nexports.logError = logError;\nexports.logWarning = logWarning;\nexports.reportEvent = reportEvent;\nexports.reportLog = reportLog;\nconst debug = false;\nconst forceReport = false;\nconst report_1 = require(\"./report\");\nconst defaultReporter = new report_1.OKXReporter();\nfunction getDefaultReporter() {\n    return defaultReporter;\n}\nfunction logDebug(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.log('[OKX_CONNECT_SDK]', ...args);\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction logError(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.error('[OKX_CONNECT_SDK]', ...args);\n            }\n            if (forceReport || !debug) {\n                let content = '';\n                content += [...args].reduce((result, item) => {\n                    if (typeof item == 'string') {\n                        result += ',' + item;\n                    }\n                    else if (typeof item == 'object') {\n                        result += JSON.stringify(item);\n                    }\n                });\n                defaultReporter.sendRecordContent(content, report_1.OKXReportType.LOG, '');\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction logWarning(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.warn('[OKX_CONNECT_SDK]', ...args);\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction reportEvent(type, action, content) {\n    return __awaiter(this, void 0, void 0, function* () {\n        yield defaultReporter.sendRecordContent(content, type, action);\n    });\n}\nfunction reportLog(content_1) {\n    return __awaiter(this, arguments, void 0, function* (content, action = 'default') {\n        // await defaultReporter.sendRecordContent(content, OKXReportType.LOG, action)\n    });\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXReporter = exports.OKXReportSide = exports.OKXReportType = exports.versionStr = void 0;\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nconst log_1 = require(\"./log\");\nconst url_1 = require(\"./url\");\nconst utils_1 = require(\"../utils\");\nconst localforage_1 = __importDefault(require(\"localforage\"));\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nexports.versionStr = '1.5.2';\nconst reportApiList = [\n    'https://www.okx.com/dappstat/wallet-connect',\n    'https://www.okx.ac/dappstat/wallet-connect'\n];\nconst reportCacheKey = 'OKX_RP_CK';\nconst reportUUIDKey = 'OKX_RP_UUID_CK';\nconst MAX_LIMIT_REPORTCOUNT = 100;\nconst DEFAULT_HTTP_HEADERS = {\n    Accept: \"*/*\",\n    \"Content-Type\": \"text/plain\",\n};\nconst DEFAULT_HTTP_METHOD = \"POST\";\nconst DEFAULT_FETCH_OPTS = {\n    headers: DEFAULT_HTTP_HEADERS,\n    method: DEFAULT_HTTP_METHOD,\n};\nexports.OKXReportType = {\n    PAGE_IN: 'page_in',\n    PAGE_OUT: 'page_out',\n    CLICK: 'click',\n    LOG: 'log',\n};\nexports.OKXReportSide = {\n    DAPP: 'dapp',\n    WALLET: 'wallet',\n};\nclass IReporter {\n}\nconst fetchWithTimeout = (url, options, timeout = 5000) => {\n    const controller = new AbortController();\n    const signal = controller.signal;\n    const fetchPromise = (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, options), { signal }));\n    const timeoutPromise = new Promise((_, reject) => setTimeout(() => {\n        controller.abort();\n        reject(new Error('Request timed out'));\n    }, timeout));\n    return Promise.race([fetchPromise, timeoutPromise]);\n};\nconst fetchListWithTimeout = (urls_1, ...args_1) => __awaiter(void 0, [urls_1, ...args_1], void 0, function* (urls, options = {}, timeout = 5000) {\n    for (const url of urls) {\n        try {\n            const controller = new AbortController();\n            const signal = controller.signal;\n            const fetchPromise = (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, options), { signal }));\n            const timeoutPromise = new Promise((_, reject) => setTimeout(() => {\n                controller.abort();\n                reject(new Error('Request timed out'));\n            }, timeout));\n            const response = yield Promise.race([fetchPromise, timeoutPromise]);\n            if (response.ok) {\n                return response;\n            }\n        }\n        catch (error) {\n            console.error(`Fetch error for ${url}:`, error);\n        }\n    }\n    throw new Error('All fetch attempts failed.');\n});\nclass OKXReporter {\n    constructor() {\n        this.currentSide = exports.OKXReportSide.DAPP;\n        this.currentVersion = exports.versionStr;\n        this.storage = localforage_1.default.createInstance({\n            name: \"OKXReporter\"\n        });\n        this.recordList = new Array();\n        this.currentUUID = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(16));\n    }\n    configVersionAndSide(version, side, appname) {\n        this.currentVersion = version;\n        this.currentSide = side;\n        this.appName = appname;\n    }\n    get recordCacheKey() {\n        return reportCacheKey + \"@\" + this.appName;\n    }\n    get reportPlatform() {\n        if ((0, utils_1.isMobileUserAgent)()) {\n            if ((0, utils_1.isIos)()) {\n                return 'iOS';\n            }\n            else {\n                return 'android';\n            }\n        }\n        else {\n            return 'pc';\n        }\n    }\n    beginReport() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.startErrorCatching();\n            let records = yield this.storage.getItem(this.recordCacheKey);\n            let uuid = yield this.storage.getItem(reportUUIDKey);\n            if (uuid) {\n                this.currentUUID = uuid;\n            }\n            else {\n                this.storage.setItem(reportUUIDKey, this.currentUUID);\n            }\n            if (records) {\n                this.recordList = records;\n                (0, log_1.logDebug)('resume records from cache length: ', this.recordList.length);\n                yield this.sendCachedRecords();\n            }\n        });\n    }\n    startErrorCatching() {\n        let window = (0, url_1.getWindow)();\n        if (window) {\n            (0, log_1.logDebug)('begin capture console error');\n            // window.onerror = (event: Event | string, source?: string, lineno?: number, colno?: number, error?: Error) => {\n            //     logDebug('capture error info:', error, source)\n            //     this.markRecord(error?.message+'/'+error?.name+'/'+error?.stack, OKXReportType.LOG, '', this.currentSide)\n            // }\n        }\n    }\n    cachedErrors() {\n        return this.recordList;\n    }\n    sendRecord(record) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    const body = JSON.stringify(record);\n                    (0, log_1.logDebug)('[REPORT] record: ', body);\n                    const res = yield fetchListWithTimeout(reportApiList, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body: body }));\n                    (0, log_1.logDebug)('[REPORT] get rsp:', res);\n                    if (res && res.status && res.status == 200) {\n                        this.recordList = this.recordList.filter((item) => {\n                            return item.timestamp != record.timestamp || item.content != record.content;\n                        });\n                        yield this.storage.setItem(this.recordCacheKey, this.recordList);\n                        resolve(true);\n                    }\n                    else {\n                        reject(false);\n                    }\n                }\n                catch (e) {\n                    (0, log_1.logDebug)('send record error:', e);\n                    reject(e);\n                }\n            }));\n        });\n    }\n    sendRecordContent(content, type, action) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c;\n            let location = (_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.location.href;\n            let language = (_b = (0, url_1.getWindow)()) === null || _b === void 0 ? void 0 : _b.navigator.language;\n            let ua = (_c = (0, url_1.getWindow)()) === null || _c === void 0 ? void 0 : _c.navigator.userAgent;\n            let platform = this.reportPlatform;\n            let reportItem = {\n                uuid: this.currentUUID,\n                version: this.currentVersion,\n                content: content,\n                action: action,\n                side: this.currentSide,\n                timestamp: new Date().getTime(),\n                url: location,\n                lang: language,\n                type: type,\n                platform: platform,\n                \"user-agent\": ua\n            };\n            yield this.markRecordItem(reportItem);\n            yield this.sendRecord(reportItem);\n        });\n    }\n    sendCachedRecords() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let sendList = this.recordList.map(record => this.sendRecord(record));\n                (0, log_1.logDebug)('[REPORT] submit & clean recorded caches begin @', new Date().toUTCString());\n                Promise.allSettled(sendList).then((results) => {\n                    (0, log_1.logDebug)('[REPORT] submit & clean recorded caches ends @', new Date().toUTCString());\n                    let keepIndex = [];\n                    results.forEach((result, index) => {\n                        if (result.status == \"rejected\") {\n                            keepIndex.push(index);\n                        }\n                    });\n                    this.recordList = this.recordList.filter((_, index) => !keepIndex.includes(index));\n                    this.storage.setItem(this.recordCacheKey, this.recordList).then(function (value) {\n                        resolve();\n                    }).catch(function (err) {\n                        reject(err);\n                    });\n                });\n            }));\n        });\n    }\n    markRecordItem(item) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.recordList.push(item);\n            if (this.recordList.length > MAX_LIMIT_REPORTCOUNT) {\n                let offset = this.recordList.length - MAX_LIMIT_REPORTCOUNT;\n                this.recordList.splice(0, offset);\n            }\n            return new Promise((resolve, reject) => {\n                this.storage.setItem(this.recordCacheKey, this.recordList).then(function (value) {\n                    resolve(item);\n                }).catch(function (err) {\n                    reject(err);\n                });\n            });\n        });\n    }\n    markRecord(content, type, action, side) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c;\n            let location = (_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.location.href;\n            let language = (_b = (0, url_1.getWindow)()) === null || _b === void 0 ? void 0 : _b.navigator.language;\n            let platform = this.reportPlatform;\n            let ua = (_c = (0, url_1.getWindow)()) === null || _c === void 0 ? void 0 : _c.navigator.userAgent;\n            let reportItem = {\n                uuid: this.currentUUID,\n                version: this.currentVersion,\n                content: content,\n                action: action,\n                side: side,\n                timestamp: new Date().getTime(),\n                url: location,\n                lang: language,\n                type: type,\n                platform: platform,\n                \"user-agent\": ua\n            };\n            return yield this.markRecordItem(reportItem);\n        });\n    }\n}\nexports.OKXReporter = OKXReporter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Report_WalletType_Key = exports.Report_Proceed_QRCode_Click = exports.Report_ChooseType_Download_Click = exports.Report_ChooseType_ConnectWallet_Click = exports.Report_Proceed_Retry_Click = exports.Report_ChooseType_ConnectWallet_View = exports.Report_Loading_ConnectWallet_View = exports.Report_Proceed_QRCode_View = exports.Report_Proceed_Proceed_View = void 0;\nexports.Report_Proceed_Proceed_View = \"OKXConnectSDK_Proceed_Proceed_View\";\nexports.Report_Proceed_QRCode_View = \"OKXConnectSDK_Proceed_QRCode_View\";\nexports.Report_Loading_ConnectWallet_View = \"OKXConnectSDK_Loading_ConnectWallet_View\";\nexports.Report_ChooseType_ConnectWallet_View = \"OKXConnectSDK_ChooseType_ConnectWallet_View\";\nexports.Report_Proceed_Retry_Click = \"OKXConnectSDK_Proceed_Retry_Click\";\nexports.Report_ChooseType_ConnectWallet_Click = \"OKXConnectSDK_ChooseType_ConnectWallet_Click\";\nexports.Report_ChooseType_Download_Click = \"OKXConnectSDK_ChooseType_Download_Click\";\nexports.Report_Proceed_QRCode_Click = \"OKXConnectSDK_Proceed_QRCode_Click\";\nexports.Report_WalletType_Key = 'wallet_type';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.safeJsonParse = safeJsonParse;\nexports.safeJsonStringify = safeJsonStringify;\nconst log_1 = require(\"./log\");\nconst JSONStringify = (data) => JSON.stringify(data, (_, value) => (typeof value === \"bigint\" ? value.toString() + \"n\" : value));\n/*\n  Function to parse JSON.\n  If JSON has values in our custom format BigInt (strings with \"n\" character at the end), we just parse them to BigInt values.\n  If JSON has big number values, but not in our custom format, we copy it, and in a copy we convert those values to our custom format,\n  then parse them to BigInt values.\n  Other values (not big numbers and not our custom format BigInt values) are not affected and parsed as native JSON.parse() would parse them.\n*/\nconst JSONParse = (json) => {\n    /*\n      Big numbers are found and marked using Regex with this condition:\n      Number's length is bigger than 16 || Number's length is 16 and any numerical digit of the number is greater than that of the Number.MAX_SAFE_INTEGER\n      Additionally, it skips values that are strings (between double quotes).\n      */\n    // prettier-ignore\n    // eslint-disable-next-line no-useless-escape\n    const numbersBiggerThanMaxInt = /:(\\b\\d{17,}|\\b(?:[9](?:[1-9]07199254740991|0[1-9]7199254740991|00[8-9]199254740991|007[2-9]99254740991|007199[3-9]54740991|0071992[6-9]4740991|00719925[5-9]740991|007199254[8-9]40991|0071992547[5-9]0991|00719925474[1-9]991|00719925474099[2-9])))(?=[,\\}\\]]|$)/g;\n    const serializedData = json.replace(numbersBiggerThanMaxInt, (match) => `\"${match}n\"`);\n    return JSON.parse(serializedData, (_, value) => {\n        const isCustomFormatBigInt = typeof value === \"string\" && value.match(/^\\d+n$/);\n        if (isCustomFormatBigInt)\n            return BigInt(value.substring(0, value.length - 1));\n        return value;\n    });\n};\nfunction safeJsonParse(value) {\n    if (typeof value !== \"string\") {\n        (0, log_1.logDebug)(value);\n        throw new Error(`Cannot safe json parse value of type ${typeof value}`);\n    }\n    try {\n        return JSONParse(value);\n    }\n    catch (e) {\n        // eslint-disable-next-line no-console\n        console.error(\"safeJsonParse error:\", e);\n        return value;\n    }\n}\nfunction safeJsonStringify(value) {\n    return typeof value === \"string\" ? value : JSONStringify(value) || \"\";\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.okxfromString = okxfromString;\nexports.okxtoString = okxtoString;\nexports.alloc = alloc;\nexports.allocUnsafe = allocUnsafe;\nconst basics_1 = require(\"multiformats/basics\");\nconst log_1 = require(\"../utils/log\");\nfunction okxfromString(string, encoding = 'utf8') {\n    const base = BASES[encoding];\n    (0, log_1.logDebug)(\"okxfromstring ====> \");\n    if (!base) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    return base.decoder.decode(`${base.prefix}${string}`);\n}\nfunction okxtoString(array, encoding = 'utf8') {\n    const base = BASES[encoding];\n    (0, log_1.logDebug)(\"okxtoString ====> \");\n    if (!base) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    return base.encoder.encode(array).substring(1);\n}\nfunction alloc(size = 0) {\n    return new Uint8Array(size);\n}\nfunction allocUnsafe(size = 0) {\n    return new Uint8Array(size);\n}\nfunction createCodec(name, prefix, encode, decode) {\n    return {\n        name,\n        prefix,\n        encoder: {\n            name,\n            prefix,\n            encode\n        },\n        decoder: { decode }\n    };\n}\nconst string = createCodec('utf8', 'u', buf => {\n    const decoder = new TextDecoder('utf8');\n    return 'u' + decoder.decode(buf);\n}, str => {\n    const encoder = new TextEncoder();\n    return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', buf => {\n    let result = 'a';\n    for (let i = 0; i < buf.length; i++) {\n        let bufNum = buf[i];\n        if (bufNum && String.fromCharCode(bufNum)) {\n            result += String.fromCharCode(bufNum);\n        }\n    }\n    return result;\n}, str => {\n    str = str.substring(1);\n    const buf = allocUnsafe(str.length);\n    for (let i = 0; i < str.length; i++) {\n        buf[i] = str.charCodeAt(i);\n    }\n    return buf;\n});\nconst BASES = Object.assign({ utf8: string, 'utf-8': string, hex: basics_1.bases.base16, latin1: ascii, ascii: ascii, binary: ascii }, basics_1.bases);\n","\"use strict\";\nvar _a, _b, _c, _d, _e, _f, _g;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isTmaPlatform = isTmaPlatform;\nexports.isInTMA = isInTMA;\nexports.isInTelegramBrowser = isInTelegramBrowser;\nexports.sendExpand = sendExpand;\nexports.sendOpenTelegramLink = sendOpenTelegramLink;\nexports.versionCompare = versionCompare;\nconst url_1 = require(\"./url\");\nconst log_1 = require(\"./log\");\nconst protocol_1 = require(\"../protocol\");\nconst web_api_1 = require(\"./web-api\");\nlet initParams = {};\ntry {\n    let locationHash = location.hash.toString();\n    initParams = urlParseHashParams(locationHash);\n}\ncatch (e) { }\nlet tmaPlatform = 'unknown';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppPlatform) {\n    tmaPlatform = (_a = initParams.tgWebAppPlatform) !== null && _a !== void 0 ? _a : 'unknown';\n}\nif (tmaPlatform === 'unknown') {\n    const window = (0, url_1.getWindow)();\n    tmaPlatform = (_d = (_c = (_b = window === null || window === void 0 ? void 0 : window.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) === null || _c === void 0 ? void 0 : _c.platform) !== null && _d !== void 0 ? _d : 'unknown';\n}\nlet webAppVersion = '6.0';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppVersion) {\n    webAppVersion = initParams.tgWebAppVersion;\n}\nif (!webAppVersion) {\n    const window = (0, url_1.getWindow)();\n    webAppVersion = (_g = (_f = (_e = window === null || window === void 0 ? void 0 : window.Telegram) === null || _e === void 0 ? void 0 : _e.WebApp) === null || _f === void 0 ? void 0 : _f.version) !== null && _g !== void 0 ? _g : '6.0';\n}\n/**\n * Returns true if the app is running in TMA on the specified platform.\n * @param platforms\n */\nfunction isTmaPlatform(...platforms) {\n    return platforms.includes(tmaPlatform);\n}\n/**\n * Returns true if the app is running in TMA.\n */\nfunction isInTMA() {\n    var _a;\n    return tmaPlatform !== 'unknown' || !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n}\n/**\n * Returns true if the app is running in the Telegram browser.\n */\nfunction isInTelegramBrowser() {\n    var _a;\n    const isTelegramWebview = !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebview);\n    return (isInTMA() || isTelegramWebview) && tmaPlatform === 'unknown';\n}\n/**\n * Expand the app window.\n */\nfunction sendExpand() {\n    postEvent('web_app_expand', {});\n}\n/**\n * Opens link in TMA or in new tab and returns a function that closes the tab.\n * @param link The link to open.\n * @param fallback The function to call if the link can't be opened in TMA.\n */\nfunction sendOpenTelegramLink(link, fallback) {\n    const url = new URL(link);\n    if (url.protocol !== 'http:' && url.protocol !== 'https:') {\n        if (fallback) {\n            return fallback();\n        }\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Url protocol is not supported: ${url}`);\n    }\n    if (url.hostname !== 't.me') {\n        if (fallback) {\n            return fallback();\n        }\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Url host is not supported: ${url}`);\n    }\n    const pathFull = url.pathname + url.search;\n    if (isIframe() || versionAtLeast('6.1')) {\n        postEvent('web_app_open_tg_link', { path_full: pathFull });\n    }\n    else {\n        (0, web_api_1.openLinkBlank)('https://t.me' + pathFull);\n    }\n}\nfunction isIframe() {\n    try {\n        const window = (0, url_1.getWindow)();\n        if (!window) {\n            return false;\n        }\n        return window.parent != null && window !== window.parent;\n    }\n    catch (e) {\n        return false;\n    }\n}\nfunction postEvent(eventType, eventData) {\n    try {\n        const window = (0, url_1.getWindow)();\n        if (!window) {\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Can't post event to parent window: window is not defined`);\n        }\n        if (window.TelegramWebviewProxy !== undefined) {\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.TelegramWebviewProxy.postEvent(eventType, JSON.stringify(eventData));\n        }\n        else if (window.external && 'notify' in window.external) {\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.external.notify(JSON.stringify({ eventType: eventType, eventData: eventData }));\n        }\n        else if (isIframe()) {\n            const trustedTarget = '*';\n            const message = JSON.stringify({ eventType: eventType, eventData: eventData });\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.parent.postMessage(message, trustedTarget);\n        }\n        else {\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Can't post event to TMA`);\n        }\n    }\n    catch (e) {\n        (0, log_1.logError)(`Can't post event to parent window: ${e}`);\n    }\n}\nfunction urlParseHashParams(locationHash) {\n    locationHash = locationHash.replace(/^#/, '');\n    let params = {};\n    if (!locationHash.length) {\n        return params;\n    }\n    if (locationHash.indexOf('=') < 0 && locationHash.indexOf('?') < 0) {\n        params._path = urlSafeDecode(locationHash);\n        return params;\n    }\n    let qIndex = locationHash.indexOf('?');\n    if (qIndex >= 0) {\n        let pathParam = locationHash.substr(0, qIndex);\n        params._path = urlSafeDecode(pathParam);\n        locationHash = locationHash.substr(qIndex + 1);\n    }\n    let query_params = urlParseQueryString(locationHash);\n    for (let k in query_params) {\n        params[k] = query_params[k];\n    }\n    return params;\n}\nfunction urlSafeDecode(urlencoded) {\n    try {\n        urlencoded = urlencoded.replace(/\\+/g, '%20');\n        return decodeURIComponent(urlencoded);\n    }\n    catch (e) {\n        return urlencoded;\n    }\n}\nfunction urlParseQueryString(queryString) {\n    let params = {};\n    if (!queryString.length) {\n        return params;\n    }\n    let queryStringParams = queryString.split('&');\n    let i, param, paramName, paramValue;\n    for (i = 0; i < queryStringParams.length; i++) {\n        param = queryStringParams[i].split('=');\n        paramName = urlSafeDecode(param[0]);\n        paramValue = param[1] == null ? null : urlSafeDecode(param[1]);\n        params[paramName] = paramValue;\n    }\n    return params;\n}\nfunction versionCompare(v1, v2) {\n    if (typeof v1 !== 'string')\n        v1 = '';\n    if (typeof v2 !== 'string')\n        v2 = '';\n    let v1List = v1.replace(/^\\s+|\\s+$/g, '').split('.');\n    let v2List = v2.replace(/^\\s+|\\s+$/g, '').split('.');\n    let a, i, p1, p2;\n    a = Math.max(v1List.length, v2List.length);\n    for (i = 0; i < a; i++) {\n        p1 = parseInt(v1List[i]) || 0;\n        p2 = parseInt(v2List[i]) || 0;\n        if (p1 === p2)\n            continue;\n        if (p1 > p2)\n            return 1;\n        return -1;\n    }\n    return 0;\n}\nfunction versionAtLeast(ver) {\n    return versionCompare(webAppVersion, ver) >= 0;\n}\n","\"use strict\";\nvar _a, _b, _c, _d;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.removeUrlLastSlash = removeUrlLastSlash;\nexports.addPathToUrl = addPathToUrl;\nexports.getUniversalLink = getUniversalLink;\nexports.openOKXDeeplink = openOKXDeeplink;\nexports.openOKXUniversalLink = openOKXUniversalLink;\nexports.openOKXDeeplinkWithFallback = openOKXDeeplinkWithFallback;\nexports.getWindow = getWindow;\nexports.isTelegramUrl = isTelegramUrl;\nexports.encodeTelegramUrlParameters = encodeTelegramUrlParameters;\nexports.encodeConnectParams = encodeConnectParams;\nexports.encodeTWAConnectURLParams = encodeTWAConnectURLParams;\nexports.getAppWalletDeepLink = getAppWalletDeepLink;\nexports.getAppWalletShortDeepLink = getAppWalletShortDeepLink;\nexports.getTelegramWalletTWAUrl = getTelegramWalletTWAUrl;\nexports.openOKXTMAWalletlinkWithFallback = openOKXTMAWalletlinkWithFallback;\nexports.isInTMA = isInTMA;\nexports.isInTelegramBrowser = isInTelegramBrowser;\nexports.getOKXLink = getOKXLink;\nconst protocol_1 = require(\"../protocol\");\nconst log_1 = require(\"./log\");\nconst constants_1 = require(\"../protocol/constants\");\nconst utils_1 = require(\"./utils\");\nconst tma_api_1 = require(\"./tma-api\");\nfunction removeUrlLastSlash(url) {\n    if (url.slice(-1) === '/') {\n        return url.slice(0, -1);\n    }\n    return url;\n}\nfunction addPathToUrl(url, path) {\n    return removeUrlLastSlash(url) + '/' + path;\n}\nfunction getUniversalLink(deeplinkUrl) {\n    console.log(\"getUniversalLink deeplinkUrl:\", deeplinkUrl);\n    const replaceStrWithParam = `${protocol_1.standardDeeplink}?param=`;\n    if (deeplinkUrl.startsWith(replaceStrWithParam)) {\n        const cleanUrl = deeplinkUrl.replace(replaceStrWithParam, '');\n        console.log(\"getUniversalLink cleanUrl:\", cleanUrl);\n        const deeplinkEncodeUrl = encodeURIComponent(cleanUrl);\n        console.log(\"getUniversalLink standardUniversalLink:\", protocol_1.standardUniversalLink);\n        console.log(\"getUniversalLink `${shortUniversalLink}?param=${deeplinkEncodeUrl}`:\", `${constants_1.shortUniversalLink}?param=${deeplinkEncodeUrl}`);\n        return `${constants_1.shortUniversalLink}?param=${deeplinkEncodeUrl}`;\n    }\n    else if (deeplinkUrl == protocol_1.standardDeeplink) {\n        console.log(\"getUniversalLink shortUniversalLink:\", constants_1.shortUniversalLink);\n        return constants_1.shortUniversalLink;\n    }\n    else {\n        const deeplinkEncodeUrl = encodeURIComponent(deeplinkUrl);\n        console.log(\"getUniversalLink standardUniversalLink:\", protocol_1.standardUniversalLink);\n        return `${protocol_1.standardUniversalLink}?deeplink=${deeplinkEncodeUrl}`;\n    }\n}\nfunction openOKXDeeplink(deeplinkUrl) {\n    var _a;\n    const fullUrl = getUniversalLink(deeplinkUrl);\n    const isTelegram = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n    console.log(\"openOKXDeeplink fullUrl:\", fullUrl);\n    if (!(0, utils_1.isIos)()) {\n        let newWindow = null;\n        if (isTelegram) {\n            newWindow = window.open(deeplinkUrl, '_blank');\n        }\n        else {\n            window.location.href = deeplinkUrl;\n        }\n    }\n    else {\n        openOKXUniversalLink(fullUrl);\n    }\n}\nfunction openOKXUniversalLink(fullUrl) {\n    if (!(0, utils_1.isIos)()) {\n        // if (isTelegram) {\n        window.open(fullUrl, '_blank');\n        // } else {\n        //     window.location.href = fullUrl;\n        // }\n    }\n    else {\n        if (isInTMA()) {\n            window.open(fullUrl, '_blank');\n        }\n        else {\n            console.log(\"windowOpen[before]: \", Date.now());\n            if (window === null || window === void 0 ? void 0 : window.okxLogDebug) {\n                window.open(fullUrl, '_blank');\n            }\n            else {\n                window.open(fullUrl, '_self');\n            }\n            console.log(\"windowOpen[after]: \", Date.now());\n        }\n    }\n}\nfunction openOKXDeeplinkWithFallback(deeplinkUrl) {\n    var _a;\n    const fullUrl = getUniversalLink(deeplinkUrl);\n    const isTelegram = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n    console.log(\"openOKXDeeplinkWithFallback fullUrl:\", fullUrl);\n    let deepLinkOpened = false;\n    const timeoutDuration = 3000; // 1.5秒的等待时间\n    const downloadUrl = protocol_1.standardUniversalLink;\n    console.log(\"openOKXDeeplinkWithFallback standardUniversalLink:\", protocol_1.standardUniversalLink);\n    if (!(0, utils_1.isIos)()) {\n        let newWindow = null;\n        var fallbackToDownloadPage = () => {\n            if (!deepLinkOpened) {\n                if (newWindow) {\n                    newWindow.open(downloadUrl, '_self');\n                }\n                else {\n                    window.open(downloadUrl, '_blank');\n                }\n            }\n        };\n        if (isTelegram) {\n            newWindow = window.open(deeplinkUrl, '_blank');\n        }\n        else {\n            window.location.href = deeplinkUrl;\n        }\n        setTimeout(fallbackToDownloadPage, timeoutDuration);\n        window.addEventListener('blur', () => {\n            deepLinkOpened = true;\n        }, { once: true });\n        document.addEventListener('visibilitychange', () => {\n            if (document.visibilityState === 'hidden') {\n                deepLinkOpened = true;\n            }\n        });\n    }\n    else {\n        if (isTelegram) {\n            window.open(fullUrl, '_blank');\n        }\n        else {\n            console.log(\"windowOpen[before]: \", Date.now());\n            if (window === null || window === void 0 ? void 0 : window.okxLogDebug) {\n                window.open(fullUrl, '_blank');\n            }\n            else {\n                window.open(fullUrl, '_self');\n            }\n            console.log(\"windowOpen[after]: \", Date.now());\n        }\n    }\n}\nfunction getWindow() {\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    return undefined;\n}\nfunction isTelegramUrl(link) {\n    if (!link) {\n        return false;\n    }\n    const url = new URL(link);\n    return url.protocol === 'tg:' || url.hostname === 't.me';\n}\nfunction encodeTelegramUrlParameters(parameters) {\n    let encodedParameters = parameters;\n    encodedParameters = encodedParameters.replace(/\\./g, '%2E');\n    encodedParameters = encodedParameters.replace(/-/g, '%2D');\n    encodedParameters = encodedParameters.replace(/_/g, '%5F');\n    encodedParameters = encodedParameters.replace(/&/g, '-');\n    encodedParameters = encodedParameters.replace(/=/g, '__');\n    encodedParameters = encodedParameters.replace(/%/g, '--');\n    return encodedParameters;\n}\nfunction encodeConnectParams(connectRequest) {\n    const connectRequestStr = JSON.stringify(connectRequest);\n    (0, log_1.logDebug)(\"url encodeConnectParams connectRequestStr \", connectRequestStr);\n    const utf8Array = new TextEncoder().encode(connectRequestStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    // .replace(/\\+/g, '-')\n    // .replace(/\\//g, '_')\n    // .replace(/=+$/, ''); //Compatible with older versions of iOS. Cannot be added directly  (Base64 URL Safe)\n    (0, log_1.logDebug)(\"url encodeConnectParams base64Encoded \", base64Encoded);\n    return base64Encoded;\n}\nfunction encodeTWAConnectURLParams(connectRequest) {\n    const connectRequestStr = JSON.stringify({ topic: connectRequest.topic, clientId: connectRequest.clientId });\n    (0, log_1.logDebug)(\"url encodeConnectParams connectRequestStr\", connectRequestStr);\n    const utf8Array = new TextEncoder().encode(connectRequestStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    return base64Encoded;\n}\nfunction getAppWalletDeepLink(connectParam) {\n    return `${protocol_1.standardDeeplink}?param=${connectParam}`;\n}\nfunction getAppWalletShortDeepLink(topic, clientId) {\n    return `${constants_1.shortUniversalLink}?topic=${topic}${(0, utils_1.getLastSixMd5Hash)(clientId)}`;\n}\n//  make telegram okx wallet TWA url\nfunction getTelegramWalletTWAUrl(connectParam, redirectStr, browserDebug = false) {\n    let base64Content = { okxconnect: \"\", redirect: \"\", extraparams: \"\" };\n    if (connectParam) {\n        base64Content.okxconnect = connectParam;\n    }\n    if (redirectStr) {\n        base64Content.redirect = redirectStr;\n    }\n    let base64ContentStr = JSON.stringify(base64Content);\n    const utf8Array = new TextEncoder().encode(base64ContentStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    const urlSafeBase64 = (0, utils_1.toSafeBase64FromBase64)(base64Encoded);\n    (0, log_1.logDebug)('[TWA] open link:', base64Content, base64Encoded);\n    if (connectParam || redirectStr) {\n        if (browserDebug) {\n            return `http://localhost:5173?tgWebAppStartParam=${urlSafeBase64}`;\n        }\n        else {\n            return `https://t.me/${constants_1.tgwalletName}/start?startapp=${urlSafeBase64}`;\n        }\n    }\n    if (browserDebug) {\n        return \"http://localhost:5173\";\n    }\n    else {\n        return `https://t.me/${constants_1.tgwalletName}/start`;\n    }\n}\n//  open TWA url in telegram\nfunction openOKXTMAWalletlinkWithFallback(twaDeepLink) {\n    var _a, _b, _c, _d, _e;\n    (0, log_1.logDebug)('[TWA] open link:', twaDeepLink, \"isInTMA ==> \", isInTMA());\n    if (!isInTMA()) {\n        window.open(twaDeepLink, '_blank');\n    }\n    else {\n        if ((_b = (_a = getWindow()) === null || _a === void 0 ? void 0 : _a.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) {\n            (_e = (_d = (_c = getWindow()) === null || _c === void 0 ? void 0 : _c.Telegram) === null || _d === void 0 ? void 0 : _d.WebApp) === null || _e === void 0 ? void 0 : _e.openTelegramLink(twaDeepLink);\n        }\n        else {\n            (0, tma_api_1.sendOpenTelegramLink)(twaDeepLink);\n        }\n    }\n}\n/**\n * Returns true if the app is running in TMA.\n */\nfunction urlSafeDecode(urlencoded) {\n    try {\n        urlencoded = urlencoded.replace(/\\+/g, '%20');\n        return decodeURIComponent(urlencoded);\n    }\n    catch (e) {\n        return urlencoded;\n    }\n}\nfunction urlParseQueryString(queryString) {\n    let params = {};\n    if (!queryString.length) {\n        return params;\n    }\n    let queryStringParams = queryString.split('&');\n    let i, param, paramName, paramValue;\n    for (i = 0; i < queryStringParams.length; i++) {\n        param = queryStringParams[i].split('=');\n        paramName = urlSafeDecode(param[0]);\n        paramValue = param[1] == null ? null : urlSafeDecode(param[1]);\n        params[paramName] = paramValue;\n    }\n    return params;\n}\nfunction urlParseHashParams(locationHash) {\n    locationHash = locationHash.replace(/^#/, '');\n    let params = {};\n    if (!locationHash.length) {\n        return params;\n    }\n    if (locationHash.indexOf('=') < 0 && locationHash.indexOf('?') < 0) {\n        params._path = urlSafeDecode(locationHash);\n        return params;\n    }\n    let qIndex = locationHash.indexOf('?');\n    if (qIndex >= 0) {\n        let pathParam = locationHash.substr(0, qIndex);\n        params._path = urlSafeDecode(pathParam);\n        locationHash = locationHash.substr(qIndex + 1);\n    }\n    let query_params = urlParseQueryString(locationHash);\n    for (let k in query_params) {\n        params[k] = query_params[k];\n    }\n    return params;\n}\nlet initParams = {};\ntry {\n    let locationHash = location.hash.toString();\n    initParams = urlParseHashParams(locationHash);\n}\ncatch (e) { }\nlet tmaPlatform = 'unknown';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppPlatform) {\n    tmaPlatform = (_a = initParams.tgWebAppPlatform) !== null && _a !== void 0 ? _a : 'unknown';\n}\nif (tmaPlatform === 'unknown') {\n    const window = getWindow();\n    tmaPlatform = (_d = (_c = (_b = window === null || window === void 0 ? void 0 : window.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) === null || _c === void 0 ? void 0 : _c.platform) !== null && _d !== void 0 ? _d : 'unknown';\n}\nfunction isInTMA() {\n    var _a;\n    return tmaPlatform !== 'unknown' || !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n}\n/**\n * Returns true if the app is running in the Telegram browser.\n */\nfunction isInTelegramBrowser() {\n    var _a;\n    const isTelegramWebview = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebview);\n    return (isInTMA() || isTelegramWebview) && tmaPlatform === 'unknown';\n}\nfunction getOKXLink(connectRequest, useMini = false, tmaReturnUrl) {\n    (0, log_1.logDebug)(`url  getOKXLink() called connectRequest==> ${JSON.stringify(connectRequest)}  useMini=> ${useMini}  tmaReturnUrl==> ${tmaReturnUrl}`);\n    if (useMini) {\n        var encodeTGParams = encodeTWAConnectURLParams(connectRequest);\n        return getTelegramWalletTWAUrl(encodeTGParams, tmaReturnUrl !== null && tmaReturnUrl !== void 0 ? tmaReturnUrl : \"back\");\n    }\n    else {\n        if ((0, utils_1.useShortLink)()) {\n            return getAppWalletShortDeepLink(connectRequest.topic, connectRequest.clientId);\n        }\n        else {\n            const base64Encoded = encodeConnectParams(connectRequest);\n            return `${protocol_1.standardDeeplink}?param=${base64Encoded}`;\n        }\n    }\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isValidObject = exports.RANDOM_LENGTH = exports.isBrowser = exports.resolveLocalStorage = exports.hasLocalStorage = exports.hasBuiltInWebSocket = exports.resolveWebSocketImplementation = void 0;\nexports.hexToByteArray = hexToByteArray;\nexports.toHexString = toHexString;\nexports.concatUint8Arrays = concatUint8Arrays;\nexports.splitToUint8Arrays = splitToUint8Arrays;\nexports.base64encode = base64encode;\nexports.base64decode = base64decode;\nexports.checkWSUrl = checkWSUrl;\nexports.hashKey = hashKey;\nexports.generateRandomBytes32 = generateRandomBytes32;\nexports.generateTopic = generateTopic;\nexports.isIos = isIos;\nexports.getLastSixMd5Hash = getLastSixMd5Hash;\nexports.toSafeBase64FromBase64 = toSafeBase64FromBase64;\nexports.useShortLink = useShortLink;\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst tweetnacl_util_1 = __importDefault(require(\"tweetnacl-util\"));\nconst to_string_1 = require(\"uint8arrays/to-string\");\nconst sha256_1 = require(\"@stablelib/sha256\");\nconst safejson_1 = require(\"./safejson\");\nconst log_1 = require(\"./log\");\nconst stringUtils_1 = require(\"../utils/stringUtils\");\nconst crypto_js_1 = __importDefault(require(\"crypto-js\"));\nconst BASE16 = \"base16\";\nfunction hexToByteArray(hexString) {\n    if (hexString.length % 2 !== 0) {\n        throw new Error(`Cannot convert ${hexString} to bytesArray`);\n    }\n    const result = new Uint8Array(hexString.length / 2);\n    for (let i = 0; i < hexString.length; i += 2) {\n        result[i / 2] = parseInt(hexString.slice(i, i + 2), 16);\n    }\n    return result;\n}\nfunction toHexString(byteArray) {\n    let hexString = '';\n    byteArray.forEach(byte => {\n        hexString += ('0' + (byte & 0xff).toString(16)).slice(-2);\n    });\n    return hexString;\n}\nfunction concatUint8Arrays(buffer1, buffer2) {\n    const mergedArray = new Uint8Array(buffer1.length + buffer2.length);\n    mergedArray.set(buffer1);\n    mergedArray.set(buffer2, buffer1.length);\n    return mergedArray;\n}\nfunction splitToUint8Arrays(array, index) {\n    if (index >= array.length) {\n        throw new Error('Index is out of buffer');\n    }\n    const subArray1 = array.slice(0, index);\n    const subArray2 = array.slice(index);\n    return [subArray1, subArray2];\n}\nfunction encodeUint8Array(value, urlSafe) {\n    const encoded = tweetnacl_util_1.default.encodeBase64(value);\n    if (!urlSafe) {\n        return encoded;\n    }\n    return encodeURIComponent(encoded);\n}\nfunction decodeToUint8Array(value, urlSafe) {\n    if (urlSafe) {\n        value = decodeURIComponent(value);\n    }\n    return tweetnacl_util_1.default.decodeBase64(value);\n}\nfunction base64encode(value, urlSafe) {\n    let uint8Array;\n    if (value instanceof Uint8Array) {\n        uint8Array = value;\n    }\n    else {\n        if (typeof value !== 'string') {\n            value = (0, safejson_1.safeJsonStringify)(value);\n        }\n        uint8Array = tweetnacl_util_1.default.decodeUTF8(value);\n    }\n    return encodeUint8Array(uint8Array, urlSafe);\n}\nfunction base64decode(value, urlSafe) {\n    const decodedUint8Array = decodeToUint8Array(value, urlSafe);\n    return {\n        toString() {\n            return tweetnacl_util_1.default.encodeUTF8(decodedUint8Array);\n        },\n        toObject() {\n            try {\n                return (0, safejson_1.safeJsonParse)(tweetnacl_util_1.default.encodeUTF8(decodedUint8Array));\n            }\n            catch (e) {\n                return null;\n            }\n        },\n        toUint8Array() {\n            return decodedUint8Array;\n        }\n    };\n}\nfunction checkWSUrl(url) {\n    const match = url.match(new RegExp(/^\\w+:/, \"gi\"));\n    if (!match || !match.length) {\n        return false;\n    }\n    let scheme = match[0];\n    if (scheme === undefined) {\n        return false;\n    }\n    return new RegExp(\"^wss?:\").test(scheme);\n}\nconst resolveWebSocketImplementation = () => {\n    if (typeof WebSocket !== \"undefined\") {\n        return WebSocket;\n    }\n    else if (typeof global !== \"undefined\" && typeof global.WebSocket !== \"undefined\") {\n        return global.WebSocket;\n    }\n    else if (typeof window !== \"undefined\" && typeof window.WebSocket !== \"undefined\") {\n        return window.WebSocket;\n    }\n    else if (typeof self !== \"undefined\" && typeof self.WebSocket !== \"undefined\") {\n        return self.WebSocket;\n    }\n    return WebSocket;\n    //\n    // return require(\"ws\");\n};\nexports.resolveWebSocketImplementation = resolveWebSocketImplementation;\nconst hasBuiltInWebSocket = () => typeof WebSocket !== \"undefined\" ||\n    (typeof global !== \"undefined\" && typeof global.WebSocket !== \"undefined\") ||\n    (typeof window !== \"undefined\" && typeof window.WebSocket !== \"undefined\") ||\n    (typeof self !== \"undefined\" && typeof self.WebSocket !== \"undefined\");\nexports.hasBuiltInWebSocket = hasBuiltInWebSocket;\nconst hasLocalStorage = () => (typeof global !== \"undefined\" && (typeof global.localStorage !== \"undefined\")) ||\n    (typeof window !== \"undefined\" && typeof window.localStorage !== \"undefined\");\nexports.hasLocalStorage = hasLocalStorage;\nconst resolveLocalStorage = () => {\n    if (typeof global !== \"undefined\" && typeof global.localStorage !== \"undefined\") {\n        return global.localStorage;\n    }\n    else if (typeof window !== \"undefined\" && typeof window.localStorage !== \"undefined\") {\n        return window.localStorage;\n    }\n    return localStorage;\n};\nexports.resolveLocalStorage = resolveLocalStorage;\nconst isBrowser = () => typeof window !== \"undefined\";\nexports.isBrowser = isBrowser;\nexports.RANDOM_LENGTH = 32;\nfunction hashKey(key, encode = BASE16) {\n    (0, log_1.logDebug)(`hash key called ${key}`);\n    const result = (0, sha256_1.hash)((0, stringUtils_1.okxfromString)(key, encode));\n    return (0, to_string_1.toString)(result, encode);\n}\nfunction generateRandomBytes32() {\n    return tweetnacl_1.default.randomBytes(exports.RANDOM_LENGTH);\n}\nfunction generateTopic() {\n    let randomBytes32 = generateRandomBytes32();\n    (0, log_1.logDebug)(`generate topic called ${randomBytes32}`);\n    return hashKey((0, to_string_1.toString)(randomBytes32, BASE16));\n}\nconst isValidObject = (obj) => Object.getPrototypeOf(obj) === Object.prototype && Object.keys(obj).length;\nexports.isValidObject = isValidObject;\nfunction isIos() {\n    const userAgent = navigator.userAgent;\n    const maxTouchPoints = navigator.maxTouchPoints || 0;\n    // 检测 iPhone、iPod 和传统的 iPad\n    const isIOSDevice = /iPad|iPhone|iPod/.test(userAgent) && !window.MSStream;\n    // 针对 iPadOS 13 及以上的设备进行额外判断\n    const isIPadOS = (userAgent.includes('Mac') && maxTouchPoints > 1);\n    (0, log_1.logDebug)(`utils isIos >>>isIOSDevice: ${isIOSDevice}    >> isIPadOS: ${isIPadOS}`);\n    // 如果是 iOS 设备或者是 iPadOS 设备，返回 true\n    return isIOSDevice || isIPadOS;\n}\nfunction getLastSixMd5Hash(input) {\n    // 生成 MD5 哈希\n    const hash = crypto_js_1.default.MD5(input).toString();\n    // 获取最后六位\n    return hash.slice(-6);\n}\nfunction toSafeBase64FromBase64(base64) {\n    return base64\n        .replace(/=/g, \"\")\n        .replace(/\\+/g, \"-\")\n        .replace(/\\//g, \"_\");\n}\nfunction useShortLink() {\n    return !!window.useShortLink;\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.openLink = openLink;\nexports.openLinkBlank = openLinkBlank;\nexports.openDeeplinkWithFallback = openDeeplinkWithFallback;\nexports.isMobileUserAgent = isMobileUserAgent;\nexports.getUserAgent = getUserAgent;\nexports.isOS = isOS;\nexports.isBrowser = isBrowser;\nconst ua_parser_js_1 = __importDefault(require(\"ua-parser-js\"));\nconst log_1 = require(\"./log\");\nfunction openLink(href, target = '_self') {\n    (0, log_1.logDebug)('openLink', href, target);\n    window.open(href, target, 'noopener noreferrer');\n}\nfunction openLinkBlank(href) {\n    openLink(href, '_blank');\n}\nfunction openDeeplinkWithFallback(href, fallback) {\n    const doFallback = () => {\n        if (isBrowser('safari') || (isOS('android') && isBrowser('firefox'))) {\n            // Safari does not support fallback to direct link.\n            return;\n        }\n        fallback();\n    };\n    const fallbackTimeout = setTimeout(() => doFallback(), 500);\n    window.addEventListener('blur', () => clearTimeout(fallbackTimeout), { once: true });\n    openLink(href, '_self');\n}\nfunction isMobileUserAgent() {\n    let check = false;\n    (function (a) {\n        if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) ||\n            /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.slice(0, 4)))\n            check = true;\n    })(navigator.userAgent ||\n        navigator.vendor ||\n        window.opera);\n    return check;\n}\nfunction getUserAgent() {\n    var _a, _b, _c;\n    const results = new ua_parser_js_1.default().getResult();\n    const osName = (_a = results.os.name) === null || _a === void 0 ? void 0 : _a.toLowerCase();\n    const deviceModel = (_b = results.device.model) === null || _b === void 0 ? void 0 : _b.toLowerCase();\n    let os;\n    switch (true) {\n        case deviceModel === 'ipad':\n            os = 'ipad';\n            break;\n        case osName === 'ios':\n            os = 'ios';\n            break;\n        case osName === 'android':\n            os = 'android';\n            break;\n        case osName === 'mac os':\n            os = 'macos';\n            break;\n        case osName === 'linux':\n            os = 'linux';\n            break;\n        case osName === null || osName === void 0 ? void 0 : osName.includes('windows'):\n            os = 'windows';\n            break;\n    }\n    const browserName = (_c = results.browser.name) === null || _c === void 0 ? void 0 : _c.toLowerCase();\n    let browser;\n    switch (true) {\n        case browserName === 'chrome':\n            browser = 'chrome';\n            break;\n        case browserName === 'firefox':\n            browser = 'firefox';\n            break;\n        case browserName === null || browserName === void 0 ? void 0 : browserName.includes('safari'):\n            browser = 'safari';\n            break;\n        case browserName === null || browserName === void 0 ? void 0 : browserName.includes('opera'):\n            browser = 'opera';\n            break;\n    }\n    return {\n        os,\n        browser\n    };\n}\nfunction isOS(...os) {\n    return os.includes(getUserAgent().os);\n}\nfunction isBrowser(...browser) {\n    return browser.includes(getUserAgent().browser);\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXBtcProvider = void 0;\nconst _1 = require(\"./\");\nclass OKXBtcProvider {\n    constructor(generator) {\n        this.caip = [\n            \"btc:mainnet\",\n            \"fractal:mainnet\"\n        ];\n        this.provider = generator.getUniversalProvider();\n    }\n    getAddressForChainId(chainId) {\n        var _a, _b;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let accounts = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['btc']) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        });\n        if (accounts == undefined || accounts.length < 0) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `no connected account`);\n        }\n        let account = accounts[0];\n        const address = account.split(':')[2];\n        return address;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let extra = (_c = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[ns]) === null || _b === void 0 ? void 0 : _b.extra) === null || _c === void 0 ? void 0 : _c[chainId];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n        }\n        return {\n            address: this.getAddressForChainId(chainId),\n            publicKey: publicKey\n        };\n    }\n    /**\n     *\n     * @param signStr\n     * @param chainId\n     * @param type\n     * @returns\n     */\n    signMessage(chainId, signStr, type) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (signStr === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signMessage parmas error`);\n            }\n            let params = {\n                signStr: signStr,\n                from: this.getAddressForChainId(chainId)\n            };\n            if (type) {\n                params.type = type;\n            }\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signMessage\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param toAddress\n     * @param satoshis\n     * @param options { feeRate: 0 }\n     * @returns\n     */\n    sendBitcoin(chainId, toAddress, satoshis, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            let params = {\n                from: this.getAddressForChainId(chainId),\n                to: toAddress,\n                value: (satoshis / 100000000).toString(),\n            };\n            if (options === null || options === void 0 ? void 0 : options.feeRate) {\n                params[\"satBytes\"] = options.feeRate.toString();\n            }\n            let result = yield this.send(chainId, params);\n            if (result !== undefined && ('txhash' in result)) {\n                // return txhash directly\n                return result.txhash;\n            }\n            // or return unexpected result\n            return result;\n        });\n    }\n    //  from - string：当前连接的钱包的 BTC 地址\n    //  to - string：接受 BTC 的地址\n    //  value - string：发送 BTC 的数量\n    //  satBytes - string： (可选) 自定义费率\n    //  memo - string： (可选) 指定 outputs OP_RETURN 内容 示例\n    //  memoPos - number： (可选) 指定 outputs OP_RETURN 输出位置，如果传了 memo 则必须传入 memoPos 指定位置，否则 memo 不生效\n    send(chainId, input) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (!this.checkParameters(input, 'to', 'value')) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send parmas  error`);\n            }\n            input[\"from\"] = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: 'btc_send',\n                    params: input\n                }, chainId);\n                if ('result' in ret) {\n                    return {\n                        txhash: ret.result\n                    };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param psbtHex string 要签名的 psbt 的十六进制字符串\n     * @param options object { autoFinalized: 0 }\n     */\n    signPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.signPsbts(chainId, [psbtHex], [options]).then(psbtResults => {\n                    let results = JSON.parse(psbtResults);\n                    resolve(results[0]);\n                }).catch(error => {\n                    reject(error);\n                });\n            });\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHexs Array\n     * @param options Array [{ autoFinalized: 0 }]\n     * @returns\n     */\n    signPsbts(chainId, psbtHexs, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHexs === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHexs: psbtHexs,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signPsbts\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHex string\n     * @param options object\n     * @returns\n     */\n    signAndPushPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHex === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHex: psbtHex,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signAndPushPsbt\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return JSON.parse(ret.result);\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param address string, receiver address\n     * @param inscriptionId string, 铭文 ID + 协议，没有传协议则默认是 Ordinals NFT ，目前仅支持 Ordinals 及 Atomicals 协议\n     * @param options object, { feeRate: number } custom rates\n     */\n    sendInscription(chainId, address, inscriptionId, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let extension = {\n                address: address,\n                inscriptionId: inscriptionId,\n                options: options\n            };\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (address === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method sendInscription params error`);\n            }\n            var feeRate = 0;\n            if (options && ('feeRate' in options)) {\n                feeRate = options.feeRate;\n            }\n            let coinId = '';\n            let from = this.getAddressForChainId(chainId);\n            var protocolId = 7; //ProtocolIdBRCNFT\n            if (inscriptionId !== 'undefined') {\n                let atomicSuffix = \"-Atomicals\";\n                let ordinalsSuffix = \"-Ordinals\";\n                if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(atomicSuffix.toLowerCase())) {\n                    protocolId = 8; //WXRCProtocolIdARCNFT\n                    inscriptionId = this.removeSuffix(inscriptionId, atomicSuffix);\n                }\n                else if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(ordinalsSuffix.toLowerCase())) {\n                    inscriptionId = this.removeSuffix(inscriptionId, ordinalsSuffix);\n                }\n            }\n            let params = {\n                scenario: 5,\n                feeRate: feeRate,\n                txType: \"20\",\n                to: address,\n                batchBean: [\n                    {\n                        coinAmount: \"1\",\n                        nftId: inscriptionId,\n                        protocolId: protocolId,\n                        coinId: coinId,\n                        inscriptionId: \"\",\n                        from: from\n                    }\n                ],\n                extension: extension\n            };\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_sendInscription\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    removeSuffix(str, suffix) {\n        if (str.endsWith(suffix)) {\n            return str.slice(0, str.length - suffix.length);\n        }\n        return str;\n    }\n    checkParameters(params, ...keys) {\n        var unexistKeys = [];\n        keys.forEach(key => {\n            if (!(`${key}` in params)) {\n                unexistKeys.push(key);\n            }\n        });\n        if (unexistKeys.length > 0) {\n            console.log('not find key: ', unexistKeys.join(\",\"));\n            return false;\n        }\n        return true;\n    }\n    /**\n     *\n     * @param chainId eg. btc:mainnet\n     * @returns eg. btc\n     */\n    checkChainId(chainId) {\n        if (this.caip.includes(chainId)) {\n            let [namespaceKey, _] = chainId.split(\":\");\n            return namespaceKey;\n        }\n        return undefined;\n    }\n}\nexports.OKXBtcProvider = OKXBtcProvider;\nexports.default = OKXBtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCosmosProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXCosmosProvider {\n    constructor(provider) {\n        this.provider = provider.getUniversalProvider();\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e;\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[core_1.NameSpaceKeyCosmos]) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        let extra = (_e = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces[core_1.NameSpaceKeyCosmos]) === null || _d === void 0 ? void 0 : _d.extra) === null || _e === void 0 ? void 0 : _e[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n            console.log(\"aptos_publicKey\", publicKey);\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            algo: \"secp256k1\",\n            address: address,\n            bech32Address: address,\n            pubKey: this.hexToUint8Array(publicKey),\n        };\n    }\n    signArbitrary(chainId, signerAddress, data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const base64Encoded = window.btoa(data);\n            const signDoc = {\n                chain_id: \"\",\n                account_number: \"0\",\n                sequence: \"0\",\n                fee: {\n                    gas: \"0\",\n                    amount: []\n                },\n                msgs: [{\n                        \"type\": \"sign/MsgSignData\",\n                        \"value\": {\n                            \"signer\": signerAddress,\n                            \"data\": base64Encoded\n                        }\n                    }],\n                memo: \"\"\n            };\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signArbitrary\",\n                \"params\": {\n                    \"signer\": signerAddress,\n                    \"chain_id\": chainId.split(\":\")[1],\n                    \"data\": signDoc\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    if (typeof ret.result == \"string\") {\n                        return JSON.parse(ret.result);\n                    }\n                    else {\n                        return ret.result;\n                    }\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signAmino(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (signDoc.msgs[0].type == \"sign/MsgSignData\") {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signArbitrary\",\n                    \"params\": {\n                        \"signer\": signerAddress,\n                        \"chain_id\": chainId.split(\":\")[1],\n                        \"data\": signDoc\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        return ret.result;\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    return error;\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                }\n            }\n            else {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signAmino\",\n                    \"params\": {\n                        \"signer\": signerAddress,\n                        \"chainId\": chainId.split(\":\")[1],\n                        \"sign_doc\": signDoc,\n                        \"signOptions\": signOptions\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        const resData = JSON.parse(ret.result);\n                        console.log(\"signdoc\", signDoc, resData.signDoc);\n                        signDoc.fee = resData.signDoc.fee;\n                        return { signed: signDoc, signature: resData.signature };\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                    return error;\n                }\n            }\n        });\n    }\n    signDirect(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const object = {\n                bodyBytes: this.bufferToHex(signDoc.bodyBytes),\n                authInfoBytes: this.bufferToHex(signDoc.authInfoBytes),\n                chainId: signDoc.chainId,\n                accountNumber: signDoc.accountNumber ? signDoc.accountNumber.toString() : null,\n                signOptions: signOptions ? signOptions : null\n            };\n            let data = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signDirect\",\n                \"params\": {\n                    \"signer\": signerAddress,\n                    \"chainId\": chainId.split(\":\")[1],\n                    \"sign_doc\": object,\n                }\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    const res = JSON.parse(ret.result);\n                    console.log(\"signdirect result\", res);\n                    signDoc.authInfoBytes = this.messageToBuffer(res.signDoc.authInfoBytes);\n                    return { signed: signDoc, signature: res.signature };\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    messageToBuffer(message) {\n        var buffer = Uint8Array.from([]);\n        try {\n            if (typeof message === \"string\") {\n                buffer = this.hexToUint8Array(message.replace(\"0x\", \"\"));\n            }\n            else {\n                buffer = Uint8Array.from(message);\n            }\n        }\n        catch (err) {\n            console.log(`messageToBuffer error: ${err}`);\n        }\n        return buffer;\n    }\n    bufferToHex(arr) {\n        let output = [...new Uint8Array(arr)]\n            .map(x => x.toString(16).padStart(2, '0'))\n            .join('');\n        return '0x' + output;\n    }\n    hexToUint8Array(hexString) {\n        if (hexString.length % 2 !== 0) {\n            throw \"Invalid hexString\";\n        }\n        var arrayBuffer = new Uint8Array(hexString.length / 2);\n        for (var i = 0; i < hexString.length; i += 2) {\n            var byteValue = parseInt(hexString.substr(i, 2), 16);\n            if (isNaN(byteValue)) {\n                throw \"Invalid hexString\";\n            }\n            arrayBuffer[i / 2] = byteValue;\n        }\n        return arrayBuffer;\n    }\n}\nexports.OKXCosmosProvider = OKXCosmosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTonProvider = void 0;\nconst _1 = require(\"./\");\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXTonProvider {\n    constructor(generator) {\n        this.statusChangeSubscriptions = [];\n        this.statusChangeErrorSubscriptions = [];\n        this.provider = generator.getUniversalProvider();\n        this.provider.on(\"connect\", () => {\n            let tonWallet = this.wallet();\n            (0, core_1.logDebug)(\"OKXTONProvider event connect:\", JSON.stringify(tonWallet));\n            this.statusChangeSubscriptions.forEach(callback => callback(tonWallet));\n        });\n        this.provider.on(\"reconnect\", () => {\n            let tonWallet = this.wallet();\n            (0, core_1.logDebug)(\"OKXTONProvider event reconnect:\", JSON.stringify(tonWallet));\n            this.statusChangeSubscriptions.forEach(callback => callback(tonWallet));\n        });\n        this.provider.on(\"disconnect\", () => {\n            (0, core_1.logDebug)(\"OKXTONProvider event disconnect:\");\n            this.statusChangeSubscriptions.forEach(callback => callback(null));\n        });\n        this.provider.on(\"connect_error\", (error) => {\n            (0, core_1.logDebug)(\"OKXTONProvider event connect_error:\", JSON.stringify(error));\n            this.statusChangeErrorSubscriptions.forEach(errorsHandler => errorsHandler(error));\n        });\n    }\n    connected() {\n        if (this.provider.connected()) {\n            return !!this.provider.session.namespaces[\"ton\"];\n        }\n        return false;\n    }\n    account() {\n        try {\n            if (!this.provider.session) {\n                return null;\n            }\n            let tonNameSpace = this.provider.session.namespaces['ton'];\n            if (!tonNameSpace || !tonNameSpace.payload || !tonNameSpace.payload.ton_addr) {\n                return null;\n            }\n            let ton_addr = tonNameSpace.payload.ton_addr;\n            return {\n                address: ton_addr.address,\n                chain: ton_addr.network,\n                walletStateInit: ton_addr.walletStateInit,\n                publicKey: ton_addr.publicKey,\n            };\n        }\n        catch (e) {\n            (0, core_1.logDebug)(\"OKXTONProvider account  error:\", JSON.stringify(e));\n            return null;\n        }\n    }\n    wallet() {\n        if (this.connected()) {\n            try {\n                let sessionWallet = this.provider.session.wallet;\n                let tonDeviceInfo = {\n                    platform: sessionWallet.platform,\n                    appName: sessionWallet.appName,\n                    appVersion: sessionWallet.appVersion,\n                    maxProtocolVersion: sessionWallet.maxProtocolVersion,\n                    features: ['ton_sendTransaction'],\n                };\n                const wallet = {\n                    device: tonDeviceInfo,\n                    provider: \"http\",\n                    account: this.account()\n                };\n                let tonNameSpace = this.provider.session.namespaces['ton'];\n                if (tonNameSpace && tonNameSpace.payload && tonNameSpace.payload.ton_proof) {\n                    wallet.connectItems = {\n                        tonProof: tonNameSpace.payload.ton_proof\n                    };\n                }\n                (0, core_1.logDebug)(\"OKXTONProvider wallet :\", JSON.stringify(wallet));\n                return wallet;\n            }\n            catch (e) {\n                (0, core_1.logDebug)(\"OKXTONProvider wallet  error:\", JSON.stringify(e));\n                return null;\n            }\n        }\n        return null;\n    }\n    onStatusChange(callback, errorsHandler) {\n        this.statusChangeSubscriptions.push(callback);\n        if (errorsHandler) {\n            this.statusChangeErrorSubscriptions.push(errorsHandler);\n        }\n        return () => {\n            this.statusChangeSubscriptions = this.statusChangeSubscriptions.filter(item => item !== callback);\n            if (errorsHandler) {\n                this.statusChangeErrorSubscriptions = this.statusChangeErrorSubscriptions.filter(item => item !== errorsHandler);\n            }\n        };\n    }\n    sendTransaction(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (transaction.network && transaction.network !== core_1.TONCHAIN.MAINNET) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, 'OKXTONProvider sendTransaction network error');\n            }\n            if (!transaction.network) {\n                transaction.network = core_1.TONCHAIN.MAINNET;\n            }\n            if (this.provider.session) {\n                if (!transaction.from) {\n                    const accounts = this.provider.requestAccountsWithNamespace('ton');\n                    transaction.from = accounts[0];\n                }\n            }\n            const requestParams = {\n                method: \"ton_sendTransaction\",\n                params: transaction,\n            };\n            let chain = 'ton:' + core_1.TONCHAIN.MAINNET;\n            (0, core_1.logDebug)(\"OKXTONProvider sendTransaction transaction----:\", chain, JSON.stringify(requestParams));\n            return this.provider.request(requestParams, chain);\n        });\n    }\n}\nexports.OKXTonProvider = OKXTonProvider;\nexports.default = OKXTonProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXUniversalProvider = void 0;\nconst eip155_1 = require(\"./provider/providers/eip155\");\nconst sui_1 = require(\"./provider/providers/sui\");\nconst constants_1 = require(\"./provider/constants\");\nconst eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\nconst client_1 = require(\"./packages/sign-client/client\");\nconst core_1 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"./packages/utils/namespaces\");\nconst solana_1 = __importDefault(require(\"./provider/providers/solana\"));\nconst btc_1 = __importDefault(require(\"./provider/providers/btc\"));\nconst aptos_1 = __importDefault(require(\"./provider/providers/aptos\"));\nconst ton_1 = __importDefault(require(\"./provider/providers/ton\"));\nconst cosmos_1 = __importDefault(require(\"./provider/providers/cosmos\"));\nclass OKXUniversalProvider {\n    static init(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider init() called');\n            let provider;\n            if (window && window.okxConnectUniversalinwindow && window.okxConnectUniversalinwindow instanceof OKXUniversalProvider) {\n                (0, core_1.logDebug)('OKXUniversalConnect init() old called');\n                provider = window.okxConnectUniversalinwindow;\n            }\n            else {\n                (0, core_1.logDebug)('OKXUniversalConnect init() new called');\n                provider = new OKXUniversalProvider(opts);\n                yield provider.initialize();\n                if (window) {\n                    window.okxConnectUniversalinwindow = provider;\n                }\n            }\n            return provider;\n        });\n    }\n    getUniversalProvider() {\n        return this;\n    }\n    constructor(opts) {\n        this.rpcProviders = {};\n        this.events = new eventemitter3_1.default();\n        this.providerOpts = opts;\n    }\n    request(args, chain) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider request() called');\n            if (!this.connected()) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return yield this.getProvider(namespace).request(requestParam);\n        });\n    }\n    buildRequestParamFromRequest(args, chain) {\n        (0, core_1.logDebug)(\"UniversalProvider request args >>>: \", chain, JSON.stringify(args));\n        let [namespace, chainId] = this.validateChain(chain);\n        if (!this.session) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Please call connect() before request()\");\n        }\n        let keyArr = Object.keys(this.session.namespaces);\n        if (!chain && keyArr && keyArr.length > 1) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Multiple chains have been linked, the request method requires chain`);\n        }\n        (0, core_1.logDebug)(\"UniversalProvider request >>args>>>: \", args);\n        if (namespace == \"aptos\" && chainId == \"mainnet\") {\n            namespace = \"aptos\";\n            chainId = \"637\";\n        }\n        if (namespace == \"movement\" && chainId == \"testnet\") {\n            namespace = \"aptos\";\n            chainId = \"70000060\";\n        }\n        const requestParam = Object.assign(Object.assign({}, args), { chainId: `${namespace}:${chainId}` });\n        return { namespace, requestParam };\n    }\n    enable() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.client) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (!this.session) {\n                if (this.connectOpts) {\n                    yield this.connect(this.connectOpts);\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n                }\n            }\n            const accounts = yield this.requestAccounts();\n            return accounts;\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider disconnect() called');\n            if (!this.session) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n                let called = false;\n                const onRequestSent = () => __awaiter(this, void 0, void 0, function* () {\n                    if (!called) {\n                        called = true;\n                        yield this.disconnectAndEmit();\n                        yield this.cleanup();\n                        resolve();\n                        (0, core_1.logDebug)(\"UniversalProvider disconnect Disconnected\");\n                    }\n                });\n                try {\n                    yield this.client.disconnect();\n                    yield onRequestSent();\n                }\n                catch (e) {\n                    yield onRequestSent();\n                }\n            }));\n        });\n    }\n    disconnectAndEmit() {\n        var _a, _b;\n        this.client.engine.connectionManager.disconnect();\n        this.events.emit(\"disconnect\", { topic: (_a = this.session) === null || _a === void 0 ? void 0 : _a.topic });\n        this.events.emit(\"session_delete\", { topic: (_b = this.session) === null || _b === void 0 ? void 0 : _b.topic });\n    }\n    aptosChainNameToGeneralId(chainId) {\n        if (chainId == \"aptos:mainnet\") {\n            return \"aptos:637\";\n        }\n        else if (chainId == \"movement:testnet\") {\n            return \"aptos:70000060\";\n        }\n        else {\n            return chainId;\n        }\n    }\n    replaceAptos(opts) {\n        var _a, _b;\n        let aptosNameSpace = (_a = opts.namespaces) === null || _a === void 0 ? void 0 : _a[\"aptos\"];\n        if (aptosNameSpace != undefined) {\n            let realNS = this.replaceAptosInner(aptosNameSpace);\n            if (opts.namespaces != undefined && \"aptos\" in opts.namespaces && realNS != undefined) {\n                opts.namespaces.aptos = realNS;\n            }\n        }\n        let optionAptosNameSpace = (_b = opts.optionalNamespaces) === null || _b === void 0 ? void 0 : _b[\"aptos\"];\n        if (optionAptosNameSpace != undefined) {\n            let realOptionNS = this.replaceAptosInner(optionAptosNameSpace);\n            if (opts.optionalNamespaces != undefined && \"aptos\" in opts.optionalNamespaces && realOptionNS != undefined) {\n                opts.optionalNamespaces.aptos = realOptionNS;\n            }\n        }\n        return opts;\n    }\n    replaceAptosInner(aptosNameSpace) {\n        var _a;\n        if (aptosNameSpace != undefined) {\n            aptosNameSpace.chains = (_a = aptosNameSpace.chains) === null || _a === void 0 ? void 0 : _a.map(chainId => {\n                return this.aptosChainNameToGeneralId(chainId);\n            });\n            if (aptosNameSpace.defaultChain != undefined) {\n                aptosNameSpace.defaultChain = this.aptosChainNameToGeneralId(aptosNameSpace.defaultChain);\n            }\n        }\n        return aptosNameSpace;\n    }\n    replaceAptosGeneralIdWithNetName(chainId) {\n        if (chainId.includes(\"aptos:637\")) {\n            chainId = chainId.replace(\"aptos:637\", \"aptos:mainnet\");\n        }\n        else if (chainId.includes(\"aptos:70000060\")) {\n            chainId = chainId.replace(\"aptos:70000060\", \"movement:testnet\");\n        }\n        return chainId;\n    }\n    replaceSessionAptos(session) {\n        var _a;\n        let namespaces = (_a = session === null || session === void 0 ? void 0 : session.namespaces) === null || _a === void 0 ? void 0 : _a[\"aptos\"];\n        if (namespaces != undefined && namespaces.chains != undefined) {\n            namespaces.chains = namespaces.chains.map(chain => {\n                return this.replaceAptosGeneralIdWithNetName(chain);\n            });\n            namespaces.accounts = namespaces.accounts.map((account) => {\n                return this.replaceAptosGeneralIdWithNetName(account);\n            });\n            let extra = {};\n            Object.keys(namespaces.extra || {}).forEach((key, index) => {\n                let newKey = this.replaceAptosGeneralIdWithNetName(key);\n                extra[this.replaceAptosGeneralIdWithNetName(key)] = Object.values((session === null || session === void 0 ? void 0 : session.namespaces[\"aptos\"].extra) || {})[index];\n            });\n            namespaces.extra = extra;\n        }\n        (0, core_1.logDebug)(\"replaceSessionAptos\", session);\n    }\n    connected() {\n        (0, core_1.logDebug)('OKXUniversalProvider connected() called');\n        let disconnectInner = () => {\n            try {\n                this.cleanup();\n                this.client.engine.connectionManager.disconnect();\n            }\n            catch (e) {\n                (0, core_1.logDebug)(\"Error during disconnect:\", e);\n            }\n        };\n        try {\n            if (!this.session)\n                return false;\n            if (!this.client.engine.connectionManager.getCurrentConnectionReady()) {\n                disconnectInner();\n                return false;\n            }\n            return true;\n        }\n        catch (e) {\n            disconnectInner();\n            return false;\n        }\n    }\n    connect(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider connect() called');\n            if (!this.client) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (this.connected()) {\n                return this.session;\n            }\n            opts = this.replaceAptos(opts);\n            (0, core_1.logDebug)(`OKXUniversalProvider connect >>>>`, JSON.stringify(opts));\n            if (opts.sessionConfig === undefined) {\n                opts.sessionConfig = {};\n            }\n            if (opts.sessionConfig.openUniversalUrl === undefined) {\n                opts.sessionConfig.openUniversalUrl = (0, core_1.isMobileUserAgent)();\n            }\n            this.setNamespaces(opts);\n            try {\n                (0, core_1.logDebug)(`UniversalProvider connect opts.stringify ====> ${JSON.stringify(opts)}`);\n                let session = yield this.client.connect(opts);\n                this.replaceSessionAptos(session);\n                (0, core_1.logDebug)(`UniversalProvider connect success ====> ${JSON.stringify(session)}`);\n                if (session) {\n                    this.session = session;\n                    this.onConnect();\n                    return session;\n                }\n                return undefined;\n            }\n            catch (error) {\n                (0, core_1.logDebug)(`UniversalProvider connect error ====> `, JSON.stringify(error));\n                throw error;\n            }\n        });\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    setDefaultChain(chain, rpcUrl) {\n        (0, core_1.logDebug)('OKXUniversalProvider setDefaultChain() called');\n        // chain = this.aptosChainNameToGeneralId(chain)\n        try {\n            // ignore without active session\n            if (!this.connected())\n                return;\n            const [namespace, chainId] = this.validateChain(chain);\n            const provider = this.getProvider(namespace);\n            provider.setDefaultChain(chainId, rpcUrl);\n        }\n        catch (error) {\n            // ignore the error if the fx is used prematurely before namespaces are set\n            if (!/Please call connect/.test(error.message))\n                throw error;\n        }\n    }\n    checkStorage() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let sessionInfoStr = yield this.getFromStore(\"connectSession\");\n            (0, core_1.logDebug)(sessionInfoStr);\n            if (sessionInfoStr) {\n                let sessionInfo = sessionInfoStr;\n                this.session = sessionInfo;\n                this.client.session = this.session;\n                this.sessionConfig = sessionInfo.sessionConfig;\n                this.client.sessionConfig = this.sessionConfig;\n                (0, core_1.logDebug)('[evm u-provider] do reconnection', this.session);\n                yield this.client.restoreconnect(sessionInfo);\n                this.createProviders();\n                this.registerEventListeners();\n                setTimeout(() => {\n                    this.events.emit(\"reconnect\", { session: this.session });\n                }, 100);\n                this.registerEventListeners();\n            }\n        });\n    }\n    initialize() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider initialize() called');\n            const data = Object.assign({ url: window.location.hostname, origin: window.location.origin }, this.providerOpts.dappMetaData);\n            this.client = new client_1.SignClient(data, this.events);\n            yield this.checkStorage();\n        });\n    }\n    createProviders() {\n        if (!this.client) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n        }\n        if (!this.connected()) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Session not initialized. Please call connect() before enable()\");\n        }\n        const providersToCreate = [\n            ...new Set(Object.keys(this.session.namespaces).map((namespace) => (0, namespaces_1.parseNamespaceKey)(namespace))),\n        ];\n        providersToCreate.forEach((namespace) => {\n            if (!this.session)\n                return;\n            const namespacesValue = this.session.namespaces;\n            const currentNameSpace = namespacesValue[namespace];\n            (0, core_1.logDebug)(\"init eip155 >> \", currentNameSpace);\n            switch (namespace) {\n                case \"eip155\":\n                    const opts = {\n                        namespace: currentNameSpace\n                    };\n                    this.rpcProviders[namespace] = new eip155_1.Eip155Provider(opts, this.client, this.events);\n                    break;\n                case \"solana\":\n                    const opts1 = {\n                        namespace: currentNameSpace\n                    };\n                    let solanaProvider = new solana_1.default(opts1, \"solana\", this.client, this.events);\n                    this.rpcProviders[namespace] = solanaProvider;\n                    let sonicProvider = new solana_1.default(opts1, \"sonic\", this.client, this.events);\n                    this.rpcProviders['sonic'] = sonicProvider;\n                    let svmProvider = new solana_1.default(opts1, \"svm\", this.client, this.events);\n                    this.rpcProviders['svm'] = svmProvider;\n                    // this.rpcProviders[namespace] = new SolanaProvider(opts1, () => { return this.session; });\n                    break;\n                case \"ton\":\n                    const optsTon = {\n                        namespace: currentNameSpace\n                    };\n                    let tonProvider = new ton_1.default(optsTon, this.client, this.events);\n                    this.rpcProviders[namespace] = tonProvider;\n                    break;\n                case \"sui\":\n                    const optsSui = {\n                        namespace: currentNameSpace\n                    };\n                    let suiProvider = new sui_1.SuiProvider(optsSui, this.client, this.events);\n                    suiProvider.name = \"sui\";\n                    this.rpcProviders[namespace] = suiProvider;\n                    break;\n                case \"btc\":\n                    const optsBtc = {\n                        namespace: currentNameSpace\n                    };\n                    let btcProvider = new btc_1.default(optsBtc, \"btc\", this.client, this.events);\n                    this.rpcProviders[\"btc\"] = btcProvider;\n                    let fbProvider = new btc_1.default(optsBtc, \"fractal\", this.client, this.events);\n                    this.rpcProviders[\"fractal\"] = fbProvider;\n                    break;\n                case \"aptos\":\n                    let aptosProvider = new aptos_1.default({\n                        namespace: currentNameSpace\n                    }, \"aptos\", this.client, this.events);\n                    this.rpcProviders[namespace] = aptosProvider;\n                    let moveProvider = new aptos_1.default({\n                        namespace: currentNameSpace\n                    }, \"movement\", this.client, this.events);\n                    this.rpcProviders[\"movement\"] = moveProvider;\n                    break;\n                case \"cosmos\":\n                    let cosmosProvider = new cosmos_1.default({\n                        namespace: currentNameSpace\n                    }, this.client, this.events);\n                    this.rpcProviders[namespace] = cosmosProvider;\n                    break;\n            }\n        });\n    }\n    registerEventListeners() {\n        if (typeof this.client === \"undefined\") {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client is not initialized\");\n        }\n        this.client.engine.addDisconnectListener(() => {\n            this.disconnectAndEmit();\n            this.cleanup();\n        });\n        this.on(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, (caip2ChainId) => {\n            this.onChainChanged(caip2ChainId);\n        });\n        this.on(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, (nameSpaces) => {\n            if (nameSpaces) {\n                const nameSpacekey = Object.keys(nameSpaces)[0];\n                if (this.session) {\n                    this.session.namespaces[nameSpacekey] = nameSpaces[nameSpacekey];\n                    if (this.session) {\n                        this.persist(\"connectSession\", this.session);\n                        this.events.emit(\"session_update\", this.session);\n                    }\n                    (0, core_1.logDebug)(\"PROVIDER_EVENTS.UPDATE_NAMESPACES this.session... ->>>\", JSON.stringify(this.session));\n                }\n            }\n        });\n    }\n    getProvider(namespace) {\n        (0, core_1.logDebug)('current get providers', this.rpcProviders);\n        (0, core_1.logDebug)('query namespace: ', namespace);\n        return this.rpcProviders[namespace];\n    }\n    setNamespaces(params) {\n        this.connectOpts = params;\n        const { namespaces, sessionConfig } = params;\n        const data = {\n            origin: window.location.origin,\n            url: window.location.hostname,\n            name: this.providerOpts.dappMetaData.name,\n            icon: this.providerOpts.dappMetaData.icon,\n        };\n        this.sessionConfig = {\n            dappInfo: data,\n            openUniversalUrl: sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.openUniversalUrl,\n            redirect: sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect,\n        };\n        (0, core_1.logDebug)(\"setNamespaces sessionConfig>>>\", this.sessionConfig);\n        this.client.sessionConfig = this.sessionConfig;\n        this.persist(\"sessionConfig\", sessionConfig);\n    }\n    validateChain(chain) {\n        var _a;\n        let [namespace, chainId] = (chain === null || chain === void 0 ? void 0 : chain.split(\":\")) || [\"\", \"\"];\n        if (!this.session || !this.session.namespaces || !Object.keys(this.session.namespaces).length) {\n            (0, core_1.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        if (namespace) {\n            if (!this.isChainNamespaceInSession(namespace)) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace '${namespace}' is not configured. Please call connect() first with namespace config.`);\n            }\n            if (chainId && chain) {\n                (0, core_1.logDebug)('this.session.namespaces -->> ', namespace, JSON.stringify(this.session.namespaces));\n                const chainsArr = (_a = this.session.namespaces[namespace]) === null || _a === void 0 ? void 0 : _a.chains;\n                (0, core_1.logDebug)('get chainsArr & chain', JSON.stringify(chainsArr), chain);\n                if (chainsArr && !chainsArr.includes(chain)) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace not include the chain '${chain}'`);\n                }\n            }\n        }\n        if (namespace && chainId) {\n            (0, core_1.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        let defaultNamespace = (0, namespaces_1.parseNamespaceKey)(Object.keys(this.session.namespaces)[0]);\n        const defaultChain = this.rpcProviders[defaultNamespace].getDefaultChain();\n        (0, core_1.logDebug)('get default chain:', defaultChain);\n        return [defaultNamespace, defaultChain];\n    }\n    isChainNamespaceInSession(namespaceStr) {\n        var _a, _b;\n        if (Object.keys(((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces) || {})\n            .map((key) => (0, namespaces_1.parseNamespaceKey)(key))\n            .includes(namespaceStr)) {\n            return true;\n        }\n        let isChainNamespaceInSession = false;\n        Object.values(((_b = this.session) === null || _b === void 0 ? void 0 : _b.namespaces) || {})\n            .forEach(namespace => {\n            namespace.chains.forEach(chain => {\n                if (chain.split(\":\")[0] == namespaceStr) {\n                    isChainNamespaceInSession = true;\n                }\n            });\n        });\n        return isChainNamespaceInSession;\n    }\n    requestAccountsWithNamespace(namespace) {\n        return this.getProvider(namespace).requestAccounts();\n    }\n    requestDefaultChainWithNamespace(namespace) {\n        return this.getProvider(namespace).getDefaultChain();\n    }\n    requestAccounts() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const [namespace] = this.validateChain();\n            return yield this.getProvider(namespace).requestAccounts();\n        });\n    }\n    onChainChanged(caip2Chain) {\n        var _a;\n        if (!((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces))\n            return;\n        const [namespace, chainId] = this.validateChain(caip2Chain);\n        if (!chainId)\n            return;\n        if (this.session.namespaces[namespace]) {\n            this.session.namespaces[namespace].defaultChain = chainId;\n            this.persist(\"connectSession\", this.session);\n        }\n        this.events.emit(\"chainChanged\", chainId);\n    }\n    onConnect() {\n        this.createProviders();\n        if (this.session) {\n            this.persist(\"connectSession\", this.session);\n        }\n        this.events.emit(\"connect\", { session: this.session });\n        this.registerEventListeners();\n    }\n    cleanup() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.session = undefined;\n            this.sessionProperties = undefined;\n            this.persist(\"optionalNamespaces\", undefined);\n            this.persist(\"sessionProperties\", undefined);\n            this.persist(\"connectSession\", undefined);\n        });\n    }\n    persist(key, data) {\n        (0, core_1.logDebug)('[evm u-provider] persisit data', key, data);\n        return this.client.engine.connectionManager.saveSessionContent(key, data);\n    }\n    getFromStore(key) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.client.engine.connectionManager.getSessionContent(key);\n        });\n    }\n    showRequestModal(args, chain) {\n        try {\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return this.getProvider(namespace).showRequestModal(requestParam);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n}\nexports.OKXUniversalProvider = OKXUniversalProvider;\nexports.default = OKXUniversalProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTonProvider = exports.OKXCosmosProvider = exports.OKXBtcProvider = exports.OKXUniversalProvider = void 0;\n__exportStar(require(\"./provider/types\"), exports);\nvar OKXUniversalProvider_1 = require(\"./OKXUniversalProvider\");\nObject.defineProperty(exports, \"OKXUniversalProvider\", { enumerable: true, get: function () { return OKXUniversalProvider_1.OKXUniversalProvider; } });\nvar OKXBtcProvider_1 = require(\"./OKXBtcProvider\");\nObject.defineProperty(exports, \"OKXBtcProvider\", { enumerable: true, get: function () { return OKXBtcProvider_1.OKXBtcProvider; } });\nvar OKXCosmosProvider_1 = require(\"./OKXCosmosProvider\");\nObject.defineProperty(exports, \"OKXCosmosProvider\", { enumerable: true, get: function () { return OKXCosmosProvider_1.OKXCosmosProvider; } });\nvar OKXTonProvider_1 = require(\"./OKXTonProvider\");\nObject.defineProperty(exports, \"OKXTonProvider\", { enumerable: true, get: function () { return OKXTonProvider_1.OKXTonProvider; } });\n__exportStar(require(\"@okxconnect/core\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SignClient = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"../utils/namespaces\");\nconst ConnectMethodUtils_1 = require(\"../utils/ConnectMethodUtils\");\nconst constants_1 = require(\"../../provider/constants\");\nclass SignClient extends core_1.ISignClient {\n    constructor(metaData, events) {\n        super(metaData);\n        this.engine = new core_1.Engine(new core_1.ConnectionManager());\n        // ---------- Engine ----------------------------------------------- //\n        this.connect = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    var connectRequest = [];\n                    (0, core_1.logDebug)(`client connect params >>>`, JSON.stringify(params));\n                    var requestAccountItem = {\n                        name: \"requestAccounts\",\n                        requiredNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.namespaces),\n                        optionalNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.optionalNamespaces),\n                    };\n                    this.engine.setSessionConnectingListener(() => {\n                        (0, core_1.logDebug)(`sessionConnectingListener >>>`);\n                        this.events.emit(constants_1.PROVIDER_EVENTS.SESSION_CONNECTING);\n                    });\n                    if (params.connectMethods) {\n                        requestAccountItem.connectRequestMethods = yield (0, ConnectMethodUtils_1.connectMethodsToConnectWalletMethods)(params.connectMethods, requestAccountItem.requiredNamespaces);\n                    }\n                    connectRequest.push(requestAccountItem);\n                    (0, core_1.logDebug)(`client connect connectRequest >>>`, JSON.stringify(connectRequest));\n                    this.engine.universalConnect(connectRequest, Object.assign({ dappInfo: this.metadata }, params.sessionConfig), (info) => {\n                        if (info && info.connectRequest) {\n                            var encodeParams = (0, core_1.encodeConnectParams)(info.connectRequest);\n                            (0, core_1.logDebug)(`universalConect encodeParams:`, encodeParams);\n                            (0, core_1.logDebug)(`universalConect url:`, (0, core_1.getUniversalLink)((0, core_1.getAppWalletDeepLink)(encodeParams)));\n                            this.events.emit(\"display_uri\", (0, core_1.getUniversalLink)((0, core_1.getAppWalletDeepLink)(encodeParams)));\n                            (0, core_1.logDebug)(`universalConect EngineConnectInfo  ${JSON.stringify(info)}`);\n                            this.events.emit(\"okx_engine_connect_params\", info);\n                        }\n                    }).then((session) => __awaiter(this, void 0, void 0, function* () {\n                        (0, namespaces_1.fillParamsToSession)(session, params.namespaces, params.optionalNamespaces, this.sessionConfig);\n                        (0, core_1.logDebug)(`signClient: connect: session ${JSON.stringify(session)}`);\n                        if (params.connectMethods) {\n                            yield (0, ConnectMethodUtils_1.connectMethodsResponseUpdate)(session, params.connectMethods);\n                        }\n                        resolve(session);\n                    })).catch((e) => {\n                        (0, core_1.logDebug)(`signClient: connect: catch ${JSON.stringify(e)}`);\n                        this.events.emit(\"connect_error\", e);\n                        reject(e);\n                    });\n                }\n                catch (error) {\n                    (0, core_1.logDebug)(`signClient: connect:  ${JSON.stringify(error)}`);\n                    reject(error);\n                }\n            }));\n        });\n        this.restoreconnect = (sessionConfig) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.restoreconnect(sessionConfig, (session) => {\n                    resolve(session);\n                });\n            });\n        });\n        this.reject = (params) => __awaiter(this, void 0, void 0, function* () {\n            //   try {\n            //     return await this.engine.reject(params);\n            //   } catch (error: any) {\n            //     this.logger.error(error.message);\n            //     throw error;\n            //   }\n        });\n        //\n        // public update: ISignClient[\"update\"] = async (params) => {\n        //   return\n        // //   try {\n        // //     return await this.engine.update(params);\n        // //   } catch (error: any) {\n        // //     this.logger.error(error.message);\n        // //     throw error;\n        // //   }\n        // };\n        this.request = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                (0, core_1.logDebug)(\"clint request --params>>>> >\", this.engine.connectionManager.getCurrentConnectionReady(), (_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl, JSON.stringify(params));\n                try {\n                    // this.sessionConfig\n                    if (((_b = this.sessionConfig) === null || _b === void 0 ? void 0 : _b.openUniversalUrl) && (0, core_1.isIos)()) {\n                        this.openOKXWallet();\n                    }\n                    yield this.engine.send(params, {\n                        resolve: (response) => {\n                            delete response.requestId;\n                            (0, core_1.logDebug)(\"clint request --response >\", JSON.stringify(response));\n                            if (('error' in response) && response.error) {\n                                let error = response.error;\n                                reject(new core_1.OKXConnectError(response.error.code, response.method + \":\" + error.message));\n                            }\n                            else {\n                                resolve(response);\n                            }\n                        },\n                        onAck: () => {\n                            var _a;\n                            if (!(0, core_1.isIos)() && ((_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl)) {\n                                this.openOKXWallet();\n                            }\n                        }\n                    });\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }));\n        });\n        // public emit: ISignClient[\"emit\"] = async (params) => {\n        //     try {\n        //         // return await this.engine.emit(params);\n        //     } catch (error: any) {\n        //         throw error;\n        //     }\n        // };\n        this.disconnect = () => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.send({\n                    method: \"disconnect\"\n                }, {\n                    onAck: () => {\n                        resolve();\n                    }\n                }).catch((error) => {\n                    console.log(`disconnect : ${JSON.stringify(error)}`);\n                    reject(error);\n                });\n            });\n        });\n        this.events = events;\n        this.metadata = metaData;\n    }\n    openOKXWallet() {\n        var _a, _b;\n        // if (this.openUniversalUrl){\n        (0, core_1.logDebug)('bridge-provider ==>> connect_5');\n        if ((_b = (_a = this.session) === null || _a === void 0 ? void 0 : _a.sessionConfig) === null || _b === void 0 ? void 0 : _b.useMini) {\n            (0, core_1.getTelegramWalletTWAUrl)(undefined, this.session.sessionConfig.tmaReturnUrl, true);\n        }\n        else {\n            (0, core_1.openOKXDeeplink)(core_1.standardDeeplink);\n        }\n        // }\n    }\n}\nexports.SignClient = SignClient;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.connectSupportMethods = void 0;\nexports.connectMethodsResponseUpdate = connectMethodsResponseUpdate;\nexports.connectMethodsToConnectWalletMethods = connectMethodsToConnectWalletMethods;\nconst core_1 = require(\"@okxconnect/core\");\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst uint8array_extras_1 = require(\"uint8array-extras\");\nfunction isArray(value) {\n    return typeof value === \"object\" && value !== null && Array.isArray(value);\n}\nfunction isRecord(value) {\n    return typeof value === \"object\" && value !== null && !Array.isArray(value);\n}\nexports.connectSupportMethods = Object.freeze([\n    \"wallet_addEthereumChain\",\n    \"personal_sign\",\n    \"solana_signMessage\",\n    \"sui_signMessage\",\n    \"sui_signPersonalMessage\",\n    \"btc_signMessage\",\n    \"aptos_signMessage\",\n    \"cosmos_signArbitrary\",\n]);\nfunction connectMethodsResponseUpdate(session, requestParams) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a;\n        try {\n            if (session.connectMethodsReply) {\n                (0, core_1.logDebug)(\"connectMethodsResponseUpdate connectMethodsReply:\", JSON.stringify(session.connectMethodsReply));\n                (0, core_1.logDebug)(\"connectMethodsResponseUpdate session.namespaces:\", JSON.stringify(session.namespaces));\n                for (const methodItem of session.connectMethodsReply) {\n                    (0, core_1.logDebug)(\"connectMethodsResponseUpdate methodItem:\", JSON.stringify(methodItem));\n                    if (\"result\" in methodItem) {\n                        if (methodItem.method === \"solana_signMessage\") {\n                            let solanaSuccessData = methodItem.result;\n                            (0, core_1.logDebug)(\"solana_signMessage methodItem.chainId:\", methodItem.chainId);\n                            let account = (_a = session.namespaces[\"solana\"]) === null || _a === void 0 ? void 0 : _a.accounts.filter(function (account) {\n                                (0, core_1.logDebug)(\"solana_signMessage account:\", account);\n                                return account.startsWith(methodItem.chainId);\n                            })[0];\n                            (0, core_1.logDebug)(\"solana_signMessage result account:\", solanaSuccessData, account);\n                            if (solanaSuccessData && account) {\n                                methodItem.result = {\n                                    \"signature\": bs58_1.default.decode(solanaSuccessData),\n                                    \"publicKey\": account === null || account === void 0 ? void 0 : account.split(':')[2]\n                                };\n                            }\n                        }\n                        else if (methodItem.method === \"sui_signMessage\" || methodItem.method === \"sui_signPersonalMessage\") {\n                            let suiMethod = requestParams.filter(function (requestMethod) {\n                                return requestMethod.method === methodItem.method;\n                            })[0];\n                            if (suiMethod && suiMethod.params && \"message\" in suiMethod.params) {\n                                let suiMessage = suiMethod.params.message;\n                                let suiMessageb64 = btoa(suiMessage);\n                                console.log(\"sui_signMessag suiMessagee suiMessageb64:>>>>\", suiMessage, suiMessageb64);\n                                if (methodItem.method === \"sui_signMessage\") {\n                                    methodItem.result = {\n                                        \"messageBytes\": suiMessageb64,\n                                        \"signature\": methodItem.result\n                                    };\n                                }\n                                else if (methodItem.method === \"sui_signPersonalMessage\") {\n                                    methodItem.result = {\n                                        \"bytes\": suiMessageb64,\n                                        \"signature\": methodItem.result\n                                    };\n                                }\n                            }\n                        }\n                        else if (methodItem.method === \"aptos_signMessage\") {\n                            if (methodItem.chainId === \"aptos:637\") {\n                                methodItem.chainId = \"aptos:mainnet\";\n                            }\n                            else if (methodItem.chainId === \"aptos:70000060\") {\n                                methodItem.chainId = \"movement:testnet\";\n                            }\n                            methodItem.result = JSON.parse(methodItem.result);\n                            console.log(\"aptos_signMessage result methodItem.result before:>>>>\", JSON.stringify(methodItem.result));\n                            if (methodItem.result && \"signature\" in methodItem.result) {\n                                let aptosSignature = methodItem.result.signature;\n                                if (aptosSignature && aptosSignature.startsWith(\"0x\")) {\n                                    aptosSignature = aptosSignature.slice(2, aptosSignature.length);\n                                    methodItem.result.signature = aptosSignature;\n                                }\n                            }\n                            console.log(\"aptos_signMessage result methodItem.result after:>>>>\", JSON.stringify(methodItem.result));\n                        }\n                        else if (methodItem.method === \"cosmos_signArbitrary\") {\n                            methodItem.result = JSON.parse(methodItem.result);\n                        }\n                    }\n                }\n            }\n            else if (requestParams && requestParams.length > 0) { //adapt old version\n                session.connectMethodsReply = [];\n                let notSupportError = new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                for (const requestItem of requestParams) {\n                    var errorItem = {\n                        method: requestItem.method,\n                        chainId: requestItem.chainId,\n                        error: {\n                            code: notSupportError.code,\n                            message: notSupportError.message\n                        },\n                    };\n                    session.connectMethodsReply.push(errorItem);\n                }\n            }\n        }\n        catch (error) {\n            (0, core_1.logDebug)(\"connectMethodsResponseUpdate connectMethodsReply Error:\", JSON.stringify(error));\n            throw error;\n        }\n    });\n}\nfunction connectMethodsToConnectWalletMethods(params, requireNameSpace) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            (0, core_1.logDebug)(\"connectMethodsToConnectWalletMethods requestMethods:\", JSON.stringify(params));\n            const result = [];\n            //TODO  后面需要打开限制\n            // if (params && params.length>1){\n            //     throw new OKXConnectError(\n            //         OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR,\n            //         `connect requestMethods only support one data`\n            //     );\n            // }\n            if (!requireNameSpace && params && params.length > 0) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error , RequestMethods cannot be added when the NameSpace is empty`);\n            }\n            // check chianId\n            for (const methodItem of params) {\n                if (methodItem.method === \"aptos_signMessage\") { //update chainId\n                    if (methodItem.chainId === \"aptos:mainnet\") {\n                        methodItem.chainId = \"aptos:637\";\n                    }\n                    else if (methodItem.chainId === \"movement:testnet\") {\n                        methodItem.chainId = \"aptos:70000060\";\n                    }\n                }\n                // check chianId\n                if (methodItem.method === \"wallet_addEthereumChain\") {\n                    var includeEip155 = requireNameSpace === null || requireNameSpace === void 0 ? void 0 : requireNameSpace.some(space => space.namespace.includes(\"eip155\"));\n                    if (!includeEip155) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error, When using '${methodItem.method}', the EVM chain needs to be included in the NameSpace`);\n                    }\n                }\n                else {\n                    const includeChain = !!(requireNameSpace === null || requireNameSpace === void 0 ? void 0 : requireNameSpace.some(space => space.chains.some(chain => chain.includes(`${methodItem.chainId}`))));\n                    if (!includeChain) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error, When using '${methodItem.method}', NameSpace must contain '${methodItem.chainId}'`);\n                    }\n                }\n            }\n            for (const item of params) {\n                //TODO  后面需要打开限制\n                // if (!connectSupportMethods.includes(item.method)){\n                //     throw new OKXConnectError(\n                //         OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR,\n                //             `connect requestMethods not support method, method: '${item.method}'`\n                //     );\n                // }\n                if (item.method === \"wallet_addEthereumChain\") {\n                    if (Array.isArray(item.params)) {\n                        const paramsArr = item.params;\n                        if (paramsArr && paramsArr.length === 1) {\n                            const firstParam = paramsArr[0];\n                            if (isRecord(firstParam)) {\n                                item.params = firstParam;\n                            }\n                        }\n                        else if (paramsArr && paramsArr.length > 1) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params only support one data, method: '${item.method}'`);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is nil, method: '${item.method}'`);\n                        }\n                    }\n                }\n                else if (item.method === \"personal_sign\") {\n                    if (isArray(item.params)) {\n                        if (item.params && item.params.length !== 1) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params error,  method: '${item.method}' `);\n                        }\n                        let firstObj = item.params[0];\n                        if (firstObj && typeof firstObj === 'string') {\n                            item.params = {\n                                message: firstObj\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                }\n                else if (item.method === \"sui_signMessage\" || item.method === \"sui_signPersonalMessage\") {\n                    if (isRecord(item.params) && 'message' in item.params) {\n                        if (item.params.message) {\n                            (0, core_1.logDebug)(\"sui_signMessage item.params.message :\", item.params.message);\n                            let message = JSON.parse(JSON.stringify(item.params.message));\n                            let convertedArray = Object.values(message);\n                            let uint8Array = new Uint8Array(convertedArray);\n                            let decoder = new TextDecoder(\"utf8\");\n                            let b64encoded = btoa(decoder.decode(uint8Array));\n                            item.params.message = atob(b64encoded);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"solana_signMessage\") {\n                    if (isRecord(item.params) && 'message' in item.params) {\n                        if (item.params.message && typeof item.params.message === 'string') {\n                            item.params[\"bs58Message\"] = bs58_1.default.encode((0, uint8array_extras_1.stringToUint8Array)(item.params.message));\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"aptos_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (item.chainId && (item.chainId === \"aptos:637\" || item.chainId === \"aptos:70000060\")) {\n                            var aptosParams = item.params;\n                            var currentURL = window.location.protocol + \"//\" + window.location.hostname;\n                            let signChainId = 1;\n                            if (item.chainId === \"aptos:637\") {\n                            }\n                            else if (item.chainId === \"aptos:70000060\") {\n                                signChainId = 2;\n                            }\n                            item.params = {\n                                data: aptosParams,\n                                applicationUrl: currentURL,\n                                prefix: \"APTOS\",\n                                aptosChainId: signChainId\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params chainId is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"cosmos_signArbitrary\") {\n                    if (isRecord(item.params)) {\n                        if (item.params.message && typeof item.params.message === 'string') {\n                            const base64Encoded = (0, uint8array_extras_1.stringToBase64)(item.params.message);\n                            let cosmosChain = item.chainId.split(\":\")[1];\n                            if (cosmosChain) {\n                                item.params = {\n                                    chain_id: cosmosChain,\n                                    data: {\n                                        chain_id: \"\",\n                                        account_number: \"0\",\n                                        sequence: \"0\",\n                                        fee: {\n                                            gas: \"0\",\n                                            amount: []\n                                        },\n                                        msgs: [{\n                                                \"type\": \"sign/MsgSignData\",\n                                                \"value\": {\n                                                    \"signer\": \"\", //address\n                                                    \"data\": base64Encoded\n                                                }\n                                            }],\n                                        memo: \"\"\n                                    }\n                                };\n                            }\n                            else {\n                                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params chainId is error,  method: '${item.method}' `);\n                            }\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params message is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                (0, core_1.logDebug)(\"connectMethodsToConnectWalletMethods item:\", JSON.stringify(item));\n                result.push(item);\n            }\n            return result;\n        }\n        catch (error) {\n            throw error;\n        }\n    });\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAccountsChains = getAccountsChains;\nexports.nameSpaceToConnectWalletNameSpace = nameSpaceToConnectWalletNameSpace;\nexports.fillParamsToSession = fillParamsToSession;\nexports.isCaipNamespace = isCaipNamespace;\nexports.parseNamespaceKey = parseNamespaceKey;\nconst core_1 = require(\"@okxconnect/core\");\nfunction getAccountsChains(accounts) {\n    const chains = [];\n    accounts.forEach((account) => {\n        const [chain, chainId] = account.split(\":\");\n        chains.push(`${chain}:${chainId}`);\n    });\n    return chains;\n}\nfunction nameSpaceToConnectWalletNameSpace(namespaces) {\n    var result = [];\n    if (!namespaces) {\n        return result;\n    }\n    Object.keys(namespaces).forEach((key) => {\n        if (key === core_1.NameSpaceKeyEip155 || key === core_1.NameSpaceKeySOL || key === core_1.NameSpaceKeySui || key === core_1.NameSpaceKeyAptos\n            || key == core_1.NameSpaceKeyBtc || key === core_1.NameSpaceKeyTON || key === core_1.NameSpaceKeyCosmos) {\n            if (namespaces[key].chains) {\n                result.push({\n                    namespace: key,\n                    chains: namespaces[key].chains,\n                    params: namespaces[key].params\n                });\n            }\n        }\n    });\n    return result;\n}\nfunction fillParamsToSession(session, namespaces, optionalNamespaces, sessionConfig) {\n    // Helper function to merge rpcMaps\n    const mergeRpcMap = (targetRpcMap, sourceRpcMap) => {\n        Object.assign(targetRpcMap, sourceRpcMap);\n    };\n    // Merge function for namespaces\n    const mergeNamespaces = (target, source) => {\n        for (const key in source) {\n            if (source.hasOwnProperty(key) && source[key].rpcMap) {\n                if (source[key].rpcMap) {\n                    if (!target[key].rpcMap) {\n                        target[key].rpcMap = {};\n                    }\n                    // 合并 rpcMap\n                    mergeRpcMap(target[key].rpcMap, source[key].rpcMap);\n                }\n                if (source[key].defaultChain && target[key].defaultChain === undefined) {\n                    //defaultChain need in session nameSpace\n                    if (target[key].chains.some(chain => chain.split(\":\")[1] === source[key].defaultChain)) {\n                        target[key].defaultChain = source[key].defaultChain;\n                    }\n                }\n            }\n        }\n    };\n    // 合并 namespaces\n    if (namespaces) {\n        mergeNamespaces(session.namespaces, namespaces);\n    }\n    // 合并 optionalNamespaces\n    if (optionalNamespaces) {\n        mergeNamespaces(session.namespaces, optionalNamespaces);\n    }\n    session.sessionConfig = sessionConfig;\n}\n/**\n * util designed for Wallets that builds namespaces structure by provided supported chains, methods, events & accounts.\n * It takes required & optional namespaces provided in the session proposal\n * along with the supported chains/methods/events/accounts by the wallet and returns a structured namespaces object\n * @param {BuildApprovedNamespacesParams} params\n * @returns {SessionTypes.Namespaces}\n */\n// export function buildApprovedNamespaces(\n//   params: BuildApprovedNamespacesParams,\n// ): SessionTypes.Namespaces {\n//   const {\n//     proposal: { requiredNamespaces, optionalNamespaces = {} },\n//     supportedNamespaces,\n//   } = params;\n//   const normalizedRequired = normalizeNamespaces(requiredNamespaces);\n//   const normalizedOptional = normalizeNamespaces(optionalNamespaces);\n//\n//   // build approved namespaces\n//   const namespaces = {};\n//   Object.keys(supportedNamespaces).forEach((namespace) => {\n//     const supportedChains = supportedNamespaces[namespace].chains;\n//     const supportedMethods = supportedNamespaces[namespace].methods;\n//     const supportedEvents = supportedNamespaces[namespace].events;\n//     const supportedAccounts = supportedNamespaces[namespace].accounts;\n//\n//     supportedChains.forEach((chain) => {\n//       if (!supportedAccounts.some((account) => account.includes(chain))) {\n//         throw new Error(`No accounts provided for chain ${chain} in namespace ${namespace}`);\n//       }\n//     });\n//\n//     namespaces[namespace] = {\n//       chains: supportedChains,\n//       methods: supportedMethods,\n//       events: supportedEvents,\n//       accounts: supportedAccounts,\n//     };\n//   });\n//\n//   // verify all required namespaces are supported\n//   const err = isConformingNamespaces(requiredNamespaces, namespaces, \"approve()\");\n//   if (err) throw new Error(err.message);\n//\n//   const approvedNamespaces = {};\n//\n//   // if both required & optional namespaces are empty, return all supported namespaces by the wallet\n//   if (!Object.keys(requiredNamespaces).length && !Object.keys(optionalNamespaces).length)\n//     return namespaces;\n//\n//   // assign accounts for the required namespaces\n//   Object.keys(normalizedRequired).forEach((requiredNamespace) => {\n//     const chains = supportedNamespaces[requiredNamespace].chains.filter((chain) =>\n//       normalizedRequired[requiredNamespace]?.chains?.includes(chain),\n//     );\n//     const methods = supportedNamespaces[requiredNamespace].methods.filter((method) =>\n//       normalizedRequired[requiredNamespace]?.methods?.includes(method),\n//     );\n//     const events = supportedNamespaces[requiredNamespace].events.filter((event) =>\n//       normalizedRequired[requiredNamespace]?.events?.includes(event),\n//     );\n//\n//     const accounts = chains\n//       .map((chain: string) =>\n//         supportedNamespaces[requiredNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[requiredNamespace] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   });\n//\n//   // add optional namespaces\n//   Object.keys(normalizedOptional).forEach((optionalNamespace) => {\n//     if (!supportedNamespaces[optionalNamespace]) return;\n//\n//     const chainsToAdd = normalizedOptional[optionalNamespace]?.chains?.filter((chain) =>\n//       supportedNamespaces[optionalNamespace].chains.includes(chain),\n//     );\n//     const methodsToAdd = supportedNamespaces[optionalNamespace].methods.filter((method) =>\n//       normalizedOptional[optionalNamespace]?.methods?.includes(method),\n//     );\n//     const eventsToAdd = supportedNamespaces[optionalNamespace].events.filter((event) =>\n//       normalizedOptional[optionalNamespace]?.events?.includes(event),\n//     );\n//\n//     const accountsToAdd = chainsToAdd\n//       ?.map((chain: string) =>\n//         supportedNamespaces[optionalNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[optionalNamespace] = {\n//       chains: mergeArrays(approvedNamespaces[optionalNamespace]?.chains, chainsToAdd),\n//       methods: mergeArrays(approvedNamespaces[optionalNamespace]?.methods, methodsToAdd),\n//       events: mergeArrays(approvedNamespaces[optionalNamespace]?.events, eventsToAdd),\n//       accounts: mergeArrays(approvedNamespaces[optionalNamespace]?.accounts, accountsToAdd),\n//     };\n//   });\n//\n//   return approvedNamespaces;\n// }\nfunction isCaipNamespace(namespace) {\n    return namespace.includes(\":\");\n}\nfunction parseNamespaceKey(namespace) {\n    return isCaipNamespace(namespace) ? namespace.split(\":\")[0] : namespace;\n}\n/**\n * Converts\n * ```\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * ```\n * into\n * ```\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *```\n */\n// export function normalizeNamespaces(\n//   namespaces: ProposalTypes.RequiredNamespaces,\n// ): ProposalTypes.RequiredNamespaces {\n//   const normalizedNamespaces = {} as ProposalTypes.RequiredNamespaces;\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       methods: mergeArrays(methods, normalizedNamespaces[normalizedKey]?.methods),\n//       events: mergeArrays(events, normalizedNamespaces[normalizedKey]?.events),\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n// export function getNamespacesFromAccounts(accounts: string[]) {\n//   const namespaces = {};\n//   accounts?.forEach((account) => {\n//     const [namespace, chainId] = account.split(\":\");\n//     if (!namespaces[namespace]) {\n//       namespaces[namespace] = {\n//         accounts: [],\n//         chains: [],\n//         events: [],\n//       };\n//     }\n//     namespaces[namespace].accounts.push(account);\n//     namespaces[namespace].chains.push(`${namespace}:${chainId}`);\n//   });\n//\n//   return namespaces;\n// }\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PROVIDER_EVENTS = void 0;\nexports.PROVIDER_EVENTS = {\n    DEFAULT_CHAIN_CHANGED: \"default_chain_changed\",\n    UPDATE_NAMESPACES: \"update_name_spaces\",\n    SESSION_CONNECTING: \"session_connecting\"\n};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./values\"), exports);\n__exportStar(require(\"./events\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GENERIC_SUBPROVIDER_NAME = exports.RPC_URL = exports.STORAGE = exports.CONTEXT = exports.WC_VERSION = exports.PROTOCOL = exports.RELAY_URL = exports.LOGGER = void 0;\nexports.LOGGER = \"error\";\nexports.RELAY_URL = \"wss://relay.walletconnect.com\";\nexports.PROTOCOL = \"wc\";\nexports.WC_VERSION = 2;\nexports.CONTEXT = \"universal_provider\";\nexports.STORAGE = `${exports.PROTOCOL}@${exports.WC_VERSION}:${exports.CONTEXT}:`;\nexports.RPC_URL = \"https://rpc.walletconnect.com/v1/\";\nexports.GENERIC_SUBPROVIDER_NAME = \"generic\";\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass AptosProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"aptos\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"solana request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"solana provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = AptosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass BtcProvider {\n    constructor(opts, name, client, events) {\n        this.name = core_1.NameSpaceKeyBtc;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"btc request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"btc provider namespace: \", JSON.stringify(this.namespace));\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = BtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass CosmosProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyCosmos;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"cosmos request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"cosmos provider namespace: \", JSON.stringify(this.namespace));\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = CosmosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Eip155Provider = void 0;\nconst utils_1 = require(\"../utils\");\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nclass Eip155Provider {\n    constructor(opts, client, events) {\n        this.name = \"eip155\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = parseInt(this.getDefaultChain());\n        // rpc\n        this.httpProviders = this.createHttpProviders();\n        (0, core_1.logDebug)(\"eip155 constructor --opts.namespace-->\", opts.namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    isArray(value) {\n        return typeof value === \"object\" && value !== null && Array.isArray(value);\n    }\n    updateRequestParams(args) {\n        let isDic = args.params && typeof args.params === 'object' && !Array.isArray(args.params);\n        if (args.method === 'wallet_switchEthereumChain') {\n            const switchChainId = args.chainId.split(\":\")[1];\n            // const hexChainId = parseInt(switchChainId, 16);\n            const decimalNumber = parseInt(switchChainId, 10);\n            if (isNaN(decimalNumber)) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid decimal number,  chainId: '${switchChainId}' `);\n            }\n            if (!args.params) {\n                args.params = { chainId: '0x' + decimalNumber.toString(16) };\n            }\n            else if (isDic) { //为 Record<string, unknown>\n                let params = args.params;\n                if (!('chainId' in params)) {\n                    params['chainId'] = '0x' + decimalNumber.toString(16);\n                    args.params = params;\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params error ,  method: '${args.method}' `);\n            }\n        }\n        else if (args.method === 'personal_sign'\n            || args.method === 'eth_signTypedData_v4'\n            || args.method === 'eth_sendTransaction'\n            || args.method === 'wallet_watchAsset') {\n            if (!args.params) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params is nil, method: '${args.method}'`);\n            }\n            if (this.isRecord(args.params)) {\n                let params = args.params;\n                (0, core_1.logDebug)(\"eip155 updateRequestParams params>\", JSON.stringify(params));\n                if ('chainId' in params) {\n                    const selectedChainId = args.chainId.split(\":\")[1];\n                    const chainNum = parseInt(selectedChainId, 10);\n                    let paramsChainString = String(params.chainId);\n                    let paramsChainId;\n                    if (paramsChainString.startsWith(this.name) && args.chainId === paramsChainString) { //为\n                        paramsChainId = chainNum;\n                    }\n                    else if (paramsChainString.startsWith(\"0x\")) {\n                        paramsChainId = parseInt(paramsChainString, 16);\n                    }\n                    else if (!isNaN(Number(paramsChainString))) { //数字\n                        paramsChainId = parseInt(paramsChainString, 10);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid params.chainId format, method: '${args.method}'`);\n                    }\n                    if (chainNum !== paramsChainId) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params.chainId not equal chain,  method: '${args.method}' `);\n                    }\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid request params type, method: '${args.method}'`);\n            }\n        }\n    }\n    //adapt array\n    adaptArray(args) {\n        if (args.method === 'wallet_switchEthereumChain'\n            || args.method === 'wallet_addEthereumChain'\n            || args.method === 'wallet_watchAsset'\n            || args.method === 'eth_sendTransaction') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr) {\n                    if (paramsArr.length === 1) {\n                        let firstParam = args.params[0];\n                        if (this.isRecord(firstParam)) {\n                            args.params = firstParam;\n                        }\n                    }\n                    else if (paramsArr.length > 1) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                    }\n                }\n            }\n        }\n        else if (args.method === 'eth_signTypedData_v4') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr && paramsArr.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                }\n                else if (paramsArr && paramsArr.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let messageObj = {};\n                if (paramsArr && paramsArr.length === 2) {\n                    let addressObj = args.params[0]; //address\n                    if (addressObj && typeof addressObj === 'string') { //check address\n                        let isEqual = false;\n                        this.namespace.accounts.forEach((chain) => {\n                            let chainAddress = chain.split(':')[2];\n                            if (chainAddress.toLowerCase() === addressObj.toLowerCase()) {\n                                isEqual = true;\n                            }\n                        });\n                        (0, core_1.logDebug)(\"eip155 adaptArray eth_signTypedData_v4 >>>isEqual: \", isEqual);\n                        if (!isEqual) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error, not equal,  method: '${args.method}' `);\n                        }\n                        if (this.isRecord(args.params[1])) {\n                            messageObj = args.params[1];\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error , not string,  method: '${args.method}' `);\n                    }\n                }\n                else if (paramsArr && paramsArr.length === 1) {\n                    if (this.isRecord(args.params[0])) {\n                        messageObj = args.params[0];\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                    }\n                }\n                try {\n                    let messages = JSON.stringify(messageObj);\n                    args.params = {\n                        typedDataJson: messages\n                    };\n                }\n                catch (err) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params call JSON.stringify() failed,  method: '${args.method}' `);\n                }\n            }\n        }\n        else if (args.method === 'personal_sign') {\n            if (this.isArray(args.params)) {\n                if (args.params && args.params.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params error,  method: '${args.method}' `);\n                }\n                else if (args.params && args.params.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let firstObj = args.params[0];\n                let secondObj = args.params[1];\n                if (secondObj && typeof secondObj === 'string') { //check address\n                    let isEqual = false;\n                    this.namespace.accounts.forEach((chain) => {\n                        let chainAddress = chain.split(':')[2];\n                        if (chainAddress.toLowerCase() === secondObj.toLowerCase()) {\n                            isEqual = true;\n                        }\n                    });\n                    (0, core_1.logDebug)(\"eip155 adaptArray personal_sign >>>isEqual: \", isEqual);\n                    if (!isEqual) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error,  method: '${args.method}' `);\n                    }\n                }\n                if (firstObj && typeof firstObj === 'string') {\n                    args.params = {\n                        message: firstObj\n                    };\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is error,  method: '${args.method}' `);\n                }\n            }\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"eth_requestAccounts\":\n            case \"eth_accounts\":\n            case \"eth_chainId\":\n                return false;\n            case \"eth_sendTransaction\":\n            case \"eth_signTransaction\":\n            case \"eth_sign\":\n            case \"personal_sign\":\n            case \"eth_signTypedData\":\n            case \"wallet_addEthereumChain\":\n            case \"wallet_watchAsset\":\n            case \"eth_signTypedData_v4\":\n                return true;\n            case \"wallet_switchEthereumChain\": {\n                this.adaptArray(args);\n                this.updateRequestParams(args);\n                const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n                return !this.isChainApproved(parsedChainId);\n            }\n            default:\n                return false;\n        }\n        return false;\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.adaptArray(args);\n            (0, core_1.logDebug)(\"eip155 request --args--string>\", JSON.stringify(args));\n            this.updateRequestParams(args);\n            (0, core_1.logDebug)(\"eip155 request --params--string>\", JSON.stringify(args));\n            switch (args.method) {\n                case \"eth_requestAccounts\":\n                    return this.getAccounts();\n                case \"eth_accounts\":\n                    return this.getAccounts();\n                case \"eth_chainId\":\n                    return parseInt(this.getDefaultChain());\n                case \"wallet_switchEthereumChain\": {\n                    return (yield this.handleSwitchChain(args));\n                }\n                case \"wallet_addEthereumChain\":\n                    return this.addEthereumChain(args);\n                default:\n                    break;\n            }\n            if (this.namespace.methods.includes(args.method)) {\n                // personal_sign\n                // eth_signTypedData_v4\n                // eth_sendTransaction\n                // wallet_watchAsset\n                try {\n                    const response = yield this.client.request(args);\n                    (0, core_1.logDebug)(\"eip155 request --response----string>\", JSON.stringify(response));\n                    if (this.isRecord(response)) {\n                        if ('result' in response) {\n                            let result = response.result;\n                            if (result && typeof result === 'string' && (result === \"true\" || result === \"false\")) {\n                                (0, core_1.logDebug)(\"eip155 request --wallet_watchAsset>>>>\", result === \"true\");\n                                return (result === \"true\");\n                            }\n                            return response.result;\n                        }\n                    }\n                    return response;\n                }\n                catch (e) {\n                    (0, core_1.logDebug)(`eip155 request --response --error--string> e instanceof OKXConnectError ${e instanceof core_1.OKXConnectError}`, JSON.stringify(e));\n                    throw e;\n                }\n            }\n            else {\n                (0, core_1.logDebug)('[RPC] request begin');\n                return yield this.getHttpProvider().request(args);\n            }\n        });\n    }\n    addEthereumChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let resultData = (yield this.client.request(args));\n            try {\n                if ('result' in resultData) {\n                    let successData = resultData;\n                    let account = resultData.result;\n                    if (account) {\n                        const nameSpace = account.split(\":\")[0];\n                        const chainId = account.split(\":\")[1];\n                        const chain = nameSpace + ':' + chainId;\n                        let newNameSpace = this.namespace;\n                        this.namespace.accounts.push(account);\n                        this.namespace.chains.push(chain);\n                        if (this.isRecord(args.params)) {\n                            if (\"rpcUrls\" in args.params) {\n                                let rpcUrls = args.params.rpcUrls;\n                                let rpcUrl = rpcUrls ? rpcUrls[0] : undefined;\n                                if (rpcUrl) {\n                                    if (this.namespace.rpcMap) {\n                                        this.namespace.rpcMap[chainId] = rpcUrl;\n                                    }\n                                    else {\n                                        this.namespace.rpcMap = {\n                                            [chainId]: rpcUrl\n                                        };\n                                    }\n                                    this.setHttpProvider(chainId, rpcUrl);\n                                }\n                            }\n                        }\n                        this.events.emit(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, {\n                            eip155: this.namespace\n                        });\n                    }\n                }\n                else {\n                    new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request error`);\n                }\n            }\n            catch (error) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request  error`);\n            }\n            return null;\n        });\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        this.chainId = parseInt(chainId);\n        // set rpc\n        if (!this.httpProviders[chainId]) {\n            const rpc = rpcUrl || (0, utils_1.getRpcUrl)(`${this.name}:${chainId}`, this.namespace);\n            if (!rpc) {\n                // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n                (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            }\n            else {\n                this.setHttpProvider(chainId, rpc);\n            }\n        }\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId.toString();\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // ---------- Private ----------------------------------------------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"eip155 getAccounts \", accounts, this.chainId);\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    getHexChainIdFromRequest(args) {\n        let params = args.params;\n        let hexChainId = \"0x0\";\n        if (params && \"chainId\" in params) {\n            hexChainId = params.chainId;\n        }\n        hexChainId = hexChainId.startsWith(\"0x\") ? hexChainId : `0x${hexChainId}`;\n        (0, core_1.logDebug)(\"handleSwitchChain -->args \", args);\n        (0, core_1.logDebug)(\"handleSwitchChain -->hexChainId \", hexChainId);\n        const parsedChainId = parseInt(hexChainId, 16);\n        (0, core_1.logDebug)(\"handleSwitchChain -->parsedChainId \", parsedChainId);\n        return { parsedChainId, hexChainId };\n    }\n    handleSwitchChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n            if (this.isChainApproved(parsedChainId)) {\n                this.setDefaultChain(`${parsedChainId}`);\n            }\n            else {\n                const resultData = (yield this.client.request({\n                    method: \"wallet_switchEthereumChain\",\n                    chainId: args.chainId,\n                    params: {\n                        chainId: hexChainId,\n                    },\n                }));\n                try {\n                    if ('result' in resultData) {\n                        let successData = resultData;\n                        let account = resultData.result;\n                        if (account) {\n                            const nameSpace = account.split(\":\")[0];\n                            const chainId = account.split(\":\")[1];\n                            const chain = nameSpace + ':' + chainId;\n                            let newNameSpace = this.namespace;\n                            this.namespace.accounts.push(account);\n                            this.namespace.chains.push(chain);\n                            (0, core_1.logDebug)(\"handleSwitchChain -->wallet_switchEthereumChain \", resultData);\n                            this.setDefaultChain(`${parsedChainId}`);\n                            this.events.emit(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, {\n                                eip155: this.namespace\n                            });\n                        }\n                    }\n                    else {\n                        new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request error`);\n                    }\n                }\n                catch (error) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request  error`);\n                }\n            }\n            return null;\n        });\n    }\n    isChainApproved(chainId) {\n        return this.namespace.chains.includes(`${this.name}:${chainId}`);\n    }\n    // rpc\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            //   throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            (0, core_1.logDebug)('get parsed chain and rpc:', parsedChainId, parsedRpc);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        (0, core_1.logDebug)('get http providermap:', http);\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n}\nexports.Eip155Provider = Eip155Provider;\nexports.default = Eip155Provider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcConnection = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nconst DEFAULT_HTTP_HEADERS = {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n};\nconst DEFAULT_HTTP_METHOD = \"POST\";\nconst DEFAULT_FETCH_OPTS = {\n    headers: DEFAULT_HTTP_HEADERS,\n    method: DEFAULT_HTTP_METHOD,\n};\n// Source: https://nodejs.org/api/events.html#emittersetmaxlistenersn\nconst EVENT_EMITTER_MAX_LISTENERS_DEFAULT = 10;\nclass JsonRpcConnection {\n    constructor(url, disableProviderPing = false) {\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n        this.events = new eventemitter3_1.EventEmitter();\n        this.isAvailable = false;\n        this.registering = false;\n        if (!(0, core_2.isHttpUrl)(url)) {\n            throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n        }\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n    }\n    get connected() {\n        return this.isAvailable;\n    }\n    get connecting() {\n        return this.registering;\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            yield this.register(url);\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                throw new Error(\"Connection already closed\");\n            }\n            this.onClose();\n        });\n    }\n    send(payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                yield this.register();\n            }\n            try {\n                const body = (0, core_1.safeJsonStringify)(payload);\n                const res = yield (0, cross_fetch_1.default)(this.url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                const data = yield res.json();\n                this.onPayload({ data });\n            }\n            catch (e) {\n                this.onError(payload.id, e);\n            }\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    register() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            if (!(0, core_2.isHttpUrl)(url)) {\n                throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n            }\n            if (this.registering) {\n                return new Promise((resolve, reject) => {\n                    this.events.once(\"register_error\", (error) => {\n                        reject(error);\n                    });\n                    this.events.once(\"open\", () => {\n                        if (typeof this.isAvailable === \"undefined\") {\n                            return reject(new Error(\"HTTP connection is missing or invalid\"));\n                        }\n                        resolve();\n                    });\n                });\n            }\n            this.url = url;\n            this.registering = true;\n            try {\n                if (!this.disableProviderPing) {\n                    const body = (0, core_1.safeJsonStringify)({ id: 1, jsonrpc: \"2.0\", method: \"test\", params: [] });\n                    yield (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                }\n                this.onOpen();\n            }\n            catch (e) {\n                const error = this.parseError(e);\n                this.events.emit(\"register_error\", error);\n                this.onClose();\n                throw error;\n            }\n        });\n    }\n    onOpen() {\n        this.isAvailable = true;\n        this.registering = false;\n        this.events.emit(\"open\");\n    }\n    onClose() {\n        this.isAvailable = false;\n        this.registering = false;\n        this.events.emit(\"close\");\n    }\n    onPayload(e) {\n        if (typeof e.data === \"undefined\")\n            return;\n        const payload = typeof e.data === \"string\" ? (0, core_1.safeJsonParse)(e.data) : e.data;\n        this.events.emit(\"payload\", payload);\n    }\n    onError(id, e) {\n        const error = this.parseError(e);\n        const message = error.message || error.toString();\n        const payload = (0, core_2.formatJsonRpcError)(id, message);\n        this.events.emit(\"payload\", payload);\n    }\n    parseError(e, url = this.url) {\n        return (0, core_2.parseConnectionError)(e, url, \"HTTP\");\n    }\n}\nexports.JsonRpcConnection = JsonRpcConnection;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcProvider = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst types_1 = require(\"../../types\");\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nclass JsonRpcProvider extends types_1.IJSONRpcProvider {\n    constructor(connection) {\n        super(connection);\n        this.events = new eventemitter3_1.EventEmitter();\n        this.connected = false;\n        this.connecting = false;\n        this.hasRegisteredEventListeners = false;\n        this.connection = this.setConnection(connection);\n        if (this.connection.connected) {\n            this.registerEventListeners();\n        }\n    }\n    connect() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            yield this.open(connection);\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.close();\n        });\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    request(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.requestStrict((0, core_1.formatJsonRpcRequest)(request.method, request.params || [], (0, core_1.getBigIntRpcId)().toString()), // casting to any is required in order to use BigInt as rpcId\n            context);\n        });\n    }\n    // ---------- Protected ----------------------------------------------- //\n    requestStrict(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                if (!this.connection.connected) {\n                    try {\n                        yield this.open();\n                    }\n                    catch (e) {\n                        reject(e);\n                    }\n                }\n                this.events.on(`${request.id}`, (response) => {\n                    if ((0, core_1.isJsonRpcError)(response)) {\n                        reject(response.error);\n                    }\n                    else {\n                        resolve(response.result);\n                    }\n                });\n                try {\n                    (0, core_2.logDebug)('[RPC] >>> send request', request, context);\n                    yield this.connection.send(request, context);\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }));\n        });\n    }\n    setConnection(connection = this.connection) {\n        return connection;\n    }\n    onPayload(payload) {\n        this.events.emit(\"payload\", payload);\n        if ((0, core_1.isJsonRpcResponse)(payload)) {\n            this.events.emit(`${payload.id}`, payload);\n        }\n        else {\n            this.events.emit(\"message\", {\n                type: payload.method,\n                data: payload.params,\n            });\n        }\n    }\n    onClose(event) {\n        // Code 3000 indicates an abnormal closure signalled by the relay -> emit an error in this case.\n        if (event && event.code === 3000) {\n            this.events.emit(\"error\", new Error(`WebSocket connection closed abnormally with code: ${event.code} ${event.reason ? `(${event.reason})` : \"\"}`));\n        }\n        this.events.emit(\"disconnect\");\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            if (this.connection === connection && this.connection.connected)\n                return;\n            if (this.connection.connected)\n                this.close();\n            if (typeof connection === \"string\") {\n                yield this.connection.open(connection);\n                connection = this.connection;\n            }\n            this.connection = this.setConnection(connection);\n            yield this.connection.open();\n            this.registerEventListeners();\n            this.events.emit(\"connect\");\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.connection.close();\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    registerEventListeners() {\n        if (this.hasRegisteredEventListeners)\n            return;\n        this.connection.on(\"payload\", (payload) => this.onPayload(payload));\n        this.connection.on(\"close\", (event) => this.onClose(event));\n        this.connection.on(\"error\", (error) => this.events.emit(\"error\", error));\n        this.connection.on(\"register_error\", (_error) => this.onClose());\n        this.hasRegisteredEventListeners = true;\n    }\n}\nexports.JsonRpcProvider = JsonRpcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SolanaProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SolanaProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"solana\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"solana request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"solana provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    //   {\n    //     \"chains\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\" ],\n    //     \"accounts\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp:F7wnJc5wiBGy1k87jv6gyNwE3jMEWd18oTQiYsF1xVG7\"],\n    //     \"methods\": [\n    //         \"solana_signTransaction\",\n    //         \"solana_signMessage\"\n    //     ],\n    //     \"defaultChain\": \"5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\"\n    // }\n    // TODO:确认上面的defaultChain是否正确（没有solana前缀）\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"solana\"))) {\n                chainId = `solana:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.SolanaProvider = SolanaProvider;\nexports.default = SolanaProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SuiProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SuiProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeySui;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"sui request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"sui provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"sui\"))) {\n                chainId = `sui:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"sui_signMessage\":\n            case \"sui_signPersonalMessage\":\n            case \"sui_signTransactionBlock\":\n            case \"sui_signAndExecuteTransactionBlock\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.SuiProvider = SuiProvider;\nexports.default = SuiProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass TONProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyTON;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            (0, core_1.logDebug)(\"TONProvider request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"TONProvider request provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                if (!args.params) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params is nil\");\n                }\n                if (this.isRecord(args.params)) {\n                    const _e = args.params, { validUntil } = _e, newParams = __rest(_e, [\"validUntil\"]);\n                    let fromAddress = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n                    if ('from' in newParams) {\n                        fromAddress = newParams.from || ((_d = (_c = this.namespace.payload) === null || _c === void 0 ? void 0 : _c.ton_addr) === null || _d === void 0 ? void 0 : _d.address);\n                    }\n                    args.params['from'] = fromAddress;\n                    args.params['network'] = this.getDefaultChain();\n                    args.params['valid_until'] = validUntil;\n                    let response = yield this.client.request(args);\n                    if (this.isRecord(response) && 'result' in response) {\n                        const result = {\n                            boc: response.result.toString()\n                        };\n                        (0, core_1.logDebug)(\"TONProvider request provider response: \", JSON.stringify(response));\n                        (0, core_1.logDebug)(\"TONProvider request provider result: \", JSON.stringify(result));\n                        return result;\n                    }\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton_send request response is nil\");\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params type add nil\");\n                }\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        var _a, _b;\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"ton getAccounts accounts :\", accounts);\n        (0, core_1.logDebug)(\"ton getAccounts .namespace :\", JSON.stringify(this.namespace));\n        if (!accounts) {\n            return [];\n        }\n        let address = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n        (0, core_1.logDebug)(\"ton getAccounts address :\", address);\n        if (address) {\n            return [\n                address\n            ];\n        }\n        return [];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"ton_sendTransaction\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.default = TONProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./providers\"), exports);\n__exportStar(require(\"./misc\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IJSONRpcProvider = exports.IJSONRpcConnection = void 0;\nclass IJSONRpcConnection {\n}\nexports.IJSONRpcConnection = IJSONRpcConnection;\nclass IJSONRpcProvider {\n    constructor(opt) {\n    }\n}\nexports.IJSONRpcProvider = IJSONRpcProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setGlobal = exports.getGlobal = void 0;\nconst globals = {};\nconst getGlobal = (key) => {\n    return globals[key];\n};\nexports.getGlobal = getGlobal;\nconst setGlobal = (key, value) => {\n    globals[key] = value;\n};\nexports.setGlobal = setGlobal;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./misc\"), exports);\n__exportStar(require(\"./globals\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRpcUrl = getRpcUrl;\nexports.getChainId = getChainId;\nexports.convertChainIdToNumber = convertChainIdToNumber;\nexports.parseChainId = parseChainId;\nexports.mergeArrays = mergeArrays;\nfunction getRpcUrl(chainId, rpc, projectId) {\n    var _a;\n    const chain = parseChainId(chainId);\n    // no default\n    return (((_a = rpc.rpcMap) === null || _a === void 0 ? void 0 : _a[chain.reference]) ||\n        ``);\n}\nfunction getChainId(chain) {\n    return chain.includes(\":\") ? chain.split(\":\")[1] : chain;\n}\n// export function validateChainApproval(chain: string, chains: string[]): void {\n//   if (!chains.includes(chain)) {\n//     throw new Error(\n//       `Chain '${chain}' not approved. Please use one of the following: ${chains.toString()}`,\n//     );\n//   }\n// }\n// export function getChainsFromApprovedSession(accounts: string[]): string[] {\n//   return accounts.map((address) => `${address.split(\":\")[0]}:${address.split(\":\")[1]}`);\n// }\n// export function getAccountsFromSession(namespace: string, session: SessionTypes.Struct): string[] {\n//   // match namespaces e.g. eip155 with eip155:1\n//   const matchedNamespaceKeys = Object.keys(session.namespaces).filter((key) =>\n//     key.includes(namespace),\n//   );\n//   if (!matchedNamespaceKeys.length) return [];\n//   const accounts: string[] = [];\n//   matchedNamespaceKeys.forEach((key) => {\n//     const accountsForNamespace = session.namespaces[key].accounts;\n//     accounts.push(...accountsForNamespace);\n//   });\n//   return accounts;\n// }\n// export function mergeRequiredOptionalNamespaces(\n//   required: NamespaceConfig = {},\n//   optional: NamespaceConfig = {},\n// ){\n//   const requiredNamespaces = normalizeNamespaces(required);\n//   const optionalNamespaces = normalizeNamespaces(optional);\n//    return merge.merge(requiredNamespaces,optionalNamespaces)\n// }\n/**\n * Converts\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * into\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *\n */\n// export function normalizeNamespaces(namespaces: NamespaceConfig): NamespaceConfig {\n//   const normalizedNamespaces: NamespaceConfig = {};\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const rpcMap = values.rpcMap || {};\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       ...values,\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       rpcMap: { ...rpcMap, ...normalizedNamespaces[normalizedKey]?.rpcMap },\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n//\n// export function parseCaip10Account(caip10Account: string): string {\n//   return caip10Account.includes(\":\") ? caip10Account.split(\":\")[2] : caip10Account;\n// }\n/**\n * Populates the chains array for each namespace with the chains extracted from the accounts if are otherwise missing\n */\n// export function populateNamespacesChains(\n//   namespaces: SessionTypes.Namespaces,\n// ): Record<string, SessionTypes.Namespace> {\n//   const parsedNamespaces: Record<string, SessionTypes.Namespace> = {};\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const accounts = values.accounts || [];\n//     // If the key includes a CAIP separator `:` we know it's a namespace + chainId (e.g. `eip155:1`)\n//     const chains = isCaipNamespace(key)\n//       ? [key]\n//       : values.chains\n//       ? values.chains\n//       : getChainsFromApprovedSession(values.accounts);\n//     parsedNamespaces[key] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   }\n//   return parsedNamespaces;\n// }\nfunction convertChainIdToNumber(chainId) {\n    if (typeof chainId === \"number\")\n        return chainId;\n    if (chainId.includes(\"0x\")) {\n        return parseInt(chainId, 16);\n    }\n    chainId = chainId.includes(\":\") ? chainId.split(\":\")[1] : chainId;\n    return isNaN(Number(chainId)) ? chainId : Number(chainId);\n}\nconst CAIP_DELIMITER = \":\";\nfunction parseChainId(chain) {\n    const [namespace, reference] = chain.split(CAIP_DELIMITER);\n    return { namespace, reference };\n}\nfunction mergeArrays(a = [], b = []) {\n    return [...new Set([...a, ...b])];\n}\n","<template>\n  <div id=\"app\">\n    <el-container>\n      <el-header>OKX Connect</el-header>\n      <el-main>\n        <el-card class=\"wallet-info\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Wallet Info</div>\n          </template>\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Wallet Address:</strong> {{ getWalletAddress }}\n            </el-col>\n          </el-row>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Status :</strong> {{ currentStatus }}\n            </el-col>\n          </el-row>\n\n        </el-card>\n\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Connect Params</div>\n          </template>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"12\">\n              <el-checkbox v-model=\"withUI\" @change=\"handleWithUI\">\n                Show UI</el-checkbox>\n            </el-col>\n\n            <el-col :span=\"12\">\n              <el-checkbox v-model=\"universalToTG\" @change=\"handleUniversalToTG\">\n                Use mini wallet</el-checkbox>\n            </el-col>\n          </el-row>\n\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Modals</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"modals\" placeholder=\"Modals\" @change=\"handleModalsSelect\" multiple>\n                <el-option label=\"Before\" value=\"before\" />\n                <el-option label=\"Success\" value=\"success\" />\n                <el-option label=\"Error\" value=\"error\" />\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center; justify-content: space-between;\">\n            <el-col :span=\"6\" style=\"gap: 2px\">\n              <p style=\"font-size: 11pt; margin: 0px\">Return Strategy</p>\n              <p style=\"font-size: 9pt; margin: 0px\">(Mobile only)</p>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-select\n                v-model=\"returnStrategy\"\n                @change=\"handleReturnStrategySelect\"\n                placeholder=\"Return Strategy\"\n              >\n                <el-option\n                  v-for=\"strategy in returnStrategies\"\n                  :key=\"`return-strategy-select-option-${strategy}`\"\n                  :label=\"strategy\"\n                  :value=\"strategy\"\n                />\n              </el-select>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-input\n                v-if=\"returnStrategy === 'deeplink'\"\n                v-model=\"deeplink\"\n                @change=\"handleReturnStrategyDeeplink\"\n                placeholder=\"Deeplink\"\n                :disabled=\"returnStrategy !== 'deeplink'\"\n                style=\"margin: 0px\"\n              />\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Lang</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"language\" @change=\"handleLanguageSelect\" placeholder=\"Language\">\n                <el-option v-for=\"locale in locales\" :key=\"`language-select-option-${locale}`\" :label=\"locale\"\n                  :value=\"locale\" />\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Theme</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"theme\" @change=\"handleThemeSelect\" placeholder=\"Theme\">\n                <el-option label=\"LIGHT\" :value=\"THEME.LIGHT\" />\n                <el-option label=\"DARK\" :value=\"THEME.DARK\" />\n              </el-select>\n            </el-col>\n          </el-row>\n\n<!--          <el-row>-->\n<!--          <el-row style=\"align-items: center\">-->\n<!--            <el-col :span=\"4\">-->\n<!--              <p style=\"font-size: 11pt\">Connect</p>-->\n<!--              <p style=\"font-size: 11pt\">Methods</p>-->\n<!--            </el-col>-->\n<!--            <el-col :span=\"20\">-->\n<!--              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" placeholder=\"Methods\">-->\n<!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n<!--                           :value=\"methods\" />-->\n\n<!--              </el-select>-->\n<!--            </el-col>-->\n<!--          </el-row>-->\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Connect</p>\n              <p style=\"font-size: 11pt\">Methods</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" multiple placeholder=\"methods\">\n                <el-option\n                    v-for=\"item in connectMethods\"\n                    :key=\"item\"\n                    :label=\"item\"\n                    :value=\"item\">\n                </el-option>\n              </el-select>\n\n\n<!--              <el-select v-model=\"selectedMethod\" placeholder=\"Methods\" @change=\"handleConnectMethodsSelect\" multiple>-->\n<!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n<!--                           :value=\"methods\" />-->\n<!--              </el-select>-->\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">ton_proof</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-input v-model=\"tonProofValue\"  placeholder=\"input ton_proof\"></el-input>\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" align=\"middle\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Required Chains</div>\n            </el-col>\n            <el-col\n              :span=\"6\"\n              v-for=\"item in Object.keys(availableChains)\"\n              :key=\"item\"\n            >\n              <el-checkbox\n                v-model=\"availableChains[item].checked\"\n                :disabled=\"!areChainsInit\"\n                >{{ availableChains[item].name }}</el-checkbox\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" align=\"middle\" style=\"margin-top: 20px\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Optional Chains</div>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(43114)\" @change=\"() => handleOptionChange(43114)\">\n                AVAX</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(10)\" @change=\"() => handleOptionChange(10)\">OP</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(8453)\" @change=\"() => handleOptionChange(8453)\">\n                BASE</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(99781165)\"\n                @change=\"() => handleOptionChange(99781165)\">Nonexist</el-checkbox>\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"initBtnClicked\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectInitStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                type=\"primary\"\n                @click=\"connectBtnClicked\"\n                icon=\"el-icon-connection\"\n                :disabled=\"!areChainsInit\"\n                >{{ connectStatusStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"connectBtnAndSignClicked\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectAndSignStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                type=\"danger\"\n                @click=\"disconnectAction\"\n                icon=\"el-icon-switch-button\"\n                :disabled=\"!areChainsInit || walletAddress.length == 0\"\n                >{{ disconnectStatusStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n          <teleport to=\"body\">\n            <div v-if=\"showModal\" class=\"modal-overlay\" @click=\"closeModal\">\n              <div class=\"modal-content\" @click.stop>\n                <button class=\"close-button\" @click=\"closeModal\">\n                  &times;\n                </button>\n                <h2>Scan to connect</h2>\n                <qrcode-vue :value=\"qrValue\" :size=\"350\" level=\"L\" />\n              </div>\n            </div>\n          </teleport>\n        </el-card>\n\n        <!-- 发送交易 -->\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Transactions</div>\n          </template>\n\n          <el-tabs v-model=\"activeTab\" type=\"border-card\" @tab-click=\"clickActiveTab\">\n            <!-- ETH -->\n            <el-tab-pane label=\"ETH\" name=\"eip155:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to ETH)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve TONCoin)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(eth mint\n                    nft)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add SPX6900)\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TON\" name=\"ton:-239\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_getAccount\">ton_getAccount</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_sendTransaction\">ton_sendTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- solana -->\n            <el-tab-pane label=\"Sol\" name=\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- Sui-->\n            <el-tab-pane label=\"Sui\" name=\"sui:mainnet\">\n              <SuiPanel @generateTransactionParams=\"sui_generateTransactionParams\" />\n            </el-tab-pane>\n            <!-- BTC -->\n            <el-tab-pane label=\"BTC\" name=\"btc:mainnet\">\n              <BTCPanel @generateTransactionParams=\"btc_generateTransactionParams\" />\n            </el-tab-pane>\n\n            <!-- Fractal BTC -->\n            <el-tab-pane label=\"Fractal\" name=\"fractal:mainnet\">\n              <FractalPanel @generateTransactionParams=\"fractal_generateTransactionParams\" />\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Tron\" name=\"tron:mainnet\">\n              <TronTransactionPanel\n                  @generateTransactionParams=\"tron_generateTransactionParams\"\n                  @generateTransactionResult=\"tron_getTransactionResult\" />\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Aptos\" name=\"aptos:mainnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signTransaction\">aptos_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"aptos_signAndSubmitTransaction\">aptos_signAndSubmitTransaction</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Cosmos\" name=\"cosmos:cosmoshub-4\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <!-- Polygon-->\n            <el-tab-pane label=\"Polygon\" name=\"eip155:137\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send POL)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve sushi)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(polygon mint\n                    nft)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add LGNS)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_testRpc()\">wallet_testRpc(Polygon)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\"\n                  >eth_sendTransaction(转账FUSE)</el-button\n                  >\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\"\n                  >eth_sendTransaction(授权USDC)</el-button\n                  >\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- BSC-->\n            <el-tab-pane label=\"BNB\" name=\"eip155:56\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to BNB)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve POSI)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add FET)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_testRpc()\">wallet_testRpc(check balance on eth)</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Fuse\" name=\"eip155:122\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_swap\">eth_sendTransaction(Swap)</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Sonic testnet\" name=\"svm:70000062\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Movement\" name=\"movement:testnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"move_signTransaction\">move_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"move_signAndSubmitTransaction\">move_signAndSubmitTransaction</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n\n            <el-tab-pane label=\"osmos\" name=\"cosmos:osmosis-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"SEI\" name=\"cosmos:pacific-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TEST \" name=\"test:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"testBase64UrlSafe\">testBase64UrlSafe</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n          </el-tabs>\n\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Data:</div>\n            <el-input v-model=\"testTransaction\" type=\"textarea\" :rows=\"5\" placeholder=\"sendTransactions\"></el-input>\n          </el-col>\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Result :</div>\n            <el-input v-model=\"testboc\" type=\"textarea\" :rows=\"5\" placeholder=\"boc\"></el-input>\n          </el-col>\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button type=\"primary\" @click=\"sendTransaction()\">{{\n                testTransactionStr\n                }}</el-button>\n            </el-col>\n          </el-row>\n        </el-card>\n      </el-main>\n    </el-container>\n  </div>\n</template>\n\n<style scoped>\n/* 重置全局边距和内边距 */\nbody,\nhtml {\n  margin: 0;\n  padding: 0;\n  height: 100%;\n}\n\n/* 确保 app 容器占满整个视口 */\n#app {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin: 0 auto;\n  /* 居中 */\n  max-width: 600px;\n  /* 设置最大宽度 */\n  padding: 0 20px;\n  /* 添加一些左右内边距 */\n}\n\n/* 调整 el-container 样式 */\n.el-container {\n  min-height: 100vh;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n}\n\n/* 调整 el-header 样式 */\n.el-header {\n  background-color: #333333;\n  color: white;\n  height: 50px;\n  line-height: 50px;\n  font-size: 18px;\n  font-weight: bold;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1000;\n}\n\n/* 调整 el-main 样式 */\n.el-main {\n  padding: 70px 0 20px;\n  /* 增加顶部内边距以避免被固定header遮挡 */\n  flex-grow: 1;\n}\n\n.el-card {\n  margin-bottom: 20px;\n}\n\n.info-row {\n  margin-bottom: 10px;\n}\n\n.input-label {\n  margin-bottom: 5px;\n  text-align: left;\n}\n\n.el-input {\n  margin-bottom: 10px;\n}\n\n/* 通用按钮样式 */\n.wallet-actions .el-button,\n.transaction .el-button,\n.clear-cache .el-button {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 40px;\n}\n\n.wallet-actions .el-button span,\n.transaction .el-button span,\n.clear-cache .el-button span {\n  margin: 0 auto;\n}\n\n/* 按钮行间距 */\n.wallet-actions .button-row,\n.transaction .button-row {\n  margin-bottom: 8px;\n}\n\n.wallet-actions .button-row:last-child,\n.transaction .button-row:last-child {\n  margin-bottom: 0;\n}\n\n/* 调整图标和文字的对齐 */\n.wallet-actions .el-button [class^=\"el-icon-\"],\n.transaction .el-button [class^=\"el-icon-\"],\n.clear-cache .el-button [class^=\"el-icon-\"] {\n  margin-right: 5px;\n  vertical-align: middle;\n}\n\n/* 新增：调整发送交易按钮与输入框的间距 */\n.transaction .el-row:not(:last-child) {\n  margin-bottom: 10px;\n}\n\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.modal-content {\n  background-color: white;\n  padding: 20px;\n  border-radius: 8px;\n  text-align: center;\n  position: relative;\n  max-width: 90%;\n  width: 400px;\n}\n\n.close-button {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  font-size: 24px;\n  border: none;\n  background: none;\n  cursor: pointer;\n}\n\n/* 响应式调整 */\n@media (max-width: 600px) {\n  #app {\n    padding: 0 10px;\n  }\n\n  .el-main {\n    padding: 60px 0 10px;\n  }\n}\n</style>\n<script>\nimport {OKX_CONNECT_ERROR_CODES, safeJsonStringify,getAppWalletDeepLink,getUniversalLink} from \"@okxconnect/core\"\nimport {\n  OKXBtcProvider,\n  OKXUniversalProvider,\n  OKXCosmosProvider,\n  OKXTonProvider,\n  OKXTronProvider\n} from \"@okxconnect/universal-provider\"\nimport {OKXSolanaProvider} from \"@okxconnect/solana-provider\";\nimport {\n  Connection,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n  TransactionMessage,\n  VersionedTransaction\n} from '@solana/web3.js';\nimport {OKXSuiProvider as SuiAdapter} from \"@okxconnect/sui-provider\"\nimport QrcodeVue from 'qrcode.vue'\n\nimport {OKXAptosProvider} from \"@okxconnect/aptos-provider\";\nimport {Aptos, AptosConfig, Network} from \"@aptos-labs/ts-sdk\";\n\nimport BTCPanel from \"./components/BtcTransactionPanel.vue\";\nimport FractalPanel from \"./components/FractalTransactionPanel.vue\"\nimport SuiPanel from \"./components/SuiTransactionPanel.vue\";\n\nimport {OKXUniversalConnectUI, THEME} from \"@okxconnect/ui\";\nimport { ethers } from 'ethers';\nimport VConsole from 'vconsole';\nimport nacl from \"tweetnacl\";\nconst { verifyADR36Amino } = require('@keplr-wallet/cosmos')\nconst { fromBech32 } = require('@cosmjs/encoding')\nimport { verifyPersonalMessageSignature } from '@mysten/sui/verify';\nimport {useShortLink} from \"@okxconnect/core\";\nimport TronTransactionPanel from \"@/components/TronTransactionPanel.vue\";\nimport {TronWeb} from \"tronweb\";\nnew VConsole();\n\nconst allChains = {\n  1: { name: \"Eth\", checked: false },\n  56: { name: \"BNB\", checked: false },\n  137: { name: \"Polygon\", checked: false },\n  122: { name: \"Fuse\", checked: false },\n  \"ton:-239\":{name: \"TON\",checked: false},\n  \"btc:mainnet\": { name: \"BTC\", checked: false },\n  \"sui:mainnet\": { name: \"Sui\", checked: false },\n  \"aptos:mainnet\": { name: \"Aptos\", checked: false },\n  \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\": {\n    name: \"Solana\",\n    checked: false,\n  },\n  \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\": {\n    name: \"Sol testnet\",\n    checked: false,\n  },\n  \"svm:70000062\": {\n    name: \"Sonic testnet\",\n    checked: false,\n  },\n  \"movement:testnet\": { name: \"Movement\", checked: false },\n  \"fractal:mainnet\": { name: \"Fractal\", checked: false },\n  \"cosmos:osmosis-1\": {name: \"Osmos\", checked: false},\n  \"cosmos:cosmoshub-4\": {name: \"Cosmos\", checked: false},\n  \"cosmos:pacific-1\": {name: \"SEI\", checked: false},\n  \"cosmos:abvdefg\": {name: \"cosmos:abvdefg\", checked: false},\n  \"tron:mainnet\": {name: \"tron\", checked: false},\n  997865: { name: \"Non Exist chain\", checked: false },\n  2020: { name: \"Ronin\", checked: false },\n  1666600000: { name: \"Harmony\", checked: false },\n};\n\nvar optionChains = new Set([]);\nvar selectedModals = [\"before\", \"success\", \"error\"];\nvar selectedReturnStrategy = \"none\";\nvar selectedDeepLink = \"tg://resolve\";\nvar selectedLanguage = \"en_US\";\nvar selectedTheme = THEME.LIGHT;\n\n// import QrcodeVue from 'qrcode.vue'\nexport default {\n  name: \"App\",\n  components: {\n    TronTransactionPanel,\n    QrcodeVue,\n    BTCPanel,\n    FractalPanel,\n    SuiPanel\n  },\n\n  data: () => {\n    return {\n      activeTab: \"eip155:1\",\n      testTopic: \"\",\n      testPublicKey: \"\",\n      testProofPayload: \"\",\n      tonProofValue:\"\",\n      pendingDeepLink: \"-\",\n      logList: [],\n      connectReady: false,\n      connectStatusStr: \"Connect\",\n      connectAndSignStr: \"ConnectAndsign(two steps only ETH)\",\n      connectInitStr: \"init test\",\n      disconnectStatusStr: \"Disconnect\",\n      localPubKey: \"\",\n      localSecKey: \"\",\n      testTransaction: \"\",\n      selectedChain: \"eip155:1\",\n      testTransactionStr: \"Send\",\n      walletAddress: \"\",\n      testboc: \"\",\n      ProofPayloadVerify: \"\",\n      showModal: false,\n      showVerifyRow: false,\n      qrValue: \"https://www.okx.com/download\",\n      currentStatus: \"\",\n      areChainsInit: false,\n      availableChains: allChains,\n      isOptionalChecked: (chainId) => {\n        return optionChains.has(chainId);\n      },\n      withUI: localStorage.getItem(\"autoRefresh\") != \"false\",\n      universalToTG: localStorage.getItem(\"universalToTG\") != \"false\",\n      modals: selectedModals,\n      returnStrategies: [\"none\", \"back\", \"deeplink\"],\n      returnStrategy: selectedReturnStrategy,\n      deeplink: selectedDeepLink,\n      locales: [\n        \"en_US\",\n        \"ru_RU\",\n        \"zh_CN\",\n        \"zh\",\n        \"ar_AE\",\n        \"cs_CZ\",\n        \"de_DE\",\n        \"es_ES\",\n        \"es_LAT\",\n        \"fr_FR\",\n        \"id_ID\",\n        \"it_IT\",\n        \"nl_NL\",\n        \"pl_PL\",\n        \"pt_BR\",\n        \"pt_PT\",\n        \"ro_RO\",\n        \"tr_TR\",\n        \"uk_UA\",\n        \"vi_VN\",\n      ],\n      selectedMethod:[],\n      selectedMethodData:[],\n      connectMethods:[\n        \"wallet_addEthereumChain(ETH)\",\n        \"personal_sign(ETH)\",\n        \"solana_signMessage(Sol mainnet)\",\n        \"sui_signMessage(Sui mainnet)\",\n        \"sui_signPersonalMessage(Sui mainnet)\",\n        \"btc_signMessage(BTC)\",\n        \"aptos_signMessage(aptos mainnet)\",\n        \"cosmos_signArbitrary(cosmoshub)\",\n        \"test_noSupport_eth(ETH)\",\n        \"tron_signMessage\",\n        \"tron_signMessageV2\",\n      ],\n\n      language: selectedLanguage,\n      theme: selectedTheme,\n      THEME: THEME,\n      handleWithUI: (isChecked) => {\n        localStorage.setItem(\"autoRefresh\", `${isChecked}`);\n        location.reload();\n      },\n      handleUniversalToTG: (isChecked) => {\n        localStorage.setItem(\"universalToTG\", `${isChecked}`);\n      },\n      handleOptionChange: (chainId) => {\n        if (optionChains.has(chainId)) {\n          optionChains.delete(chainId);\n        } else {\n          optionChains.add(chainId);\n        }\n      },\n    };\n  },\n  computed: {\n    getWalletAddress: function () {\n      return this.walletAddress;\n    },\n  },\n  methods: {\n    isChecked(chainId) {\n      return this.selectedChains.has(chainId);\n    },\n\n    initChains(newChains) {\n      if (newChains.length > 0) {\n        const updatedChains = Object.assign({}, this.availableChains);\n        for (const chainId of newChains) {\n          if (updatedChains[chainId]){\n            updatedChains[chainId].checked = !updatedChains[chainId].checked;\n          }\n        }\n        this.availableChains = updatedChains;\n      }\n\n      this.areChainsInit = true;\n    },\n\n    async clickActiveTab(tab) {\n      const tabName = tab.props ? tab.props.name : tab.name;\n      this.selectedChain = tabName;\n      console.log(`已切换到链 :`, tabName);\n\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      window.provider.setDefaultChain(this.selectedChain);\n    },\n\n    async initBtnClicked() {\n      var initCall;\n      if (!this.withUI) {\n        initCall = OKXUniversalProvider.init({\n          dappMetaData: {\n            name: \"univer test dapp\",\n            icon: \"https://avatars.githubusercontent.com/u/37784886\",\n          },\n        });\n      } else {\n        initCall = OKXUniversalConnectUI.init({\n          dappMetaData: {\n            icon: \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\",\n            name: \"OKX WalletConnect UI Demo\",\n          },\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: \"all\",\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme\n          },\n        });\n      }\n\n      initCall.then((provider) => {\n        window.provider = provider;\n        window.tonProvider = new OKXTonProvider(window.provider);\n        window.tonProvider.onStatusChange((walletInfo) => {\n              console.log('TONConnection onStatusChange:', JSON.stringify(walletInfo));\n            }, (err) => {\n              console.log('TONConnection onStatusChange error:', err);\n            }\n        )\n\n\n\n        console.log(\"init finished:\", provider);\n        console.log(\"init finished session:\", JSON.stringify(provider.session));\n\n        if (provider.session?.namespaces) {\n          const newChains = [];\n          console.log(\"namespaces\", provider.session.namespaces);\n          Object.entries(provider.session.namespaces).forEach(([key, value]) => {\n            if (key === \"eip155\") {\n              value.chains.forEach((chain) => {\n                newChains.push(parseInt(chain.substring(7)));\n              });\n            }\n            else {\n              value.chains.forEach((chain) => {\n                newChains.push(chain);\n              });\n            }\n          });\n\n          console.log(\"existing chains:\", newChains);\n          this.initChains(newChains);\n        } else {\n          this.initChains([]);\n        }\n\n        provider.on(\"display_uri\", (uri) => {\n          if (!useShortLink()){\n            if (this.isPC()) {\n              if (uri && !this.withUI && !this.universalToTG) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          }\n          console.log(\"通知>>>display_uri  ==> \", uri);\n        });\n\n        provider.on(\"connect_signResponse\", (items) => {\n          console.log(\"通知>>>connect_signResponse  ==> \", JSON.stringify(items));\n          this.verifyMessage(items)\n        })\n\n        provider.on(\"short_display_uri\", (uri) => {\n          if (useShortLink()){\n            if (this.isPC()) {\n              if (uri && !this.withUI && !this.universalToTG) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          }\n          console.log(\"通知>>>short_display_uri  ==> \", uri);\n        });\n\n\n        provider.on(\"session_connecting\", () => {\n          if (useShortLink()){\n            alert(\"session_connecting\")\n          }\n          console.log(\"通知>>>session_connecting  ==> \");\n        });\n\n        provider.on(\"connect\", (session) => {\n          console.log(\"通知>>>get connect session\", session);\n        });\n        provider.on(\"reconnect\", (session) => {\n          console.log(\"通知>>>get reconnect session\", session);\n          this.walletAddress = \"connected\";\n        });\n        provider.on(\"disconnect\", ({ topic }) => {\n          console.log(`通知>>>get disconnect  ${topic}`);\n          this.walletAddress = \"disconnecteddddd\";\n        });\n        provider.on(\"session_delete\", ({ topic }) => {\n          console.log(`通知>>>get session_delete  ${topic}`);\n        });\n        provider.on(\"session_update\", (session) => {\n          console.log(`通知>>>get session_update `, JSON.stringify(session));\n        });\n      });\n    },\n\n    async connectBtnClicked() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        this.testTonSdk(false);\n      } else {\n        console.log(`connectBtnClicked provider not finish init`);\n      }\n    },\n    async connectBtnAndSignClicked() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        this.testTonSdk(true);\n      } else {\n        console.log(`connectBtnClicked provider not finish init`);\n      }\n    },\n\n    async disconnectAction() {\n      try {\n        console.log(\"get disconnect wallet btn clicked\");\n        // await TON.disconnect();\n        var provider = window.provider;\n        await provider.disconnect();\n        this.walletAddress = \"disconnected\";\n      } catch (error) {\n        console.log(\"Disconnect  error ==>> \", error.message);\n        this.currentStatus = error.message;\n      }\n    },\n\n    async eth_requestAccounts() {\n      var data = { method: \"eth_requestAccounts\" };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_chainId() {\n      var data = { method: \"eth_chainId\" };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async wallet_switchEthereumChain() {\n      var data = { method: \"wallet_switchEthereumChain\" };\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async wallet_addEthereumChain() {\n      var data = {\n        method: \"wallet_addEthereumChain\",\n        params: {\n          blockExplorerUrls: [\"https://explorer.fuse.io\"],\n          chainId: \"0x7a\",\n          chainName: \"Fuse\",\n          nativeCurrency: { name: \"Fuse\", symbol: \"FUSE\", decimals: 18 },\n          rpcUrls: [\"https://rpc.fuse.io\"],\n        },\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n    async personal_sign() {\n      if (this.selectedChain === \"eip155:1\") {\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0x1ca023f10e157d148deed210f8bee193657a1eaa7f187909e20a9dc3b071dbc364c41fde37960c05093359f410a061ec8a7dca8c0c39fc7c1e24de8a3329775d1b\n\n        var accounts = await window.provider.request(\n          { method: \"eth_requestAccounts\" },\n          \"eip155:1\"\n        );\n        var address = accounts[0];\n        console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n        var dataETH = {\n          method: \"personal_sign\",\n          params: [\n            \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n            address,\n          ],\n        };\n\n        this.testTransaction = JSON.stringify(dataETH);\n      } else if (\n        this.selectedChain === \"eip155:137\" ||\n        this.selectedChain === \"eip155:122\"\n      ) {\n        // method\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0xebda9cfa2af43999058dffa0107031d1ef7fc0252dca85dcbd22ea097af922ca39b64d509ef61ce42b7641c5840b8a80337ffd1411b13e87e2260a3f1b6c151c1b\n\n        var dataPolygon = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n        this.testTransaction = JSON.stringify(dataPolygon);\n      } else if (this.selectedChain === \"eip155:56\") {\n        var data = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n\n        this.testTransaction = JSON.stringify(data);\n      }\n    },\n\n    async eth_sendTransaction_swap() {\n      var data = {\n        method: \"eth_sendTransaction\",\n        chainId: \"eip155:122\",\n        params: {\n          value: \"0x38d7ea4c68000\",\n          gas: \"0x2665f\",\n          to: \"0xf2614A233c7C3e7f08b1F887Ba133a13f1eb2c55\",\n          from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n          data: \"0x2646478b000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee00000000000000000000000000000000000000000000000000038d7ea4c68000000000000000000000000000620fd5fa44be6af63715ef4e65ddfa0387ad13f5000000000000000000000000000000000000000000000000000000000000001b000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000700301ffff0201602352A9Eb5234466Eac23E59e7B99bCaE79C39c0BE9e53fd7EDaC9F859882AfdDa116645287C629040BE9e53fd7EDaC9F859882AfdDa116645287C62900602352A9Eb5234466Eac23E59e7B99bCaE79C39c01f2F3e73be57031114dd1f4E75c1DD87658be7F0E000bb800000000000000000000000000000000\",\n        },\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_signTypedData_v4() {\n      // method\n      // eth_signTypedData\n      // address\n      // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n      // valid\n      // true\n      // result\n      // 0xa8bb3c6b33a119d2d567c7632195c21988df778006082742125a591f5c633f716107883a37f7de6531a6312a5f69022135bf46fe5ab77905b62c82b3395f985e1b\n      //\n\n      // var data = {\n      //   \"method\": \"eth_signTypedData_v4\",\n      //   \"params\": {\n      //     \"typedDataJson\":\"{\\\"types\\\":{\\\"EIP712Domain\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"version\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"chainId\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"name\\\":\\\"verifyingContract\\\",\\\"type\\\":\\\"address\\\"}],\\\"Person\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"wallet\\\",\\\"type\\\":\\\"address\\\"}],\\\"Mail\\\":[{\\\"name\\\":\\\"from\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"to\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"contents\\\",\\\"type\\\":\\\"string\\\"}]},\\\"primaryType\\\":\\\"Mail\\\",\\\"domain\\\":{\\\"name\\\":\\\"Ether Mail\\\",\\\"version\\\":\\\"1\\\",\\\"chainId\\\":1,\\\"verifyingContract\\\":\\\"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\\\"},\\\"message\\\":{\\\"from\\\":{\\\"name\\\":\\\"Cow\\\",\\\"wallet\\\":\\\"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\\\"},\\\"to\\\":{\\\"name\\\":\\\"Bob\\\",\\\"wallet\\\":\\\"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\\\"},\\\"contents\\\":\\\"Hello, Bob!\\\"}}\"\n      // }}\n\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n        \"eip155\"\n      );\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n      var data = {\n        method: \"eth_signTypedData_v4\",\n        params: [\n          address,\n          {\n            types: {\n              EIP712Domain: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"version\",\n                  type: \"string\",\n                },\n                {\n                  name: \"chainId\",\n                  type: \"uint256\",\n                },\n                {\n                  name: \"verifyingContract\",\n                  type: \"address\",\n                },\n              ],\n              Person: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"wallet\",\n                  type: \"address\",\n                },\n              ],\n              Mail: [\n                {\n                  name: \"from\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"to\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"contents\",\n                  type: \"string\",\n                },\n              ],\n            },\n            primaryType: \"Mail\",\n            domain: {\n              name: \"Ether Mail\",\n              version: \"1\",\n              chainId: 1,\n              verifyingContract: \"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\",\n            },\n            message: {\n              from: {\n                name: \"Cow\",\n                wallet: \"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\",\n              },\n              to: {\n                name: \"Bob\",\n                wallet: \"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\",\n              },\n              contents: \"Hello, Bob!\",\n            },\n          },\n        ],\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_sendTransaction_transfer() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            chainId: \"0x1\",\n            to: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            value: \"0x5af3107a4000\",\n            maxPriorityFeePerGas: \"0x3b9aca00\",\n            gas: \"0x5e56\",\n            maxFeePerGas: \"0x2643b9db8\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gasPrice: \"0x17003f6530\",\n            nonce: \"0x0d30\",\n            data: \"0x\",\n            value: \"0x00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasLimit: \"0x5208\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x5e56\",\n            value: \"0x5af3107a4000\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasPrice: \"0x3b9aca00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            chainId: \"0x38\",\n          },\n        };\n      }else if(this.selectedChain === \"eip155:122\"){\n         data =   {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            value: \"0x0\",\n            chainId: \"0x7a\",\n          }\n        }\n      }\n\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n        \"eip155\"\n      );\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"to\"] = address;\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_approve() {\n      var data = {};\n\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000000000000022d473030f116ddee9f6b43ac78ba3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x582d872a1b094fc48f5de31d3b73f2d9be47def1\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000f6f8096ac575b0\",\n            to: \"0x0b3F868E0BE5597D5DB7fEB59E1CADBb0fdDa50a\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            value: \"0x0\",\n            gas: \"0xe117\",\n            gasPrice: \"0xb2d05e00\",\n            data: \"0x095ea7b300000000000000000000000031c2f6fcff4f8759b3bd5bf0e1084a055615c768ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x5CA42204cDaa70d5c773946e69dE942b85CA6706\",\n          },\n        };\n      }else if (this.selectedChain === 'eip155:122'){\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000000000000013b3\",\n            to: \"0x620fd5fa44BE6af63715Ef4E65DDFA0387aD13F5\",\n          },\n        };\n      }\n\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n        \"eip155\"\n      );\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_mint() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x4cacb\",\n            data: \"0xa64dfa75000000000000000000000000ed688002f3797599db8b4feacfe8b1dda0df1c8d000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cecb15396825a895ff8da8fc2d2c77a234dccee00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f6261667962656968643737366b6177706e71336f6f6a6635693274787a76617737737164656b34616a776472637472703261366f626b70723773792f7b69647dan            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x30795\",\n            data: \"0xa64dfa75000000000000000000000000341b3687f0309778f08f29336b2c4b9c38b9f110000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f62616679626569686a6279676b68747a71376b68377434336266686e676e793236337668766f6578716a6d6e377161716166366e717a64743777712f7b69647dan            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      }\n\n      let str = JSON.stringify(data);\n      console.log(\"-----长度--->\", str.length);\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n        \"eip155\"\n      );\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async wallet_testRpc() {\n      let provider = window.provider;\n      provider.setDefaultChain(\n        `eip155:56`,\n        `https://eth-mainnet.g.alchemy.com/v2/NxUfYJUr-TQtEpLmSXhhD5pXn70GwsyV`\n      );\n      var data = {\n        method: \"eth_getBalance\",\n        params: [\"0x8D97689C9818892B700e27F316cc3E41e17fBeb9\", \"latest\"],\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async wallet_watchAsset() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xe0f63a424a4439cbe457d80e4f4b51ad25b2c56c\",\n              symbol: \"SPX6900\",\n              image:\n                \"https://assets.coingecko.com/coins/images/31401/standard/sticker_%281%29.jpg?1702371083\",\n              decimals: 8,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xeB51D9A39AD5EEF215dC0Bf39a8821ff804A0F01\",\n              symbol: \"LGNS\",\n              image: \"https://polygonscan.com/token/images/originlgns_32.png\",\n              decimals: 9,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0x031b41e504677879370e9dbcf937283a8691fa7f\",\n              symbol: \"FET\",\n              image: \"https://bscscan.com/token/images/fetch_32.png\",\n              decimals: 18,\n            },\n          },\n        };\n      }\n\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async ton_sendTransaction() {\n      var data  = {\n        \"messages\":[{\"address\":\"EQARULUYsmJq1RiZ-YiH-IJLcAZUVkVff-KBPwEmmaQGH6aC\",\"amount\":\"205000000\",\"payload\":\"te6cckEBAgEAhwABbQ+KfqUAAADNgG7tIEATEtAIAO87mQKicbKgHIk4pSPP4k5xhHqutqYgAB7USnesDnCcECwbgQMBAJUlk4VhgBD3JEg1TUr75iTijBghOKm/sxNDXUBl7CD6WMut0Q85x4RafwA/Es89DBXoTxuqxVFxyBbzt9Rav2HBUKl7hmkvLuKHLBCW57aK\"}],\n        \"validUntil\":1792481054,\n        \"network\":'-239'}\n      this.testTransaction = JSON.stringify(data)\n    },\n    ton_getAccount() {\n      this.testTransaction = \"这里是同步获取 不再需要点击 <<发送交易>>\"\n      let result =   window.tonProvider.account()\n      if (result) {\n        this.testboc = JSON.stringify(result);\n      } else {\n        this.testboc = 'null'\n      }\n    },\n\n    async tonUniversalLog() {\n      console.log(\"ton 信息: tonProvider  connected:\",window.tonProvider.connected())\n      console.log(\"ton 信息: tonProvider  account:\",JSON.stringify(window.tonProvider.account()))\n      console.log(\"ton 信息: tonProvider  wallet:\",JSON.stringify(window.tonProvider.wallet()))\n    },\n\n    async sendTransactionAlert() {\n      //\n      const response = await fetch(`https://apitest.fireverse.ai/oauth/okx/getNonce?publicAddress=0x0cecb15396825a895ff8da8fc2d2c77a234dccee`);\n      const data = await response.json();\n      console.log(\"请求数据----\",JSON.stringify(data))\n      await this.personal_sign()\n      if (confirm(\"Are you want to sign message?\")) {\n        this.sendTransaction();\n      }\n\n      // window.open(\"https://www.okx.com/download?deeplink=okx%3A%2F%2Fweb3%2Fwallet%2Fconnect\",'_self')\n    },\n\n    async sendTransaction() {\n      if (this.selectedChain.startsWith(\"aptos\")\n          || this.selectedChain.startsWith(\"movement\")\n          || this.selectedChain.startsWith(\"solana\")\n          || this.selectedChain.startsWith(\"sonic\")\n          || this.selectedChain.startsWith(\"cosmos\")) {\n        return\n      }\n      console.log(\"sendTransaction\", window.provider);\n      console.log(\"sendTransaction内容11------\", this.testTransaction);\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      if (this.testTransaction && window.provider) {\n        // eslint-disable-next-line no-undef\n        const sendData = JSON.parse(this.testTransaction);\n        try {\n          console.log(\"sendTransaction-----22method>>\", sendData.method);\n\n          let chainId = \"eip155:1\";\n          if (this.selectedChain) {\n            chainId = this.selectedChain;\n            console.log(\n              \"sendTransaction-----this.selectedChain>>\",\n              this.selectedChain\n            );\n          }\n          console.log(\"windowOpen[click_1]: \", Date.now());\n          if (chainId == \"sui:mainnet\") {\n            const adapter = new SuiAdapter(window.provider);\n            var suiResult = \"invalid result\";\n            if (this.currentSuiMethod == 'sui_getAccount') {\n              let result = adapter.getAccount()\n              if (typeof result == \"string\") {\n                this.testboc = result\n              } else {\n                this.testboc = JSON.stringify(result)\n              }\n            }\n            if (this.currentSuiMethod == \"sui_signTransaction\") {\n              suiResult = await adapter.signTransaction(\n                this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signAndExecuteTransaction\") {\n              suiResult = await adapter.signAndExecuteTransaction(\n                this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signMessage\") {\n              console.log(\"signMessage----\", this.currentSuiTransaction);\n              suiResult = await adapter.signMessage(this.currentSuiTransaction);\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_signPersonalMessage\") {\n              console.log(\n                \"signPersonalMessage----\",\n                this.currentSuiTransaction\n              );\n              suiResult = await adapter.signPersonalMessage(\n                this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_testRpc\") {\n              console.log(\"test rpc----\", this.currentSuiTransaction);\n              console.log(\n                `请求数据发送 rpc ----->> ${JSON.stringify(sendData)}`\n              );\n              const res = await window.provider.request(sendData, chainId);\n              console.log(`请求数据回调 rpc ----->> ${JSON.stringify(result)}`);\n              if (typeof res == \"string\") {\n                this.testboc = res;\n              } else {\n                this.testboc = JSON.stringify(res);\n              }\n            }\n            console.log(\"windowOpen[click_2]: \", Date.now());\n            return;\n          }else if(chainId === \"ton:-239\"){\n            console.log(\n                `请求数据发送 sendTransaction ---ton-->> ${JSON.stringify(sendData)}`\n            );\n            let result =  await window.tonProvider.sendTransaction(sendData)\n            console.log(\n                `请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`\n            );\n            if (typeof result == \"string\") {\n              this.testboc = result;\n            } else {\n              this.testboc = JSON.stringify(result);\n            }\n            return\n          }\n\n          if (chainId == 'btc:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var btcResult = 'invalid result'\n\n            if (this.currentBtcMethod == 'btc_signMessage') {\n              btcResult = await btcAdapter.signMessage(chainId, this.currentBtcTransaction[\"signStr\"])\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_send') {\n              btcResult = await btcAdapter.send(chainId, this.currentBtcTransaction)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signPsbt') {\n              btcResult = await btcAdapter.signPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n\n              this.hexToBase64(btcResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentBtcMethod == 'btc_signPsbts') {\n              btcResult = await btcAdapter.signPsbts(chainId, this.currentBtcTransaction.psbtHexs, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_sendInscription') {\n              btcResult = await btcAdapter.sendInscription(chainId, this.currentBtcTransaction.address, this.currentBtcTransaction.inscriptionId, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signAndPushPsbt') {\n              btcResult = await btcAdapter.signAndPushPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            }else if (this.currentBtcMethod == 'btc_sendBitcoin') {\n              btcResult = await btcAdapter.sendBitcoin(chainId, this.currentBtcTransaction.toAddress, this.currentBtcTransaction.satoshis, this.currentBtcTransaction.options)\n\n              this.testboc = JSON.stringify(btcResult)\n            }\n            return\n          }\n\n          if (chainId == 'fractal:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var fractalResult = 'invalid result'\n\n            if (this.currentFractalMethod == 'fractal_signMessage') {\n              fractalResult = await btcAdapter.signMessage(chainId, this.currentFractalTransaction['signStr'])\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_send') {\n              fractalResult = await btcAdapter.send(chainId, this.currentFractalTransaction)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signPsbt') {\n              fractalResult = await btcAdapter.signPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.hexToBase64(fractalResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentFractalMethod == 'fractal_signPsbts') {\n              fractalResult = await btcAdapter.signPsbts(chainId, this.currentFractalTransaction.psbtHexs, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_sendInscription') {\n              fractalResult = await btcAdapter.sendInscription(chainId, this.currentFractalTransaction.address, this.currentFractalTransaction.inscriptionId, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signAndPushPsbt') {\n              fractalResult = await btcAdapter.signAndPushPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            }else if (this.currentFractalMethod == 'fractal_sendBitcoin') {\n              fractalResult = await btcAdapter.sendBitcoin(chainId, this.currentFractalTransaction.toAddress, this.currentFractalTransaction.satoshis, this.currentFractalTransaction.options)\n\n              this.testboc = JSON.stringify(fractalResult)\n            }\n\n            return\n          }\n\n          console.log(`请求数据发送 sendTransaction ----->> ${JSON.stringify(sendData)}`)\n          var result = await window.provider.request(sendData, chainId)\n          console.log(`请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`)\n\n          console.log(\"windowOpen[click_3]: \", Date.now());\n          if (typeof result == \"string\") {\n            this.testboc = result;\n          } else {\n            this.testboc = JSON.stringify(result);\n          }\n          console.log(\"方法数据回调 --this.testboc--\", this.testboc);\n        } catch (error) {\n          console.error(\"方法数据回调失败 --Error--\", error.message);\n\n          if (error.code === OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n            this.testboc = error.message;\n          } else {\n            this.testboc = \"wrong signature！\" + error.message;\n          }\n        }\n      } else {\n        alert(\"Please input transaction data\");\n      }\n    },\n\n    hexToBase64(hexStr) {\n      var bytes = [];\n      for (var i = 0; i < hexStr.length; i += 2) {\n        bytes.push(parseInt(hexStr.substr(i, 2), 16));\n      }\n      const buffer = new Uint8Array(bytes)\n      const blob = new Blob([buffer]);\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = function (e) {\n          var base64Data = e.target.result.split(\",\")[1]\n          resolve(base64Data);\n        };\n        reader.onerror = function (e) {\n          reject(e);\n        };\n        reader.readAsDataURL(blob);\n      });\n    },\n    testBase64UrlSafe(){\n      let datatest = {\"protocolVer\":1,\"topic\":\"8a7a4c3be73802d0ae2587123ade7bb79f27433b9aa3ca589a2208a2089eecfd\",\"clientId\":\"5f1bbf9eac92160affa7ef04d0a710817ddb6d8c22ebbd6263e86f059930b404\",\"requestId\":\"1731383250054\",\"dAppInfo\":{\"url\":\"connect.oker.vip\",\"origin\":\"https://connect.oker.vip\",\"name\":\"univer test dapp\",\"icon\":\"https://avatars.githubusercontent.com/u/37784886\"},\"requests\":[{\"name\":\"requestAccounts\",\"requiredNamespaces\":[{\"namespace\":\"aptos\",\"chains\":[\"aptos:637\"]}],\"optionalNamespaces\":[],\"connectRequestMethods\":[{\"chainId\":\"aptos:637\",\"method\":\"aptos_signMessage\",\"params\":{\"data\":{\"address\":true,\"application\":true,\"chainId\":true,\"message\":\"123 中文测试!\",\"nonce\":\"1234\"},\"applicationUrl\":\"https://connect.oker.vip\",\"prefix\":\"APTOS\",\"aptosChainId\":\"1\"}}]}],\"redirect\":\"none\"}\n      let json = JSON.stringify(datatest)\n      const utf8Array = new TextEncoder().encode(json);\n      let binary = '';\n      utf8Array.forEach(byte => {\n        binary += String.fromCharCode(byte);\n      });\n\n      let firstStr =  btoa(binary)\n      console.log(\"字符串编码1>>>>\",firstStr)\n      firstStr = firstStr.replace(/\\+/g, '-')  // 替换 '+'\n      console.log(\"字符串编码2>>>>\",firstStr)\n      firstStr = firstStr.replace(/\\//g, '_')  // 替换 '/'\n      console.log(\"字符串编码3>>>>\",firstStr)\n      firstStr = firstStr.replace(/=+$/, '');  // 移除 '=';\n      console.log(\"字符串编码4>>>>\",firstStr)\n\n      let showUrl =  getUniversalLink(getAppWalletDeepLink(firstStr))\n      console.log(\"字符串编码5>>>>\",showUrl)\n      this.qrValue = showUrl;\n      this.showModal = true;\n    },\n\n\n    async testTonSdk(isTwoSteps) {\n      // 1. connect\n      //  create sub providers for each namespace/chain\n      let nameSpacesChains = [];\n      let optSpaceChains = [];\n\n      let solanaChains = [\n        \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n        \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n        \"svm:70000062\",\n      ];\n      let hasEip155, hasSolana, hasSui, hasBtc, hasAptos, hasTon, hasCosmos, hasTron = false\n\n      let suiChains = [\n        \"sui:mainnet\",\n      ];\n\n      let btcChains = [\n        \"btc:mainnet\",\n        \"fractal:mainnet\"\n      ];\n\n      const chains = Object.entries(this.availableChains)\n          .filter((chain) => chain[1].checked)\n          .map((chain) => chain[0]);\n      console.log(`chains  ===> ${chains.values()}`)\n      chains.forEach(function (chainId) {\n        console.log(`chains.forEach chainId  ===> ${chainId}`)\n\n        if (solanaChains.includes(chainId)) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"ton\")) {\n          nameSpacesChains.push(chainId)\n          hasTon = true\n          return\n        }\n        if (typeof chainId == 'string' && (chainId.startsWith(\"aptos\") || chainId.startsWith(\"movement\"))) {\n          nameSpacesChains.push(chainId)\n          hasAptos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId)\n          hasSolana = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"cosmos\")) {\n          nameSpacesChains.push(chainId)\n          hasCosmos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"tron\")) {\n          nameSpacesChains.push(chainId)\n          hasTron = true\n          return\n        }\n\n        if (suiChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`);\n          nameSpacesChains.push(chainId);\n          hasSui = true;\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`)\n          nameSpacesChains.push(chainId)\n          hasBtc = true\n          return\n        }\n\n        hasEip155 = true\n        nameSpacesChains.push(`eip155:${chainId}`)\n      })\n\n\n      optionChains.forEach(function (chainId) {\n        if (solanaChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n        if (typeof chainId == \"string\" && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (suiChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          optSpaceChains.push(chainId)\n          return\n        }\n\n        optSpaceChains.push(`eip155:${chainId}`)\n      })\n\n      console.log(`namespaceChains  ===> ${JSON.stringify(nameSpacesChains)}`);\n      var connectData = {};\n      if (nameSpacesChains && nameSpacesChains.length > 0) {\n        var requireData = {};\n        if (isTwoSteps){\n          let includeEth = nameSpacesChains.includes(\"eip155:1\")\n          if (!includeEth){\n            alert(\"请选择ETH \");\n            return;\n          }\n        }\n\n        if (hasEip155) {\n          requireData.eip155 = {\n            chains: nameSpacesChains.filter((item) =>\n              item.startsWith(\"eip155\")\n            ),\n            defaultChain: nameSpacesChains.filter((item) =>\n              item.startsWith(\"eip155\")\n            )[0],\n          };\n        }\n        if (hasSolana) {\n          requireData.solana = {\n            chains: nameSpacesChains.filter(\n              (item) =>\n                item.startsWith(\"solana\") ||\n                item.startsWith(\"sonic\") ||\n                item.startsWith(\"svm\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n              (item) =>\n                item.startsWith(\"solana\") ||\n                item.startsWith(\"sonic\") ||\n                item.startsWith(\"svm\")\n            )[0],\n          };\n        }\n\n        if (hasCosmos) {\n          requireData.cosmos = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            )[0],\n          }\n        }\n        if (hasTron) {\n          requireData.tron = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            )[0],\n          }\n        }\n        if (hasTon) {\n\n          //\n          let tonParams = {\n            ton_addr:{\n              name: 'ton_addr',\n            }\n          };\n          if (this.tonProofValue){\n            tonParams = {\n              ton_addr:{\n                name: 'ton_addr',\n              },\n              ton_proof:{\n                name: 'ton_proof',\n                payload: this.tonProofValue,\n              }\n            };\n          }\n\n\n          requireData.ton = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"ton\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"ton\"))[0],\n            params:tonParams\n          };\n        }\n\n        if (hasSui) {\n          requireData.sui = {\n            chains: nameSpacesChains.filter((item) => item.startsWith(\"sui\")),\n            defaultChain: nameSpacesChains.filter((item) =>\n              item.startsWith(\"sui\")\n            )[0],\n            rpcMap: {\n              \"sui:mainnet\": \"https://www.okx.com/fullnode/sui/discover/rpc\"\n            }\n          };\n        }\n        if (hasAptos) {\n          requireData.aptos = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\"))[0]\n          }\n        }\n\n        if (hasBtc) {\n          let btcChains = nameSpacesChains.filter(item => item.startsWith(\"btc\") || item.startsWith(\"fractal\"))\n          requireData.btc = {\n            chains: btcChains,\n            defaultChain: btcChains[0]\n          }\n        }\n        console.log(`requireData  ===> ${JSON.stringify(requireData)}`)\n        connectData['namespaces'] = requireData;\n        console.log(JSON.stringify(connectData))\n      }\n\n      if (optSpaceChains && optSpaceChains.length > 0) {\n        var optData = {\n          eip155: {\n            chains: optSpaceChains.filter((item) => item.startsWith(\"eip155\")),\n            defaultChain: optSpaceChains.filter((item) =>\n              item.startsWith(\"eip155\")\n            )[0],\n          },\n        };\n        connectData[\"optionalNamespaces\"] = optData;\n      }\n\n      if (nameSpacesChains.length === 0 && optSpaceChains.length === 0) {\n        //未选择链\n        alert(\"Please select a chain from above to continue\");\n        return;\n      }\n      console.log(\"=====>connectData \");\n      console.log(connectData);\n\n      var connectMethod;\n\n      if (!isTwoSteps){\n        connectData.signRequest = this.getCurrentSelectedMethodData();\n      }\n\n      if (window.provider instanceof OKXUniversalConnectUI) {\n        connectMethod = window.provider.openModal(connectData);\n      } else {\n        if (this.universalToTG){\n          connectData.sessionConfig = {\n            useMini:true,\n            openUniversalUrl:true,\n            tmaReturnUrl:'back'\n          }\n        }else{\n          connectData.sessionConfig = {}\n        }\n        connectMethod = window.provider.connect(connectData);\n      }\n\n      await connectMethod\n        .then((result) => {\n          // 2. set defaul chain\n          this.walletAddress = \"connected\";\n          if (this.isPC()) {\n            this.showModal = false;\n          }\n          if (result){\n            this.testboc = JSON.stringify(result)\n          }\n          if (isTwoSteps){\n            this.sendTransactionAlert()\n          }\n\n          if (window.provider.session && window.provider.session.namespaces){\n            let ton = window.provider.session.namespaces[\"ton\"];\n          console.log(\"是否包含ton\",ton)\n            if (ton){\n              this.tonUniversalLog()\n            }\n          }\n\n\n\n        })\n        .catch((error) => {\n          if (error.message){\n            alert(error.message)\n          }\n\n          console.error(\"发生了错误：\", error);\n        });\n    },\n\n    getCurrentSelectedMethodData(){// 连接签名\n      var methodList = [];\n      this.selectedMethod.forEach(method =>{\n        switch (method) {\n          case \"wallet_addEthereumChain(ETH)\":\n            methodList.push({\n              method: \"wallet_addEthereumChain\",\n              chainId:\"eip155:1\",\n              params: {\n                blockExplorerUrls: [\"https://explorer.fuse.io\"],\n                chainId: \"0x7a\",\n                chainName: \"Fuse\",\n                nativeCurrency: { name: \"Fuse\", symbol: \"FUSE\", decimals: 18 },\n                rpcUrls: [\"https://rpc.fuse.io\"],\n              },\n            })\n            break;\n          case \"personal_sign(ETH)\":\n            methodList.push(\n              {\n                method: \"personal_sign\",\n                chainId: \"eip155:1\",\n                params: [\n                  \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n                ],\n              });\n            break;\n          case \"solana_signMessage(Sol mainnet)\":\n            methodList.push(\n              {\n                \"chainId\": \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n                \"method\": \"solana_signMessage\",\n                \"params\": {\n                  \"message\": \"Hello Solana\",\n                }\n              }\n            );\n            break;\n          case \"sui_signMessage(Sui mainnet)\":\n          case \"sui_signPersonalMessage(Sui mainnet)\": {\n            let suiData = [\n              76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n              109, 111, 118, 101,\n            ];\n            let uint8Array = new Uint8Array(suiData);\n            let currentMethod = \"sui_signMessage\";\n            this.currentSuiTransaction = {\n              message:uint8Array\n            }\n\n            if(method.startsWith(\"sui_signPersonalMessage\")){\n              currentMethod = \"sui_signPersonalMessage\";\n            }\n            methodList.push(\n                {\n                  method: currentMethod,\n                  chainId: \"sui:mainnet\",\n                  params: {\n                    message: uint8Array,\n                  }\n                }\n            );\n            break;\n          }\n          case \"btc_signMessage(BTC)\":\n            methodList.push(\n              {\n                method: \"btc_signMessage\",\n                chainId: \"btc:mainnet\",\n                params: {\n                  signStr: \"Welcome to BTC\"\n                }\n              }\n            )\n            break;\n          case \"aptos_signMessage(aptos mainnet)\":\n            methodList.push(\n              {\n                \"chainId\": \"aptos:mainnet\",\n                \"method\": \"aptos_signMessage\",\n                \"params\": {\n                  address: true,\n                  application: true,\n                  chainId: true,\n                  message: \"Hello Aptos\",\n                  nonce: \"1234\"\n                }\n              }\n            )\n            break;\n          case \"cosmos_signArbitrary(cosmoshub)\":\n            methodList.push(\n                {\n                  \"chainId\": \"cosmos:cosmoshub-4\",\n                  \"method\": \"cosmos_signArbitrary\",\n                  \"params\": {\n                    message: \"test cosmos\"\n                  }\n                }\n            )\n\n            break;\n          case \"test_noSupport_eth(ETH)\":\n            methodList.push(\n                {\n                  chainId: \"eip155:1\",\n                  method: \"test_noSupport_eth\",\n                  params: {\n                    message: \"test hello\",\n                  }\n                }\n            )\n            break;\n          case \"tron_signMessage\":\n            methodList.push(\n                {\n                  chainId:\"tron:mainnet\",\n                  method: \"tron_signMessage\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n          case \"tron_signMessageV2\":\n            methodList.push(\n                {\n                  chainId:\"tron:mainnet\",\n                  method: \"tron_signMessageV2\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n            //\n          default:\n\n            break;\n        }\n      })\n      this.selectedMethodData = methodList\n      return methodList\n\n    },\n\n\n    closeModal() {\n      this.showModal = false;\n    },\n\n    isPC() {\n      const userAgentInfo = navigator.userAgent;\n      console.log(\"current device ua is ===>\", userAgentInfo);\n\n      const Agents = [\n        \"Android\",\n        \"iPhone\",\n        \"SymbianOS\",\n        \"Windows Phone\",\n        \"iPad\",\n        \"iPod\",\n      ];\n      let flag = true;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = false;\n          break;\n        }\n      }\n      return flag;\n    },\n    isSafariOrChrome() {\n      const userAgentInfo = navigator.userAgent;\n      const Agents = [\"Safari\", \"Chrome\"];\n      let flag = false;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = true;\n          break;\n        }\n      }\n      return flag;\n    },\n\n    /// solana\n    async sol_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      let data = {\n        method: \"solana_signMessage\",\n        params: {\n          message: \"Hello Solana\",\n          pubkey: \"\",\n        },\n      };\n      this.testTransaction = JSON.stringify(data);\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let message = await provider.signMessage(\n          \"Hello Solana\",\n          this.selectedChain\n      );\n      console.log(\"solana_signMessage Result:\",JSON.stringify(message))\n      const result1 = nacl.sign.detached.verify(\n          new TextEncoder().encode(\"Hello Solana\"),\n          message.signature,\n          new PublicKey(message.publicKey).toBytes()\n      );\n      console.log(result1)\n\n      if (typeof message == \"string\") {\n        this.testboc = result1;\n      } else {\n        this.testboc = result1;\n      }\n    },\n\n    async aptos_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      let data = {\n        address: true,\n        application: true,\n        chainId: true,\n        message: \"Hello Aptos\",\n        nonce: \"1234\"\n      }\n\n      let provider = new OKXAptosProvider(window.provider)\n      let message = await provider.signMessage(data, this.selectedChain)\n      this.testTransaction = JSON.stringify(data)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n          functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async move_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async move_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n          functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n        },\n      });\n\n      // let data = {\n      //   \"arguments\": [\"100000\",[\"0\",\"0\",\"10533\"],[\"10\",\"5\",\"5\"],[\"false\",\"false\",\"true\"]],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x3\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\",\"0x73eb84966be67e4697fc5ae75173ca6c35089e802650f75422ab49a8729704ec::coin::DooDoo\",\"0x53a30a6e5936c0a4c5140daed34de39d17ca7fcae08f947c02e979cef98a3719::coin::LSD\",\"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::CurveV1\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x54cb0bb2c18564b86e34539b9f89cfe1186e39d89fce54e1cd007b8e61673a85::bin_steps::X80\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async sol_signVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(\n        provider.getAccount(\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\").address\n      );\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n         recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signTransaction(\n        transaction,\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAndSendVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n        transaction,\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllVersionedTransactions() {\n      let provider = new OKXSolanaProvider(window.provider);\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n        [transaction],\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signTransaction() {\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n         recentBlockhash: blockhash,\n      }).add(\n        SystemProgram.transfer({\n          fromPubkey: new PublicKey(provider.getAccount().address),\n          toPubkey: new PublicKey(provider.getAccount().address),\n          lamports: 1000,\n        })\n      );\n\n      this.testTransaction = safeJsonStringify(transaction)\n      let result = await provider.signTransaction(\n        transaction,\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllTransactions() {\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n        SystemProgram.transfer({\n          fromPubkey: new PublicKey(provider.getAccount().address),\n          toPubkey: new PublicKey(provider.getAccount().address),\n          lamports: \"100\",\n        })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n        [transaction],\n        this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    getSolConnect() {\n      let rpc = \"https://www.okx.com/fullnode/sol/discover/rpc\"\n      if (this.selectedChain === \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\") {\n        rpc = \"https://www.okx.com//fullnode/sol/discover/rpc\"\n      } else if (this.selectedChain === \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\"){\n        rpc = \"https://www.okx.com/fullnode/soltestnet/discover/rpc\"\n      } else if (this.selectedChain === \"svm:70000062\") {\n        rpc = \"https://www.okx.com/fullnode/sonic/testnet/discover/rpc\"\n      }\n      return rpc\n    },\n\n    async sol_signAndSendTransaction() {\n\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n        SystemProgram.transfer({\n          fromPubkey: new PublicKey(provider.getAccount().address),\n          toPubkey: new PublicKey(provider.getAccount().address),\n          lamports: \"100\",\n        })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n        transaction,\n        this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async cosmos_signArbitrary() {\n      let provider = new OKXCosmosProvider(window.provider)\n      let message = await provider.signArbitrary(this.selectedChain, provider.getAccount(this.selectedChain).address, \"test cosmos\")\n      if (typeof message == \"string\") {\n        this.testboc = message;\n      } else {\n        let isValid =  await this.cosmos_verifySignArbitrary(provider.getAccount(this.selectedChain).address,\"test cosmos\",message.signature, message.pub_key.value)\n        console.log(\"verify\",isValid)\n        this.testboc = \"verify:\" + isValid + JSON.stringify(message);\n      }\n    },\n\n    async cosmos_verifySignArbitrary(signer, data, signature, pubkey) {\n      try {\n        console.log(\"cosmos_verifySignArbitrary signer:\",signer)\n        console.log(\"cosmos_verifySignArbitrary data:\",JSON.stringify(data))\n        console.log(\"cosmos_verifySignArbitrary signature:\",signature)\n        console.log(\"cosmos_verifySignArbitrary pubkey:\",pubkey)\n\n        // 将bech32地址转换为公钥\n        const {prefix: prefixStr} = fromBech32(signer)\n\n        const signatureBuffer = Buffer.from(signature, 'base64');\n\n        const uint8Signature = new Uint8Array(signatureBuffer); // Convert the buffer to an Uint8Array\n\n        const pubKeyValueBuffer = Buffer.from(pubkey, 'base64'); // Decode the base64 encoded value\n\n        const pubKeyUint8Array = new Uint8Array(pubKeyValueBuffer); // Convert the buffer to an Uint8Array\n\n        // 验证签名\n        return await verifyADR36Amino(\n            prefixStr,\n            signer,\n            data,\n            pubKeyUint8Array,\n            uint8Signature\n        )\n      } catch (err) {\n        console.error('Verification failed:', err)\n        return false\n      }\n    },\n\n    async cosmos_signAmino(){\n      let provider = new OKXCosmosProvider(window.provider)\n      // const rpcUrl = 'https://osmosis-rpc.publicnode.com:443';\n      // const client = await StargateClient.connect(rpcUrl);\n      // const height = await client.getHeight();\n      // let address = provider.getAccount(this.selectedChain).address\n      // const sequence = await client.getSequence(address)\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      // let signDoc = makeSignDoc(\n      //     transaction.msgs,\n      //     transaction.fee,\n      //     this.selectedChain.split(\":\")[1],\n      //     transaction.memo,\n      //     transaction.accountNumber,\n      //     transaction.sequence,\n      // )\n      let signDoc = {\n        \"chain_id\": \"osmosis-1\",\n        \"account_number\": \"630104\",\n        \"sequence\": \"480\",\n        \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]},\n        \"msgs\": [{\n          \"type\": \"osmosis/poolmanager/swap-exact-amount-in\",\n          \"value\": {\n            \"sender\": \"osmo1u6lts9ng4etxj0zdaxsada6zgl8dudpgelmuyu\",\n            \"routes\": [{\n              \"pool_id\": \"1096\",\n              \"token_out_denom\": \"ibc/987C17B11ABC2B20019178ACE62929FE9840202CE79498E29FE8E5CB02B7C0A4\"\n            }, {\n              \"pool_id\": \"611\",\n              \"token_out_denom\": \"ibc/27394FB092D2ECCD56123C74F36E4C1F926001CEADA9CA97EA622B25F41E5EB2\"\n            }],\n            \"token_in\": {\"denom\": \"uosmo\", \"amount\": \"100\"},\n            \"token_out_min_amount\": \"8\"\n          }\n        }],\n        \"memo\": \"FE\",\n        \"timeout_height\": \"23603788\",\n        \"signOptions\": {\n          \"useOneClickTrading\": false,\n          \"preferNoSetFee\": true,\n          \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]}\n        }\n      }\n\n\n\n\n\n\n\n      // let signOption = {\n      //   memo: true, // optional\n      //   fee: true, // optional\n      //   gasRate: {\n      //     // optional\n      //     average: \"0.2\",\n      //     low: \"0.02\",\n      //     tiny: \"0.002\",\n      //   },\n      // }\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signAmino(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, signDoc)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    messageToBuffer(message) {\n      var buffer = Buffer.from([]);\n      try {\n        if (typeof message === \"string\") {\n          buffer = Buffer.from(message.replace(\"0x\", \"\"), \"hex\");\n        } else {\n          buffer = Buffer.from(message);\n        }\n      } catch (err) {\n        console.log(`messageToBuffer error: ${err}`);\n      }\n      return buffer;\n    },\n\n\n\n    async cosmos_signDirect() {\n      let provider = new OKXCosmosProvider(window.provider)\n\n      let signDoc = {\n        \"bodyBytes\": this.messageToBuffer(\"0x0ac1010a292f6962632e6170706c69636174696f6e732e7472616e736665722e76312e4d73675472616e736665721293010a087472616e7366657212096368616e6e656c2d301a0d0a05756f736d6f120431303030222b6f736d6f3175366c7473396e67346574786a307a64617873616461367a676c386475647067656c6d7579752a2d636f736d6f733175366c7473396e67346574786a307a64617873616461367a676c386475647067337967766a773207080410ebe3f90a3880b0bcafd18cec8218\"),\n        \"authInfoBytes\": this.messageToBuffer(\"0x0a510a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a2102446e19e94ac0e83ea896d2712507577eb39fbdd2d6ae9f0fc0b9759f1fbaba9012040a02080118e00312140a0e0a05756f736d6f1205323530303010859a11\"),\n        \"chainId\": \"osmosis-1\",\n        \"accountNumber\": \"630104\",\n      }\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signDirect(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, transaction)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    sui_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentSuiTransaction = params\n      this.currentSuiMethod = flag\n    },\n\n    btc_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentBtcTransaction = params\n      this.currentBtcMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n\n    fractal_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentFractalTransaction = params\n      this.currentFractalMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n    tron_getTransactionResult(result) {\n      if (typeof result == \"string\") {\n        this.testboc = result\n      } else {\n        this.testboc = JSON.stringify(result)\n      }\n    },\n    tron_generateTransactionParams(params){\n      if (typeof params == \"string\") {\n        this.testTransaction = params\n      } else {\n        this.testTransaction = JSON.stringify(params)\n      }\n    },\n    handleModalsSelect(modals) {\n      selectedModals = modals;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedDeepLink,\n            modals: modals.length === 3 ? \"all\" : modals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n\n    handleReturnStrategySelect(returnStrategy) {\n      selectedReturnStrategy = returnStrategy === \"deeplink\" ? this.deeplink : returnStrategy;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n\n    handleReturnStrategyDeeplink(deeplink) {\n      selectedReturnStrategy = deeplink;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: deeplink,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n\n    handleLanguageSelect(language) {\n      selectedLanguage = language;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: language,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n    handleConnectMethodsSelect() {\n      console.log(\"当前的方法 this.selectedMethod>>>>\",this.selectedMethod);\n    },\n\n    eth_verifyMessage(message, signature,ethAddress) {\n      console.log(\"eth_verifyMessage   message>>>\",message)\n      console.log(\"eth_verifyMessage   signature>>>\",signature)\n      console.log(\"eth_verifyMessage   ethAddress>>>\",ethAddress)\n      if (!message || !signature){\n        return \"\"\n      }\n      let originalMessage = message\n      if (message.startsWith(\"0x\")){\n        originalMessage = originalMessage.replace(/^0x/, '');\n        let str = '';\n        for (let i = 0; i < originalMessage.length; i += 2) {\n          const byte = originalMessage.slice(i, i + 2);\n          str += String.fromCharCode(parseInt(byte, 16));\n        }\n        originalMessage = str\n      }\n      console.log(\"eth_verifyMessage   originalMessage>>>\",originalMessage)\n\n      // const messageHash = ethers.utils.hashMessage(originalMessage);\n      const recoveredAddress = ethers.utils.verifyMessage(originalMessage, signature);\n      console.log(\"eth_verifyMessage recoveredAddress:\", recoveredAddress);\n      return recoveredAddress.toLowerCase() === ethAddress.toLowerCase();\n    },\n\n    async verifyMessage(list){ //连接验签\n\n        if (window.provider && window.provider.session && list && list.length>0){\n          let verifyList = {}\n          for (let methodItem of list){\n            if (\"result\" in methodItem && \"method\" in methodItem){\n              let requestItme = this.selectedMethodData.filter(item => item.method === methodItem.method)[0];\n              console.log(\"验证签名 请求>>>:\", JSON.stringify(requestItme));\n              console.log(\"验证签名 结果>>>:\", JSON.stringify(methodItem));\n              if (methodItem.method === \"personal_sign\"){\n                let ethAddress = await window.provider.request({ method: \"eth_requestAccounts\" },methodItem.chainId)\n                ethAddress = ethAddress[0];\n                console.log(\"验证eth 钱包地址>>>:\", ethAddress);\n                let ethMessage = requestItme.params[0]\n                console.log(\"验证eth 签名消息体>>:\", JSON.stringify(ethMessage));\n                verifyList[methodItem.method] = this.eth_verifyMessage(ethMessage,methodItem.result,ethAddress)\n              }else if(methodItem.method === \"solana_signMessage\"){\n                let solanaMessage = methodItem.result\n                if (\"signature\" in solanaMessage && \"publicKey\" in solanaMessage){\n                  const verifySol = nacl.sign.detached.verify(\n                      new TextEncoder().encode(\"Hello Solana\"),\n                      solanaMessage.signature,\n                      new PublicKey(solanaMessage.publicKey).toBytes()\n                  );\n                  verifyList[methodItem.method] = verifySol\n                }else {\n                  verifyList[methodItem.method] = false\n                }\n              }else if(methodItem.method === \"sui_signPersonalMessage\" || methodItem.method === \"sui_signMessage\"){\n                let suiResult =  this.sui_verifySignature(methodItem.result);\n                  verifyList[methodItem.method] = (await suiResult).result\n              }else if(methodItem.method === \"btc_signMessage\"){\n\n                verifyList[methodItem.method] = \"Not verified yet\"\n\n              }else if(methodItem.method === \"aptos_signMessage\"){\n                let aptosMessage = methodItem.result\n                let aptosProvider = new OKXAptosProvider(window.provider)\n                let  aptosPublicKey  = aptosProvider.getAccount(methodItem.chainId)?.publicKey\n\n                let signStr = aptosMessage.signature\n                if (signStr.startsWith(\"0x\")) {\n                  signStr = signStr.slice(2, signStr.length)\n                }\n\n                console.log(\"aptos_signMessage aptosPublicKey And signStr\",aptosPublicKey,signStr)\n                verifyList[methodItem.method] = nacl.sign.detached.verify(\n                    Buffer.from(aptosMessage.fullMessage),\n                    Buffer.from(signStr, 'hex'),\n                    Buffer.from(aptosPublicKey, 'hex'),\n                );\n              }else if(methodItem.method === \"cosmos_signArbitrary\"){\n                let cosmosProvider = new OKXCosmosProvider(window.provider)\n                let cosmosAddress = cosmosProvider.getAccount(methodItem.chainId)?.address\n                let cosmosMessage = methodItem.result\n                let isValid =  await this.cosmos_verifySignArbitrary(cosmosAddress,\"test cosmos\",cosmosMessage.signature, cosmosMessage.pub_key.value)\n                verifyList[methodItem.method] = isValid\n\n              }else if (methodItem.method === \"tron_signMessage\") {\n                let tronMessage = methodItem.result\n                let tronWeb = new TronWeb({\n                  \"fullHost\": 'https://api.trongrid.io',\n                  \"headers\": {},\n                  \"privateKey\": ''\n                })\n                let provider = new OKXTronProvider(window.provider)\n                verifyList[methodItem.method] = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), tronMessage, provider.getAccount(\"tron:mainnet\").address)\n              } else if (methodItem.method === \"tron_signMessageV2\") {\n                let tronMessage = methodItem.result\n                let tronWeb = new TronWeb({\n                  \"fullHost\": 'https://api.trongrid.io',\n                  \"headers\": {},\n                  \"privateKey\": ''\n                })\n                const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", tronMessage);\n                let provider = new OKXTronProvider(window.provider)\n\n                verifyList[methodItem.method] = base58Address === provider.getAccount(\"tron:mainnet\").address\n              }\n              else {\n                verifyList[methodItem.method] = \"Not verified yet\"\n\n              }\n            }else if(\"method\" in methodItem && \"error\" in methodItem) {\n              verifyList[methodItem.method] = methodItem.error\n            }\n\n          }\n\n          console.log(\"验证签名 最后的结果>>>:\", JSON.stringify(verifyList));\n          this.testTransaction = \"签名验证结果如下: \\n\" + JSON.stringify(verifyList)\n        }else {\n          console.log(\"验证签名 window.provider.session.connectMethodsReply 为空:\");\n\n        }\n\n    },\n\n    handleThemeSelect(theme) {\n      selectedTheme = theme;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: theme,\n          },\n        };\n      }\n    },\n\n    async sui_verifySignature(signatureResult) {\n      let resultObj = signatureResult\n      let result = false\n      let msg = ''\n      try {\n        /// 获取当前account\n        const adapter = new SuiAdapter(window.provider);\n        let account = adapter.getAccount()\n        console.log(`Account中获取的address：${account.address}`)\n\n        /// 验证签名\n        let pubKey = await verifyPersonalMessageSignature(this.currentSuiTransaction.message, resultObj.signature)\n        let address = pubKey.toSuiAddress()\n        console.log(`验签结果计算得到address：${address}`)\n\n        /// 对比pubKey\n        console.log(`account pubkey: ${account.publicKey}`,)\n        console.log(`result pubkey: ${pubKey.toBase64()}`)\n        result = (account.address === address) && (account.publicKey === pubKey.toBase64())\n\n        msg = `address verify: ${account.address === address}\\npublicKey verify: ${account.publicKey === pubKey.toBase64()}`\n        console.log(\"signature verify success: \", pubKey)\n      } catch (e) {\n        console.log(\"signature verify failed: \", e)\n      }\n      return {\n        result,\n        msg\n      }\n    },\n\n  },\n  created() {\n    // for (const eventName of Object.values(OKX_TON_CONNECTION_AND_TRANSACTION_EVENT)) {\n    //   console.log(eventName);\n    //   window.addEventListener(eventName, (event) => {\n    //     console.log(eventName,event.detail)\n    //     this.currentStatus = eventName\n    //   });\n    // }\n  },\n\n  mounted() {\n\n    var scriptTag = document.createElement(\"script\");\n    scriptTag.src = \"https://telegram.org/js/telegram-web-app.js\";\n    scriptTag.id = \"tgsdk\";\n    document.getElementsByTagName('head')[0].appendChild(scriptTag);\n\n    this.connectReady = true;\n    document.title = \"OKX Connect\";\n    this.initBtnClicked()\n  },\n};\n</script>\n","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signMessage()\">signMessage(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_send()\">send(BTC)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendBitcoin()\">sendBitcoin(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signPsbt_up()\">signPsbt(上架NFT)</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"btc_signAndPushPsbt_up()\">signAndPushPsbt(上架NFT)</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在OKX App选择要上架的Btc NFT，点击【上架】\n        </li>\n        <li>\n          2. 弹出签名面板，点开高级选项，查看\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出上架流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendInscription()\">sendInscription(BTC)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Btc NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount\n    }\n  },\n  methods: {\n    btc_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to BTC\"\n      };\n      this.$emit('generateTransactionParams', params, \"btc_signMessage\")\n    },\n\n    btc_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"btc_send\")\n    },\n\n    btc_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"btc_sendBitcoin\")\n    },\n\n    btc_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"btc_signPsbt\")\n    },\n\n    btc_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"btc_signAndPushPsbt\")\n    },\n\n    btc_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"btc_sendInscription\")\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./BtcTransactionPanel.vue?vue&type=template&id=b2c51436&scoped=true\"\nimport script from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./BtcTransactionPanel.vue?vue&type=style&index=0&id=b2c51436&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-b2c51436\"]])\n\nexport default __exports__","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signMessage()\">signMessage(Fractal)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_send()\">send(Fractal)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_sendBitcoin()\">sendBitcoin(Fractal)</el-button>\n\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signPsbt_up()\">signPsbt(上架NFT)</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_signAndPushPsbt_up()\">signAndPushPsbt(上架NFT)</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在OKX App选择要上架的Fractal NFT，点击【上架】\n        </li>\n        <li>\n          2. 弹出签名面板，点开高级选项，查看\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出上架流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_sendInscription()\">sendInscription(Fractal)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Fractal NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount\n    }\n  },\n  methods: {\n    fractal_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to UniSat!\\n\\nClick to sign in and accept the UniSat Terms of Service (https://unisat.io/terms-of-service.html) and Privacy Policy (https://unisat.io/privacy-policy.html).\\n    \\nThis request will not trigger a blockchain transaction.\\n    \\nYour authentication status will reset after 24 hours.\\n    \\nWallet address:\\nbc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\\n    \\nNonce:\\n162d70e3-8c21-4cfd-9a22-9bf0a4b7be51\\n\"\n      };\n      this.$emit('generateTransactionParams', params, \"fractal_signMessage\")\n    },\n\n    fractal_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_send\")\n    },\n\n    fractal_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_sendBitcoin\")\n    },\n\n    fractal_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"fractal_signPsbt\")\n    },\n\n    fractal_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"fractal_signAndPushPsbt\")\n    },\n\n    fractal_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"fractal_sendInscription\")\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./FractalTransactionPanel.vue?vue&type=template&id=02b5b8a5&scoped=true\"\nimport script from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./FractalTransactionPanel.vue?vue&type=style&index=0&id=02b5b8a5&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-02b5b8a5\"]])\n\nexport default __exports__","<script>\n\nimport {getFullnodeUrl, SuiClient} from \"@mysten/sui/client\";\nimport {Transaction as SuiTransaction} from '@mysten/sui/transactions';\n\nexport default {\n  name: \"SuiTransactionPanel\",\n  methods: {\n    sui_getAccount() {\n      this.$emit('generateTransactionParams', '', \"sui_getAccount\")\n    },\n\n    //对单个交易签名（不发送)\n    async sui_signMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signMessage\")\n    },\n\n    async sui_signPersonalMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signPersonalMessage\")\n    },\n\n    sui_signTransaction2() {\n      // 定义要转移的金额和目标地址\n      const amount = 109; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    async sui_requestRpc() {\n      let provider = window.provider;\n      provider.setDefaultChain(\n          `sui:mainnet`,\n          `https://fullnode.mainnet.sui.io:443`\n      );\n      var data = {\n        method: \"suix_getBalance\",\n        params: [\n          \"0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae\",\n          \"0x168da5bf1f48dafc111b0a488fa454aca95e0b5e::usdc::USDC\",\n        ],\n      };\n\n      this.$emit(\"generateTransactionParams\", data, \"sui_testRpc\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 102; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signAndExecuteTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n      this.$emit(\"generateTransactionParams\", input, \"sui_signAndExecuteTransaction\")\n    },\n\n    /// generate txBytes and txSerialize\n    async generateTsBytesAndSerizlize(input) {\n      /// txBytes and txSerialize may be constructed in advance by the dapp side\n      let resultTuple = [\"\", \"\"];\n      if (\n          \"txBytes\" in input &&\n          input.txBytes.length > 0 &&\n          \"txSerialize\" in input &&\n          input.txSerialize.length > 0\n      ) {\n        resultTuple = [input.txBytes, input.txSerialize];\n      }\n\n      /// Otherwise, a transactionBlock parameter is required.\n      if (!(\"transactionBlock\" in input)) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      // if (this.walletAddress != \"connected\") {\n      //   alert(\"请先连接钱包\");\n      //   return new Promise((resolve) => {\n      //     resolve(resultTuple);\n      //   });\n      // }\n\n      let senderAccounts = window.provider.requestAccountsWithNamespace(\"sui\");\n      if (senderAccounts.length == 0) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      try {\n        let rpcUrl = getFullnodeUrl(\"mainnet\");\n        rpcUrl = \"https://www.okx.com/fullnode/sui/discover/rpc\"\n        const suiClient = new SuiClient({ url: rpcUrl });\n\n        /// sender is required\n        input.transactionBlock.setSender(senderAccounts[0]);\n        const result = await input.transactionBlock.build({\n          client: suiClient,\n        });\n        const txBytes = Buffer(result).toString(\"base64\");\n        const txSerialize = await SuiTransaction.from(txBytes).toJSON();\n        resultTuple = [txBytes, txSerialize];\n      } catch (error) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      return new Promise((resolve) => {\n        resolve(resultTuple)\n      })\n    },\n\n    //签名并发送交易\n    sui_signAndExecuteTransaction() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n        \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.testTransaction = JSON.stringify(input);\n      this.currentSuiTransaction = input;\n      this.currentSuiMethod = \"sui_signAndExecuteTransaction\";\n    },\n  },\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_getAccount()\">getAccount(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signMessage()\">signMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signPersonalMessage()\">signPersonalMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signTransaction2()\">signTransaction(Sui)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signAndExecuteTransaction()\">sendTransaction(Sui)</el-button>\n      <div style=\"font-size: 12px; color: gray;\">(send to Rally Tiger account)</div>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_requestRpc()\">RPC_getBalance</el-button>\n      <div style=\"font-size: 12px; color: gray;\">get USDC balance of address:</div>\n      <div style=\"font-size: 12px; color: gray\">0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae</div>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signTransaction_pre_execution()\">signTransaction(prepared data)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signAndExecuteTransaction_pre_execution()\">sendTransaction(prepared data)</el-button>\n    </el-col>\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./SuiTransactionPanel.vue?vue&type=template&id=56a8eddf&scoped=true\"\nimport script from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./SuiTransactionPanel.vue?vue&type=style&index=0&id=56a8eddf&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-56a8eddf\"]])\n\nexport default __exports__","<script>\n\n\nimport {OKXTronProvider} from \"@okxconnect/universal-provider\";\nimport {TronWeb} from \"tronweb\";\n\nexport default {\n  name: \"TronTransactionPanel\",\n  methods: {\n\n    async tron_signMessage() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessage(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n\n      const verify = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), res, provider.getAccount(\"tron:mainnet\").address)\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" + res, \"tron_signMessage\")\n    },\n\n    async tron_signMessageV2() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessageV2(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", res);\n      console.log(\"tron_signMessageV2_base58Address\", base58Address)\n      console.log(\"tron_signMessageV2_address\", provider.getAccount(\"tron:mainnet\").address)\n      const verify = base58Address === provider.getAccount(\"tron:mainnet\").address\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" +  res, \"tron_signMessage\")\n    },\n\n    async tron_signTransaction(isOnlySign) {\n      let provider = new OKXTronProvider(window.provider)\n        let tronWeb = new TronWeb({\n          \"fullHost\": 'https://api.trongrid.io',\n          \"headers\": {},\n          \"privateKey\": ''\n        })\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const transaction = await tronWeb.transactionBuilder.sendTrx(\"TGBcVLMnVtvJzjPWZpPiYBgwwb7th1w3BF\", 1000, address);\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let res = await provider.signTransaction( transaction, \"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", res, \"tron_signTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async getContract() {\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41e95812d8d5b5412d2b9f3a4d5a87ca15c5c51f33\"\n      \n      try {\n        const contract = await tronWeb.trx.getContract(contractAddress)\n        const abi = contract.abi.entrys;\n        console.log(\"获取到的合约：\")\n        console.log(abi)\n      } catch (error) {\n        console.log(\"Error getting contract ABI:\", error);\n      }\n    },\n    \n    async tron_signAndSendTransactionContract(isOnlySign) {\n      // this.getContract()\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41e95812d8d5b5412d2b9f3a4d5a87ca15c5c51f33\"\n      let provider = new OKXTronProvider(window.provider)\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const parameter = [\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n      ]\n      const ret = await tronWeb.transactionBuilder.triggerSmartContract(contractAddress, \"quote(uint256,uint256,uint256)\", {}, parameter, address);\n      console.log(\"=====>transaction: \")\n      console.log(ret);\n      this.$emit(\"generateTransactionParams\", ret.transaction)\n      if (isOnlySign) {\n        let tx = await provider.signTransaction( ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async tron_signAndSendTransactionApprove(isOnlySign) {\n      let provider = new OKXTronProvider(window.provider)\n\n      let transaction = {\n        \"visible\": false,\n        \"txID\": \"d1ed31b6abd2c37e248254681d3ee61b2e628fbd776def753b5592712ebd98c5\",\n        \"raw_data\": {\n          \"contract\": [{\n            \"parameter\": {\n              \"value\": {\n                \"data\": \"095ea7b3000000000000000000000000e95812d8d5b5412d2b9f3a4d5a87ca15c5c51f33ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n                \"owner_address\": \"4157c140be01fa2bbabf7f055ab879d0c05725293c\",\n                \"contract_address\": \"41b4a428ab7092c2f1395f376ce297033b3bb446c1\"\n              },\n              \"type_url\": \"type.googleapis.com/protocol.TriggerSmartContract\"\n            },\n            \"type\": \"TriggerSmartContract\"\n          }],\n          \"ref_block_bytes\": \"1bde\",\n          \"ref_block_hash\": \"af71fa1aa01b5bd1\",\n          \"expiration\": Date.now() + 60000,\n          \"fee_limit\": 250000000,\n          \"timestamp\": Date.now()\n        },\n        \"raw_data_hex\": \"0a021bde2208af71fa1aa01b5bd140f8b1fa98b4325aae01081f12a9010a31747970652e676f6f676c65617069732e636f6d2f70726f746f636f6c2e54726967676572536d617274436f6e747261637412740a154157c140be01fa2bbabf7f055ab879d0c05725293c121541b4a428ab7092c2f1395f376ce297033b3bb446c12244095ea7b3000000000000000000000000e95812d8d5b5412d2b9f3a4d5a87ca15c5c51f33ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff70f1e6f698b432900180e59a77\"\n      }\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let tx = await provider.signTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n\n    }\n\n  }\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessage()\">tron_signMessage</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessageV2()\">tron_signMessageV2</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(true)\">\n        tron_signTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(true)\">\n        tron_signTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(true)\">\n        tron_signTransaction(Approve)\n      </el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(false)\">\n        tron_signAndSendTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(false)\">\n        tron_signAndSendTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(false)\">\n        tron_signAndSendTransaction(approve)\n      </el-button>\n    </el-col>\n\n\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./TronTransactionPanel.vue?vue&type=template&id=eaaccc08&scoped=true\"\nimport script from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./TronTransactionPanel.vue?vue&type=style&index=0&id=eaaccc08&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-eaaccc08\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=5fc6ae51&scoped=true\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=5fc6ae51&scoped=true&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-5fc6ae51\"]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport ElementPlus from 'element-plus'\nimport 'element-plus/dist/index.css'\nimport App from './App.vue'\n\nconst app = createApp(App)\n\napp.use(ElementPlus)\napp.mount('#app')","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkokxconnectdemo\"] = self[\"webpackChunkokxconnectdemo\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(33230); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["Object","defineProperty","exports","value","CONNECT_METHOD_BATCH_FETCHMSG","CONNECT_METHOD_FETCHMSG","CONNECT_METHOD_RECEIVE","CONNECT_METHOD_UNSUB","CONNECT_METHOD_SUB","CONNECT_METHOD_PUBLISH","CONNECT_METHOD_LOGIN","CONNECT_METHOD_PUSH","require","__createBinding","this","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","__setModuleDefault","v","__importStar","mod","result","prototype","hasOwnProperty","call","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","next","e","rejected","done","then","apply","OKXWalletConnector","constants_1","storageconstants_1","storage_1","utils_1","utils_2","eventemitter3_1","log","protocol_1","WS","resolveWebSocketImplementation","constructor","url","events","EventEmitter","state","ConnectorState","InitState","selectedUrlIndex","retryCount","timeOutLimit","checkWSUrl","Error","heartbeatTimer","connectionTimeoutTimer","connectURLStorage","Storage","OKXCONNECTOR_CACHE_KEY","connecting","Connecting","onPayload","data","logDebug","rsp","Date","now","toString","emit","onClose","event","_a","socket","code","onError","id","payload","msg","onopen","onmessage","onclose","Connected","emitError","errorEvent","heartbeat","clearTimeout","OnError","readyState","WebSocket","OPEN","send","setTimeout","bind","tryRegistOpen","logError","registOpen","inRetry","toUTCString","URLSearchParams","startTimeOutTimer","hasBuiltInWebSocket","onerror","close","on","resetTimeOutTimer","OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE","FINISHED","checkMaxRetry","OKXCONNECTOR_WS_URL_LIST","length","connectionTryNext","nextUrl","getNextSelectUrl","CANCELED","pendingSocket","TIME_OUT","cacheSuccessUrlSelect","saveContent","onVisibleChanged","document","visibilityState","arguments","once","err","OKXConnectError","OKX_CONNECT_ERROR_CODES","CONNECTION_ERROR","connect","removeEventListener","addEventListener","disconnect","Disconnected","currentStatus","addListener","decrypt","success","failed","listenPayloadHandler","removeListener","parsedEvent","safeJsonParse","params","rawMsg","message","failHandler","addPackageParse","callback","payloadHandler","param","listener","off","doLogin","safeJsonStringify","getMsgPayloadFromHistory","tmpMsg","jsonstr","onOpen","openHandler","ConnectionManager","connect_1","commands_1","jwtconstants_1","crypto_1","jwt_1","safejson_1","log_1","url_1","appname","connectStorage","OKXCONNECTOR_CACHE_KEY_DAPP","crypto","SessionCrypto","inTMA","isInTMA","reportLog","keyPairInfo","getCachedCryptoKeyPair","jwtKeyPair","getCachedJWTKeyPair","saveJWTKeyPair","connector","OKXCONNECTOR_WS_URL_1","packageId","connectedWalletPK","currentTopic","refreshPackageId","saveCryptoKeyPair","keyPair","cacheInfo","encryptStoreMsg","OKXCONNECTOR_CRYPTO_KEY","kp","getAndDecrypt","content","clearCache","strkeyPair","publicKey","toHexString","secretKey","OKXCONNECTOR_JWT_KEY","strKeyPairInfo","hexToByteArray","generateKeyPair","isWalletPKReady","makeJWT","topic","signJWT","OKXCONNECTOR_JWT_SIDE","OKXCONNECTOR_JWT_TTL","parsePackage","input_1","input","ignoreACK","_b","_c","_d","_e","sendACK","getItem","OKXCONNECTOR_TOKEN_CACHE","inputObj","messageId","sendReceive","restoreConnect","getConnectInfo","generateTopic","info","channelId","clientId","stringifyKeypair","fromRestore","timeLog","getTime","lastConnectId","cachedSenderPublicKey","OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE","jwtToken","timeOne","error","name","timeF","sendFetchAndConsumeMessages","timeTh","catch","jsonrpc","CONNECT_JSONRPC_VER","method","token","replace","parsedMessage","fail","msgObj","trimStart","startsWith","sendRaw","ttl","OKXCONNECTOR_MESSAGE_TTL","msg_1","encrypt","msgId_1","success_1","msgId","reason","sendConnectSessionInfo","fetchedMessages","hasMore","receivedMsgs","i","timeFive","cleanCache","saveSessionContent","key","OKXCONNECTOR_SESSION_PREFIX_KEY","jsonData","getSessionContent","jsonStr","object","getCurrentConnectionReady","OKXCONNECTOR_WS_URL_IDX_KEY","OKXCONNECTOR_WS_URL_3","OKXCONNECTOR_WS_URL_2","EVENT_EMITTER_MAX_LISTENERS","Engine","sessionUtils_1","connectionManager","pendingRequests","Map","disconnectListener","getDefaultReporter","beginReport","jsonResponse","handleResponse","addDisconnectListener","disconnecter","push","setSessionConnectingListener","sessionConnectingListener","clear","getRequestId","requestId","bindRequestForPromise","set","request","requestAnswer","option","JSON","stringify","assign","onAck","sendSession","sessionInfo","response","delete","forEach","restoreconnect","onConnectResult","conect","sessionConfig","connectInfo","openUniversalLink","openUniversalUrl","connectRequest","protocolVer","Number","tonConnectSdkVersion","dAppInfo","dappInfo","requests","connectRequestStr","utf8Array","TextEncoder","encode","base64Encoded","btoa","String","fromCharCode","deeplinkUrl","standardDeeplink","isIOS","isIos","openOKXDeeplinkWithFallback","session","onConnect","getUniversalLink","connectResponse","namespaces","buildNameSpacesByConnectResponse","universalConnect","connectInfoAndUrl","tonRequest","universalRequest","item","universalConnectRequest","redirect","encodeConnectParams","tonConnectRequest","isFromTonSDK","defaultConnectRequest","openOKXLink","getOKXLink","useMini","tmaReturnUrl","openMethod","openOKXTMAWalletlinkWithFallback","useShortLink","openOKXUniversalLink","UNKNOWN_ERROR","wallet","methodsResponse","responses","find","connectRequestMethods","signResponse","WalletConnectionManager","connectionManager_1","walletConnectionManager_1","engine_1","__importDefault","MULTICODEC_ED25519_LENGTH","MULTICODEC_ED25519_HEADER","MULTICODEC_ED25519_BASE","MULTICODEC_ED25519_ENCODING","DID_METHOD","DID_PREFIX","DID_DELIMITER","KEY_PAIR_SEED_LENGTH","DATA_ENCODING","JSON_ENCODING","JWT_ENCODING","JWT_DELIMITER","JWT_IRIDIUM_TYP","JWT_IRIDIUM_ALG","JWTHeaderType","decodeJSON","encodeJSON","encodeIss","decodeIss","encodeSig","decodeSig","encodeData","decodeData","encodeJWT","decodeJWT","verifyJWT","ed25519","tweetnacl_1","stringUtils_1","default","sign","str","okxtoString","okxfromString","val","publicKeyStr","join","issuer","prefix","multicodec","split","bytes","encoded","header","signature","jwt","slice","sub_1","aud_1","ttl_1","keyPair_1","sub","aud","iat","Math","floor","alg","typ","iss","exp","act","detached","verify","OKXCONNECTOR_JWT_WALLET_SIDE","buildRequestAccountNameSpacesByConnectResponse","requestAccountNameSpaces","universalResponse","tonAddress","tonProof","address","network","ton_addr","ton_proof","accounts","namespace","addresses","methods","extra","chains","addressItem","addressArr","chain","utils_3","crypto_js_1","subKey","beforeKey","localStorage","resolveLocalStorage","checkAndUpgradeCache","storeKey","cipherIV","cacheStr","cacheKey","cache","cacheObj","fromCacheKey","toCacheKey","setItem","removeItem","timestamp","saveItem","localKey","totalCacheStr","getCachedPBKDF2InfoKey","pwLen","saltLen","pw","iv","salt","OKXCONNECTOR_STORAGER_CRYPTO_SALT","randomBytes","OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD","OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV","ivBuffer","PBKDF2","iterations","storeInfo","AES","enc","Utf8","OKXCONNECTOR_STORAGE_CIPHER_METHOD","OKXCONNECTOR_TON_KEY","WalletConnectionManagerEvent","WalletConnectionManagerTopicInfoCacheKey","RECEIVE_REQUEST","walletConnectionConstants_1","communicateEvents","sessionCryptoInfoMap","inLogin","isLogined","offset","topicId","isTopicPublicKeyExist","timestampStr","parseInternalMsg","internalMsg","internalObj","origin","originContent","base64decode","updateClientId","cid","lastCheck","dappPublicKey","syncCacheSessionInfo","topic_1","_f","_g","_h","_j","_k","_l","isInternalData","inner_message","inner_topic","messageObj","sessionInfoString","base64Content","inner_connection","toObject","decryptWallet","recovrySessionInfoFromCache","cacheMap","topicItem","cryptoItem","cryptoKeyPair","cacheSessionInfo","sync","duplicatedTopics","includes","appendTopic","sessionPublicKey","subscribeTopics","Array","from","confirmAppendingTopics","size","keys","getSessionPublicKey","getCurrentCachedTopicIdList","needPublicKey","useRaw","connectedDappPK","cryptoObject","encryptWallet","sendUnsubscribe","sendBatchFetchAndConsumeMessages","topicIdList","topics","withInternalData","finishCount","idx","nonceLength","sessionKeyPair","createKeypairFromString","createKeypair","box","createNonce","receiverPublicKey","encodedMessage","nonce","encrypted","concatInfo","concatUint8Arrays","hexResult","encodedResult","base64encode","senderPublicKey","messageByteArray","toUint8Array","internalMessage","splitToUint8Arrays","decrypted","open","TextDecoder","decode","__exportStar","p","IEngine","ISignClient","ISignClientEvents","IEngineEvents","super","client","creatOKXMiniAppWalletInfo","creatOKXWalletInfo","getBigIntRpcId","formatJsonRpcRequest","isJsonRpcError","isJsonRpcResponse","parseConnectionError","isHttpUrl","formatJsonRpcError","json_rpc_1","wallet_info_1","isJsonRpcPayload","isJsonRpcRequest","isJsonRpcResult","payloadId","formatJsonRpcResult","isReservedErrorCode","getError","getErrorByCode","formatErrorMessage","isWsUrl","okx_connect_error_1","IncrementalRandomGenerator","bits","Uint8Array","Uint16Array","Uint32Array","initialValue","getNextValue","uint8Generator","uint16Generator","date","BigInt","RESERVED_ERROR_CODES","type","STANDARD_ERROR_MAP","DEFAULT_ERROR","match","values","INTERNAL_ERROR","SERVER_ERROR","getUrlProtocol","matches","RegExp","matchRegexProtocol","regex","protocol","test","CONNECT_ITEM_ERROR_CODES","TONCHAIN","connect_wallet_1","connect_event_1","downloadUrl","standardUniversalLink","tgwalletName","shortUniversalLink","okxDeeplink","window","location","hostname","SERVER_ERROR_CODE_RANGE","INVALID_PARAMS","METHOD_NOT_FOUND","INVALID_REQUEST","PARSE_ERROR","getDefaultMessageByCode","setPrototypeOf","toJSON","BAD_REQUEST_ERROR","ALREADY_CONNECTED_ERROR","NOT_CONNECTED_ERROR","UNKNOWN_APP_ERROR","USER_REJECTS_ERROR","METHOD_NOT_SUPPORTED","NameSpaceKeyTron","NameSpaceKeyCosmos","NameSpaceKeyAptos","NameSpaceKeyBtc","NameSpaceKeySui","NameSpaceKeyTON","NameSpaceKeySOL","NameSpaceKeyEip155","misc_1","callForSuccess","fn","options","attempts","delayMs","lastError","delay","timeout","signal","aborted","timeoutId","isBrowser","isOS","isMobileUserAgent","openDeeplinkWithFallback","openLinkBlank","openLink","toSafeBase64FromBase64","isValidObject","getAppWalletShortDeepLink","encodeTWAConnectURLParams","getTelegramWalletTWAUrl","getAppWalletDeepLink","encodeTelegramUrlParameters","isTelegramUrl","openOKXDeeplink","reportEvent","logWarning","call_for_success_1","web_api_1","debug","forceReport","report_1","defaultReporter","OKXReporter","args","console","okxLogDebug","reduce","sendRecordContent","OKXReportType","LOG","warn","action","content_1","OKXReportSide","versionStr","cross_fetch_1","localforage_1","reportApiList","reportCacheKey","reportUUIDKey","MAX_LIMIT_REPORTCOUNT","DEFAULT_HTTP_HEADERS","Accept","DEFAULT_HTTP_METHOD","DEFAULT_FETCH_OPTS","headers","PAGE_IN","PAGE_OUT","CLICK","DAPP","WALLET","fetchListWithTimeout","urls_1","args_1","urls","controller","AbortController","fetchPromise","timeoutPromise","_","abort","race","ok","currentSide","currentVersion","storage","createInstance","recordList","currentUUID","configVersionAndSide","version","side","appName","recordCacheKey","reportPlatform","startErrorCatching","records","uuid","sendCachedRecords","getWindow","cachedErrors","sendRecord","record","body","res","status","filter","href","language","navigator","ua","userAgent","platform","reportItem","lang","markRecordItem","sendList","map","allSettled","results","keepIndex","index","splice","markRecord","Report_WalletType_Key","Report_Proceed_QRCode_Click","Report_ChooseType_Download_Click","Report_ChooseType_ConnectWallet_Click","Report_Proceed_Retry_Click","Report_ChooseType_ConnectWallet_View","Report_Loading_ConnectWallet_View","Report_Proceed_QRCode_View","Report_Proceed_Proceed_View","JSONStringify","JSONParse","json","numbersBiggerThanMaxInt","serializedData","parse","isCustomFormatBigInt","substring","alloc","allocUnsafe","basics_1","string","encoding","base","BASES","decoder","array","encoder","createCodec","buf","ascii","bufNum","charCodeAt","utf8","hex","bases","base16","latin1","binary","isTmaPlatform","isInTelegramBrowser","sendExpand","sendOpenTelegramLink","versionCompare","initParams","locationHash","hash","urlParseHashParams","tmaPlatform","tgWebAppPlatform","Telegram","WebApp","webAppVersion","tgWebAppVersion","platforms","TelegramWebviewProxy","isTelegramWebview","TelegramWebview","postEvent","link","fallback","URL","pathFull","pathname","search","isIframe","versionAtLeast","path_full","parent","eventType","eventData","external","notify","trustedTarget","postMessage","indexOf","_path","urlSafeDecode","qIndex","pathParam","substr","query_params","urlParseQueryString","urlencoded","decodeURIComponent","queryString","paramName","paramValue","queryStringParams","v1","v2","a","p1","p2","v1List","v2List","max","parseInt","ver","removeUrlLastSlash","addPathToUrl","tma_api_1","path","replaceStrWithParam","cleanUrl","deeplinkEncodeUrl","encodeURIComponent","fullUrl","isTelegram","newWindow","deepLinkOpened","timeoutDuration","fallbackToDownloadPage","parameters","encodedParameters","connectParam","getLastSixMd5Hash","redirectStr","browserDebug","okxconnect","extraparams","base64ContentStr","urlSafeBase64","twaDeepLink","openTelegramLink","encodeTGParams","RANDOM_LENGTH","hasLocalStorage","hashKey","generateRandomBytes32","tweetnacl_util_1","to_string_1","sha256_1","BASE16","hexString","byteArray","byte","buffer1","buffer2","mergedArray","subArray1","subArray2","encodeUint8Array","urlSafe","encodeBase64","decodeToUint8Array","decodeBase64","uint8Array","decodeUTF8","decodedUint8Array","encodeUTF8","scheme","global","self","randomBytes32","obj","getPrototypeOf","maxTouchPoints","isIOSDevice","MSStream","isIPadOS","MD5","base64","getUserAgent","ua_parser_js_1","target","doFallback","fallbackTimeout","check","vendor","opera","getResult","osName","os","toLowerCase","deviceModel","device","model","browserName","browser","OKXBtcProvider","_1","caip","provider","getUniversalProvider","getAddressForChainId","chainId","ns","checkChainId","account","getAccount","signMessage","signStr","ret","errorData","sendBitcoin","toAddress","satoshis","to","feeRate","txhash","checkParameters","signPsbt","psbtHex","signPsbts","psbtResults","psbtHexs","signAndPushPsbt","sendInscription","inscriptionId","extension","coinId","protocolId","atomicSuffix","ordinalsSuffix","endsWith","removeSuffix","scenario","txType","batchBean","coinAmount","nftId","suffix","unexistKeys","namespaceKey","OKXCosmosProvider","core_1","accountArray","algo","bech32Address","pubKey","hexToUint8Array","signArbitrary","signerAddress","signDoc","chain_id","account_number","sequence","fee","gas","amount","msgs","memo","signData","signAmino","signOptions","resData","signed","signDirect","bodyBytes","bufferToHex","authInfoBytes","accountNumber","messageToBuffer","buffer","arr","output","x","padStart","arrayBuffer","byteValue","isNaN","OKXTonProvider","statusChangeSubscriptions","statusChangeErrorSubscriptions","tonWallet","errorsHandler","connected","tonNameSpace","walletStateInit","sessionWallet","tonDeviceInfo","appVersion","maxProtocolVersion","features","connectItems","onStatusChange","sendTransaction","transaction","MAINNET","requestAccountsWithNamespace","requestParams","OKXUniversalProvider","eip155_1","sui_1","client_1","namespaces_1","solana_1","btc_1","aptos_1","ton_1","cosmos_1","init","opts","okxConnectUniversalinwindow","initialize","rpcProviders","providerOpts","requestParam","buildRequestParamFromRequest","getProvider","validateChain","keyArr","enable","connectOpts","requestAccounts","called","onRequestSent","disconnectAndEmit","cleanup","engine","aptosChainNameToGeneralId","replaceAptos","aptosNameSpace","realNS","replaceAptosInner","aptos","optionAptosNameSpace","optionalNamespaces","realOptionNS","defaultChain","replaceAptosGeneralIdWithNetName","replaceSessionAptos","disconnectInner","setNamespaces","setDefaultChain","rpcUrl","checkStorage","sessionInfoStr","getFromStore","createProviders","registerEventListeners","dappMetaData","SignClient","providersToCreate","Set","parseNamespaceKey","namespacesValue","currentNameSpace","Eip155Provider","opts1","solanaProvider","sonicProvider","svmProvider","optsTon","tonProvider","optsSui","suiProvider","SuiProvider","optsBtc","btcProvider","fbProvider","aptosProvider","moveProvider","cosmosProvider","PROVIDER_EVENTS","DEFAULT_CHAIN_CHANGED","caip2ChainId","onChainChanged","UPDATE_NAMESPACES","nameSpaces","nameSpacekey","persist","icon","isChainNamespaceInSession","chainsArr","defaultNamespace","getDefaultChain","namespaceStr","requestDefaultChainWithNamespace","caip2Chain","sessionProperties","showRequestModal","OKXUniversalProvider_1","OKXBtcProvider_1","OKXCosmosProvider_1","OKXTonProvider_1","ConnectMethodUtils_1","metaData","requestAccountItem","requiredNamespaces","nameSpaceToConnectWalletNameSpace","SESSION_CONNECTING","connectMethods","connectMethodsToConnectWalletMethods","metadata","encodeParams","fillParamsToSession","connectMethodsResponseUpdate","openOKXWallet","connectSupportMethods","bs58_1","uint8array_extras_1","isArray","isRecord","connectMethodsReply","methodItem","solanaSuccessData","suiMethod","requestMethod","suiMessage","suiMessageb64","aptosSignature","notSupportError","requestItem","errorItem","requireNameSpace","includeEip155","some","space","includeChain","paramsArr","firstParam","firstObj","convertedArray","b64encoded","atob","stringToUint8Array","aptosParams","currentURL","signChainId","applicationUrl","aptosChainId","stringToBase64","cosmosChain","freeze","getAccountsChains","isCaipNamespace","mergeRpcMap","targetRpcMap","sourceRpcMap","mergeNamespaces","source","rpcMap","GENERIC_SUBPROVIDER_NAME","RPC_URL","STORAGE","CONTEXT","WC_VERSION","PROTOCOL","RELAY_URL","LOGGER","JsonRpcConnection_1","JsonRpcProvider_1","AptosProvider","httpProviders","createHttpProviders","updateNamespace","getAccounts","setHttpProvider","http","parsedChainId","getChainId","parsedRpc","getRpcUrl","httpProvider","createHttpProvider","getHttpProvider","rpc","JsonRpcProvider","JsonRpcConnection","getGlobal","BtcProvider","CosmosProvider","updateRequestParams","isDic","switchChainId","decimalNumber","selectedChainId","chainNum","paramsChainId","paramsChainString","adaptArray","addressObj","isEqual","chainAddress","messages","typedDataJson","secondObj","hexChainId","getHexChainIdFromRequest","isChainApproved","handleSwitchChain","addEthereumChain","resultData","nameSpace","rpcUrls","eip155","core_2","disableProviderPing","isAvailable","registering","register","parseError","types_1","IJSONRpcProvider","connection","hasRegisteredEventListeners","setConnection","context","requestStrict","_error","SolanaProvider","getPubkey","getWalletAddress","components","__rest","s","t","getOwnPropertySymbols","propertyIsEnumerable","TONProvider","validUntil","newParams","fromAddress","boc","IJSONRpcConnection","opt","setGlobal","globals","projectId","parseChainId","reference","convertChainIdToNumber","mergeArrays","CAIP_DELIMITER","b","_createElementBlock","_hoisted_1","_createVNode","_component_el_container","_withCtx","_component_el_header","_cache","_createTextVNode","_component_el_main","_component_el_card","class","_createElementVNode","style","_component_el_row","_component_el_col","span","_toDisplayString","$options","_ctx","_component_el_checkbox","modelValue","withUI","$event","onChange","handleWithUI","universalToTG","handleUniversalToTG","_component_el_select","modals","placeholder","handleModalsSelect","multiple","_component_el_option","label","returnStrategy","handleReturnStrategySelect","_Fragment","_renderList","returnStrategies","strategy","_createBlock","_component_el_input","deeplink","handleReturnStrategyDeeplink","disabled","_createCommentVNode","handleLanguageSelect","locales","locale","theme","handleThemeSelect","THEME","LIGHT","DARK","selectedMethod","handleConnectMethodsSelect","tonProofValue","gutter","align","availableChains","checked","areChainsInit","isOptionalChecked","handleOptionChange","_component_el_button","onClick","initBtnClicked","connectInitStr","connectBtnClicked","connectStatusStr","connectBtnAndSignClicked","connectAndSignStr","disconnectAction","walletAddress","disconnectStatusStr","_Teleport","showModal","closeModal","_withModifiers","_component_qrcode_vue","qrValue","level","_component_el_tabs","activeTab","onTabClick","clickActiveTab","_component_el_tab_pane","eth_requestAccounts","eth_chainId","wallet_switchEthereumChain","wallet_addEthereumChain","personal_sign","eth_signTypedData_v4","eth_sendTransaction_transfer","eth_sendTransaction_approve","eth_sendTransaction_mint","wallet_watchAsset","ton_getAccount","ton_sendTransaction","sol_signMessage","sol_signTransaction","sol_signVersionedTransaction","sol_signAllTransactions","sol_signAllVersionedTransactions","sol_signAndSendTransaction","sol_signAndSendVersionedTransaction","_component_SuiPanel","onGenerateTransactionParams","sui_generateTransactionParams","_component_BTCPanel","btc_generateTransactionParams","_component_FractalPanel","fractal_generateTransactionParams","_component_TronTransactionPanel","tron_generateTransactionParams","onGenerateTransactionResult","tron_getTransactionResult","aptos_signMessage","aptos_signTransaction","aptos_signAndSubmitTransaction","cosmos_signArbitrary","cosmos_signAmino","cosmos_signDirect","wallet_testRpc","eth_sendTransaction_swap","move_signTransaction","move_signAndSubmitTransaction","testBase64UrlSafe","xs","sm","testTransaction","rows","testboc","testTransactionStr","btc_signMessage","$setup","sendAmount","clearable","btc_send","sendSatoshisAmount","btc_sendBitcoin","btc_signPsbt_up","btc_signAndPushPsbt_up","receiver","btc_sendInscription","props","setup","ref","$emit","alert","autoFinalized","__exports__","fractal_signMessage","fractal_send","fractal_sendBitcoin","fractal_signPsbt_up","fractal_signAndPushPsbt_up","fractal_sendInscription","sui_getAccount","sui_signMessage","sui_signPersonalMessage","sui_signTransaction2","sui_signAndExecuteTransaction","sui_requestRpc","sui_signTransaction_pre_execution","sui_signAndExecuteTransaction_pre_execution","recipientAddress","tx","SuiTransaction","coin","splitCoins","transferObjects","transactionBlock","showEffects","txBytes","txSerialize","generateTsBytesAndSerizlize","resultTuple","senderAccounts","getFullnodeUrl","suiClient","SuiClient","setSender","build","Buffer","currentSuiTransaction","currentSuiMethod","tron_signMessage","tron_signMessageV2","tron_signTransaction","tron_signAndSendTransactionContract","tron_signAndSendTransactionApprove","OKXTronProvider","tronWeb","TronWeb","trx","verifyMessage","signMessageV2","base58Address","verifyMessageV2","isOnlySign","transactionBuilder","sendTrx","signTransaction","signAndSendTransaction","getContract","contractAddress","contract","abi","entrys","parameter","triggerSmartContract","verifyADR36Amino","fromBech32","VConsole","allChains","optionChains","selectedModals","selectedReturnStrategy","selectedDeepLink","selectedLanguage","selectedTheme","TronTransactionPanel","QrcodeVue","BTCPanel","FractalPanel","SuiPanel","testTopic","testPublicKey","testProofPayload","pendingDeepLink","logList","connectReady","localPubKey","localSecKey","selectedChain","ProofPayloadVerify","showVerifyRow","has","selectedMethodData","isChecked","reload","add","computed","selectedChains","initChains","newChains","updatedChains","tab","tabName","initCall","OKXUniversalConnectUI","actionsConfiguration","uiPreferences","walletInfo","entries","uri","isPC","items","testTonSdk","blockExplorerUrls","chainName","nativeCurrency","symbol","decimals","dataETH","dataPolygon","types","EIP712Domain","Person","Mail","primaryType","domain","verifyingContract","contents","maxPriorityFeePerGas","maxFeePerGas","gasPrice","gasLimit","image","tonUniversalLog","sendTransactionAlert","fetch","confirm","sendData","adapter","SuiAdapter","suiResult","signAndExecuteTransaction","sui_verifySignature","signPersonalMessage","btcAdapter","btcResult","currentBtcMethod","currentBtcTransaction","hexToBase64","bs64Str","fractalResult","currentFractalMethod","currentFractalTransaction","hexStr","blob","Blob","reader","FileReader","onload","base64Data","readAsDataURL","datatest","firstStr","showUrl","isTwoSteps","hasEip155","hasSolana","hasSui","hasBtc","hasAptos","hasTon","hasCosmos","nameSpacesChains","optSpaceChains","solanaChains","hasTron","suiChains","btcChains","connectMethod","connectData","requireData","includeEth","solana","cosmos","tron","tonParams","ton","sui","btc","optData","signRequest","getCurrentSelectedMethodData","openModal","methodList","suiData","currentMethod","application","userAgentInfo","Agents","flag","isSafariOrChrome","pubkey","OKXSolanaProvider","result1","nacl","PublicKey","toBytes","OKXAptosProvider","config","AptosConfig","Network","Aptos","simple","sender","function","typeArguments","functionArguments","signAndSubmitTransaction","Connection","getSolConnect","blockhash","getLatestBlockhash","versionedTransactionMessage","TransactionMessage","payerKey","recentBlockhash","instructions","SystemProgram","transfer","fromPubkey","toPubkey","lamports","compileToV0Message","VersionedTransaction","signAllTransactions","Transaction","feePayer","isValid","cosmos_verifySignArbitrary","pub_key","signer","prefixStr","signatureBuffer","uint8Signature","pubKeyValueBuffer","pubKeyUint8Array","uiOptions","eth_verifyMessage","ethAddress","originalMessage","recoveredAddress","ethers","list","verifyList","requestItme","ethMessage","solanaMessage","verifySol","aptosMessage","aptosPublicKey","fullMessage","cosmosAddress","cosmosMessage","tronMessage","signatureResult","resultObj","verifyPersonalMessageSignature","toSuiAddress","toBase64","created","mounted","scriptTag","createElement","src","getElementsByTagName","appendChild","title","render","app","createApp","App","use","ElementPlus","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","loaded","__webpack_modules__","amdO","deferred","O","chunkIds","priority","notFulfilled","Infinity","j","every","r","n","getter","d","definition","g","globalThis","Function","prop","Symbol","toStringTag","nmd","paths","children","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}