{"version":3,"file":"js/app.d4f40bc7.js","mappings":"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","sources":["webpack://okxconnectdemo/../packages/core/src/connect/commands.js","webpack://okxconnectdemo/../packages/core/src/connect/connect.js","webpack://okxconnectdemo/../packages/core/src/connect/connectionManager.js","webpack://okxconnectdemo/../packages/core/src/connect/constants.js","webpack://okxconnectdemo/../packages/core/src/connect/engine.js","webpack://okxconnectdemo/../packages/core/src/connect/index.js","webpack://okxconnectdemo/../packages/core/src/connect/jwt.js","webpack://okxconnectdemo/../packages/core/src/connect/jwtconstants.js","webpack://okxconnectdemo/../packages/core/src/connect/sessionUtils.js","webpack://okxconnectdemo/../packages/core/src/connect/storage.js","webpack://okxconnectdemo/../packages/core/src/connect/storageconstants.js","webpack://okxconnectdemo/../packages/core/src/connect/walletConnectionConstants.js","webpack://okxconnectdemo/../packages/core/src/connect/walletConnectionManager.js","webpack://okxconnectdemo/../packages/core/src/crypto/crypto.js","webpack://okxconnectdemo/../packages/core/src/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/engine.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/json-rpc.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/connect-event.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/connect-wallet.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/wallet-info.js","webpack://okxconnectdemo/../packages/core/src/protocol/constants.js","webpack://okxconnectdemo/../packages/core/src/protocol/error/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/error/okx-connect.error.js","webpack://okxconnectdemo/../packages/core/src/protocol/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/misc.js","webpack://okxconnectdemo/../packages/core/src/utils/call-for-success.js","webpack://okxconnectdemo/../packages/core/src/utils/index.js","webpack://okxconnectdemo/../packages/core/src/utils/log.js","webpack://okxconnectdemo/../packages/core/src/utils/report.js","webpack://okxconnectdemo/../packages/core/src/utils/reportconstants.js","webpack://okxconnectdemo/../packages/core/src/utils/request.js","webpack://okxconnectdemo/../packages/core/src/utils/safejson.js","webpack://okxconnectdemo/../packages/core/src/utils/stringUtils.js","webpack://okxconnectdemo/../packages/core/src/utils/tma-api.js","webpack://okxconnectdemo/../packages/core/src/utils/url.js","webpack://okxconnectdemo/../packages/core/src/utils/utils.js","webpack://okxconnectdemo/../packages/core/src/utils/web-api.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXBtcProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXCosmosProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXTonProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXTronProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXUniversalProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/sign-client/client.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/ConnectMethodUtils.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/namespaces.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/events.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/values.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/aptos.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/btc.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/cosmos.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/eip155.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcConnection.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/solana.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/sui.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/ton.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/tron.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/misc.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/providers.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/globals.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/misc.js","webpack://okxconnectdemo/./src/App.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue?1b44","webpack://okxconnectdemo/./src/components/AllBtcTransactionPanel.vue","webpack://okxconnectdemo/./src/components/AllBtcTransactionPanel.vue?d15e","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue?e4fb","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue?aa83","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue?089a","webpack://okxconnectdemo/./src/App.vue?7ccd","webpack://okxconnectdemo/./src/main.js","webpack://okxconnectdemo/webpack/bootstrap","webpack://okxconnectdemo/webpack/runtime/amd options","webpack://okxconnectdemo/webpack/runtime/chunk loaded","webpack://okxconnectdemo/webpack/runtime/compat get default export","webpack://okxconnectdemo/webpack/runtime/define property getters","webpack://okxconnectdemo/webpack/runtime/global","webpack://okxconnectdemo/webpack/runtime/hasOwnProperty shorthand","webpack://okxconnectdemo/webpack/runtime/make namespace object","webpack://okxconnectdemo/webpack/runtime/node module decorator","webpack://okxconnectdemo/webpack/runtime/jsonp chunk loading","webpack://okxconnectdemo/webpack/startup"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_METHOD_BATCH_FETCHMSG = exports.CONNECT_METHOD_FETCHMSG = exports.CONNECT_METHOD_RECEIVE = exports.CONNECT_METHOD_UNSUB = exports.CONNECT_METHOD_SUB = exports.CONNECT_METHOD_PUBLISH = exports.CONNECT_METHOD_LOGIN = exports.CONNECT_METHOD_PUSH = void 0;\n// --------------- ws methods -------------\nexports.CONNECT_METHOD_PUSH = \"push\";\nexports.CONNECT_METHOD_LOGIN = \"login\";\nexports.CONNECT_METHOD_PUBLISH = \"publish\";\nexports.CONNECT_METHOD_SUB = \"subscribe\";\nexports.CONNECT_METHOD_UNSUB = \"unsubscribe\";\nexports.CONNECT_METHOD_RECEIVE = \"receive\";\nexports.CONNECT_METHOD_FETCHMSG = \"fetchMessages\";\nexports.CONNECT_METHOD_BATCH_FETCHMSG = \"batchFetchMessages\";\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXWalletConnector = void 0;\nconst constants_1 = require(\"./constants\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils\");\nconst utils_2 = require(\"../utils/utils\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst log = __importStar(require(\"../utils/log\"));\nconst protocol_1 = require(\"../protocol\");\nconst WS = (0, utils_2.resolveWebSocketImplementation)();\nclass OKXWalletConnector {\n    constructor(url) {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.state = constants_1.ConnectorState.InitState;\n        this.selectedUrlIndex = 0;\n        // reconnect\n        this.retryCount = 0;\n        // default timeout limit: 8 sec\n        this.timeOutLimit = 8000;\n        if (!(0, utils_2.checkWSUrl)(url)) {\n            throw new Error(`CONNECTOR: invalid url ${url}`);\n        }\n        this.url = url;\n        this.heartbeatTimer = null;\n        this.connectionTimeoutTimer = null;\n        this.connectURLStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY + storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n    }\n    get connecting() {\n        return this.state == constants_1.ConnectorState.Connecting;\n    }\n    // ------------------------------------------------------\n    onPayload(e) {\n        if (typeof e.data === \"undefined\")\n            return;\n        log.logDebug('get received data');\n        log.logDebug(e);\n        if (typeof e.data === \"string\") {\n            let rsp = e.data;\n            if (rsp === \"pong\") {\n                log.logDebug(`CONNECT: receive pong ${Date.now().toString()}`);\n                return;\n            }\n        }\n        this.events.emit(\"payload\", e.data);\n    }\n    onClose(event) {\n        var _a;\n        log.logDebug('socket get closed: ', (_a = this.socket) === null || _a === void 0 ? void 0 : _a.url, event.code);\n        this.socket = undefined;\n        this.events.emit(\"close\", event);\n    }\n    onError(id, e) {\n        const payload = { id: id, msg: e.toString() };\n        this.events.emit(\"payload\", payload);\n    }\n    onopen(socket) {\n        socket.onmessage = (event) => this.onPayload(event);\n        socket.onclose = (event) => this.onClose(event);\n        this.socket = socket;\n        this.state = constants_1.ConnectorState.Connected;\n        this.events.emit(\"open\");\n    }\n    // ------------------------------------------------------\n    emitError(errorEvent) {\n        this.events.emit(\"fail\", errorEvent);\n    }\n    // ------------------------------------------------------\n    heartbeat() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.heartbeatTimer) {\n                clearTimeout(this.heartbeatTimer);\n            }\n            if (this.state != constants_1.ConnectorState.Connected && this.state != constants_1.ConnectorState.OnError) {\n                log.logDebug('heart beat close');\n                return;\n            }\n            if (!this.socket) {\n                log.logDebug('socket not exist');\n                if (this.state == constants_1.ConnectorState.Connected || this.state == constants_1.ConnectorState.OnError) {\n                    log.logDebug('socket reconnect by heartbeat');\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                        this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n                    }\n                }\n                return;\n            }\n            if (this.socket.readyState !== WebSocket.OPEN) {\n                log.logDebug('socket not ready');\n                if (this.state == constants_1.ConnectorState.Connected || this.state == constants_1.ConnectorState.OnError) {\n                    log.logDebug('socket reconnect by heartbeat with state', this.state, this.socket.readyState);\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                        this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n                    }\n                }\n                return;\n            }\n            log.logDebug(`send ping heart beat: ${Date.now().toString()}, ${this.socket}`);\n            this.socket.send(\"ping\");\n            this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n        });\n    }\n    registOpen(url = this.url, inRetry = false) {\n        if (!(0, utils_2.checkWSUrl)(url)) {\n            throw new Error(`CONNECTOR: invalid url ${url}`);\n        }\n        this.url = url;\n        if (!inRetry) {\n            log.logDebug('Connection connect:', this.url, new Date().toUTCString());\n        }\n        this.state = constants_1.ConnectorState.Connecting;\n        const origin = new URLSearchParams(url).get(\"origin\");\n        return new Promise((resolve, reject) => {\n            const socket = new WS(url, []);\n            log.logDebug('Connection connect Begin:', this.url, new Date().toUTCString());\n            this.startTimeOutTimer(socket);\n            if ((0, utils_2.hasBuiltInWebSocket)()) {\n                log.logDebug('Add socket error handler');\n                socket.onerror = () => {\n                    reject(new Error('socket error'));\n                    socket.close();\n                };\n            }\n            else {\n                log.logDebug('Add socket error handler');\n                socket.on(\"error\", () => {\n                    reject(new Error('socket error'));\n                    socket.close();\n                });\n            }\n            socket.onopen = () => {\n                log.logDebug('socket opened');\n                this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.FINISHED);\n                this.onopen(socket);\n                this.heartbeat();\n                resolve(socket);\n            };\n        });\n    }\n    checkMaxRetry() {\n        log.logDebug('current retry count:', this.retryCount, 'of', constants_1.OKXCONNECTOR_WS_URL_LIST.length);\n        return this.retryCount > constants_1.OKXCONNECTOR_WS_URL_LIST.length;\n    }\n    connectionTryNext() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.checkMaxRetry()) {\n                //TODO: mark descent\n                this.retryCount += 1;\n                let nextUrl = this.getNextSelectUrl();\n                log.logDebug('Connection retry:', nextUrl, new Date().toUTCString());\n                return this.registOpen(nextUrl, true);\n            }\n            else {\n                log.logDebug('Max Connection retry ', this.retryCount, new Date().toUTCString());\n            }\n        });\n    }\n    startTimeOutTimer(socket) {\n        if (this.connectionTimeoutTimer) {\n            this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.CANCELED);\n        }\n        this.pendingSocket = socket;\n        this.connectionTimeoutTimer = setTimeout(() => {\n            if (this.pendingSocket) {\n                this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.TIME_OUT);\n            }\n        }, this.timeOutLimit);\n    }\n    resetTimeOutTimer(code) {\n        var _a;\n        // 1. cancel connecting pending sockets\n        if (code != constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.FINISHED) {\n            (_a = this.pendingSocket) === null || _a === void 0 ? void 0 : _a.close(code);\n        }\n        this.pendingSocket = undefined;\n        // 2. remove timer\n        clearTimeout(this.connectionTimeoutTimer);\n    }\n    cacheSuccessUrlSelect() {\n        this.connectURLStorage.saveContent(this.selectedUrlIndex.toString(), storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n    }\n    // private getSuccessUrlSelect(): string {\n    //     let selectIndex = this.connectURLStorage.getItem(OKXCONNECTOR_CACHE_KEY)?.content\n    //     let index = 0\n    //     if (selectIndex) {\n    //         index = Number(selectIndex)\n    //     }\n    //     this.selectedUrlIndex = index\n    //     return OKXCONNECTOR_WS_URL_LIST[index]\n    // }\n    getNextSelectUrl() {\n        this.selectedUrlIndex += 1;\n        this.selectedUrlIndex = this.selectedUrlIndex % constants_1.OKXCONNECTOR_WS_URL_LIST.length;\n        return constants_1.OKXCONNECTOR_WS_URL_LIST[this.selectedUrlIndex];\n    }\n    // ------------------------------------------------------\n    onVisibleChanged() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (document.visibilityState === 'visible') {\n                // check and restore\n                log.logDebug(`get changed ${this.state}, ${this.socket}`);\n                if (this.state == constants_1.ConnectorState.Connected && typeof this.socket === \"undefined\") {\n                    log.logDebug('CONNECTION need reopen');\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                    }\n                    return;\n                }\n            }\n        });\n    }\n    tryRegistOpen() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            if (this.connecting) {\n                log.logDebug('tryRegistOpen => connecting state');\n                return new Promise((resolve, reject) => {\n                    this.events.once('fail', (e) => {\n                        log.logDebug('tryRegistOpen => connecting fail listener', e);\n                        return reject(e);\n                    });\n                    this.events.once(\"open\", () => {\n                        if (typeof this.socket == \"undefined\") {\n                            return reject(new Error(\"Connect lost\"));\n                        }\n                        return resolve(this.socket);\n                    });\n                });\n            }\n            log.logDebug('tryRegistOpen => try registOpen until retry limit is hit');\n            let inRetry = false;\n            while (!this.checkMaxRetry() && !this.socket) {\n                try {\n                    log.logDebug('tryRegistOpen => call registOpen, try count:', this.retryCount, inRetry);\n                    yield this.registOpen(url, inRetry);\n                }\n                catch (err) {\n                    log.logDebug('tryRegistOpen => registOpen failed', err);\n                    this.retryCount += 1;\n                    url = this.getNextSelectUrl();\n                    inRetry = true;\n                }\n            }\n            log.logDebug('tryRegistOpen => exit while loop', this.retryCount, this.socket);\n            if (!this.socket && this.checkMaxRetry()) {\n                log.logDebug('tryRegistOpen => failed to open a socket', this.retryCount, this.socket);\n                this.retryCount = 0;\n                this.state = constants_1.ConnectorState.OnError;\n                this.emitError(new Error('tryRegistOpen failed'));\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CONNECTION_ERROR, \"Failed to connect\");\n            }\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this.tryRegistOpen();\n                // listener for reconnect\n                document.removeEventListener('visibilitychange', this.onVisibleChanged.bind(this));\n                document.addEventListener('visibilitychange', this.onVisibleChanged.bind(this));\n            }\n            catch (e) {\n                log.logDebug('connect => failed to connect', e);\n                throw e;\n            }\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.state = constants_1.ConnectorState.Disconnected;\n            return new Promise((resolve, reject) => {\n                if (typeof this.socket === \"undefined\") {\n                    // reject(new Error(\"CONNECTION closed\"))\n                    resolve();\n                    return;\n                }\n                this.socket.onclose = (event) => {\n                    this.onClose(event);\n                    resolve();\n                };\n                this.socket.close();\n                if (this.heartbeatTimer) {\n                    clearTimeout(this.heartbeatTimer);\n                }\n            });\n        });\n    }\n    currentStatus() {\n        return {\n            state: this.state,\n            url: this.url\n        };\n    }\n    // event will be jsonstr\n    /// @params Promise\n    /// @params success/failed callback\n    addListener(event, decrypt, success, failed) {\n        if (this.listenPayloadHandler) {\n            this.events.removeListener(\"payload\", this.listenPayloadHandler);\n        }\n        this.listenPayloadHandler = (e) => {\n            var _a;\n            log.logDebug(`<<< get payload ${e}`);\n            let parsedEvent = (0, utils_1.safeJsonParse)(e);\n            // parse the data to chose success or failed\n            if (parsedEvent.params && parsedEvent.params.data) {\n                let rawMsg = (_a = parsedEvent.params.data) === null || _a === void 0 ? void 0 : _a.message;\n                if (rawMsg) {\n                    try {\n                        let msg = decrypt(rawMsg);\n                        if (msg === undefined) {\n                            log.logDebug(`CONNECT: decrypt undefined`);\n                            failed(event, 'Decrypt undefined');\n                        }\n                        else {\n                            success(event, msg);\n                        }\n                    }\n                    catch (e) {\n                        log.logDebug(`CONNECT: decrypt failed: ${e}`);\n                        failed(event, e.message);\n                    }\n                }\n            }\n        };\n        this.events.on(\"payload\", this.listenPayloadHandler);\n        if (this.failHandler) {\n            this.events.removeListener(\"fail\", this.failHandler);\n        }\n        this.failHandler = (e) => {\n            if (e) {\n                log.logDebug(`CONNECT failed: ${e}`);\n                failed(event, e.message);\n            }\n            else {\n                failed(event, \"Unkonow error\");\n            }\n        };\n        this.events.on(\"fail\", this.failHandler);\n    }\n    addPackageParse(callback) {\n        if (this.payloadHandler) {\n            this.events.removeListener(\"payload\", this.payloadHandler);\n        }\n        this.payloadHandler = (e) => __awaiter(this, void 0, void 0, function* () {\n            // parse the data to chose success or failed\n            log.logDebug(`CONNECTION @[${new Date().toUTCString()}] <<<< received e:${e}`);\n            let param = (0, utils_1.safeJsonParse)(e);\n            yield callback(param);\n        });\n        this.events.on(\"payload\", this.payloadHandler);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    send(doLogin, payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (typeof this.socket === \"undefined\") {\n                    log.logDebug(`>>> send payload undefined ${payload}`);\n                    // this.socket = await this.registOpen();\n                    yield doLogin();\n                }\n                log.logDebug(`CONNECTION @[${new Date().toUTCString()}]>>> send payload ${(0, utils_1.safeJsonStringify)(payload)}`);\n                if (this.socket) {\n                    this.socket.send((0, utils_1.safeJsonStringify)(payload));\n                }\n            }\n            catch (e) {\n                this.onError(payload.id, e);\n            }\n        });\n    }\n    getMsgPayloadFromHistory(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof msg === \"undefined\")\n                return;\n            let tmpMsg = {\n                params: {\n                    data: msg\n                }\n            };\n            let jsonstr = (0, utils_1.safeJsonStringify)(msg);\n            log.logDebug('get received data from history');\n            log.logDebug(jsonstr);\n            jsonstr = (0, utils_1.safeJsonStringify)(tmpMsg);\n            this.events.emit(\"payload\", jsonstr);\n        });\n    }\n    onOpen(callback) {\n        if (this.openHandler) {\n            this.events.removeListener(\"open\", this.openHandler);\n        }\n        this.openHandler = () => __awaiter(this, void 0, void 0, function* () {\n            log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> ws opened: `);\n            yield callback();\n        });\n        this.events.on(\"open\", this.openHandler);\n        this.cacheSuccessUrlSelect();\n    }\n}\nexports.OKXWalletConnector = OKXWalletConnector;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionManager = void 0;\nconst connect_1 = require(\"./connect\");\nconst commands_1 = require(\"./commands\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst jwtconstants_1 = require(\"./jwtconstants\");\nconst constants_1 = require(\"./constants\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils/utils\");\nconst crypto_1 = require(\"../crypto/crypto\");\nconst jwt_1 = require(\"./jwt\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst report_1 = require(\"../utils/report\");\nconst url_1 = require(\"../utils/url\");\nclass ConnectionManager {\n    constructor(appname = undefined) {\n        this.events = new eventemitter3_1.EventEmitter();\n        // local storage\n        this.connectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY_DAPP + appname, storageconstants_1.OKXCONNECTOR_CACHE_KEY_DAPP);\n        this.crypto = new crypto_1.SessionCrypto();\n        let inTMA = (0, url_1.isInTMA)();\n        (0, log_1.logDebug)('do init:', inTMA);\n        log.reportLog('connection manager do init');\n        if (inTMA) {\n            // recovery from cache\n            const keyPairInfo = this.getCachedCryptoKeyPair();\n            (0, log_1.logDebug)('use same pk:', keyPairInfo);\n            this.crypto = new crypto_1.SessionCrypto(keyPairInfo);\n        }\n        this.jwtKeyPair = this.getCachedJWTKeyPair();\n        this.saveJWTKeyPair(this.jwtKeyPair);\n        // wss connection\n        this.connector = new connect_1.OKXWalletConnector(constants_1.OKXCONNECTOR_WS_URL_1);\n        this.packageId = Date.now();\n        // connection state\n        this.connectedWalletPK = '';\n        this.currentTopic = '';\n        log.logDebug(`this.connectedWalletPK  constructor   ${this.connectedWalletPK}`);\n    }\n    refreshPackageId() {\n        this.packageId = Date.now();\n    }\n    saveCryptoKeyPair(keyPair) {\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(keyPair);\n        // encrypt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_CRYPTO_KEY);\n    }\n    getCachedCryptoKeyPair() {\n        // decrypt kp\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_CRYPTO_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            log.logDebug('get cached crypto key:');\n            log.logDebug(content);\n            let keyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            return keyPairInfo;\n        }\n        else {\n            this.connectStorage.clearCache();\n        }\n        return null;\n    }\n    saveJWTKeyPair(keyPair) {\n        var strkeyPair = {\n            publicKey: (0, utils_1.toHexString)(keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(keyPair.secretKey)\n        };\n        log.logDebug('save jwt kp');\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(strkeyPair);\n        log.logDebug(cacheInfo);\n        // encrypt jwt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_JWT_KEY);\n    }\n    getCachedJWTKeyPair() {\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            // TODO: decrypt jwt kp\n            log.logDebug('get cached jwt kp:');\n            log.logDebug(content);\n            let strKeyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            log.logDebug('save jwt kp');\n            log.logDebug(strKeyPairInfo);\n            var keyPair = {\n                publicKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.publicKey),\n                secretKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.secretKey)\n            };\n            return keyPair;\n        }\n        else {\n            return (0, jwt_1.generateKeyPair)();\n        }\n    }\n    isWalletPKReady() {\n        log.logDebug(`isWalletPKReady  ===> ${this.connectedWalletPK}`);\n        return this.connectedWalletPK.length > 0;\n    }\n    makeJWT(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, jwt_1.signJWT)(topic, jwtconstants_1.OKXCONNECTOR_JWT_SIDE, jwtconstants_1.OKXCONNECTOR_JWT_TTL, // 24h\n            this.jwtKeyPair);\n        });\n    }\n    parsePackage(input_1) {\n        return __awaiter(this, arguments, void 0, function* (input, ignoreACK = false) {\n            var _a, _b, _c, _d, _e;\n            this.events.emit(input.id, input);\n            // send back ACK\n            if (!ignoreACK) {\n                yield this.sendACK(input.id, true);\n                let topic = (_a = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE)) === null || _a === void 0 ? void 0 : _a.content;\n                if (topic) {\n                    let inputObj = input;\n                    if ((_c = (_b = inputObj.params) === null || _b === void 0 ? void 0 : _b.data) === null || _c === void 0 ? void 0 : _c.messageId) {\n                        this.refreshPackageId();\n                        yield this.sendReceive(this.packageId.toString(), (_e = (_d = inputObj.params) === null || _d === void 0 ? void 0 : _d.data) === null || _e === void 0 ? void 0 : _e.messageId, topic);\n                    }\n                }\n            }\n        });\n    }\n    restoreConnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.reportLog('connection manager restore connection');\n            log.logDebug(`connectionManager  restoreConenct   ${topic}`);\n            if ((typeof topic !== 'string') || topic.length === 0) {\n                throw new Error('CONNECTION: invalid topic');\n            }\n            log.logDebug(`connectionManager  restoreConenct   disconnect`);\n            yield this.disconnect(true);\n            this.connectStorage.saveContent(topic, storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`connectionManager  restoreConenct   conect`);\n            yield this.connect(true);\n        });\n    }\n    getConnectInfo() {\n        var topic = (0, utils_1.generateTopic)();\n        log.logDebug(`generate topic token: ${topic}`);\n        log.reportLog('connection manager generate connection info');\n        this.currentTopic = topic;\n        const info = {\n            channelId: topic,\n            clientId: this.crypto.stringifyKeypair().publicKey,\n        };\n        return info;\n    }\n    connect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            this.timeLog = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---enter->\", this.timeLog);\n            log.reportLog('connection manager begin connect');\n            let lastConnectId = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            //1. generate topic & jwt\n            var topic = this.currentTopic;\n            log.logDebug(`generate topic token: ${topic}`);\n            // crypto keypair\n            if (fromRestore) {\n                if (typeof lastConnectId !== 'undefined' && lastConnectId !== null) {\n                    log.logDebug(`read last connect id: ${lastConnectId}`);\n                    topic = lastConnectId.content;\n                }\n                var cachedSenderPublicKey = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                if (cachedSenderPublicKey) {\n                    this.connectedWalletPK = cachedSenderPublicKey.content;\n                    (0, log_1.logDebug)(`connectionManager connect() this.connectedWalletPK : ${this.connectedWalletPK}`);\n                }\n                log.reportLog('connection manager do restore connection');\n            }\n            if (fromRestore) {\n                // recovery from cache\n                const keyPairInfo = this.getCachedCryptoKeyPair();\n                if (keyPairInfo) {\n                    this.crypto = new crypto_1.SessionCrypto(keyPairInfo);\n                }\n            }\n            log.logDebug(`use crypto client id: ${this.crypto.stringifyKeypair().publicKey}`);\n            // cache topic\n            this.connectStorage.saveContent(topic, storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            var jwtToken = yield this.makeJWT(topic);\n            log.logDebug(`generate jwt token: ${jwtToken}`);\n            this.connectStorage.saveContent(jwtToken, 'jwt');\n            return new Promise((resolve, reject) => {\n                // 1. when websocket opened\n                this.connector.onOpen(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug(`1. connector on open`);\n                    log.reportLog('1. connect ws open');\n                    const timeOne = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---open->\", timeOne - this.timeLog);\n                    //2. send jwt to login\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when login');\n                            log.reportLog('2. connect login failed');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // throw error\n                            reject(error);\n                        }\n                        //3. send subscribe\n                        this.refreshPackageId();\n                        this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                            // ack\n                            if (rsp && rsp.error) {\n                                log.logError('failed when subscribe');\n                                log.reportLog('3. connect subscribe failed');\n                                yield this.connector.disconnect();\n                                var error = new Error();\n                                error.message = rsp.error.message;\n                                error.name = rsp.error.code.toString();\n                                // throw error\n                                reject(error);\n                            }\n                            this.refreshPackageId();\n                            log.logDebug(`4. subscribe callback then send fetch: ${this.packageId}`);\n                            log.reportLog('4. subscribe callback then send fetch');\n                            const timeF = new Date().getTime();\n                            (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n                            // 4. fetch messages\n                            yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                            resolve();\n                        }));\n                        log.logDebug(`3. login callback then send subscribe: ${this.packageId}`);\n                        log.reportLog('3. connect subscribe failed');\n                        const timeTh = new Date().getTime();\n                        (0, log_1.logDebug)(\"ConnectTime---login callback->\", timeTh - this.timeLog);\n                        yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                            log.logDebug('CONNECT: reconnect before send');\n                            yield this.connector.connect()\n                                .catch((err) => {\n                                (0, log_1.logDebug)('ConnectionManager connect error', err);\n                                reject(err);\n                            });\n                        }), {\n                            id: this.packageId.toString(),\n                            jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                            method: commands_1.CONNECT_METHOD_SUB,\n                            params: {\n                                topic: topic\n                            }\n                        });\n                    }));\n                    log.logDebug(`2. login called`);\n                    log.reportLog('2. connection manager connect call login');\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        yield this.connector.connect()\n                            .catch((err) => {\n                            (0, log_1.logDebug)('ConnectionManager connect error', err);\n                            reject(err);\n                        });\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_LOGIN,\n                        params: {\n                            token: jwtToken\n                        }\n                    });\n                    // 4. listen when dapp back to front, receive wallet public key\n                    this.connector.addPackageParse((event) => {\n                        var _a;\n                        log.logDebug(`connect: parse package`);\n                        log.logDebug(event);\n                        if (!(\"params\" in event) || !(\"data\" in event[\"params\"])) {\n                            this.parsePackage(event, true);\n                            return;\n                        }\n                        let rawMsg = (_a = event.params.data) === null || _a === void 0 ? void 0 : _a.message;\n                        if (typeof rawMsg !== 'undefined') {\n                            rawMsg = rawMsg.replace(/'/g, '\"');\n                            let parsedMessage = (0, safejson_1.safeJsonParse)(rawMsg);\n                            if (typeof parsedMessage !== 'string' && \"clientId\" in parsedMessage && parsedMessage.clientId && parsedMessage.clientId.length > 0) {\n                                this.connectedWalletPK = parsedMessage.clientId;\n                                log.logDebug(`this.connectedWalletPK  addPackageParse   ${this.connectedWalletPK}`);\n                                // exchange sender public key\n                                // cache wallet public key\n                                this.connectStorage.saveContent(this.connectedWalletPK, storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                                // cache crypto keypair\n                                this.saveCryptoKeyPair(this.crypto.stringifyKeypair());\n                            }\n                        }\n                        // ignore receive echo\n                        this.parsePackage(event, event.method === commands_1.CONNECT_METHOD_RECEIVE);\n                    });\n                }));\n                this.connector.connect().catch((err) => {\n                    (0, log_1.logDebug)('ConnectionManager connect error', err);\n                    reject(err);\n                });\n            });\n        });\n    }\n    disconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            yield this.connector.disconnect();\n            log.reportLog('connect disconnect');\n            //clean cached topic\n            //如果是恢复连接，就不清理解密public key\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            if (!fromRestore) {\n                this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                this.connectedWalletPK = '';\n                (0, log_1.logDebug)(`connectionManager disconnect() this.connectedWalletPK : ${this.connectedWalletPK}`);\n            }\n        });\n    }\n    addListener(event, success, fail) {\n        this.connector.addListener((0, safejson_1.safeJsonStringify)(event), (rawMsg) => {\n            rawMsg = rawMsg.replace(/'/g, '\"');\n            log.logDebug(`addListener ===> ${rawMsg}`);\n            if (typeof rawMsg !== 'undefined') {\n                var msgObj = (0, safejson_1.safeJsonParse)(rawMsg);\n                var msg = msgObj.message;\n                let result;\n                if (msg.trimStart().startsWith('{')) {\n                    result = msg;\n                }\n                else {\n                    if (msgObj.clientId && msgObj.clientId.length > 0) {\n                        this.connectedWalletPK = msgObj.clientId;\n                        this.connectStorage.saveContent(this.connectedWalletPK, storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                        log.logDebug(`this.connectedWalletPK  addListener   ${this.connectedWalletPK}`);\n                        log.logDebug(`this.cryptoKey  addListener   ${(0, utils_1.toHexString)(this.crypto.keyPair.publicKey)}`);\n                        // cache crypto keypair\n                        this.saveCryptoKeyPair(this.crypto.stringifyKeypair());\n                    }\n                    result = this.crypto.decrypt(msg, this.connectedWalletPK);\n                }\n                log.logDebug(`addListener ===> ${result}`);\n                return result;\n            }\n            return undefined;\n        }, success, fail);\n    }\n    sendRaw(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.logDebug(`message send =====> ${msg}`);\n            log.reportLog('connect send raw msg');\n            let message = msg;\n            log.logDebug(`message send =====encrypt message.length>>>> ${message.length}`);\n            // only one topic\n            let topic = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`message send =====topic>>>> ${topic === null || topic === void 0 ? void 0 : topic.content}`);\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                method: commands_1.CONNECT_METHOD_PUBLISH,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                params: {\n                    message: {\n                        topic: topic === null || topic === void 0 ? void 0 : topic.content,\n                        message: message,\n                        ttl: constants_1.OKXCONNECTOR_MESSAGE_TTL\n                    }\n                } // crypted\n            };\n            this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                // ack\n                if (rsp && rsp.error) {\n                    log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                }\n                else if (rsp && !rsp.error) {\n                    log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                }\n            }));\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n            return this.packageId;\n        });\n    }\n    send(msg_1) {\n        return __awaiter(this, arguments, void 0, function* (msg, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL) {\n            // make send msg payload\n            log.logDebug(`message send =====> ${msg}`);\n            log.reportLog('connect send msg');\n            if (!this.isWalletPKReady()) {\n                // channel not ready\n                throw new Error('connection not finish');\n            }\n            let message = this.crypto.encrypt(msg, this.connectedWalletPK);\n            log.logDebug(`message send =====encrypt message.length>>>> ${message.length}`);\n            log.reportEvent(report_1.OKXReportType.LOG, 'msg_size', message.length.toString());\n            // only one topic\n            let topic = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`message send =====topic>>>> ${topic === null || topic === void 0 ? void 0 : topic.content}`);\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                method: commands_1.CONNECT_METHOD_PUBLISH,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                params: {\n                    message: {\n                        topic: topic === null || topic === void 0 ? void 0 : topic.content,\n                        message: message,\n                        ttl: ttl\n                    }\n                } // crypted\n            };\n            this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                // ack\n                if (rsp && rsp.error) {\n                    log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                }\n                else if (rsp && !rsp.error) {\n                    log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                }\n            }));\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n            return this.packageId;\n        });\n    }\n    sendACK(msgId_1, success_1) {\n        return __awaiter(this, arguments, void 0, function* (msgId, success, reason = undefined) {\n            if (success === true) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    result: true\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n            else if (reason) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    error: {\n                        code: reason.code, //int\n                        message: reason.message\n                    }\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    // send receive\n    sendReceive(msgId, messageId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECEIVE,\n                params: {\n                    data: {\n                        messageId: messageId,\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendConnectSessionInfo(msgId, messageId, topic, params) {\n        return __awaiter(this, void 0, void 0, function* () {\n        });\n    }\n    // send receive\n    // 1. fetch all \n    // 2. send back receive\n    // 3. check has more, if so, repeat from 1st step\n    sendFetchAndConsumeMessages(msgId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(msgId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic == topic) {\n                                let messageId = msg.messageId;\n                                log.reportLog('5. get fetch result');\n                                yield this.connector.getMsgPayloadFromHistory(msg);\n                                // send receive command to relay server\n                                this.refreshPackageId();\n                                yield this.sendReceive(this.packageId.toString(), messageId, topic);\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            log.reportLog('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_FETCHMSG,\n                params: {\n                    data: {\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    cleanCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.reportLog('connection cache clean called');\n            this.connectStorage.clearCache();\n        });\n    }\n    saveSessionContent(key, data) {\n        if (!data) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(data);\n        this.connectStorage.encryptStoreMsg(jsonData, storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n    }\n    getSessionContent(key) {\n        let jsonStr = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        if (jsonStr) {\n            let object = (0, safejson_1.safeJsonParse)(jsonStr);\n            return object;\n        }\n        return undefined;\n    }\n    getCurrentConnectionReady() {\n        return this.isWalletPKReady();\n    }\n}\nexports.ConnectionManager = ConnectionManager;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectorState = exports.CONNECT_JSONRPC_VER = exports.OKXCONNECTOR_MESSAGE_TTL = exports.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE = exports.OKXCONNECTOR_WS_URL_LIST = exports.OKXCONNECTOR_WS_URL_IDX_KEY = exports.OKXCONNECTOR_WS_URL_3 = exports.OKXCONNECTOR_WS_URL_2 = exports.OKXCONNECTOR_WS_URL_1 = exports.EVENT_EMITTER_MAX_LISTENERS = void 0;\nexports.EVENT_EMITTER_MAX_LISTENERS = 10;\nexports.OKXCONNECTOR_WS_URL_1 = \"wss://wsdexpri.okx.com/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_2 = \"wss://wsdexpri.okx.ac/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_3 = \"wss://wsdexpri.coinall.ltd/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_IDX_KEY = \"wuik\";\nexports.OKXCONNECTOR_WS_URL_LIST = [\n    exports.OKXCONNECTOR_WS_URL_1,\n    exports.OKXCONNECTOR_WS_URL_2,\n    exports.OKXCONNECTOR_WS_URL_3,\n];\nexports.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE = {\n    TIME_OUT: 3990,\n    CANCELED: 3991,\n    FINISHED: 3992,\n};\nexports.OKXCONNECTOR_MESSAGE_TTL = 300000;\n// --------------- JSON RPC ---------------\nexports.CONNECT_JSONRPC_VER = \"2.0\";\nexports.ConnectorState = {\n    InitState: 0,\n    Connecting: 1,\n    Connected: 2,\n    Disconnected: 3,\n    OnError: 4,\n};\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Engine = void 0;\nconst safejson_1 = require(\"../utils/safejson\");\nconst log_1 = require(\"../utils/log\");\nconst protocol_1 = require(\"../protocol\");\n// import {standardDeeplink, tonConnectSdkVersion} from \"../../ton/tonsdk/constants/version\";\nconst utils_1 = require(\"../utils\");\nconst utils_2 = require(\"../utils\");\nconst sessionUtils_1 = require(\"./sessionUtils\");\nconst url_1 = require(\"../utils/url\");\nclass Engine {\n    constructor(connectionManager) {\n        this.pendingRequests = new Map();\n        this.disconnectListener = [];\n        this.connectionManager = connectionManager;\n        // report api begin\n        (0, log_1.getDefaultReporter)().beginReport();\n        this.connectionManager.addListener(\"sdk_response\", (event, msg) => {\n            var jsonResponse = (0, safejson_1.safeJsonParse)(msg);\n            (0, log_1.logDebug)(`Engine ==>> addListener ==> success ==> ${jsonResponse}`);\n            this.handleResponse(event, jsonResponse);\n        }, function () {\n        });\n    }\n    addDisconnectListener(disconnecter) {\n        this.disconnectListener.push(disconnecter);\n    }\n    setSessionConnectingListener(sessionConnectingListener) {\n        this.sessionConnectingListener = sessionConnectingListener;\n    }\n    disconnect() {\n        (0, log_1.logDebug)('Engine ==>> disconnect');\n        this.pendingRequests.clear();\n    }\n    getRequestId() {\n        const requestId = Date.now().toString();\n        (0, log_1.logDebug)('Engine ==>> getRequestId ==>', requestId);\n        return requestId;\n    }\n    bindRequestForPromise(requestId, resolve) {\n        this.pendingRequests.set(requestId, resolve);\n    }\n    send(request, requestAnswer, option, ttl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('Engine ==>> send  request==>', JSON.stringify(request));\n            const requestId = this.getRequestId();\n            try {\n                let packageId = yield this.connectionManager.send(JSON.stringify(Object.assign(Object.assign({}, request), { requestId: requestId })), ttl);\n                this.connectionManager.events.once(packageId.toString(), (event) => {\n                    var _a;\n                    (0, log_1.logDebug)(`Engine ==> send => onAck => ${(0, safejson_1.safeJsonStringify)(event)}`);\n                    if (event && event.result) {\n                        (_a = requestAnswer.onAck) === null || _a === void 0 ? void 0 : _a.call(requestAnswer);\n                    }\n                });\n                if (requestAnswer.resolve) {\n                    this.bindRequestForPromise(requestId, requestAnswer.resolve);\n                }\n            }\n            catch (e) {\n                return Promise.reject(e);\n            }\n        });\n    }\n    sendSession(sessionInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('[Connect] sendSession called:', sessionInfo);\n            const requestId = this.getRequestId();\n            let request = {\n                method: 'session_info',\n                params: { sessionInfo: sessionInfo }\n            };\n            yield this.connectionManager.sendRaw(JSON.stringify(Object.assign(Object.assign({}, request), { requestId: requestId })));\n            // try {\n            //     let packageId = await callForSuccess(() =>\n            //         , option)\n            //     this.connectionManager.events.once(packageId.toString(),(event)=>{\n            //         logDebug(`Engine ==> send => onAck => ${safeJsonStringify(event)}`)\n            //         if (event && event.result){\n            //             requestAnswer.onAck?.()\n            //         }\n            //     })\n            //     if (requestAnswer.resolve){\n            //         this.bindRequestForPromise(requestId, requestAnswer.resolve)\n            //     }\n            // }catch (e) {\n            //     return Promise.reject(e)\n            // }\n        });\n    }\n    handleResponse(event, response) {\n        (0, log_1.logDebug)(`Engine ==>> handleResponse_1  ======>response: ${(0, safejson_1.safeJsonStringify)(response)}`, event);\n        if (\"requestId\" in response) {\n            (0, log_1.logDebug)(\"Engine ==>> handleResponse_2  ===> in response\");\n            let requestId = response.requestId;\n            const resolve = this.pendingRequests.get(requestId);\n            if (resolve) {\n                (0, log_1.logDebug)(\"Engine ==>> handleResponse_3  ===> find resolve:\", resolve);\n                resolve(response);\n                // 从pendingRequests中删除这个Promise\n                this.pendingRequests.delete(requestId);\n            }\n            else {\n                (0, log_1.logDebug)(\"Engine ==>> handleResponse_3  ===> not find resolve:\");\n                if (response.method === \"disconnect\") {\n                    this.disconnectListener.forEach(listener => listener());\n                    this.disconnectListener = [];\n                    this.disconnect();\n                }\n                else if (response.method === \"session_connecting\") {\n                    (0, log_1.logDebug)(\"Engine ==>> handleResponse_4  ===> sessionConnectingListener\");\n                    if (this.sessionConnectingListener) {\n                        (0, log_1.logDebug)(\"Engine ==>> handleResponse_4  ===> sessionConnectingListener not null\");\n                        this.sessionConnectingListener();\n                        this.sessionConnectingListener = undefined;\n                    }\n                }\n            }\n        }\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.restoreConnect(sessionInfo.topic));\n            onConnectResult(sessionInfo);\n        });\n    }\n    conect(request, sessionConfig, onConnectResult) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b;\n            const connectInfo = this.connectionManager.getConnectInfo();\n            const requestId = this.getRequestId();\n            let openUniversalLink = (_a = sessionConfig.openUniversalUrl) !== null && _a !== void 0 ? _a : false;\n            const connectRequest = {\n                protocolVer: Number(protocol_1.tonConnectSdkVersion),\n                topic: connectInfo.channelId,\n                clientId: connectInfo.clientId,\n                requestId: requestId,\n                dAppInfo: sessionConfig.dappInfo,\n                requests: request,\n            };\n            const connectRequestStr = JSON.stringify(connectRequest);\n            const utf8Array = new TextEncoder().encode(connectRequestStr);\n            const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n            const deeplinkUrl = `${protocol_1.standardDeeplink}?param=${base64Encoded}`;\n            (0, log_1.logDebug)('engine ==>> connect ==>>deeplinkUrl:', deeplinkUrl);\n            const isIOS = (0, utils_2.isIos)();\n            (0, log_1.logDebug)(`engine ==>> connect ==>>isIOS: ${isIOS}   openUniversalLink: ${openUniversalLink}`);\n            if (isIOS && openUniversalLink) {\n                (0, log_1.logDebug)('bridge-provider ==>> connect_3');\n                (0, utils_1.openOKXDeeplinkWithFallback)(deeplinkUrl);\n            }\n            yield ((_b = this.connectionManager) === null || _b === void 0 ? void 0 : _b.disconnect(false));\n            this.bindRequestForPromise(requestId, (response) => {\n                let session = this.onConnect(response, sessionConfig, connectInfo.channelId);\n                onConnectResult(session, response);\n            });\n            try {\n                yield this.connectionManager.connect();\n            }\n            catch (e) {\n                (0, log_1.logDebug)('Engine conect error', e);\n                throw e;\n            }\n            if (!isIOS && openUniversalLink) {\n                (0, log_1.logDebug)('bridge-provider ==>> connect_4');\n                (0, utils_1.openOKXDeeplinkWithFallback)(deeplinkUrl);\n            }\n            return {\n                connectInfo: connectInfo,\n                deeplinkUrl: (0, utils_1.getUniversalLink)(deeplinkUrl)\n            };\n        });\n    }\n    onConnect(connectResponse, sessionConfig, topic) {\n        if (connectResponse.method == \"connect\") {\n            let namespaces = (0, sessionUtils_1.buildNameSpacesByConnectResponse)(connectResponse);\n            if (namespaces) {\n                let session = {\n                    topic: topic,\n                    sessionConfig: sessionConfig,\n                    namespaces: namespaces\n                };\n                return session;\n            }\n        }\n        return null;\n    }\n    universalConnect(request, sessionConfig, connectInfoAndUrl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b, _c, _d, _e;\n                try {\n                    (0, log_1.logDebug)(\"engine universalConnect request :\", JSON.stringify(request));\n                    (0, log_1.logDebug)(\"engine universalConnect sessionConfig :\", JSON.stringify(sessionConfig));\n                    let tonRequest = [];\n                    let universalRequest = [];\n                    request.forEach((item) => {\n                        let name = item.name;\n                        if (name.startsWith(\"requestAccounts\")) {\n                            universalRequest.push(item);\n                        }\n                        else if (name.startsWith(\"ton\")) {\n                            tonRequest.push(item);\n                        }\n                    });\n                    (0, log_1.logDebug)(\"engine universalConnect tonRequest :\", JSON.stringify(tonRequest));\n                    (0, log_1.logDebug)(\"engine universalConnect universalRequest :\", JSON.stringify(universalRequest));\n                    const connectInfo = this.connectionManager.getConnectInfo();\n                    const requestId = this.getRequestId();\n                    let openUniversalLink = (_a = sessionConfig.openUniversalUrl) !== null && _a !== void 0 ? _a : false;\n                    const universalConnectRequest = {\n                        protocolVer: Number(protocol_1.tonConnectSdkVersion),\n                        topic: connectInfo.channelId,\n                        clientId: connectInfo.clientId,\n                        requestId: requestId,\n                        dAppInfo: sessionConfig.dappInfo,\n                        requests: universalRequest,\n                        redirect: (_b = sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect) !== null && _b !== void 0 ? _b : \"none\"\n                    };\n                    const base64Encoded = (0, url_1.encodeConnectParams)(universalConnectRequest);\n                    universalConnectRequest.redirect = (_c = sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect) !== null && _c !== void 0 ? _c : \"none\";\n                    const tonConnectRequest = {\n                        protocolVer: Number(protocol_1.tonConnectSdkVersion),\n                        topic: connectInfo.channelId,\n                        clientId: connectInfo.clientId,\n                        requestId: requestId,\n                        dAppInfo: sessionConfig.dappInfo,\n                        requests: tonRequest,\n                        redirect: (_d = sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect) !== null && _d !== void 0 ? _d : \"none\"\n                    };\n                    let isFromTonSDK = false;\n                    if (tonRequest.length > 0) { //from tonsdk\n                        isFromTonSDK = true;\n                    }\n                    let defaultConnectRequest = isFromTonSDK ? tonConnectRequest : universalConnectRequest;\n                    (0, log_1.logDebug)('engine universalConnect ==>>defaultConnectRequest:', isFromTonSDK, JSON.stringify(defaultConnectRequest));\n                    var openOKXLink = \"\";\n                    // open app wallet\n                    if (openUniversalLink) {\n                        openOKXLink = (0, url_1.getOKXLink)(defaultConnectRequest, sessionConfig.useMini, sessionConfig.tmaReturnUrl);\n                        (0, log_1.logDebug)('engine universalConnect ==>>openOKXLink:', openOKXLink);\n                    }\n                    const openMethod = () => sessionConfig.useMini ? (0, url_1.openOKXTMAWalletlinkWithFallback)(openOKXLink) :\n                        (0, utils_1.useShortLink)() ? (0, utils_1.openOKXUniversalLink)(openOKXLink) : (0, utils_1.openOKXDeeplinkWithFallback)(openOKXLink);\n                    (0, log_1.logDebug)('engine universalConnect ==>>openOKXLink:', openOKXLink);\n                    const isIOS = (0, utils_2.isIos)();\n                    if (isIOS && openUniversalLink) {\n                        (0, log_1.logDebug)(`engine universalConnect ==>>isIOS: ${isIOS}   openUniversalLink: ${openUniversalLink}`);\n                        openMethod();\n                    }\n                    yield ((_e = this.connectionManager) === null || _e === void 0 ? void 0 : _e.disconnect(false));\n                    this.bindRequestForPromise(requestId, (response) => {\n                        var _a, _b, _c, _d;\n                        try {\n                            let connectResponse = response;\n                            if (connectResponse.method == \"connect\") {\n                                (0, log_1.logDebug)(\"engin  universalConnect success connectResponse:>>>\", JSON.stringify(connectResponse));\n                                let namespaces = (0, sessionUtils_1.buildNameSpacesByConnectResponse)(connectResponse);\n                                if (namespaces) {\n                                    let walletName = undefined;\n                                    if (((_b = (_a = connectResponse.payload) === null || _a === void 0 ? void 0 : _a.responses) === null || _b === void 0 ? void 0 : _b[0]) && \"walletName\" in connectResponse.payload.responses[0]) {\n                                        walletName = connectResponse.payload.responses[0]['walletName'];\n                                    }\n                                    let session = {\n                                        topic: connectInfo.channelId,\n                                        sessionConfig: sessionConfig,\n                                        namespaces: namespaces,\n                                        wallet: Object.assign(Object.assign({}, (_c = connectResponse.payload) === null || _c === void 0 ? void 0 : _c.wallet), { walletName: walletName }),\n                                    };\n                                    let methodsResponse = connectResponse.payload.responses.find(item => item.name === 'requestAccounts');\n                                    if (methodsResponse && methodsResponse.connectRequestMethods) {\n                                        session.signResponse = methodsResponse.connectRequestMethods;\n                                    }\n                                    (0, log_1.logDebug)(\"engin  universalConnect success session:>>>\", JSON.stringify(session));\n                                    resolve(session);\n                                }\n                                else {\n                                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n                                }\n                            }\n                            else if (connectResponse.method == \"connect_error\" && ((_d = connectResponse.payload) === null || _d === void 0 ? void 0 : _d.code)) {\n                                throw new protocol_1.OKXConnectError(connectResponse.payload.code);\n                            }\n                        }\n                        catch (e) {\n                            reject(e);\n                        }\n                    });\n                    try {\n                        yield this.connectionManager.connect();\n                    }\n                    catch (e) {\n                        (0, log_1.logDebug)('Engine universalConnect error', e);\n                        throw e;\n                    }\n                    if (!isIOS && openUniversalLink) {\n                        openMethod();\n                    }\n                    (0, log_1.logDebug)('engin  universalConnect ==>> connectInfoAndUrl:', connectInfoAndUrl);\n                    this.sendSession(base64Encoded);\n                    if (connectInfoAndUrl) {\n                        const info = {\n                            connectRequest: universalConnectRequest,\n                            redirect: sessionConfig.redirect,\n                            tmaReturnUrl: sessionConfig.tmaReturnUrl,\n                        };\n                        if (isFromTonSDK) {\n                            info.tonConnectRequest = tonConnectRequest;\n                        }\n                        (0, log_1.logDebug)(\"universalConnect connectInfoAndUrl info :\", JSON.stringify(info));\n                        connectInfoAndUrl(info);\n                    }\n                }\n                catch (error) {\n                    (0, log_1.logDebug)(\"Engine universalConnect catch error\", error);\n                    reject(error);\n                }\n            }));\n        });\n    }\n}\nexports.Engine = Engine;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Storage = exports.Engine = exports.WalletConnectionManager = exports.ConnectionManager = exports.OKXWalletConnector = void 0;\nvar connect_1 = require(\"./connect\");\nObject.defineProperty(exports, \"OKXWalletConnector\", { enumerable: true, get: function () { return connect_1.OKXWalletConnector; } });\nvar connectionManager_1 = require(\"./connectionManager\");\nObject.defineProperty(exports, \"ConnectionManager\", { enumerable: true, get: function () { return connectionManager_1.ConnectionManager; } });\nvar walletConnectionManager_1 = require(\"./walletConnectionManager\");\nObject.defineProperty(exports, \"WalletConnectionManager\", { enumerable: true, get: function () { return walletConnectionManager_1.WalletConnectionManager; } });\nvar engine_1 = require(\"./engine\");\nObject.defineProperty(exports, \"Engine\", { enumerable: true, get: function () { return engine_1.Engine; } });\nvar storage_1 = require(\"./storage\");\nObject.defineProperty(exports, \"Storage\", { enumerable: true, get: function () { return storage_1.Storage; } });\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MULTICODEC_ED25519_LENGTH = exports.MULTICODEC_ED25519_HEADER = exports.MULTICODEC_ED25519_BASE = exports.MULTICODEC_ED25519_ENCODING = exports.DID_METHOD = exports.DID_PREFIX = exports.DID_DELIMITER = exports.KEY_PAIR_SEED_LENGTH = exports.DATA_ENCODING = exports.JSON_ENCODING = exports.JWT_ENCODING = exports.JWT_DELIMITER = exports.JWT_IRIDIUM_TYP = exports.JWT_IRIDIUM_ALG = exports.JWTHeaderType = void 0;\nexports.generateKeyPair = generateKeyPair;\nexports.decodeJSON = decodeJSON;\nexports.encodeJSON = encodeJSON;\nexports.encodeIss = encodeIss;\nexports.decodeIss = decodeIss;\nexports.encodeSig = encodeSig;\nexports.decodeSig = decodeSig;\nexports.encodeData = encodeData;\nexports.decodeData = decodeData;\nexports.encodeJWT = encodeJWT;\nexports.decodeJWT = decodeJWT;\nexports.signJWT = signJWT;\nexports.verifyJWT = verifyJWT;\nconst ed25519 = __importStar(require(\"@stablelib/ed25519\"));\nconst safejson_1 = require(\"../utils/safejson\");\nconst utils_1 = require(\"../utils/utils\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst log = __importStar(require(\"../utils/log\"));\nconst stringUtils_1 = require(\"../utils/stringUtils\");\nexports.JWTHeaderType = \"dapp\";\nexports.JWT_IRIDIUM_ALG = \"EdDSA\";\nexports.JWT_IRIDIUM_TYP = \"JWT\";\nexports.JWT_DELIMITER = \".\";\nexports.JWT_ENCODING = \"base64url\";\nexports.JSON_ENCODING = \"utf8\";\nexports.DATA_ENCODING = \"utf8\";\nexports.KEY_PAIR_SEED_LENGTH = 32;\nexports.DID_DELIMITER = \":\";\nexports.DID_PREFIX = \"did\";\nexports.DID_METHOD = \"key\";\nexports.MULTICODEC_ED25519_ENCODING = \"base58btc\";\nexports.MULTICODEC_ED25519_BASE = \"z\";\nexports.MULTICODEC_ED25519_HEADER = \"K36\";\nexports.MULTICODEC_ED25519_LENGTH = 32;\nfunction generateKeyPair() {\n    // let local_seed = randomBytes(KEY_PAIR_SEED_LENGTH)\n    // return ed25519.generateKeyPairFromSeed(local_seed);\n    return tweetnacl_1.default.sign.keyPair();\n}\nfunction decodeJSON(str) {\n    return (0, safejson_1.safeJsonParse)((0, stringUtils_1.okxtoString)((0, stringUtils_1.okxfromString)(str, exports.JWT_ENCODING), exports.JSON_ENCODING));\n}\nfunction encodeJSON(val) {\n    return (0, stringUtils_1.okxtoString)((0, stringUtils_1.okxfromString)((0, safejson_1.safeJsonStringify)(val), exports.JSON_ENCODING), exports.JWT_ENCODING);\n}\nfunction encodeIss(publicKey) {\n    log.logDebug(`publicKey: ${(0, utils_1.toHexString)(publicKey)}`);\n    var publicKeyStr = (0, stringUtils_1.okxtoString)(publicKey, exports.MULTICODEC_ED25519_ENCODING);\n    return [exports.DID_PREFIX, exports.DID_METHOD, publicKeyStr].join(exports.DID_DELIMITER);\n}\nfunction decodeIss(issuer) {\n    const [prefix, method, multicodec] = issuer.split(exports.DID_DELIMITER);\n    if (prefix !== exports.DID_PREFIX || method !== exports.DID_METHOD) {\n        throw new Error(`Issuer must be a DID with method \"key\"`);\n    }\n    if (multicodec === undefined) {\n        throw new Error('multicodec is undefined');\n    }\n    const publicKey = (0, stringUtils_1.okxfromString)(multicodec, exports.MULTICODEC_ED25519_ENCODING);\n    if (publicKey === undefined || publicKey.length !== exports.MULTICODEC_ED25519_LENGTH) {\n        throw new Error(`Issuer must be a public key with length 32 bytes`);\n    }\n    return publicKey;\n}\n// ---------- Signature ----------------------------------------------- //\nfunction encodeSig(bytes) {\n    return (0, stringUtils_1.okxtoString)(bytes, exports.JWT_ENCODING);\n}\nfunction decodeSig(encoded) {\n    return (0, stringUtils_1.okxfromString)(encoded, exports.JWT_ENCODING);\n}\n// ---------- Data ----------------------------------------------- //\nfunction encodeData(params) {\n    return (0, stringUtils_1.okxfromString)([encodeJSON(params.header), encodeJSON(params.payload)].join(exports.JWT_DELIMITER), exports.DATA_ENCODING);\n}\nfunction decodeData(data) {\n    var _a, _b;\n    const params = (0, stringUtils_1.okxtoString)(data, exports.DATA_ENCODING).split(exports.JWT_DELIMITER);\n    const header = decodeJSON((_a = params[0]) !== null && _a !== void 0 ? _a : '{}');\n    const payload = decodeJSON((_b = params[1]) !== null && _b !== void 0 ? _b : '{}');\n    return { header, payload };\n}\n// ---------- JWT ----------------------------------------------- //\nfunction encodeJWT(params) {\n    return [encodeJSON(params.header), encodeJSON(params.payload), encodeSig(params.signature)].join(exports.JWT_DELIMITER);\n}\nfunction decodeJWT(jwt) {\n    var _a, _b, _c;\n    const params = jwt.split(exports.JWT_DELIMITER);\n    const header = decodeJSON((_a = params[0]) !== null && _a !== void 0 ? _a : '{}');\n    const payload = decodeJSON((_b = params[1]) !== null && _b !== void 0 ? _b : '{}');\n    const signature = decodeSig((_c = params[2]) !== null && _c !== void 0 ? _c : '{}');\n    const data = (0, stringUtils_1.okxfromString)(params.slice(0, 2).join(exports.JWT_DELIMITER), exports.DATA_ENCODING);\n    return { header, payload, signature, data };\n}\nfunction signJWT(sub_1, aud_1, ttl_1, keyPair_1) {\n    return __awaiter(this, arguments, void 0, function* (sub, aud, ttl, keyPair, iat = Math.floor(Date.now())) {\n        const header = { alg: exports.JWT_IRIDIUM_ALG, typ: exports.JWT_IRIDIUM_TYP };\n        const iss = encodeIss(keyPair.publicKey);\n        const exp = iat + ttl;\n        const act = \"authenticate user\";\n        const payload = { iss, sub, aud, act, iat, exp };\n        const data = encodeData({ header, payload });\n        // const signature = ed25519.sign(keyPair.secretKey, data);\n        log.logDebug(`get sec kp: ${keyPair.secretKey} {${keyPair.secretKey.length}}`);\n        const signature = tweetnacl_1.default.sign.detached(data, keyPair.secretKey);\n        return encodeJWT({ header, payload, signature });\n    });\n}\nfunction verifyJWT(jwt) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { header, payload, data, signature } = decodeJWT(jwt);\n        if (header.alg !== exports.JWT_IRIDIUM_ALG || header.typ !== exports.JWT_IRIDIUM_TYP) {\n            throw new Error(\"JWT must use EdDSA algorithm\");\n        }\n        const publicKey = decodeIss(payload.iss);\n        return ed25519.verify(publicKey, data, signature);\n    });\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCONNECTOR_JWT_TTL = exports.OKXCONNECTOR_JWT_WALLET_SIDE = exports.OKXCONNECTOR_JWT_SIDE = void 0;\nexports.OKXCONNECTOR_JWT_SIDE = \"wallet\";\nexports.OKXCONNECTOR_JWT_WALLET_SIDE = \"dapp\";\nexports.OKXCONNECTOR_JWT_TTL = 86400000;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.buildNameSpacesByConnectResponse = buildNameSpacesByConnectResponse;\nexports.buildRequestAccountNameSpacesByConnectResponse = buildRequestAccountNameSpacesByConnectResponse;\nconst log_1 = require(\"../utils/log\");\nfunction buildNameSpacesByConnectResponse(connectResponse) {\n    let requestAccountNameSpaces = buildRequestAccountNameSpacesByConnectResponse(connectResponse);\n    return requestAccountNameSpaces;\n}\nfunction buildRequestAccountNameSpacesByConnectResponse(connectResponse) {\n    let result = {};\n    (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start connectResponse>>', JSON.stringify(connectResponse));\n    let universalResponse = connectResponse.payload.responses.find(item => item.name === 'requestAccounts');\n    const tonAddress = connectResponse.payload.responses.find(item => item.name === 'ton_addr');\n    const tonProof = connectResponse.payload.responses.find(item => item.name === 'ton_proof');\n    if (tonAddress && !universalResponse) { //adapt tonsdk\n        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse adapt ton data >>');\n        let address = tonAddress.address;\n        address = 'ton:' + tonAddress.network + \":\" + address;\n        let data = {\n            ton_addr: tonAddress\n        };\n        if (tonProof) {\n            data.ton_proof = tonProof;\n        }\n        universalResponse = {\n            name: \"requestAccounts\",\n            accounts: [{\n                    namespace: 'ton',\n                    addresses: [address],\n                    methods: ['ton_sendTransaction'],\n                    extra: {},\n                    data: data,\n                }]\n        };\n    }\n    (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse end universalResponse>>>', JSON.stringify(universalResponse));\n    universalResponse.accounts.forEach(item => {\n        var chains = [];\n        var accounts = [];\n        item.addresses.forEach(addressItem => {\n            var addressArr = addressItem.split(\":\");\n            (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse addressArr>>', addressArr.length);\n            if (addressArr.length >= 3) {\n                let chain = addressArr.slice(0, 2).join(\":\");\n                chains.push(chain);\n                accounts.push(addressItem);\n                (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse chain:>>', chain, \"addressItem:\", addressItem);\n            }\n        });\n        if (item.data && item.data.ton_addr) {\n            item.data.ton_addr.name = 'ton_addr';\n        }\n        if (item.data && item.data.ton_proof) {\n            item.data.ton_proof.name = 'ton_proof';\n        }\n        result[item.namespace] = {\n            chains: chains,\n            accounts: accounts,\n            methods: item.methods,\n            extra: item.extra,\n            payload: item.data\n        };\n        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse result>>', JSON.stringify(result));\n    });\n    return result;\n}\n/*export function buildTonNameSpaceByConnectResponse(connectResponse: ConnectResponseSuccess): Namespaces | undefined {\n    const tonAddrItem: TonAddressItemReply = connectResponse.payload.responses.find(\n        item => item.name === 'ton_addr'\n    ) as TonAddressItemReply;\n\n    const tonProfItem: TonProofItemReply = connectResponse.payload.responses.find(\n        item => item.name === 'ton_proof'\n    ) as TonProofItemReply;\n\n    if (!tonAddrItem) {\n        return undefined\n    }\n\n    return {\n        NameSpaceKeyTON: {\n            chains: [tonAddrItem.network],\n            accounts: [],\n            methods: connectResponse.payload.wallet.features?.ton,\n            payload: {\n                tonAccount: {\n                    address: tonAddrItem.address,\n                    chain: tonAddrItem.network,\n                    walletStateInit: tonAddrItem.walletStateInit,\n                    publicKey: tonAddrItem.publicKey\n                },\n                tonProof: tonProfItem\n            }\n        }\n    }\n}*/\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Storage = void 0;\nconst storageconstants_1 = require(\"./storageconstants\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst utils_1 = require(\"../utils/utils\");\nconst utils_2 = require(\"../utils\");\nconst log = __importStar(require(\"../utils/log\"));\nconst utils_3 = require(\"../utils\");\nconst crypto_js_1 = require(\"crypto-js\");\nclass Storage {\n    constructor(subKey, beforeKey = undefined) {\n        const localStorage = (0, utils_1.resolveLocalStorage)();\n        // 0. check and upgrade beforeKey\n        log.logDebug('------ update before cache ------');\n        if (beforeKey) {\n            this.checkAndUpgradeCache(beforeKey, subKey);\n        }\n        // 1. load data from local storage\n        this.storeKey = '';\n        this.cipherIV = '';\n        this.subKey = subKey;\n        log.logDebug('--------get current local storage --------');\n        log.logDebug(localStorage);\n        const cacheStr = localStorage.getItem(Storage.cacheKey + subKey);\n        if (typeof cacheStr === \"undefined\" || cacheStr === null) {\n            log.logDebug(\"with no cache\");\n            this.cache = {};\n            return;\n        }\n        log.logDebug(cacheStr);\n        if ((cacheStr === null || cacheStr === void 0 ? void 0 : cacheStr.length) > 0) {\n            var cacheObj = (0, utils_2.safeJsonParse)(cacheStr);\n            this.cache = cacheObj;\n        }\n        log.logDebug(`get cache obj: ${this.cache}`);\n        if (typeof this.cache === 'undefined' || this.cache == null) {\n            this.cache = {};\n        }\n    }\n    checkAndUpgradeCache(fromCacheKey, toCacheKey) {\n        if (fromCacheKey && fromCacheKey.length > 0 && toCacheKey && toCacheKey.length > 0) {\n            // 1. get all infos from from-cache-key\n            log.logDebug('--------get current local storage --------');\n            log.logDebug(localStorage);\n            const cacheStr = localStorage.getItem(Storage.cacheKey + fromCacheKey);\n            if (typeof cacheStr === \"undefined\" || cacheStr === null) {\n                log.logDebug(\"no pre cache content\");\n                return;\n            }\n            log.logDebug(cacheStr);\n            if ((cacheStr === null || cacheStr === void 0 ? void 0 : cacheStr.length) > 0) {\n                // 2. save to to-cache-key\n                log.logDebug(\"write in cache content: \", fromCacheKey, '->', toCacheKey);\n                localStorage.setItem(Storage.cacheKey + toCacheKey, cacheStr);\n                // 3. clean from item\n                log.logDebug(\"clean in cache content: \", fromCacheKey);\n                localStorage.removeItem(Storage.cacheKey + fromCacheKey);\n            }\n        }\n        else {\n            log.logDebug('no pre cache key:', fromCacheKey);\n        }\n    }\n    saveContent(content, key, id = '-') {\n        let item = {\n            id: id,\n            timestamp: Date.now().toString(),\n            content: content\n        };\n        this.saveItem(item, key);\n    }\n    saveItem(item, key) {\n        let localKey = Storage.cacheKey + this.subKey;\n        const localStorage = (0, utils_1.resolveLocalStorage)();\n        log.logDebug(this.cache);\n        log.logDebug(`get cache obj: ${this.cache}, ${key}, ${item}`);\n        this.cache[key] = item;\n        let totalCacheStr = (0, utils_2.safeJsonStringify)(this.cache);\n        log.logDebug(`STORAGE: ${key} @ ${this.cache}`);\n        localStorage.setItem(localKey, totalCacheStr);\n    }\n    getItem(key) {\n        log.logDebug(`STORAGE >> getItem: ${key} @ ${this.cache}`);\n        return this.cache[key];\n    }\n    getCachedPBKDF2InfoKey() {\n        var _a, _b, _c, _d;\n        const pwLen = 32;\n        const saltLen = 24;\n        if (this.storeKey.length > 0 && ((_a = this.cipherIV) === null || _a === void 0 ? void 0 : _a.length) > 0) {\n            return {\n                pw: this.storeKey,\n                iv: this.cipherIV\n            };\n        }\n        let salt = (_b = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGER_CRYPTO_SALT)) === null || _b === void 0 ? void 0 : _b.content;\n        if (!salt) {\n            salt = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(saltLen));\n            this.saveContent(salt, storageconstants_1.OKXCONNECTOR_STORAGER_CRYPTO_SALT);\n        }\n        let pw = (_c = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD)) === null || _c === void 0 ? void 0 : _c.content;\n        if (!pw) {\n            pw = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(pwLen));\n            this.saveContent(pw, storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD);\n        }\n        let cipherIV = (_d = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV)) === null || _d === void 0 ? void 0 : _d.content;\n        if (!cipherIV) {\n            // let ivBuffer = Buffer.from(nacl.randomBytes(16))\n            let ivBuffer = tweetnacl_1.default.randomBytes(16);\n            cipherIV = (0, utils_1.toHexString)(ivBuffer);\n            this.saveContent(cipherIV, storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV);\n        }\n        this.cipherIV = cipherIV;\n        this.storeKey = (0, crypto_js_1.PBKDF2)(pw, salt, { iterations: 10 }).toString();\n        return {\n            pw: this.storeKey,\n            iv: this.cipherIV\n        };\n    }\n    encryptStoreMsg(msg, key) {\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg start ${Date.now()}`);\n        let storeInfo = this.getCachedPBKDF2InfoKey();\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg mid ${Date.now()}`);\n        var result = crypto_js_1.AES.encrypt(msg, storeInfo.pw).toString();\n        this.saveContent(result, key);\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg end ${Date.now()}`);\n    }\n    getAndDecrypt(key) {\n        (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt start ${Date.now()}`);\n        let item = this.getItem(key);\n        if (item && item.content) {\n            let storeInfo = this.getCachedPBKDF2InfoKey();\n            (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt mid ${Date.now()}`);\n            let result = crypto_js_1.AES.decrypt(item.content, storeInfo.pw).toString(crypto_js_1.enc.Utf8);\n            (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt end ${Date.now()}`);\n            return result;\n        }\n        return null;\n    }\n    clearCache(key = undefined) {\n        if (key === undefined) {\n            // clean all\n            this.cache = {};\n            let localKey = Storage.cacheKey + this.subKey;\n            localStorage.setItem(localKey, '');\n        }\n        else {\n            let localKey = Storage.cacheKey + this.subKey;\n            const localStorage = (0, utils_1.resolveLocalStorage)();\n            log.logDebug(this.cache);\n            this.cache[key] = null;\n            let totalCacheStr = (0, utils_2.safeJsonStringify)(this.cache);\n            log.logDebug(`STORAGE: clean key ${key} @ ${this.cache}`);\n            localStorage.setItem(localKey, totalCacheStr);\n        }\n    }\n}\nexports.Storage = Storage;\nStorage.cacheKey = 'OKXStorageKey';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCONNECTOR_STORAGE_CIPHER_METHOD = exports.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV = exports.OKXCONNECTOR_STORAGER_CRYPTO_SALT = exports.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD = exports.OKXCONNECTOR_TON_KEY = exports.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE = exports.OKXCONNECTOR_TOKEN_CACHE = exports.OKXCONNECTOR_JWT_KEY = exports.OKXCONNECTOR_SESSION_PREFIX_KEY = exports.OKXCONNECTOR_CRYPTO_KEY = exports.OKXCONNECTOR_CACHE_KEY_DAPP = exports.OKXCONNECTOR_CACHE_KEY = void 0;\nexports.OKXCONNECTOR_CACHE_KEY = \"ck\";\nexports.OKXCONNECTOR_CACHE_KEY_DAPP = \"ck_dapp\";\nexports.OKXCONNECTOR_CRYPTO_KEY = \"cck_k\";\nexports.OKXCONNECTOR_SESSION_PREFIX_KEY = \"cspk_\";\nexports.OKXCONNECTOR_JWT_KEY = \"cjk_k\";\nexports.OKXCONNECTOR_TOKEN_CACHE = \"ct\";\nexports.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE = \"csp\";\nexports.OKXCONNECTOR_TON_KEY = \"OKXStorage_ctc\";\nexports.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD = \"scp\";\nexports.OKXCONNECTOR_STORAGER_CRYPTO_SALT = \"scs\";\nexports.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV = \"scpc\";\nexports.OKXCONNECTOR_STORAGE_CIPHER_METHOD = \"aes-256-cbc\";\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletConnectionManagerEvent = exports.WalletConnectionManagerTopicInfoCacheKey = void 0;\nexports.WalletConnectionManagerTopicInfoCacheKey = \"wcmtic\";\nexports.WalletConnectionManagerEvent = {\n    RECEIVE_REQUEST: \"payload\"\n};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletConnectionManager = void 0;\nconst connect_1 = require(\"./connect\");\nconst commands_1 = require(\"./commands\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst jwtconstants_1 = require(\"./jwtconstants\");\nconst constants_1 = require(\"./constants\");\nconst walletConnectionConstants_1 = require(\"./walletConnectionConstants\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils/utils\");\nconst crypto_1 = require(\"../crypto/crypto\");\nconst jwt_1 = require(\"./jwt\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst utils_2 = require(\"../utils\");\nclass WalletConnectionManager {\n    constructor() {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.communicateEvents = new eventemitter3_1.EventEmitter();\n        log.logDebug('connect manager construct');\n        // local storage\n        this.connectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n        // this.crypto = new SessionCrypto()\n        this.jwtKeyPair = this.getCachedJWTKeyPair();\n        this.saveJWTKeyPair(this.jwtKeyPair);\n        // wss connection\n        this.connector = new connect_1.OKXWalletConnector(constants_1.OKXCONNECTOR_WS_URL_1);\n        this.packageId = Date.now();\n        // connection state\n        this.sessionCryptoInfoMap = new Map();\n        // log.logDebug(`this.connectedWalletPK  constructor   ${this.connectedWalletPK}`)\n        this.inLogin = false;\n        this.isLogined = false;\n    }\n    refreshPackageId(offset = 0) {\n        this.packageId = Date.now() + offset;\n    }\n    saveCryptoKeyPair(topicId, keyPair) {\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(keyPair);\n        // encrypt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_CRYPTO_KEY + topicId);\n    }\n    getCachedCryptoKeyPair(topicId) {\n        // decrypt kp\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_CRYPTO_KEY + topicId);\n        const content = kp;\n        if (typeof content == 'string') {\n            log.logDebug('get cached crypto key:');\n            log.logDebug(content);\n            let keyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            return keyPairInfo;\n        }\n        else {\n            this.connectStorage.clearCache();\n        }\n        return null;\n    }\n    saveJWTKeyPair(keyPair) {\n        var strkeyPair = {\n            publicKey: (0, utils_1.toHexString)(keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(keyPair.secretKey)\n        };\n        log.logDebug('save jwt kp');\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(strkeyPair);\n        log.logDebug(cacheInfo);\n        // encrypt jwt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        log.logDebug('after save jwt kp');\n    }\n    getCachedJWTKeyPair() {\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            // TODO: decrypt jwt kp\n            log.logDebug('get cached jwt kp:');\n            log.logDebug(content);\n            let strKeyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            log.logDebug('save jwt kp');\n            log.logDebug(strKeyPairInfo);\n            var keyPair = {\n                publicKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.publicKey),\n                secretKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.secretKey)\n            };\n            return keyPair;\n        }\n        else {\n            return (0, jwt_1.generateKeyPair)();\n        }\n    }\n    isTopicPublicKeyExist(topicId) {\n        log.logDebug(`isTopicPublicKeyExist  ===> ${topicId}`);\n        return this.sessionCryptoInfoMap.get(topicId);\n    }\n    makeJWT(timestampStr) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, jwt_1.signJWT)(timestampStr, jwtconstants_1.OKXCONNECTOR_JWT_WALLET_SIDE, jwtconstants_1.OKXCONNECTOR_JWT_TTL, // 24h\n            this.jwtKeyPair);\n        });\n    }\n    parseInternalMsg(internalMsg) {\n        try {\n            let internalObj = (0, safejson_1.safeJsonParse)(internalMsg);\n            let origin = internalObj['ivur-igbfft-ptjip'];\n            if (origin && origin.length > 0) {\n                let originContent = (0, utils_2.base64decode)(origin, true);\n                return originContent.toString();\n            }\n        }\n        catch (error) {\n            log.logError('parse internal msg', error);\n        }\n    }\n    updateClientId(topic, clientId) {\n        let sessionInfo = this.sessionCryptoInfoMap.get(topic);\n        (0, log_1.logDebug)('updateClientId', sessionInfo, topic, clientId);\n        if (sessionInfo && clientId && clientId.length > 0) {\n            if (sessionInfo.cid) {\n                // check\n                let lastCheck = (0, utils_1.getLastSixMd5Hash)(clientId);\n                if (sessionInfo.cid == lastCheck) {\n                    sessionInfo.dappPublicKey = clientId;\n                }\n                else {\n                    log.logError('cid check failed', sessionInfo, topic, clientId);\n                }\n            }\n            else {\n                sessionInfo.dappPublicKey = clientId;\n            }\n            // \n            this.syncCacheSessionInfo();\n        }\n        return false;\n    }\n    parsePackage(topic_1, input_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, input, ignoreACK = false) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;\n            this.events.emit(input.id, input);\n            // emit event\n            let sessionInfo = this.sessionCryptoInfoMap.get(topic);\n            log.logDebug('get sessionInfo for decrypt topic:', topic);\n            log.logDebug('get sessionInfo for decrypt:', input.id, topic, sessionInfo, this.sessionCryptoInfoMap);\n            if (sessionInfo && input.params.data) {\n                if ((_a = input.params.data) === null || _a === void 0 ? void 0 : _a.message) {\n                    // try parse internal message\n                    if ((_b = input.params.data) === null || _b === void 0 ? void 0 : _b.isInternalData) {\n                        let inner_message = (_c = input.params.data) === null || _c === void 0 ? void 0 : _c.message;\n                        let inner_topic = (_d = input.params.data) === null || _d === void 0 ? void 0 : _d.topic;\n                        let originContent = this.parseInternalMsg(inner_message);\n                        (0, log_1.logDebug)('parse internal origin: ', originContent);\n                        if (originContent && originContent.length > 0) {\n                            this.communicateEvents.emit(\"origin\", originContent, inner_topic);\n                        }\n                    }\n                    else {\n                        // try parse message base64\n                        try {\n                            let message = (_e = input.params.data) === null || _e === void 0 ? void 0 : _e.message;\n                            if (message.trimStart().startsWith('{')) {\n                                let messageObj = (0, safejson_1.safeJsonParse)(message);\n                                if (messageObj.method) {\n                                    if (messageObj.method == 'session_info') {\n                                        let sessionInfoString = messageObj.params.sessionInfo;\n                                        let base64Content = (0, utils_2.base64decode)(sessionInfoString, false);\n                                        (0, log_1.logDebug)(\"wallet connection manager requset base64Content:\", base64Content);\n                                        (0, log_1.logDebug)(\"base64Content:\" + base64Content);\n                                        let inner_connection = base64Content.toObject();\n                                        this.updateClientId(topic, inner_connection.clientId);\n                                    }\n                                    (0, log_1.logDebug)('<<< parse raw msg:', topic, messageObj);\n                                    this.communicateEvents.emit(topic, message);\n                                }\n                            }\n                            else {\n                                let message = sessionInfo.crypto.decryptWallet((_f = input.params.data) === null || _f === void 0 ? void 0 : _f.message, sessionInfo.dappPublicKey);\n                                (0, log_1.logDebug)('<<< receive msg:', topic, message);\n                                this.communicateEvents.emit(topic, message);\n                            }\n                        }\n                        catch (error) {\n                            let message = sessionInfo.crypto.decryptWallet((_g = input.params.data) === null || _g === void 0 ? void 0 : _g.message, sessionInfo.dappPublicKey);\n                            (0, log_1.logDebug)('<<< receive msg:', topic, message);\n                            this.communicateEvents.emit(topic, message);\n                        }\n                    }\n                }\n                else {\n                }\n            }\n            // send back ACK\n            if (!ignoreACK) {\n                yield this.sendACK(input.id, true);\n                if (topic) {\n                    let inputObj = input;\n                    if ((_j = (_h = inputObj.params) === null || _h === void 0 ? void 0 : _h.data) === null || _j === void 0 ? void 0 : _j.messageId) {\n                        this.refreshPackageId();\n                        yield this.sendReceive(this.packageId.toString(), (_l = (_k = inputObj.params) === null || _k === void 0 ? void 0 : _k.data) === null || _l === void 0 ? void 0 : _l.messageId, topic);\n                    }\n                }\n            }\n        });\n    }\n    recovrySessionInfoFromCache() {\n        // get topic ids and keys from session\n        // WalletConnectionCryptoCacheMap\n        // {[topicId]: {cryptoKeypair: {publicKey:string, secretKey:string}, dappPublicKey:clientId}}\n        let jsonStr = this.connectStorage.getAndDecrypt(walletConnectionConstants_1.WalletConnectionManagerTopicInfoCacheKey);\n        log.logDebug('get cached sessionInfos:', jsonStr);\n        if (jsonStr) {\n            let cacheMap = (0, safejson_1.safeJsonParse)(jsonStr);\n            for (let topicId in cacheMap) {\n                let topicItem = cacheMap[topicId];\n                log.logDebug('make topicItem:', topicItem);\n                let cryptoItem = {\n                    topic: topicId,\n                    crypto: new crypto_1.SessionCrypto({\n                        publicKey: topicItem.cryptoKeyPair.publicKey,\n                        secretKey: topicItem.cryptoKeyPair.secretKey\n                    }),\n                    dappPublicKey: topicItem.dappPublicKey,\n                    cid: topicItem.cid\n                };\n                this.sessionCryptoInfoMap.set(topicId, cryptoItem);\n            }\n        }\n        log.logDebug('get cached sessionInfos map:', this.sessionCryptoInfoMap);\n    }\n    syncCacheSessionInfo() {\n        let cacheMap = {};\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            log.logDebug('for each Keys', topicId);\n            if (cryptoItem) {\n                cacheMap[topicId] = {\n                    cryptoKeyPair: cryptoItem.crypto.stringifyKeypair(),\n                    dappPublicKey: cryptoItem.dappPublicKey,\n                    cid: cryptoItem.cid\n                };\n            }\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(cacheMap);\n        log.logDebug('sync cache sessionInfos:', jsonData);\n        this.connectStorage.encryptStoreMsg(jsonData, walletConnectionConstants_1.WalletConnectionManagerTopicInfoCacheKey);\n    }\n    cacheSessionInfo(topic, sessionInfo, sync = true) {\n        let dappPublicKey = sessionInfo.dappPublicKey;\n        // 1. search dapp public related topic ids\n        let duplicatedTopics = [];\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            log.logDebug('for each Keys', topicId);\n            if (cryptoItem.dappPublicKey == dappPublicKey) {\n                log.logDebug('duplicated dapp public key:', topicId, dappPublicKey);\n                duplicatedTopics.push(topicId);\n            }\n        }\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            if (duplicatedTopics.includes(topicId)) {\n                this.sessionCryptoInfoMap.delete(topicId);\n            }\n        }\n        // discard useless topics\n        log.logDebug('cleaned connect session cache:', this.sessionCryptoInfoMap);\n        // 2. remove previous connected topic ids\n        // 3. write in current topic\n        this.sessionCryptoInfoMap.set(topic, sessionInfo);\n        // TODO: search domain info and then delete \n        log.logDebug('cache sessionInfo:', topic, sessionInfo, this.sessionCryptoInfoMap);\n        if (sync) {\n            this.syncCacheSessionInfo();\n        }\n        return duplicatedTopics;\n    }\n    // add and subscribe topic\n    appendTopic(topic, sessionPublicKey, cid) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('4.1. get append Topic:', topic);\n            // 1. check if connected\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                if (!this.isLogined) {\n                    var error = new Error();\n                    error.message = \"connection is not logined\";\n                    error.name = \"append error\";\n                    // throw error\n                    reject(error);\n                    return;\n                }\n                // 2. subscribe topic and session public key\n                let cryptoItem = {\n                    topic: topic,\n                    crypto: new crypto_1.SessionCrypto(),\n                    dappPublicKey: sessionPublicKey ? sessionPublicKey : \"\",\n                    cid: cid\n                };\n                let duplicatedTopics = this.cacheSessionInfo(topic, cryptoItem, false);\n                // make sure cache session info before subscribe\n                yield this.subscribeTopics(Array.from([topic]));\n                this.refreshPackageId();\n                log.logDebug(`5. subscribe callback then fetch append message: ${this.packageId}, ${topic}`);\n                log.reportLog(`5. subscribe callback then fetch append message`);\n                const timeF = new Date().getTime();\n                (0, log_1.logDebug)(\"Append --subscribe callback->\", timeF - this.timeLog);\n                resolve(duplicatedTopics);\n            }));\n        });\n    }\n    confirmAppendingTopics() {\n        this.syncCacheSessionInfo();\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.timeLog = new Date().getTime();\n            (0, log_1.logDebug)(\"[Wallet] ConnectTime---enter->\", this.timeLog);\n            log.reportLog('wallet connect connect called');\n            // 0. get cached topics and infos\n            let timestampStr = Date.now().toString();\n            var jwtToken = yield this.makeJWT(timestampStr);\n            log.logDebug(`generate jwt token: ${jwtToken}`);\n            this.connectStorage.saveContent(jwtToken, 'jwt');\n            this.recovrySessionInfoFromCache();\n            // 1.\n            return new Promise((resolve, reject) => {\n                // 1. when websocket opened\n                this.inLogin = true;\n                this.connector.onOpen(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug(`1. connector on open`);\n                    log.reportLog('1. wallet connect connect on open');\n                    const timeOne = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---open->\", timeOne - this.timeLog);\n                    //2. send jwt to login\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when login');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // throw error\n                            reject(error);\n                        }\n                        else {\n                            this.isLogined = true;\n                            resolve();\n                            // 3. subscribe cached topics\n                            log.logDebug('3. subscribe cached topics', this.sessionCryptoInfoMap);\n                            log.reportLog('3. wallet connect connect subscribe cached topics');\n                            if (this.sessionCryptoInfoMap.size > 0) {\n                                yield this.subscribeTopics(Array.from(this.sessionCryptoInfoMap.keys()));\n                            }\n                        }\n                    }));\n                    log.logDebug(`2. login called`);\n                    log.reportLog('2. wallet connect login called');\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        return yield this.connector.connect();\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_LOGIN,\n                        params: {\n                            token: jwtToken\n                        }\n                    });\n                }));\n                this.connector.connect().catch((err) => {\n                    (0, log_1.logDebug)('WalletConnectionManager connect error', err);\n                    reject(err);\n                });\n                // add callback\n                this.connector.addPackageParse((event) => {\n                    var _a, _b;\n                    log.logDebug(`connect: parse package`);\n                    log.logDebug(event);\n                    if (!(\"params\" in event) || !(\"data\" in event[\"params\"])) {\n                        this.parsePackage(\"\", event, true);\n                        return;\n                    }\n                    // ignore receive echo\n                    if ((_a = event.params.data) === null || _a === void 0 ? void 0 : _a.topic) {\n                        this.parsePackage((_b = event.params.data) === null || _b === void 0 ? void 0 : _b.topic, event, event.method === commands_1.CONNECT_METHOD_RECEIVE);\n                    }\n                });\n                // this.connector.addListener(safeJsonStringify(event), (rawMsg: string)=> {\n                //    rawMsg = rawMsg.replace(/'/g, '\"')\n                //    log.logDebug(`addListener ===> ${rawMsg}`)\n                //    if (typeof rawMsg !== 'undefined') {\n                //       var msgObj = safeJsonParse(rawMsg)\n                //       var msg = msgObj.message\n                //       let crypto = \n                //       var result = this.crypto.decrypt(msg, this.connectedWalletPK)\n                //       log.logDebug(`addListener ===> ${result}`)\n                //       return result\n                //    }\n                //    return undefined\n                // }, ()=>{\n                //    // emit success\n                // }, ()=>{\n                //    // emit fail\n                // })\n            });\n        });\n    }\n    // 获取对应topic session下的钱包公钥\n    // 在返回approve时需要填充到clientId字段中\n    getSessionPublicKey(topicId) {\n        if (this.isTopicPublicKeyExist(topicId)) {\n            let item = this.sessionCryptoInfoMap.get(topicId);\n            if (item) {\n                return (0, utils_1.toHexString)(item.crypto.keyPair.publicKey);\n            }\n        }\n        return undefined;\n    }\n    getCurrentCachedTopicIdList() {\n        return Array.from(this.sessionCryptoInfoMap.keys());\n    }\n    disconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            yield this.connector.disconnect();\n            //clean cached topic\n            //如果是恢复连接，就不清理解密public key\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            if (!fromRestore) {\n                this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n            }\n        });\n    }\n    send(topic_1, msg_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, msg, needPublicKey = false, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL, useRaw = false) {\n            var _a, _b;\n            // make send msg payload\n            log.logDebug(`message send =====> ${msg}`);\n            if (!this.isTopicPublicKeyExist(topic)) {\n                // channel not ready\n                throw new Error('connection not finish');\n            }\n            let connectedDappPK = (_a = this.sessionCryptoInfoMap.get(topic)) === null || _a === void 0 ? void 0 : _a.dappPublicKey;\n            let cryptoObject = (_b = this.sessionCryptoInfoMap.get(topic)) === null || _b === void 0 ? void 0 : _b.crypto;\n            let messageObj = undefined;\n            if (useRaw) {\n                messageObj = {\n                    message: msg,\n                };\n            }\n            if (cryptoObject && connectedDappPK && !useRaw) {\n                let message = cryptoObject.encryptWallet(msg, connectedDappPK);\n                messageObj = {\n                    message: message,\n                };\n            }\n            if (messageObj) {\n                if (needPublicKey && cryptoObject) {\n                    messageObj.clientId = (0, utils_1.toHexString)(cryptoObject.keyPair.publicKey);\n                    // let privateKey = toHexString(cryptoObject.keyPair.secretKey)\n                    // log.logDebug(`message send use dapp publicKey =====> ${connectedDappPK}`)\n                    // log.logDebug(`message send use publicKey =====> ${messageObj.clientId}`)\n                    // log.logDebug(`message send use secretKey =====> ${privateKey}`)\n                }\n                this.refreshPackageId();\n                const payload = {\n                    id: this.packageId.toString(),\n                    method: commands_1.CONNECT_METHOD_PUBLISH,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    params: {\n                        message: {\n                            topic: topic,\n                            message: (0, safejson_1.safeJsonStringify)(messageObj),\n                            ttl: ttl\n                        }\n                    } // crypted\n                };\n                this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                    // ack\n                    if (rsp && rsp.error) {\n                        log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                    }\n                    else if (rsp && !rsp.error) {\n                        log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                    }\n                }));\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n                return this.packageId;\n            }\n        });\n    }\n    sendACK(msgId_1, success_1) {\n        return __awaiter(this, arguments, void 0, function* (msgId, success, reason = undefined) {\n            if (success === true) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    result: true\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n            else if (reason) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    error: {\n                        code: reason.code, //int\n                        message: reason.message\n                    }\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    // send receive\n    sendReceive(msgId, messageId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECEIVE,\n                params: {\n                    data: {\n                        messageId: messageId,\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendUnsubscribe(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO: make disconnect payload\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), {\n                id: this.packageId.toString(),\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_UNSUB,\n                params: {\n                    topic: topic\n                }\n            });\n            // remove topicId\n            this.sessionCryptoInfoMap.delete(topic);\n            this.syncCacheSessionInfo();\n        });\n    }\n    // send receive\n    // 1. fetch all \n    // 2. send back receive\n    // 3. check has more, if so, repeat from 1st step\n    sendFetchAndConsumeMessages(msgId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(msgId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic == topic) {\n                                let messageId = msg.messageId;\n                                yield this.connector.getMsgPayloadFromHistory(msg);\n                                // send receive command to relay server\n                                this.refreshPackageId();\n                                yield this.sendReceive(this.packageId.toString(), messageId, topic);\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_FETCHMSG,\n                params: {\n                    data: {\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendBatchFetchAndConsumeMessages(packageId, topicIdList) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(packageId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic) {\n                                let messageId = msg.messageId;\n                                yield this.connector.getMsgPayloadFromHistory(msg);\n                                // send receive command to relay server\n                                this.refreshPackageId(i);\n                                yield this.sendReceive(this.packageId.toString(), messageId, msg.topic);\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendBatchFetchAndConsumeMessages(this.packageId.toString(), topicIdList);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            log.reportLog('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: packageId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_BATCH_FETCHMSG,\n                params: {\n                    topics: topicIdList,\n                    withInternalData: true\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                yield this.connector.connect();\n            }), payload);\n        });\n    }\n    cleanCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.connectStorage.clearCache();\n        });\n    }\n    saveSessionContent(key, data) {\n        if (!data) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(data);\n        this.connectStorage.encryptStoreMsg(jsonData, storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n    }\n    getSessionContent(key) {\n        let jsonStr = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        if (jsonStr) {\n            let object = (0, safejson_1.safeJsonParse)(jsonStr);\n            return object;\n        }\n        return undefined;\n    }\n    // subscribe then fetch messages for each topics\n    subscribeTopics(topicIdList) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)(\"4. topicid list\", topicIdList);\n            log.reportLog(\"4. topicid list\");\n            this.refreshPackageId();\n            const timeF = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let finishCount = 0;\n                //3. send subscribe\n                for (let idx = 0; idx < topicIdList.length; ++idx) {\n                    let topicId = topicIdList[idx];\n                    this.refreshPackageId(idx);\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when subscribe');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // reject(error)\n                            finishCount += 1;\n                            if (finishCount == topicIdList.length) {\n                                resolve();\n                            }\n                        }\n                        this.refreshPackageId(idx);\n                        const timeF = new Date().getTime();\n                        (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n                        finishCount += 1;\n                        if (finishCount == topicIdList.length) {\n                            // 4. fetch messages\n                            log.logDebug(`5. send fetch msg: ${this.packageId}, ${topicId}`);\n                            yield this.sendBatchFetchAndConsumeMessages(this.packageId.toString(), topicIdList);\n                            resolve();\n                        }\n                    }));\n                    log.logDebug(`3. login callback then send subscribe: ${this.packageId}, ${topicId}`);\n                    log.reportLog('3. login callback then send subscribe');\n                    const timeTh = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---login callback->\", timeTh - this.timeLog);\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        return yield this.connector.connect();\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_SUB,\n                        params: {\n                            topic: topicId\n                        }\n                    });\n                }\n            }));\n        });\n    }\n}\nexports.WalletConnectionManager = WalletConnectionManager;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SessionCrypto = void 0;\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst utils_1 = require(\"../utils/utils\");\nclass SessionCrypto {\n    constructor(keyPair = undefined) {\n        this.nonceLength = 24;\n        this.sessionKeyPair = keyPair ? this.createKeypairFromString(keyPair) : this.createKeypair();\n    }\n    createKeypair() {\n        return tweetnacl_1.default.box.keyPair();\n    }\n    createKeypairFromString(keyPair) {\n        return {\n            publicKey: (0, utils_1.hexToByteArray)(keyPair.publicKey),\n            secretKey: (0, utils_1.hexToByteArray)(keyPair.secretKey),\n        };\n    }\n    createNonce() {\n        return tweetnacl_1.default.randomBytes(this.nonceLength);\n    }\n    get keyPair() {\n        return this.sessionKeyPair;\n    }\n    // dapp 加密:\n    // base64(hex（nonce+加密内容）)\n    encrypt(message, receiverPublicKey) {\n        const encodedMessage = new TextEncoder().encode(message);\n        const nonce = this.createNonce();\n        const encrypted = tweetnacl_1.default.box(encodedMessage, nonce, (0, utils_1.hexToByteArray)(receiverPublicKey), this.keyPair.secretKey);\n        let concatInfo = (0, utils_1.concatUint8Arrays)(nonce, encrypted);\n        var hexResult = (0, utils_1.toHexString)(concatInfo);\n        var encodedResult = new TextEncoder().encode(hexResult);\n        return (0, utils_1.base64encode)(encodedResult, false);\n    }\n    // 钱包加密内容\n    // 注意：没有中间hex的环节\n    // base64（nonce+加密内容)\n    encryptWallet(message, receiverPublicKey) {\n        const encodedMessage = new TextEncoder().encode(message);\n        const nonce = this.createNonce();\n        const encrypted = tweetnacl_1.default.box(encodedMessage, nonce, (0, utils_1.hexToByteArray)(receiverPublicKey), this.keyPair.secretKey);\n        let concatInfo = (0, utils_1.concatUint8Arrays)(nonce, encrypted);\n        return (0, utils_1.base64encode)(concatInfo, false);\n    }\n    // dapp 解密\n    // base64(split(nonce+加密内容))\n    decrypt(message, senderPublicKey) {\n        let base64Content = (0, utils_1.base64decode)(message, true);\n        let messageByteArray = base64Content.toUint8Array();\n        const [nonce, internalMessage] = (0, utils_1.splitToUint8Arrays)(messageByteArray, this.nonceLength);\n        const decrypted = tweetnacl_1.default.box.open(internalMessage, nonce, (0, utils_1.hexToByteArray)(senderPublicKey), this.keyPair.secretKey);\n        if (!decrypted) {\n            throw new Error(`Decryption error: \\n message: ${message.toString()} \\n sender pubkey: ${senderPublicKey.toString()} \\n keypair pubkey: ${(0, utils_1.toHexString)(this.keyPair.publicKey)} \\n keypair secretkey: ${(0, utils_1.toHexString)(this.keyPair.secretKey)}`);\n        }\n        return new TextDecoder().decode(decrypted);\n    }\n    // dapp 解密\n    // base64(hextoByte(split(nonce+加密内容)))\n    decryptWallet(message, senderPublicKey) {\n        let base64Content = (0, utils_1.base64decode)(message, true);\n        let messageByteArray = (0, utils_1.hexToByteArray)(base64Content.toString());\n        const [nonce, internalMessage] = (0, utils_1.splitToUint8Arrays)(messageByteArray, this.nonceLength);\n        const decrypted = tweetnacl_1.default.box.open(internalMessage, nonce, (0, utils_1.hexToByteArray)(senderPublicKey), this.keyPair.secretKey);\n        if (!decrypted) {\n            throw new Error(`Decryption error: \\n message: ${message.toString()} \\n sender pubkey: ${senderPublicKey.toString()} \\n keypair pubkey: ${(0, utils_1.toHexString)(this.keyPair.publicKey)} \\n keypair secretkey: ${(0, utils_1.toHexString)(this.keyPair.secretKey)}`);\n        }\n        return new TextDecoder().decode(decrypted);\n    }\n    stringifyKeypair() {\n        return {\n            publicKey: (0, utils_1.toHexString)(this.keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(this.keyPair.secretKey)\n        };\n    }\n}\nexports.SessionCrypto = SessionCrypto;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./connect\"), exports);\n__exportStar(require(\"./protocol\"), exports);\n__exportStar(require(\"./utils\"), exports);\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IEngine = exports.ISignClient = exports.ISignClientEvents = exports.IEngineEvents = void 0;\nconst eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\nclass IEngineEvents extends eventemitter3_1.default {\n    constructor() {\n        super();\n    }\n}\nexports.IEngineEvents = IEngineEvents;\nclass ISignClientEvents extends eventemitter3_1.default {\n    constructor() {\n        super();\n    }\n}\nexports.ISignClientEvents = ISignClientEvents;\nclass ISignClient {\n    constructor(data) {\n        this.data = data;\n    }\n}\nexports.ISignClient = ISignClient;\nclass IEngine {\n    constructor(client) {\n        this.client = client;\n    }\n}\nexports.IEngine = IEngine;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.creatOKXMiniAppWalletInfo = exports.creatOKXWalletInfo = exports.ISignClientEvents = exports.IEngine = exports.IEngineEvents = exports.ISignClient = exports.getBigIntRpcId = exports.formatJsonRpcRequest = exports.isJsonRpcError = exports.isJsonRpcResponse = exports.parseConnectionError = exports.isHttpUrl = exports.formatJsonRpcError = void 0;\nvar json_rpc_1 = require(\"./json-rpc\");\nObject.defineProperty(exports, \"formatJsonRpcError\", { enumerable: true, get: function () { return json_rpc_1.formatJsonRpcError; } });\nObject.defineProperty(exports, \"isHttpUrl\", { enumerable: true, get: function () { return json_rpc_1.isHttpUrl; } });\nObject.defineProperty(exports, \"parseConnectionError\", { enumerable: true, get: function () { return json_rpc_1.parseConnectionError; } });\nObject.defineProperty(exports, \"isJsonRpcResponse\", { enumerable: true, get: function () { return json_rpc_1.isJsonRpcResponse; } });\nObject.defineProperty(exports, \"isJsonRpcError\", { enumerable: true, get: function () { return json_rpc_1.isJsonRpcError; } });\nObject.defineProperty(exports, \"formatJsonRpcRequest\", { enumerable: true, get: function () { return json_rpc_1.formatJsonRpcRequest; } });\nObject.defineProperty(exports, \"getBigIntRpcId\", { enumerable: true, get: function () { return json_rpc_1.getBigIntRpcId; } });\nvar engine_1 = require(\"./engine\");\nObject.defineProperty(exports, \"ISignClient\", { enumerable: true, get: function () { return engine_1.ISignClient; } });\nObject.defineProperty(exports, \"IEngineEvents\", { enumerable: true, get: function () { return engine_1.IEngineEvents; } });\nObject.defineProperty(exports, \"IEngine\", { enumerable: true, get: function () { return engine_1.IEngine; } });\nObject.defineProperty(exports, \"ISignClientEvents\", { enumerable: true, get: function () { return engine_1.ISignClientEvents; } });\n__exportStar(require(\"./ton\"), exports);\nvar wallet_info_1 = require(\"./wallet-info\");\nObject.defineProperty(exports, \"creatOKXWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXWalletInfo; } });\nObject.defineProperty(exports, \"creatOKXMiniAppWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXMiniAppWalletInfo; } });\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isJsonRpcPayload = isJsonRpcPayload;\nexports.isJsonRpcRequest = isJsonRpcRequest;\nexports.isJsonRpcResponse = isJsonRpcResponse;\nexports.isJsonRpcResult = isJsonRpcResult;\nexports.isJsonRpcError = isJsonRpcError;\nexports.payloadId = payloadId;\nexports.getBigIntRpcId = getBigIntRpcId;\nexports.formatJsonRpcRequest = formatJsonRpcRequest;\nexports.formatJsonRpcResult = formatJsonRpcResult;\nexports.formatJsonRpcError = formatJsonRpcError;\nexports.isReservedErrorCode = isReservedErrorCode;\nexports.getError = getError;\nexports.getErrorByCode = getErrorByCode;\nexports.formatErrorMessage = formatErrorMessage;\nexports.isHttpUrl = isHttpUrl;\nexports.isWsUrl = isWsUrl;\nexports.parseConnectionError = parseConnectionError;\nfunction isJsonRpcPayload(payload) {\n    return (typeof payload === \"object\" &&\n        \"id\" in payload &&\n        \"jsonrpc\" in payload &&\n        payload.jsonrpc === \"2.0\");\n}\nfunction isJsonRpcRequest(payload) {\n    return isJsonRpcPayload(payload) && \"method\" in payload;\n}\nfunction isJsonRpcResponse(payload) {\n    return isJsonRpcPayload(payload) && (isJsonRpcResult(payload) || isJsonRpcError(payload));\n}\nfunction isJsonRpcResult(payload) {\n    return \"result\" in payload;\n}\nfunction isJsonRpcError(payload) {\n    return \"error\" in payload;\n}\nconst okx_connect_error_1 = require(\"../error/okx-connect.error\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nclass IncrementalRandomGenerator {\n    constructor(bits) {\n        this.i = 1;\n        const typedArray = bits === 8 ? new Uint8Array(1) : bits === 16 ? new Uint16Array(1) : new Uint32Array(1);\n        if (bits) {\n            this.initialValue = tweetnacl_1.default.randomBytes(bits / 8)[0];\n        }\n        else {\n            this.initialValue = 0;\n        }\n    }\n    getNextValue() {\n        return this.initialValue + this.i++;\n    }\n}\nconst uint8Generator = new IncrementalRandomGenerator(8);\nconst uint16Generator = new IncrementalRandomGenerator(16);\nfunction payloadId() {\n    const date = Date.now() * 1000;\n    const extra = uint8Generator.getNextValue();\n    return date + extra;\n}\nfunction getBigIntRpcId() {\n    const date = BigInt(Date.now()) * BigInt(1000000);\n    const extra = BigInt(uint16Generator.getNextValue());\n    return date + extra;\n}\nfunction formatJsonRpcRequest(method, params, id) {\n    return {\n        id: id || payloadId(),\n        jsonrpc: \"2.0\",\n        method,\n        params,\n    };\n}\nfunction formatJsonRpcResult(id, result) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        result,\n    };\n}\nfunction formatJsonRpcError(id, error, data) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        error: formatErrorMessage(error, data),\n    };\n}\nfunction isReservedErrorCode(code) {\n    return okx_connect_error_1.RESERVED_ERROR_CODES.includes(code);\n}\nfunction getError(type) {\n    if (!Object.keys(okx_connect_error_1.STANDARD_ERROR_MAP).includes(type)) {\n        return okx_connect_error_1.STANDARD_ERROR_MAP[okx_connect_error_1.DEFAULT_ERROR];\n    }\n    return okx_connect_error_1.STANDARD_ERROR_MAP[type];\n}\nfunction getErrorByCode(code) {\n    const match = Object.values(okx_connect_error_1.STANDARD_ERROR_MAP).find((e) => e.code === code);\n    if (!match) {\n        return okx_connect_error_1.STANDARD_ERROR_MAP[okx_connect_error_1.DEFAULT_ERROR];\n    }\n    return match;\n}\nfunction formatErrorMessage(error, data) {\n    if (typeof error === \"undefined\") {\n        return getError(okx_connect_error_1.INTERNAL_ERROR);\n    }\n    if (typeof error === \"string\") {\n        error = Object.assign(Object.assign({}, getError(okx_connect_error_1.SERVER_ERROR)), { message: error });\n    }\n    if (typeof data !== \"undefined\") {\n        error.data = data;\n    }\n    if (isReservedErrorCode(error.code)) {\n        error = getErrorByCode(error.code);\n    }\n    return error;\n}\nfunction getUrlProtocol(url) {\n    const matches = url.match(new RegExp(/^\\w+:/, \"gi\"));\n    if (!matches || !matches.length)\n        return;\n    return matches[0];\n}\nfunction matchRegexProtocol(url, regex) {\n    const protocol = getUrlProtocol(url);\n    if (typeof protocol === \"undefined\")\n        return false;\n    return new RegExp(regex).test(protocol);\n}\nfunction isHttpUrl(url) {\n    return matchRegexProtocol(url, \"^https?:\");\n}\nfunction isWsUrl(url) {\n    return matchRegexProtocol(url, \"^wss?:\");\n}\nfunction parseConnectionError(e, url, type) {\n    return e.message.includes(\"getaddrinfo ENOTFOUND\") || e.message.includes(\"connect ECONNREFUSED\")\n        ? new Error(`Unavailable ${type} RPC url at ${url}`)\n        : e;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_ITEM_ERROR_CODES = void 0;\nvar CONNECT_ITEM_ERROR_CODES;\n(function (CONNECT_ITEM_ERROR_CODES) {\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n})(CONNECT_ITEM_ERROR_CODES || (exports.CONNECT_ITEM_ERROR_CODES = CONNECT_ITEM_ERROR_CODES = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TONCHAIN = void 0;\nvar TONCHAIN;\n(function (TONCHAIN) {\n    TONCHAIN[\"MAINNET\"] = \"-239\";\n})(TONCHAIN || (exports.TONCHAIN = TONCHAIN = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_ITEM_ERROR_CODES = exports.TONCHAIN = void 0;\nvar connect_wallet_1 = require(\"./connect-wallet\");\nObject.defineProperty(exports, \"TONCHAIN\", { enumerable: true, get: function () { return connect_wallet_1.TONCHAIN; } });\nvar connect_event_1 = require(\"./connect-event\");\nObject.defineProperty(exports, \"CONNECT_ITEM_ERROR_CODES\", { enumerable: true, get: function () { return connect_event_1.CONNECT_ITEM_ERROR_CODES; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.creatOKXWalletInfo = creatOKXWalletInfo;\nexports.creatOKXMiniAppWalletInfo = creatOKXMiniAppWalletInfo;\nconst constants_1 = require(\"../constants\");\nfunction creatOKXWalletInfo() {\n    return {\n        \"appName\": \"okxAppWallet\",\n        \"name\": \"OKX Wallet\",\n        \"imageUrl\": \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\",\n        \"aboutUrl\": constants_1.downloadUrl,\n        \"universalLink\": constants_1.standardUniversalLink,\n        \"deepLink\": constants_1.standardDeeplink,\n        \"platforms\": [\"ios\", \"android\"]\n    };\n}\nfunction creatOKXMiniAppWalletInfo() {\n    return {\n        \"appName\": \"okxMiniApp\",\n        \"name\": \"OKX Mini Wallet\",\n        \"imageUrl\": \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\",\n        \"aboutUrl\": constants_1.downloadUrl,\n        \"universalLink\": `https://t.me/${constants_1.tgwalletName}/start`,\n        \"deepLink\": \"\",\n        \"platforms\": [\"ios\", \"android\", 'macos', 'windows']\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.tgwalletAppName = exports.tgwalletName = exports.tonConnectSdkVersion = exports.shortUniversalLink = exports.standardDeeplink = exports.downloadUrl = exports.standardUniversalLink = exports.okxDeeplink = void 0;\nexports.getTestTwaUrl = getTestTwaUrl;\nexports.getTestTgTwaUrl = getTestTgTwaUrl;\nexports.okxDeeplink = 'okx://web3';\nexports.standardUniversalLink = typeof window !== \"undefined\" && window.location.hostname.includes(\"okx.com\")\n    ? \"https://link.okx.com/download\"\n    : \"https://www.okx.com/download\";\nexports.downloadUrl = \"https://www.okx.com/download\";\n// export const standardUniversalLink = 'http://localhost:5173';\nexports.standardDeeplink = `${exports.okxDeeplink}/wallet/connect`;\nexports.shortUniversalLink = `https://www.okx.com/ul/connect`;\n// export const standardDeeplink = 'http://localhost:5173';\nexports.tonConnectSdkVersion = '1';\n// export const tgwalletName: string = \"TCTestqdqwdqwdqBot\"\nexports.tgwalletName = \"OKX_WALLET_BOT\";\nexports.tgwalletAppName = \"start\";\n// https://t.me/OKX_WALLET_BOT/start\nfunction getTestTwaUrl() {\n    return window.okxTesttwaUrl;\n}\nfunction getTestTgTwaUrl() {\n    return window.okxTestTgtwaUrl;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_CONNECT_ERROR_CODES = exports.OKXConnectError = void 0;\nvar okx_connect_error_1 = require(\"./okx-connect.error\");\nObject.defineProperty(exports, \"OKXConnectError\", { enumerable: true, get: function () { return okx_connect_error_1.OKXConnectError; } });\nObject.defineProperty(exports, \"OKX_CONNECT_ERROR_CODES\", { enumerable: true, get: function () { return okx_connect_error_1.OKX_CONNECT_ERROR_CODES; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEFAULT_ERROR = exports.STANDARD_ERROR_MAP = exports.SERVER_ERROR_CODE_RANGE = exports.RESERVED_ERROR_CODES = exports.SERVER_ERROR = exports.INTERNAL_ERROR = exports.INVALID_PARAMS = exports.METHOD_NOT_FOUND = exports.INVALID_REQUEST = exports.PARSE_ERROR = exports.OKX_CONNECT_ERROR_CODES = exports.OKXConnectError = void 0;\nclass OKXConnectError extends Error {\n    constructor(code, message) {\n        if (message == undefined) {\n            message = getDefaultMessageByCode(code);\n        }\n        super(message);\n        this.code = code;\n        this.message = `${OKXConnectError.prefix} ${message ? '\\n' + message : ''}`;\n        Object.setPrototypeOf(this, OKXConnectError.prototype);\n    }\n    toJSON() {\n        return {\n            message: this.message,\n            code: this.code\n        };\n    }\n}\nexports.OKXConnectError = OKXConnectError;\nOKXConnectError.prefix = '[OKX_CONNECT_SDK_ERROR]';\nfunction getDefaultMessageByCode(code) {\n    if (code == OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR) {\n        return \"unknown error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR) {\n        return \"bad request error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.ALREADY_CONNECTED_ERROR) {\n        return \"already connected error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR) {\n        return \"not connected error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.UNKNOWN_APP_ERROR) {\n        return \"unknown app error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n        return \"user rejects error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED) {\n        return \"method not supported\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.CONNECTION_ERROR) {\n        return \"connect error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED) {\n        return \"chain not supported\";\n    }\n    return \"unknown error\";\n}\nvar OKX_CONNECT_ERROR_CODES;\n(function (OKX_CONNECT_ERROR_CODES) {\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"BAD_REQUEST_ERROR\"] = 1] = \"BAD_REQUEST_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"ALREADY_CONNECTED_ERROR\"] = 11] = \"ALREADY_CONNECTED_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"NOT_CONNECTED_ERROR\"] = 12] = \"NOT_CONNECTED_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"UNKNOWN_APP_ERROR\"] = 100] = \"UNKNOWN_APP_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"USER_REJECTS_ERROR\"] = 300] = \"USER_REJECTS_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"CHAIN_NOT_SUPPORTED\"] = 500] = \"CHAIN_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"WALLET_NOT_SUPPORTED\"] = 600] = \"WALLET_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"CONNECTION_ERROR\"] = 700] = \"CONNECTION_ERROR\";\n})(OKX_CONNECT_ERROR_CODES || (exports.OKX_CONNECT_ERROR_CODES = OKX_CONNECT_ERROR_CODES = {}));\nexports.PARSE_ERROR = \"PARSE_ERROR\";\nexports.INVALID_REQUEST = \"INVALID_REQUEST\";\nexports.METHOD_NOT_FOUND = \"METHOD_NOT_FOUND\";\nexports.INVALID_PARAMS = \"INVALID_PARAMS\";\nexports.INTERNAL_ERROR = \"INTERNAL_ERROR\";\nexports.SERVER_ERROR = \"SERVER_ERROR\";\nexports.RESERVED_ERROR_CODES = [-32700, -32600, -32601, -32602, -32603];\nexports.SERVER_ERROR_CODE_RANGE = [-32000, -32099];\nexports.STANDARD_ERROR_MAP = {\n    [exports.PARSE_ERROR]: { code: -32700, message: \"Parse error\" },\n    [exports.INVALID_REQUEST]: { code: -32600, message: \"Invalid Request\" },\n    [exports.METHOD_NOT_FOUND]: { code: -32601, message: \"Method not found\" },\n    [exports.INVALID_PARAMS]: { code: -32602, message: \"Invalid params\" },\n    [exports.INTERNAL_ERROR]: { code: -32603, message: \"Internal error\" },\n    [exports.SERVER_ERROR]: { code: -32000, message: \"Server error\" },\n};\nexports.DEFAULT_ERROR = exports.SERVER_ERROR;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.downloadUrl = exports.okxDeeplink = exports.tonConnectSdkVersion = exports.standardDeeplink = exports.standardUniversalLink = exports.NameSpaceKeyTron = exports.NameSpaceKeyCosmos = exports.NameSpaceKeyAptos = exports.NameSpaceKeyBtc = exports.NameSpaceKeySui = exports.NameSpaceKeyTON = exports.NameSpaceKeySOL = exports.NameSpaceKeyEip155 = void 0;\n__exportStar(require(\"./error\"), exports);\nvar misc_1 = require(\"./misc\");\nObject.defineProperty(exports, \"NameSpaceKeyEip155\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyEip155; } });\nObject.defineProperty(exports, \"NameSpaceKeySOL\", { enumerable: true, get: function () { return misc_1.NameSpaceKeySOL; } });\nObject.defineProperty(exports, \"NameSpaceKeyTON\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyTON; } });\nObject.defineProperty(exports, \"NameSpaceKeySui\", { enumerable: true, get: function () { return misc_1.NameSpaceKeySui; } });\nObject.defineProperty(exports, \"NameSpaceKeyBtc\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyBtc; } });\nObject.defineProperty(exports, \"NameSpaceKeyAptos\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyAptos; } });\nObject.defineProperty(exports, \"NameSpaceKeyCosmos\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyCosmos; } });\nObject.defineProperty(exports, \"NameSpaceKeyTron\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyTron; } });\nvar constants_1 = require(\"./constants\");\nObject.defineProperty(exports, \"standardUniversalLink\", { enumerable: true, get: function () { return constants_1.standardUniversalLink; } });\nObject.defineProperty(exports, \"standardDeeplink\", { enumerable: true, get: function () { return constants_1.standardDeeplink; } });\nObject.defineProperty(exports, \"tonConnectSdkVersion\", { enumerable: true, get: function () { return constants_1.tonConnectSdkVersion; } });\nObject.defineProperty(exports, \"okxDeeplink\", { enumerable: true, get: function () { return constants_1.okxDeeplink; } });\nObject.defineProperty(exports, \"downloadUrl\", { enumerable: true, get: function () { return constants_1.downloadUrl; } });\n__exportStar(require(\"./connect\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NameSpaceKeyTron = exports.NameSpaceKeyCosmos = exports.NameSpaceKeyAptos = exports.NameSpaceKeyBtc = exports.NameSpaceKeySui = exports.NameSpaceKeyTON = exports.NameSpaceKeySOL = exports.NameSpaceKeyEip155 = void 0;\nexports.NameSpaceKeyEip155 = \"eip155\";\nexports.NameSpaceKeySOL = \"solana\";\nexports.NameSpaceKeyTON = \"ton\";\nexports.NameSpaceKeySui = \"sui\";\nexports.NameSpaceKeyBtc = \"btc\";\nexports.NameSpaceKeyAptos = \"aptos\";\nexports.NameSpaceKeyCosmos = \"cosmos\";\nexports.NameSpaceKeyTron = \"tron\";\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.callForSuccess = callForSuccess;\nexports.delay = delay;\n/**\n * Function to call ton api until we get response.\n * Because ton network is pretty unstable we need to make sure response is final.\n * @param {T} fn - function to call\n * @param {CallForSuccessOptions} [options] - optional configuration options\n */\nfunction callForSuccess(fn, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b;\n        const attempts = (_a = options === null || options === void 0 ? void 0 : options.attempts) !== null && _a !== void 0 ? _a : 3;\n        const delayMs = (_b = options === null || options === void 0 ? void 0 : options.delayMs) !== null && _b !== void 0 ? _b : 800;\n        if (typeof fn !== 'function') {\n            throw new Error(`Expected a function, got ${typeof fn}`);\n        }\n        let i = 0;\n        let lastError;\n        while (i < attempts) {\n            try {\n                return yield fn();\n            }\n            catch (err) {\n                lastError = err;\n                i++;\n                if (i < attempts) {\n                    yield delay(delayMs);\n                }\n            }\n        }\n        throw lastError;\n    });\n}\n/**\n * Delays the execution of code for a specified number of milliseconds.\n * @param {number} timeout - The number of milliseconds to delay the execution.\n * @param {DelayOptions} [options] - Optional configuration options for the delay.\n * @return {Promise<void>} - A promise that resolves after the specified delay, or rejects if the delay is aborted.\n */\nfunction delay(timeout, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            var _a, _b;\n            if ((_a = options === null || options === void 0 ? void 0 : options.signal) === null || _a === void 0 ? void 0 : _a.aborted) {\n                reject(new Error('Delay aborted'));\n                return;\n            }\n            const timeoutId = setTimeout(() => resolve(), timeout);\n            (_b = options === null || options === void 0 ? void 0 : options.signal) === null || _b === void 0 ? void 0 : _b.addEventListener('abort', () => {\n                clearTimeout(timeoutId);\n                reject(new Error('Delay aborted'));\n            });\n        });\n    });\n}\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkMetaData = exports.versionCompare = exports.isBrowser = exports.isOS = exports.isMobileUserAgent = exports.openDeeplinkWithFallback = exports.openLinkBlank = exports.openLink = exports.useShortLink = exports.toSafeBase64FromBase64 = exports.isValidObject = exports.isIos = exports.base64decode = exports.base64encode = exports.splitToUint8Arrays = exports.concatUint8Arrays = exports.toHexString = exports.hexToByteArray = exports.getOKXLink = exports.openOKXUniversalLink = exports.getAppWalletShortDeepLink = exports.encodeTWAConnectURLParams = exports.encodeConnectParams = exports.openOKXTMAWalletlinkWithFallback = exports.getTelegramWalletTWAUrl = exports.getAppWalletDeepLink = exports.encodeTelegramUrlParameters = exports.isTelegramUrl = exports.openOKXDeeplinkWithFallback = exports.openOKXDeeplink = exports.getUniversalLink = exports.safeJsonStringify = exports.safeJsonParse = exports.getDefaultReporter = exports.reportEvent = exports.reportLog = exports.logWarning = exports.logError = exports.logDebug = exports.callForSuccess = void 0;\nvar call_for_success_1 = require(\"./call-for-success\");\nObject.defineProperty(exports, \"callForSuccess\", { enumerable: true, get: function () { return call_for_success_1.callForSuccess; } });\nvar log_1 = require(\"./log\");\nObject.defineProperty(exports, \"logDebug\", { enumerable: true, get: function () { return log_1.logDebug; } });\nObject.defineProperty(exports, \"logError\", { enumerable: true, get: function () { return log_1.logError; } });\nObject.defineProperty(exports, \"logWarning\", { enumerable: true, get: function () { return log_1.logWarning; } });\nObject.defineProperty(exports, \"reportLog\", { enumerable: true, get: function () { return log_1.reportLog; } });\nObject.defineProperty(exports, \"reportEvent\", { enumerable: true, get: function () { return log_1.reportEvent; } });\nObject.defineProperty(exports, \"getDefaultReporter\", { enumerable: true, get: function () { return log_1.getDefaultReporter; } });\n__exportStar(require(\"./reportconstants\"), exports);\n__exportStar(require(\"./report\"), exports);\nvar safejson_1 = require(\"./safejson\");\nObject.defineProperty(exports, \"safeJsonParse\", { enumerable: true, get: function () { return safejson_1.safeJsonParse; } });\nObject.defineProperty(exports, \"safeJsonStringify\", { enumerable: true, get: function () { return safejson_1.safeJsonStringify; } });\nvar url_1 = require(\"./url\");\nObject.defineProperty(exports, \"getUniversalLink\", { enumerable: true, get: function () { return url_1.getUniversalLink; } });\nObject.defineProperty(exports, \"openOKXDeeplink\", { enumerable: true, get: function () { return url_1.openOKXDeeplink; } });\nObject.defineProperty(exports, \"openOKXDeeplinkWithFallback\", { enumerable: true, get: function () { return url_1.openOKXDeeplinkWithFallback; } });\nObject.defineProperty(exports, \"isTelegramUrl\", { enumerable: true, get: function () { return url_1.isTelegramUrl; } });\nObject.defineProperty(exports, \"encodeTelegramUrlParameters\", { enumerable: true, get: function () { return url_1.encodeTelegramUrlParameters; } });\nObject.defineProperty(exports, \"getAppWalletDeepLink\", { enumerable: true, get: function () { return url_1.getAppWalletDeepLink; } });\nObject.defineProperty(exports, \"getTelegramWalletTWAUrl\", { enumerable: true, get: function () { return url_1.getTelegramWalletTWAUrl; } });\nObject.defineProperty(exports, \"openOKXTMAWalletlinkWithFallback\", { enumerable: true, get: function () { return url_1.openOKXTMAWalletlinkWithFallback; } });\nObject.defineProperty(exports, \"encodeConnectParams\", { enumerable: true, get: function () { return url_1.encodeConnectParams; } });\nObject.defineProperty(exports, \"encodeTWAConnectURLParams\", { enumerable: true, get: function () { return url_1.encodeTWAConnectURLParams; } });\nObject.defineProperty(exports, \"getAppWalletShortDeepLink\", { enumerable: true, get: function () { return url_1.getAppWalletShortDeepLink; } });\nObject.defineProperty(exports, \"openOKXUniversalLink\", { enumerable: true, get: function () { return url_1.openOKXUniversalLink; } });\nObject.defineProperty(exports, \"getOKXLink\", { enumerable: true, get: function () { return url_1.getOKXLink; } });\nvar utils_1 = require(\"./utils\");\nObject.defineProperty(exports, \"hexToByteArray\", { enumerable: true, get: function () { return utils_1.hexToByteArray; } });\nObject.defineProperty(exports, \"toHexString\", { enumerable: true, get: function () { return utils_1.toHexString; } });\nObject.defineProperty(exports, \"concatUint8Arrays\", { enumerable: true, get: function () { return utils_1.concatUint8Arrays; } });\nObject.defineProperty(exports, \"splitToUint8Arrays\", { enumerable: true, get: function () { return utils_1.splitToUint8Arrays; } });\nObject.defineProperty(exports, \"base64encode\", { enumerable: true, get: function () { return utils_1.base64encode; } });\nObject.defineProperty(exports, \"base64decode\", { enumerable: true, get: function () { return utils_1.base64decode; } });\nObject.defineProperty(exports, \"isIos\", { enumerable: true, get: function () { return utils_1.isIos; } });\nObject.defineProperty(exports, \"isValidObject\", { enumerable: true, get: function () { return utils_1.isValidObject; } });\nObject.defineProperty(exports, \"toSafeBase64FromBase64\", { enumerable: true, get: function () { return utils_1.toSafeBase64FromBase64; } });\nObject.defineProperty(exports, \"useShortLink\", { enumerable: true, get: function () { return utils_1.useShortLink; } });\nvar web_api_1 = require(\"./web-api\");\nObject.defineProperty(exports, \"openLink\", { enumerable: true, get: function () { return web_api_1.openLink; } });\nObject.defineProperty(exports, \"openLinkBlank\", { enumerable: true, get: function () { return web_api_1.openLinkBlank; } });\nObject.defineProperty(exports, \"openDeeplinkWithFallback\", { enumerable: true, get: function () { return web_api_1.openDeeplinkWithFallback; } });\nObject.defineProperty(exports, \"isMobileUserAgent\", { enumerable: true, get: function () { return web_api_1.isMobileUserAgent; } });\nObject.defineProperty(exports, \"isOS\", { enumerable: true, get: function () { return web_api_1.isOS; } });\nObject.defineProperty(exports, \"isBrowser\", { enumerable: true, get: function () { return web_api_1.isBrowser; } });\nvar tma_api_1 = require(\"./tma-api\");\nObject.defineProperty(exports, \"versionCompare\", { enumerable: true, get: function () { return tma_api_1.versionCompare; } });\nvar request_1 = require(\"./request\");\nObject.defineProperty(exports, \"checkMetaData\", { enumerable: true, get: function () { return request_1.checkMetaData; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getDefaultReporter = getDefaultReporter;\nexports.logDebug = logDebug;\nexports.logError = logError;\nexports.logWarning = logWarning;\nexports.reportEvent = reportEvent;\nexports.reportLog = reportLog;\nconst debug = false;\nconst forceReport = false;\nconst report_1 = require(\"./report\");\nconst defaultReporter = new report_1.OKXReporter();\nfunction getDefaultReporter() {\n    return defaultReporter;\n}\nconst packageJson = require('../../package.json');\nconst version = packageJson.version;\nfunction logDebug(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.log(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction logError(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.error(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n            if (forceReport || !debug) {\n                let content = '';\n                content += [...args].reduce((result, item) => {\n                    if (typeof item == 'string') {\n                        result += ',' + item;\n                    }\n                    else if (typeof item == 'object') {\n                        result += JSON.stringify(item);\n                    }\n                });\n                defaultReporter.sendRecordContent(content, report_1.OKXReportType.LOG, '');\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction logWarning(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.warn(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction reportEvent(type, action, content) {\n    return __awaiter(this, void 0, void 0, function* () {\n        yield defaultReporter.sendRecordContent(content, type, action);\n    });\n}\nfunction reportLog(content_1) {\n    return __awaiter(this, arguments, void 0, function* (content, action = 'default') {\n        // await defaultReporter.sendRecordContent(content, OKXReportType.LOG, action)\n    });\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXReporter = exports.OKXReportSide = exports.OKXReportType = exports.versionStr = void 0;\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nconst log_1 = require(\"./log\");\nconst url_1 = require(\"./url\");\nconst utils_1 = require(\"../utils\");\nconst localforage_1 = __importDefault(require(\"localforage\"));\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nexports.versionStr = '1.5.6';\nconst reportApiList = [\n    'https://www.okx.com/dappstat/wallet-connect',\n    'https://www.okx.ac/dappstat/wallet-connect'\n];\nconst reportCacheKey = 'OKX_RP_CK';\nconst reportUUIDKey = 'OKX_RP_UUID_CK';\nconst MAX_LIMIT_REPORTCOUNT = 100;\nconst DEFAULT_HTTP_HEADERS = {\n    Accept: \"*/*\",\n    \"Content-Type\": \"text/plain\",\n};\nconst DEFAULT_HTTP_METHOD = \"POST\";\nconst DEFAULT_FETCH_OPTS = {\n    headers: DEFAULT_HTTP_HEADERS,\n    method: DEFAULT_HTTP_METHOD,\n};\nexports.OKXReportType = {\n    PAGE_IN: 'page_in',\n    PAGE_OUT: 'page_out',\n    CLICK: 'click',\n    LOG: 'log',\n};\nexports.OKXReportSide = {\n    DAPP: 'dapp',\n    WALLET: 'wallet',\n};\nclass IReporter {\n}\nconst fetchWithTimeout = (url, options, timeout = 5000) => {\n    const controller = new AbortController();\n    const signal = controller.signal;\n    const fetchPromise = (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, options), { signal }));\n    const timeoutPromise = new Promise((_, reject) => setTimeout(() => {\n        controller.abort();\n        reject(new Error('Request timed out'));\n    }, timeout));\n    return Promise.race([fetchPromise, timeoutPromise]);\n};\nconst fetchListWithTimeout = (urls_1, ...args_1) => __awaiter(void 0, [urls_1, ...args_1], void 0, function* (urls, options = {}, timeout = 5000) {\n    for (const url of urls) {\n        try {\n            const controller = new AbortController();\n            const signal = controller.signal;\n            const fetchPromise = (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, options), { signal }));\n            const timeoutPromise = new Promise((_, reject) => setTimeout(() => {\n                controller.abort();\n                reject(new Error('Request timed out'));\n            }, timeout));\n            const response = yield Promise.race([fetchPromise, timeoutPromise]);\n            if (response.ok) {\n                return response;\n            }\n            if (response.status == 502) {\n                console.error(`Fetch error status 502`, url);\n                return response;\n            }\n        }\n        catch (error) {\n            console.error(`Fetch error for ${url}:`, error);\n        }\n    }\n    console.error(`'All fetch attempts failed.'`);\n    throw new Error('All fetch attempts failed.');\n});\nclass OKXReporter {\n    constructor() {\n        this.currentSide = exports.OKXReportSide.DAPP;\n        this.currentVersion = exports.versionStr;\n        this.storage = localforage_1.default.createInstance({\n            name: \"OKXReporter\"\n        });\n        this.recordList = new Array();\n        this.currentUUID = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(16));\n    }\n    configVersionAndSide(version, side, appname) {\n        this.currentVersion = version;\n        this.currentSide = side;\n        this.appName = appname;\n    }\n    get recordCacheKey() {\n        return reportCacheKey + \"@\" + this.appName;\n    }\n    get reportPlatform() {\n        if ((0, utils_1.isMobileUserAgent)()) {\n            if ((0, utils_1.isIos)()) {\n                return 'iOS';\n            }\n            else {\n                return 'android';\n            }\n        }\n        else {\n            return 'pc';\n        }\n    }\n    beginReport() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.startErrorCatching();\n            let records = yield this.storage.getItem(this.recordCacheKey);\n            let uuid = yield this.storage.getItem(reportUUIDKey);\n            if (uuid) {\n                this.currentUUID = uuid;\n            }\n            else {\n                this.storage.setItem(reportUUIDKey, this.currentUUID);\n            }\n            if (records) {\n                this.recordList = records;\n                (0, log_1.logDebug)('resume records from cache length: ', this.recordList.length);\n                yield this.sendCachedRecords();\n            }\n        });\n    }\n    startErrorCatching() {\n        let window = (0, url_1.getWindow)();\n        if (window) {\n            (0, log_1.logDebug)('begin capture console error');\n            // window.onerror = (event: Event | string, source?: string, lineno?: number, colno?: number, error?: Error) => {\n            //     logDebug('capture error info:', error, source)\n            //     this.markRecord(error?.message+'/'+error?.name+'/'+error?.stack, OKXReportType.LOG, '', this.currentSide)\n            // }\n        }\n    }\n    cachedErrors() {\n        return this.recordList;\n    }\n    sendRecord(record) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    const body = JSON.stringify(record);\n                    (0, log_1.logDebug)('[REPORT] record: ', body);\n                    const res = yield fetchListWithTimeout(reportApiList, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body: body }));\n                    (0, log_1.logDebug)('[REPORT] get rsp:', res);\n                    if (res && res.status && res.status == 200) {\n                        this.recordList = this.recordList.filter((item) => {\n                            return item.timestamp != record.timestamp || item.content != record.content;\n                        });\n                        yield this.storage.setItem(this.recordCacheKey, this.recordList);\n                        resolve(true);\n                    }\n                    else {\n                        reject(false);\n                    }\n                }\n                catch (e) {\n                    (0, log_1.logDebug)('send record error:', e);\n                    resolve(true);\n                    // reject(e)\n                }\n            }));\n        });\n    }\n    sendRecordContent(content, type, action) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            let path = (_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.location.pathname;\n            let location = (_b = (0, url_1.getWindow)()) === null || _b === void 0 ? void 0 : _b.location.origin;\n            if (path && location) {\n                location = location + path;\n            }\n            let language = (_c = (0, url_1.getWindow)()) === null || _c === void 0 ? void 0 : _c.navigator.language;\n            let ua = (_d = (0, url_1.getWindow)()) === null || _d === void 0 ? void 0 : _d.navigator.userAgent;\n            let platform = this.reportPlatform;\n            let reportItem = {\n                uuid: this.currentUUID,\n                version: this.currentVersion,\n                content: content,\n                action: action,\n                side: this.currentSide,\n                timestamp: new Date().getTime(),\n                url: location,\n                lang: language,\n                type: type,\n                platform: platform,\n                \"user-agent\": ua\n            };\n            yield this.markRecordItem(reportItem);\n            yield this.sendRecord(reportItem);\n        });\n    }\n    sendCachedRecords() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let sendList = this.recordList.map(record => this.sendRecord(record));\n                (0, log_1.logDebug)('[REPORT] submit & clean recorded caches begin @', new Date().toUTCString());\n                Promise.allSettled(sendList).then((results) => {\n                    (0, log_1.logDebug)('[REPORT] submit & clean recorded caches ends @', new Date().toUTCString());\n                    let keepIndex = [];\n                    results.forEach((result, index) => {\n                        if (result.status == \"rejected\") {\n                            keepIndex.push(index);\n                        }\n                    });\n                    this.recordList = this.recordList.filter((_, index) => !keepIndex.includes(index));\n                    this.storage.setItem(this.recordCacheKey, this.recordList).then(function (value) {\n                        resolve();\n                    }).catch(function (err) {\n                        reject(err);\n                    });\n                });\n            }));\n        });\n    }\n    markRecordItem(item) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.recordList.push(item);\n            if (this.recordList.length > MAX_LIMIT_REPORTCOUNT) {\n                let offset = this.recordList.length - MAX_LIMIT_REPORTCOUNT;\n                this.recordList.splice(0, offset);\n            }\n            return new Promise((resolve, reject) => {\n                this.storage.setItem(this.recordCacheKey, this.recordList).then(function (value) {\n                    resolve(item);\n                }).catch(function (err) {\n                    reject(err);\n                });\n            });\n        });\n    }\n    markRecord(content, type, action, side) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            let path = (_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.location.pathname;\n            let location = (_b = (0, url_1.getWindow)()) === null || _b === void 0 ? void 0 : _b.location.origin;\n            if (path && location) {\n                location = location + path;\n            }\n            let language = (_c = (0, url_1.getWindow)()) === null || _c === void 0 ? void 0 : _c.navigator.language;\n            let platform = this.reportPlatform;\n            let ua = (_d = (0, url_1.getWindow)()) === null || _d === void 0 ? void 0 : _d.navigator.userAgent;\n            let reportItem = {\n                uuid: this.currentUUID,\n                version: this.currentVersion,\n                content: content,\n                action: action,\n                side: side,\n                timestamp: new Date().getTime(),\n                url: location,\n                lang: language,\n                type: type,\n                platform: platform,\n                \"user-agent\": ua\n            };\n            return yield this.markRecordItem(reportItem);\n        });\n    }\n}\nexports.OKXReporter = OKXReporter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Report_WalletType_Key = exports.Report_Proceed_QRCode_Click = exports.Report_ChooseType_Download_Click = exports.Report_ChooseType_ConnectWallet_Click = exports.Report_Proceed_Retry_Click = exports.Report_ChooseType_ConnectWallet_View = exports.Report_Loading_ConnectWallet_View = exports.Report_Proceed_QRCode_View = exports.Report_Proceed_Proceed_View = void 0;\nexports.Report_Proceed_Proceed_View = \"OKXConnectSDK_Proceed_Proceed_View\";\nexports.Report_Proceed_QRCode_View = \"OKXConnectSDK_Proceed_QRCode_View\";\nexports.Report_Loading_ConnectWallet_View = \"OKXConnectSDK_Loading_ConnectWallet_View\";\nexports.Report_ChooseType_ConnectWallet_View = \"OKXConnectSDK_ChooseType_ConnectWallet_View\";\nexports.Report_Proceed_Retry_Click = \"OKXConnectSDK_Proceed_Retry_Click\";\nexports.Report_ChooseType_ConnectWallet_Click = \"OKXConnectSDK_ChooseType_ConnectWallet_Click\";\nexports.Report_ChooseType_Download_Click = \"OKXConnectSDK_ChooseType_Download_Click\";\nexports.Report_Proceed_QRCode_Click = \"OKXConnectSDK_Proceed_QRCode_Click\";\nexports.Report_WalletType_Key = 'wallet_type';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkMetaData = checkMetaData;\nconst protocol_1 = require(\"../protocol\");\nfunction checkMetaData(dappMetaData) {\n    if (!dappMetaData) {\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"You have to specify a `dappMetaData`in the options.\");\n    }\n    if (!dappMetaData.name) {\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"dappName is required\");\n    }\n    if (!dappMetaData.icon) {\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"icon is required\");\n    }\n    return true;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.safeJsonParse = safeJsonParse;\nexports.safeJsonStringify = safeJsonStringify;\nconst log_1 = require(\"./log\");\nconst JSONStringify = (data) => JSON.stringify(data, (_, value) => (typeof value === \"bigint\" ? value.toString() + \"n\" : value));\n/*\n  Function to parse JSON.\n  If JSON has values in our custom format BigInt (strings with \"n\" character at the end), we just parse them to BigInt values.\n  If JSON has big number values, but not in our custom format, we copy it, and in a copy we convert those values to our custom format,\n  then parse them to BigInt values.\n  Other values (not big numbers and not our custom format BigInt values) are not affected and parsed as native JSON.parse() would parse them.\n*/\nconst JSONParse = (json) => {\n    /*\n      Big numbers are found and marked using Regex with this condition:\n      Number's length is bigger than 16 || Number's length is 16 and any numerical digit of the number is greater than that of the Number.MAX_SAFE_INTEGER\n      Additionally, it skips values that are strings (between double quotes).\n      */\n    // prettier-ignore\n    // eslint-disable-next-line no-useless-escape\n    const numbersBiggerThanMaxInt = /:(\\b\\d{17,}|\\b(?:[9](?:[1-9]07199254740991|0[1-9]7199254740991|00[8-9]199254740991|007[2-9]99254740991|007199[3-9]54740991|0071992[6-9]4740991|00719925[5-9]740991|007199254[8-9]40991|0071992547[5-9]0991|00719925474[1-9]991|00719925474099[2-9])))(?=[,\\}\\]]|$)/g;\n    const serializedData = json.replace(numbersBiggerThanMaxInt, (match, group) => `:\"${group}n\"`);\n    try {\n        return JSON.parse(serializedData, (_, value) => {\n            const isCustomFormatBigInt = typeof value === \"string\" && value.match(/^\\d+n$/);\n            if (isCustomFormatBigInt)\n                return BigInt(value.substring(0, value.length - 1));\n            return value;\n        });\n    }\n    catch (e) {\n        return JSON.parse(json);\n    }\n};\nfunction safeJsonParse(value) {\n    if (typeof value !== \"string\") {\n        (0, log_1.logDebug)(value);\n        throw new Error(`Cannot safe json parse value of type ${typeof value}`);\n    }\n    try {\n        return JSONParse(value);\n    }\n    catch (e) {\n        // eslint-disable-next-line no-console\n        console.error(\"safeJsonParse error:\", e);\n        return value;\n    }\n}\nfunction safeJsonStringify(value) {\n    return typeof value === \"string\" ? value : JSONStringify(value) || \"\";\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.okxfromString = okxfromString;\nexports.okxtoString = okxtoString;\nexports.alloc = alloc;\nexports.allocUnsafe = allocUnsafe;\nconst basics_1 = require(\"multiformats/basics\");\nconst log_1 = require(\"../utils/log\");\nfunction okxfromString(string, encoding = 'utf8') {\n    const base = BASES[encoding];\n    (0, log_1.logDebug)(\"okxfromstring ====> \");\n    if (!base) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    return base.decoder.decode(`${base.prefix}${string}`);\n}\nfunction okxtoString(array, encoding = 'utf8') {\n    const base = BASES[encoding];\n    (0, log_1.logDebug)(\"okxtoString ====> \");\n    if (!base) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    return base.encoder.encode(array).substring(1);\n}\nfunction alloc(size = 0) {\n    return new Uint8Array(size);\n}\nfunction allocUnsafe(size = 0) {\n    return new Uint8Array(size);\n}\nfunction createCodec(name, prefix, encode, decode) {\n    return {\n        name,\n        prefix,\n        encoder: {\n            name,\n            prefix,\n            encode\n        },\n        decoder: { decode }\n    };\n}\nconst string = createCodec('utf8', 'u', buf => {\n    const decoder = new TextDecoder('utf8');\n    return 'u' + decoder.decode(buf);\n}, str => {\n    const encoder = new TextEncoder();\n    return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', buf => {\n    let result = 'a';\n    for (let i = 0; i < buf.length; i++) {\n        let bufNum = buf[i];\n        if (bufNum && String.fromCharCode(bufNum)) {\n            result += String.fromCharCode(bufNum);\n        }\n    }\n    return result;\n}, str => {\n    str = str.substring(1);\n    const buf = allocUnsafe(str.length);\n    for (let i = 0; i < str.length; i++) {\n        buf[i] = str.charCodeAt(i);\n    }\n    return buf;\n});\nconst BASES = Object.assign({ utf8: string, 'utf-8': string, hex: basics_1.bases.base16, latin1: ascii, ascii: ascii, binary: ascii }, basics_1.bases);\n","\"use strict\";\nvar _a, _b, _c, _d, _e, _f, _g;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isTmaPlatform = isTmaPlatform;\nexports.isInTMA = isInTMA;\nexports.isInTelegramBrowser = isInTelegramBrowser;\nexports.sendExpand = sendExpand;\nexports.sendOpenTelegramLink = sendOpenTelegramLink;\nexports.versionCompare = versionCompare;\nconst url_1 = require(\"./url\");\nconst log_1 = require(\"./log\");\nconst protocol_1 = require(\"../protocol\");\nconst web_api_1 = require(\"./web-api\");\nlet initParams = {};\ntry {\n    let locationHash = location.hash.toString();\n    initParams = urlParseHashParams(locationHash);\n}\ncatch (e) { }\nlet tmaPlatform = 'unknown';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppPlatform) {\n    tmaPlatform = (_a = initParams.tgWebAppPlatform) !== null && _a !== void 0 ? _a : 'unknown';\n}\nif (tmaPlatform === 'unknown') {\n    const window = (0, url_1.getWindow)();\n    tmaPlatform = (_d = (_c = (_b = window === null || window === void 0 ? void 0 : window.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) === null || _c === void 0 ? void 0 : _c.platform) !== null && _d !== void 0 ? _d : 'unknown';\n}\nlet webAppVersion = '6.0';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppVersion) {\n    webAppVersion = initParams.tgWebAppVersion;\n}\nif (!webAppVersion) {\n    const window = (0, url_1.getWindow)();\n    webAppVersion = (_g = (_f = (_e = window === null || window === void 0 ? void 0 : window.Telegram) === null || _e === void 0 ? void 0 : _e.WebApp) === null || _f === void 0 ? void 0 : _f.version) !== null && _g !== void 0 ? _g : '6.0';\n}\n/**\n * Returns true if the app is running in TMA on the specified platform.\n * @param platforms\n */\nfunction isTmaPlatform(...platforms) {\n    return platforms.includes(tmaPlatform);\n}\n/**\n * Returns true if the app is running in TMA.\n */\nfunction isInTMA() {\n    var _a;\n    return tmaPlatform !== 'unknown' || !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n}\n/**\n * Returns true if the app is running in the Telegram browser.\n */\nfunction isInTelegramBrowser() {\n    var _a;\n    const isTelegramWebview = !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebview);\n    return (isInTMA() || isTelegramWebview) && tmaPlatform === 'unknown';\n}\n/**\n * Expand the app window.\n */\nfunction sendExpand() {\n    postEvent('web_app_expand', {});\n}\n/**\n * Opens link in TMA or in new tab and returns a function that closes the tab.\n * @param link The link to open.\n * @param fallback The function to call if the link can't be opened in TMA.\n */\nfunction sendOpenTelegramLink(link, fallback) {\n    const url = new URL(link);\n    if (url.protocol !== 'http:' && url.protocol !== 'https:') {\n        if (fallback) {\n            return fallback();\n        }\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Url protocol is not supported: ${url}`);\n    }\n    if (url.hostname !== 't.me') {\n        if (fallback) {\n            return fallback();\n        }\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Url host is not supported: ${url}`);\n    }\n    const pathFull = url.pathname + url.search;\n    if (isIframe() || versionAtLeast('6.1')) {\n        postEvent('web_app_open_tg_link', { path_full: pathFull });\n    }\n    else {\n        (0, web_api_1.openLinkBlank)('https://t.me' + pathFull);\n    }\n}\nfunction isIframe() {\n    try {\n        const window = (0, url_1.getWindow)();\n        if (!window) {\n            return false;\n        }\n        return window.parent != null && window !== window.parent;\n    }\n    catch (e) {\n        return false;\n    }\n}\nfunction postEvent(eventType, eventData) {\n    try {\n        const window = (0, url_1.getWindow)();\n        if (!window) {\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Can't post event to parent window: window is not defined`);\n        }\n        if (window.TelegramWebviewProxy !== undefined) {\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.TelegramWebviewProxy.postEvent(eventType, JSON.stringify(eventData));\n        }\n        else if (window.external && 'notify' in window.external) {\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.external.notify(JSON.stringify({ eventType: eventType, eventData: eventData }));\n        }\n        else if (isIframe()) {\n            const trustedTarget = '*';\n            const message = JSON.stringify({ eventType: eventType, eventData: eventData });\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.parent.postMessage(message, trustedTarget);\n        }\n        else {\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Can't post event to TMA`);\n        }\n    }\n    catch (e) {\n        (0, log_1.logError)(`Can't post event to parent window: ${e}`);\n    }\n}\nfunction urlParseHashParams(locationHash) {\n    locationHash = locationHash.replace(/^#/, '');\n    let params = {};\n    if (!locationHash.length) {\n        return params;\n    }\n    if (locationHash.indexOf('=') < 0 && locationHash.indexOf('?') < 0) {\n        params._path = urlSafeDecode(locationHash);\n        return params;\n    }\n    let qIndex = locationHash.indexOf('?');\n    if (qIndex >= 0) {\n        let pathParam = locationHash.substr(0, qIndex);\n        params._path = urlSafeDecode(pathParam);\n        locationHash = locationHash.substr(qIndex + 1);\n    }\n    let query_params = urlParseQueryString(locationHash);\n    for (let k in query_params) {\n        params[k] = query_params[k];\n    }\n    return params;\n}\nfunction urlSafeDecode(urlencoded) {\n    try {\n        urlencoded = urlencoded.replace(/\\+/g, '%20');\n        return decodeURIComponent(urlencoded);\n    }\n    catch (e) {\n        return urlencoded;\n    }\n}\nfunction urlParseQueryString(queryString) {\n    let params = {};\n    if (!queryString.length) {\n        return params;\n    }\n    let queryStringParams = queryString.split('&');\n    let i, param, paramName, paramValue;\n    for (i = 0; i < queryStringParams.length; i++) {\n        param = queryStringParams[i].split('=');\n        paramName = urlSafeDecode(param[0]);\n        paramValue = param[1] == null ? null : urlSafeDecode(param[1]);\n        params[paramName] = paramValue;\n    }\n    return params;\n}\nfunction versionCompare(v1, v2) {\n    if (typeof v1 !== 'string')\n        v1 = '';\n    if (typeof v2 !== 'string')\n        v2 = '';\n    let v1List = v1.replace(/^\\s+|\\s+$/g, '').split('.');\n    let v2List = v2.replace(/^\\s+|\\s+$/g, '').split('.');\n    let a, i, p1, p2;\n    a = Math.max(v1List.length, v2List.length);\n    for (i = 0; i < a; i++) {\n        p1 = parseInt(v1List[i]) || 0;\n        p2 = parseInt(v2List[i]) || 0;\n        if (p1 === p2)\n            continue;\n        if (p1 > p2)\n            return 1;\n        return -1;\n    }\n    return 0;\n}\nfunction versionAtLeast(ver) {\n    return versionCompare(webAppVersion, ver) >= 0;\n}\n","\"use strict\";\nvar _a, _b, _c, _d;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.removeUrlLastSlash = removeUrlLastSlash;\nexports.addPathToUrl = addPathToUrl;\nexports.getUniversalLink = getUniversalLink;\nexports.openOKXDeeplink = openOKXDeeplink;\nexports.openOKXUniversalLink = openOKXUniversalLink;\nexports.openOKXDeeplinkWithFallback = openOKXDeeplinkWithFallback;\nexports.getWindow = getWindow;\nexports.isTelegramUrl = isTelegramUrl;\nexports.encodeTelegramUrlParameters = encodeTelegramUrlParameters;\nexports.encodeConnectParams = encodeConnectParams;\nexports.encodeTWAConnectURLParams = encodeTWAConnectURLParams;\nexports.getAppWalletDeepLink = getAppWalletDeepLink;\nexports.getAppWalletShortDeepLink = getAppWalletShortDeepLink;\nexports.getTelegramWalletTWAUrl = getTelegramWalletTWAUrl;\nexports.openOKXTMAWalletlinkWithFallback = openOKXTMAWalletlinkWithFallback;\nexports.isInTMA = isInTMA;\nexports.isInTelegramBrowser = isInTelegramBrowser;\nexports.getOKXLink = getOKXLink;\nconst protocol_1 = require(\"../protocol\");\nconst log_1 = require(\"./log\");\nconst constants_1 = require(\"../protocol/constants\");\nconst utils_1 = require(\"./utils\");\nconst tma_api_1 = require(\"./tma-api\");\nfunction removeUrlLastSlash(url) {\n    if (url.slice(-1) === '/') {\n        return url.slice(0, -1);\n    }\n    return url;\n}\nfunction addPathToUrl(url, path) {\n    return removeUrlLastSlash(url) + '/' + path;\n}\nfunction getUniversalLink(deeplinkUrl, useStandardUniversalLink = false) {\n    console.log(\"getUniversalLink deeplinkUrl:\", deeplinkUrl, \", useStandardUniversalLink:\", useStandardUniversalLink);\n    const replaceStrWithParam = `${protocol_1.standardDeeplink}?param=`;\n    if (!useStandardUniversalLink && deeplinkUrl.startsWith(replaceStrWithParam)) {\n        const cleanUrl = deeplinkUrl.replace(replaceStrWithParam, '');\n        (0, log_1.logDebug)(\"getUniversalLink cleanUrl:\", cleanUrl);\n        const deeplinkEncodeUrl = encodeURIComponent(cleanUrl);\n        (0, log_1.logDebug)(\"getUniversalLink standardUniversalLink:\", protocol_1.standardUniversalLink);\n        (0, log_1.logDebug)(\"getUniversalLink `${shortUniversalLink}?param=${deeplinkEncodeUrl}`:\", `${constants_1.shortUniversalLink}?param=${deeplinkEncodeUrl}`);\n        return `${constants_1.shortUniversalLink}?param=${deeplinkEncodeUrl}`;\n    }\n    else if (!useStandardUniversalLink && deeplinkUrl == protocol_1.standardDeeplink) {\n        (0, log_1.logDebug)(\"getUniversalLink shortUniversalLink:\", constants_1.shortUniversalLink);\n        return constants_1.shortUniversalLink;\n    }\n    else {\n        const deeplinkEncodeUrl = encodeURIComponent(deeplinkUrl);\n        console.log(\"getUniversalLink standardUniversalLink:\", protocol_1.standardUniversalLink);\n        return `${protocol_1.standardUniversalLink}?deeplink=${deeplinkEncodeUrl}`;\n    }\n}\nfunction openOKXDeeplink(deeplinkUrl) {\n    var _a;\n    const fullUrl = getUniversalLink(deeplinkUrl);\n    const isTelegram = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n    console.log(\"openOKXDeeplink fullUrl:\", fullUrl);\n    if (!(0, utils_1.isIos)()) {\n        let newWindow = null;\n        if (isTelegram) {\n            newWindow = window.open(deeplinkUrl, '_blank');\n        }\n        else {\n            window.location.href = deeplinkUrl;\n        }\n    }\n    else {\n        openOKXUniversalLink(fullUrl);\n    }\n}\nfunction openOKXUniversalLink(fullUrl) {\n    if (!(0, utils_1.isIos)()) {\n        // if (isTelegram) {\n        window.open(fullUrl, '_blank');\n        // } else {\n        //     window.location.href = fullUrl;\n        // }\n    }\n    else {\n        if (isInTMA()) {\n            window.open(fullUrl, '_blank');\n        }\n        else {\n            console.log(\"windowOpen[before]: \", Date.now());\n            if (window === null || window === void 0 ? void 0 : window.okxLogDebug) {\n                window.open(fullUrl, '_blank');\n            }\n            else {\n                window.open(fullUrl, '_self');\n            }\n            console.log(\"windowOpen[after]: \", Date.now());\n        }\n    }\n}\nfunction openOKXDeeplinkWithFallback(deeplinkUrl) {\n    var _a;\n    const fullUrl = getUniversalLink(deeplinkUrl);\n    const isTelegram = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n    console.log(\"openOKXDeeplinkWithFallback fullUrl:\", fullUrl);\n    let deepLinkOpened = false;\n    const timeoutDuration = 3000; // 1.5秒的等待时间\n    const downloadUrl = protocol_1.standardUniversalLink;\n    console.log(\"openOKXDeeplinkWithFallback standardUniversalLink:\", protocol_1.standardUniversalLink);\n    if (!(0, utils_1.isIos)()) {\n        let newWindow = null;\n        var fallbackToDownloadPage = () => {\n            if (!deepLinkOpened) {\n                if (newWindow) {\n                    newWindow.open(downloadUrl, '_self');\n                }\n                else {\n                    window.open(downloadUrl, '_blank');\n                }\n            }\n        };\n        if (isTelegram) {\n            newWindow = window.open(deeplinkUrl, '_blank');\n        }\n        else {\n            window.location.href = deeplinkUrl;\n        }\n        setTimeout(fallbackToDownloadPage, timeoutDuration);\n        window.addEventListener('blur', () => {\n            deepLinkOpened = true;\n        }, { once: true });\n        document.addEventListener('visibilitychange', () => {\n            if (document.visibilityState === 'hidden') {\n                deepLinkOpened = true;\n            }\n        });\n    }\n    else {\n        if (isTelegram) {\n            window.open(fullUrl, '_blank');\n        }\n        else {\n            console.log(\"windowOpen[before]: \", Date.now());\n            if (window === null || window === void 0 ? void 0 : window.okxLogDebug) {\n                window.open(fullUrl, '_blank');\n            }\n            else {\n                window.open(fullUrl, '_self');\n            }\n            console.log(\"windowOpen[after]: \", Date.now());\n        }\n    }\n}\nfunction getWindow() {\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    return undefined;\n}\nfunction isTelegramUrl(link) {\n    if (!link) {\n        return false;\n    }\n    const url = new URL(link);\n    return url.protocol === 'tg:' || url.hostname === 't.me';\n}\nfunction encodeTelegramUrlParameters(parameters) {\n    let encodedParameters = parameters;\n    encodedParameters = encodedParameters.replace(/\\./g, '%2E');\n    encodedParameters = encodedParameters.replace(/-/g, '%2D');\n    encodedParameters = encodedParameters.replace(/_/g, '%5F');\n    encodedParameters = encodedParameters.replace(/&/g, '-');\n    encodedParameters = encodedParameters.replace(/=/g, '__');\n    encodedParameters = encodedParameters.replace(/%/g, '--');\n    return encodedParameters;\n}\nfunction encodeConnectParams(connectRequest) {\n    const connectRequestStr = JSON.stringify(connectRequest);\n    (0, log_1.logDebug)(\"url encodeConnectParams connectRequestStr \", connectRequestStr);\n    const utf8Array = new TextEncoder().encode(connectRequestStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    // .replace(/\\+/g, '-')\n    // .replace(/\\//g, '_')\n    // .replace(/=+$/, ''); //Compatible with older versions of iOS. Cannot be added directly  (Base64 URL Safe)\n    (0, log_1.logDebug)(\"url encodeConnectParams base64Encoded \", base64Encoded);\n    return base64Encoded;\n}\nfunction encodeTWAConnectURLParams(connectRequest) {\n    const connectRequestStr = JSON.stringify({ topic: connectRequest.topic, clientId: connectRequest.clientId });\n    (0, log_1.logDebug)(\"url encodeConnectParams connectRequestStr\", connectRequestStr);\n    const utf8Array = new TextEncoder().encode(connectRequestStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    return base64Encoded;\n}\nfunction getAppWalletDeepLink(connectParam) {\n    return `${protocol_1.standardDeeplink}?param=${connectParam}`;\n}\nfunction getAppWalletShortDeepLink(topic, clientId) {\n    return `${constants_1.shortUniversalLink}?topic=${topic}${(0, utils_1.getLastSixMd5Hash)(clientId)}`;\n}\n//  make telegram okx wallet TWA url\nfunction getTelegramWalletTWAUrl(connectParam, redirectStr) {\n    let base64Content = { okxconnect: \"\", redirect: \"\", extraparams: \"\" };\n    if (connectParam) {\n        base64Content.okxconnect = connectParam;\n    }\n    if (redirectStr) {\n        base64Content.redirect = redirectStr;\n    }\n    let base64ContentStr = JSON.stringify(base64Content);\n    const utf8Array = new TextEncoder().encode(base64ContentStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    const urlSafeBase64 = (0, utils_1.toSafeBase64FromBase64)(base64Encoded);\n    (0, log_1.logDebug)('[TWA] open link:', base64Content, base64Encoded);\n    if (connectParam || redirectStr) {\n        if (!isInTMA()) {\n            // return `http://localhost:5173?tgWebAppStartParam=${urlSafeBase64}`\n            if ((0, constants_1.getTestTwaUrl)()) {\n                return `${(0, constants_1.getTestTwaUrl)()}?tgWebAppStartParam=${urlSafeBase64}`;\n            }\n            else {\n                return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}&startapp=${urlSafeBase64}`;\n            }\n        }\n        else {\n            if ((0, constants_1.getTestTgTwaUrl)()) {\n                return `${(0, constants_1.getTestTgTwaUrl)()}?startapp=${urlSafeBase64}`;\n            }\n            else {\n                return `https://t.me/${constants_1.tgwalletName}/start?startapp=${urlSafeBase64}`;\n            }\n        }\n    }\n    if (!isInTMA()) {\n        // return \"http://localhost:5173\"\n        if ((0, constants_1.getTestTwaUrl)()) {\n            return `${(0, constants_1.getTestTwaUrl)()}`;\n        }\n        else {\n            return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}`;\n        }\n    }\n    else {\n        if ((0, constants_1.getTestTgTwaUrl)()) {\n            return `${(0, constants_1.getTestTgTwaUrl)()}`;\n        }\n        else {\n            return `https://t.me/${constants_1.tgwalletName}/start`;\n        }\n    }\n}\n//  open TWA url in telegram\nfunction openOKXTMAWalletlinkWithFallback(twaDeepLink) {\n    var _a, _b, _c, _d, _e;\n    (0, log_1.logDebug)('[TWA] open link:', twaDeepLink, \"isInTMA ==> \", isInTMA());\n    if (!isInTMA()) {\n        if ((0, constants_1.getTestTwaUrl)()) {\n            window.open(twaDeepLink, '_blank');\n        }\n        else {\n            window.open(twaDeepLink, '_self');\n        }\n    }\n    else {\n        if ((_b = (_a = getWindow()) === null || _a === void 0 ? void 0 : _a.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) {\n            (_e = (_d = (_c = getWindow()) === null || _c === void 0 ? void 0 : _c.Telegram) === null || _d === void 0 ? void 0 : _d.WebApp) === null || _e === void 0 ? void 0 : _e.openTelegramLink(twaDeepLink);\n        }\n        else {\n            (0, tma_api_1.sendOpenTelegramLink)(twaDeepLink);\n        }\n    }\n}\n/**\n * Returns true if the app is running in TMA.\n */\nfunction urlSafeDecode(urlencoded) {\n    try {\n        urlencoded = urlencoded.replace(/\\+/g, '%20');\n        return decodeURIComponent(urlencoded);\n    }\n    catch (e) {\n        return urlencoded;\n    }\n}\nfunction urlParseQueryString(queryString) {\n    let params = {};\n    if (!queryString.length) {\n        return params;\n    }\n    let queryStringParams = queryString.split('&');\n    let i, param, paramName, paramValue;\n    for (i = 0; i < queryStringParams.length; i++) {\n        param = queryStringParams[i].split('=');\n        paramName = urlSafeDecode(param[0]);\n        paramValue = param[1] == null ? null : urlSafeDecode(param[1]);\n        params[paramName] = paramValue;\n    }\n    return params;\n}\nfunction urlParseHashParams(locationHash) {\n    locationHash = locationHash.replace(/^#/, '');\n    let params = {};\n    if (!locationHash.length) {\n        return params;\n    }\n    if (locationHash.indexOf('=') < 0 && locationHash.indexOf('?') < 0) {\n        params._path = urlSafeDecode(locationHash);\n        return params;\n    }\n    let qIndex = locationHash.indexOf('?');\n    if (qIndex >= 0) {\n        let pathParam = locationHash.substr(0, qIndex);\n        params._path = urlSafeDecode(pathParam);\n        locationHash = locationHash.substr(qIndex + 1);\n    }\n    let query_params = urlParseQueryString(locationHash);\n    for (let k in query_params) {\n        params[k] = query_params[k];\n    }\n    return params;\n}\nlet initParams = {};\ntry {\n    let locationHash = location.hash.toString();\n    initParams = urlParseHashParams(locationHash);\n}\ncatch (e) { }\nlet tmaPlatform = 'unknown';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppPlatform) {\n    tmaPlatform = (_a = initParams.tgWebAppPlatform) !== null && _a !== void 0 ? _a : 'unknown';\n}\nif (tmaPlatform === 'unknown') {\n    const window = getWindow();\n    tmaPlatform = (_d = (_c = (_b = window === null || window === void 0 ? void 0 : window.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) === null || _c === void 0 ? void 0 : _c.platform) !== null && _d !== void 0 ? _d : 'unknown';\n}\nfunction isInTMA() {\n    var _a;\n    return tmaPlatform !== 'unknown' || !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n}\n/**\n * Returns true if the app is running in the Telegram browser.\n */\nfunction isInTelegramBrowser() {\n    var _a;\n    const isTelegramWebview = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebview);\n    return (isInTMA() || isTelegramWebview) && tmaPlatform === 'unknown';\n}\nfunction getOKXLink(connectRequest, useMini = false, tmaReturnUrl) {\n    (0, log_1.logDebug)(`url  getOKXLink() called connectRequest==> ${JSON.stringify(connectRequest)}  useMini=> ${useMini}  tmaReturnUrl==> ${tmaReturnUrl}`);\n    if (useMini) {\n        var encodeTGParams = encodeTWAConnectURLParams(connectRequest);\n        return getTelegramWalletTWAUrl(encodeTGParams, tmaReturnUrl !== null && tmaReturnUrl !== void 0 ? tmaReturnUrl : \"back\");\n    }\n    else {\n        if ((0, utils_1.useShortLink)()) {\n            return getAppWalletShortDeepLink(connectRequest.topic, connectRequest.clientId);\n        }\n        else {\n            const base64Encoded = encodeConnectParams(connectRequest);\n            return `${protocol_1.standardDeeplink}?param=${base64Encoded}`;\n        }\n    }\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isValidObject = exports.RANDOM_LENGTH = exports.isBrowser = exports.resolveLocalStorage = exports.hasLocalStorage = exports.hasBuiltInWebSocket = exports.resolveWebSocketImplementation = void 0;\nexports.hexToByteArray = hexToByteArray;\nexports.toHexString = toHexString;\nexports.concatUint8Arrays = concatUint8Arrays;\nexports.splitToUint8Arrays = splitToUint8Arrays;\nexports.base64encode = base64encode;\nexports.base64decode = base64decode;\nexports.checkWSUrl = checkWSUrl;\nexports.hashKey = hashKey;\nexports.generateRandomBytes32 = generateRandomBytes32;\nexports.generateTopic = generateTopic;\nexports.isIos = isIos;\nexports.getLastSixMd5Hash = getLastSixMd5Hash;\nexports.toSafeBase64FromBase64 = toSafeBase64FromBase64;\nexports.useShortLink = useShortLink;\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst tweetnacl_util_1 = __importDefault(require(\"tweetnacl-util\"));\nconst to_string_1 = require(\"uint8arrays/to-string\");\nconst sha256_1 = require(\"@stablelib/sha256\");\nconst safejson_1 = require(\"./safejson\");\nconst log_1 = require(\"./log\");\nconst stringUtils_1 = require(\"../utils/stringUtils\");\nconst crypto_js_1 = __importDefault(require(\"crypto-js\"));\nconst BASE16 = \"base16\";\nfunction hexToByteArray(hexString) {\n    if (hexString.length % 2 !== 0) {\n        throw new Error(`Cannot convert ${hexString} to bytesArray`);\n    }\n    const result = new Uint8Array(hexString.length / 2);\n    for (let i = 0; i < hexString.length; i += 2) {\n        result[i / 2] = parseInt(hexString.slice(i, i + 2), 16);\n    }\n    return result;\n}\nfunction toHexString(byteArray) {\n    let hexString = '';\n    byteArray.forEach(byte => {\n        hexString += ('0' + (byte & 0xff).toString(16)).slice(-2);\n    });\n    return hexString;\n}\nfunction concatUint8Arrays(buffer1, buffer2) {\n    const mergedArray = new Uint8Array(buffer1.length + buffer2.length);\n    mergedArray.set(buffer1);\n    mergedArray.set(buffer2, buffer1.length);\n    return mergedArray;\n}\nfunction splitToUint8Arrays(array, index) {\n    if (index >= array.length) {\n        throw new Error('Index is out of buffer');\n    }\n    const subArray1 = array.slice(0, index);\n    const subArray2 = array.slice(index);\n    return [subArray1, subArray2];\n}\nfunction encodeUint8Array(value, urlSafe) {\n    const encoded = tweetnacl_util_1.default.encodeBase64(value);\n    if (!urlSafe) {\n        return encoded;\n    }\n    return encodeURIComponent(encoded);\n}\nfunction decodeToUint8Array(value, urlSafe) {\n    if (urlSafe) {\n        value = decodeURIComponent(value);\n    }\n    return tweetnacl_util_1.default.decodeBase64(value);\n}\nfunction base64encode(value, urlSafe) {\n    let uint8Array;\n    if (value instanceof Uint8Array) {\n        uint8Array = value;\n    }\n    else {\n        if (typeof value !== 'string') {\n            value = (0, safejson_1.safeJsonStringify)(value);\n        }\n        uint8Array = tweetnacl_util_1.default.decodeUTF8(value);\n    }\n    return encodeUint8Array(uint8Array, urlSafe);\n}\nfunction base64decode(value, urlSafe) {\n    const decodedUint8Array = decodeToUint8Array(value, urlSafe);\n    return {\n        toString() {\n            return tweetnacl_util_1.default.encodeUTF8(decodedUint8Array);\n        },\n        toObject() {\n            try {\n                return (0, safejson_1.safeJsonParse)(tweetnacl_util_1.default.encodeUTF8(decodedUint8Array));\n            }\n            catch (e) {\n                return null;\n            }\n        },\n        toUint8Array() {\n            return decodedUint8Array;\n        }\n    };\n}\nfunction checkWSUrl(url) {\n    const match = url.match(new RegExp(/^\\w+:/, \"gi\"));\n    if (!match || !match.length) {\n        return false;\n    }\n    let scheme = match[0];\n    if (scheme === undefined) {\n        return false;\n    }\n    return new RegExp(\"^wss?:\").test(scheme);\n}\nconst resolveWebSocketImplementation = () => {\n    if (typeof WebSocket !== \"undefined\") {\n        return WebSocket;\n    }\n    else if (typeof global !== \"undefined\" && typeof global.WebSocket !== \"undefined\") {\n        return global.WebSocket;\n    }\n    else if (typeof window !== \"undefined\" && typeof window.WebSocket !== \"undefined\") {\n        return window.WebSocket;\n    }\n    else if (typeof self !== \"undefined\" && typeof self.WebSocket !== \"undefined\") {\n        return self.WebSocket;\n    }\n    return WebSocket;\n    //\n    // return require(\"ws\");\n};\nexports.resolveWebSocketImplementation = resolveWebSocketImplementation;\nconst hasBuiltInWebSocket = () => typeof WebSocket !== \"undefined\" ||\n    (typeof global !== \"undefined\" && typeof global.WebSocket !== \"undefined\") ||\n    (typeof window !== \"undefined\" && typeof window.WebSocket !== \"undefined\") ||\n    (typeof self !== \"undefined\" && typeof self.WebSocket !== \"undefined\");\nexports.hasBuiltInWebSocket = hasBuiltInWebSocket;\nconst hasLocalStorage = () => (typeof global !== \"undefined\" && (typeof global.localStorage !== \"undefined\")) ||\n    (typeof window !== \"undefined\" && typeof window.localStorage !== \"undefined\");\nexports.hasLocalStorage = hasLocalStorage;\nconst resolveLocalStorage = () => {\n    if (typeof global !== \"undefined\" && typeof global.localStorage !== \"undefined\") {\n        return global.localStorage;\n    }\n    else if (typeof window !== \"undefined\" && typeof window.localStorage !== \"undefined\") {\n        return window.localStorage;\n    }\n    return localStorage;\n};\nexports.resolveLocalStorage = resolveLocalStorage;\nconst isBrowser = () => typeof window !== \"undefined\";\nexports.isBrowser = isBrowser;\nexports.RANDOM_LENGTH = 32;\nfunction hashKey(key, encode = BASE16) {\n    (0, log_1.logDebug)(`hash key called ${key}`);\n    const result = (0, sha256_1.hash)((0, stringUtils_1.okxfromString)(key, encode));\n    return (0, to_string_1.toString)(result, encode);\n}\nfunction generateRandomBytes32() {\n    return tweetnacl_1.default.randomBytes(exports.RANDOM_LENGTH);\n}\nfunction generateTopic() {\n    let randomBytes32 = generateRandomBytes32();\n    (0, log_1.logDebug)(`generate topic called ${randomBytes32}`);\n    return hashKey((0, to_string_1.toString)(randomBytes32, BASE16));\n}\nconst isValidObject = (obj) => Object.getPrototypeOf(obj) === Object.prototype && Object.keys(obj).length;\nexports.isValidObject = isValidObject;\nfunction isIos() {\n    const userAgent = navigator.userAgent;\n    const maxTouchPoints = navigator.maxTouchPoints || 0;\n    // 检测 iPhone、iPod 和传统的 iPad\n    const isIOSDevice = /iPad|iPhone|iPod/.test(userAgent) && !window.MSStream;\n    // 针对 iPadOS 13 及以上的设备进行额外判断\n    const isIPadOS = (userAgent.includes('Mac') && maxTouchPoints > 1);\n    (0, log_1.logDebug)(`utils isIos >>>isIOSDevice: ${isIOSDevice}    >> isIPadOS: ${isIPadOS}`);\n    // 如果是 iOS 设备或者是 iPadOS 设备，返回 true\n    return isIOSDevice || isIPadOS;\n}\nfunction getLastSixMd5Hash(input) {\n    // 生成 MD5 哈希\n    const hash = crypto_js_1.default.MD5(input).toString();\n    // 获取最后六位\n    return hash.slice(-6);\n}\nfunction toSafeBase64FromBase64(base64) {\n    return base64\n        .replace(/=/g, \"\")\n        .replace(/\\+/g, \"-\")\n        .replace(/\\//g, \"_\");\n}\nfunction useShortLink() {\n    return !!window.useShortLink;\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.openLink = openLink;\nexports.openLinkBlank = openLinkBlank;\nexports.openDeeplinkWithFallback = openDeeplinkWithFallback;\nexports.isMobileUserAgent = isMobileUserAgent;\nexports.getUserAgent = getUserAgent;\nexports.isOS = isOS;\nexports.isBrowser = isBrowser;\nconst ua_parser_js_1 = __importDefault(require(\"ua-parser-js\"));\nconst log_1 = require(\"./log\");\nfunction openLink(href, target = '_self') {\n    (0, log_1.logDebug)('openLink', href, target);\n    window.open(href, target, 'noopener noreferrer');\n}\nfunction openLinkBlank(href) {\n    openLink(href, '_blank');\n}\nfunction openDeeplinkWithFallback(href, fallback) {\n    const doFallback = () => {\n        if (isBrowser('safari') || (isOS('android') && isBrowser('firefox'))) {\n            // Safari does not support fallback to direct link.\n            return;\n        }\n        fallback();\n    };\n    const fallbackTimeout = setTimeout(() => doFallback(), 500);\n    window.addEventListener('blur', () => clearTimeout(fallbackTimeout), { once: true });\n    openLink(href, '_self');\n}\nfunction isMobileUserAgent() {\n    let check = false;\n    (function (a) {\n        if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) ||\n            /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.slice(0, 4)))\n            check = true;\n    })(navigator.userAgent ||\n        navigator.vendor ||\n        window.opera);\n    return check;\n}\nfunction getUserAgent() {\n    var _a, _b, _c;\n    const results = new ua_parser_js_1.default().getResult();\n    const osName = (_a = results.os.name) === null || _a === void 0 ? void 0 : _a.toLowerCase();\n    const deviceModel = (_b = results.device.model) === null || _b === void 0 ? void 0 : _b.toLowerCase();\n    let os;\n    switch (true) {\n        case deviceModel === 'ipad':\n            os = 'ipad';\n            break;\n        case osName === 'ios':\n            os = 'ios';\n            break;\n        case osName === 'android':\n            os = 'android';\n            break;\n        case osName === 'mac os':\n            os = 'macos';\n            break;\n        case osName === 'linux':\n            os = 'linux';\n            break;\n        case osName === null || osName === void 0 ? void 0 : osName.includes('windows'):\n            os = 'windows';\n            break;\n    }\n    const browserName = (_c = results.browser.name) === null || _c === void 0 ? void 0 : _c.toLowerCase();\n    let browser;\n    switch (true) {\n        case browserName === 'chrome':\n            browser = 'chrome';\n            break;\n        case browserName === 'firefox':\n            browser = 'firefox';\n            break;\n        case browserName === null || browserName === void 0 ? void 0 : browserName.includes('safari'):\n            browser = 'safari';\n            break;\n        case browserName === null || browserName === void 0 ? void 0 : browserName.includes('opera'):\n            browser = 'opera';\n            break;\n    }\n    return {\n        os,\n        browser\n    };\n}\nfunction isOS(...os) {\n    return os.includes(getUserAgent().os);\n}\nfunction isBrowser(...browser) {\n    return browser.includes(getUserAgent().browser);\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXBtcProvider = void 0;\nconst _1 = require(\"./\");\nclass OKXBtcProvider {\n    constructor(provider) {\n        this.caip = [\n            \"btc:mainnet\",\n            \"fractal:mainnet\"\n        ];\n        this.provider = provider;\n    }\n    getAddressForChainId(chainId) {\n        var _a, _b;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let accounts = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['btc']) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        });\n        if (accounts == undefined || accounts.length < 0) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `no connected account`);\n        }\n        let account = accounts[0];\n        const address = account.split(':')[2];\n        return address;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let extra = (_c = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[ns]) === null || _b === void 0 ? void 0 : _b.extra) === null || _c === void 0 ? void 0 : _c[chainId];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n        }\n        return {\n            address: this.getAddressForChainId(chainId),\n            publicKey: publicKey\n        };\n    }\n    /**\n     *\n     * @param signStr\n     * @param chainId\n     * @param type\n     * @returns\n     */\n    signMessage(chainId, signStr, type) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (signStr === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signMessage parmas error`);\n            }\n            let params = {\n                signStr: signStr,\n                from: this.getAddressForChainId(chainId)\n            };\n            if (type) {\n                params.type = type;\n            }\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signMessage\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param toAddress\n     * @param satoshis\n     * @param options { feeRate: 0 }\n     * @returns\n     */\n    sendBitcoin(chainId, toAddress, satoshis, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            let params = {\n                from: this.getAddressForChainId(chainId),\n                to: toAddress,\n                value: (satoshis / 100000000).toString(),\n            };\n            if (options === null || options === void 0 ? void 0 : options.feeRate) {\n                params[\"satBytes\"] = options.feeRate.toString();\n            }\n            let result = yield this.send(chainId, params);\n            if (result !== undefined && ('txhash' in result)) {\n                // return txhash directly\n                return result.txhash;\n            }\n            // or return unexpected result\n            return result;\n        });\n    }\n    //  from - string：当前连接的钱包的 BTC 地址\n    //  to - string：接受 BTC 的地址\n    //  value - string：发送 BTC 的数量\n    //  satBytes - string： (可选) 自定义费率\n    //  memo - string： (可选) 指定 outputs OP_RETURN 内容 示例\n    //  memoPos - number： (可选) 指定 outputs OP_RETURN 输出位置，如果传了 memo 则必须传入 memoPos 指定位置，否则 memo 不生效\n    send(chainId, input) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (!this.checkParameters(input, 'to', 'value')) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send parmas  error`);\n            }\n            input[\"from\"] = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: 'btc_send',\n                    params: input\n                }, chainId);\n                if ('result' in ret) {\n                    return {\n                        txhash: ret.result\n                    };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param psbtHex string 要签名的 psbt 的十六进制字符串\n     * @param options object { autoFinalized: 0 }\n     */\n    signPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.signPsbts(chainId, [psbtHex], [options]).then(psbtResults => {\n                    let results = JSON.parse(psbtResults);\n                    resolve(results[0]);\n                }).catch(error => {\n                    reject(error);\n                });\n            });\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHexs Array\n     * @param options Array [{ autoFinalized: 0 }]\n     * @returns\n     */\n    signPsbts(chainId, psbtHexs, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHexs === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHexs: psbtHexs,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signPsbts\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHex string\n     * @param options object\n     * @returns\n     */\n    signAndPushPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHex === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHex: psbtHex,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signAndPushPsbt\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return JSON.parse(ret.result);\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param address string, receiver address\n     * @param inscriptionId string, 铭文 ID + 协议，没有传协议则默认是 Ordinals NFT ，目前仅支持 Ordinals 及 Atomicals 协议\n     * @param options object, { feeRate: number } custom rates\n     */\n    sendInscription(chainId, address, inscriptionId, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let extension = {\n                address: address,\n                inscriptionId: inscriptionId,\n                options: options\n            };\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (address === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method sendInscription params error`);\n            }\n            var feeRate = 0;\n            if (options && ('feeRate' in options)) {\n                feeRate = options.feeRate;\n            }\n            let coinId = '';\n            let from = this.getAddressForChainId(chainId);\n            var protocolId = 7; //ProtocolIdBRCNFT\n            if (inscriptionId !== 'undefined') {\n                let atomicSuffix = \"-Atomicals\";\n                let ordinalsSuffix = \"-Ordinals\";\n                if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(atomicSuffix.toLowerCase())) {\n                    protocolId = 8; //WXRCProtocolIdARCNFT\n                    inscriptionId = this.removeSuffix(inscriptionId, atomicSuffix);\n                }\n                else if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(ordinalsSuffix.toLowerCase())) {\n                    inscriptionId = this.removeSuffix(inscriptionId, ordinalsSuffix);\n                }\n            }\n            let params = {\n                scenario: 5,\n                feeRate: feeRate,\n                txType: \"20\",\n                to: address,\n                batchBean: [\n                    {\n                        coinAmount: \"1\",\n                        nftId: inscriptionId,\n                        protocolId: protocolId,\n                        coinId: coinId,\n                        inscriptionId: \"\",\n                        from: from\n                    }\n                ],\n                extension: extension\n            };\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_sendInscription\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    removeSuffix(str, suffix) {\n        if (str.endsWith(suffix)) {\n            return str.slice(0, str.length - suffix.length);\n        }\n        return str;\n    }\n    checkParameters(params, ...keys) {\n        var unexistKeys = [];\n        keys.forEach(key => {\n            if (!(`${key}` in params)) {\n                unexistKeys.push(key);\n            }\n        });\n        if (unexistKeys.length > 0) {\n            console.log('not find key: ', unexistKeys.join(\",\"));\n            return false;\n        }\n        return true;\n    }\n    /**\n     *\n     * @param chainId eg. btc:mainnet\n     * @returns eg. btc\n     */\n    checkChainId(chainId) {\n        if (this.caip.includes(chainId)) {\n            let [namespaceKey, _] = chainId.split(\":\");\n            return namespaceKey;\n        }\n        return undefined;\n    }\n}\nexports.OKXBtcProvider = OKXBtcProvider;\nexports.default = OKXBtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCosmosProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXCosmosProvider {\n    constructor(provider) {\n        this.provider = provider;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e, _f;\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount chainId:\", chainId);\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount namespaces:\", JSON.stringify((_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces));\n        let account = (_c = (_b = this.provider.session) === null || _b === void 0 ? void 0 : _b.namespaces[core_1.NameSpaceKeyCosmos]) === null || _c === void 0 ? void 0 : _c.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount account:\", JSON.stringify(account));\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount address:\", address);\n        let extra = (_f = (_e = (_d = this.provider.session) === null || _d === void 0 ? void 0 : _d.namespaces[core_1.NameSpaceKeyCosmos]) === null || _e === void 0 ? void 0 : _e.extra) === null || _f === void 0 ? void 0 : _f[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n            console.log(\"aptos_publicKey\", publicKey);\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            algo: \"secp256k1\",\n            address: address,\n            bech32Address: address,\n            pubKey: this.hexToUint8Array(publicKey),\n        };\n    }\n    signArbitrary(chainId, signerAddress, data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const base64Encoded = window.btoa(data);\n            const signDoc = {\n                chain_id: \"\",\n                account_number: \"0\",\n                sequence: \"0\",\n                fee: {\n                    gas: \"0\",\n                    amount: []\n                },\n                msgs: [{\n                        \"type\": \"sign/MsgSignData\",\n                        \"value\": {\n                            \"signer\": signerAddress,\n                            \"data\": base64Encoded\n                        }\n                    }],\n                memo: \"\"\n            };\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signArbitrary\",\n                \"params\": {\n                    \"signer\": signerAddress,\n                    \"chain_id\": chainId.split(\":\")[1],\n                    \"data\": signDoc\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    if (typeof ret.result == \"string\") {\n                        return JSON.parse(ret.result);\n                    }\n                    else {\n                        return ret.result;\n                    }\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signAmino(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (signDoc.msgs[0].type == \"sign/MsgSignData\") {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signArbitrary\",\n                    \"params\": {\n                        \"signer\": signerAddress,\n                        \"chain_id\": chainId.split(\":\")[1],\n                        \"data\": signDoc\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        return ret.result;\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    return error;\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                }\n            }\n            else {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signAmino\",\n                    \"params\": {\n                        \"signer\": signerAddress,\n                        \"chainId\": chainId.split(\":\")[1],\n                        \"sign_doc\": signDoc,\n                        \"signOptions\": signOptions\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        const resData = JSON.parse(ret.result);\n                        console.log(\"signdoc\", signDoc, resData.signDoc);\n                        signDoc.fee = resData.signDoc.fee;\n                        return { signed: signDoc, signature: resData.signature };\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                    return error;\n                }\n            }\n        });\n    }\n    signDirect(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const object = {\n                bodyBytes: this.bufferToHex(signDoc.bodyBytes),\n                authInfoBytes: this.bufferToHex(signDoc.authInfoBytes),\n                chainId: signDoc.chainId,\n                accountNumber: signDoc.accountNumber ? signDoc.accountNumber.toString() : null,\n                signOptions: signOptions ? signOptions : null\n            };\n            let data = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signDirect\",\n                \"params\": {\n                    \"signer\": signerAddress,\n                    \"chainId\": chainId.split(\":\")[1],\n                    \"sign_doc\": object,\n                }\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    const res = JSON.parse(ret.result);\n                    console.log(\"signdirect result\", res);\n                    signDoc.authInfoBytes = this.messageToBuffer(res.signDoc.authInfoBytes);\n                    return { signed: signDoc, signature: res.signature };\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    messageToBuffer(message) {\n        var buffer = Uint8Array.from([]);\n        try {\n            if (typeof message === \"string\") {\n                buffer = this.hexToUint8Array(message.replace(\"0x\", \"\"));\n            }\n            else {\n                buffer = Uint8Array.from(message);\n            }\n        }\n        catch (err) {\n            console.log(`messageToBuffer error: ${err}`);\n        }\n        return buffer;\n    }\n    bufferToHex(arr) {\n        let output = [...new Uint8Array(arr)]\n            .map(x => x.toString(16).padStart(2, '0'))\n            .join('');\n        return '0x' + output;\n    }\n    hexToUint8Array(hexString) {\n        if (hexString.length % 2 !== 0) {\n            throw \"Invalid hexString\";\n        }\n        var arrayBuffer = new Uint8Array(hexString.length / 2);\n        for (var i = 0; i < hexString.length; i += 2) {\n            var byteValue = parseInt(hexString.substr(i, 2), 16);\n            if (isNaN(byteValue)) {\n                throw \"Invalid hexString\";\n            }\n            arrayBuffer[i / 2] = byteValue;\n        }\n        return arrayBuffer;\n    }\n}\nexports.OKXCosmosProvider = OKXCosmosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTonProvider = void 0;\nconst _1 = require(\"./\");\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXTonProvider {\n    constructor(generator) {\n        this.statusChangeSubscriptions = [];\n        this.statusChangeErrorSubscriptions = [];\n        this.provider = generator;\n        this.provider.on(\"connect\", () => {\n            let tonWallet = this.wallet();\n            (0, core_1.logDebug)(\"OKXTONProvider event connect:\", JSON.stringify(tonWallet));\n            this.statusChangeSubscriptions.forEach(callback => callback(tonWallet));\n        });\n        this.provider.on(\"reconnect\", () => {\n            let tonWallet = this.wallet();\n            (0, core_1.logDebug)(\"OKXTONProvider event reconnect:\", JSON.stringify(tonWallet));\n            this.statusChangeSubscriptions.forEach(callback => callback(tonWallet));\n        });\n        this.provider.on(\"disconnect\", () => {\n            (0, core_1.logDebug)(\"OKXTONProvider event disconnect:\");\n            this.statusChangeSubscriptions.forEach(callback => callback(null));\n        });\n        this.provider.on(\"connect_error\", (error) => {\n            (0, core_1.logDebug)(\"OKXTONProvider event connect_error:\", JSON.stringify(error));\n            this.statusChangeErrorSubscriptions.forEach(errorsHandler => errorsHandler(error));\n        });\n    }\n    connected() {\n        if (this.provider.connected()) {\n            return !!this.provider.session.namespaces[\"ton\"];\n        }\n        return false;\n    }\n    account() {\n        try {\n            if (!this.provider.session) {\n                return null;\n            }\n            let tonNameSpace = this.provider.session.namespaces['ton'];\n            if (!tonNameSpace || !tonNameSpace.payload || !tonNameSpace.payload.ton_addr) {\n                return null;\n            }\n            let ton_addr = tonNameSpace.payload.ton_addr;\n            return {\n                address: ton_addr.address,\n                chain: ton_addr.network,\n                walletStateInit: ton_addr.walletStateInit,\n                publicKey: ton_addr.publicKey,\n            };\n        }\n        catch (e) {\n            (0, core_1.logDebug)(\"OKXTONProvider account  error:\", JSON.stringify(e));\n            return null;\n        }\n    }\n    wallet() {\n        if (this.connected()) {\n            try {\n                let sessionWallet = this.provider.session.wallet;\n                let tonDeviceInfo = {\n                    platform: sessionWallet.platform,\n                    appName: sessionWallet.appName,\n                    appVersion: sessionWallet.appVersion,\n                    maxProtocolVersion: sessionWallet.maxProtocolVersion,\n                    features: ['ton_sendTransaction'],\n                };\n                const wallet = {\n                    device: tonDeviceInfo,\n                    provider: \"http\",\n                    account: this.account()\n                };\n                let tonNameSpace = this.provider.session.namespaces['ton'];\n                if (tonNameSpace && tonNameSpace.payload && tonNameSpace.payload.ton_proof) {\n                    wallet.connectItems = {\n                        tonProof: tonNameSpace.payload.ton_proof\n                    };\n                }\n                (0, core_1.logDebug)(\"OKXTONProvider wallet :\", JSON.stringify(wallet));\n                return wallet;\n            }\n            catch (e) {\n                (0, core_1.logDebug)(\"OKXTONProvider wallet  error:\", JSON.stringify(e));\n                return null;\n            }\n        }\n        return null;\n    }\n    onStatusChange(callback, errorsHandler) {\n        this.statusChangeSubscriptions.push(callback);\n        if (errorsHandler) {\n            this.statusChangeErrorSubscriptions.push(errorsHandler);\n        }\n        return () => {\n            this.statusChangeSubscriptions = this.statusChangeSubscriptions.filter(item => item !== callback);\n            if (errorsHandler) {\n                this.statusChangeErrorSubscriptions = this.statusChangeErrorSubscriptions.filter(item => item !== errorsHandler);\n            }\n        };\n    }\n    sendTransaction(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (transaction.network && transaction.network !== core_1.TONCHAIN.MAINNET) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, 'OKXTONProvider sendTransaction network error');\n            }\n            if (!transaction.network) {\n                transaction.network = core_1.TONCHAIN.MAINNET;\n            }\n            if (this.provider.session) {\n                if (!transaction.from) {\n                    const accounts = this.provider.requestAccountsWithNamespace('ton');\n                    transaction.from = accounts[0];\n                }\n            }\n            const requestParams = {\n                method: \"ton_sendTransaction\",\n                params: transaction,\n            };\n            let chain = 'ton:' + core_1.TONCHAIN.MAINNET;\n            (0, core_1.logDebug)(\"OKXTONProvider sendTransaction transaction----:\", chain, JSON.stringify(requestParams));\n            return this.provider.request(requestParams, chain);\n        });\n    }\n}\nexports.OKXTonProvider = OKXTonProvider;\nexports.default = OKXTonProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTronProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXTronProvider {\n    constructor(provider) {\n        this.TRON_CHAIN_ID = \"tron:mainnet\";\n        this.provider = provider;\n    }\n    getChain(chainId) {\n        if (chainId == null) {\n            chainId = this.TRON_CHAIN_ID;\n        }\n        if (chainId != this.TRON_CHAIN_ID) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, \"The chainId:\" + chainId + \"is wrong for OKXTronProvider\");\n        }\n        return chainId;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e;\n        chainId = this.getChain(chainId);\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[core_1.NameSpaceKeyTron]) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        let extra = (_e = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces[core_1.NameSpaceKeyTron]) === null || _d === void 0 ? void 0 : _d.extra) === null || _e === void 0 ? void 0 : _e[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address\n        };\n    }\n    stringToHex(str) {\n        let hex = '';\n        for (let i = 0; i < str.length; i++) {\n            hex += str.charCodeAt(i).toString(16).padStart(2, '0');\n        }\n        return hex;\n    }\n    signMessage(data, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"tron_signMessage\",\n                \"params\": {\n                    \"message\": this.stringToHex(data)\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signMessageV2(data, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"tron_signMessageV2\",\n                \"params\": {\n                    \"message\": data\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let data = {\n                \"method\": \"tron_signTransaction\",\n                \"params\": transaction\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    let signedTx;\n                    if (typeof ret.result == \"string\") {\n                        signedTx = JSON.parse(ret.result);\n                    }\n                    else {\n                        signedTx = ret.result;\n                    }\n                    let realSignTx = {};\n                    realSignTx.visible = signedTx.visible;\n                    realSignTx.txID = signedTx.txID;\n                    let rawData = {};\n                    rawData.contract = signedTx.raw_data.contract;\n                    rawData.expiration = signedTx.raw_data.expiration;\n                    rawData.ref_block_bytes = signedTx.raw_data.ref_block_bytes;\n                    rawData.ref_block_hash = signedTx.raw_data.ref_block_hash;\n                    rawData.timestamp = signedTx.raw_data.timestamp;\n                    realSignTx.raw_data = rawData;\n                    realSignTx.raw_data_hex = signedTx.raw_data_hex;\n                    realSignTx.signature = signedTx.signature;\n                    return realSignTx;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signAndSendTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let data = {\n                \"method\": \"tron_signAndSendTransaction\",\n                \"params\": transaction\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n}\nexports.OKXTronProvider = OKXTronProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXUniversalProvider = void 0;\nconst eip155_1 = require(\"./provider/providers/eip155\");\nconst sui_1 = require(\"./provider/providers/sui\");\nconst constants_1 = require(\"./provider/constants\");\nconst eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\nconst client_1 = require(\"./packages/sign-client/client\");\nconst core_1 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"./packages/utils/namespaces\");\nconst solana_1 = __importDefault(require(\"./provider/providers/solana\"));\nconst btc_1 = __importDefault(require(\"./provider/providers/btc\"));\nconst aptos_1 = __importDefault(require(\"./provider/providers/aptos\"));\nconst ton_1 = __importDefault(require(\"./provider/providers/ton\"));\nconst cosmos_1 = __importDefault(require(\"./provider/providers/cosmos\"));\nconst tron_1 = __importDefault(require(\"./provider/providers/tron\"));\nconst utils_1 = require(\"./provider/utils\");\nconst packages_1 = require(\"./packages\");\nconst provider_1 = require(\"./provider\");\nclass OKXUniversalProvider {\n    static init(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider init() called');\n            (0, core_1.checkMetaData)(opts.dappMetaData);\n            // ignore rpc provider check by default\n            (0, utils_1.setGlobal)('disableProviderPing', true);\n            let provider;\n            if (window && window.okxConnectUniversalinwindow && window.okxConnectUniversalinwindow instanceof OKXUniversalProvider) {\n                (0, core_1.logDebug)('OKXUniversalConnect init() old called');\n                provider = window.okxConnectUniversalinwindow;\n            }\n            else {\n                (0, core_1.logDebug)('OKXUniversalConnect init() new called');\n                provider = new OKXUniversalProvider(opts);\n                yield provider.initialize();\n                if (window) {\n                    window.okxConnectUniversalinwindow = provider;\n                }\n            }\n            (0, core_1.getDefaultReporter)().configVersionAndSide('universalprovider-1.5.2', 'dapp', provider.providerOpts.dappMetaData.name);\n            return provider;\n        });\n    }\n    constructor(opts) {\n        this.rpcProviders = {};\n        this.events = new eventemitter3_1.default();\n        this.providerOpts = opts;\n    }\n    request(args, chain) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider request() called');\n            (0, core_1.reportLog)('OKXUniversalProvider request() called');\n            if (!this.connected()) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return yield this.getProvider(namespace).request(requestParam);\n        });\n    }\n    buildRequestParamFromRequest(args, chain) {\n        var _a;\n        (0, core_1.logDebug)(\"UniversalProvider request args >>>>>>>: \", chain, JSON.stringify(args));\n        let [namespace, chainId] = this.validateChain(chain);\n        if (!this.session) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Please call connect() before request()\");\n        }\n        let keyArr = Object.keys(this.session.namespaces);\n        if (!chain && keyArr && keyArr.length > 1) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Multiple chains have been linked, the request method requires chain`);\n        }\n        if (namespace == \"aptos\" && chainId == \"mainnet\") {\n            namespace = \"aptos\";\n            chainId = \"637\";\n        }\n        if (namespace == \"movement\" && chainId == \"testnet\") {\n            namespace = \"aptos\";\n            chainId = \"70000060\";\n        }\n        const requestParam = Object.assign(Object.assign({}, args), { chainId: `${namespace}:${chainId}`, redirect: (_a = args.redirect) !== null && _a !== void 0 ? _a : this.sessionConfig.redirect });\n        return { namespace, requestParam };\n    }\n    enable() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.client) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (!this.session) {\n                if (this.connectOpts) {\n                    yield this.connect(this.connectOpts);\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n                }\n            }\n            const accounts = yield this.requestAccounts();\n            return accounts;\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider disconnect() called');\n            (0, core_1.reportLog)('provider disconnect called');\n            if (!this.session) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n                let called = false;\n                const onRequestSent = () => __awaiter(this, void 0, void 0, function* () {\n                    if (!called) {\n                        called = true;\n                        yield this.disconnectAndEmit();\n                        yield this.cleanup();\n                        resolve();\n                        (0, core_1.logDebug)(\"UniversalProvider disconnect Disconnected\");\n                        (0, core_1.reportLog)('provider disconnect disconnected');\n                    }\n                });\n                try {\n                    yield this.client.disconnect();\n                    yield onRequestSent();\n                }\n                catch (e) {\n                    yield onRequestSent();\n                }\n            }));\n        });\n    }\n    disconnectAndEmit() {\n        var _a, _b;\n        this.client.engine.connectionManager.disconnect();\n        this.events.emit(\"disconnect\", { topic: (_a = this.session) === null || _a === void 0 ? void 0 : _a.topic });\n        this.events.emit(\"session_delete\", { topic: (_b = this.session) === null || _b === void 0 ? void 0 : _b.topic });\n    }\n    aptosChainNameToGeneralId(chainId) {\n        if (chainId == \"aptos:mainnet\") {\n            return \"aptos:637\";\n        }\n        else if (chainId == \"movement:testnet\") {\n            return \"aptos:70000060\";\n        }\n        else {\n            return chainId;\n        }\n    }\n    replaceAptos(opts) {\n        var _a, _b;\n        let aptosNameSpace = (_a = opts.namespaces) === null || _a === void 0 ? void 0 : _a[\"aptos\"];\n        if (aptosNameSpace != undefined) {\n            let realNS = this.replaceAptosInner(aptosNameSpace);\n            if (opts.namespaces != undefined && \"aptos\" in opts.namespaces && realNS != undefined) {\n                opts.namespaces.aptos = realNS;\n            }\n        }\n        let optionAptosNameSpace = (_b = opts.optionalNamespaces) === null || _b === void 0 ? void 0 : _b[\"aptos\"];\n        if (optionAptosNameSpace != undefined) {\n            let realOptionNS = this.replaceAptosInner(optionAptosNameSpace);\n            if (opts.optionalNamespaces != undefined && \"aptos\" in opts.optionalNamespaces && realOptionNS != undefined) {\n                opts.optionalNamespaces.aptos = realOptionNS;\n            }\n        }\n        return opts;\n    }\n    replaceAptosInner(aptosNameSpace) {\n        var _a;\n        if (aptosNameSpace != undefined) {\n            aptosNameSpace.chains = (_a = aptosNameSpace.chains) === null || _a === void 0 ? void 0 : _a.map(chainId => {\n                return this.aptosChainNameToGeneralId(chainId);\n            });\n            if (aptosNameSpace.defaultChain != undefined) {\n                aptosNameSpace.defaultChain = this.aptosChainNameToGeneralId(aptosNameSpace.defaultChain);\n            }\n        }\n        return aptosNameSpace;\n    }\n    replaceAptosGeneralIdWithNetName(chainId) {\n        if (chainId.includes(\"aptos:637\")) {\n            chainId = chainId.replace(\"aptos:637\", \"aptos:mainnet\");\n        }\n        else if (chainId.includes(\"aptos:70000060\")) {\n            chainId = chainId.replace(\"aptos:70000060\", \"movement:testnet\");\n        }\n        return chainId;\n    }\n    replaceSessionAptos(session) {\n        var _a;\n        let namespaces = (_a = session === null || session === void 0 ? void 0 : session.namespaces) === null || _a === void 0 ? void 0 : _a[\"aptos\"];\n        if (namespaces != undefined && namespaces.chains != undefined) {\n            namespaces.chains = namespaces.chains.map(chain => {\n                return this.replaceAptosGeneralIdWithNetName(chain);\n            });\n            namespaces.accounts = namespaces.accounts.map((account) => {\n                return this.replaceAptosGeneralIdWithNetName(account);\n            });\n            let extra = {};\n            Object.keys(namespaces.extra || {}).forEach((key, index) => {\n                let newKey = this.replaceAptosGeneralIdWithNetName(key);\n                extra[this.replaceAptosGeneralIdWithNetName(key)] = Object.values((session === null || session === void 0 ? void 0 : session.namespaces[\"aptos\"].extra) || {})[index];\n            });\n            namespaces.extra = extra;\n        }\n        (0, core_1.logDebug)(\"replaceSessionAptos\", session);\n    }\n    connected() {\n        (0, core_1.logDebug)('OKXUniversalProvider connected() called');\n        (0, core_1.reportLog)('provider connected called');\n        let disconnectInner = () => {\n            try {\n                this.cleanup();\n                this.client.engine.connectionManager.disconnect();\n            }\n            catch (e) {\n                (0, core_1.logDebug)(\"Error during disconnect:\", e);\n            }\n        };\n        try {\n            if (!this.session)\n                return false;\n            if (!this.client.engine.connectionManager.getCurrentConnectionReady()) {\n                disconnectInner();\n                return false;\n            }\n            return true;\n        }\n        catch (e) {\n            disconnectInner();\n            return false;\n        }\n    }\n    connectAndSign(opts, signRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() called');\n            const updatedOpts = Object.assign(Object.assign({}, opts), { signRequest });\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() opts:', JSON.stringify(opts));\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() signRequest:', JSON.stringify(signRequest));\n            return yield this.connect(updatedOpts);\n        });\n    }\n    connect(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider connect() called');\n            (0, core_1.reportLog)('provider connect called');\n            if (!this.client) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (this.connected()) {\n                return this.session;\n            }\n            opts = this.replaceAptos(opts);\n            (0, core_1.logDebug)(`OKXUniversalProvider connect >>>>`, JSON.stringify(opts));\n            if (opts.sessionConfig === undefined) {\n                opts.sessionConfig = {};\n            }\n            if (opts.sessionConfig.openUniversalUrl === undefined) {\n                opts.sessionConfig.openUniversalUrl = (0, core_1.isMobileUserAgent)();\n            }\n            this.setNamespaces(opts);\n            try {\n                (0, core_1.logDebug)(`UniversalProvider connect opts.stringify ====> ${JSON.stringify(opts)}`);\n                let session = yield this.client.connect(opts);\n                this.replaceSessionAptos(session);\n                (0, core_1.logDebug)(`UniversalProvider connect success ====> ${JSON.stringify(session)}`);\n                if (session) {\n                    this.session = session;\n                    this.client.session = session;\n                    (0, core_1.logDebug)(`OKXUniversalProvider connect success opts>>>>`, JSON.stringify(opts));\n                    this.onConnect();\n                    if (opts.signRequest && opts.signRequest.length > 0) {\n                        let requestItem = opts.signRequest[0];\n                        let signResponseList = [];\n                        if (typeof window !== \"undefined\" && window && window.okxConnectUniversalUIinwindow) { //from UI\n                            (0, core_1.logDebug)(`OKXUniversalProvider connect success, us UI SDK>>>>`);\n                            if (this.session.signResponse && this.session.signResponse.length > 0) { // >=6.96\n                                signResponseList = this.session.signResponse;\n                            }\n                        }\n                        else {\n                            (0, core_1.logDebug)(`OKXUniversalProvider connect success, us Universal SDK>>>>`);\n                            if (this.session.signResponse && this.session.signResponse.length > 0) { // >=6.96\n                                signResponseList = this.session.signResponse;\n                            }\n                            else {\n                                signResponseList.push((0, packages_1.creatNotSupportMethodItemReplay)(requestItem));\n                            }\n                        }\n                        (0, core_1.logDebug)(`UniversalProvider connect success connectRequestReply ====> ${JSON.stringify(signResponseList)}`);\n                        setTimeout(() => {\n                            this.events.emit(\"connect_signResponse\", signResponseList);\n                        }, 100);\n                    }\n                    return session;\n                }\n                return undefined;\n            }\n            catch (error) {\n                (0, core_1.logDebug)(`UniversalProvider connect error ====> `, JSON.stringify(error));\n                throw error;\n            }\n        });\n    }\n    syncAllAddresses() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if ((0, provider_1.syncAddressAvailable)(this.session.wallet)) {\n                return this.client.syncAllAddress();\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n            }\n        });\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    setDefaultChain(chain, rpcUrl) {\n        (0, core_1.logDebug)('OKXUniversalProvider setDefaultChain() called');\n        // chain = this.aptosChainNameToGeneralId(chain)\n        try {\n            // ignore without active session\n            if (!this.connected())\n                return;\n            const [namespace, chainId] = this.validateChain(chain);\n            const provider = this.getProvider(namespace);\n            provider.setDefaultChain(chainId, rpcUrl);\n        }\n        catch (error) {\n            // ignore the error if the fx is used prematurely before namespaces are set\n            if (!/Please call connect/.test(error.message))\n                throw error;\n        }\n    }\n    checkStorage() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let sessionInfoStr = yield this.getFromStore(\"connectSession\");\n            (0, core_1.logDebug)(sessionInfoStr);\n            if (sessionInfoStr) {\n                let sessionInfo = sessionInfoStr;\n                this.session = sessionInfo;\n                this.client.session = this.session;\n                this.sessionConfig = sessionInfo.sessionConfig;\n                this.client.sessionConfig = this.sessionConfig;\n                (0, core_1.logDebug)('[evm u-provider] do reconnection', this.session);\n                yield this.client.restoreconnect(sessionInfo);\n                this.createProviders();\n                this.registerEventListeners();\n                setTimeout(() => {\n                    this.events.emit(\"reconnect\", { session: this.session });\n                }, 100);\n                this.registerEventListeners();\n            }\n        });\n    }\n    initialize() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider initialize() called');\n            (0, core_1.reportLog)('provider initialize called');\n            const data = Object.assign({ url: window.location.hostname, origin: window.location.origin }, this.providerOpts.dappMetaData);\n            this.client = new client_1.SignClient(data, this.events);\n            yield this.checkStorage();\n        });\n    }\n    createProviders() {\n        if (!this.client) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n        }\n        if (!this.connected()) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Session not initialized. Please call connect() before enable()\");\n        }\n        const providersToCreate = [\n            ...new Set(Object.keys(this.session.namespaces).map((namespace) => (0, namespaces_1.parseNamespaceKey)(namespace))),\n        ];\n        providersToCreate.forEach((namespace) => {\n            if (!this.session)\n                return;\n            const namespacesValue = this.session.namespaces;\n            const currentNameSpace = namespacesValue[namespace];\n            (0, core_1.logDebug)(\"init eip155 >> \", currentNameSpace);\n            switch (namespace) {\n                case \"eip155\":\n                    const opts = {\n                        namespace: currentNameSpace\n                    };\n                    this.rpcProviders[namespace] = new eip155_1.Eip155Provider(opts, this.client, this.events);\n                    break;\n                case \"solana\":\n                    const opts1 = {\n                        namespace: currentNameSpace\n                    };\n                    let solanaProvider = new solana_1.default(opts1, \"solana\", this.client, this.events);\n                    this.rpcProviders[namespace] = solanaProvider;\n                    let sonicProvider = new solana_1.default(opts1, \"sonic\", this.client, this.events);\n                    this.rpcProviders['sonic'] = sonicProvider;\n                    let svmProvider = new solana_1.default(opts1, \"svm\", this.client, this.events);\n                    this.rpcProviders['svm'] = svmProvider;\n                    // this.rpcProviders[namespace] = new SolanaProvider(opts1, () => { return this.session; });\n                    break;\n                case \"ton\":\n                    const optsTon = {\n                        namespace: currentNameSpace\n                    };\n                    let tonProvider = new ton_1.default(optsTon, this.client, this.events);\n                    this.rpcProviders[namespace] = tonProvider;\n                    break;\n                case \"sui\":\n                    const optsSui = {\n                        namespace: currentNameSpace\n                    };\n                    let suiProvider = new sui_1.SuiProvider(optsSui, this.client, this.events);\n                    suiProvider.name = \"sui\";\n                    this.rpcProviders[namespace] = suiProvider;\n                    break;\n                case \"btc\":\n                    const optsBtc = {\n                        namespace: currentNameSpace\n                    };\n                    let btcProvider = new btc_1.default(optsBtc, \"btc\", this.client, this.events);\n                    this.rpcProviders[\"btc\"] = btcProvider;\n                    let fbProvider = new btc_1.default(optsBtc, \"fractal\", this.client, this.events);\n                    this.rpcProviders[\"fractal\"] = fbProvider;\n                    break;\n                case \"aptos\":\n                    let aptosProvider = new aptos_1.default({\n                        namespace: currentNameSpace\n                    }, \"aptos\", this.client, this.events);\n                    this.rpcProviders[namespace] = aptosProvider;\n                    let moveProvider = new aptos_1.default({\n                        namespace: currentNameSpace\n                    }, \"movement\", this.client, this.events);\n                    this.rpcProviders[\"movement\"] = moveProvider;\n                    break;\n                case \"cosmos\":\n                    let cosmosProvider = new cosmos_1.default({\n                        namespace: currentNameSpace\n                    }, this.client, this.events);\n                    this.rpcProviders[namespace] = cosmosProvider;\n                    break;\n                case \"tron\":\n                    let tronProvider = new tron_1.default({\n                        namespace: currentNameSpace\n                    }, this.client, this.events);\n                    this.rpcProviders[namespace] = tronProvider;\n                    break;\n            }\n        });\n    }\n    registerEventListeners() {\n        if (typeof this.client === \"undefined\") {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client is not initialized\");\n        }\n        this.client.engine.addDisconnectListener(() => {\n            this.disconnectAndEmit();\n            this.cleanup();\n        });\n        this.on(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, (caip2ChainId) => {\n            this.onChainChanged(caip2ChainId);\n        });\n        this.on(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, (nameSpaces) => {\n            if (nameSpaces) {\n                const nameSpacekey = Object.keys(nameSpaces)[0];\n                if (this.session) {\n                    this.session.namespaces[nameSpacekey] = nameSpaces[nameSpacekey];\n                    if (this.session) {\n                        this.persist(\"connectSession\", this.session);\n                        this.events.emit(\"session_update\", this.session);\n                    }\n                    (0, core_1.logDebug)(\"PROVIDER_EVENTS.UPDATE_NAMESPACES this.session... ->>>\", JSON.stringify(this.session));\n                }\n            }\n        });\n    }\n    getProvider(namespace) {\n        (0, core_1.logDebug)('current get providers', this.rpcProviders);\n        (0, core_1.logDebug)('query namespace: ', namespace);\n        return this.rpcProviders[namespace];\n    }\n    setNamespaces(params) {\n        this.connectOpts = params;\n        const { namespaces, sessionConfig } = params;\n        const data = {\n            origin: window.location.origin,\n            url: window.location.hostname,\n            name: this.providerOpts.dappMetaData.name,\n            icon: this.providerOpts.dappMetaData.icon,\n        };\n        this.sessionConfig = Object.assign({ dappInfo: data }, sessionConfig);\n        (0, core_1.logDebug)(\"setNamespaces sessionConfig>>>\", this.sessionConfig);\n        this.client.sessionConfig = this.sessionConfig;\n        this.persist(\"sessionConfig\", sessionConfig);\n    }\n    validateChain(chain) {\n        var _a;\n        let [namespace, chainId] = (chain === null || chain === void 0 ? void 0 : chain.split(\":\")) || [\"\", \"\"];\n        if (!this.session || !this.session.namespaces || !Object.keys(this.session.namespaces).length) {\n            (0, core_1.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        if (namespace) {\n            if (!this.isChainNamespaceInSession(namespace)) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace '${namespace}' is not configured. Please call connect() first with namespace config.`);\n            }\n            if (chainId && chain) {\n                (0, core_1.logDebug)('this.session.namespaces -->> ', namespace, JSON.stringify(this.session.namespaces));\n                const chainsArr = (_a = this.session.namespaces[namespace]) === null || _a === void 0 ? void 0 : _a.chains;\n                (0, core_1.logDebug)('get chainsArr & chain', JSON.stringify(chainsArr), chain);\n                if (chainsArr && !chainsArr.includes(chain)) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace not include the chain '${chain}'`);\n                }\n            }\n        }\n        if (namespace && chainId) {\n            (0, core_1.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        let defaultNamespace = (0, namespaces_1.parseNamespaceKey)(Object.keys(this.session.namespaces)[0]);\n        const defaultChain = this.rpcProviders[defaultNamespace].getDefaultChain();\n        (0, core_1.logDebug)('get default chain:', defaultChain);\n        return [defaultNamespace, defaultChain];\n    }\n    isChainNamespaceInSession(namespaceStr) {\n        var _a, _b;\n        if (Object.keys(((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces) || {})\n            .map((key) => (0, namespaces_1.parseNamespaceKey)(key))\n            .includes(namespaceStr)) {\n            return true;\n        }\n        let isChainNamespaceInSession = false;\n        Object.values(((_b = this.session) === null || _b === void 0 ? void 0 : _b.namespaces) || {})\n            .forEach(namespace => {\n            namespace.chains.forEach(chain => {\n                if (chain.split(\":\")[0] == namespaceStr) {\n                    isChainNamespaceInSession = true;\n                }\n            });\n        });\n        return isChainNamespaceInSession;\n    }\n    requestAccountsWithNamespace(namespace) {\n        return this.getProvider(namespace).requestAccounts();\n    }\n    requestDefaultChainWithNamespace(namespace) {\n        return this.getProvider(namespace).getDefaultChain();\n    }\n    requestAccounts() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const [namespace] = this.validateChain();\n            return yield this.getProvider(namespace).requestAccounts();\n        });\n    }\n    onChainChanged(caip2Chain) {\n        var _a;\n        if (!((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces))\n            return;\n        const [namespace, chainId] = this.validateChain(caip2Chain);\n        if (!chainId)\n            return;\n        if (this.session.namespaces[namespace]) {\n            this.session.namespaces[namespace].defaultChain = chainId;\n            this.persist(\"connectSession\", this.session);\n        }\n        this.events.emit(\"chainChanged\", chainId);\n    }\n    onConnect() {\n        this.createProviders();\n        if (this.session) {\n            this.persist(\"connectSession\", this.session);\n        }\n        this.events.emit(\"connect\", { session: this.session });\n        this.registerEventListeners();\n    }\n    cleanup() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.session = undefined;\n            this.client.session = undefined;\n            this.sessionProperties = undefined;\n            this.persist(\"optionalNamespaces\", undefined);\n            this.persist(\"sessionProperties\", undefined);\n            this.persist(\"connectSession\", undefined);\n        });\n    }\n    persist(key, data) {\n        (0, core_1.logDebug)('[evm u-provider] persisit data', key, data);\n        return this.client.engine.connectionManager.saveSessionContent(key, data);\n    }\n    getFromStore(key) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.client.engine.connectionManager.getSessionContent(key);\n        });\n    }\n    showRequestModal(args, chain) {\n        try {\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return this.getProvider(namespace).showRequestModal(requestParam);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n}\nexports.OKXUniversalProvider = OKXUniversalProvider;\nexports.default = OKXUniversalProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTronProvider = exports.OKXTonProvider = exports.OKXCosmosProvider = exports.OKXBtcProvider = exports.OKXUniversalProvider = void 0;\n__exportStar(require(\"./provider/types\"), exports);\n__exportStar(require(\"./packages\"), exports);\nvar OKXUniversalProvider_1 = require(\"./OKXUniversalProvider\");\nObject.defineProperty(exports, \"OKXUniversalProvider\", { enumerable: true, get: function () { return OKXUniversalProvider_1.OKXUniversalProvider; } });\nvar OKXBtcProvider_1 = require(\"./OKXBtcProvider\");\nObject.defineProperty(exports, \"OKXBtcProvider\", { enumerable: true, get: function () { return OKXBtcProvider_1.OKXBtcProvider; } });\nvar OKXCosmosProvider_1 = require(\"./OKXCosmosProvider\");\nObject.defineProperty(exports, \"OKXCosmosProvider\", { enumerable: true, get: function () { return OKXCosmosProvider_1.OKXCosmosProvider; } });\nvar OKXTonProvider_1 = require(\"./OKXTonProvider\");\nObject.defineProperty(exports, \"OKXTonProvider\", { enumerable: true, get: function () { return OKXTonProvider_1.OKXTonProvider; } });\nvar OKXTronProvider_1 = require(\"./OKXTronProvider\");\nObject.defineProperty(exports, \"OKXTronProvider\", { enumerable: true, get: function () { return OKXTronProvider_1.OKXTronProvider; } });\n__exportStar(require(\"@okxconnect/core\"), exports);\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./utils\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SignClient = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"../utils/namespaces\");\nconst ConnectMethodUtils_1 = require(\"../utils/ConnectMethodUtils\");\nconst constants_1 = require(\"../../provider/constants\");\nclass SignClient extends core_1.ISignClient {\n    constructor(metaData, events) {\n        super(metaData);\n        // ---------- Engine ----------------------------------------------- //\n        this.connect = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    var connectRequest = [];\n                    (0, core_1.logDebug)(`client connect params >>>`, JSON.stringify(params));\n                    var requestAccountItem = {\n                        name: \"requestAccounts\",\n                        requiredNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.namespaces),\n                        optionalNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.optionalNamespaces),\n                    };\n                    this.engine.setSessionConnectingListener(() => {\n                        (0, core_1.logDebug)(`sessionConnectingListener >>>`);\n                        this.events.emit(constants_1.PROVIDER_EVENTS.SESSION_CONNECTING);\n                    });\n                    if (params.signRequest) {\n                        requestAccountItem.connectRequestMethods = yield (0, ConnectMethodUtils_1.connectMethodsToConnectWalletMethods)(params.signRequest, requestAccountItem.requiredNamespaces);\n                    }\n                    connectRequest.push(requestAccountItem);\n                    (0, core_1.logDebug)(`client connect connectRequest >>>`, JSON.stringify(connectRequest));\n                    this.engine.universalConnect(connectRequest, Object.assign({ dappInfo: this.metadata }, params.sessionConfig), (info) => {\n                        if (info && info.connectRequest) {\n                            (0, core_1.logDebug)(`universalConect info.connectRequest :`, info.connectRequest);\n                            (0, core_1.logDebug)(`universalConect url:`, (0, core_1.getOKXLink)(info.connectRequest, this.sessionConfig.useMini));\n                            this.events.emit(\"display_uri\", (0, core_1.getOKXLink)(info.connectRequest, this.sessionConfig.useMini));\n                            this.events.emit(\"short_display_uri\", (0, core_1.getAppWalletShortDeepLink)(info.connectRequest.topic, info.connectRequest.clientId));\n                            (0, core_1.logDebug)(`universalConect EngineConnectInfo  ${JSON.stringify(info)}`);\n                            this.events.emit(\"okx_engine_connect_params\", info);\n                        }\n                    }).then((session) => __awaiter(this, void 0, void 0, function* () {\n                        (0, namespaces_1.fillParamsToSession)(session, params.namespaces, params.optionalNamespaces, this.sessionConfig);\n                        (0, core_1.logDebug)(`signClient: connect: session ${JSON.stringify(session)}`);\n                        if (params.signRequest) {\n                            yield (0, ConnectMethodUtils_1.connectMethodsResponseUpdate)(session, params.signRequest);\n                        }\n                        resolve(session);\n                    })).catch((e) => {\n                        (0, core_1.logDebug)(`signClient: connect: catch ${JSON.stringify(e)}`);\n                        this.events.emit(\"connect_error\", e);\n                        reject(e);\n                    });\n                }\n                catch (error) {\n                    (0, core_1.logDebug)(`signClient: connect:  ${JSON.stringify(error)}`);\n                    reject(error);\n                }\n            }));\n        });\n        this.restoreconnect = (sessionConfig) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.restoreconnect(sessionConfig, (session) => {\n                    resolve(session);\n                });\n            });\n        });\n        this.reject = (params) => __awaiter(this, void 0, void 0, function* () {\n            //   try {\n            //     return await this.engine.reject(params);\n            //   } catch (error: any) {\n            //     this.logger.error(error.message);\n            //     throw error;\n            //   }\n        });\n        //\n        // public update: ISignClient[\"update\"] = async (params) => {\n        //   return\n        // //   try {\n        // //     return await this.engine.update(params);\n        // //   } catch (error: any) {\n        // //     this.logger.error(error.message);\n        // //     throw error;\n        // //   }\n        // };\n        this.request = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                (0, core_1.logDebug)(\"clint request --params>>>> >\", this.engine.connectionManager.getCurrentConnectionReady(), (_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl, JSON.stringify(params));\n                try {\n                    // this.sessionConfig\n                    if (((_b = this.sessionConfig) === null || _b === void 0 ? void 0 : _b.openUniversalUrl) && (0, core_1.isIos)()) {\n                        this.openOKXWallet();\n                    }\n                    yield this.engine.send(params, {\n                        resolve: (response) => {\n                            delete response.requestId;\n                            (0, core_1.logDebug)(\"clint request --response >\", JSON.stringify(response));\n                            if (('error' in response) && response.error) {\n                                let error = response.error;\n                                reject(new core_1.OKXConnectError(response.error.code, response.method + \":\" + error.message));\n                            }\n                            else {\n                                resolve(response);\n                            }\n                        },\n                        onAck: () => {\n                            var _a;\n                            if (!(0, core_1.isIos)() && ((_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl)) {\n                                this.openOKXWallet();\n                            }\n                        }\n                    });\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }));\n        });\n        // public emit: ISignClient[\"emit\"] = async (params) => {\n        //     try {\n        //         // return await this.engine.emit(params);\n        //     } catch (error: any) {\n        //         throw error;\n        //     }\n        // };\n        this.disconnect = () => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.send({\n                    method: \"disconnect\"\n                }, {\n                    onAck: () => {\n                        resolve();\n                    }\n                }, undefined, 86400000).catch((error) => {\n                    console.log(`disconnect : ${JSON.stringify(error)}`);\n                    reject(error);\n                });\n            });\n        });\n        this.engine = new core_1.Engine(new core_1.ConnectionManager(metaData.name));\n        this.events = events;\n        this.metadata = metaData;\n    }\n    openOKXWallet() {\n        var _a;\n        // if (this.openUniversalUrl){\n        (0, core_1.logDebug)('bridge-provider ==>> connect_5');\n        if ((_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.useMini) {\n            let url = (0, core_1.getTelegramWalletTWAUrl)(undefined, this.sessionConfig.tmaReturnUrl);\n            (0, core_1.openOKXTMAWalletlinkWithFallback)(url);\n        }\n        else {\n            (0, core_1.openOKXDeeplink)(core_1.standardDeeplink);\n        }\n        // }\n    }\n    syncAllAddress() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.send({\n                    method: \"sync_all_addresses\"\n                }, {\n                    resolve: (response) => {\n                        delete response.requestId;\n                        (0, core_1.logDebug)(\"clint syncAllAddress --response >\", JSON.stringify(response));\n                        if (('error' in response) && response.error) {\n                            let error = response.error;\n                            reject(new core_1.OKXConnectError(response.error.code, response.method + \":\" + error.message));\n                        }\n                        else {\n                            let allAddressStr = response.result;\n                            resolve((0, ConnectMethodUtils_1.syncResoonseToRequire)(allAddressStr));\n                        }\n                    }\n                }).catch((error) => {\n                    console.log(`disconnect : ${JSON.stringify(error)}`);\n                    reject(error);\n                });\n            });\n        });\n    }\n}\nexports.SignClient = SignClient;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.connectSupportMethods = void 0;\nexports.creatNotSupportMethodItemReplay = creatNotSupportMethodItemReplay;\nexports.connectMethodsAdaptOldVersion = connectMethodsAdaptOldVersion;\nexports.connectMethodsResponseUpdate = connectMethodsResponseUpdate;\nexports.connectMethodsToConnectWalletMethods = connectMethodsToConnectWalletMethods;\nexports.syncResoonseToRequire = syncResoonseToRequire;\nconst core_1 = require(\"@okxconnect/core\");\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst uint8array_extras_1 = require(\"uint8array-extras\");\nconst provider_1 = require(\"../../provider\");\nfunction isArray(value) {\n    return typeof value === \"object\" && value !== null && Array.isArray(value);\n}\nfunction isRecord(value) {\n    return typeof value === \"object\" && value !== null && !Array.isArray(value);\n}\n// \"wallet_addEthereumChain\",\nexports.connectSupportMethods = Object.freeze([\n    \"personal_sign\",\n    \"solana_signMessage\",\n    \"sui_signMessage\",\n    \"sui_signPersonalMessage\",\n    \"btc_signMessage\",\n    \"aptos_signMessage\",\n    \"cosmos_signArbitrary\",\n    \"tron_signMessage\",\n    \"tron_signMessageV2\",\n    \"sync_all_addresses\"\n]);\nfunction creatNotSupportMethodItemReplay(requestParams) {\n    let notSupportError = new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n    var errorItem = {\n        method: requestParams.method,\n        chainId: requestParams.chainId,\n        error: {\n            code: notSupportError.code,\n            message: notSupportError.message\n        },\n    };\n    return errorItem;\n}\nfunction connectMethodsAdaptOldVersion(requestParams, session) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b, _c, _d, _e;\n        try {\n            (0, core_1.logDebug)(\"connectMethodsAdaptOldVersion start params :\", JSON.stringify(requestParams));\n            let callBackParams = {};\n            if (requestParams.method === \"solana_signMessage\") {\n                let solAccount = (_a = session.namespaces[core_1.NameSpaceKeySOL]) === null || _a === void 0 ? void 0 : _a.accounts.filter(function (account1) {\n                    return account1.startsWith(requestParams.chainId);\n                })[0];\n                const solAddress = (0, provider_1.fromAccountToAddress)(solAccount);\n                if (requestParams.params && solAddress && \"message\" in requestParams.params) {\n                    let realMessage = requestParams.params.message;\n                    if (((_b = session.wallet) === null || _b === void 0 ? void 0 : _b.appName) == \"OKX Wallet\") {\n                        realMessage = bs58_1.default.encode((0, uint8array_extras_1.stringToUint8Array)(realMessage));\n                    }\n                    requestParams.params = {\n                        message: realMessage,\n                        \"pubkey\": solAddress\n                    };\n                    callBackParams = {\n                        publicKey: solAddress\n                    };\n                    (0, core_1.logDebug)(\"solana_signMessage account and address:\", JSON.stringify(solAccount), solAddress);\n                    (0, core_1.logDebug)(\"solana_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"sui_signMessage\" || requestParams.method === \"sui_signPersonalMessage\") {\n                if (\"message\" in requestParams.params && requestParams.params.message) {\n                    let suiMessage = JSON.parse(JSON.stringify(requestParams.params.message));\n                    let convertedArray = Object.values(suiMessage);\n                    let uint8Array = new Uint8Array(convertedArray);\n                    let decoder = new TextDecoder(\"utf8\");\n                    let b64encoded = btoa(decoder.decode(uint8Array));\n                    requestParams.params = {\n                        message: atob(b64encoded),\n                    };\n                    console.log(\"sui_signMessag suiMessagee suiMessageb64:>>>>\", JSON.stringify(requestParams.params), b64encoded);\n                    if (requestParams.method === \"sui_signMessage\") {\n                        callBackParams = {\n                            \"messageBytes\": b64encoded,\n                            \"signature\": \"\"\n                        };\n                    }\n                    else if (requestParams.method === \"sui_signPersonalMessage\") {\n                        callBackParams = {\n                            \"bytes\": b64encoded,\n                            \"signature\": \"\"\n                        };\n                    }\n                    (0, core_1.logDebug)(\"sui_signMessage/sui_signPersonalMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"btc_signMessage\") {\n                let btcAccounts = (_c = session.namespaces[core_1.NameSpaceKeyBtc]) === null || _c === void 0 ? void 0 : _c.accounts.filter(function (account2) {\n                    return account2.startsWith(requestParams.chainId);\n                });\n                let btcAccount = btcAccounts[0];\n                const btcAddress = (0, provider_1.fromAccountToAddress)(btcAccount);\n                (0, core_1.logDebug)(\"btc_signMessage account and address:\", JSON.stringify(btcAccount), btcAddress);\n                if (btcAddress) {\n                    if (\"message\" in requestParams.params && requestParams.params.message && typeof requestParams.params.message === 'string') {\n                        requestParams.params = {\n                            from: btcAddress,\n                            signStr: requestParams.params.message\n                        };\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                    }\n                    requestParams.params[\"from\"] = btcAddress;\n                    (0, core_1.logDebug)(\"btc_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"aptos_signMessage\") {\n                let paramData = requestParams.params;\n                let aptosAccount = (_d = session.namespaces[core_1.NameSpaceKeyAptos]) === null || _d === void 0 ? void 0 : _d.accounts.filter(function (account3) {\n                    return account3.startsWith(requestParams.chainId);\n                })[0];\n                let aptosAddress = (0, provider_1.fromAccountToAddress)(aptosAccount);\n                if (paramData && aptosAddress) {\n                    let prefix = \"APTOS\";\n                    let message = \"\", nonce = \"\";\n                    var fullMessage = prefix;\n                    let application = window.location.protocol + \"//\" + window.location.hostname;\n                    if (\"address\" in paramData && paramData.address) {\n                        fullMessage += \"\\naddress: \" + aptosAddress;\n                    }\n                    if (\"application\" in paramData && paramData.application) {\n                        fullMessage += \"\\napplication: \" + application;\n                    }\n                    let aptosChainId = 1;\n                    if (\"chainId\" in paramData && paramData.chainId) {\n                        if (paramData.chainId == \"aptos:mainnet\") {\n                            aptosChainId = 1;\n                        }\n                        else if (paramData.chainId == \"movement:testnet\") {\n                            aptosChainId = 2;\n                        }\n                        fullMessage += \"\\nchainId: \" + aptosChainId;\n                    }\n                    if (\"message\" in paramData) {\n                        fullMessage += \"\\nmessage: \" + paramData.message;\n                        message = paramData.message;\n                    }\n                    if (\"nonce\" in paramData) {\n                        fullMessage += \"\\nnonce: \" + paramData.nonce;\n                        nonce = paramData.nonce;\n                    }\n                    const utf8Array = new TextEncoder().encode(fullMessage);\n                    const hex = Array.from(utf8Array)\n                        .map(byte => byte.toString(16).padStart(2, \"0\"))\n                        .join(\"\");\n                    requestParams.params = {\n                        \"message\": hex,\n                    };\n                    (0, core_1.logDebug)(\"aptos_signMessage requestParams:\", JSON.stringify(requestParams));\n                    callBackParams = {\n                        address: aptosAddress,\n                        application: application,\n                        chainId: aptosChainId,\n                        fullMessage: fullMessage,\n                        message: message,\n                        nonce: nonce,\n                        prefix: prefix,\n                        signature: \"\",\n                    };\n                    (0, core_1.logDebug)(\"aptos_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"cosmos_signArbitrary\") {\n                let cosmosAccount = (_e = session === null || session === void 0 ? void 0 : session.namespaces[core_1.NameSpaceKeyCosmos]) === null || _e === void 0 ? void 0 : _e.accounts.filter(function (account_cosmos) {\n                    return account_cosmos.startsWith(requestParams.chainId);\n                })[0];\n                const cosmosAddress = (0, provider_1.fromAccountToAddress)(cosmosAccount);\n                let cosmosData = requestParams.params[\"message\"];\n                const cosmosBase64Encoded = (0, uint8array_extras_1.stringToBase64)(cosmosData);\n                (0, core_1.logDebug)(\"cosmos_signArbitrary account and address:\", JSON.stringify(cosmosAccount), cosmosAddress);\n                (0, core_1.logDebug)(\"cosmos_signArbitrary cosmosBase64Encoded:\", cosmosBase64Encoded);\n                if (cosmosData && cosmosAddress) {\n                    const signDoc = {\n                        chain_id: \"\",\n                        account_number: \"0\",\n                        sequence: \"0\",\n                        fee: {\n                            gas: \"0\",\n                            amount: []\n                        },\n                        msgs: [{\n                                \"type\": \"sign/MsgSignData\",\n                                \"value\": {\n                                    \"signer\": cosmosAddress,\n                                    \"data\": cosmosBase64Encoded\n                                }\n                            }],\n                        memo: \"\"\n                    };\n                    requestParams.params = {\n                        \"signer\": cosmosAddress,\n                        \"chain_id\": requestParams.chainId.split(\":\")[1],\n                        \"data\": signDoc\n                    };\n                    (0, core_1.logDebug)(\"cosmos_signArbitrary callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            (0, core_1.logDebug)(\"sol_handleSignatureData end params:\", JSON.stringify(requestParams));\n        }\n        catch (error) {\n            throw error;\n        }\n    });\n}\nfunction connectMethodsResponseUpdate(session, requestParams) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a;\n        try {\n            if (session.signResponse) {\n                (0, core_1.logDebug)(\"connectMethodsResponseUpdate signResponse:\", JSON.stringify(session.signResponse));\n                (0, core_1.logDebug)(\"connectMethodsResponseUpdate session.namespaces:\", JSON.stringify(session.namespaces));\n                for (const methodItem of session.signResponse) {\n                    (0, core_1.logDebug)(\"connectMethodsResponseUpdate methodItem:\", JSON.stringify(methodItem));\n                    if (\"result\" in methodItem) {\n                        if (methodItem.method === \"solana_signMessage\") {\n                            let solanaSuccessData = methodItem.result;\n                            (0, core_1.logDebug)(\"solana_signMessage methodItem.chainId:\", methodItem.chainId);\n                            let account = (_a = session.namespaces[core_1.NameSpaceKeySOL]) === null || _a === void 0 ? void 0 : _a.accounts.filter(function (account) {\n                                (0, core_1.logDebug)(\"solana_signMessage account:\", account);\n                                return account.startsWith(methodItem.chainId);\n                            })[0];\n                            (0, core_1.logDebug)(\"solana_signMessage result account:\", solanaSuccessData, account);\n                            if (solanaSuccessData && account) {\n                                methodItem.result = {\n                                    \"signature\": bs58_1.default.decode(solanaSuccessData),\n                                    \"publicKey\": (0, provider_1.fromAccountToAddress)(account)\n                                };\n                            }\n                        }\n                        else if (methodItem.method === \"sui_signMessage\" || methodItem.method === \"sui_signPersonalMessage\") {\n                            let suiMethod = requestParams.filter(function (requestMethod) {\n                                return requestMethod.method === methodItem.method;\n                            })[0];\n                            if (suiMethod && suiMethod.params && \"message\" in suiMethod.params) {\n                                let suiMessage = suiMethod.params.message;\n                                let suiMessageb64 = btoa(suiMessage);\n                                console.log(\"sui_signMessag suiMessagee suiMessageb64:>>>>\", suiMessage, suiMessageb64);\n                                if (methodItem.method === \"sui_signMessage\") {\n                                    methodItem.result = {\n                                        \"messageBytes\": suiMessageb64,\n                                        \"signature\": methodItem.result\n                                    };\n                                }\n                                else if (methodItem.method === \"sui_signPersonalMessage\") {\n                                    methodItem.result = {\n                                        \"bytes\": suiMessageb64,\n                                        \"signature\": methodItem.result\n                                    };\n                                }\n                            }\n                        }\n                        else if (methodItem.method === \"aptos_signMessage\") {\n                            if (methodItem.chainId === \"aptos:637\") {\n                                methodItem.chainId = \"aptos:mainnet\";\n                            }\n                            else if (methodItem.chainId === \"aptos:70000060\") {\n                                methodItem.chainId = \"movement:testnet\";\n                            }\n                            methodItem.result = JSON.parse(methodItem.result);\n                            console.log(\"aptos_signMessage result methodItem.result before:>>>>\", JSON.stringify(methodItem.result));\n                            if (methodItem.result && \"signature\" in methodItem.result) {\n                                let aptosSignature = methodItem.result.signature;\n                                if (aptosSignature && aptosSignature.startsWith(\"0x\")) {\n                                    aptosSignature = aptosSignature.slice(2, aptosSignature.length);\n                                    methodItem.result.signature = aptosSignature;\n                                }\n                            }\n                            console.log(\"aptos_signMessage result methodItem.result after:>>>>\", JSON.stringify(methodItem.result));\n                        }\n                        else if (methodItem.method === \"cosmos_signArbitrary\") {\n                            methodItem.result = JSON.parse(methodItem.result);\n                        }\n                        else if (methodItem.method == 'sync_all_addresses') {\n                            methodItem.result = syncResoonseToRequire(methodItem.result);\n                        }\n                    }\n                }\n            }\n        }\n        catch (error) {\n            (0, core_1.logDebug)(\"connectMethodsResponseUpdate signResponse Error:\", JSON.stringify(error));\n            throw error;\n        }\n    });\n}\nfunction connectMethodsToConnectWalletMethods(params, requireNameSpace) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            (0, core_1.logDebug)(\"connectMethodsToConnectWalletMethods requestMethods:\", JSON.stringify(params));\n            const result = [];\n            //TODO  后面需要打开限制\n            if (params && params.length > 1) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connectAndSign/openModalAndSign signRequest only support one data`);\n            }\n            if (!requireNameSpace && params && params.length > 0) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error , RequestMethods cannot be added when the NameSpace is empty`);\n            }\n            // check chianId\n            for (const methodItem of params) {\n                if (methodItem.method === \"aptos_signMessage\") { //update chainId\n                    if (methodItem.chainId === \"aptos:mainnet\") {\n                        methodItem.chainId = \"aptos:637\";\n                    }\n                    else if (methodItem.chainId === \"movement:testnet\") {\n                        methodItem.chainId = \"aptos:70000060\";\n                    }\n                }\n                // check chianId\n                if (methodItem.method === \"wallet_addEthereumChain\") {\n                    var includeEip155 = requireNameSpace === null || requireNameSpace === void 0 ? void 0 : requireNameSpace.some(space => space.namespace.includes(\"eip155\"));\n                    if (!includeEip155) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error, When using '${methodItem.method}', the EVM chain needs to be included in the NameSpace`);\n                    }\n                }\n                else if (methodItem.method === \"sync_all_addresses\") {\n                    if ((0, provider_1.syncAddressHostAvailable)()) {\n                        methodItem.chainId = \"\";\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                    }\n                }\n                else {\n                    const includeChain = !!(requireNameSpace === null || requireNameSpace === void 0 ? void 0 : requireNameSpace.some(space => space.chains.some(chain => chain.includes(`${methodItem.chainId}`))));\n                    if (!includeChain) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error, When using '${methodItem.method}', NameSpace must contain '${methodItem.chainId}'`);\n                    }\n                }\n            }\n            for (const item of params) {\n                if (!exports.connectSupportMethods.includes(item.method)) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect requestMethods not support method, method: '${item.method}'`);\n                }\n                if (item.method === \"wallet_addEthereumChain\") {\n                    if (Array.isArray(item.params)) {\n                        const paramsArr = item.params;\n                        if (paramsArr && paramsArr.length === 1) {\n                            const firstParam = paramsArr[0];\n                            if (isRecord(firstParam)) {\n                                item.params = firstParam;\n                            }\n                        }\n                        else if (paramsArr && paramsArr.length > 1) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params only support one data, method: '${item.method}'`);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is nil, method: '${item.method}'`);\n                        }\n                    }\n                }\n                else if (item.method === \"personal_sign\") {\n                    if (isArray(item.params)) {\n                        if (item.params && item.params.length !== 1) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params error,  method: '${item.method}' `);\n                        }\n                        let firstObj = item.params[0];\n                        if (firstObj && typeof firstObj === 'string') {\n                            item.params = {\n                                message: firstObj\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                }\n                else if (item.method === \"sui_signMessage\" || item.method === \"sui_signPersonalMessage\") {\n                    if (isRecord(item.params) && 'message' in item.params) {\n                        if (item.params.message) {\n                            (0, core_1.logDebug)(\"sui_signMessage item.params.message :\", item.params.message);\n                            let message = JSON.parse(JSON.stringify(item.params.message));\n                            let convertedArray = Object.values(message);\n                            let uint8Array = new Uint8Array(convertedArray);\n                            let decoder = new TextDecoder(\"utf8\");\n                            let b64encoded = btoa(decoder.decode(uint8Array));\n                            item.params.message = atob(b64encoded);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"solana_signMessage\") {\n                    if (isRecord(item.params) && 'message' in item.params) {\n                        if (item.params.message && typeof item.params.message === 'string') {\n                            item.params[\"bs58Message\"] = bs58_1.default.encode((0, uint8array_extras_1.stringToUint8Array)(item.params.message));\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"aptos_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (item.chainId && (item.chainId === \"aptos:637\" || item.chainId === \"aptos:70000060\")) {\n                            var aptosParams = item.params;\n                            var currentURL = window.location.protocol + \"//\" + window.location.hostname;\n                            let signChainId = 1;\n                            if (item.chainId === \"aptos:637\") {\n                            }\n                            else if (item.chainId === \"aptos:70000060\") {\n                                signChainId = 2;\n                            }\n                            item.params = {\n                                data: aptosParams,\n                                applicationUrl: currentURL,\n                                prefix: \"APTOS\",\n                                aptosChainId: signChainId\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params chainId is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"cosmos_signArbitrary\") {\n                    if (isRecord(item.params)) {\n                        if (item.params.message && typeof item.params.message === 'string') {\n                            const base64Encoded = (0, uint8array_extras_1.stringToBase64)(item.params.message);\n                            let cosmosChain = item.chainId.split(\":\")[1];\n                            if (cosmosChain) {\n                                item.params = {\n                                    chain_id: cosmosChain,\n                                    data: {\n                                        chain_id: \"\",\n                                        account_number: \"0\",\n                                        sequence: \"0\",\n                                        fee: {\n                                            gas: \"0\",\n                                            amount: []\n                                        },\n                                        msgs: [{\n                                                \"type\": \"sign/MsgSignData\",\n                                                \"value\": {\n                                                    \"signer\": \"\", //address\n                                                    \"data\": base64Encoded\n                                                }\n                                            }],\n                                        memo: \"\"\n                                    }\n                                };\n                            }\n                            else {\n                                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params chainId is error,  method: '${item.method}' `);\n                            }\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params message is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method == \"tron_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (\"message\" in item.params && item.params.message && typeof item.params.message === 'string') {\n                            item.params.message = stringToHex(item.params.message);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method == \"btc_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (\"message\" in item.params && item.params.message && typeof item.params.message === 'string') {\n                            item.params = {\n                                signStr: item.params.message\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                (0, core_1.logDebug)(\"connectMethodsToConnectWalletMethods item:\", JSON.stringify(item));\n                result.push(item);\n            }\n            return result;\n        }\n        catch (error) {\n            throw error;\n        }\n    });\n}\nfunction stringToHex(str) {\n    let hex = '';\n    for (let i = 0; i < str.length; i++) {\n        hex += str.charCodeAt(i).toString(16).padStart(2, '0');\n    }\n    return hex;\n}\nfunction syncResoonseToRequire(responseAddressStr) {\n    const allAddress = JSON.parse(responseAddressStr);\n    const result = {\n        type: allAddress.type,\n        isEvm: allAddress.isEvm,\n        walletName: allAddress.walletName,\n        deriveName: allAddress.deriveName,\n        addresses: allAddress.addresses.map((addr) => ({\n            coinId: addr.ci,\n            address: addr.a && addr.a !== 'null' ? addr.a : allAddress.evmAddress,\n        })),\n    };\n    return result;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.creatNotSupportMethodItemReplay = exports.connectMethodsAdaptOldVersion = void 0;\nvar ConnectMethodUtils_1 = require(\"./ConnectMethodUtils\");\nObject.defineProperty(exports, \"connectMethodsAdaptOldVersion\", { enumerable: true, get: function () { return ConnectMethodUtils_1.connectMethodsAdaptOldVersion; } });\nObject.defineProperty(exports, \"creatNotSupportMethodItemReplay\", { enumerable: true, get: function () { return ConnectMethodUtils_1.creatNotSupportMethodItemReplay; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAccountsChains = getAccountsChains;\nexports.nameSpaceToConnectWalletNameSpace = nameSpaceToConnectWalletNameSpace;\nexports.fillParamsToSession = fillParamsToSession;\nexports.isCaipNamespace = isCaipNamespace;\nexports.parseNamespaceKey = parseNamespaceKey;\nconst core_1 = require(\"@okxconnect/core\");\nfunction getAccountsChains(accounts) {\n    const chains = [];\n    accounts.forEach((account) => {\n        const [chain, chainId] = account.split(\":\");\n        chains.push(`${chain}:${chainId}`);\n    });\n    return chains;\n}\nfunction nameSpaceToConnectWalletNameSpace(namespaces) {\n    var result = [];\n    if (!namespaces) {\n        return result;\n    }\n    Object.keys(namespaces).forEach((key) => {\n        if (key === core_1.NameSpaceKeyEip155 || key === core_1.NameSpaceKeySOL || key === core_1.NameSpaceKeySui || key === core_1.NameSpaceKeyAptos\n            || key == core_1.NameSpaceKeyBtc || key === core_1.NameSpaceKeyTON || key === core_1.NameSpaceKeyCosmos || key === core_1.NameSpaceKeyTron) {\n            if (namespaces[key].chains) {\n                result.push({\n                    namespace: key,\n                    chains: namespaces[key].chains,\n                    params: namespaces[key].params\n                });\n            }\n        }\n    });\n    return result;\n}\nfunction fillParamsToSession(session, namespaces, optionalNamespaces, sessionConfig) {\n    // Helper function to merge rpcMaps\n    const mergeRpcMap = (targetRpcMap, sourceRpcMap) => {\n        Object.assign(targetRpcMap, sourceRpcMap);\n    };\n    // Merge function for namespaces\n    const mergeNamespaces = (target, source) => {\n        for (const key in source) {\n            if (source.hasOwnProperty(key) && source[key].rpcMap) {\n                if (source[key].rpcMap) {\n                    if (!target[key].rpcMap) {\n                        target[key].rpcMap = {};\n                    }\n                    // 合并 rpcMap\n                    mergeRpcMap(target[key].rpcMap, source[key].rpcMap);\n                }\n                if (source[key].defaultChain && target[key].defaultChain === undefined) {\n                    //defaultChain need in session nameSpace\n                    if (target[key].chains.some(chain => chain.split(\":\")[1] === source[key].defaultChain)) {\n                        target[key].defaultChain = source[key].defaultChain;\n                    }\n                }\n            }\n        }\n    };\n    // 合并 namespaces\n    if (namespaces) {\n        mergeNamespaces(session.namespaces, namespaces);\n    }\n    // 合并 optionalNamespaces\n    if (optionalNamespaces) {\n        mergeNamespaces(session.namespaces, optionalNamespaces);\n    }\n    session.sessionConfig = sessionConfig;\n}\n/**\n * util designed for Wallets that builds namespaces structure by provided supported chains, methods, events & accounts.\n * It takes required & optional namespaces provided in the session proposal\n * along with the supported chains/methods/events/accounts by the wallet and returns a structured namespaces object\n * @param {BuildApprovedNamespacesParams} params\n * @returns {SessionTypes.Namespaces}\n */\n// export function buildApprovedNamespaces(\n//   params: BuildApprovedNamespacesParams,\n// ): SessionTypes.Namespaces {\n//   const {\n//     proposal: { requiredNamespaces, optionalNamespaces = {} },\n//     supportedNamespaces,\n//   } = params;\n//   const normalizedRequired = normalizeNamespaces(requiredNamespaces);\n//   const normalizedOptional = normalizeNamespaces(optionalNamespaces);\n//\n//   // build approved namespaces\n//   const namespaces = {};\n//   Object.keys(supportedNamespaces).forEach((namespace) => {\n//     const supportedChains = supportedNamespaces[namespace].chains;\n//     const supportedMethods = supportedNamespaces[namespace].methods;\n//     const supportedEvents = supportedNamespaces[namespace].events;\n//     const supportedAccounts = supportedNamespaces[namespace].accounts;\n//\n//     supportedChains.forEach((chain) => {\n//       if (!supportedAccounts.some((account) => account.includes(chain))) {\n//         throw new Error(`No accounts provided for chain ${chain} in namespace ${namespace}`);\n//       }\n//     });\n//\n//     namespaces[namespace] = {\n//       chains: supportedChains,\n//       methods: supportedMethods,\n//       events: supportedEvents,\n//       accounts: supportedAccounts,\n//     };\n//   });\n//\n//   // verify all required namespaces are supported\n//   const err = isConformingNamespaces(requiredNamespaces, namespaces, \"approve()\");\n//   if (err) throw new Error(err.message);\n//\n//   const approvedNamespaces = {};\n//\n//   // if both required & optional namespaces are empty, return all supported namespaces by the wallet\n//   if (!Object.keys(requiredNamespaces).length && !Object.keys(optionalNamespaces).length)\n//     return namespaces;\n//\n//   // assign accounts for the required namespaces\n//   Object.keys(normalizedRequired).forEach((requiredNamespace) => {\n//     const chains = supportedNamespaces[requiredNamespace].chains.filter((chain) =>\n//       normalizedRequired[requiredNamespace]?.chains?.includes(chain),\n//     );\n//     const methods = supportedNamespaces[requiredNamespace].methods.filter((method) =>\n//       normalizedRequired[requiredNamespace]?.methods?.includes(method),\n//     );\n//     const events = supportedNamespaces[requiredNamespace].events.filter((event) =>\n//       normalizedRequired[requiredNamespace]?.events?.includes(event),\n//     );\n//\n//     const accounts = chains\n//       .map((chain: string) =>\n//         supportedNamespaces[requiredNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[requiredNamespace] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   });\n//\n//   // add optional namespaces\n//   Object.keys(normalizedOptional).forEach((optionalNamespace) => {\n//     if (!supportedNamespaces[optionalNamespace]) return;\n//\n//     const chainsToAdd = normalizedOptional[optionalNamespace]?.chains?.filter((chain) =>\n//       supportedNamespaces[optionalNamespace].chains.includes(chain),\n//     );\n//     const methodsToAdd = supportedNamespaces[optionalNamespace].methods.filter((method) =>\n//       normalizedOptional[optionalNamespace]?.methods?.includes(method),\n//     );\n//     const eventsToAdd = supportedNamespaces[optionalNamespace].events.filter((event) =>\n//       normalizedOptional[optionalNamespace]?.events?.includes(event),\n//     );\n//\n//     const accountsToAdd = chainsToAdd\n//       ?.map((chain: string) =>\n//         supportedNamespaces[optionalNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[optionalNamespace] = {\n//       chains: mergeArrays(approvedNamespaces[optionalNamespace]?.chains, chainsToAdd),\n//       methods: mergeArrays(approvedNamespaces[optionalNamespace]?.methods, methodsToAdd),\n//       events: mergeArrays(approvedNamespaces[optionalNamespace]?.events, eventsToAdd),\n//       accounts: mergeArrays(approvedNamespaces[optionalNamespace]?.accounts, accountsToAdd),\n//     };\n//   });\n//\n//   return approvedNamespaces;\n// }\nfunction isCaipNamespace(namespace) {\n    return namespace.includes(\":\");\n}\nfunction parseNamespaceKey(namespace) {\n    return isCaipNamespace(namespace) ? namespace.split(\":\")[0] : namespace;\n}\n/**\n * Converts\n * ```\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * ```\n * into\n * ```\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *```\n */\n// export function normalizeNamespaces(\n//   namespaces: ProposalTypes.RequiredNamespaces,\n// ): ProposalTypes.RequiredNamespaces {\n//   const normalizedNamespaces = {} as ProposalTypes.RequiredNamespaces;\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       methods: mergeArrays(methods, normalizedNamespaces[normalizedKey]?.methods),\n//       events: mergeArrays(events, normalizedNamespaces[normalizedKey]?.events),\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n// export function getNamespacesFromAccounts(accounts: string[]) {\n//   const namespaces = {};\n//   accounts?.forEach((account) => {\n//     const [namespace, chainId] = account.split(\":\");\n//     if (!namespaces[namespace]) {\n//       namespaces[namespace] = {\n//         accounts: [],\n//         chains: [],\n//         events: [],\n//       };\n//     }\n//     namespaces[namespace].accounts.push(account);\n//     namespaces[namespace].chains.push(`${namespace}:${chainId}`);\n//   });\n//\n//   return namespaces;\n// }\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PROVIDER_EVENTS = void 0;\nexports.PROVIDER_EVENTS = {\n    DEFAULT_CHAIN_CHANGED: \"default_chain_changed\",\n    UPDATE_NAMESPACES: \"update_name_spaces\",\n    SESSION_CONNECTING: \"session_connecting\"\n};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./values\"), exports);\n__exportStar(require(\"./events\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GENERIC_SUBPROVIDER_NAME = exports.RPC_URL = exports.STORAGE = exports.CONTEXT = exports.WC_VERSION = exports.PROTOCOL = exports.RELAY_URL = exports.LOGGER = void 0;\nexports.LOGGER = \"error\";\nexports.RELAY_URL = \"wss://relay.walletconnect.com\";\nexports.PROTOCOL = \"wc\";\nexports.WC_VERSION = 2;\nexports.CONTEXT = \"universal_provider\";\nexports.STORAGE = `${exports.PROTOCOL}@${exports.WC_VERSION}:${exports.CONTEXT}:`;\nexports.RPC_URL = \"https://rpc.walletconnect.com/v1/\";\nexports.GENERIC_SUBPROVIDER_NAME = \"generic\";\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./types\"), exports);\n__exportStar(require(\"./utils\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass AptosProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"aptos\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"solana request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"solana provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = AptosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass BtcProvider {\n    constructor(opts, name, client, events) {\n        this.name = core_1.NameSpaceKeyBtc;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"btc request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"btc provider namespace: \", JSON.stringify(this.namespace));\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = BtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass CosmosProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyCosmos;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"cosmos request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"cosmos provider namespace: \", JSON.stringify(this.namespace));\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = CosmosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Eip155Provider = void 0;\nconst utils_1 = require(\"../utils\");\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nclass Eip155Provider {\n    constructor(opts, client, events) {\n        this.name = \"eip155\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = parseInt(this.getDefaultChain());\n        // rpc\n        this.httpProviders = this.createHttpProviders();\n        (0, core_1.logDebug)(\"eip155 constructor --opts.namespace-->\", opts.namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    isArray(value) {\n        return typeof value === \"object\" && value !== null && Array.isArray(value);\n    }\n    updateRequestParams(args) {\n        let isDic = args.params && typeof args.params === 'object' && !Array.isArray(args.params);\n        if (args.method === 'wallet_switchEthereumChain') {\n            const switchChainId = args.chainId.split(\":\")[1];\n            // const hexChainId = parseInt(switchChainId, 16);\n            const decimalNumber = parseInt(switchChainId, 10);\n            if (isNaN(decimalNumber)) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid decimal number,  chainId: '${switchChainId}' `);\n            }\n            if (!args.params) {\n                args.params = { chainId: '0x' + decimalNumber.toString(16) };\n            }\n            else if (isDic) { //为 Record<string, unknown>\n                let params = args.params;\n                if (!('chainId' in params)) {\n                    params['chainId'] = '0x' + decimalNumber.toString(16);\n                    args.params = params;\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params error ,  method: '${args.method}' `);\n            }\n        }\n        else if (args.method === 'personal_sign'\n            || args.method === 'eth_signTypedData_v4'\n            || args.method === 'eth_sendTransaction'\n            || args.method === 'wallet_watchAsset') {\n            if (!args.params) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params is nil, method: '${args.method}'`);\n            }\n            if (this.isRecord(args.params)) {\n                let params = args.params;\n                (0, core_1.logDebug)(\"eip155 updateRequestParams params>\", JSON.stringify(params));\n                if ('chainId' in params) {\n                    const selectedChainId = args.chainId.split(\":\")[1];\n                    const chainNum = parseInt(selectedChainId, 10);\n                    let paramsChainString = String(params.chainId);\n                    let paramsChainId;\n                    if (paramsChainString.startsWith(this.name) && args.chainId === paramsChainString) { //为\n                        paramsChainId = chainNum;\n                    }\n                    else if (paramsChainString.startsWith(\"0x\")) {\n                        paramsChainId = parseInt(paramsChainString, 16);\n                    }\n                    else if (!isNaN(Number(paramsChainString))) { //数字\n                        paramsChainId = parseInt(paramsChainString, 10);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid params.chainId format, method: '${args.method}'`);\n                    }\n                    if (chainNum !== paramsChainId) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params.chainId not equal chain,  method: '${args.method}' `);\n                    }\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid request params type, method: '${args.method}'`);\n            }\n        }\n    }\n    //adapt array\n    adaptArray(args) {\n        if (args.method === 'wallet_switchEthereumChain'\n            || args.method === 'wallet_addEthereumChain'\n            || args.method === 'wallet_watchAsset'\n            || args.method === 'eth_sendTransaction') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr) {\n                    if (paramsArr.length === 1) {\n                        let firstParam = args.params[0];\n                        if (this.isRecord(firstParam)) {\n                            args.params = firstParam;\n                        }\n                    }\n                    else if (paramsArr.length > 1) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                    }\n                }\n            }\n        }\n        else if (args.method === 'eth_signTypedData_v4') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr && paramsArr.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                }\n                else if (paramsArr && paramsArr.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let messageObj = {};\n                if (paramsArr && paramsArr.length === 2) {\n                    let addressObj = args.params[0]; //address\n                    if (addressObj && typeof addressObj === 'string') { //check address\n                        let isEqual = false;\n                        this.namespace.accounts.forEach((account) => {\n                            let chainAddress = (0, utils_1.fromAccountToAddress)(account);\n                            if (chainAddress.toLowerCase() === addressObj.toLowerCase()) {\n                                isEqual = true;\n                            }\n                        });\n                        (0, core_1.logDebug)(\"eip155 adaptArray eth_signTypedData_v4 >>>isEqual: \", isEqual);\n                        if (!isEqual) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error, not equal,  method: '${args.method}' `);\n                        }\n                        if (this.isRecord(args.params[1])) {\n                            messageObj = args.params[1];\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error , not string,  method: '${args.method}' `);\n                    }\n                }\n                else if (paramsArr && paramsArr.length === 1) {\n                    if (this.isRecord(args.params[0])) {\n                        messageObj = args.params[0];\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                    }\n                }\n                try {\n                    let messages = JSON.stringify(messageObj);\n                    args.params = {\n                        typedDataJson: messages\n                    };\n                }\n                catch (err) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params call JSON.stringify() failed,  method: '${args.method}' `);\n                }\n            }\n        }\n        else if (args.method === 'personal_sign') {\n            if (this.isArray(args.params)) {\n                if (args.params && args.params.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params error,  method: '${args.method}' `);\n                }\n                else if (args.params && args.params.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let firstObj = args.params[0];\n                let secondObj = args.params[1];\n                if (secondObj && typeof secondObj === 'string') { //check address\n                    let isEqual = false;\n                    this.namespace.accounts.forEach((account) => {\n                        let chainAddress = (0, utils_1.fromAccountToAddress)(account);\n                        if (chainAddress.toLowerCase() === secondObj.toLowerCase()) {\n                            isEqual = true;\n                        }\n                    });\n                    (0, core_1.logDebug)(\"eip155 adaptArray personal_sign >>>isEqual: \", isEqual);\n                    if (!isEqual) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error,  method: '${args.method}' `);\n                    }\n                }\n                if (firstObj && typeof firstObj === 'string') {\n                    args.params = {\n                        message: firstObj\n                    };\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is error,  method: '${args.method}' `);\n                }\n            }\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"eth_requestAccounts\":\n            case \"eth_accounts\":\n            case \"eth_chainId\":\n                return false;\n            case \"eth_sendTransaction\":\n            case \"eth_signTransaction\":\n            case \"eth_sign\":\n            case \"personal_sign\":\n            case \"eth_signTypedData\":\n            case \"wallet_addEthereumChain\":\n            case \"wallet_watchAsset\":\n            case \"eth_signTypedData_v4\":\n                return true;\n            case \"wallet_switchEthereumChain\": {\n                this.adaptArray(args);\n                this.updateRequestParams(args);\n                const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n                return !this.isChainApproved(parsedChainId);\n            }\n            default:\n                return false;\n        }\n        return false;\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.adaptArray(args);\n            (0, core_1.logDebug)(\"eip155 request --args--string>\", JSON.stringify(args));\n            this.updateRequestParams(args);\n            (0, core_1.logDebug)(\"eip155 request --params--string>\", JSON.stringify(args));\n            switch (args.method) {\n                case \"eth_requestAccounts\":\n                    return this.getAccounts();\n                case \"eth_accounts\":\n                    return this.getAccounts();\n                case \"eth_chainId\":\n                    return parseInt(this.getDefaultChain());\n                case \"wallet_switchEthereumChain\": {\n                    return (yield this.handleSwitchChain(args));\n                }\n                case \"wallet_addEthereumChain\":\n                    return this.addEthereumChain(args);\n                default:\n                    break;\n            }\n            if (this.namespace.methods.includes(args.method)) {\n                // personal_sign\n                // eth_signTypedData_v4\n                // eth_sendTransaction\n                // wallet_watchAsset\n                try {\n                    const response = yield this.client.request(args);\n                    (0, core_1.logDebug)(\"eip155 request --response----string>\", JSON.stringify(response));\n                    if (this.isRecord(response)) {\n                        if ('result' in response) {\n                            let result = response.result;\n                            if (result && typeof result === 'string' && (result === \"true\" || result === \"false\")) {\n                                (0, core_1.logDebug)(\"eip155 request --wallet_watchAsset>>>>\", result === \"true\");\n                                return (result === \"true\");\n                            }\n                            return response.result;\n                        }\n                    }\n                    return response;\n                }\n                catch (e) {\n                    (0, core_1.logDebug)(`eip155 request --response --error--string> e instanceof OKXConnectError ${e instanceof core_1.OKXConnectError}`, JSON.stringify(e));\n                    throw e;\n                }\n            }\n            else {\n                (0, core_1.logDebug)('[RPC] request begin');\n                return yield this.getHttpProvider().request(args);\n            }\n        });\n    }\n    addEthereumChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let resultData = (yield this.client.request(args));\n            try {\n                if ('result' in resultData) {\n                    let successData = resultData;\n                    let account = resultData.result;\n                    if (account) {\n                        const nameSpace = account.split(\":\")[0];\n                        const chainId = account.split(\":\")[1];\n                        const chain = nameSpace + ':' + chainId;\n                        let newNameSpace = this.namespace;\n                        this.namespace.accounts.push(account);\n                        this.namespace.chains.push(chain);\n                        if (this.isRecord(args.params)) {\n                            if (\"rpcUrls\" in args.params) {\n                                let rpcUrls = args.params.rpcUrls;\n                                let rpcUrl = rpcUrls ? rpcUrls[0] : undefined;\n                                if (rpcUrl) {\n                                    if (this.namespace.rpcMap) {\n                                        this.namespace.rpcMap[chainId] = rpcUrl;\n                                    }\n                                    else {\n                                        this.namespace.rpcMap = {\n                                            [chainId]: rpcUrl\n                                        };\n                                    }\n                                    this.setHttpProvider(chainId, rpcUrl);\n                                }\n                            }\n                        }\n                        this.events.emit(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, {\n                            eip155: this.namespace\n                        });\n                    }\n                }\n                else {\n                    new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request error`);\n                }\n            }\n            catch (error) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request  error`);\n            }\n            return null;\n        });\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        this.chainId = parseInt(chainId);\n        // set rpc\n        if (!this.httpProviders[chainId]) {\n            const rpc = rpcUrl || (0, utils_1.getRpcUrl)(`${this.name}:${chainId}`, this.namespace);\n            if (!rpc) {\n                // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n                (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            }\n            else {\n                this.setHttpProvider(chainId, rpc);\n            }\n        }\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId.toString();\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // ---------- Private ----------------------------------------------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"eip155 getAccounts \", accounts, this.chainId);\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => {\n                return (0, utils_1.fromAccountToAddress)(account);\n            })),\n        ];\n    }\n    getHexChainIdFromRequest(args) {\n        let params = args.params;\n        let hexChainId = \"0x0\";\n        if (params && \"chainId\" in params) {\n            hexChainId = params.chainId;\n        }\n        hexChainId = hexChainId.startsWith(\"0x\") ? hexChainId : `0x${hexChainId}`;\n        (0, core_1.logDebug)(\"handleSwitchChain -->args \", args);\n        (0, core_1.logDebug)(\"handleSwitchChain -->hexChainId \", hexChainId);\n        const parsedChainId = parseInt(hexChainId, 16);\n        (0, core_1.logDebug)(\"handleSwitchChain -->parsedChainId \", parsedChainId);\n        return { parsedChainId, hexChainId };\n    }\n    handleSwitchChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n            if (this.isChainApproved(parsedChainId)) {\n                this.setDefaultChain(`${parsedChainId}`);\n            }\n            else {\n                const resultData = (yield this.client.request({\n                    method: \"wallet_switchEthereumChain\",\n                    chainId: args.chainId,\n                    params: {\n                        chainId: hexChainId,\n                    },\n                }));\n                try {\n                    if ('result' in resultData) {\n                        let successData = resultData;\n                        let account = resultData.result;\n                        if (account) {\n                            const nameSpace = account.split(\":\")[0];\n                            const chainId = account.split(\":\")[1];\n                            const chain = nameSpace + ':' + chainId;\n                            let newNameSpace = this.namespace;\n                            this.namespace.accounts.push(account);\n                            this.namespace.chains.push(chain);\n                            (0, core_1.logDebug)(\"handleSwitchChain -->wallet_switchEthereumChain \", resultData);\n                            this.setDefaultChain(`${parsedChainId}`);\n                            this.events.emit(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, {\n                                eip155: this.namespace\n                            });\n                        }\n                    }\n                    else {\n                        new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request error`);\n                    }\n                }\n                catch (error) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request  error`);\n                }\n            }\n            return null;\n        });\n    }\n    isChainApproved(chainId) {\n        return this.namespace.chains.includes(`${this.name}:${chainId}`);\n    }\n    // rpc\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            //   throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            (0, core_1.logDebug)('get parsed chain and rpc:', parsedChainId, parsedRpc);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        (0, core_1.logDebug)('get http providermap:', http);\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n}\nexports.Eip155Provider = Eip155Provider;\nexports.default = Eip155Provider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcConnection = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nconst DEFAULT_HTTP_HEADERS = {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n};\nconst DEFAULT_HTTP_METHOD = \"POST\";\nconst DEFAULT_FETCH_OPTS = {\n    headers: DEFAULT_HTTP_HEADERS,\n    method: DEFAULT_HTTP_METHOD,\n};\n// Source: https://nodejs.org/api/events.html#emittersetmaxlistenersn\nconst EVENT_EMITTER_MAX_LISTENERS_DEFAULT = 10;\nclass JsonRpcConnection {\n    constructor(url, disableProviderPing = false) {\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n        this.events = new eventemitter3_1.EventEmitter();\n        this.isAvailable = false;\n        this.registering = false;\n        if (!(0, core_2.isHttpUrl)(url)) {\n            throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n        }\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n    }\n    get connected() {\n        return this.isAvailable;\n    }\n    get connecting() {\n        return this.registering;\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            yield this.register(url);\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                throw new Error(\"Connection already closed\");\n            }\n            this.onClose();\n        });\n    }\n    send(payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                yield this.register();\n            }\n            try {\n                const body = (0, core_1.safeJsonStringify)(payload);\n                const res = yield (0, cross_fetch_1.default)(this.url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                const data = yield res.json();\n                this.onPayload({ data });\n            }\n            catch (e) {\n                this.onError(payload.id, e);\n            }\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    register() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            if (!(0, core_2.isHttpUrl)(url)) {\n                throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n            }\n            if (this.registering) {\n                return new Promise((resolve, reject) => {\n                    this.events.once(\"register_error\", (error) => {\n                        reject(error);\n                    });\n                    this.events.once(\"open\", () => {\n                        if (typeof this.isAvailable === \"undefined\") {\n                            return reject(new Error(\"HTTP connection is missing or invalid\"));\n                        }\n                        resolve();\n                    });\n                });\n            }\n            this.url = url;\n            this.registering = true;\n            try {\n                if (!this.disableProviderPing) {\n                    const body = (0, core_1.safeJsonStringify)({ id: 1, jsonrpc: \"2.0\", method: \"test\", params: [] });\n                    yield (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                }\n                this.onOpen();\n            }\n            catch (e) {\n                const error = this.parseError(e);\n                this.events.emit(\"register_error\", error);\n                this.onClose();\n                throw error;\n            }\n        });\n    }\n    onOpen() {\n        this.isAvailable = true;\n        this.registering = false;\n        this.events.emit(\"open\");\n    }\n    onClose() {\n        this.isAvailable = false;\n        this.registering = false;\n        this.events.emit(\"close\");\n    }\n    onPayload(e) {\n        if (typeof e.data === \"undefined\")\n            return;\n        const payload = typeof e.data === \"string\" ? (0, core_1.safeJsonParse)(e.data) : e.data;\n        this.events.emit(\"payload\", payload);\n    }\n    onError(id, e) {\n        const error = this.parseError(e);\n        const message = error.message || error.toString();\n        const payload = (0, core_2.formatJsonRpcError)(id, message);\n        this.events.emit(\"payload\", payload);\n    }\n    parseError(e, url = this.url) {\n        return (0, core_2.parseConnectionError)(e, url, \"HTTP\");\n    }\n}\nexports.JsonRpcConnection = JsonRpcConnection;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcProvider = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst types_1 = require(\"../../types\");\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nclass JsonRpcProvider extends types_1.IJSONRpcProvider {\n    constructor(connection) {\n        super(connection);\n        this.events = new eventemitter3_1.EventEmitter();\n        this.connected = false;\n        this.connecting = false;\n        this.hasRegisteredEventListeners = false;\n        this.connection = this.setConnection(connection);\n        if (this.connection.connected) {\n            this.registerEventListeners();\n        }\n    }\n    connect() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            yield this.open(connection);\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.close();\n        });\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    request(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.requestStrict((0, core_1.formatJsonRpcRequest)(request.method, request.params || [], (0, core_1.getBigIntRpcId)().toString()), // casting to any is required in order to use BigInt as rpcId\n            context);\n        });\n    }\n    // ---------- Protected ----------------------------------------------- //\n    requestStrict(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                if (!this.connection.connected) {\n                    try {\n                        yield this.open();\n                    }\n                    catch (e) {\n                        reject(e);\n                    }\n                }\n                this.events.on(`${request.id}`, (response) => {\n                    if ((0, core_1.isJsonRpcError)(response)) {\n                        reject(response.error);\n                    }\n                    else {\n                        resolve(response.result);\n                    }\n                });\n                try {\n                    (0, core_2.logDebug)('[RPC] >>> send request', request, context);\n                    yield this.connection.send(request, context);\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }));\n        });\n    }\n    setConnection(connection = this.connection) {\n        return connection;\n    }\n    onPayload(payload) {\n        this.events.emit(\"payload\", payload);\n        if ((0, core_1.isJsonRpcResponse)(payload)) {\n            this.events.emit(`${payload.id}`, payload);\n        }\n        else {\n            this.events.emit(\"message\", {\n                type: payload.method,\n                data: payload.params,\n            });\n        }\n    }\n    onClose(event) {\n        // Code 3000 indicates an abnormal closure signalled by the relay -> emit an error in this case.\n        if (event && event.code === 3000) {\n            this.events.emit(\"error\", new Error(`WebSocket connection closed abnormally with code: ${event.code} ${event.reason ? `(${event.reason})` : \"\"}`));\n        }\n        this.events.emit(\"disconnect\");\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            if (this.connection === connection && this.connection.connected)\n                return;\n            if (this.connection.connected)\n                this.close();\n            if (typeof connection === \"string\") {\n                yield this.connection.open(connection);\n                connection = this.connection;\n            }\n            this.connection = this.setConnection(connection);\n            yield this.connection.open();\n            this.registerEventListeners();\n            this.events.emit(\"connect\");\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.connection.close();\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    registerEventListeners() {\n        if (this.hasRegisteredEventListeners)\n            return;\n        this.connection.on(\"payload\", (payload) => this.onPayload(payload));\n        this.connection.on(\"close\", (event) => this.onClose(event));\n        this.connection.on(\"error\", (error) => this.events.emit(\"error\", error));\n        this.connection.on(\"register_error\", (_error) => this.onClose());\n        this.hasRegisteredEventListeners = true;\n    }\n}\nexports.JsonRpcProvider = JsonRpcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SolanaProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SolanaProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"solana\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"solana request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"solana provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    //   {\n    //     \"chains\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\" ],\n    //     \"accounts\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp:F7wnJc5wiBGy1k87jv6gyNwE3jMEWd18oTQiYsF1xVG7\"],\n    //     \"methods\": [\n    //         \"solana_signTransaction\",\n    //         \"solana_signMessage\"\n    //     ],\n    //     \"defaultChain\": \"5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\"\n    // }\n    // TODO:确认上面的defaultChain是否正确（没有solana前缀）\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"solana\"))) {\n                chainId = `solana:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.SolanaProvider = SolanaProvider;\nexports.default = SolanaProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SuiProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SuiProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeySui;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"sui request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"sui provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"sui\"))) {\n                chainId = `sui:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"sui_signMessage\":\n            case \"sui_signPersonalMessage\":\n            case \"sui_signTransactionBlock\":\n            case \"sui_signAndExecuteTransactionBlock\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.SuiProvider = SuiProvider;\nexports.default = SuiProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass TONProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyTON;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            (0, core_1.logDebug)(\"TONProvider request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"TONProvider request provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                if (!args.params) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params is nil\");\n                }\n                if (this.isRecord(args.params)) {\n                    const _e = args.params, { validUntil } = _e, newParams = __rest(_e, [\"validUntil\"]);\n                    let fromAddress = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n                    if ('from' in newParams) {\n                        fromAddress = newParams.from || ((_d = (_c = this.namespace.payload) === null || _c === void 0 ? void 0 : _c.ton_addr) === null || _d === void 0 ? void 0 : _d.address);\n                    }\n                    args.params['from'] = fromAddress;\n                    args.params['network'] = this.getDefaultChain();\n                    args.params['valid_until'] = validUntil;\n                    let response = yield this.client.request(args);\n                    if (this.isRecord(response) && 'result' in response) {\n                        const result = {\n                            boc: response.result.toString()\n                        };\n                        (0, core_1.logDebug)(\"TONProvider request provider response: \", JSON.stringify(response));\n                        (0, core_1.logDebug)(\"TONProvider request provider result: \", JSON.stringify(result));\n                        return result;\n                    }\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton_send request response is nil\");\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params type add nil\");\n                }\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        var _a, _b;\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"ton getAccounts accounts :\", accounts);\n        (0, core_1.logDebug)(\"ton getAccounts .namespace :\", JSON.stringify(this.namespace));\n        if (!accounts) {\n            return [];\n        }\n        let address = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n        (0, core_1.logDebug)(\"ton getAccounts address :\", address);\n        if (address) {\n            return [\n                address\n            ];\n        }\n        return [];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"ton_sendTransaction\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.default = TONProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass TronProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyTron;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"tron request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"tron provider namespace: \", JSON.stringify(this.namespace));\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = TronProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./providers\"), exports);\n__exportStar(require(\"./misc\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IJSONRpcProvider = exports.IJSONRpcConnection = void 0;\nclass IJSONRpcConnection {\n}\nexports.IJSONRpcConnection = IJSONRpcConnection;\nclass IJSONRpcProvider {\n    constructor(opt) {\n    }\n}\nexports.IJSONRpcProvider = IJSONRpcProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setGlobal = exports.getGlobal = void 0;\nconst globals = {};\nconst getGlobal = (key) => {\n    return globals[key];\n};\nexports.getGlobal = getGlobal;\nconst setGlobal = (key, value) => {\n    globals[key] = value;\n};\nexports.setGlobal = setGlobal;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./misc\"), exports);\n__exportStar(require(\"./globals\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRpcUrl = getRpcUrl;\nexports.getChainId = getChainId;\nexports.fromAccountToAddress = fromAccountToAddress;\nexports.convertChainIdToNumber = convertChainIdToNumber;\nexports.parseChainId = parseChainId;\nexports.mergeArrays = mergeArrays;\nexports.syncAddressAvailable = syncAddressAvailable;\nexports.syncAddressHostAvailable = syncAddressHostAvailable;\nconst core_1 = require(\"@okxconnect/core\");\nfunction getRpcUrl(chainId, rpc, projectId) {\n    var _a;\n    const chain = parseChainId(chainId);\n    // no default\n    return (((_a = rpc.rpcMap) === null || _a === void 0 ? void 0 : _a[chain.reference]) ||\n        ``);\n}\nfunction getChainId(chain) {\n    return chain.includes(\":\") ? chain.split(\":\")[1] : chain;\n}\nfunction fromAccountToAddress(account) {\n    if (!account) {\n        return \"\";\n    }\n    try {\n        let addressArr = account.split(\":\").slice(2);\n        let address = addressArr.length > 0 ? addressArr.join(\":\") : \"\";\n        (0, core_1.logDebug)(\"fromAccountToAddress address and account:\", address, account);\n        return address;\n    }\n    catch (e) {\n        (0, core_1.logError)(\"fromAccountToAddress error:\", account);\n        return \"\";\n    }\n}\n// export function validateChainApproval(chain: string, chains: string[]): void {\n//   if (!chains.includes(chain)) {\n//     throw new Error(\n//       `Chain '${chain}' not approved. Please use one of the following: ${chains.toString()}`,\n//     );\n//   }\n// }\n// export function getChainsFromApprovedSession(accounts: string[]): string[] {\n//   return accounts.map((address) => `${address.split(\":\")[0]}:${address.split(\":\")[1]}`);\n// }\n// export function getAccountsFromSession(namespace: string, session: SessionTypes.Struct): string[] {\n//   // match namespaces e.g. eip155 with eip155:1\n//   const matchedNamespaceKeys = Object.keys(session.namespaces).filter((key) =>\n//     key.includes(namespace),\n//   );\n//   if (!matchedNamespaceKeys.length) return [];\n//   const accounts: string[] = [];\n//   matchedNamespaceKeys.forEach((key) => {\n//     const accountsForNamespace = session.namespaces[key].accounts;\n//     accounts.push(...accountsForNamespace);\n//   });\n//   return accounts;\n// }\n// export function mergeRequiredOptionalNamespaces(\n//   required: NamespaceConfig = {},\n//   optional: NamespaceConfig = {},\n// ){\n//   const requiredNamespaces = normalizeNamespaces(required);\n//   const optionalNamespaces = normalizeNamespaces(optional);\n//    return merge.merge(requiredNamespaces,optionalNamespaces)\n// }\n/**\n * Converts\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * into\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *\n */\n// export function normalizeNamespaces(namespaces: NamespaceConfig): NamespaceConfig {\n//   const normalizedNamespaces: NamespaceConfig = {};\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const rpcMap = values.rpcMap || {};\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       ...values,\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       rpcMap: { ...rpcMap, ...normalizedNamespaces[normalizedKey]?.rpcMap },\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n//\n// export function parseCaip10Account(caip10Account: string): string {\n//   return caip10Account.includes(\":\") ? caip10Account.split(\":\")[2] : caip10Account;\n// }\n/**\n * Populates the chains array for each namespace with the chains extracted from the accounts if are otherwise missing\n */\n// export function populateNamespacesChains(\n//   namespaces: SessionTypes.Namespaces,\n// ): Record<string, SessionTypes.Namespace> {\n//   const parsedNamespaces: Record<string, SessionTypes.Namespace> = {};\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const accounts = values.accounts || [];\n//     // If the key includes a CAIP separator `:` we know it's a namespace + chainId (e.g. `eip155:1`)\n//     const chains = isCaipNamespace(key)\n//       ? [key]\n//       : values.chains\n//       ? values.chains\n//       : getChainsFromApprovedSession(values.accounts);\n//     parsedNamespaces[key] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   }\n//   return parsedNamespaces;\n// }\nfunction convertChainIdToNumber(chainId) {\n    if (typeof chainId === \"number\")\n        return chainId;\n    if (chainId.includes(\"0x\")) {\n        return parseInt(chainId, 16);\n    }\n    chainId = chainId.includes(\":\") ? chainId.split(\":\")[1] : chainId;\n    return isNaN(Number(chainId)) ? chainId : Number(chainId);\n}\nconst CAIP_DELIMITER = \":\";\nfunction parseChainId(chain) {\n    const [namespace, reference] = chain.split(CAIP_DELIMITER);\n    return { namespace, reference };\n}\nfunction mergeArrays(a = [], b = []) {\n    return [...new Set([...a, ...b])];\n}\nfunction syncAddressAvailable(wallet) {\n    if (!wallet) {\n        return false;\n    }\n    if (wallet.appName !== 'OKX Wallet') {\n        return false;\n    }\n    if ((0, core_1.versionCompare)('6.97.0', wallet.appVersion) > 0) {\n        return false;\n    }\n    return syncAddressHostAvailable();\n}\nfunction syncAddressHostAvailable() {\n    try {\n        return !!(window.okxGlobal);\n    }\n    catch (e) {\n        return false;\n    }\n}\n","<template>\n  <div id=\"app\">\n    <el-container>\n      <el-header>OKX Connect</el-header>\n      <el-main>\n        <el-card class=\"wallet-info\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Wallet Info</div>\n          </template>\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Wallet Address:</strong> {{ getWalletAddress }}\n            </el-col>\n          </el-row>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Status :</strong> {{ currentStatus }}\n            </el-col>\n          </el-row>\n\n        </el-card>\n\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Connect Params</div>\n          </template>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"12\">\n              <el-checkbox v-model=\"withUI\" @change=\"handleWithUI\">\n                Show UI</el-checkbox>\n            </el-col>\n\n            <el-col :span=\"12\">\n              <el-checkbox v-model=\"universalToTG\" @change=\"handleUniversalToTG\">\n                Use mini wallet</el-checkbox>\n            </el-col>\n          </el-row>\n\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Modals</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"modals\" placeholder=\"Modals\" @change=\"handleModalsSelect\" multiple>\n                <el-option label=\"Before\" value=\"before\" />\n                <el-option label=\"Success\" value=\"success\" />\n                <el-option label=\"Error\" value=\"error\" />\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center; justify-content: space-between;\">\n            <el-col :span=\"6\" style=\"gap: 2px\">\n              <p style=\"font-size: 11pt; margin: 0px\">Return Strategy</p>\n              <p style=\"font-size: 9pt; margin: 0px\">(Mobile only)</p>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-select\n                v-model=\"returnStrategy\"\n                @change=\"handleReturnStrategySelect\"\n                placeholder=\"Return Strategy\"\n              >\n                <el-option\n                  v-for=\"strategy in returnStrategies\"\n                  :key=\"`return-strategy-select-option-${strategy}`\"\n                  :label=\"strategy\"\n                  :value=\"strategy\"\n                />\n              </el-select>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-input\n                v-if=\"returnStrategy === 'deeplink'\"\n                v-model=\"deeplink\"\n                @change=\"handleReturnStrategyDeeplink\"\n                placeholder=\"Deeplink\"\n                :disabled=\"returnStrategy !== 'deeplink'\"\n                style=\"margin: 0px\"\n              />\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Lang</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"language\" @change=\"handleLanguageSelect\" placeholder=\"Language\">\n                <el-option v-for=\"locale in locales\" :key=\"`language-select-option-${locale}`\" :label=\"locale\"\n                  :value=\"locale\" />\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Theme</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"theme\" @change=\"handleThemeSelect\" placeholder=\"Theme\">\n                <el-option label=\"LIGHT\" :value=\"THEME.LIGHT\" />\n                <el-option label=\"DARK\" :value=\"THEME.DARK\" />\n              </el-select>\n            </el-col>\n          </el-row>\n\n<!--          <el-row>-->\n<!--          <el-row style=\"align-items: center\">-->\n<!--            <el-col :span=\"4\">-->\n<!--              <p style=\"font-size: 11pt\">Connect</p>-->\n<!--              <p style=\"font-size: 11pt\">Methods</p>-->\n<!--            </el-col>-->\n<!--            <el-col :span=\"20\">-->\n<!--              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" placeholder=\"Methods\">-->\n<!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n<!--                           :value=\"methods\" />-->\n\n<!--              </el-select>-->\n<!--            </el-col>-->\n<!--          </el-row>-->\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Connect</p>\n              <p style=\"font-size: 11pt\">Methods</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" multiple placeholder=\"methods\">\n                <el-option\n                    v-for=\"item in connectMethods\"\n                    :key=\"item\"\n                    :label=\"item\"\n                    :value=\"item\">\n                </el-option>\n              </el-select>\n\n\n<!--              <el-select v-model=\"selectedMethod\" placeholder=\"Methods\" @change=\"handleConnectMethodsSelect\" multiple>-->\n<!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n<!--                           :value=\"methods\" />-->\n<!--              </el-select>-->\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">ton_proof</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-input v-model=\"tonProofValue\"  placeholder=\"input ton_proof\"></el-input>\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" align=\"middle\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Required Chains</div>\n            </el-col>\n            <el-col\n              :span=\"6\"\n              v-for=\"item in Object.keys(availableChains)\"\n              :key=\"item\"\n            >\n              <el-checkbox\n                v-model=\"availableChains[item].checked\"\n                :disabled=\"!areChainsInit\"\n                >{{ availableChains[item].name }}</el-checkbox\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" align=\"middle\" style=\"margin-top: 20px\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Optional Chains</div>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(43114)\" @change=\"() => handleOptionChange(43114)\">\n                AVAX</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(10)\" @change=\"() => handleOptionChange(10)\">OP</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(8453)\" @change=\"() => handleOptionChange(8453)\">\n                BASE</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(99781165)\"\n                @change=\"() => handleOptionChange(99781165)\">Nonexist</el-checkbox>\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"initBtnClicked\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectInitStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                type=\"primary\"\n                @click=\"connectBtnClicked\"\n                icon=\"el-icon-connection\"\n                :disabled=\"!areChainsInit\"\n                >{{ connectStatusStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"syncAllAddressClick\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ syncAllAddressStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                type=\"danger\"\n                @click=\"disconnectAction\"\n                icon=\"el-icon-switch-button\"\n                :disabled=\"!areChainsInit || walletAddress.length == 0\"\n                >{{ disconnectStatusStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n          <teleport to=\"body\">\n            <div v-if=\"showModal\" class=\"modal-overlay\" @click=\"closeModal\">\n              <div class=\"modal-content\" @click.stop>\n                <button class=\"close-button\" @click=\"closeModal\">\n                  &times;\n                </button>\n                <h2>Scan to connect</h2>\n                <qrcode-vue :value=\"qrValue\" :size=\"350\" level=\"L\" />\n              </div>\n            </div>\n          </teleport>\n        </el-card>\n\n        <!-- 发送交易 -->\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Transactions</div>\n          </template>\n\n          <el-tabs v-model=\"activeTab\" type=\"border-card\" @tab-click=\"clickActiveTab\">\n            <!-- ETH -->\n            <el-tab-pane label=\"ETH\" name=\"eip155:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to ETH)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve TONCoin)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(eth mint\n                    nft)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add SPX6900)\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TON\" name=\"ton:-239\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_getAccount\">ton_getAccount</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_sendTransaction\">ton_sendTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- solana -->\n            <el-tab-pane label=\"Sol\" name=\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- Sui-->\n            <el-tab-pane label=\"Sui\" name=\"sui:mainnet\">\n              <SuiPanel @generateTransactionParams=\"sui_generateTransactionParams\" />\n            </el-tab-pane>\n            <!-- BTC -->\n            <el-tab-pane label=\"BTC\" name=\"btc:mainnet\">\n              <BTCPanel @generateTransactionParams=\"btc_generateTransactionParams\" />\n            </el-tab-pane>\n\n            <!-- Fractal BTC -->\n            <el-tab-pane label=\"Fractal\" name=\"fractal:mainnet\">\n              <FractalPanel @generateTransactionParams=\"fractal_generateTransactionParams\" />\n            </el-tab-pane>\n\n            <!-- AllBtc -->\n             <el-tab-pane label=\"AllBtc\" name=\"allBtc\">\n              <AllBTCPanel @generateTransactionParams=\"allBtc_generateTransactionParams\"></AllBTCPanel>\n             </el-tab-pane>\n\n            <el-tab-pane label=\"Tron\" name=\"tron:mainnet\">\n              <TronTransactionPanel\n                  @generateTransactionParams=\"tron_generateTransactionParams\"\n                  @generateTransactionResult=\"tron_getTransactionResult\" />\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Aptos\" name=\"aptos:mainnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signTransaction\">aptos_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"aptos_signAndSubmitTransaction\">aptos_signAndSubmitTransaction</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Cosmos\" name=\"cosmos:cosmoshub-4\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <!-- Polygon-->\n            <el-tab-pane label=\"Polygon\" name=\"eip155:137\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send POL)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve sushi)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(polygon mint\n                    nft)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add LGNS)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_testRpc()\">wallet_testRpc(Polygon)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\"\n                  >eth_sendTransaction(转账FUSE)</el-button\n                  >\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\"\n                  >eth_sendTransaction(授权USDC)</el-button\n                  >\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- BSC-->\n            <el-tab-pane label=\"BNB\" name=\"eip155:56\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to BNB)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve POSI)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add FET)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_testRpc()\">wallet_testRpc(check balance on eth)</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Fuse\" name=\"eip155:122\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_swap\">eth_sendTransaction(Swap)</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Sonic testnet\" name=\"svm:70000062\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Movement\" name=\"movement:testnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"move_signTransaction\">move_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"move_signAndSubmitTransaction\">move_signAndSubmitTransaction</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n\n            <el-tab-pane label=\"osmos\" name=\"cosmos:osmosis-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"SEI\" name=\"cosmos:pacific-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TEST \" name=\"test:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"testBase64UrlSafe\">testBase64UrlSafe</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n          </el-tabs>\n\n          <el-col :xs=\"24\" :sm=\"24\" style=\"margin: 16px 0px;\">\n            <el-row style=\"align-items: center; justify-content: space-between; margin-bottom: 8px;\">\n              <el-col :span=\"4\">\n                <p style=\"font-size: 11pt; margin: 0px; text-align: start\">Redirect param (only for ETH, Polygon, BNB, Fuse)</p>\n              </el-col>\n              <el-col :span=\"9\">\n                <el-select\n                  v-model=\"redirect\"\n                  @change=\"handleRedirectSelect\"\n                  placeholder=\"Return Strategy\"\n                  :disabled=\"!canChainAddRedirectParam()\"\n                  >\n                  <el-option\n                    v-for=\"strategy in returnStrategies\"\n                    :key=\"`return-strategy-select-option-${strategy}`\"\n                    :label=\"strategy\"\n                    :value=\"strategy\"\n                  />\n                </el-select>\n              </el-col>\n              <el-col :span=\"10\">\n                <el-input\n                  v-if=\"redirect === 'deeplink'\"\n                  v-model=\"redirectDeeplink\"\n                  @change=\"handleRedirectDeeplink\"\n                  placeholder=\"Deeplink\"\n                  :disabled=\"!canChainAddRedirectParam() || redirect !== 'deeplink'\"\n                  style=\"margin: 0px\"\n                />\n              </el-col>\n            </el-row>\n            <el-button\n              type=\"primary\" @click=\"addRedirectParam()\"\n              :disabled=\"!canChainAddRedirectParam() || !testTransaction\"\n            >\n              Add redirect param to data\n            </el-button>\n          </el-col>\n\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Data:</div>\n            <el-input v-model=\"testTransaction\" type=\"textarea\" :rows=\"5\" placeholder=\"sendTransactions\"></el-input>\n          </el-col>\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Result :</div>\n            <el-input v-model=\"testboc\" type=\"textarea\" :rows=\"5\" placeholder=\"boc\"></el-input>\n          </el-col>\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button type=\"primary\" @click=\"sendTransaction()\">{{\n                testTransactionStr\n                }}</el-button>\n            </el-col>\n          </el-row>\n        </el-card>\n      </el-main>\n    </el-container>\n  </div>\n</template>\n\n<style scoped>\n/* 重置全局边距和内边距 */\nbody,\nhtml {\n  margin: 0;\n  padding: 0;\n  height: 100%;\n}\n\n/* 确保 app 容器占满整个视口 */\n#app {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin: 0 auto;\n  /* 居中 */\n  max-width: 600px;\n  /* 设置最大宽度 */\n  padding: 0 20px;\n  /* 添加一些左右内边距 */\n}\n\n/* 调整 el-container 样式 */\n.el-container {\n  min-height: 100vh;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n}\n\n/* 调整 el-header 样式 */\n.el-header {\n  background-color: #333333;\n  color: white;\n  height: 50px;\n  line-height: 50px;\n  font-size: 18px;\n  font-weight: bold;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1000;\n}\n\n/* 调整 el-main 样式 */\n.el-main {\n  padding: 70px 0 20px;\n  /* 增加顶部内边距以避免被固定header遮挡 */\n  flex-grow: 1;\n}\n\n.el-card {\n  margin-bottom: 20px;\n}\n\n.info-row {\n  margin-bottom: 10px;\n}\n\n.input-label {\n  margin-bottom: 5px;\n  text-align: left;\n}\n\n.el-input {\n  margin-bottom: 10px;\n}\n\n/* 通用按钮样式 */\n.wallet-actions .el-button,\n.transaction .el-button,\n.clear-cache .el-button {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 40px;\n}\n\n.wallet-actions .el-button span,\n.transaction .el-button span,\n.clear-cache .el-button span {\n  margin: 0 auto;\n}\n\n/* 按钮行间距 */\n.wallet-actions .button-row,\n.transaction .button-row {\n  margin-bottom: 8px;\n}\n\n.wallet-actions .button-row:last-child,\n.transaction .button-row:last-child {\n  margin-bottom: 0;\n}\n\n/* 调整图标和文字的对齐 */\n.wallet-actions .el-button [class^=\"el-icon-\"],\n.transaction .el-button [class^=\"el-icon-\"],\n.clear-cache .el-button [class^=\"el-icon-\"] {\n  margin-right: 5px;\n  vertical-align: middle;\n}\n\n/* 新增：调整发送交易按钮与输入框的间距 */\n.transaction .el-row:not(:last-child) {\n  margin-bottom: 10px;\n}\n\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.modal-content {\n  background-color: white;\n  padding: 20px;\n  border-radius: 8px;\n  text-align: center;\n  position: relative;\n  max-width: 90%;\n  width: 400px;\n}\n\n.close-button {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  font-size: 24px;\n  border: none;\n  background: none;\n  cursor: pointer;\n}\n\n/* 响应式调整 */\n@media (max-width: 600px) {\n  #app {\n    padding: 0 10px;\n  }\n\n  .el-main {\n    padding: 60px 0 10px;\n  }\n}\n</style>\n<script>\nimport {OKX_CONNECT_ERROR_CODES, safeJsonStringify,getAppWalletDeepLink,getUniversalLink} from \"@okxconnect/core\"\nimport {\n  OKXBtcProvider,\n  OKXUniversalProvider,\n  OKXCosmosProvider,\n  OKXTonProvider,\n  OKXTronProvider\n} from \"@okxconnect/universal-provider\"\nimport {OKXSolanaProvider} from \"@okxconnect/solana-provider\";\nimport {\n  Connection,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n  TransactionMessage,\n  VersionedTransaction\n} from '@solana/web3.js';\nimport {OKXSuiProvider as SuiAdapter} from \"@okxconnect/sui-provider\"\nimport QrcodeVue from 'qrcode.vue'\n\nimport {OKXAptosProvider} from \"@okxconnect/aptos-provider\";\nimport {Aptos, AptosConfig, Network} from \"@aptos-labs/ts-sdk\";\n\nimport BTCPanel from \"./components/BtcTransactionPanel.vue\";\nimport AllBTCPanel from \"./components/AllBtcTransactionPanel.vue\";\nimport FractalPanel from \"./components/FractalTransactionPanel.vue\"\nimport SuiPanel from \"./components/SuiTransactionPanel.vue\";\n\nimport {OKXUniversalConnectUI, THEME} from \"@okxconnect/ui\";\nimport { ethers } from 'ethers';\nimport VConsole from 'vconsole';\nimport nacl from \"tweetnacl\";\nconst { verifyADR36Amino } = require('@keplr-wallet/cosmos')\nconst { fromBech32 } = require('@cosmjs/encoding')\nimport { verifyPersonalMessageSignature } from '@mysten/sui/verify';\nimport {useShortLink} from \"@okxconnect/core\";\nimport TronTransactionPanel from \"@/components/TronTransactionPanel.vue\";\nimport {TronWeb} from \"tronweb\";\nnew VConsole();\n\nconst allChains = {\n  1: { name: \"Eth\", checked: false },\n  56: { name: \"BNB\", checked: false },\n  137: { name: \"Polygon\", checked: false },\n  122: { name: \"Fuse\", checked: false },\n  \"ton:-239\":{name: \"TON\",checked: false},\n  \"btc:mainnet\": { name: \"BTC\", checked: false },\n  \"btc:testnet\": { name: \"BTC testnet\", checked: false },\n  \"btc:signnet\": { name: \"BTC signnet\", checked: false },\n  \"sui:mainnet\": { name: \"Sui\", checked: false },\n  \"aptos:mainnet\": { name: \"Aptos\", checked: false },\n  \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\": {\n    name: \"Solana\",\n    checked: false,\n  },\n  \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\": {\n    name: \"Sol testnet\",\n    checked: false,\n  },\n  \"svm:70000062\": {\n    name: \"Sonic testnet\",\n    checked: false,\n  },\n  \"movement:testnet\": { name: \"Movement\", checked: false },\n  \"fractal:mainnet\": { name: \"Fractal\", checked: false },\n  \"cosmos:osmosis-1\": {name: \"Osmos\", checked: false},\n  \"cosmos:cosmoshub-4\": {name: \"Cosmos\", checked: false},\n  \"cosmos:pacific-1\": {name: \"SEI\", checked: false},\n  \"cosmos:abvdefg\": {name: \"cosmos:abvdefg\", checked: false},\n  \"tron:mainnet\": {name: \"tron\", checked: false},\n  997865: { name: \"Non Exist chain\", checked: false },\n  2020: { name: \"Ronin\", checked: false },\n  1666600000: { name: \"Harmony\", checked: false },\n};\n\nconst chainsThatCanAddRedirectParam = [\n  \"eip\"\n]\n\nvar optionChains = new Set([]);\nvar selectedModals = [\"before\", \"success\", \"error\"];\nvar selectedReturnStrategy = \"none\";\nvar selectedDeepLink = \"tg://resolve\";\nvar selectedLanguage = \"en_US\";\nvar selectedTheme = THEME.LIGHT;\n\n// import QrcodeVue from 'qrcode.vue'\nexport default {\n  name: \"App\",\n  components: {\n    TronTransactionPanel,\n    QrcodeVue,\n    BTCPanel,\n    AllBTCPanel,\n    FractalPanel,\n    SuiPanel\n  },\n\n  data: () => {\n    return {\n      activeTab: \"eip155:1\",\n      testTopic: \"\",\n      testPublicKey: \"\",\n      testProofPayload: \"\",\n      tonProofValue:\"\",\n      pendingDeepLink: \"-\",\n      logList: [],\n      connectReady: false,\n      connectStatusStr: \"Connect\",\n      syncAllAddressStr: \"syncAllAddress\",\n      connectInitStr: \"init test\",\n      disconnectStatusStr: \"Disconnect\",\n      localPubKey: \"\",\n      localSecKey: \"\",\n      testTransaction: \"\",\n      selectedChain: \"eip155:1\",\n      testTransactionStr: \"Send\",\n      walletAddress: \"\",\n      testboc: \"\",\n      ProofPayloadVerify: \"\",\n      showModal: false,\n      showVerifyRow: false,\n      qrValue: \"https://www.okx.com/download\",\n      currentStatus: \"\",\n      areChainsInit: false,\n      availableChains: allChains,\n      isOptionalChecked: (chainId) => {\n        return optionChains.has(chainId);\n      },\n      withUI: localStorage.getItem(\"autoRefresh\") != \"false\",\n      universalToTG: localStorage.getItem(\"universalToTG\") != \"false\",\n      modals: selectedModals,\n      returnStrategies: [\"none\", \"back\", \"deeplink\"],\n      returnStrategy: selectedReturnStrategy,\n      deeplink: selectedDeepLink,\n      locales: [\n        \"en_US\",\n        \"ru_RU\",\n        \"zh_CN\",\n        \"zh\",\n        \"ar_AE\",\n        \"cs_CZ\",\n        \"de_DE\",\n        \"es_ES\",\n        \"es_LAT\",\n        \"fr_FR\",\n        \"id_ID\",\n        \"it_IT\",\n        \"nl_NL\",\n        \"pl_PL\",\n        \"pt_BR\",\n        \"pt_PT\",\n        \"ro_RO\",\n        \"tr_TR\",\n        \"uk_UA\",\n        \"vi_VN\",\n        \"zh_TW\"\n      ],\n      selectedMethod:[],\n      selectedMethodData:[],\n      connectMethods:[\n        \"wallet_addEthereumChain(ETH)\",\n        \"personal_sign(ETH)\",\n        \"solana_signMessage(Sol mainnet)\",\n        \"sui_signMessage(Sui mainnet)\",\n        \"sui_signPersonalMessage(Sui mainnet)\",\n        \"btc_signMessage(BTC)\",\n        \"aptos_signMessage(aptos mainnet)\",\n        \"cosmos_signArbitrary(cosmoshub)\",\n        \"test_noSupport_eth(ETH)\",\n        \"tron_signMessage\",\n        \"tron_signMessageV2\",\n        \"sync_all_addresses\"\n      ],\n\n      language: selectedLanguage,\n      theme: selectedTheme,\n      THEME: THEME,\n      redirect: selectedReturnStrategy,\n      redirectDeeplink: selectedDeepLink,\n      handleWithUI: (isChecked) => {\n        localStorage.setItem(\"autoRefresh\", `${isChecked}`);\n        location.reload();\n      },\n      handleUniversalToTG: (isChecked) => {\n        localStorage.setItem(\"universalToTG\", `${isChecked}`);\n      },\n      handleOptionChange: (chainId) => {\n        if (optionChains.has(chainId)) {\n          optionChains.delete(chainId);\n        } else {\n          optionChains.add(chainId);\n        }\n      },\n    };\n  },\n  computed: {\n    getWalletAddress: function () {\n      return this.walletAddress;\n    },\n  },\n  methods: {\n    isChecked(chainId) {\n      return this.selectedChains.has(chainId);\n    },\n\n    initChains(newChains) {\n      if (newChains.length > 0) {\n        const updatedChains = Object.assign({}, this.availableChains);\n        for (const chainId of newChains) {\n          if (updatedChains[chainId]){\n            updatedChains[chainId].checked = !updatedChains[chainId].checked;\n          }\n        }\n        this.availableChains = updatedChains;\n      }\n\n      this.areChainsInit = true;\n    },\n\n    async clickActiveTab(tab) {\n      const tabName = tab.props ? tab.props.name : tab.name;\n      if (tabName == \"allBtc\") {\n        /// for this case, update selectedChain by all-btc-panel click action\n        return\n      }\n\n      this.selectedChain = tabName;\n      console.log(`已切换到链 :`, tabName);\n\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      window.provider.setDefaultChain(this.selectedChain);\n    },\n\n    async initBtnClicked() {\n      var initCall;\n      if (!this.withUI) {\n        initCall = OKXUniversalProvider.init({\n          dappMetaData: {\n            name: \"univer test dapp\",\n            icon: \"https://avatars.githubusercontent.com/u/37784886\",\n          },\n        });\n      } else {\n        initCall = OKXUniversalConnectUI.init({\n          dappMetaData: {\n            icon: \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\",\n            name: \"OKX WalletConnect UI Demo\",\n          },\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: \"all\",\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme\n          },\n        });\n      }\n\n      initCall.then((provider) => {\n        window.provider = provider;\n        window.tonProvider = new OKXTonProvider(window.provider);\n        window.tonProvider.onStatusChange((walletInfo) => {\n              console.log('TONConnection onStatusChange:', JSON.stringify(walletInfo));\n            }, (err) => {\n              console.log('TONConnection onStatusChange error:', err);\n            }\n        )\n\n        if (window.provider instanceof OKXUniversalConnectUI) {\n          window.provider.onModalStateChange((state)=>{\n            console.log(`onModalStateChange   ${JSON.stringify(state)}`)\n          })\n        }\n\n        console.log(\"init finished:\", provider);\n        console.log(\"init finished session:\", JSON.stringify(provider.session));\n\n        if (provider.session?.namespaces) {\n          const newChains = [];\n          console.log(\"namespaces\", provider.session.namespaces);\n          Object.entries(provider.session.namespaces).forEach(([key, value]) => {\n            if (key === \"eip155\") {\n              value.chains.forEach((chain) => {\n                newChains.push(parseInt(chain.substring(7)));\n              });\n            }\n            else {\n              value.chains.forEach((chain) => {\n                newChains.push(chain);\n              });\n            }\n          });\n\n          console.log(\"existing chains:\", newChains);\n          this.initChains(newChains);\n        } else {\n          this.initChains([]);\n        }\n\n        provider.on(\"display_uri\", (uri) => {\n          if (!useShortLink()){\n            if (this.isPC()) {\n              if (uri && !this.withUI && !this.universalToTG) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          }\n          console.log(\"通知>>>display_uri  ==> \", uri);\n        });\n\n        provider.on(\"connect_signResponse\", (items) => {\n          console.log(\"通知>>>connect_signResponse  ==> \", JSON.stringify(items));\n          this.verifyMessage(items)\n        })\n\n        provider.on(\"short_display_uri\", (uri) => {\n          if (useShortLink()){\n            if (this.isPC()) {\n              if (uri && !this.withUI && !this.universalToTG) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          }\n          console.log(\"通知>>>short_display_uri  ==> \", uri);\n        });\n\n\n        provider.on(\"session_connecting\", () => {\n          if (useShortLink()){\n            alert(\"session_connecting\")\n          }\n          console.log(\"通知>>>session_connecting  ==> \");\n        });\n\n        provider.on(\"connect\", (session) => {\n          console.log(\"通知>>>get connect session\", session);\n        });\n        provider.on(\"reconnect\", (session) => {\n          console.log(\"通知>>>get reconnect session\", session);\n          this.walletAddress = \"connected\";\n        });\n        provider.on(\"disconnect\", ({ topic }) => {\n          console.log(`通知>>>get disconnect  ${topic}`);\n          this.walletAddress = \"disconnecteddddd\";\n        });\n        provider.on(\"session_delete\", ({ topic }) => {\n          console.log(`通知>>>get session_delete  ${topic}`);\n        });\n        provider.on(\"session_update\", (session) => {\n          console.log(`通知>>>get session_update `, JSON.stringify(session));\n        });\n      });\n    },\n\n    async connectBtnClicked() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        this.testTonSdk();\n      } else {\n        console.log(`connectBtnClicked provider not finish init`);\n      }\n    },\n\n    async syncAllAddressClick() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        if (window.provider instanceof OKXUniversalProvider){\n          if (window.provider.connected()){\n            try {\n              let message = await window.provider.syncAllAddresses()\n              if (typeof message == \"string\") {\n                this.testboc = message\n              } else {\n                this.testboc = JSON.stringify(message)\n              }\n            }catch (e) {\n              this.testboc = JSON.stringify(e)\n            }\n          }else{\n            this.testboc = \"not connected\"\n          }\n        }\n\n      } else {\n        console.log(`syncAllAddress provider not finish init`);\n      }\n    },\n\n    async disconnectAction() {\n      try {\n        console.log(\"get disconnect wallet btn clicked\");\n        // await TON.disconnect();\n        var provider = window.provider;\n        await provider.disconnect();\n        this.walletAddress = \"disconnected\";\n      } catch (error) {\n        console.log(\"Disconnect  error ==>> \", error.message);\n        this.currentStatus = error.message;\n      }\n    },\n\n    async eth_requestAccounts() {\n      var data = { method: \"eth_requestAccounts\" };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_chainId() {\n      var data = { method: \"eth_chainId\" };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async wallet_switchEthereumChain() {\n      var data = { method: \"wallet_switchEthereumChain\" };\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async wallet_addEthereumChain() {\n      var data = {\n        method: \"wallet_addEthereumChain\",\n        params: {\n          blockExplorerUrls: [\"https://explorer.fuse.io\"],\n          chainId: \"0x7a\",\n          chainName: \"Fuse\",\n          nativeCurrency: { name: \"Fuse\", symbol: \"FUSE\", decimals: 18 },\n          rpcUrls: [\"https://rpc.fuse.io\"],\n        },\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n    async personal_sign() {\n      if (this.selectedChain === \"eip155:1\") {\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0x1ca023f10e157d148deed210f8bee193657a1eaa7f187909e20a9dc3b071dbc364c41fde37960c05093359f410a061ec8a7dca8c0c39fc7c1e24de8a3329775d1b\n\n        var accounts = await window.provider.request(\n          { method: \"eth_requestAccounts\" },\n          \"eip155:1\"\n        );\n        var address = accounts[0];\n        console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n        var dataETH = {\n          method: \"personal_sign\",\n          params: [\n            \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n            address,\n          ],\n        };\n\n        this.testTransaction = JSON.stringify(dataETH);\n      } else if (\n        this.selectedChain === \"eip155:137\" ||\n        this.selectedChain === \"eip155:122\"\n      ) {\n        // method\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0xebda9cfa2af43999058dffa0107031d1ef7fc0252dca85dcbd22ea097af922ca39b64d509ef61ce42b7641c5840b8a80337ffd1411b13e87e2260a3f1b6c151c1b\n\n        var dataPolygon = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n        this.testTransaction = JSON.stringify(dataPolygon);\n      } else if (this.selectedChain === \"eip155:56\") {\n        var data = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n\n        this.testTransaction = JSON.stringify(data);\n      }\n    },\n\n    async eth_sendTransaction_swap() {\n      var data = {\n        method: \"eth_sendTransaction\",\n        chainId: \"eip155:122\",\n        params: {\n          value: \"0x38d7ea4c68000\",\n          gas: \"0x2665f\",\n          to: \"0xf2614A233c7C3e7f08b1F887Ba133a13f1eb2c55\",\n          from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n          data: \"0x2646478b000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee00000000000000000000000000000000000000000000000000038d7ea4c68000000000000000000000000000620fd5fa44be6af63715ef4e65ddfa0387ad13f5000000000000000000000000000000000000000000000000000000000000001b000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000700301ffff0201602352A9Eb5234466Eac23E59e7B99bCaE79C39c0BE9e53fd7EDaC9F859882AfdDa116645287C629040BE9e53fd7EDaC9F859882AfdDa116645287C62900602352A9Eb5234466Eac23E59e7B99bCaE79C39c01f2F3e73be57031114dd1f4E75c1DD87658be7F0E000bb800000000000000000000000000000000\",\n        },\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_signTypedData_v4() {\n      // method\n      // eth_signTypedData\n      // address\n      // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n      // valid\n      // true\n      // result\n      // 0xa8bb3c6b33a119d2d567c7632195c21988df778006082742125a591f5c633f716107883a37f7de6531a6312a5f69022135bf46fe5ab77905b62c82b3395f985e1b\n      //\n\n      // var data = {\n      //   \"method\": \"eth_signTypedData_v4\",\n      //   \"params\": {\n      //     \"typedDataJson\":\"{\\\"types\\\":{\\\"EIP712Domain\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"version\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"chainId\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"name\\\":\\\"verifyingContract\\\",\\\"type\\\":\\\"address\\\"}],\\\"Person\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"wallet\\\",\\\"type\\\":\\\"address\\\"}],\\\"Mail\\\":[{\\\"name\\\":\\\"from\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"to\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"contents\\\",\\\"type\\\":\\\"string\\\"}]},\\\"primaryType\\\":\\\"Mail\\\",\\\"domain\\\":{\\\"name\\\":\\\"Ether Mail\\\",\\\"version\\\":\\\"1\\\",\\\"chainId\\\":1,\\\"verifyingContract\\\":\\\"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\\\"},\\\"message\\\":{\\\"from\\\":{\\\"name\\\":\\\"Cow\\\",\\\"wallet\\\":\\\"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\\\"},\\\"to\\\":{\\\"name\\\":\\\"Bob\\\",\\\"wallet\\\":\\\"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\\\"},\\\"contents\\\":\\\"Hello, Bob!\\\"}}\"\n      // }}\n\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n        this.selectedChain\n      );\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n      var data = {\n        method: \"eth_signTypedData_v4\",\n        params: [\n          address,\n          {\n            types: {\n              EIP712Domain: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"version\",\n                  type: \"string\",\n                },\n                {\n                  name: \"chainId\",\n                  type: \"uint256\",\n                },\n                {\n                  name: \"verifyingContract\",\n                  type: \"address\",\n                },\n              ],\n              Person: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"wallet\",\n                  type: \"address\",\n                },\n              ],\n              Mail: [\n                {\n                  name: \"from\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"to\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"contents\",\n                  type: \"string\",\n                },\n              ],\n            },\n            primaryType: \"Mail\",\n            domain: {\n              name: \"Ether Mail\",\n              version: \"1\",\n              chainId: 1,\n              verifyingContract: \"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\",\n            },\n            message: {\n              from: {\n                name: \"Cow\",\n                wallet: \"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\",\n              },\n              to: {\n                name: \"Bob\",\n                wallet: \"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\",\n              },\n              contents: \"Hello, Bob!\",\n            },\n          },\n        ],\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_sendTransaction_transfer() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            chainId: \"0x1\",\n            to: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            value: \"0x5af3107a4000\",\n            maxPriorityFeePerGas: \"0x3b9aca00\",\n            gas: \"0x5e56\",\n            maxFeePerGas: \"0x2643b9db8\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gasPrice: \"0x17003f6530\",\n            nonce: \"0x0d30\",\n            data: \"0x\",\n            value: \"0x00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasLimit: \"0x5208\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x5e56\",\n            value: \"0x5af3107a4000\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasPrice: \"0x3b9aca00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            chainId: \"0x38\",\n          },\n        };\n      }else if(this.selectedChain === \"eip155:122\"){\n         data =   {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            value: \"0x0\",\n            chainId: \"0x7a\",\n          }\n        }\n      }\n\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n        this.selectedChain\n      );\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"to\"] = address;\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_approve() {\n      var data = {};\n\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000000000000022d473030f116ddee9f6b43ac78ba3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x582d872a1b094fc48f5de31d3b73f2d9be47def1\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000f6f8096ac575b0\",\n            to: \"0x0b3F868E0BE5597D5DB7fEB59E1CADBb0fdDa50a\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            value: \"0x0\",\n            gas: \"0xe117\",\n            gasPrice: \"0xb2d05e00\",\n            data: \"0x095ea7b300000000000000000000000031c2f6fcff4f8759b3bd5bf0e1084a055615c768ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x5CA42204cDaa70d5c773946e69dE942b85CA6706\",\n          },\n        };\n      }else if (this.selectedChain === 'eip155:122'){\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000000000000013b3\",\n            to: \"0x620fd5fa44BE6af63715Ef4E65DDFA0387aD13F5\",\n          },\n        };\n      }\n\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n        this.selectedChain\n      );\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_mint() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x4cacb\",\n            data: \"0xa64dfa75000000000000000000000000ed688002f3797599db8b4feacfe8b1dda0df1c8d000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003e00000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000042000000000000000000000000000000000000000000000000000000000000005000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000052000000000000000000000000000000000000000000000000000000000000005400000000000000000000000000000000000000000000000000000000000000560000000000000000000000000000000000000000000000000000000000000058000000000000000000000000000000000000000000000000000000000000005a000000000000000000000000000000000000000000000000000000000000005c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cecb15396825a895ff8da8fc2d2c77a234dccee00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f6261667962656968643737366b6177706e71336f6f6a6635693274787a76617737737164656b34616a776472637472703261366f626b70723773792f7b69647dan            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x30795\",\n            data: \"0xa64dfa75000000000000000000000000341b3687f0309778f08f29336b2c4b9c38b9f110000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f62616679626569686a6279676b68747a71376b68377434336266686e676e793236337668766f6578716a6d6e377161716166366e717a64743777712f7b69647dan            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      }\n\n      let str = JSON.stringify(data);\n      console.log(\"-----长度--->\", str.length);\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n          this.selectedChain\n      );\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async wallet_testRpc() {\n      let provider = window.provider;\n      provider.setDefaultChain(\n        `eip155:56`,\n        `https://eth-mainnet.g.alchemy.com/v2/NxUfYJUr-TQtEpLmSXhhD5pXn70GwsyV`\n      );\n      var data = {\n        method: \"eth_getBalance\",\n        params: [\"0x8D97689C9818892B700e27F316cc3E41e17fBeb9\", \"latest\"],\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async wallet_watchAsset() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xe0f63a424a4439cbe457d80e4f4b51ad25b2c56c\",\n              symbol: \"SPX6900\",\n              image:\n                \"https://assets.coingecko.com/coins/images/31401/standard/sticker_%281%29.jpg?1702371083\",\n              decimals: 8,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xeB51D9A39AD5EEF215dC0Bf39a8821ff804A0F01\",\n              symbol: \"LGNS\",\n              image: \"https://polygonscan.com/token/images/originlgns_32.png\",\n              decimals: 9,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0x031b41e504677879370e9dbcf937283a8691fa7f\",\n              symbol: \"FET\",\n              image: \"https://bscscan.com/token/images/fetch_32.png\",\n              decimals: 18,\n            },\n          },\n        };\n      }\n\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async ton_sendTransaction() {\n      var data  = {\n        \"messages\":[{\"address\":\"EQARULUYsmJq1RiZ-YiH-IJLcAZUVkVff-KBPwEmmaQGH6aC\",\"amount\":\"205000000\",\"payload\":\"te6cckEBAgEAhwABbQ+KfqUAAADNgG7tIEATEtAIAO87mQKicbKgHIk4pSPP4k5xhHqutqYgAB7USnesDnCcECwbgQMBAJUlk4VhgBD3JEg1TUr75iTijBghOKm/sxNDXUBl7CD6WMut0Q85x4RafwA/Es89DBXoTxuqxVFxyBbzt9Rav2HBUKl7hmkvLuKHLBCW57aK\"}],\n        \"validUntil\":1792481054,\n        \"network\":'-239'}\n      this.testTransaction = JSON.stringify(data)\n    },\n    ton_getAccount() {\n      this.testTransaction = \"这里是同步获取 不再需要点击 <<发送交易>>\"\n      let result =   window.tonProvider.account()\n      if (result) {\n        this.testboc = JSON.stringify(result);\n      } else {\n        this.testboc = 'null'\n      }\n    },\n\n    async tonUniversalLog() {\n      console.log(\"ton 信息: tonProvider  connected:\",window.tonProvider.connected())\n      console.log(\"ton 信息: tonProvider  account:\",JSON.stringify(window.tonProvider.account()))\n      console.log(\"ton 信息: tonProvider  wallet:\",JSON.stringify(window.tonProvider.wallet()))\n    },\n\n    async sendTransactionAlert() {\n      //\n      const response = await fetch(`https://apitest.fireverse.ai/oauth/okx/getNonce?publicAddress=0x0cecb15396825a895ff8da8fc2d2c77a234dccee`);\n      const data = await response.json();\n      console.log(\"请求数据----\",JSON.stringify(data))\n      await this.personal_sign()\n      if (confirm(\"Are you want to sign message?\")) {\n        this.sendTransaction();\n      }\n\n      // window.open(\"https://www.okx.com/download?deeplink=okx%3A%2F%2Fweb3%2Fwallet%2Fconnect\",'_self')\n    },\n\n    async sendTransaction() {\n      if (this.selectedChain.startsWith(\"aptos\")\n          || this.selectedChain.startsWith(\"movement\")\n          || this.selectedChain.startsWith(\"solana\")\n          || this.selectedChain.startsWith(\"sonic\")\n          || this.selectedChain.startsWith(\"cosmos\")) {\n        return\n      }\n      console.log(\"sendTransaction\", window.provider);\n      console.log(\"sendTransaction内容11------\", this.testTransaction);\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      if (this.testTransaction && window.provider) {\n        // eslint-disable-next-line no-undef\n        const sendData = JSON.parse(this.testTransaction);\n        try {\n          console.log(\"sendTransaction-----22method>>\", sendData.method);\n\n          let chainId = \"eip155:1\";\n          if (this.selectedChain) {\n            chainId = this.selectedChain;\n            console.log(\n              \"sendTransaction-----this.selectedChain>>\",\n              this.selectedChain\n            );\n          }\n          console.log(\"windowOpen[click_1]: \", Date.now());\n          if (chainId == \"sui:mainnet\") {\n            const adapter = new SuiAdapter(window.provider);\n            var suiResult = \"invalid result\";\n            if (this.currentSuiMethod == 'sui_getAccount') {\n              let result = adapter.getAccount()\n              if (typeof result == \"string\") {\n                this.testboc = result\n              } else {\n                this.testboc = JSON.stringify(result)\n              }\n            }\n            if (this.currentSuiMethod == \"sui_signTransaction\") {\n              suiResult = await adapter.signTransaction(\n                this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signAndExecuteTransaction\") {\n              suiResult = await adapter.signAndExecuteTransaction(\n                this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signMessage\") {\n              console.log(\"signMessage----\", this.currentSuiTransaction);\n              suiResult = await adapter.signMessage(this.currentSuiTransaction);\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_signPersonalMessage\") {\n              console.log(\n                \"signPersonalMessage----\",\n                this.currentSuiTransaction\n              );\n              suiResult = await adapter.signPersonalMessage(\n                this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_testRpc\") {\n              console.log(\"test rpc----\", this.currentSuiTransaction);\n              console.log(\n                `请求数据发送 rpc ----->> ${JSON.stringify(sendData)}`\n              );\n              const res = await window.provider.request(sendData, chainId);\n              console.log(`请求数据回调 rpc ----->> ${JSON.stringify(result)}`);\n              if (typeof res == \"string\") {\n                this.testboc = res;\n              } else {\n                this.testboc = JSON.stringify(res);\n              }\n            }\n            console.log(\"windowOpen[click_2]: \", Date.now());\n            return;\n          }else if(chainId === \"ton:-239\"){\n            console.log(\n                `请求数据发送 sendTransaction ---ton-->> ${JSON.stringify(sendData)}`\n            );\n            let result =  await window.tonProvider.sendTransaction(sendData)\n            console.log(\n                `请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`\n            );\n            if (typeof result == \"string\") {\n              this.testboc = result;\n            } else {\n              this.testboc = JSON.stringify(result);\n            }\n            return\n          }\n\n          if (chainId == 'btc:mainnet' \n            || chainId == 'btc:testnet'\n            || chainId == 'btc:signnet'\n            || chainId == 'fractal:mainnet') {\n            \n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var btcResult = 'invalid result'\n\n            const components = this.currentBtcMethod.split(\"_\")\n            if (components.length < 2) {\n              alert(\"method error\")\n              return\n            }\n\n            const method = components.at(-1)\n            if (method == 'signMessage') {\n              btcResult = await btcAdapter.signMessage(chainId, this.currentBtcTransaction[\"signStr\"])\n              this.testboc = JSON.stringify(btcResult)\n            } else if (method == 'send') {\n              btcResult = await btcAdapter.send(chainId, this.currentBtcTransaction)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'signPsbt') {\n              btcResult = await btcAdapter.signPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n\n              this.hexToBase64(btcResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (method == 'signPsbts') {\n              btcResult = await btcAdapter.signPsbts(chainId, this.currentBtcTransaction.psbtHexs, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (method == 'sendInscription') {\n              btcResult = await btcAdapter.sendInscription(chainId, this.currentBtcTransaction.address, this.currentBtcTransaction.inscriptionId, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (method == 'signAndPushPsbt') {\n              btcResult = await btcAdapter.signAndPushPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            }else if (method == 'sendBitcoin') {\n              btcResult = await btcAdapter.sendBitcoin(chainId, this.currentBtcTransaction.toAddress, this.currentBtcTransaction.satoshis, this.currentBtcTransaction.options)\n\n              this.testboc = JSON.stringify(btcResult)\n            }\n            return\n          }\n\n          if (chainId == 'fractal:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var fractalResult = 'invalid result'\n\n            if (this.currentFractalMethod == 'fractal_signMessage') {\n              fractalResult = await btcAdapter.signMessage(chainId, this.currentFractalTransaction['signStr'])\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_send') {\n              fractalResult = await btcAdapter.send(chainId, this.currentFractalTransaction)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signPsbt') {\n              fractalResult = await btcAdapter.signPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.hexToBase64(fractalResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentFractalMethod == 'fractal_signPsbts') {\n              fractalResult = await btcAdapter.signPsbts(chainId, this.currentFractalTransaction.psbtHexs, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_sendInscription') {\n              fractalResult = await btcAdapter.sendInscription(chainId, this.currentFractalTransaction.address, this.currentFractalTransaction.inscriptionId, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signAndPushPsbt') {\n              fractalResult = await btcAdapter.signAndPushPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            }else if (this.currentFractalMethod == 'fractal_sendBitcoin') {\n              fractalResult = await btcAdapter.sendBitcoin(chainId, this.currentFractalTransaction.toAddress, this.currentFractalTransaction.satoshis, this.currentFractalTransaction.options)\n\n              this.testboc = JSON.stringify(fractalResult)\n            }\n\n            return\n          }\n\n          console.log(`请求数据发送 sendTransaction ----->> ${JSON.stringify(sendData)}`)\n          var result = await window.provider.request(sendData, chainId)\n          console.log(`请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`)\n\n          console.log(\"windowOpen[click_3]: \", Date.now());\n          if (typeof result == \"string\") {\n            this.testboc = result;\n          } else {\n            this.testboc = JSON.stringify(result);\n          }\n          console.log(\"方法数据回调 --this.testboc--\", this.testboc);\n        } catch (error) {\n          console.error(\"方法数据回调失败 --Error--\", error.message);\n\n          if (error.code === OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n            this.testboc = error.message;\n          } else {\n            this.testboc = \"wrong signature！\" + error.message;\n          }\n        }\n      } else {\n        alert(\"Please input transaction data\");\n      }\n    },\n\n    hexToBase64(hexStr) {\n      var bytes = [];\n      for (var i = 0; i < hexStr.length; i += 2) {\n        bytes.push(parseInt(hexStr.substr(i, 2), 16));\n      }\n      const buffer = new Uint8Array(bytes)\n      const blob = new Blob([buffer]);\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = function (e) {\n          var base64Data = e.target.result.split(\",\")[1]\n          resolve(base64Data);\n        };\n        reader.onerror = function (e) {\n          reject(e);\n        };\n        reader.readAsDataURL(blob);\n      });\n    },\n    testBase64UrlSafe(){\n      let datatest = {\"protocolVer\":1,\"topic\":\"8a7a4c3be73802d0ae2587123ade7bb79f27433b9aa3ca589a2208a2089eecfd\",\"clientId\":\"5f1bbf9eac92160affa7ef04d0a710817ddb6d8c22ebbd6263e86f059930b404\",\"requestId\":\"1731383250054\",\"dAppInfo\":{\"url\":\"connect.oker.vip\",\"origin\":\"https://connect.oker.vip\",\"name\":\"univer test dapp\",\"icon\":\"https://avatars.githubusercontent.com/u/37784886\"},\"requests\":[{\"name\":\"requestAccounts\",\"requiredNamespaces\":[{\"namespace\":\"aptos\",\"chains\":[\"aptos:637\"]}],\"optionalNamespaces\":[],\"connectRequestMethods\":[{\"chainId\":\"aptos:637\",\"method\":\"aptos_signMessage\",\"params\":{\"data\":{\"address\":true,\"application\":true,\"chainId\":true,\"message\":\"123 中文测试!\",\"nonce\":\"1234\"},\"applicationUrl\":\"https://connect.oker.vip\",\"prefix\":\"APTOS\",\"aptosChainId\":\"1\"}}]}],\"redirect\":\"none\"}\n      let json = JSON.stringify(datatest)\n      const utf8Array = new TextEncoder().encode(json);\n      let binary = '';\n      utf8Array.forEach(byte => {\n        binary += String.fromCharCode(byte);\n      });\n\n      let firstStr =  btoa(binary)\n      console.log(\"字符串编码1>>>>\",firstStr)\n      firstStr = firstStr.replace(/\\+/g, '-')  // 替换 '+'\n      console.log(\"字符串编码2>>>>\",firstStr)\n      firstStr = firstStr.replace(/\\//g, '_')  // 替换 '/'\n      console.log(\"字符串编码3>>>>\",firstStr)\n      firstStr = firstStr.replace(/=+$/, '');  // 移除 '=';\n      console.log(\"字符串编码4>>>>\",firstStr)\n\n      let showUrl =  getUniversalLink(getAppWalletDeepLink(firstStr))\n      console.log(\"字符串编码5>>>>\",showUrl)\n      this.qrValue = showUrl;\n      this.showModal = true;\n    },\n\n\n    async testTonSdk() {\n      // 1. connect\n      //  create sub providers for each namespace/chain\n      let nameSpacesChains = [];\n      let optSpaceChains = [];\n\n      let solanaChains = [\n        \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n        \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n        \"svm:70000062\",\n      ];\n      let hasEip155, hasSolana, hasSui, hasBtc, hasAptos, hasTon, hasCosmos, hasTron = false\n\n      let suiChains = [\n        \"sui:mainnet\",\n      ];\n\n      let btcChains = [\n        \"btc:mainnet\",\n        \"fractal:mainnet\",\n        \"btc:testnet\",\n        \"btc:signnet\"\n      ];\n\n      const chains = Object.entries(this.availableChains)\n          .filter((chain) => chain[1].checked)\n          .map((chain) => chain[0]);\n      console.log(`chains  ===> ${chains.values()}`)\n      chains.forEach(function (chainId) {\n        console.log(`chains.forEach chainId  ===> ${chainId}`)\n\n        if (solanaChains.includes(chainId)) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"ton\")) {\n          nameSpacesChains.push(chainId)\n          hasTon = true\n          return\n        }\n        if (typeof chainId == 'string' && (chainId.startsWith(\"aptos\") || chainId.startsWith(\"movement\"))) {\n          nameSpacesChains.push(chainId)\n          hasAptos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId)\n          hasSolana = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"cosmos\")) {\n          nameSpacesChains.push(chainId)\n          hasCosmos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"tron\")) {\n          nameSpacesChains.push(chainId)\n          hasTron = true\n          return\n        }\n\n        if (suiChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`);\n          nameSpacesChains.push(chainId);\n          hasSui = true;\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`)\n          nameSpacesChains.push(chainId)\n          hasBtc = true\n          return\n        }\n\n        hasEip155 = true\n        nameSpacesChains.push(`eip155:${chainId}`)\n      })\n\n\n      optionChains.forEach(function (chainId) {\n        if (solanaChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n        if (typeof chainId == \"string\" && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (suiChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          optSpaceChains.push(chainId)\n          return\n        }\n\n        optSpaceChains.push(`eip155:${chainId}`)\n      })\n\n      console.log(`namespaceChains  ===> ${JSON.stringify(nameSpacesChains)}`);\n      var connectData = {};\n      if (nameSpacesChains && nameSpacesChains.length > 0) {\n        var requireData = {};\n\n        if (hasEip155) {\n          requireData.eip155 = {\n            chains: nameSpacesChains.filter((item) =>\n              item.startsWith(\"eip155\")\n            ),\n            defaultChain: nameSpacesChains.filter((item) =>\n              item.startsWith(\"eip155\")\n            )[0],\n          };\n        }\n        if (hasSolana) {\n          requireData.solana = {\n            chains: nameSpacesChains.filter(\n              (item) =>\n                item.startsWith(\"solana\") ||\n                item.startsWith(\"sonic\") ||\n                item.startsWith(\"svm\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n              (item) =>\n                item.startsWith(\"solana\") ||\n                item.startsWith(\"sonic\") ||\n                item.startsWith(\"svm\")\n            )[0],\n          };\n        }\n\n        if (hasCosmos) {\n          requireData.cosmos = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            )[0],\n          }\n        }\n        if (hasTron) {\n          requireData.tron = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            )[0],\n          }\n        }\n        if (hasTon) {\n\n          //\n          let tonParams = {\n            ton_addr:{\n              name: 'ton_addr',\n            }\n          };\n          if (this.tonProofValue){\n            tonParams = {\n              ton_addr:{\n                name: 'ton_addr',\n              },\n              ton_proof:{\n                name: 'ton_proof',\n                payload: this.tonProofValue,\n              }\n            };\n          }\n\n\n          requireData.ton = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"ton\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"ton\"))[0],\n            params:tonParams\n          };\n        }\n\n        if (hasSui) {\n          requireData.sui = {\n            chains: nameSpacesChains.filter((item) => item.startsWith(\"sui\")),\n            defaultChain: nameSpacesChains.filter((item) =>\n              item.startsWith(\"sui\")\n            )[0],\n            rpcMap: {\n              \"sui:mainnet\": \"https://www.okx.com/fullnode/sui/discover/rpc\"\n            }\n          };\n        }\n        if (hasAptos) {\n          requireData.aptos = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\"))[0]\n          }\n        }\n\n        if (hasBtc) {\n          let btcChains = nameSpacesChains.filter(item => item.startsWith(\"btc\") || item.startsWith(\"fractal\"))\n          requireData.btc = {\n            chains: btcChains,\n            defaultChain: btcChains[0]\n          }\n        }\n        console.log(`requireData  ===> ${JSON.stringify(requireData)}`)\n        connectData['namespaces'] = requireData;\n        console.log(JSON.stringify(connectData))\n      }\n\n      if (optSpaceChains && optSpaceChains.length > 0) {\n        var optData = {\n          eip155: {\n            chains: optSpaceChains.filter((item) => item.startsWith(\"eip155\")),\n            defaultChain: optSpaceChains.filter((item) =>\n              item.startsWith(\"eip155\")\n            )[0],\n          },\n        };\n        connectData[\"optionalNamespaces\"] = optData;\n      }\n\n      if (nameSpacesChains.length === 0 && optSpaceChains.length === 0) {\n        //未选择链\n        alert(\"Please select a chain from above to continue\");\n        return;\n      }\n      console.log(\"=====>connectData \");\n      console.log(connectData);\n\n      var connectMethod;\n      let signMethods = this.getCurrentSelectedMethodData();\n      if (window.provider instanceof OKXUniversalConnectUI) {\n        if (signMethods && signMethods.length>0){\n          connectMethod = window.provider.openModalAndSign(connectData,JSON.parse(JSON.stringify(signMethods)));\n        }else {\n          connectMethod = window.provider.openModal(connectData);\n        }\n      } else {\n        if (this.universalToTG){\n          connectData.sessionConfig = {\n            useMini:true,\n            openUniversalUrl:true,\n            tmaReturnUrl:'back'\n          }\n        }else{\n          connectData.sessionConfig = {\n            redirect: selectedReturnStrategy\n          }\n        }\n        if (signMethods && signMethods.length>0){\n          connectMethod = window.provider.connectAndSign(connectData,JSON.parse(JSON.stringify(signMethods)));\n        }else {\n          connectMethod = window.provider.connect(connectData);\n        }\n      }\n\n      await connectMethod\n        .then((result) => {\n          // 2. set defaul chain\n          this.walletAddress = \"connected\";\n          if (this.isPC()) {\n            this.showModal = false;\n          }\n          if (result){\n            this.testboc = JSON.stringify(result)\n          }\n\n          if (window.provider.session && window.provider.session.namespaces){\n            let ton = window.provider.session.namespaces[\"ton\"];\n          console.log(\"是否包含ton\",ton)\n            if (ton){\n              this.tonUniversalLog()\n            }\n          }\n\n\n\n        })\n        .catch((error) => {\n          if (error.message){\n            alert(error.message)\n          }\n\n          console.error(\"发生了错误：\", error);\n        });\n    },\n\n    getCurrentSelectedMethodData(){// 连接签名\n      var methodList = [];\n      this.selectedMethod.forEach(method =>{\n        switch (method) {\n          case \"wallet_addEthereumChain(ETH)\":\n            methodList.push({\n              method: \"wallet_addEthereumChain\",\n              chainId:\"eip155:1\",\n              params: {\n                blockExplorerUrls: [\"https://explorer.fuse.io\"],\n                chainId: \"0x7a\",\n                chainName: \"Fuse\",\n                nativeCurrency: { name: \"Fuse\", symbol: \"FUSE\", decimals: 18 },\n                rpcUrls: [\"https://rpc.fuse.io\"],\n              },\n            })\n            break;\n          case \"personal_sign(ETH)\":\n            methodList.push(\n              {\n                method: \"personal_sign\",\n                chainId: \"eip155:1\",\n                params: [\n                  \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n                ],\n              });\n            break;\n          case \"solana_signMessage(Sol mainnet)\":\n            methodList.push(\n              {\n                \"chainId\": \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n                \"method\": \"solana_signMessage\",\n                \"params\": {\n                  \"message\": \"Hello Solana\",\n                }\n              }\n            );\n            break;\n          case \"sui_signMessage(Sui mainnet)\":\n          case \"sui_signPersonalMessage(Sui mainnet)\": {\n            let suiData = [\n              76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n              109, 111, 118, 101,\n            ];\n            let uint8Array = new Uint8Array(suiData);\n            let currentMethod = \"sui_signMessage\";\n            this.currentSuiTransaction = {\n              message:uint8Array\n            }\n\n            if(method.startsWith(\"sui_signPersonalMessage\")){\n              currentMethod = \"sui_signPersonalMessage\";\n            }\n            methodList.push(\n                {\n                  method: currentMethod,\n                  chainId: \"sui:mainnet\",\n                  params: {\n                    message: uint8Array,\n                  }\n                }\n            );\n            break;\n          }\n          case \"btc_signMessage(BTC)\":\n            methodList.push(\n              {\n                method: \"btc_signMessage\",\n                chainId: \"btc:mainnet\",\n                params: {\n                  message: \"Welcome to BTC\"\n                }\n              }\n            )\n            break;\n          case \"aptos_signMessage(aptos mainnet)\":\n            methodList.push(\n              {\n                \"chainId\": \"aptos:mainnet\",\n                \"method\": \"aptos_signMessage\",\n                \"params\": {\n                  address: true,\n                  application: true,\n                  chainId: true,\n                  message: \"Hello Aptos\",\n                  nonce: \"1234\"\n                }\n              }\n            )\n            break;\n          case \"cosmos_signArbitrary(cosmoshub)\":\n            methodList.push(\n                {\n                  \"chainId\": \"cosmos:cosmoshub-4\",\n                  \"method\": \"cosmos_signArbitrary\",\n                  \"params\": {\n                    message: \"test cosmos\"\n                  }\n                }\n            )\n\n            break;\n          case \"test_noSupport_eth(ETH)\":\n            methodList.push(\n                {\n                  chainId: \"eip155:1\",\n                  method: \"test_noSupport_eth\",\n                  params: {\n                    message: \"test hello\",\n                  }\n                }\n            )\n            break;\n          case \"sync_all_addresses\":\n            methodList.push(\n                {\n                  method: \"sync_all_addresses\",\n                });\n            break;\n          case \"tron_signMessage\":\n            methodList.push(\n                {\n                  chainId:\"tron:mainnet\",\n                  method: \"tron_signMessage\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n          case \"tron_signMessageV2\":\n            methodList.push(\n                {\n                  chainId:\"tron:mainnet\",\n                  method: \"tron_signMessageV2\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n            //\n          default:\n\n            break;\n        }\n      })\n      this.selectedMethodData = methodList\n      return methodList\n\n    },\n\n\n    closeModal() {\n      this.showModal = false;\n    },\n\n    isPC() {\n      const userAgentInfo = navigator.userAgent;\n      console.log(\"current device ua is ===>\", userAgentInfo);\n\n      const Agents = [\n        \"Android\",\n        \"iPhone\",\n        \"SymbianOS\",\n        \"Windows Phone\",\n        \"iPad\",\n        \"iPod\",\n      ];\n      let flag = true;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = false;\n          break;\n        }\n      }\n      return flag;\n    },\n    isSafariOrChrome() {\n      const userAgentInfo = navigator.userAgent;\n      const Agents = [\"Safari\", \"Chrome\"];\n      let flag = false;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = true;\n          break;\n        }\n      }\n      return flag;\n    },\n\n    /// solana\n    async sol_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      let data = {\n        method: \"solana_signMessage\",\n        params: {\n          message: \"Hello Solana\",\n          pubkey: \"\",\n        },\n      };\n      this.testTransaction = JSON.stringify(data);\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let message = await provider.signMessage(\n          \"Hello Solana\",\n          this.selectedChain\n      );\n      console.log(\"solana_signMessage Result:\",JSON.stringify(message))\n      const result1 = nacl.sign.detached.verify(\n          new TextEncoder().encode(\"Hello Solana\"),\n          message.signature,\n          new PublicKey(message.publicKey).toBytes()\n      );\n      console.log(result1)\n\n      if (typeof message == \"string\") {\n        this.testboc = result1;\n      } else {\n        this.testboc = result1;\n      }\n    },\n\n    async aptos_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      let data = {\n        address: true,\n        application: true,\n        chainId: true,\n        message: \"Hello Aptos\",\n        nonce: \"1234\"\n      }\n\n      let provider = new OKXAptosProvider(window.provider)\n      let message = await provider.signMessage(data, this.selectedChain)\n      this.testTransaction = JSON.stringify(data)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n          functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async move_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async move_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n          functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n        },\n      });\n\n      // let data = {\n      //   \"arguments\": [\"100000\",[\"0\",\"0\",\"10533\"],[\"10\",\"5\",\"5\"],[\"false\",\"false\",\"true\"]],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x3\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\",\"0x73eb84966be67e4697fc5ae75173ca6c35089e802650f75422ab49a8729704ec::coin::DooDoo\",\"0x53a30a6e5936c0a4c5140daed34de39d17ca7fcae08f947c02e979cef98a3719::coin::LSD\",\"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::CurveV1\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x54cb0bb2c18564b86e34539b9f89cfe1186e39d89fce54e1cd007b8e61673a85::bin_steps::X80\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async sol_signVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(\n        provider.getAccount(\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\").address\n      );\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n         recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signTransaction(\n        transaction,\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAndSendVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n        transaction,\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllVersionedTransactions() {\n      let provider = new OKXSolanaProvider(window.provider);\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n        [transaction],\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signTransaction() {\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n         recentBlockhash: blockhash,\n      }).add(\n        SystemProgram.transfer({\n          fromPubkey: new PublicKey(provider.getAccount().address),\n          toPubkey: new PublicKey(provider.getAccount().address),\n          lamports: 1000,\n        })\n      );\n\n      this.testTransaction = safeJsonStringify(transaction)\n      let result = await provider.signTransaction(\n        transaction,\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllTransactions() {\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n        SystemProgram.transfer({\n          fromPubkey: new PublicKey(provider.getAccount().address),\n          toPubkey: new PublicKey(provider.getAccount().address),\n          lamports: \"100\",\n        })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n        [transaction],\n        this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    getSolConnect() {\n      let rpc = \"https://www.okx.com/fullnode/sol/discover/rpc\"\n      if (this.selectedChain === \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\") {\n        rpc = \"https://www.okx.com//fullnode/sol/discover/rpc\"\n      } else if (this.selectedChain === \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\"){\n        rpc = \"https://www.okx.com/fullnode/soltestnet/discover/rpc\"\n      } else if (this.selectedChain === \"svm:70000062\") {\n        rpc = \"https://www.okx.com/fullnode/sonic/testnet/discover/rpc\"\n      }\n      return rpc\n    },\n\n    async sol_signAndSendTransaction() {\n\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n        SystemProgram.transfer({\n          fromPubkey: new PublicKey(provider.getAccount().address),\n          toPubkey: new PublicKey(provider.getAccount().address),\n          lamports: \"100\",\n        })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n        transaction,\n        this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async cosmos_signArbitrary() {\n      let provider = new OKXCosmosProvider(window.provider)\n      let message = await provider.signArbitrary(this.selectedChain, provider.getAccount(this.selectedChain).address, \"test cosmos\")\n      if (typeof message == \"string\") {\n        this.testboc = message;\n      } else {\n        let isValid =  await this.cosmos_verifySignArbitrary(provider.getAccount(this.selectedChain).address,\"test cosmos\",message.signature, message.pub_key.value)\n        console.log(\"verify\",isValid)\n        this.testboc = \"verify:\" + isValid + JSON.stringify(message);\n      }\n    },\n\n    async cosmos_verifySignArbitrary(signer, data, signature, pubkey) {\n      try {\n        console.log(\"cosmos_verifySignArbitrary signer:\",signer)\n        console.log(\"cosmos_verifySignArbitrary data:\",JSON.stringify(data))\n        console.log(\"cosmos_verifySignArbitrary signature:\",signature)\n        console.log(\"cosmos_verifySignArbitrary pubkey:\",pubkey)\n\n        // 将bech32地址转换为公钥\n        const {prefix: prefixStr} = fromBech32(signer)\n\n        const signatureBuffer = Buffer.from(signature, 'base64');\n\n        const uint8Signature = new Uint8Array(signatureBuffer); // Convert the buffer to an Uint8Array\n\n        const pubKeyValueBuffer = Buffer.from(pubkey, 'base64'); // Decode the base64 encoded value\n\n        const pubKeyUint8Array = new Uint8Array(pubKeyValueBuffer); // Convert the buffer to an Uint8Array\n\n        // 验证签名\n        return await verifyADR36Amino(\n            prefixStr,\n            signer,\n            data,\n            pubKeyUint8Array,\n            uint8Signature\n        )\n      } catch (err) {\n        console.error('Verification failed:', err)\n        return false\n      }\n    },\n\n    async cosmos_signAmino(){\n      let provider = new OKXCosmosProvider(window.provider)\n      // const rpcUrl = 'https://osmosis-rpc.publicnode.com:443';\n      // const client = await StargateClient.connect(rpcUrl);\n      // const height = await client.getHeight();\n      // let address = provider.getAccount(this.selectedChain).address\n      // const sequence = await client.getSequence(address)\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      // let signDoc = makeSignDoc(\n      //     transaction.msgs,\n      //     transaction.fee,\n      //     this.selectedChain.split(\":\")[1],\n      //     transaction.memo,\n      //     transaction.accountNumber,\n      //     transaction.sequence,\n      // )\n      let signDoc = {\n        \"chain_id\": \"osmosis-1\",\n        \"account_number\": \"630104\",\n        \"sequence\": \"480\",\n        \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]},\n        \"msgs\": [{\n          \"type\": \"osmosis/poolmanager/swap-exact-amount-in\",\n          \"value\": {\n            \"sender\": \"osmo1u6lts9ng4etxj0zdaxsada6zgl8dudpgelmuyu\",\n            \"routes\": [{\n              \"pool_id\": \"1096\",\n              \"token_out_denom\": \"ibc/987C17B11ABC2B20019178ACE62929FE9840202CE79498E29FE8E5CB02B7C0A4\"\n            }, {\n              \"pool_id\": \"611\",\n              \"token_out_denom\": \"ibc/27394FB092D2ECCD56123C74F36E4C1F926001CEADA9CA97EA622B25F41E5EB2\"\n            }],\n            \"token_in\": {\"denom\": \"uosmo\", \"amount\": \"100\"},\n            \"token_out_min_amount\": \"8\"\n          }\n        }],\n        \"memo\": \"FE\",\n        \"timeout_height\": \"23603788\",\n        \"signOptions\": {\n          \"useOneClickTrading\": false,\n          \"preferNoSetFee\": true,\n          \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]}\n        }\n      }\n\n\n\n\n\n\n\n      // let signOption = {\n      //   memo: true, // optional\n      //   fee: true, // optional\n      //   gasRate: {\n      //     // optional\n      //     average: \"0.2\",\n      //     low: \"0.02\",\n      //     tiny: \"0.002\",\n      //   },\n      // }\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signAmino(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, signDoc)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    messageToBuffer(message) {\n      var buffer = Buffer.from([]);\n      try {\n        if (typeof message === \"string\") {\n          buffer = Buffer.from(message.replace(\"0x\", \"\"), \"hex\");\n        } else {\n          buffer = Buffer.from(message);\n        }\n      } catch (err) {\n        console.log(`messageToBuffer error: ${err}`);\n      }\n      return buffer;\n    },\n\n\n\n    async cosmos_signDirect() {\n      let provider = new OKXCosmosProvider(window.provider)\n\n      let signDoc = {\n        \"bodyBytes\": this.messageToBuffer(\"0x0ac1010a292f6962632e6170706c69636174696f6e732e7472616e736665722e76312e4d73675472616e736665721293010a087472616e7366657212096368616e6e656c2d301a0d0a05756f736d6f120431303030222b6f736d6f3175366c7473396e67346574786a307a64617873616461367a676c386475647067656c6d7579752a2d636f736d6f733175366c7473396e67346574786a307a64617873616461367a676c386475647067337967766a773207080410ebe3f90a3880b0bcafd18cec8218\"),\n        \"authInfoBytes\": this.messageToBuffer(\"0x0a510a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a2102446e19e94ac0e83ea896d2712507577eb39fbdd2d6ae9f0fc0b9759f1fbaba9012040a02080118e00312140a0e0a05756f736d6f1205323530303010859a11\"),\n        \"chainId\": \"osmosis-1\",\n        \"accountNumber\": \"630104\",\n      }\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signDirect(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, transaction)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    sui_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentSuiTransaction = params\n      this.currentSuiMethod = flag\n    },\n\n    btc_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentBtcTransaction = params\n      this.currentBtcMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n\n    fractal_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentFractalTransaction = params\n      this.currentFractalMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n\n    allBtc_generateTransactionParams(chainId, params, flag) {\n      if (!chainId) {\n        alert(\"ChainId is required\")\n        return\n      }\n      this.selectedChain = chainId;\n      console.log(`已切换到链 :`, chainId);\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n      try {\n        window.provider.setDefaultChain(this.selectedChain);\n      } catch (error) {\n        alert(error)\n        return\n      }\n\n      /// 走btc的逻辑\n      this.testTransaction = JSON.stringify(params)\n      this.currentBtcTransaction = params\n      this.currentBtcMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n    tron_getTransactionResult(result) {\n      if (typeof result == \"string\") {\n        this.testboc = result\n      } else {\n        this.testboc = JSON.stringify(result)\n      }\n    },\n    tron_generateTransactionParams(params){\n      if (typeof params == \"string\") {\n        this.testTransaction = params\n      } else {\n        this.testTransaction = JSON.stringify(params)\n      }\n    },\n    handleModalsSelect(modals) {\n      selectedModals = modals;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: modals.length === 3 ? \"all\" : modals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n\n    handleReturnStrategySelect(returnStrategy) {\n      selectedReturnStrategy = returnStrategy === \"deeplink\" ? this.deeplink : returnStrategy;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      } else {\n        if (window.provider.sessionConfig) {\n          window.provider.sessionConfig.redirect = selectedReturnStrategy;\n        } else {\n          window.provider.sessionConfig = {\n            redirect: selectedReturnStrategy\n          };\n        }\n      }\n    },\n\n    handleReturnStrategyDeeplink(deeplink) {\n      console.log('handleReturnStrategyDeeplink', deeplink)\n      selectedReturnStrategy = deeplink;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: deeplink,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      } else {\n        if (window.provider.sessionConfig) {\n          window.provider.sessionConfig.redirect = deeplink;\n        } else {\n          window.provider.sessionConfig = {\n            redirect: deeplink\n          };\n        }\n      }\n    },\n\n    handleLanguageSelect(language) {\n      selectedLanguage = language;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: language,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n    handleConnectMethodsSelect() {\n      console.log(\"当前的方法 this.selectedMethod>>>>\",this.selectedMethod);\n    },\n\n    eth_verifyMessage(message, signature,ethAddress) {\n      console.log(\"eth_verifyMessage   message>>>\",message)\n      console.log(\"eth_verifyMessage   signature>>>\",signature)\n      console.log(\"eth_verifyMessage   ethAddress>>>\",ethAddress)\n      if (!message || !signature){\n        return \"\"\n      }\n      let originalMessage = message\n      if (message.startsWith(\"0x\")){\n        originalMessage = originalMessage.replace(/^0x/, '');\n        let str = '';\n        for (let i = 0; i < originalMessage.length; i += 2) {\n          const byte = originalMessage.slice(i, i + 2);\n          str += String.fromCharCode(parseInt(byte, 16));\n        }\n        originalMessage = str\n      }\n      console.log(\"eth_verifyMessage   originalMessage>>>\",originalMessage)\n\n      // const messageHash = ethers.utils.hashMessage(originalMessage);\n      const recoveredAddress = ethers.utils.verifyMessage(originalMessage, signature);\n      console.log(\"eth_verifyMessage recoveredAddress:\", recoveredAddress);\n      return recoveredAddress.toLowerCase() === ethAddress.toLowerCase();\n    },\n\n    async verifyMessage(list){ //连接验签\n\n        if (window.provider && window.provider.session && list && list.length>0){\n          let verifyList = {}\n          for (let methodItem of list){\n            if (\"result\" in methodItem && \"method\" in methodItem){\n              let requestItme = this.selectedMethodData.filter(item => item.method === methodItem.method)[0];\n              console.log(\"验证签名 请求>>>:\", JSON.stringify(requestItme));\n              console.log(\"验证签名 结果>>>:\", JSON.stringify(methodItem));\n              if (methodItem.method === \"personal_sign\"){\n                let ethAddress = await window.provider.request({ method: \"eth_requestAccounts\" },methodItem.chainId)\n                ethAddress = ethAddress[0];\n                console.log(\"验证eth 钱包地址>>>:\", ethAddress);\n                let ethMessage = requestItme.params[0]\n                console.log(\"验证eth 签名消息体>>:\", JSON.stringify(ethMessage));\n                verifyList[methodItem.method] = this.eth_verifyMessage(ethMessage,methodItem.result,ethAddress)\n              }else if(methodItem.method === \"solana_signMessage\"){\n                let solanaMessage = methodItem.result\n                if (\"signature\" in solanaMessage && \"publicKey\" in solanaMessage){\n                  const verifySol = nacl.sign.detached.verify(\n                      new TextEncoder().encode(\"Hello Solana\"),\n                      solanaMessage.signature,\n                      new PublicKey(solanaMessage.publicKey).toBytes()\n                  );\n                  verifyList[methodItem.method] = verifySol\n                }else {\n                  verifyList[methodItem.method] = false\n                }\n              }else if(methodItem.method === \"sui_signPersonalMessage\" || methodItem.method === \"sui_signMessage\"){\n                let suiResult =  this.sui_verifySignature(methodItem.result);\n                  verifyList[methodItem.method] = (await suiResult).result\n              }else if(methodItem.method === \"btc_signMessage\"){\n\n                verifyList[methodItem.method] = \"Not verified yet\"\n\n              }else if(methodItem.method === \"aptos_signMessage\"){\n                let aptosMessage = methodItem.result\n                let aptosProvider = new OKXAptosProvider(window.provider)\n                let  aptosPublicKey  = aptosProvider.getAccount(methodItem.chainId)?.publicKey\n\n                let signStr = aptosMessage.signature\n                if (signStr.startsWith(\"0x\")) {\n                  signStr = signStr.slice(2, signStr.length)\n                }\n\n                console.log(\"aptos_signMessage aptosPublicKey And signStr\",aptosPublicKey,signStr)\n                verifyList[methodItem.method] = nacl.sign.detached.verify(\n                    Buffer.from(aptosMessage.fullMessage),\n                    Buffer.from(signStr, 'hex'),\n                    Buffer.from(aptosPublicKey, 'hex'),\n                );\n              }else if(methodItem.method === \"cosmos_signArbitrary\"){\n                let cosmosProvider = new OKXCosmosProvider(window.provider)\n                let cosmosAddress = cosmosProvider.getAccount(methodItem.chainId)?.address\n                let cosmosMessage = methodItem.result\n                let isValid =  await this.cosmos_verifySignArbitrary(cosmosAddress,\"test cosmos\",cosmosMessage.signature, cosmosMessage.pub_key.value)\n                verifyList[methodItem.method] = isValid\n\n              }else if (methodItem.method === \"tron_signMessage\") {\n                let tronMessage = methodItem.result\n                let tronWeb = new TronWeb({\n                  \"fullHost\": 'https://api.trongrid.io',\n                  \"headers\": {},\n                  \"privateKey\": ''\n                })\n                let provider = new OKXTronProvider(window.provider)\n                verifyList[methodItem.method] = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), tronMessage, provider.getAccount(\"tron:mainnet\").address)\n              } else if (methodItem.method === \"tron_signMessageV2\") {\n                let tronMessage = methodItem.result\n                let tronWeb = new TronWeb({\n                  \"fullHost\": 'https://api.trongrid.io',\n                  \"headers\": {},\n                  \"privateKey\": ''\n                })\n                const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", tronMessage);\n                let provider = new OKXTronProvider(window.provider)\n\n                verifyList[methodItem.method] = base58Address === provider.getAccount(\"tron:mainnet\").address\n              }\n              else {\n                verifyList[methodItem.method] = \"Not verified yet\"\n\n              }\n            }else if(\"method\" in methodItem && \"error\" in methodItem) {\n              verifyList[methodItem.method] = methodItem.error\n            }\n\n          }\n\n          console.log(\"验证签名 最后的结果>>>:\", JSON.stringify(verifyList));\n          this.testTransaction = \"签名验证结果如下: \\n\" + JSON.stringify(verifyList)\n        }else {\n          console.log(\"验证签名 window.provider.session.connectMethodsReply 为空:\");\n\n        }\n\n    },\n\n    handleThemeSelect(theme) {\n      selectedTheme = theme;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: theme,\n          },\n        };\n      }\n    },\n\n    async sui_verifySignature(signatureResult) {\n      let resultObj = signatureResult\n      let result = false\n      let msg = ''\n      try {\n        /// 获取当前account\n        const adapter = new SuiAdapter(window.provider);\n        let account = adapter.getAccount()\n        console.log(`Account中获取的address：${account.address}`)\n\n        /// 验证签名\n        let pubKey = await verifyPersonalMessageSignature(this.currentSuiTransaction.message, resultObj.signature)\n        let address = pubKey.toSuiAddress()\n        console.log(`验签结果计算得到address：${address}`)\n\n        /// 对比pubKey\n        console.log(`account pubkey: ${account.publicKey}`,)\n        console.log(`result pubkey: ${pubKey.toBase64()}`)\n        result = (account.address === address) && (account.publicKey === pubKey.toBase64())\n\n        msg = `address verify: ${account.address === address}\\npublicKey verify: ${account.publicKey === pubKey.toBase64()}`\n        console.log(\"signature verify success: \", pubKey)\n      } catch (e) {\n        console.log(\"signature verify failed: \", e)\n      }\n      return {\n        result,\n        msg\n      }\n    },\n\n\n    handleRedirectSelect(input) {\n      this.redirect = input;\n    },\n\n    handleRedirectDeeplink(input) {\n      this.redirectDeeplink = input;\n    },\n\n    addRedirectParam() {\n      if (this.testTransaction) {\n        const newTransaction = JSON.parse(this.testTransaction);\n        newTransaction.redirect = this.redirect === 'deeplink' ? this.redirectDeeplink : this.redirect;\n        this.testTransaction = JSON.stringify(newTransaction);\n      }\n    },\n\n    canChainAddRedirectParam() {\n      return chainsThatCanAddRedirectParam.some((c) => this.selectedChain.startsWith(c));\n    }\n  },\n  created() {\n    // for (const eventName of Object.values(OKX_TON_CONNECTION_AND_TRANSACTION_EVENT)) {\n    //   console.log(eventName);\n    //   window.addEventListener(eventName, (event) => {\n    //     console.log(eventName,event.detail)\n    //     this.currentStatus = eventName\n    //   });\n    // }\n  },\n\n  mounted() {\n\n    var scriptTag = document.createElement(\"script\");\n    scriptTag.src = \"https://telegram.org/js/telegram-web-app.js\";\n    scriptTag.id = \"tgsdk\";\n    document.getElementsByTagName('head')[0].appendChild(scriptTag);\n\n    this.connectReady = true;\n    document.title = \"OKX Connect\";\n    this.initBtnClicked()\n  },\n};\n</script>\n","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signMessage()\">signMessage(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_send()\">send(BTC)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendBitcoin()\">sendBitcoin(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signPsbt_up()\">signPsbt(上架NFT)</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"btc_signAndPushPsbt_up()\">signAndPushPsbt(上架NFT)</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在OKX App选择要上架的Btc NFT，点击【上架】\n        </li>\n        <li>\n          2. 弹出签名面板，点开高级选项，查看\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出上架流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendInscription()\">sendInscription(BTC)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Btc NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount\n    }\n  },\n  methods: {\n    btc_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to BTC\"\n      };\n      this.$emit('generateTransactionParams', params, \"btc_signMessage\")\n    },\n\n    btc_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"btc_send\")\n    },\n\n    btc_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"btc_sendBitcoin\")\n    },\n\n    btc_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"btc_signPsbt\")\n    },\n\n    btc_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"btc_signAndPushPsbt\")\n    },\n\n    btc_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"btc_sendInscription\")\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./BtcTransactionPanel.vue?vue&type=template&id=b2c51436&scoped=true\"\nimport script from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./BtcTransactionPanel.vue?vue&type=style&index=0&id=b2c51436&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-b2c51436\"]])\n\nexport default __exports__","<template>\n  <div>\n    <el-radio-group v-model=\"chainId\">\n      <el-radio value=\"btc:mainnet\">btc:mainnet</el-radio>\n      <el-radio value=\"btc:testnet\">btc:testnet</el-radio>\n      <el-radio value=\"btc:signnet\">btc:signnet</el-radio>\n      <el-radio value=\"fractal:mainnet\">fractal:mainnet</el-radio>\n    </el-radio-group>\n    <div class=\"line\"></div>\n    <el-row :gutter=\"12\">\n      <el-col :span=\"24\">\n        <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signMessage()\">signMessage</el-button>\n      </el-col>\n      <div class=\"line\"></div>\n      <el-col :span=\"24\">\n        <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n        <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n        <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_send()\">send</el-button>\n        <br>\n        <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n        <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendBitcoin()\">sendBitcoin</el-button>\n      </el-col>\n      <div class=\"line\"></div>\n      <el-col :span=\"24\">\n        <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n        <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signPsbt_up()\">signPsbt(上架NFT)</el-button>\n        <br>\n        <el-button class=\"grid-content\" type=\"warning\"\n          @click=\"btc_signAndPushPsbt_up()\">signAndPushPsbt(上架NFT)</el-button>\n        <br>\n        <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n          <li>\n            1. 在OKX App选择要上架的Btc NFT，点击【上架】\n          </li>\n          <li>\n            2. 弹出签名面板，点开高级选项，查看\n          </li>\n          <li>\n            3. 单击复制，就可以得到psbt。然后退出上架流程。\n          </li>\n          <li>\n            4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n          </li>\n        </div>\n      </el-col>\n      <div class=\"line\"></div>\n      <el-col :span=\"24\">\n        <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n        <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n        <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendInscription()\">sendInscription</el-button>\n        <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n          <li>\n            1. 在web端NFT界面，选择要发送的Btc NFT，打开详情\n          </li>\n          <li>\n            2. 从NFT详情页URL中获取NFT id（url最后一部分）\n          </li>\n          <li>\n            3. 复制到上面输入框中，再点击sendInscription按钮\n          </li>\n        </div>\n      </el-col>\n    </el-row>\n  </div>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'AllBtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    const chainId = ref('btc:mainnet')\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount,\n      chainId\n    }\n  },\n  methods: {\n    btc_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: `Welcome to BTC(${this.chainId})`\n      };\n      this.$emit('generateTransactionParams', this.chainId, params, \"btc_signMessage\")\n    },\n\n    btc_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', this.chainId, params, \"btc_send\")\n    },\n\n    btc_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', this.chainId, params, \"btc_sendBitcoin\")\n    },\n\n    btc_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', this.chainId, {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"btc_signPsbt\")\n    },\n\n    btc_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', this.chainId, {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"btc_signAndPushPsbt\")\n    },\n\n    btc_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', this.chainId, {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"btc_sendInscription\")\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./AllBtcTransactionPanel.vue?vue&type=template&id=528400c8&scoped=true\"\nimport script from \"./AllBtcTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./AllBtcTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./AllBtcTransactionPanel.vue?vue&type=style&index=0&id=528400c8&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-528400c8\"]])\n\nexport default __exports__","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signMessage()\">signMessage(Fractal)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_send()\">send(Fractal)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_sendBitcoin()\">sendBitcoin(Fractal)</el-button>\n\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signPsbt_up()\">signPsbt(上架NFT)</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_signAndPushPsbt_up()\">signAndPushPsbt(上架NFT)</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在OKX App选择要上架的Fractal NFT，点击【上架】\n        </li>\n        <li>\n          2. 弹出签名面板，点开高级选项，查看\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出上架流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_sendInscription()\">sendInscription(Fractal)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Fractal NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount\n    }\n  },\n  methods: {\n    fractal_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to UniSat!\\n\\nClick to sign in and accept the UniSat Terms of Service (https://unisat.io/terms-of-service.html) and Privacy Policy (https://unisat.io/privacy-policy.html).\\n    \\nThis request will not trigger a blockchain transaction.\\n    \\nYour authentication status will reset after 24 hours.\\n    \\nWallet address:\\nbc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\\n    \\nNonce:\\n162d70e3-8c21-4cfd-9a22-9bf0a4b7be51\\n\"\n      };\n      this.$emit('generateTransactionParams', params, \"fractal_signMessage\")\n    },\n\n    fractal_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_send\")\n    },\n\n    fractal_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_sendBitcoin\")\n    },\n\n    fractal_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"fractal_signPsbt\")\n    },\n\n    fractal_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"fractal_signAndPushPsbt\")\n    },\n\n    fractal_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"fractal_sendInscription\")\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./FractalTransactionPanel.vue?vue&type=template&id=02b5b8a5&scoped=true\"\nimport script from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./FractalTransactionPanel.vue?vue&type=style&index=0&id=02b5b8a5&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-02b5b8a5\"]])\n\nexport default __exports__","<script>\n\nimport {getFullnodeUrl, SuiClient} from \"@mysten/sui/client\";\nimport {Transaction as SuiTransaction} from '@mysten/sui/transactions';\n\nexport default {\n  name: \"SuiTransactionPanel\",\n  methods: {\n    sui_getAccount() {\n      this.$emit('generateTransactionParams', '', \"sui_getAccount\")\n    },\n\n    //对单个交易签名（不发送)\n    async sui_signMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signMessage\")\n    },\n\n    async sui_signPersonalMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signPersonalMessage\")\n    },\n\n    sui_signTransaction2() {\n      // 定义要转移的金额和目标地址\n      const amount = 109; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    async sui_requestRpc() {\n      let provider = window.provider;\n      provider.setDefaultChain(\n          `sui:mainnet`,\n          `https://fullnode.mainnet.sui.io:443`\n      );\n      var data = {\n        method: \"suix_getBalance\",\n        params: [\n          \"0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae\",\n          \"0x168da5bf1f48dafc111b0a488fa454aca95e0b5e::usdc::USDC\",\n        ],\n      };\n\n      this.$emit(\"generateTransactionParams\", data, \"sui_testRpc\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 102; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signAndExecuteTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n      this.$emit(\"generateTransactionParams\", input, \"sui_signAndExecuteTransaction\")\n    },\n\n    /// generate txBytes and txSerialize\n    async generateTsBytesAndSerizlize(input) {\n      /// txBytes and txSerialize may be constructed in advance by the dapp side\n      let resultTuple = [\"\", \"\"];\n      if (\n          \"txBytes\" in input &&\n          input.txBytes.length > 0 &&\n          \"txSerialize\" in input &&\n          input.txSerialize.length > 0\n      ) {\n        resultTuple = [input.txBytes, input.txSerialize];\n      }\n\n      /// Otherwise, a transactionBlock parameter is required.\n      if (!(\"transactionBlock\" in input)) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      // if (this.walletAddress != \"connected\") {\n      //   alert(\"请先连接钱包\");\n      //   return new Promise((resolve) => {\n      //     resolve(resultTuple);\n      //   });\n      // }\n\n      let senderAccounts = window.provider.requestAccountsWithNamespace(\"sui\");\n      if (senderAccounts.length == 0) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      try {\n        let rpcUrl = getFullnodeUrl(\"mainnet\");\n        rpcUrl = \"https://www.okx.com/fullnode/sui/discover/rpc\"\n        const suiClient = new SuiClient({ url: rpcUrl });\n\n        /// sender is required\n        input.transactionBlock.setSender(senderAccounts[0]);\n        const result = await input.transactionBlock.build({\n          client: suiClient,\n        });\n        const txBytes = Buffer(result).toString(\"base64\");\n        const txSerialize = await SuiTransaction.from(txBytes).toJSON();\n        resultTuple = [txBytes, txSerialize];\n      } catch (error) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      return new Promise((resolve) => {\n        resolve(resultTuple)\n      })\n    },\n\n    //签名并发送交易\n    sui_signAndExecuteTransaction() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n        \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.testTransaction = JSON.stringify(input);\n      this.currentSuiTransaction = input;\n      this.currentSuiMethod = \"sui_signAndExecuteTransaction\";\n    },\n  },\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_getAccount()\">getAccount(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signMessage()\">signMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signPersonalMessage()\">signPersonalMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signTransaction2()\">signTransaction(Sui)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signAndExecuteTransaction()\">sendTransaction(Sui)</el-button>\n      <div style=\"font-size: 12px; color: gray;\">(send to Rally Tiger account)</div>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_requestRpc()\">RPC_getBalance</el-button>\n      <div style=\"font-size: 12px; color: gray;\">get USDC balance of address:</div>\n      <div style=\"font-size: 12px; color: gray\">0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae</div>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signTransaction_pre_execution()\">signTransaction(prepared data)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signAndExecuteTransaction_pre_execution()\">sendTransaction(prepared data)</el-button>\n    </el-col>\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./SuiTransactionPanel.vue?vue&type=template&id=56a8eddf&scoped=true\"\nimport script from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./SuiTransactionPanel.vue?vue&type=style&index=0&id=56a8eddf&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-56a8eddf\"]])\n\nexport default __exports__","<script>\n\n\nimport {OKXTronProvider} from \"@okxconnect/universal-provider\";\nimport {TronWeb} from \"tronweb\";\n\nexport default {\n  name: \"TronTransactionPanel\",\n  methods: {\n\n    async tron_signMessage() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessage(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n\n      const verify = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), res, provider.getAccount(\"tron:mainnet\").address)\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" + res, \"tron_signMessage\")\n    },\n\n    async tron_signMessageV2() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessageV2(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", res);\n      console.log(\"tron_signMessageV2_base58Address\", base58Address)\n      console.log(\"tron_signMessageV2_address\", provider.getAccount(\"tron:mainnet\").address)\n      const verify = base58Address === provider.getAccount(\"tron:mainnet\").address\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" +  res, \"tron_signMessage\")\n    },\n\n    async tron_signTransaction(isOnlySign) {\n      let provider = new OKXTronProvider(window.provider)\n        let tronWeb = new TronWeb({\n          \"fullHost\": 'https://api.trongrid.io',\n          \"headers\": {},\n          \"privateKey\": ''\n        })\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const transaction = await tronWeb.transactionBuilder.sendTrx(\"TGBcVLMnVtvJzjPWZpPiYBgwwb7th1w3BF\", 1000, address);\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let res = await provider.signTransaction( transaction, \"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", res, \"tron_signTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async getContract() {\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41e95812d8d5b5412d2b9f3a4d5a87ca15c5c51f33\"\n      \n      try {\n        const contract = await tronWeb.trx.getContract(contractAddress)\n        const abi = contract.abi.entrys;\n        console.log(\"获取到的合约：\")\n        console.log(abi)\n      } catch (error) {\n        console.log(\"Error getting contract ABI:\", error);\n      }\n    },\n    \n    async tron_signAndSendTransactionContract(isOnlySign) {\n      // this.getContract()\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41e95812d8d5b5412d2b9f3a4d5a87ca15c5c51f33\"\n      let provider = new OKXTronProvider(window.provider)\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const parameter = [\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n      ]\n      const ret = await tronWeb.transactionBuilder.triggerSmartContract(contractAddress, \"quote(uint256,uint256,uint256)\", {}, parameter, address);\n      console.log(\"=====>transaction: \")\n      console.log(ret);\n      this.$emit(\"generateTransactionParams\", ret.transaction)\n      if (isOnlySign) {\n        let tx = await provider.signTransaction( ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async tron_signAndSendTransactionApprove(isOnlySign) {\n      let provider = new OKXTronProvider(window.provider)\n\n      let transaction = {\n        \"visible\": false,\n        \"txID\": \"d1ed31b6abd2c37e248254681d3ee61b2e628fbd776def753b5592712ebd98c5\",\n        \"raw_data\": {\n          \"contract\": [{\n            \"parameter\": {\n              \"value\": {\n                \"data\": \"095ea7b3000000000000000000000000e95812d8d5b5412d2b9f3a4d5a87ca15c5c51f33ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n                \"owner_address\": \"4157c140be01fa2bbabf7f055ab879d0c05725293c\",\n                \"contract_address\": \"41b4a428ab7092c2f1395f376ce297033b3bb446c1\"\n              },\n              \"type_url\": \"type.googleapis.com/protocol.TriggerSmartContract\"\n            },\n            \"type\": \"TriggerSmartContract\"\n          }],\n          \"ref_block_bytes\": \"1bde\",\n          \"ref_block_hash\": \"af71fa1aa01b5bd1\",\n          \"expiration\": Date.now() + 60000,\n          \"fee_limit\": 250000000,\n          \"timestamp\": Date.now()\n        },\n        \"raw_data_hex\": \"0a021bde2208af71fa1aa01b5bd140f8b1fa98b4325aae01081f12a9010a31747970652e676f6f676c65617069732e636f6d2f70726f746f636f6c2e54726967676572536d617274436f6e747261637412740a154157c140be01fa2bbabf7f055ab879d0c05725293c121541b4a428ab7092c2f1395f376ce297033b3bb446c12244095ea7b3000000000000000000000000e95812d8d5b5412d2b9f3a4d5a87ca15c5c51f33ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff70f1e6f698b432900180e59a77\"\n      }\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let tx = await provider.signTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n\n    }\n\n  }\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessage()\">tron_signMessage</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessageV2()\">tron_signMessageV2</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(true)\">\n        tron_signTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(true)\">\n        tron_signTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(true)\">\n        tron_signTransaction(Approve)\n      </el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(false)\">\n        tron_signAndSendTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(false)\">\n        tron_signAndSendTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(false)\">\n        tron_signAndSendTransaction(approve)\n      </el-button>\n    </el-col>\n\n\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./TronTransactionPanel.vue?vue&type=template&id=eaaccc08&scoped=true\"\nimport script from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./TronTransactionPanel.vue?vue&type=style&index=0&id=eaaccc08&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-eaaccc08\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=6605562d&scoped=true\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=6605562d&scoped=true&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-6605562d\"]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport ElementPlus from 'element-plus'\nimport 'element-plus/dist/index.css'\nimport App from './App.vue'\n\nconst app = createApp(App)\n\napp.use(ElementPlus)\napp.mount('#app')","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkokxconnectdemo\"] = self[\"webpackChunkokxconnectdemo\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(76528); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["Object","defineProperty","exports","value","CONNECT_METHOD_BATCH_FETCHMSG","CONNECT_METHOD_FETCHMSG","CONNECT_METHOD_RECEIVE","CONNECT_METHOD_UNSUB","CONNECT_METHOD_SUB","CONNECT_METHOD_PUBLISH","CONNECT_METHOD_LOGIN","CONNECT_METHOD_PUSH","require","__createBinding","this","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","__setModuleDefault","v","__importStar","mod","result","prototype","hasOwnProperty","call","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","next","e","rejected","done","then","apply","OKXWalletConnector","constants_1","storageconstants_1","storage_1","utils_1","utils_2","eventemitter3_1","log","protocol_1","WS","resolveWebSocketImplementation","constructor","url","events","EventEmitter","state","ConnectorState","InitState","selectedUrlIndex","retryCount","timeOutLimit","checkWSUrl","Error","heartbeatTimer","connectionTimeoutTimer","connectURLStorage","Storage","OKXCONNECTOR_CACHE_KEY","connecting","Connecting","onPayload","data","logDebug","rsp","Date","now","toString","emit","onClose","event","_a","socket","code","onError","id","payload","msg","onopen","onmessage","onclose","Connected","emitError","errorEvent","heartbeat","clearTimeout","OnError","readyState","WebSocket","OPEN","send","setTimeout","bind","tryRegistOpen","logError","registOpen","inRetry","toUTCString","URLSearchParams","startTimeOutTimer","hasBuiltInWebSocket","onerror","close","on","resetTimeOutTimer","OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE","FINISHED","checkMaxRetry","OKXCONNECTOR_WS_URL_LIST","length","connectionTryNext","nextUrl","getNextSelectUrl","CANCELED","pendingSocket","TIME_OUT","cacheSuccessUrlSelect","saveContent","onVisibleChanged","document","visibilityState","arguments","once","err","OKXConnectError","OKX_CONNECT_ERROR_CODES","CONNECTION_ERROR","connect","removeEventListener","addEventListener","disconnect","Disconnected","currentStatus","addListener","decrypt","success","failed","listenPayloadHandler","removeListener","parsedEvent","safeJsonParse","params","rawMsg","message","failHandler","addPackageParse","callback","payloadHandler","param","listener","off","doLogin","safeJsonStringify","getMsgPayloadFromHistory","tmpMsg","jsonstr","onOpen","openHandler","ConnectionManager","connect_1","commands_1","jwtconstants_1","crypto_1","jwt_1","safejson_1","log_1","report_1","url_1","appname","connectStorage","OKXCONNECTOR_CACHE_KEY_DAPP","crypto","SessionCrypto","inTMA","isInTMA","reportLog","keyPairInfo","getCachedCryptoKeyPair","jwtKeyPair","getCachedJWTKeyPair","saveJWTKeyPair","connector","OKXCONNECTOR_WS_URL_1","packageId","connectedWalletPK","currentTopic","refreshPackageId","saveCryptoKeyPair","keyPair","cacheInfo","encryptStoreMsg","OKXCONNECTOR_CRYPTO_KEY","kp","getAndDecrypt","content","clearCache","strkeyPair","publicKey","toHexString","secretKey","OKXCONNECTOR_JWT_KEY","strKeyPairInfo","hexToByteArray","generateKeyPair","isWalletPKReady","makeJWT","topic","signJWT","OKXCONNECTOR_JWT_SIDE","OKXCONNECTOR_JWT_TTL","parsePackage","input_1","input","ignoreACK","_b","_c","_d","_e","sendACK","getItem","OKXCONNECTOR_TOKEN_CACHE","inputObj","messageId","sendReceive","restoreConnect","getConnectInfo","generateTopic","info","channelId","clientId","stringifyKeypair","fromRestore","timeLog","getTime","lastConnectId","cachedSenderPublicKey","OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE","jwtToken","timeOne","error","name","timeF","sendFetchAndConsumeMessages","timeTh","catch","jsonrpc","CONNECT_JSONRPC_VER","method","token","replace","parsedMessage","fail","msgObj","trimStart","startsWith","sendRaw","ttl","OKXCONNECTOR_MESSAGE_TTL","msg_1","encrypt","reportEvent","OKXReportType","LOG","msgId_1","success_1","msgId","reason","sendConnectSessionInfo","fetchedMessages","hasMore","receivedMsgs","i","timeFive","cleanCache","saveSessionContent","key","OKXCONNECTOR_SESSION_PREFIX_KEY","jsonData","getSessionContent","jsonStr","object","getCurrentConnectionReady","OKXCONNECTOR_WS_URL_IDX_KEY","OKXCONNECTOR_WS_URL_3","OKXCONNECTOR_WS_URL_2","EVENT_EMITTER_MAX_LISTENERS","Engine","sessionUtils_1","connectionManager","pendingRequests","Map","disconnectListener","getDefaultReporter","beginReport","jsonResponse","handleResponse","addDisconnectListener","disconnecter","push","setSessionConnectingListener","sessionConnectingListener","clear","getRequestId","requestId","bindRequestForPromise","set","request","requestAnswer","option","JSON","stringify","assign","onAck","sendSession","sessionInfo","response","delete","forEach","restoreconnect","onConnectResult","conect","sessionConfig","connectInfo","openUniversalLink","openUniversalUrl","connectRequest","protocolVer","Number","tonConnectSdkVersion","dAppInfo","dappInfo","requests","connectRequestStr","utf8Array","TextEncoder","encode","base64Encoded","btoa","String","fromCharCode","deeplinkUrl","standardDeeplink","isIOS","isIos","openOKXDeeplinkWithFallback","session","onConnect","getUniversalLink","connectResponse","namespaces","buildNameSpacesByConnectResponse","universalConnect","connectInfoAndUrl","tonRequest","universalRequest","item","universalConnectRequest","redirect","encodeConnectParams","tonConnectRequest","isFromTonSDK","defaultConnectRequest","openOKXLink","getOKXLink","useMini","tmaReturnUrl","openMethod","openOKXTMAWalletlinkWithFallback","useShortLink","openOKXUniversalLink","UNKNOWN_ERROR","walletName","responses","wallet","methodsResponse","find","connectRequestMethods","signResponse","WalletConnectionManager","connectionManager_1","walletConnectionManager_1","engine_1","__importDefault","MULTICODEC_ED25519_LENGTH","MULTICODEC_ED25519_HEADER","MULTICODEC_ED25519_BASE","MULTICODEC_ED25519_ENCODING","DID_METHOD","DID_PREFIX","DID_DELIMITER","KEY_PAIR_SEED_LENGTH","DATA_ENCODING","JSON_ENCODING","JWT_ENCODING","JWT_DELIMITER","JWT_IRIDIUM_TYP","JWT_IRIDIUM_ALG","JWTHeaderType","decodeJSON","encodeJSON","encodeIss","decodeIss","encodeSig","decodeSig","encodeData","decodeData","encodeJWT","decodeJWT","verifyJWT","ed25519","tweetnacl_1","stringUtils_1","default","sign","str","okxtoString","okxfromString","val","publicKeyStr","join","issuer","prefix","multicodec","split","bytes","encoded","header","signature","jwt","slice","sub_1","aud_1","ttl_1","keyPair_1","sub","aud","iat","Math","floor","alg","typ","iss","exp","act","detached","verify","OKXCONNECTOR_JWT_WALLET_SIDE","buildRequestAccountNameSpacesByConnectResponse","requestAccountNameSpaces","universalResponse","tonAddress","tonProof","address","network","ton_addr","ton_proof","accounts","namespace","addresses","methods","extra","chains","addressItem","addressArr","chain","utils_3","crypto_js_1","subKey","beforeKey","localStorage","resolveLocalStorage","checkAndUpgradeCache","storeKey","cipherIV","cacheStr","cacheKey","cache","cacheObj","fromCacheKey","toCacheKey","setItem","removeItem","timestamp","saveItem","localKey","totalCacheStr","getCachedPBKDF2InfoKey","pwLen","saltLen","pw","iv","salt","OKXCONNECTOR_STORAGER_CRYPTO_SALT","randomBytes","OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD","OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV","ivBuffer","PBKDF2","iterations","storeInfo","AES","enc","Utf8","OKXCONNECTOR_STORAGE_CIPHER_METHOD","OKXCONNECTOR_TON_KEY","WalletConnectionManagerEvent","WalletConnectionManagerTopicInfoCacheKey","RECEIVE_REQUEST","walletConnectionConstants_1","communicateEvents","sessionCryptoInfoMap","inLogin","isLogined","offset","topicId","isTopicPublicKeyExist","timestampStr","parseInternalMsg","internalMsg","internalObj","origin","originContent","base64decode","updateClientId","cid","lastCheck","getLastSixMd5Hash","dappPublicKey","syncCacheSessionInfo","topic_1","_f","_g","_h","_j","_k","_l","isInternalData","inner_message","inner_topic","messageObj","sessionInfoString","base64Content","inner_connection","toObject","decryptWallet","recovrySessionInfoFromCache","cacheMap","topicItem","cryptoItem","cryptoKeyPair","cacheSessionInfo","sync","duplicatedTopics","includes","appendTopic","sessionPublicKey","subscribeTopics","Array","from","confirmAppendingTopics","size","keys","getSessionPublicKey","getCurrentCachedTopicIdList","needPublicKey","useRaw","connectedDappPK","cryptoObject","encryptWallet","sendUnsubscribe","sendBatchFetchAndConsumeMessages","topicIdList","topics","withInternalData","finishCount","idx","nonceLength","sessionKeyPair","createKeypairFromString","createKeypair","box","createNonce","receiverPublicKey","encodedMessage","nonce","encrypted","concatInfo","concatUint8Arrays","hexResult","encodedResult","base64encode","senderPublicKey","messageByteArray","toUint8Array","internalMessage","splitToUint8Arrays","decrypted","open","TextDecoder","decode","__exportStar","p","IEngine","ISignClient","ISignClientEvents","IEngineEvents","super","client","creatOKXMiniAppWalletInfo","creatOKXWalletInfo","getBigIntRpcId","formatJsonRpcRequest","isJsonRpcError","isJsonRpcResponse","parseConnectionError","isHttpUrl","formatJsonRpcError","json_rpc_1","wallet_info_1","isJsonRpcPayload","isJsonRpcRequest","isJsonRpcResult","payloadId","formatJsonRpcResult","isReservedErrorCode","getError","getErrorByCode","formatErrorMessage","isWsUrl","okx_connect_error_1","IncrementalRandomGenerator","bits","Uint8Array","Uint16Array","Uint32Array","initialValue","getNextValue","uint8Generator","uint16Generator","date","BigInt","RESERVED_ERROR_CODES","type","STANDARD_ERROR_MAP","DEFAULT_ERROR","match","values","INTERNAL_ERROR","SERVER_ERROR","getUrlProtocol","matches","RegExp","matchRegexProtocol","regex","protocol","test","CONNECT_ITEM_ERROR_CODES","TONCHAIN","connect_wallet_1","connect_event_1","downloadUrl","standardUniversalLink","tgwalletName","getTestTwaUrl","window","okxTesttwaUrl","getTestTgTwaUrl","okxTestTgtwaUrl","tgwalletAppName","shortUniversalLink","okxDeeplink","location","hostname","SERVER_ERROR_CODE_RANGE","INVALID_PARAMS","METHOD_NOT_FOUND","INVALID_REQUEST","PARSE_ERROR","getDefaultMessageByCode","setPrototypeOf","toJSON","BAD_REQUEST_ERROR","ALREADY_CONNECTED_ERROR","NOT_CONNECTED_ERROR","UNKNOWN_APP_ERROR","USER_REJECTS_ERROR","METHOD_NOT_SUPPORTED","CHAIN_NOT_SUPPORTED","NameSpaceKeyTron","NameSpaceKeyCosmos","NameSpaceKeyAptos","NameSpaceKeyBtc","NameSpaceKeySui","NameSpaceKeyTON","NameSpaceKeySOL","NameSpaceKeyEip155","misc_1","callForSuccess","fn","options","attempts","delayMs","lastError","delay","timeout","signal","aborted","timeoutId","checkMetaData","versionCompare","isBrowser","isOS","isMobileUserAgent","openDeeplinkWithFallback","openLinkBlank","openLink","toSafeBase64FromBase64","isValidObject","getAppWalletShortDeepLink","encodeTWAConnectURLParams","getTelegramWalletTWAUrl","getAppWalletDeepLink","encodeTelegramUrlParameters","isTelegramUrl","openOKXDeeplink","logWarning","call_for_success_1","web_api_1","tma_api_1","request_1","debug","forceReport","defaultReporter","OKXReporter","packageJson","version","args","console","okxLogDebug","reduce","sendRecordContent","warn","action","content_1","OKXReportSide","versionStr","cross_fetch_1","localforage_1","reportApiList","reportCacheKey","reportUUIDKey","MAX_LIMIT_REPORTCOUNT","DEFAULT_HTTP_HEADERS","Accept","DEFAULT_HTTP_METHOD","DEFAULT_FETCH_OPTS","headers","PAGE_IN","PAGE_OUT","CLICK","DAPP","WALLET","fetchListWithTimeout","urls_1","args_1","urls","controller","AbortController","fetchPromise","timeoutPromise","_","abort","race","ok","status","currentSide","currentVersion","storage","createInstance","recordList","currentUUID","configVersionAndSide","side","appName","recordCacheKey","reportPlatform","startErrorCatching","records","uuid","sendCachedRecords","getWindow","cachedErrors","sendRecord","record","body","res","filter","path","pathname","language","navigator","ua","userAgent","platform","reportItem","lang","markRecordItem","sendList","map","allSettled","results","keepIndex","index","splice","markRecord","Report_WalletType_Key","Report_Proceed_QRCode_Click","Report_ChooseType_Download_Click","Report_ChooseType_ConnectWallet_Click","Report_Proceed_Retry_Click","Report_ChooseType_ConnectWallet_View","Report_Loading_ConnectWallet_View","Report_Proceed_QRCode_View","Report_Proceed_Proceed_View","dappMetaData","icon","JSONStringify","JSONParse","json","numbersBiggerThanMaxInt","serializedData","group","parse","isCustomFormatBigInt","substring","alloc","allocUnsafe","basics_1","string","encoding","base","BASES","decoder","array","encoder","createCodec","buf","ascii","bufNum","charCodeAt","utf8","hex","bases","base16","latin1","binary","isTmaPlatform","isInTelegramBrowser","sendExpand","sendOpenTelegramLink","initParams","locationHash","hash","urlParseHashParams","tmaPlatform","tgWebAppPlatform","Telegram","WebApp","webAppVersion","tgWebAppVersion","platforms","TelegramWebviewProxy","isTelegramWebview","TelegramWebview","postEvent","link","fallback","URL","pathFull","search","isIframe","versionAtLeast","path_full","parent","eventType","eventData","external","notify","trustedTarget","postMessage","indexOf","_path","urlSafeDecode","qIndex","pathParam","substr","query_params","urlParseQueryString","urlencoded","decodeURIComponent","queryString","paramName","paramValue","queryStringParams","v1","v2","a","p1","p2","v1List","v2List","max","parseInt","ver","removeUrlLastSlash","addPathToUrl","useStandardUniversalLink","replaceStrWithParam","cleanUrl","deeplinkEncodeUrl","encodeURIComponent","fullUrl","isTelegram","newWindow","href","deepLinkOpened","timeoutDuration","fallbackToDownloadPage","parameters","encodedParameters","connectParam","redirectStr","okxconnect","extraparams","base64ContentStr","urlSafeBase64","twaDeepLink","openTelegramLink","encodeTGParams","RANDOM_LENGTH","hasLocalStorage","hashKey","generateRandomBytes32","tweetnacl_util_1","to_string_1","sha256_1","BASE16","hexString","byteArray","byte","buffer1","buffer2","mergedArray","subArray1","subArray2","encodeUint8Array","urlSafe","encodeBase64","decodeToUint8Array","decodeBase64","uint8Array","decodeUTF8","decodedUint8Array","encodeUTF8","scheme","global","self","randomBytes32","obj","getPrototypeOf","maxTouchPoints","isIOSDevice","MSStream","isIPadOS","MD5","base64","getUserAgent","ua_parser_js_1","target","doFallback","fallbackTimeout","check","vendor","opera","getResult","osName","os","toLowerCase","deviceModel","device","model","browserName","browser","OKXBtcProvider","_1","provider","caip","getAddressForChainId","chainId","ns","checkChainId","account","getAccount","signMessage","signStr","ret","errorData","sendBitcoin","toAddress","satoshis","to","feeRate","txhash","checkParameters","signPsbt","psbtHex","signPsbts","psbtResults","psbtHexs","signAndPushPsbt","sendInscription","inscriptionId","extension","coinId","protocolId","atomicSuffix","ordinalsSuffix","endsWith","removeSuffix","scenario","txType","batchBean","coinAmount","nftId","suffix","unexistKeys","namespaceKey","OKXCosmosProvider","core_1","accountArray","algo","bech32Address","pubKey","hexToUint8Array","signArbitrary","signerAddress","signDoc","chain_id","account_number","sequence","fee","gas","amount","msgs","memo","signData","signAmino","signOptions","resData","signed","signDirect","bodyBytes","bufferToHex","authInfoBytes","accountNumber","messageToBuffer","buffer","arr","output","x","padStart","arrayBuffer","byteValue","isNaN","OKXTonProvider","statusChangeSubscriptions","statusChangeErrorSubscriptions","tonWallet","errorsHandler","connected","tonNameSpace","walletStateInit","sessionWallet","tonDeviceInfo","appVersion","maxProtocolVersion","features","connectItems","onStatusChange","sendTransaction","transaction","MAINNET","requestAccountsWithNamespace","requestParams","OKXTronProvider","TRON_CHAIN_ID","getChain","stringToHex","signMessageV2","signTransaction","signedTx","realSignTx","visible","txID","rawData","contract","raw_data","expiration","ref_block_bytes","ref_block_hash","raw_data_hex","signAndSendTransaction","OKXUniversalProvider","eip155_1","sui_1","client_1","namespaces_1","solana_1","btc_1","aptos_1","ton_1","cosmos_1","tron_1","packages_1","provider_1","init","opts","setGlobal","okxConnectUniversalinwindow","initialize","providerOpts","rpcProviders","requestParam","buildRequestParamFromRequest","getProvider","validateChain","keyArr","enable","connectOpts","requestAccounts","called","onRequestSent","disconnectAndEmit","cleanup","engine","aptosChainNameToGeneralId","replaceAptos","aptosNameSpace","realNS","replaceAptosInner","aptos","optionAptosNameSpace","optionalNamespaces","realOptionNS","defaultChain","replaceAptosGeneralIdWithNetName","replaceSessionAptos","disconnectInner","connectAndSign","signRequest","updatedOpts","setNamespaces","requestItem","signResponseList","okxConnectUniversalUIinwindow","creatNotSupportMethodItemReplay","syncAllAddresses","syncAddressAvailable","syncAllAddress","setDefaultChain","rpcUrl","checkStorage","sessionInfoStr","getFromStore","createProviders","registerEventListeners","SignClient","providersToCreate","Set","parseNamespaceKey","namespacesValue","currentNameSpace","Eip155Provider","opts1","solanaProvider","sonicProvider","svmProvider","optsTon","tonProvider","optsSui","suiProvider","SuiProvider","optsBtc","btcProvider","fbProvider","aptosProvider","moveProvider","cosmosProvider","tronProvider","PROVIDER_EVENTS","DEFAULT_CHAIN_CHANGED","caip2ChainId","onChainChanged","UPDATE_NAMESPACES","nameSpaces","nameSpacekey","persist","isChainNamespaceInSession","chainsArr","defaultNamespace","getDefaultChain","namespaceStr","requestDefaultChainWithNamespace","caip2Chain","sessionProperties","showRequestModal","OKXUniversalProvider_1","OKXBtcProvider_1","OKXCosmosProvider_1","OKXTonProvider_1","OKXTronProvider_1","ConnectMethodUtils_1","metaData","requestAccountItem","requiredNamespaces","nameSpaceToConnectWalletNameSpace","SESSION_CONNECTING","connectMethodsToConnectWalletMethods","metadata","fillParamsToSession","connectMethodsResponseUpdate","openOKXWallet","allAddressStr","syncResoonseToRequire","connectSupportMethods","connectMethodsAdaptOldVersion","bs58_1","uint8array_extras_1","isArray","isRecord","notSupportError","errorItem","callBackParams","solAccount","account1","solAddress","fromAccountToAddress","realMessage","stringToUint8Array","suiMessage","convertedArray","b64encoded","atob","btcAccounts","account2","btcAccount","btcAddress","paramData","aptosAccount","account3","aptosAddress","fullMessage","application","aptosChainId","cosmosAccount","account_cosmos","cosmosAddress","cosmosData","cosmosBase64Encoded","stringToBase64","methodItem","solanaSuccessData","suiMethod","requestMethod","suiMessageb64","aptosSignature","requireNameSpace","includeEip155","some","space","syncAddressHostAvailable","includeChain","paramsArr","firstParam","firstObj","aptosParams","currentURL","signChainId","applicationUrl","cosmosChain","responseAddressStr","allAddress","isEvm","deriveName","addr","ci","evmAddress","freeze","getAccountsChains","isCaipNamespace","mergeRpcMap","targetRpcMap","sourceRpcMap","mergeNamespaces","source","rpcMap","GENERIC_SUBPROVIDER_NAME","RPC_URL","STORAGE","CONTEXT","WC_VERSION","PROTOCOL","RELAY_URL","LOGGER","JsonRpcConnection_1","JsonRpcProvider_1","AptosProvider","httpProviders","createHttpProviders","updateNamespace","getAccounts","setHttpProvider","http","parsedChainId","getChainId","parsedRpc","getRpcUrl","httpProvider","createHttpProvider","getHttpProvider","rpc","JsonRpcProvider","JsonRpcConnection","getGlobal","BtcProvider","CosmosProvider","updateRequestParams","isDic","switchChainId","decimalNumber","selectedChainId","chainNum","paramsChainId","paramsChainString","adaptArray","addressObj","isEqual","chainAddress","messages","typedDataJson","secondObj","hexChainId","getHexChainIdFromRequest","isChainApproved","handleSwitchChain","addEthereumChain","resultData","nameSpace","rpcUrls","eip155","core_2","disableProviderPing","isAvailable","registering","register","parseError","types_1","IJSONRpcProvider","connection","hasRegisteredEventListeners","setConnection","context","requestStrict","_error","SolanaProvider","getPubkey","getWalletAddress","components","__rest","s","t","getOwnPropertySymbols","propertyIsEnumerable","TONProvider","validUntil","newParams","fromAddress","boc","TronProvider","IJSONRpcConnection","opt","globals","convertChainIdToNumber","parseChainId","mergeArrays","projectId","reference","CAIP_DELIMITER","b","okxGlobal","_createElementBlock","_hoisted_1","_createVNode","_component_el_container","_withCtx","_component_el_header","_cache","_createTextVNode","_component_el_main","_component_el_card","class","_createElementVNode","style","_component_el_row","_component_el_col","span","_toDisplayString","$options","_ctx","_component_el_checkbox","modelValue","withUI","$event","onChange","handleWithUI","universalToTG","handleUniversalToTG","_component_el_select","modals","placeholder","handleModalsSelect","multiple","_component_el_option","label","returnStrategy","handleReturnStrategySelect","_Fragment","_renderList","returnStrategies","strategy","_createBlock","_component_el_input","deeplink","handleReturnStrategyDeeplink","disabled","_createCommentVNode","handleLanguageSelect","locales","locale","theme","handleThemeSelect","THEME","LIGHT","DARK","selectedMethod","handleConnectMethodsSelect","connectMethods","tonProofValue","gutter","align","availableChains","checked","areChainsInit","isOptionalChecked","handleOptionChange","_component_el_button","onClick","initBtnClicked","connectInitStr","connectBtnClicked","connectStatusStr","syncAllAddressClick","syncAllAddressStr","disconnectAction","walletAddress","disconnectStatusStr","_Teleport","showModal","closeModal","_withModifiers","_component_qrcode_vue","qrValue","level","_component_el_tabs","activeTab","onTabClick","clickActiveTab","_component_el_tab_pane","eth_requestAccounts","eth_chainId","wallet_switchEthereumChain","wallet_addEthereumChain","personal_sign","eth_signTypedData_v4","eth_sendTransaction_transfer","eth_sendTransaction_approve","eth_sendTransaction_mint","wallet_watchAsset","ton_getAccount","ton_sendTransaction","sol_signMessage","sol_signTransaction","sol_signVersionedTransaction","sol_signAllTransactions","sol_signAllVersionedTransactions","sol_signAndSendTransaction","sol_signAndSendVersionedTransaction","_component_SuiPanel","onGenerateTransactionParams","sui_generateTransactionParams","_component_BTCPanel","btc_generateTransactionParams","_component_FractalPanel","fractal_generateTransactionParams","_component_AllBTCPanel","allBtc_generateTransactionParams","_component_TronTransactionPanel","tron_generateTransactionParams","onGenerateTransactionResult","tron_getTransactionResult","aptos_signMessage","aptos_signTransaction","aptos_signAndSubmitTransaction","cosmos_signArbitrary","cosmos_signAmino","cosmos_signDirect","wallet_testRpc","eth_sendTransaction_swap","move_signTransaction","move_signAndSubmitTransaction","testBase64UrlSafe","xs","sm","handleRedirectSelect","canChainAddRedirectParam","redirectDeeplink","handleRedirectDeeplink","addRedirectParam","testTransaction","rows","testboc","testTransactionStr","btc_signMessage","$setup","sendAmount","clearable","btc_send","sendSatoshisAmount","btc_sendBitcoin","btc_signPsbt_up","btc_signAndPushPsbt_up","receiver","btc_sendInscription","props","setup","ref","$emit","alert","autoFinalized","__exports__","_component_el_radio_group","_component_el_radio","fractal_signMessage","fractal_send","fractal_sendBitcoin","fractal_signPsbt_up","fractal_signAndPushPsbt_up","fractal_sendInscription","sui_getAccount","sui_signMessage","sui_signPersonalMessage","sui_signTransaction2","sui_signAndExecuteTransaction","sui_requestRpc","sui_signTransaction_pre_execution","sui_signAndExecuteTransaction_pre_execution","recipientAddress","tx","SuiTransaction","coin","splitCoins","transferObjects","transactionBlock","showEffects","txBytes","txSerialize","generateTsBytesAndSerizlize","resultTuple","senderAccounts","getFullnodeUrl","suiClient","SuiClient","setSender","build","Buffer","currentSuiTransaction","currentSuiMethod","tron_signMessage","tron_signMessageV2","tron_signTransaction","tron_signAndSendTransactionContract","tron_signAndSendTransactionApprove","tronWeb","TronWeb","trx","verifyMessage","base58Address","verifyMessageV2","isOnlySign","transactionBuilder","sendTrx","getContract","contractAddress","abi","entrys","parameter","triggerSmartContract","verifyADR36Amino","fromBech32","VConsole","allChains","chainsThatCanAddRedirectParam","optionChains","selectedModals","selectedReturnStrategy","selectedDeepLink","selectedLanguage","selectedTheme","TronTransactionPanel","QrcodeVue","BTCPanel","AllBTCPanel","FractalPanel","SuiPanel","testTopic","testPublicKey","testProofPayload","pendingDeepLink","logList","connectReady","localPubKey","localSecKey","selectedChain","ProofPayloadVerify","showVerifyRow","has","selectedMethodData","isChecked","reload","add","computed","selectedChains","initChains","newChains","updatedChains","tab","tabName","initCall","OKXUniversalConnectUI","actionsConfiguration","uiPreferences","walletInfo","onModalStateChange","entries","uri","isPC","items","testTonSdk","blockExplorerUrls","chainName","nativeCurrency","symbol","decimals","dataETH","dataPolygon","types","EIP712Domain","Person","Mail","primaryType","domain","verifyingContract","contents","maxPriorityFeePerGas","maxFeePerGas","gasPrice","gasLimit","image","tonUniversalLog","sendTransactionAlert","fetch","confirm","sendData","adapter","SuiAdapter","suiResult","signAndExecuteTransaction","sui_verifySignature","signPersonalMessage","btcAdapter","btcResult","currentBtcMethod","at","currentBtcTransaction","hexToBase64","bs64Str","fractalResult","currentFractalMethod","currentFractalTransaction","hexStr","blob","Blob","reader","FileReader","onload","base64Data","readAsDataURL","datatest","firstStr","showUrl","hasEip155","hasSolana","hasSui","hasBtc","hasAptos","hasTon","hasCosmos","nameSpacesChains","optSpaceChains","solanaChains","hasTron","suiChains","btcChains","connectMethod","connectData","requireData","solana","cosmos","tron","tonParams","ton","sui","btc","optData","signMethods","getCurrentSelectedMethodData","openModalAndSign","openModal","methodList","suiData","currentMethod","userAgentInfo","Agents","flag","isSafariOrChrome","pubkey","OKXSolanaProvider","result1","nacl","PublicKey","toBytes","OKXAptosProvider","config","AptosConfig","Network","Aptos","simple","sender","function","typeArguments","functionArguments","signAndSubmitTransaction","Connection","getSolConnect","blockhash","getLatestBlockhash","versionedTransactionMessage","TransactionMessage","payerKey","recentBlockhash","instructions","SystemProgram","transfer","fromPubkey","toPubkey","lamports","compileToV0Message","VersionedTransaction","signAllTransactions","Transaction","feePayer","isValid","cosmos_verifySignArbitrary","pub_key","signer","prefixStr","signatureBuffer","uint8Signature","pubKeyValueBuffer","pubKeyUint8Array","uiOptions","eth_verifyMessage","ethAddress","originalMessage","recoveredAddress","ethers","list","verifyList","requestItme","ethMessage","solanaMessage","verifySol","aptosMessage","aptosPublicKey","cosmosMessage","tronMessage","signatureResult","resultObj","verifyPersonalMessageSignature","toSuiAddress","toBase64","newTransaction","c","created","mounted","scriptTag","createElement","src","getElementsByTagName","appendChild","title","render","app","createApp","App","use","ElementPlus","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","loaded","__webpack_modules__","amdO","deferred","O","chunkIds","priority","notFulfilled","Infinity","j","every","r","n","getter","d","definition","g","globalThis","Function","prop","Symbol","toStringTag","nmd","paths","children","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}