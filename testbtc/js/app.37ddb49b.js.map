{"version":3,"file":"js/app.37ddb49b.js","mappings":"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","sources":["webpack://okxconnectdemo/../packages/core/src/connect/commands.js","webpack://okxconnectdemo/../packages/core/src/connect/connect.js","webpack://okxconnectdemo/../packages/core/src/connect/connectionManager.js","webpack://okxconnectdemo/../packages/core/src/connect/constants.js","webpack://okxconnectdemo/../packages/core/src/connect/engine.js","webpack://okxconnectdemo/../packages/core/src/connect/index.js","webpack://okxconnectdemo/../packages/core/src/connect/jwt.js","webpack://okxconnectdemo/../packages/core/src/connect/jwtconstants.js","webpack://okxconnectdemo/../packages/core/src/connect/sessionUtils.js","webpack://okxconnectdemo/../packages/core/src/connect/storage.js","webpack://okxconnectdemo/../packages/core/src/connect/storageconstants.js","webpack://okxconnectdemo/../packages/core/src/connect/walletConnectionConstants.js","webpack://okxconnectdemo/../packages/core/src/connect/walletConnectionManager.js","webpack://okxconnectdemo/../packages/core/src/crypto/crypto.js","webpack://okxconnectdemo/../packages/core/src/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/engine.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/json-rpc.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/connect-event.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/connect-wallet.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/wallet-info.js","webpack://okxconnectdemo/../packages/core/src/protocol/constants.js","webpack://okxconnectdemo/../packages/core/src/protocol/error/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/error/okx-connect.error.js","webpack://okxconnectdemo/../packages/core/src/protocol/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/misc.js","webpack://okxconnectdemo/../packages/core/src/utils/call-for-success.js","webpack://okxconnectdemo/../packages/core/src/utils/index.js","webpack://okxconnectdemo/../packages/core/src/utils/log.js","webpack://okxconnectdemo/../packages/core/src/utils/report.js","webpack://okxconnectdemo/../packages/core/src/utils/reportconstants.js","webpack://okxconnectdemo/../packages/core/src/utils/request.js","webpack://okxconnectdemo/../packages/core/src/utils/safejson.js","webpack://okxconnectdemo/../packages/core/src/utils/stringUtils.js","webpack://okxconnectdemo/../packages/core/src/utils/tma-api.js","webpack://okxconnectdemo/../packages/core/src/utils/url.js","webpack://okxconnectdemo/../packages/core/src/utils/utils.js","webpack://okxconnectdemo/../packages/core/src/utils/web-api.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXBtcProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXCosmosProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXStarknetProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXTonProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXTronProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXUniversalProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/sign-client/client.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/ConnectMethodUtils.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/namespaces.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/events.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/values.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/aptos.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/btc.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/cosmos.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/eip155.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcConnection.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/solana.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/starknet.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/sui.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/ton.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/tron.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/misc.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/providers.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/globals.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/misc.js","webpack://okxconnectdemo/./src/App.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue?1b44","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue?e4fb","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue?aa83","webpack://okxconnectdemo/./src/components/StarknetTransactionPanel.vue","webpack://okxconnectdemo/./src/components/StarknetTransactionPanel.vue?1a06","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue?089a","webpack://okxconnectdemo/./src/App.vue?7ccd","webpack://okxconnectdemo/./src/main.js","webpack://okxconnectdemo/webpack/bootstrap","webpack://okxconnectdemo/webpack/runtime/amd options","webpack://okxconnectdemo/webpack/runtime/chunk loaded","webpack://okxconnectdemo/webpack/runtime/compat get default export","webpack://okxconnectdemo/webpack/runtime/create fake namespace object","webpack://okxconnectdemo/webpack/runtime/define property getters","webpack://okxconnectdemo/webpack/runtime/global","webpack://okxconnectdemo/webpack/runtime/hasOwnProperty shorthand","webpack://okxconnectdemo/webpack/runtime/make namespace object","webpack://okxconnectdemo/webpack/runtime/node module decorator","webpack://okxconnectdemo/webpack/runtime/jsonp chunk loading","webpack://okxconnectdemo/webpack/startup"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_METHOD_BATCH_FETCHMSG = exports.CONNECT_METHOD_FETCHMSG = exports.CONNECT_METHOD_RECEIVE = exports.CONNECT_METHOD_UNSUB = exports.CONNECT_METHOD_SUB = exports.CONNECT_METHOD_PUBLISH = exports.CONNECT_METHOD_LOGIN = exports.CONNECT_METHOD_PUSH = void 0;\n// --------------- ws methods -------------\nexports.CONNECT_METHOD_PUSH = \"push\";\nexports.CONNECT_METHOD_LOGIN = \"login\";\nexports.CONNECT_METHOD_PUBLISH = \"publish\";\nexports.CONNECT_METHOD_SUB = \"subscribe\";\nexports.CONNECT_METHOD_UNSUB = \"unsubscribe\";\nexports.CONNECT_METHOD_RECEIVE = \"receive\";\nexports.CONNECT_METHOD_FETCHMSG = \"fetchMessages\";\nexports.CONNECT_METHOD_BATCH_FETCHMSG = \"batchFetchMessages\";\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXWalletConnector = void 0;\nconst constants_1 = require(\"./constants\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils\");\nconst utils_2 = require(\"../utils/utils\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst log = __importStar(require(\"../utils/log\"));\nconst protocol_1 = require(\"../protocol\");\nconst report_1 = require(\"../utils/report\");\nconst WS = (0, utils_2.resolveWebSocketImplementation)();\nclass OKXWalletConnector {\n    constructor(url) {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.state = constants_1.ConnectorState.InitState;\n        this.selectedUrlIndex = 0;\n        // reconnect\n        this.retryCount = 0;\n        // default timeout limit: 8 sec\n        this.timeOutLimit = 8000;\n        if (!(0, utils_2.checkWSUrl)(url)) {\n            throw new Error(`CONNECTOR: invalid url ${url}`);\n        }\n        this.url = url;\n        this.heartbeatTimer = null;\n        this.connectionTimeoutTimer = null;\n        this.connectURLStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY + storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n    }\n    get connecting() {\n        return this.state == constants_1.ConnectorState.Connecting;\n    }\n    // ------------------------------------------------------\n    onPayload(e) {\n        if (typeof e.data === \"undefined\")\n            return;\n        log.logDebug('get received data');\n        log.logDebug(e);\n        if (typeof e.data === \"string\") {\n            let rsp = e.data;\n            if (rsp === \"pong\") {\n                log.logDebug(`CONNECT: receive pong ${Date.now().toString()}`);\n                return;\n            }\n        }\n        this.events.emit(\"payload\", e.data);\n    }\n    onClose(event) {\n        var _a;\n        log.logDebug('socket get closed: ', (_a = this.socket) === null || _a === void 0 ? void 0 : _a.url, event.code);\n        this.socket = undefined;\n        this.events.emit(\"close\", event);\n    }\n    onError(id, e) {\n        const payload = { id: id, msg: e.toString() };\n        this.events.emit(\"payload\", payload);\n    }\n    onopen(socket) {\n        socket.onmessage = (event) => this.onPayload(event);\n        socket.onclose = (event) => this.onClose(event);\n        this.socket = socket;\n        this.state = constants_1.ConnectorState.Connected;\n        this.events.emit(\"open\");\n    }\n    // ------------------------------------------------------\n    emitError(errorEvent) {\n        this.events.emit(\"fail\", errorEvent);\n    }\n    // ------------------------------------------------------\n    heartbeat() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.heartbeatTimer) {\n                clearTimeout(this.heartbeatTimer);\n            }\n            if (this.state != constants_1.ConnectorState.Connected && this.state != constants_1.ConnectorState.OnError) {\n                log.logDebug('heart beat close');\n                return;\n            }\n            if (!this.socket) {\n                log.logDebug('socket not exist');\n                if (this.state == constants_1.ConnectorState.Connected || this.state == constants_1.ConnectorState.OnError) {\n                    log.logDebug('socket reconnect by heartbeat');\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                        this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n                    }\n                }\n                return;\n            }\n            if (this.socket.readyState !== WebSocket.OPEN) {\n                log.logDebug('socket not ready');\n                if (this.state == constants_1.ConnectorState.Connected || this.state == constants_1.ConnectorState.OnError) {\n                    log.logDebug('socket reconnect by heartbeat with state', this.state, this.socket.readyState);\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                        this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n                    }\n                }\n                return;\n            }\n            log.logDebug(`send ping heart beat: ${Date.now().toString()}, ${this.socket}`);\n            this.socket.send(\"ping\");\n            this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n        });\n    }\n    registOpen(url = this.url, inRetry = false) {\n        if (!(0, utils_2.checkWSUrl)(url)) {\n            throw new Error(`CONNECTOR: invalid url ${url}`);\n        }\n        this.url = url;\n        if (!inRetry) {\n            log.logDebug('Connection connect:', this.url, new Date().toUTCString());\n        }\n        this.state = constants_1.ConnectorState.Connecting;\n        const origin = new URLSearchParams(url).get(\"origin\");\n        return new Promise((resolve, reject) => {\n            const socket = new WS(url, []);\n            log.logDebug('Connection connect Begin:', this.url, new Date().toUTCString());\n            this.startTimeOutTimer(socket);\n            if ((0, utils_2.hasBuiltInWebSocket)()) {\n                log.logDebug('Add socket error handler');\n                socket.onerror = () => {\n                    reject(new Error('socket error'));\n                    socket.close();\n                };\n            }\n            else {\n                log.logDebug('Add socket error handler');\n                socket.on(\"error\", () => {\n                    reject(new Error('socket error'));\n                    socket.close();\n                });\n            }\n            socket.onopen = () => {\n                log.logDebug('socket opened');\n                this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.FINISHED);\n                this.onopen(socket);\n                this.heartbeat();\n                resolve(socket);\n            };\n        });\n    }\n    checkMaxRetry() {\n        log.logDebug('current retry count:', this.retryCount, 'of', constants_1.OKXCONNECTOR_WS_URL_LIST.length);\n        return this.retryCount > (constants_1.OKXCONNECTOR_WS_URL_LIST.length * 3);\n    }\n    connectionTryNext() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.checkMaxRetry()) {\n                //TODO: mark descent\n                this.retryCount += 1;\n                let nextUrl = this.getNextSelectUrl();\n                log.logDebug('Connection retry:', nextUrl, new Date().toUTCString());\n                return this.registOpen(nextUrl, true);\n            }\n            else {\n                log.logDebug('Max Connection retry ', this.retryCount, new Date().toUTCString());\n            }\n        });\n    }\n    startTimeOutTimer(socket) {\n        if (this.connectionTimeoutTimer) {\n            this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.CANCELED);\n        }\n        this.pendingSocket = socket;\n        this.connectionTimeoutTimer = setTimeout(() => {\n            if (this.pendingSocket) {\n                this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.TIME_OUT);\n            }\n        }, this.timeOutLimit);\n    }\n    resetTimeOutTimer(code) {\n        var _a;\n        // 1. cancel connecting pending sockets\n        if (code == constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.TIME_OUT) {\n            // 2. remove timer\n            clearTimeout(this.connectionTimeoutTimer);\n            (_a = this.pendingSocket) === null || _a === void 0 ? void 0 : _a.close();\n            this.pendingSocket = undefined;\n            log.reportEvent(report_1.OKXReportType.LOG, 'timeout', this.retryCount.toString());\n            throw new Error('socket timeout');\n        }\n        else {\n            this.pendingSocket = undefined;\n            // 2. remove timer\n            clearTimeout(this.connectionTimeoutTimer);\n        }\n    }\n    cacheSuccessUrlSelect() {\n        this.connectURLStorage.saveContent(this.selectedUrlIndex.toString(), storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n    }\n    // private getSuccessUrlSelect(): string {\n    //     let selectIndex = this.connectURLStorage.getItem(OKXCONNECTOR_CACHE_KEY)?.content\n    //     let index = 0\n    //     if (selectIndex) {\n    //         index = Number(selectIndex)\n    //     }\n    //     this.selectedUrlIndex = index\n    //     return OKXCONNECTOR_WS_URL_LIST[index]\n    // }\n    getNextSelectUrl() {\n        this.selectedUrlIndex += 1;\n        this.selectedUrlIndex = this.selectedUrlIndex % constants_1.OKXCONNECTOR_WS_URL_LIST.length;\n        return constants_1.OKXCONNECTOR_WS_URL_LIST[this.selectedUrlIndex];\n    }\n    // ------------------------------------------------------\n    onVisibleChanged() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (document.visibilityState === 'visible') {\n                // check and restore\n                log.logDebug(`get changed ${this.state}, ${this.socket}`);\n                if (this.state == constants_1.ConnectorState.Connected && typeof this.socket === \"undefined\") {\n                    log.logDebug('CONNECTION need reopen');\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                    }\n                    return;\n                }\n            }\n        });\n    }\n    tryRegistOpen() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            if (this.connecting) {\n                log.logDebug('tryRegistOpen => connecting state');\n                return new Promise((resolve, reject) => {\n                    this.events.once('fail', (e) => {\n                        log.logDebug('tryRegistOpen => connecting fail listener', e);\n                        return reject(e);\n                    });\n                    this.events.once(\"open\", () => {\n                        if (typeof this.socket == \"undefined\") {\n                            return reject(new Error(\"Connect lost\"));\n                        }\n                        return resolve(this.socket);\n                    });\n                });\n            }\n            log.logDebug('tryRegistOpen => try registOpen until retry limit is hit');\n            let inRetry = false;\n            while (!this.checkMaxRetry() && !this.socket) {\n                try {\n                    log.logDebug('tryRegistOpen => call registOpen, try count:', this.retryCount, inRetry);\n                    yield this.registOpen(url, inRetry);\n                }\n                catch (err) {\n                    log.logDebug('tryRegistOpen => registOpen failed', err);\n                    this.retryCount += 1;\n                    url = this.getNextSelectUrl();\n                    inRetry = true;\n                }\n            }\n            log.logDebug('tryRegistOpen => exit while loop', this.retryCount, this.socket);\n            if (!this.socket && this.checkMaxRetry()) {\n                log.logDebug('tryRegistOpen => failed to open a socket', this.retryCount, this.socket);\n                this.retryCount = 0;\n                this.state = constants_1.ConnectorState.OnError;\n                this.emitError(new Error('tryRegistOpen failed'));\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CONNECTION_ERROR, \"Failed to connect\");\n            }\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this.tryRegistOpen();\n                // listener for reconnect\n                document.removeEventListener('visibilitychange', this.onVisibleChanged.bind(this));\n                document.addEventListener('visibilitychange', this.onVisibleChanged.bind(this));\n            }\n            catch (e) {\n                log.logDebug('connect => failed to connect', e);\n                throw e;\n            }\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.state = constants_1.ConnectorState.Disconnected;\n            return new Promise((resolve, reject) => {\n                if (typeof this.socket === \"undefined\") {\n                    // reject(new Error(\"CONNECTION closed\"))\n                    resolve();\n                    return;\n                }\n                this.socket.onclose = (event) => {\n                    this.onClose(event);\n                    resolve();\n                };\n                this.socket.close();\n                if (this.heartbeatTimer) {\n                    clearTimeout(this.heartbeatTimer);\n                }\n            });\n        });\n    }\n    currentStatus() {\n        return {\n            state: this.state,\n            url: this.url\n        };\n    }\n    // event will be jsonstr\n    /// @params Promise\n    /// @params success/failed callback\n    addListener(event, decrypt, success, failed) {\n        if (this.listenPayloadHandler) {\n            this.events.removeListener(\"payload\", this.listenPayloadHandler);\n        }\n        this.listenPayloadHandler = (e) => {\n            var _a;\n            log.logDebug(`<<< get payload ${e}`);\n            let parsedEvent = (0, utils_1.safeJsonParse)(e);\n            // parse the data to chose success or failed\n            if (parsedEvent.params && parsedEvent.params.data) {\n                let rawMsg = (_a = parsedEvent.params.data) === null || _a === void 0 ? void 0 : _a.message;\n                if (rawMsg) {\n                    try {\n                        let msg = decrypt(rawMsg);\n                        if (msg === undefined) {\n                            log.logDebug(`CONNECT: decrypt undefined`);\n                            failed(event, 'Decrypt undefined');\n                        }\n                        else {\n                            success(event, msg);\n                        }\n                    }\n                    catch (e) {\n                        log.logDebug(`CONNECT: decrypt failed: ${e}`);\n                        failed(event, e.message);\n                    }\n                }\n            }\n        };\n        this.events.on(\"payload\", this.listenPayloadHandler);\n        if (this.failHandler) {\n            this.events.removeListener(\"fail\", this.failHandler);\n        }\n        this.failHandler = (e) => {\n            if (e) {\n                log.logDebug(`CONNECT failed: ${e}`);\n                failed(event, e.message);\n            }\n            else {\n                failed(event, \"Unkonow error\");\n            }\n        };\n        this.events.on(\"fail\", this.failHandler);\n    }\n    addPackageParse(callback) {\n        if (this.payloadHandler) {\n            this.events.removeListener(\"payload\", this.payloadHandler);\n        }\n        this.payloadHandler = (e) => __awaiter(this, void 0, void 0, function* () {\n            // parse the data to chose success or failed\n            log.logDebug(`CONNECTION @[${new Date().toUTCString()}] <<<< received e:${e}`);\n            let param = (0, utils_1.safeJsonParse)(e);\n            yield callback(param);\n        });\n        this.events.on(\"payload\", this.payloadHandler);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    send(doLogin, payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (typeof this.socket === \"undefined\") {\n                    log.logDebug(`>>> send payload undefined ${payload}`);\n                    // this.socket = await this.registOpen();\n                    yield doLogin();\n                }\n                log.logDebug(`CONNECTION @[${new Date().toUTCString()}]>>> send payload ${(0, utils_1.safeJsonStringify)(payload)}`);\n                if (this.socket) {\n                    this.socket.send((0, utils_1.safeJsonStringify)(payload));\n                }\n            }\n            catch (e) {\n                this.onError(payload.id, e);\n            }\n        });\n    }\n    getMsgPayloadFromHistory(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof msg === \"undefined\")\n                return;\n            let tmpMsg = {\n                params: {\n                    data: msg\n                }\n            };\n            let jsonstr = (0, utils_1.safeJsonStringify)(msg);\n            log.logDebug('get received data from history');\n            log.logDebug(jsonstr);\n            jsonstr = (0, utils_1.safeJsonStringify)(tmpMsg);\n            this.events.emit(\"payload\", jsonstr);\n        });\n    }\n    onOpen(callback) {\n        if (this.openHandler) {\n            this.events.removeListener(\"open\", this.openHandler);\n        }\n        this.openHandler = () => __awaiter(this, void 0, void 0, function* () {\n            log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> ws opened: `);\n            yield callback();\n        });\n        this.events.on(\"open\", this.openHandler);\n        this.cacheSuccessUrlSelect();\n    }\n}\nexports.OKXWalletConnector = OKXWalletConnector;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionManager = void 0;\nconst connect_1 = require(\"./connect\");\nconst commands_1 = require(\"./commands\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst jwtconstants_1 = require(\"./jwtconstants\");\nconst constants_1 = require(\"./constants\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils/utils\");\nconst crypto_1 = require(\"../crypto/crypto\");\nconst jwt_1 = require(\"./jwt\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst report_1 = require(\"../utils/report\");\nconst url_1 = require(\"../utils/url\");\nclass ConnectionManager {\n    constructor(appname = undefined) {\n        this.events = new eventemitter3_1.EventEmitter();\n        // local storage\n        this.connectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY_DAPP + appname, storageconstants_1.OKXCONNECTOR_CACHE_KEY_DAPP);\n        this.crypto = new crypto_1.SessionCrypto();\n        let inTMA = (0, url_1.isInTMA)();\n        (0, log_1.logDebug)('do init:', inTMA);\n        log.reportLog('connection manager do init');\n        if (inTMA) {\n            // recovery from cache\n            const keyPairInfo = this.getCachedCryptoKeyPair();\n            (0, log_1.logDebug)('use same pk:', keyPairInfo);\n            this.crypto = new crypto_1.SessionCrypto(keyPairInfo);\n        }\n        this.jwtKeyPair = this.getCachedJWTKeyPair();\n        this.saveJWTKeyPair(this.jwtKeyPair);\n        // wss connection\n        this.connector = new connect_1.OKXWalletConnector(constants_1.OKXCONNECTOR_WS_URL_1);\n        this.packageId = Date.now();\n        // connection state\n        this.connectedWalletPK = '';\n        this.currentTopic = '';\n        log.logDebug(`this.connectedWalletPK  constructor   ${this.connectedWalletPK}`);\n    }\n    refreshPackageId() {\n        this.packageId = Date.now();\n    }\n    saveCryptoKeyPair(keyPair) {\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(keyPair);\n        // encrypt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_CRYPTO_KEY);\n    }\n    getCachedCryptoKeyPair() {\n        // decrypt kp\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_CRYPTO_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            log.logDebug('get cached crypto key:');\n            log.logDebug(content);\n            let keyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            return keyPairInfo;\n        }\n        else {\n            this.connectStorage.clearCache();\n        }\n        return null;\n    }\n    saveJWTKeyPair(keyPair) {\n        var strkeyPair = {\n            publicKey: (0, utils_1.toHexString)(keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(keyPair.secretKey)\n        };\n        log.logDebug('save jwt kp');\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(strkeyPair);\n        log.logDebug(cacheInfo);\n        // encrypt jwt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_JWT_KEY);\n    }\n    getCachedJWTKeyPair() {\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            // TODO: decrypt jwt kp\n            log.logDebug('get cached jwt kp:');\n            log.logDebug(content);\n            let strKeyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            log.logDebug('save jwt kp');\n            log.logDebug(strKeyPairInfo);\n            var keyPair = {\n                publicKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.publicKey),\n                secretKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.secretKey)\n            };\n            return keyPair;\n        }\n        else {\n            return (0, jwt_1.generateKeyPair)();\n        }\n    }\n    isWalletPKReady() {\n        log.logDebug(`isWalletPKReady  ===> ${this.connectedWalletPK}`);\n        return this.connectedWalletPK.length > 0;\n    }\n    makeJWT(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, jwt_1.signJWT)(topic, jwtconstants_1.OKXCONNECTOR_JWT_SIDE, jwtconstants_1.OKXCONNECTOR_JWT_TTL, // 24h\n            this.jwtKeyPair);\n        });\n    }\n    parsePackage(input_1) {\n        return __awaiter(this, arguments, void 0, function* (input, ignoreACK = false) {\n            var _a, _b, _c, _d, _e;\n            this.events.emit(input.id, input);\n            // send back ACK\n            if (!ignoreACK) {\n                yield this.sendACK(input.id, true);\n                let topic = (_a = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE)) === null || _a === void 0 ? void 0 : _a.content;\n                if (topic) {\n                    let inputObj = input;\n                    if ((_c = (_b = inputObj.params) === null || _b === void 0 ? void 0 : _b.data) === null || _c === void 0 ? void 0 : _c.messageId) {\n                        this.refreshPackageId();\n                        yield this.sendReceive(this.packageId.toString(), (_e = (_d = inputObj.params) === null || _d === void 0 ? void 0 : _d.data) === null || _e === void 0 ? void 0 : _e.messageId, topic);\n                    }\n                }\n            }\n        });\n    }\n    restoreConnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.reportLog('connection manager restore connection');\n            log.logDebug(`connectionManager  restoreConenct   ${topic}`);\n            if ((typeof topic !== 'string') || topic.length === 0) {\n                throw new Error('CONNECTION: invalid topic');\n            }\n            log.logDebug(`connectionManager  restoreConenct   disconnect`);\n            yield this.disconnect(true);\n            this.connectStorage.saveContent(topic, storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`connectionManager  restoreConenct   conect`);\n            yield this.connect(true);\n        });\n    }\n    getConnectInfo() {\n        var topic = (0, utils_1.generateTopic)();\n        log.logDebug(`generate topic token: ${topic}`);\n        log.reportLog('connection manager generate connection info');\n        this.currentTopic = topic;\n        const info = {\n            channelId: topic,\n            clientId: this.crypto.stringifyKeypair().publicKey,\n        };\n        return info;\n    }\n    connect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            this.timeLog = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---enter->\", this.timeLog);\n            log.reportLog('connection manager begin connect');\n            let lastConnectId = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            //1. generate topic & jwt\n            var topic = this.currentTopic;\n            log.logDebug(`generate topic token: ${topic}`);\n            // crypto keypair\n            if (fromRestore) {\n                if (typeof lastConnectId !== 'undefined' && lastConnectId !== null) {\n                    log.logDebug(`read last connect id: ${lastConnectId}`);\n                    topic = lastConnectId.content;\n                }\n                var cachedSenderPublicKey = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                if (cachedSenderPublicKey) {\n                    this.connectedWalletPK = cachedSenderPublicKey.content;\n                    (0, log_1.logDebug)(`connectionManager connect() this.connectedWalletPK : ${this.connectedWalletPK}`);\n                }\n                log.reportLog('connection manager do restore connection');\n            }\n            if (fromRestore) {\n                // recovery from cache\n                const keyPairInfo = this.getCachedCryptoKeyPair();\n                if (keyPairInfo) {\n                    this.crypto = new crypto_1.SessionCrypto(keyPairInfo);\n                }\n            }\n            log.logDebug(`use crypto client id: ${this.crypto.stringifyKeypair().publicKey}`);\n            // cache topic\n            this.connectStorage.saveContent(topic, storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            var jwtToken = yield this.makeJWT(topic);\n            log.logDebug(`generate jwt token: ${jwtToken}`);\n            this.connectStorage.saveContent(jwtToken, 'jwt');\n            return new Promise((resolve, reject) => {\n                // 1. when websocket opened\n                this.connector.onOpen(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug(`1. connector on open`);\n                    log.reportLog('1. connect ws open');\n                    const timeOne = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---open->\", timeOne - this.timeLog);\n                    //2. send jwt to login\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when login');\n                            log.reportLog('2. connect login failed');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // throw error\n                            reject(error);\n                        }\n                        //3. send subscribe\n                        this.refreshPackageId();\n                        this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                            // ack\n                            if (rsp && rsp.error) {\n                                log.logError('failed when subscribe');\n                                log.reportLog('3. connect subscribe failed');\n                                yield this.connector.disconnect();\n                                var error = new Error();\n                                error.message = rsp.error.message;\n                                error.name = rsp.error.code.toString();\n                                // throw error\n                                reject(error);\n                            }\n                            this.refreshPackageId();\n                            log.logDebug(`4. subscribe callback then send fetch: ${this.packageId}`);\n                            log.reportLog('4. subscribe callback then send fetch');\n                            const timeF = new Date().getTime();\n                            (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n                            // 4. fetch messages\n                            yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                            resolve();\n                        }));\n                        log.logDebug(`3. login callback then send subscribe: ${this.packageId}`);\n                        log.reportLog('3. connect subscribe failed');\n                        const timeTh = new Date().getTime();\n                        (0, log_1.logDebug)(\"ConnectTime---login callback->\", timeTh - this.timeLog);\n                        yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                            log.logDebug('CONNECT: reconnect before send');\n                            yield this.connector.connect()\n                                .catch((err) => {\n                                (0, log_1.logDebug)('ConnectionManager connect error', err);\n                                reject(err);\n                            });\n                        }), {\n                            id: this.packageId.toString(),\n                            jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                            method: commands_1.CONNECT_METHOD_SUB,\n                            params: {\n                                topic: topic\n                            }\n                        });\n                    }));\n                    log.logDebug(`2. login called`);\n                    log.reportLog('2. connection manager connect call login');\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        yield this.connector.connect()\n                            .catch((err) => {\n                            (0, log_1.logDebug)('ConnectionManager connect error', err);\n                            reject(err);\n                        });\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_LOGIN,\n                        params: {\n                            token: jwtToken\n                        }\n                    });\n                    // 4. listen when dapp back to front, receive wallet public key\n                    this.connector.addPackageParse((event) => {\n                        var _a;\n                        log.logDebug(`connect: parse package`);\n                        log.logDebug(event);\n                        if (!(\"params\" in event) || !(\"data\" in event[\"params\"])) {\n                            this.parsePackage(event, true);\n                            return;\n                        }\n                        let rawMsg = (_a = event.params.data) === null || _a === void 0 ? void 0 : _a.message;\n                        if (typeof rawMsg !== 'undefined') {\n                            rawMsg = rawMsg.replace(/'/g, '\"');\n                            let parsedMessage = (0, safejson_1.safeJsonParse)(rawMsg);\n                            if (typeof parsedMessage !== 'string' && \"clientId\" in parsedMessage && parsedMessage.clientId && parsedMessage.clientId.length > 0) {\n                                this.connectedWalletPK = parsedMessage.clientId;\n                                log.logDebug(`this.connectedWalletPK  addPackageParse   ${this.connectedWalletPK}`);\n                                // exchange sender public key\n                                // cache wallet public key\n                                this.connectStorage.saveContent(this.connectedWalletPK, storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                                // cache crypto keypair\n                                this.saveCryptoKeyPair(this.crypto.stringifyKeypair());\n                            }\n                        }\n                        // ignore receive echo\n                        this.parsePackage(event, event.method === commands_1.CONNECT_METHOD_RECEIVE);\n                    });\n                }));\n                this.connector.connect().catch((err) => {\n                    (0, log_1.logDebug)('ConnectionManager connect error', err);\n                    reject(err);\n                });\n            });\n        });\n    }\n    disconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            yield this.connector.disconnect();\n            log.reportLog('connect disconnect');\n            //clean cached topic\n            //如果是恢复连接，就不清理解密public key\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            if (!fromRestore) {\n                this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                this.connectedWalletPK = '';\n                (0, log_1.logDebug)(`connectionManager disconnect() this.connectedWalletPK : ${this.connectedWalletPK}`);\n            }\n        });\n    }\n    addListener(event, success, fail) {\n        this.connector.addListener((0, safejson_1.safeJsonStringify)(event), (rawMsg) => {\n            rawMsg = rawMsg.replace(/'/g, '\"');\n            log.logDebug(`addListener ===> ${rawMsg}`);\n            if (typeof rawMsg !== 'undefined') {\n                var msgObj = (0, safejson_1.safeJsonParse)(rawMsg);\n                var msg = msgObj.message;\n                let result;\n                if (msg.trimStart().startsWith('{')) {\n                    result = msg;\n                }\n                else {\n                    if (msgObj.clientId && msgObj.clientId.length > 0) {\n                        this.connectedWalletPK = msgObj.clientId;\n                        this.connectStorage.saveContent(this.connectedWalletPK, storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                        log.logDebug(`this.connectedWalletPK  addListener   ${this.connectedWalletPK}`);\n                        log.logDebug(`this.cryptoKey  addListener   ${(0, utils_1.toHexString)(this.crypto.keyPair.publicKey)}`);\n                        // cache crypto keypair\n                        this.saveCryptoKeyPair(this.crypto.stringifyKeypair());\n                    }\n                    result = this.crypto.decrypt(msg, this.connectedWalletPK);\n                }\n                log.logDebug(`addListener ===> ${result}`);\n                return result;\n            }\n            return undefined;\n        }, success, fail);\n    }\n    sendRaw(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.logDebug(`message send =====> ${msg}`);\n            log.reportLog('connect send raw msg');\n            let message = msg;\n            log.logDebug(`message send =====encrypt message.length>>>> ${message.length}`);\n            // only one topic\n            let topic = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`message send =====topic>>>> ${topic === null || topic === void 0 ? void 0 : topic.content}`);\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                method: commands_1.CONNECT_METHOD_PUBLISH,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                params: {\n                    message: {\n                        topic: topic === null || topic === void 0 ? void 0 : topic.content,\n                        message: message,\n                        ttl: constants_1.OKXCONNECTOR_MESSAGE_TTL\n                    }\n                } // crypted\n            };\n            this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                // ack\n                if (rsp && rsp.error) {\n                    log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                }\n                else if (rsp && !rsp.error) {\n                    log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                }\n            }));\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n            return this.packageId;\n        });\n    }\n    send(msg_1) {\n        return __awaiter(this, arguments, void 0, function* (msg, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL) {\n            // make send msg payload\n            log.logDebug(`message send =====> ${msg}`);\n            log.reportLog('connect send msg');\n            if (!this.isWalletPKReady()) {\n                // channel not ready\n                throw new Error('connection not finish');\n            }\n            let message = this.crypto.encrypt(msg, this.connectedWalletPK);\n            log.logDebug(`message send =====encrypt message.length>>>> ${message.length}`);\n            log.reportEvent(report_1.OKXReportType.LOG, 'msg_size', message.length.toString());\n            // only one topic\n            let topic = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`message send =====topic>>>> ${topic === null || topic === void 0 ? void 0 : topic.content}`);\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                method: commands_1.CONNECT_METHOD_PUBLISH,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                params: {\n                    message: {\n                        topic: topic === null || topic === void 0 ? void 0 : topic.content,\n                        message: message,\n                        ttl: ttl\n                    }\n                } // crypted\n            };\n            this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                // ack\n                if (rsp && rsp.error) {\n                    log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                }\n                else if (rsp && !rsp.error) {\n                    log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                }\n            }));\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n            return this.packageId;\n        });\n    }\n    sendACK(msgId_1, success_1) {\n        return __awaiter(this, arguments, void 0, function* (msgId, success, reason = undefined) {\n            if (success === true) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    result: true\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n            else if (reason) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    error: {\n                        code: reason.code, //int\n                        message: reason.message\n                    }\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    // send receive\n    sendReceive(msgId, messageId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECEIVE,\n                params: {\n                    data: {\n                        messageId: messageId,\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendConnectSessionInfo(msgId, messageId, topic, params) {\n        return __awaiter(this, void 0, void 0, function* () {\n        });\n    }\n    // send receive\n    // 1. fetch all \n    // 2. send back receive\n    // 3. check has more, if so, repeat from 1st step\n    sendFetchAndConsumeMessages(msgId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(msgId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic == topic) {\n                                let messageId = msg.messageId;\n                                log.reportLog('5. get fetch result');\n                                yield this.connector.getMsgPayloadFromHistory(msg);\n                                // send receive command to relay server\n                                this.refreshPackageId();\n                                yield this.sendReceive(this.packageId.toString(), messageId, topic);\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            log.reportLog('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_FETCHMSG,\n                params: {\n                    data: {\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    cleanCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.reportLog('connection cache clean called');\n            this.connectStorage.clearCache();\n        });\n    }\n    saveSessionContent(key, data) {\n        if (!data) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(data);\n        this.connectStorage.encryptStoreMsg(jsonData, storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n    }\n    getSessionContent(key) {\n        let jsonStr = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        if (jsonStr) {\n            let object = (0, safejson_1.safeJsonParse)(jsonStr);\n            return object;\n        }\n        return undefined;\n    }\n    getCurrentConnectionReady() {\n        return this.isWalletPKReady();\n    }\n}\nexports.ConnectionManager = ConnectionManager;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectorState = exports.CONNECT_JSONRPC_VER = exports.OKXCONNECTOR_MESSAGE_TTL = exports.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE = exports.OKXCONNECTOR_WS_URL_LIST = exports.OKXCONNECTOR_WS_URL_IDX_KEY = exports.OKXCONNECTOR_WS_URL_3 = exports.OKXCONNECTOR_WS_URL_2 = exports.OKXCONNECTOR_WS_URL_1 = exports.EVENT_EMITTER_MAX_LISTENERS = void 0;\nexports.EVENT_EMITTER_MAX_LISTENERS = 10;\nexports.OKXCONNECTOR_WS_URL_1 = \"wss://wsdexpri.okx.com/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_2 = \"wss://wsdexpri.okx.ac/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_3 = \"wss://wsdexpri.coinall.ltd/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_IDX_KEY = \"wuik\";\nexports.OKXCONNECTOR_WS_URL_LIST = [\n    exports.OKXCONNECTOR_WS_URL_1,\n    exports.OKXCONNECTOR_WS_URL_2,\n    exports.OKXCONNECTOR_WS_URL_3,\n];\nexports.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE = {\n    TIME_OUT: 3990,\n    CANCELED: 3991,\n    FINISHED: 3992,\n};\nexports.OKXCONNECTOR_MESSAGE_TTL = 300000;\n// --------------- JSON RPC ---------------\nexports.CONNECT_JSONRPC_VER = \"2.0\";\nexports.ConnectorState = {\n    InitState: 0,\n    Connecting: 1,\n    Connected: 2,\n    Disconnected: 3,\n    OnError: 4,\n};\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Engine = void 0;\nconst safejson_1 = require(\"../utils/safejson\");\nconst log_1 = require(\"../utils/log\");\nconst protocol_1 = require(\"../protocol\");\n// import {standardDeeplink, tonConnectSdkVersion} from \"../../ton/tonsdk/constants/version\";\nconst utils_1 = require(\"../utils\");\nconst utils_2 = require(\"../utils\");\nconst sessionUtils_1 = require(\"./sessionUtils\");\nconst url_1 = require(\"../utils/url\");\nclass Engine {\n    constructor(connectionManager) {\n        this.pendingRequests = new Map();\n        this.disconnectListener = [];\n        this.connectionManager = connectionManager;\n        // report api begin\n        (0, log_1.getDefaultReporter)().beginReport();\n        this.connectionManager.addListener(\"sdk_response\", (event, msg) => {\n            var jsonResponse = (0, safejson_1.safeJsonParse)(msg);\n            (0, log_1.logDebug)(`Engine ==>> addListener ==> success ==> ${jsonResponse}`);\n            this.handleResponse(event, jsonResponse);\n        }, function () {\n        });\n    }\n    addDisconnectListener(disconnecter) {\n        this.disconnectListener.push(disconnecter);\n    }\n    setSessionConnectingListener(sessionConnectingListener) {\n        this.sessionConnectingListener = sessionConnectingListener;\n    }\n    disconnect() {\n        (0, log_1.logDebug)('Engine ==>> disconnect');\n        this.pendingRequests.clear();\n    }\n    getRequestId() {\n        const requestId = Date.now().toString();\n        (0, log_1.logDebug)('Engine ==>> getRequestId ==>', requestId);\n        return requestId;\n    }\n    bindRequestForPromise(requestId, resolve) {\n        this.pendingRequests.set(requestId, resolve);\n    }\n    send(request, requestAnswer, option, ttl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('Engine ==>> send  request==>', JSON.stringify(request));\n            const requestId = this.getRequestId();\n            try {\n                let packageId = yield this.connectionManager.send(JSON.stringify(Object.assign(Object.assign({}, request), { requestId: requestId })), ttl);\n                this.connectionManager.events.once(packageId.toString(), (event) => {\n                    var _a;\n                    (0, log_1.logDebug)(`Engine ==> send => onAck => ${(0, safejson_1.safeJsonStringify)(event)}`);\n                    if (event && event.result) {\n                        (_a = requestAnswer.onAck) === null || _a === void 0 ? void 0 : _a.call(requestAnswer);\n                    }\n                });\n                if (requestAnswer.resolve) {\n                    this.bindRequestForPromise(requestId, requestAnswer.resolve);\n                }\n            }\n            catch (e) {\n                return Promise.reject(e);\n            }\n        });\n    }\n    sendSession(sessionInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('[Connect] sendSession called:', sessionInfo);\n            const requestId = this.getRequestId();\n            let request = {\n                method: 'session_info',\n                params: { sessionInfo: sessionInfo }\n            };\n            yield this.connectionManager.sendRaw(JSON.stringify(Object.assign(Object.assign({}, request), { requestId: requestId })));\n            // try {\n            //     let packageId = await callForSuccess(() =>\n            //         , option)\n            //     this.connectionManager.events.once(packageId.toString(),(event)=>{\n            //         logDebug(`Engine ==> send => onAck => ${safeJsonStringify(event)}`)\n            //         if (event && event.result){\n            //             requestAnswer.onAck?.()\n            //         }\n            //     })\n            //     if (requestAnswer.resolve){\n            //         this.bindRequestForPromise(requestId, requestAnswer.resolve)\n            //     }\n            // }catch (e) {\n            //     return Promise.reject(e)\n            // }\n        });\n    }\n    handleResponse(event, response) {\n        (0, log_1.logDebug)(`Engine ==>> handleResponse_1  ======>response: ${(0, safejson_1.safeJsonStringify)(response)}`, event);\n        if (\"requestId\" in response) {\n            (0, log_1.logDebug)(\"Engine ==>> handleResponse_2  ===> in response\");\n            let requestId = response.requestId;\n            const resolve = this.pendingRequests.get(requestId);\n            if (resolve) {\n                (0, log_1.logDebug)(\"Engine ==>> handleResponse_3  ===> find resolve:\", resolve);\n                resolve(response);\n                // 从pendingRequests中删除这个Promise\n                this.pendingRequests.delete(requestId);\n            }\n            else {\n                (0, log_1.logDebug)(\"Engine ==>> handleResponse_3  ===> not find resolve:\");\n                if (response.method === \"disconnect\") {\n                    this.disconnectListener.forEach(listener => listener());\n                    this.disconnectListener = [];\n                    this.disconnect();\n                }\n                else if (response.method === \"session_connecting\") {\n                    (0, log_1.logDebug)(\"Engine ==>> handleResponse_4  ===> sessionConnectingListener\");\n                    if (this.sessionConnectingListener) {\n                        (0, log_1.logDebug)(\"Engine ==>> handleResponse_4  ===> sessionConnectingListener not null\");\n                        this.sessionConnectingListener();\n                        this.sessionConnectingListener = undefined;\n                    }\n                }\n            }\n        }\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.restoreConnect(sessionInfo.topic));\n            onConnectResult(sessionInfo);\n        });\n    }\n    conect(request, sessionConfig, onConnectResult) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b;\n            const connectInfo = this.connectionManager.getConnectInfo();\n            const requestId = this.getRequestId();\n            let openUniversalLink = (_a = sessionConfig.openUniversalUrl) !== null && _a !== void 0 ? _a : false;\n            const connectRequest = {\n                protocolVer: Number(protocol_1.tonConnectSdkVersion),\n                topic: connectInfo.channelId,\n                clientId: connectInfo.clientId,\n                requestId: requestId,\n                dAppInfo: sessionConfig.dappInfo,\n                requests: request,\n            };\n            const connectRequestStr = JSON.stringify(connectRequest);\n            const utf8Array = new TextEncoder().encode(connectRequestStr);\n            const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n            const deeplinkUrl = `${protocol_1.standardDeeplink}?param=${base64Encoded}`;\n            (0, log_1.logDebug)('engine ==>> connect ==>>deeplinkUrl:', deeplinkUrl);\n            const isIOS = (0, utils_2.isIos)();\n            (0, log_1.logDebug)(`engine ==>> connect ==>>isIOS: ${isIOS}   openUniversalLink: ${openUniversalLink}`);\n            if (isIOS && openUniversalLink) {\n                (0, log_1.logDebug)('bridge-provider ==>> connect_3');\n                (0, utils_1.openOKXDeeplinkWithFallback)(deeplinkUrl);\n            }\n            yield ((_b = this.connectionManager) === null || _b === void 0 ? void 0 : _b.disconnect(false));\n            this.bindRequestForPromise(requestId, (response) => {\n                let session = this.onConnect(response, sessionConfig, connectInfo.channelId);\n                onConnectResult(session, response);\n            });\n            try {\n                yield this.connectionManager.connect();\n            }\n            catch (e) {\n                (0, log_1.logDebug)('Engine conect error', e);\n                throw e;\n            }\n            if (!isIOS && openUniversalLink) {\n                (0, log_1.logDebug)('bridge-provider ==>> connect_4');\n                (0, utils_1.openOKXDeeplinkWithFallback)(deeplinkUrl);\n            }\n            return {\n                connectInfo: connectInfo,\n                deeplinkUrl: (0, utils_1.getUniversalLink)(deeplinkUrl)\n            };\n        });\n    }\n    onConnect(connectResponse, sessionConfig, topic) {\n        if (connectResponse.method == \"connect\") {\n            let namespaces = (0, sessionUtils_1.buildNameSpacesByConnectResponse)(connectResponse);\n            if (namespaces) {\n                let session = {\n                    topic: topic,\n                    sessionConfig: sessionConfig,\n                    namespaces: namespaces\n                };\n                return session;\n            }\n        }\n        return null;\n    }\n    universalConnect(request, sessionConfig, connectInfoAndUrl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b, _c, _d;\n                try {\n                    (0, log_1.logDebug)(\"engine universalConnect request :\", JSON.stringify(request));\n                    (0, log_1.logDebug)(\"engine universalConnect sessionConfig :\", JSON.stringify(sessionConfig));\n                    let universalRequest = [];\n                    request.forEach((item) => {\n                        let name = item.name;\n                        if (name.startsWith(\"requestAccounts\") || name.startsWith(\"ton\")) {\n                            universalRequest.push(item);\n                        }\n                    });\n                    (0, log_1.logDebug)(\"engine universalConnect universalRequest :\", JSON.stringify(universalRequest));\n                    const connectInfo = this.connectionManager.getConnectInfo();\n                    const requestId = this.getRequestId();\n                    let openUniversalLink = (_a = sessionConfig.openUniversalUrl) !== null && _a !== void 0 ? _a : false;\n                    const universalConnectRequest = {\n                        protocolVer: Number(protocol_1.tonConnectSdkVersion),\n                        topic: connectInfo.channelId,\n                        clientId: connectInfo.clientId,\n                        requestId: requestId,\n                        dAppInfo: sessionConfig.dappInfo,\n                        requests: universalRequest,\n                        redirect: (_b = sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect) !== null && _b !== void 0 ? _b : \"none\"\n                    };\n                    const base64Encoded = (0, url_1.encodeConnectParams)(universalConnectRequest);\n                    universalConnectRequest.redirect = (_c = sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect) !== null && _c !== void 0 ? _c : \"none\";\n                    (0, log_1.logDebug)('engine universalConnect ==>>universalConnectRequest:', JSON.stringify(universalConnectRequest));\n                    var openOKXLink = \"\";\n                    // open app wallet\n                    if (openUniversalLink) {\n                        openOKXLink = (0, url_1.getOKXLink)(universalConnectRequest, sessionConfig.useMini, sessionConfig.tmaReturnUrl);\n                        (0, log_1.logDebug)('engine universalConnect ==>>openOKXLink:', openOKXLink);\n                    }\n                    const openMethod = () => sessionConfig.useMini ? (0, url_1.openOKXTMAWalletlinkWithFallback)(openOKXLink) :\n                        (0, utils_1.useShortLink)() ? (0, utils_1.openOKXUniversalLink)(openOKXLink) : (0, utils_1.openOKXDeeplinkWithFallback)(openOKXLink);\n                    (0, log_1.logDebug)('engine universalConnect ==>>openOKXLink:', openOKXLink);\n                    const isIOS = (0, utils_2.isIos)();\n                    if (isIOS && openUniversalLink) {\n                        (0, log_1.logDebug)(`engine universalConnect ==>>isIOS: ${isIOS}   openUniversalLink: ${openUniversalLink}`);\n                        openMethod();\n                    }\n                    yield ((_d = this.connectionManager) === null || _d === void 0 ? void 0 : _d.disconnect(false));\n                    this.bindRequestForPromise(requestId, (response) => {\n                        var _a, _b, _c, _d;\n                        try {\n                            let connectResponse = response;\n                            if (connectResponse.method == \"connect\") {\n                                (0, log_1.logDebug)(\"engin  universalConnect success connectResponse:>>>\", JSON.stringify(connectResponse));\n                                let namespaces = (0, sessionUtils_1.buildNameSpacesByConnectResponse)(connectResponse);\n                                if (namespaces) {\n                                    let walletName = undefined;\n                                    if (((_b = (_a = connectResponse.payload) === null || _a === void 0 ? void 0 : _a.responses) === null || _b === void 0 ? void 0 : _b[0]) && \"walletName\" in connectResponse.payload.responses[0]) {\n                                        walletName = connectResponse.payload.responses[0]['walletName'];\n                                    }\n                                    let session = {\n                                        topic: connectInfo.channelId,\n                                        sessionConfig: sessionConfig,\n                                        namespaces: namespaces,\n                                        wallet: Object.assign(Object.assign({}, (_c = connectResponse.payload) === null || _c === void 0 ? void 0 : _c.wallet), { walletName: walletName }),\n                                    };\n                                    let methodsResponse = connectResponse.payload.responses.find(item => item.name === 'requestAccounts');\n                                    if (methodsResponse && methodsResponse.connectRequestMethods) {\n                                        session.signResponse = methodsResponse.connectRequestMethods;\n                                    }\n                                    (0, log_1.logDebug)(\"engin  universalConnect success session:>>>\", JSON.stringify(session));\n                                    resolve(session);\n                                }\n                                else {\n                                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n                                }\n                            }\n                            else if (connectResponse.method == \"connect_error\" && ((_d = connectResponse.payload) === null || _d === void 0 ? void 0 : _d.code)) {\n                                throw new protocol_1.OKXConnectError(connectResponse.payload.code);\n                            }\n                        }\n                        catch (e) {\n                            reject(e);\n                        }\n                    });\n                    try {\n                        yield this.connectionManager.connect();\n                    }\n                    catch (e) {\n                        (0, log_1.logDebug)('Engine universalConnect error', e);\n                        throw e;\n                    }\n                    if (!isIOS && openUniversalLink) {\n                        openMethod();\n                    }\n                    (0, log_1.logDebug)('engin  universalConnect ==>> connectInfoAndUrl:', connectInfoAndUrl);\n                    this.sendSession(base64Encoded);\n                    if (connectInfoAndUrl) {\n                        const info = {\n                            connectRequest: universalConnectRequest,\n                            redirect: sessionConfig.redirect,\n                            tmaReturnUrl: sessionConfig.tmaReturnUrl,\n                        };\n                        (0, log_1.logDebug)(\"universalConnect connectInfoAndUrl info :\", JSON.stringify(info));\n                        connectInfoAndUrl(info);\n                    }\n                }\n                catch (error) {\n                    (0, log_1.logDebug)(\"Engine universalConnect catch error\", error);\n                    reject(error);\n                }\n            }));\n        });\n    }\n}\nexports.Engine = Engine;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Storage = exports.Engine = exports.WalletConnectionManager = exports.ConnectionManager = exports.OKXWalletConnector = void 0;\nvar connect_1 = require(\"./connect\");\nObject.defineProperty(exports, \"OKXWalletConnector\", { enumerable: true, get: function () { return connect_1.OKXWalletConnector; } });\nvar connectionManager_1 = require(\"./connectionManager\");\nObject.defineProperty(exports, \"ConnectionManager\", { enumerable: true, get: function () { return connectionManager_1.ConnectionManager; } });\nvar walletConnectionManager_1 = require(\"./walletConnectionManager\");\nObject.defineProperty(exports, \"WalletConnectionManager\", { enumerable: true, get: function () { return walletConnectionManager_1.WalletConnectionManager; } });\nvar engine_1 = require(\"./engine\");\nObject.defineProperty(exports, \"Engine\", { enumerable: true, get: function () { return engine_1.Engine; } });\nvar storage_1 = require(\"./storage\");\nObject.defineProperty(exports, \"Storage\", { enumerable: true, get: function () { return storage_1.Storage; } });\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MULTICODEC_ED25519_LENGTH = exports.MULTICODEC_ED25519_HEADER = exports.MULTICODEC_ED25519_BASE = exports.MULTICODEC_ED25519_ENCODING = exports.DID_METHOD = exports.DID_PREFIX = exports.DID_DELIMITER = exports.KEY_PAIR_SEED_LENGTH = exports.DATA_ENCODING = exports.JSON_ENCODING = exports.JWT_ENCODING = exports.JWT_DELIMITER = exports.JWT_IRIDIUM_TYP = exports.JWT_IRIDIUM_ALG = exports.JWTHeaderType = void 0;\nexports.generateKeyPair = generateKeyPair;\nexports.decodeJSON = decodeJSON;\nexports.encodeJSON = encodeJSON;\nexports.encodeIss = encodeIss;\nexports.decodeIss = decodeIss;\nexports.encodeSig = encodeSig;\nexports.decodeSig = decodeSig;\nexports.encodeData = encodeData;\nexports.decodeData = decodeData;\nexports.encodeJWT = encodeJWT;\nexports.decodeJWT = decodeJWT;\nexports.signJWT = signJWT;\nexports.verifyJWT = verifyJWT;\nconst ed25519 = __importStar(require(\"@stablelib/ed25519\"));\nconst safejson_1 = require(\"../utils/safejson\");\nconst utils_1 = require(\"../utils/utils\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst log = __importStar(require(\"../utils/log\"));\nconst stringUtils_1 = require(\"../utils/stringUtils\");\nexports.JWTHeaderType = \"dapp\";\nexports.JWT_IRIDIUM_ALG = \"EdDSA\";\nexports.JWT_IRIDIUM_TYP = \"JWT\";\nexports.JWT_DELIMITER = \".\";\nexports.JWT_ENCODING = \"base64url\";\nexports.JSON_ENCODING = \"utf8\";\nexports.DATA_ENCODING = \"utf8\";\nexports.KEY_PAIR_SEED_LENGTH = 32;\nexports.DID_DELIMITER = \":\";\nexports.DID_PREFIX = \"did\";\nexports.DID_METHOD = \"key\";\nexports.MULTICODEC_ED25519_ENCODING = \"base58btc\";\nexports.MULTICODEC_ED25519_BASE = \"z\";\nexports.MULTICODEC_ED25519_HEADER = \"K36\";\nexports.MULTICODEC_ED25519_LENGTH = 32;\nfunction generateKeyPair() {\n    // let local_seed = randomBytes(KEY_PAIR_SEED_LENGTH)\n    // return ed25519.generateKeyPairFromSeed(local_seed);\n    return tweetnacl_1.default.sign.keyPair();\n}\nfunction decodeJSON(str) {\n    return (0, safejson_1.safeJsonParse)((0, stringUtils_1.okxtoString)((0, stringUtils_1.okxfromString)(str, exports.JWT_ENCODING), exports.JSON_ENCODING));\n}\nfunction encodeJSON(val) {\n    return (0, stringUtils_1.okxtoString)((0, stringUtils_1.okxfromString)((0, safejson_1.safeJsonStringify)(val), exports.JSON_ENCODING), exports.JWT_ENCODING);\n}\nfunction encodeIss(publicKey) {\n    log.logDebug(`publicKey: ${(0, utils_1.toHexString)(publicKey)}`);\n    var publicKeyStr = (0, stringUtils_1.okxtoString)(publicKey, exports.MULTICODEC_ED25519_ENCODING);\n    return [exports.DID_PREFIX, exports.DID_METHOD, publicKeyStr].join(exports.DID_DELIMITER);\n}\nfunction decodeIss(issuer) {\n    const [prefix, method, multicodec] = issuer.split(exports.DID_DELIMITER);\n    if (prefix !== exports.DID_PREFIX || method !== exports.DID_METHOD) {\n        throw new Error(`Issuer must be a DID with method \"key\"`);\n    }\n    if (multicodec === undefined) {\n        throw new Error('multicodec is undefined');\n    }\n    const publicKey = (0, stringUtils_1.okxfromString)(multicodec, exports.MULTICODEC_ED25519_ENCODING);\n    if (publicKey === undefined || publicKey.length !== exports.MULTICODEC_ED25519_LENGTH) {\n        throw new Error(`Issuer must be a public key with length 32 bytes`);\n    }\n    return publicKey;\n}\n// ---------- Signature ----------------------------------------------- //\nfunction encodeSig(bytes) {\n    return (0, stringUtils_1.okxtoString)(bytes, exports.JWT_ENCODING);\n}\nfunction decodeSig(encoded) {\n    return (0, stringUtils_1.okxfromString)(encoded, exports.JWT_ENCODING);\n}\n// ---------- Data ----------------------------------------------- //\nfunction encodeData(params) {\n    return (0, stringUtils_1.okxfromString)([encodeJSON(params.header), encodeJSON(params.payload)].join(exports.JWT_DELIMITER), exports.DATA_ENCODING);\n}\nfunction decodeData(data) {\n    var _a, _b;\n    const params = (0, stringUtils_1.okxtoString)(data, exports.DATA_ENCODING).split(exports.JWT_DELIMITER);\n    const header = decodeJSON((_a = params[0]) !== null && _a !== void 0 ? _a : '{}');\n    const payload = decodeJSON((_b = params[1]) !== null && _b !== void 0 ? _b : '{}');\n    return { header, payload };\n}\n// ---------- JWT ----------------------------------------------- //\nfunction encodeJWT(params) {\n    return [encodeJSON(params.header), encodeJSON(params.payload), encodeSig(params.signature)].join(exports.JWT_DELIMITER);\n}\nfunction decodeJWT(jwt) {\n    var _a, _b, _c;\n    const params = jwt.split(exports.JWT_DELIMITER);\n    const header = decodeJSON((_a = params[0]) !== null && _a !== void 0 ? _a : '{}');\n    const payload = decodeJSON((_b = params[1]) !== null && _b !== void 0 ? _b : '{}');\n    const signature = decodeSig((_c = params[2]) !== null && _c !== void 0 ? _c : '{}');\n    const data = (0, stringUtils_1.okxfromString)(params.slice(0, 2).join(exports.JWT_DELIMITER), exports.DATA_ENCODING);\n    return { header, payload, signature, data };\n}\nfunction signJWT(sub_1, aud_1, ttl_1, keyPair_1) {\n    return __awaiter(this, arguments, void 0, function* (sub, aud, ttl, keyPair, iat = Math.floor(Date.now())) {\n        const header = { alg: exports.JWT_IRIDIUM_ALG, typ: exports.JWT_IRIDIUM_TYP };\n        const iss = encodeIss(keyPair.publicKey);\n        const exp = iat + ttl;\n        const act = \"authenticate user\";\n        const payload = { iss, sub, aud, act, iat, exp };\n        const data = encodeData({ header, payload });\n        // const signature = ed25519.sign(keyPair.secretKey, data);\n        log.logDebug(`get sec kp: ${keyPair.secretKey} {${keyPair.secretKey.length}}`);\n        const signature = tweetnacl_1.default.sign.detached(data, keyPair.secretKey);\n        return encodeJWT({ header, payload, signature });\n    });\n}\nfunction verifyJWT(jwt) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { header, payload, data, signature } = decodeJWT(jwt);\n        if (header.alg !== exports.JWT_IRIDIUM_ALG || header.typ !== exports.JWT_IRIDIUM_TYP) {\n            throw new Error(\"JWT must use EdDSA algorithm\");\n        }\n        const publicKey = decodeIss(payload.iss);\n        return ed25519.verify(publicKey, data, signature);\n    });\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCONNECTOR_JWT_TTL = exports.OKXCONNECTOR_JWT_WALLET_SIDE = exports.OKXCONNECTOR_JWT_SIDE = void 0;\nexports.OKXCONNECTOR_JWT_SIDE = \"wallet\";\nexports.OKXCONNECTOR_JWT_WALLET_SIDE = \"dapp\";\nexports.OKXCONNECTOR_JWT_TTL = 86400000;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.buildNameSpacesByConnectResponse = buildNameSpacesByConnectResponse;\nexports.buildRequestAccountNameSpacesByConnectResponse = buildRequestAccountNameSpacesByConnectResponse;\nconst log_1 = require(\"../utils/log\");\nfunction buildNameSpacesByConnectResponse(connectResponse) {\n    let requestAccountNameSpaces = buildRequestAccountNameSpacesByConnectResponse(connectResponse);\n    return requestAccountNameSpaces;\n}\nfunction buildRequestAccountNameSpacesByConnectResponse(connectResponse) {\n    let result = {};\n    (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start connectResponse111>>', JSON.stringify(connectResponse));\n    let universalResponse = connectResponse.payload.responses.find(item => item.name === 'requestAccounts');\n    if (universalResponse && universalResponse.accounts) {\n        let filterAccount = [];\n        for (const item of universalResponse.accounts) {\n            if (item.namespace === \"ton\") {\n                if (item.data && item.data.ton_addr) {\n                    if (item.data.ton_addr.address && item.data.ton_addr.address.length > 0) {\n                        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start TON>>', JSON.stringify(item));\n                        filterAccount.push(item);\n                    }\n                }\n            }\n            else {\n                (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start other>>', JSON.stringify(item));\n                filterAccount.push(item);\n            }\n        }\n        universalResponse.accounts = filterAccount;\n    }\n    const tonAddress = connectResponse.payload.responses.find(item => item.name === 'ton_addr');\n    const tonProof = connectResponse.payload.responses.find(item => item.name === 'ton_proof');\n    if (tonAddress && !universalResponse) { //adapt tonsdk\n        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse adapt ton data >>');\n        let address = tonAddress.address;\n        address = 'ton:' + tonAddress.network + \":\" + address;\n        let data = {\n            ton_addr: tonAddress\n        };\n        if (tonProof) {\n            data.ton_proof = tonProof;\n        }\n        universalResponse = {\n            name: \"requestAccounts\",\n            accounts: [{\n                    namespace: 'ton',\n                    addresses: [address],\n                    methods: ['ton_sendTransaction'],\n                    extra: {},\n                    data: data,\n                }]\n        };\n    }\n    (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse end universalResponse>>>', JSON.stringify(universalResponse));\n    universalResponse.accounts.forEach(item => {\n        var chains = [];\n        var accounts = [];\n        item.addresses.forEach(addressItem => {\n            var addressArr = addressItem.split(\":\");\n            (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse addressArr>>', addressArr.length);\n            if (addressArr.length >= 3) {\n                let chain = addressArr.slice(0, 2).join(\":\");\n                chains.push(chain);\n                accounts.push(addressItem);\n                (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse chain:>>', chain, \"addressItem:\", addressItem);\n            }\n        });\n        if (item.data && item.data.ton_addr) {\n            item.data.ton_addr.name = 'ton_addr';\n        }\n        if (item.data && item.data.ton_proof) {\n            item.data.ton_proof.name = 'ton_proof';\n        }\n        result[item.namespace] = {\n            chains: chains,\n            accounts: accounts,\n            methods: item.methods,\n            extra: item.extra,\n            payload: item.data\n        };\n        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse result>>', JSON.stringify(result));\n    });\n    return result;\n}\n/*export function buildTonNameSpaceByConnectResponse(connectResponse: ConnectResponseSuccess): Namespaces | undefined {\n    const tonAddrItem: TonAddressItemReply = connectResponse.payload.responses.find(\n        item => item.name === 'ton_addr'\n    ) as TonAddressItemReply;\n\n    const tonProfItem: TonProofItemReply = connectResponse.payload.responses.find(\n        item => item.name === 'ton_proof'\n    ) as TonProofItemReply;\n\n    if (!tonAddrItem) {\n        return undefined\n    }\n\n    return {\n        NameSpaceKeyTON: {\n            chains: [tonAddrItem.network],\n            accounts: [],\n            methods: connectResponse.payload.wallet.features?.ton,\n            payload: {\n                tonAccount: {\n                    address: tonAddrItem.address,\n                    chain: tonAddrItem.network,\n                    walletStateInit: tonAddrItem.walletStateInit,\n                    publicKey: tonAddrItem.publicKey\n                },\n                tonProof: tonProfItem\n            }\n        }\n    }\n}*/\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Storage = void 0;\nconst storageconstants_1 = require(\"./storageconstants\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst utils_1 = require(\"../utils/utils\");\nconst utils_2 = require(\"../utils\");\nconst log = __importStar(require(\"../utils/log\"));\nconst utils_3 = require(\"../utils\");\nconst crypto_js_1 = require(\"crypto-js\");\nclass Storage {\n    constructor(subKey, beforeKey = undefined) {\n        const localStorage = (0, utils_1.resolveLocalStorage)();\n        // 0. check and upgrade beforeKey\n        log.logDebug('------ update before cache ------');\n        if (beforeKey) {\n            this.checkAndUpgradeCache(beforeKey, subKey);\n        }\n        // 1. load data from local storage\n        this.storeKey = '';\n        this.cipherIV = '';\n        this.subKey = subKey;\n        log.logDebug('--------get current local storage --------');\n        log.logDebug(localStorage);\n        const cacheStr = localStorage.getItem(Storage.cacheKey + subKey);\n        if (typeof cacheStr === \"undefined\" || cacheStr === null) {\n            log.logDebug(\"with no cache\");\n            this.cache = {};\n            return;\n        }\n        log.logDebug(cacheStr);\n        if ((cacheStr === null || cacheStr === void 0 ? void 0 : cacheStr.length) > 0) {\n            var cacheObj = (0, utils_2.safeJsonParse)(cacheStr);\n            this.cache = cacheObj;\n        }\n        log.logDebug(`get cache obj: ${this.cache}`);\n        if (typeof this.cache === 'undefined' || this.cache == null) {\n            this.cache = {};\n        }\n    }\n    checkAndUpgradeCache(fromCacheKey, toCacheKey) {\n        if (fromCacheKey && fromCacheKey.length > 0 && toCacheKey && toCacheKey.length > 0) {\n            // 1. get all infos from from-cache-key\n            log.logDebug('--------get current local storage --------');\n            log.logDebug(localStorage);\n            const cacheStr = localStorage.getItem(Storage.cacheKey + fromCacheKey);\n            if (typeof cacheStr === \"undefined\" || cacheStr === null) {\n                log.logDebug(\"no pre cache content\");\n                return;\n            }\n            log.logDebug(cacheStr);\n            if ((cacheStr === null || cacheStr === void 0 ? void 0 : cacheStr.length) > 0) {\n                // 2. save to to-cache-key\n                log.logDebug(\"write in cache content: \", fromCacheKey, '->', toCacheKey);\n                localStorage.setItem(Storage.cacheKey + toCacheKey, cacheStr);\n                // 3. clean from item\n                log.logDebug(\"clean in cache content: \", fromCacheKey);\n                localStorage.removeItem(Storage.cacheKey + fromCacheKey);\n            }\n        }\n        else {\n            log.logDebug('no pre cache key:', fromCacheKey);\n        }\n    }\n    saveContent(content, key, id = '-') {\n        let item = {\n            id: id,\n            timestamp: Date.now().toString(),\n            content: content\n        };\n        this.saveItem(item, key);\n    }\n    saveItem(item, key) {\n        let localKey = Storage.cacheKey + this.subKey;\n        const localStorage = (0, utils_1.resolveLocalStorage)();\n        log.logDebug(this.cache);\n        log.logDebug(`get cache obj: ${this.cache}, ${key}, ${item}`);\n        this.cache[key] = item;\n        let totalCacheStr = (0, utils_2.safeJsonStringify)(this.cache);\n        log.logDebug(`STORAGE: ${key} @ ${this.cache}`);\n        localStorage.setItem(localKey, totalCacheStr);\n    }\n    getItem(key) {\n        log.logDebug(`STORAGE >> getItem: ${key} @ ${this.cache}`);\n        return this.cache[key];\n    }\n    getCachedPBKDF2InfoKey() {\n        var _a, _b, _c, _d;\n        const pwLen = 32;\n        const saltLen = 24;\n        if (this.storeKey.length > 0 && ((_a = this.cipherIV) === null || _a === void 0 ? void 0 : _a.length) > 0) {\n            return {\n                pw: this.storeKey,\n                iv: this.cipherIV\n            };\n        }\n        let salt = (_b = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGER_CRYPTO_SALT)) === null || _b === void 0 ? void 0 : _b.content;\n        if (!salt) {\n            salt = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(saltLen));\n            this.saveContent(salt, storageconstants_1.OKXCONNECTOR_STORAGER_CRYPTO_SALT);\n        }\n        let pw = (_c = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD)) === null || _c === void 0 ? void 0 : _c.content;\n        if (!pw) {\n            pw = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(pwLen));\n            this.saveContent(pw, storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD);\n        }\n        let cipherIV = (_d = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV)) === null || _d === void 0 ? void 0 : _d.content;\n        if (!cipherIV) {\n            // let ivBuffer = Buffer.from(nacl.randomBytes(16))\n            let ivBuffer = tweetnacl_1.default.randomBytes(16);\n            cipherIV = (0, utils_1.toHexString)(ivBuffer);\n            this.saveContent(cipherIV, storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV);\n        }\n        this.cipherIV = cipherIV;\n        this.storeKey = (0, crypto_js_1.PBKDF2)(pw, salt, { iterations: 10 }).toString();\n        return {\n            pw: this.storeKey,\n            iv: this.cipherIV\n        };\n    }\n    encryptStoreMsg(msg, key) {\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg start ${Date.now()}`);\n        let storeInfo = this.getCachedPBKDF2InfoKey();\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg mid ${Date.now()}`);\n        var result = crypto_js_1.AES.encrypt(msg, storeInfo.pw).toString();\n        this.saveContent(result, key);\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg end ${Date.now()}`);\n    }\n    getAndDecrypt(key) {\n        (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt start ${Date.now()}`);\n        let item = this.getItem(key);\n        if (item && item.content) {\n            let storeInfo = this.getCachedPBKDF2InfoKey();\n            (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt mid ${Date.now()}`);\n            let result = crypto_js_1.AES.decrypt(item.content, storeInfo.pw).toString(crypto_js_1.enc.Utf8);\n            (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt end ${Date.now()}`);\n            return result;\n        }\n        return null;\n    }\n    clearCache(key = undefined) {\n        if (key === undefined) {\n            // clean all\n            this.cache = {};\n            let localKey = Storage.cacheKey + this.subKey;\n            localStorage.setItem(localKey, '');\n        }\n        else {\n            let localKey = Storage.cacheKey + this.subKey;\n            const localStorage = (0, utils_1.resolveLocalStorage)();\n            log.logDebug(this.cache);\n            this.cache[key] = null;\n            let totalCacheStr = (0, utils_2.safeJsonStringify)(this.cache);\n            log.logDebug(`STORAGE: clean key ${key} @ ${this.cache}`);\n            localStorage.setItem(localKey, totalCacheStr);\n        }\n    }\n}\nexports.Storage = Storage;\nStorage.cacheKey = 'OKXStorageKey';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCONNECTOR_STORAGE_CIPHER_METHOD = exports.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV = exports.OKXCONNECTOR_STORAGER_CRYPTO_SALT = exports.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD = exports.OKXCONNECTOR_TON_KEY = exports.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE = exports.OKXCONNECTOR_TOKEN_CACHE = exports.OKXCONNECTOR_JWT_KEY = exports.OKXCONNECTOR_SESSION_PREFIX_KEY = exports.OKXCONNECTOR_CRYPTO_KEY = exports.OKXCONNECTOR_CACHE_KEY_DAPP = exports.OKXCONNECTOR_CACHE_KEY = void 0;\nexports.OKXCONNECTOR_CACHE_KEY = \"ck\";\nexports.OKXCONNECTOR_CACHE_KEY_DAPP = \"ck_dapp\";\nexports.OKXCONNECTOR_CRYPTO_KEY = \"cck_k\";\nexports.OKXCONNECTOR_SESSION_PREFIX_KEY = \"cspk_\";\nexports.OKXCONNECTOR_JWT_KEY = \"cjk_k\";\nexports.OKXCONNECTOR_TOKEN_CACHE = \"ct\";\nexports.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE = \"csp\";\nexports.OKXCONNECTOR_TON_KEY = \"OKXStorage_ctc\";\nexports.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD = \"scp\";\nexports.OKXCONNECTOR_STORAGER_CRYPTO_SALT = \"scs\";\nexports.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV = \"scpc\";\nexports.OKXCONNECTOR_STORAGE_CIPHER_METHOD = \"aes-256-cbc\";\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletConnectionManagerEvent = exports.WalletConnectionManagerTopicInfoCacheKey = void 0;\nexports.WalletConnectionManagerTopicInfoCacheKey = \"wcmtic\";\nexports.WalletConnectionManagerEvent = {\n    RECEIVE_REQUEST: \"payload\"\n};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletConnectionManager = void 0;\nconst connect_1 = require(\"./connect\");\nconst commands_1 = require(\"./commands\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst jwtconstants_1 = require(\"./jwtconstants\");\nconst constants_1 = require(\"./constants\");\nconst walletConnectionConstants_1 = require(\"./walletConnectionConstants\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils/utils\");\nconst crypto_1 = require(\"../crypto/crypto\");\nconst jwt_1 = require(\"./jwt\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst utils_2 = require(\"../utils\");\nclass WalletConnectionManager {\n    constructor() {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.communicateEvents = new eventemitter3_1.EventEmitter();\n        log.logDebug('connect manager construct');\n        // local storage\n        this.connectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n        // this.crypto = new SessionCrypto()\n        this.jwtKeyPair = this.getCachedJWTKeyPair();\n        this.saveJWTKeyPair(this.jwtKeyPair);\n        // wss connection\n        this.connector = new connect_1.OKXWalletConnector(constants_1.OKXCONNECTOR_WS_URL_1);\n        this.packageId = Date.now();\n        // connection state\n        this.sessionCryptoInfoMap = new Map();\n        // log.logDebug(`this.connectedWalletPK  constructor   ${this.connectedWalletPK}`)\n        this.inLogin = false;\n        this.isLogined = false;\n    }\n    refreshPackageId(offset = 0) {\n        this.packageId = Date.now() + offset;\n    }\n    saveCryptoKeyPair(topicId, keyPair) {\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(keyPair);\n        // encrypt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_CRYPTO_KEY + topicId);\n    }\n    getCachedCryptoKeyPair(topicId) {\n        // decrypt kp\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_CRYPTO_KEY + topicId);\n        const content = kp;\n        if (typeof content == 'string') {\n            log.logDebug('get cached crypto key:');\n            log.logDebug(content);\n            let keyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            return keyPairInfo;\n        }\n        else {\n            this.connectStorage.clearCache();\n        }\n        return null;\n    }\n    saveJWTKeyPair(keyPair) {\n        var strkeyPair = {\n            publicKey: (0, utils_1.toHexString)(keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(keyPair.secretKey)\n        };\n        log.logDebug('save jwt kp');\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(strkeyPair);\n        log.logDebug(cacheInfo);\n        // encrypt jwt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        log.logDebug('after save jwt kp');\n    }\n    getCachedJWTKeyPair() {\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            // TODO: decrypt jwt kp\n            log.logDebug('get cached jwt kp:');\n            log.logDebug(content);\n            let strKeyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            log.logDebug('save jwt kp');\n            log.logDebug(strKeyPairInfo);\n            var keyPair = {\n                publicKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.publicKey),\n                secretKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.secretKey)\n            };\n            return keyPair;\n        }\n        else {\n            return (0, jwt_1.generateKeyPair)();\n        }\n    }\n    isTopicPublicKeyExist(topicId) {\n        log.logDebug(`isTopicPublicKeyExist  ===> ${topicId}`);\n        return this.sessionCryptoInfoMap.get(topicId);\n    }\n    makeJWT(timestampStr) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, jwt_1.signJWT)(timestampStr, jwtconstants_1.OKXCONNECTOR_JWT_WALLET_SIDE, jwtconstants_1.OKXCONNECTOR_JWT_TTL, // 24h\n            this.jwtKeyPair);\n        });\n    }\n    parseInternalMsg(internalMsg) {\n        try {\n            let internalObj = (0, safejson_1.safeJsonParse)(internalMsg);\n            let origin = internalObj['ivur-igbfft-ptjip'];\n            if (origin && origin.length > 0) {\n                let originContent = (0, utils_2.base64decode)(origin, true);\n                return originContent.toString();\n            }\n        }\n        catch (error) {\n            log.logError('parse internal msg', error);\n        }\n    }\n    updateClientId(topic, clientId) {\n        let sessionInfo = this.sessionCryptoInfoMap.get(topic);\n        (0, log_1.logDebug)('updateClientId', sessionInfo, topic, clientId);\n        if (sessionInfo && clientId && clientId.length > 0) {\n            if (sessionInfo.cid) {\n                // check\n                let lastCheck = (0, utils_1.getLastSixMd5Hash)(clientId);\n                if (sessionInfo.cid == lastCheck) {\n                    sessionInfo.dappPublicKey = clientId;\n                }\n                else {\n                    log.logError('cid check failed', sessionInfo, topic, clientId);\n                }\n            }\n            else {\n                sessionInfo.dappPublicKey = clientId;\n            }\n            // \n            this.syncCacheSessionInfo();\n        }\n        return false;\n    }\n    parsePackage(topic_1, input_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, input, ignoreACK = false) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;\n            this.events.emit(input.id, input);\n            // emit event\n            let sessionInfo = this.sessionCryptoInfoMap.get(topic);\n            log.logDebug('get sessionInfo for decrypt topic:', topic);\n            log.logDebug('get sessionInfo for decrypt:', input.id, topic, sessionInfo, this.sessionCryptoInfoMap);\n            if (sessionInfo && input.params.data) {\n                if ((_a = input.params.data) === null || _a === void 0 ? void 0 : _a.message) {\n                    // try parse internal message\n                    if ((_b = input.params.data) === null || _b === void 0 ? void 0 : _b.isInternalData) {\n                        let inner_message = (_c = input.params.data) === null || _c === void 0 ? void 0 : _c.message;\n                        let inner_topic = (_d = input.params.data) === null || _d === void 0 ? void 0 : _d.topic;\n                        let originContent = this.parseInternalMsg(inner_message);\n                        (0, log_1.logDebug)('parse internal origin: ', originContent);\n                        if (originContent && originContent.length > 0) {\n                            this.communicateEvents.emit(\"origin\", originContent, inner_topic);\n                        }\n                    }\n                    else {\n                        // try parse message base64\n                        try {\n                            let message = (_e = input.params.data) === null || _e === void 0 ? void 0 : _e.message;\n                            if (message.trimStart().startsWith('{')) {\n                                let messageObj = (0, safejson_1.safeJsonParse)(message);\n                                if (messageObj.method) {\n                                    if (messageObj.method == 'session_info') {\n                                        let sessionInfoString = messageObj.params.sessionInfo;\n                                        let base64Content = (0, utils_2.base64decode)(sessionInfoString, false);\n                                        (0, log_1.logDebug)(\"wallet connection manager requset base64Content:\", base64Content);\n                                        (0, log_1.logDebug)(\"base64Content:\" + base64Content);\n                                        let inner_connection = base64Content.toObject();\n                                        this.updateClientId(topic, inner_connection.clientId);\n                                    }\n                                    (0, log_1.logDebug)('<<< parse raw msg:', topic, messageObj);\n                                    this.communicateEvents.emit(topic, message);\n                                }\n                            }\n                            else {\n                                let message = sessionInfo.crypto.decryptWallet((_f = input.params.data) === null || _f === void 0 ? void 0 : _f.message, sessionInfo.dappPublicKey);\n                                (0, log_1.logDebug)('<<< receive msg:', topic, message);\n                                this.communicateEvents.emit(topic, message);\n                            }\n                        }\n                        catch (error) {\n                            let message = sessionInfo.crypto.decryptWallet((_g = input.params.data) === null || _g === void 0 ? void 0 : _g.message, sessionInfo.dappPublicKey);\n                            (0, log_1.logDebug)('<<< receive msg:', topic, message);\n                            this.communicateEvents.emit(topic, message);\n                        }\n                    }\n                }\n                else {\n                }\n            }\n            // send back ACK\n            if (!ignoreACK) {\n                yield this.sendACK(input.id, true);\n                if (topic) {\n                    let inputObj = input;\n                    if ((_j = (_h = inputObj.params) === null || _h === void 0 ? void 0 : _h.data) === null || _j === void 0 ? void 0 : _j.messageId) {\n                        this.refreshPackageId();\n                        yield this.sendReceive(this.packageId.toString(), (_l = (_k = inputObj.params) === null || _k === void 0 ? void 0 : _k.data) === null || _l === void 0 ? void 0 : _l.messageId, topic);\n                    }\n                }\n            }\n        });\n    }\n    recovrySessionInfoFromCache() {\n        // get topic ids and keys from session\n        // WalletConnectionCryptoCacheMap\n        // {[topicId]: {cryptoKeypair: {publicKey:string, secretKey:string}, dappPublicKey:clientId}}\n        let jsonStr = this.connectStorage.getAndDecrypt(walletConnectionConstants_1.WalletConnectionManagerTopicInfoCacheKey);\n        log.logDebug('get cached sessionInfos:', jsonStr);\n        if (jsonStr) {\n            let cacheMap = (0, safejson_1.safeJsonParse)(jsonStr);\n            for (let topicId in cacheMap) {\n                let topicItem = cacheMap[topicId];\n                log.logDebug('make topicItem:', topicItem);\n                let cryptoItem = {\n                    topic: topicId,\n                    crypto: new crypto_1.SessionCrypto({\n                        publicKey: topicItem.cryptoKeyPair.publicKey,\n                        secretKey: topicItem.cryptoKeyPair.secretKey\n                    }),\n                    dappPublicKey: topicItem.dappPublicKey,\n                    cid: topicItem.cid\n                };\n                this.sessionCryptoInfoMap.set(topicId, cryptoItem);\n            }\n        }\n        log.logDebug('get cached sessionInfos map:', this.sessionCryptoInfoMap);\n    }\n    syncCacheSessionInfo() {\n        let cacheMap = {};\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            log.logDebug('for each Keys', topicId);\n            if (cryptoItem) {\n                cacheMap[topicId] = {\n                    cryptoKeyPair: cryptoItem.crypto.stringifyKeypair(),\n                    dappPublicKey: cryptoItem.dappPublicKey,\n                    cid: cryptoItem.cid\n                };\n            }\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(cacheMap);\n        log.logDebug('sync cache sessionInfos:', jsonData);\n        this.connectStorage.encryptStoreMsg(jsonData, walletConnectionConstants_1.WalletConnectionManagerTopicInfoCacheKey);\n    }\n    cacheSessionInfo(topic, sessionInfo, sync = true) {\n        let dappPublicKey = sessionInfo.dappPublicKey;\n        // 1. search dapp public related topic ids\n        let duplicatedTopics = [];\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            log.logDebug('for each Keys', topicId);\n            if (cryptoItem.dappPublicKey == dappPublicKey) {\n                log.logDebug('duplicated dapp public key:', topicId, dappPublicKey);\n                duplicatedTopics.push(topicId);\n            }\n        }\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            if (duplicatedTopics.includes(topicId)) {\n                this.sessionCryptoInfoMap.delete(topicId);\n            }\n        }\n        // discard useless topics\n        log.logDebug('cleaned connect session cache:', this.sessionCryptoInfoMap);\n        // 2. remove previous connected topic ids\n        // 3. write in current topic\n        this.sessionCryptoInfoMap.set(topic, sessionInfo);\n        // TODO: search domain info and then delete \n        log.logDebug('cache sessionInfo:', topic, sessionInfo, this.sessionCryptoInfoMap);\n        if (sync) {\n            this.syncCacheSessionInfo();\n        }\n        return duplicatedTopics;\n    }\n    // add and subscribe topic\n    appendTopic(topic, sessionPublicKey, cid) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('4.1. get append Topic:', topic);\n            // 1. check if connected\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                if (!this.isLogined) {\n                    var error = new Error();\n                    error.message = \"connection is not logined\";\n                    error.name = \"append error\";\n                    // throw error\n                    reject(error);\n                    return;\n                }\n                // 2. subscribe topic and session public key\n                let cryptoItem = {\n                    topic: topic,\n                    crypto: new crypto_1.SessionCrypto(),\n                    dappPublicKey: sessionPublicKey ? sessionPublicKey : \"\",\n                    cid: cid\n                };\n                let duplicatedTopics = this.cacheSessionInfo(topic, cryptoItem, false);\n                // make sure cache session info before subscribe\n                yield this.subscribeTopics(Array.from([topic]));\n                this.refreshPackageId();\n                log.logDebug(`5. subscribe callback then fetch append message: ${this.packageId}, ${topic}`);\n                log.reportLog(`5. subscribe callback then fetch append message`);\n                const timeF = new Date().getTime();\n                (0, log_1.logDebug)(\"Append --subscribe callback->\", timeF - this.timeLog);\n                resolve(duplicatedTopics);\n            }));\n        });\n    }\n    confirmAppendingTopics() {\n        this.syncCacheSessionInfo();\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.timeLog = new Date().getTime();\n            (0, log_1.logDebug)(\"[Wallet] ConnectTime---enter->\", this.timeLog);\n            log.reportLog('wallet connect connect called');\n            // 0. get cached topics and infos\n            let timestampStr = Date.now().toString();\n            var jwtToken = yield this.makeJWT(timestampStr);\n            log.logDebug(`generate jwt token: ${jwtToken}`);\n            this.connectStorage.saveContent(jwtToken, 'jwt');\n            this.recovrySessionInfoFromCache();\n            // 1.\n            return new Promise((resolve, reject) => {\n                // 1. when websocket opened\n                this.inLogin = true;\n                this.connector.onOpen(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug(`1. connector on open`);\n                    log.reportLog('1. wallet connect connect on open');\n                    const timeOne = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---open->\", timeOne - this.timeLog);\n                    //2. send jwt to login\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when login');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // throw error\n                            reject(error);\n                        }\n                        else {\n                            this.isLogined = true;\n                            resolve();\n                            // 3. subscribe cached topics\n                            log.logDebug('3. subscribe cached topics', this.sessionCryptoInfoMap);\n                            log.reportLog('3. wallet connect connect subscribe cached topics');\n                            if (this.sessionCryptoInfoMap.size > 0) {\n                                yield this.subscribeTopics(Array.from(this.sessionCryptoInfoMap.keys()));\n                            }\n                        }\n                    }));\n                    log.logDebug(`2. login called`);\n                    log.reportLog('2. wallet connect login called');\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        return yield this.connector.connect();\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_LOGIN,\n                        params: {\n                            token: jwtToken\n                        }\n                    });\n                }));\n                this.connector.connect().catch((err) => {\n                    (0, log_1.logDebug)('WalletConnectionManager connect error', err);\n                    reject(err);\n                });\n                // add callback\n                this.connector.addPackageParse((event) => {\n                    var _a, _b;\n                    log.logDebug(`connect: parse package`);\n                    log.logDebug(event);\n                    if (!(\"params\" in event) || !(\"data\" in event[\"params\"])) {\n                        this.parsePackage(\"\", event, true);\n                        return;\n                    }\n                    // ignore receive echo\n                    if ((_a = event.params.data) === null || _a === void 0 ? void 0 : _a.topic) {\n                        this.parsePackage((_b = event.params.data) === null || _b === void 0 ? void 0 : _b.topic, event, event.method === commands_1.CONNECT_METHOD_RECEIVE);\n                    }\n                });\n                // this.connector.addListener(safeJsonStringify(event), (rawMsg: string)=> {\n                //    rawMsg = rawMsg.replace(/'/g, '\"')\n                //    log.logDebug(`addListener ===> ${rawMsg}`)\n                //    if (typeof rawMsg !== 'undefined') {\n                //       var msgObj = safeJsonParse(rawMsg)\n                //       var msg = msgObj.message\n                //       let crypto = \n                //       var result = this.crypto.decrypt(msg, this.connectedWalletPK)\n                //       log.logDebug(`addListener ===> ${result}`)\n                //       return result\n                //    }\n                //    return undefined\n                // }, ()=>{\n                //    // emit success\n                // }, ()=>{\n                //    // emit fail\n                // })\n            });\n        });\n    }\n    // 获取对应topic session下的钱包公钥\n    // 在返回approve时需要填充到clientId字段中\n    getSessionPublicKey(topicId) {\n        if (this.isTopicPublicKeyExist(topicId)) {\n            let item = this.sessionCryptoInfoMap.get(topicId);\n            if (item) {\n                return (0, utils_1.toHexString)(item.crypto.keyPair.publicKey);\n            }\n        }\n        return undefined;\n    }\n    getCurrentCachedTopicIdList() {\n        return Array.from(this.sessionCryptoInfoMap.keys());\n    }\n    disconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            yield this.connector.disconnect();\n            //clean cached topic\n            //如果是恢复连接，就不清理解密public key\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            if (!fromRestore) {\n                this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n            }\n        });\n    }\n    send(topic_1, msg_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, msg, needPublicKey = false, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL, useRaw = false) {\n            var _a, _b;\n            // make send msg payload\n            log.logDebug(`message send =====> ${msg}`);\n            if (!this.isTopicPublicKeyExist(topic)) {\n                // channel not ready\n                throw new Error('connection not finish');\n            }\n            let connectedDappPK = (_a = this.sessionCryptoInfoMap.get(topic)) === null || _a === void 0 ? void 0 : _a.dappPublicKey;\n            let cryptoObject = (_b = this.sessionCryptoInfoMap.get(topic)) === null || _b === void 0 ? void 0 : _b.crypto;\n            let messageObj = undefined;\n            if (useRaw) {\n                messageObj = {\n                    message: msg,\n                };\n            }\n            if (cryptoObject && connectedDappPK && !useRaw) {\n                let message = cryptoObject.encryptWallet(msg, connectedDappPK);\n                messageObj = {\n                    message: message,\n                };\n            }\n            if (messageObj) {\n                if (needPublicKey && cryptoObject) {\n                    messageObj.clientId = (0, utils_1.toHexString)(cryptoObject.keyPair.publicKey);\n                    // let privateKey = toHexString(cryptoObject.keyPair.secretKey)\n                    // log.logDebug(`message send use dapp publicKey =====> ${connectedDappPK}`)\n                    // log.logDebug(`message send use publicKey =====> ${messageObj.clientId}`)\n                    // log.logDebug(`message send use secretKey =====> ${privateKey}`)\n                }\n                this.refreshPackageId();\n                const payload = {\n                    id: this.packageId.toString(),\n                    method: commands_1.CONNECT_METHOD_PUBLISH,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    params: {\n                        message: {\n                            topic: topic,\n                            message: (0, safejson_1.safeJsonStringify)(messageObj),\n                            ttl: ttl\n                        }\n                    } // crypted\n                };\n                this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                    // ack\n                    if (rsp && rsp.error) {\n                        log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                    }\n                    else if (rsp && !rsp.error) {\n                        log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                    }\n                }));\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n                return this.packageId;\n            }\n        });\n    }\n    sendACK(msgId_1, success_1) {\n        return __awaiter(this, arguments, void 0, function* (msgId, success, reason = undefined) {\n            if (success === true) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    result: true\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n            else if (reason) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    error: {\n                        code: reason.code, //int\n                        message: reason.message\n                    }\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    // send receive\n    sendReceive(msgId, messageId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECEIVE,\n                params: {\n                    data: {\n                        messageId: messageId,\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendUnsubscribe(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO: make disconnect payload\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), {\n                id: this.packageId.toString(),\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_UNSUB,\n                params: {\n                    topic: topic\n                }\n            });\n            // remove topicId\n            this.sessionCryptoInfoMap.delete(topic);\n            this.syncCacheSessionInfo();\n        });\n    }\n    // send receive\n    // 1. fetch all \n    // 2. send back receive\n    // 3. check has more, if so, repeat from 1st step\n    sendFetchAndConsumeMessages(msgId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(msgId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic == topic) {\n                                let messageId = msg.messageId;\n                                yield this.connector.getMsgPayloadFromHistory(msg);\n                                // send receive command to relay server\n                                this.refreshPackageId();\n                                yield this.sendReceive(this.packageId.toString(), messageId, topic);\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_FETCHMSG,\n                params: {\n                    data: {\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendBatchFetchAndConsumeMessages(packageId, topicIdList) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(packageId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic) {\n                                let messageId = msg.messageId;\n                                yield this.connector.getMsgPayloadFromHistory(msg);\n                                // send receive command to relay server\n                                this.refreshPackageId(i);\n                                yield this.sendReceive(this.packageId.toString(), messageId, msg.topic);\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendBatchFetchAndConsumeMessages(this.packageId.toString(), topicIdList);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            log.reportLog('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: packageId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_BATCH_FETCHMSG,\n                params: {\n                    topics: topicIdList,\n                    withInternalData: true\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                yield this.connector.connect();\n            }), payload);\n        });\n    }\n    cleanCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.connectStorage.clearCache();\n        });\n    }\n    saveSessionContent(key, data) {\n        if (!data) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(data);\n        this.connectStorage.encryptStoreMsg(jsonData, storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n    }\n    getSessionContent(key) {\n        let jsonStr = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        if (jsonStr) {\n            let object = (0, safejson_1.safeJsonParse)(jsonStr);\n            return object;\n        }\n        return undefined;\n    }\n    // subscribe then fetch messages for each topics\n    subscribeTopics(topicIdList) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)(\"4. topicid list\", topicIdList);\n            log.reportLog(\"4. topicid list\");\n            this.refreshPackageId();\n            const timeF = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let finishCount = 0;\n                //3. send subscribe\n                for (let idx = 0; idx < topicIdList.length; ++idx) {\n                    let topicId = topicIdList[idx];\n                    this.refreshPackageId(idx);\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when subscribe');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // reject(error)\n                            finishCount += 1;\n                            if (finishCount == topicIdList.length) {\n                                resolve();\n                            }\n                        }\n                        this.refreshPackageId(idx);\n                        const timeF = new Date().getTime();\n                        (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n                        finishCount += 1;\n                        if (finishCount == topicIdList.length) {\n                            // 4. fetch messages\n                            log.logDebug(`5. send fetch msg: ${this.packageId}, ${topicId}`);\n                            yield this.sendBatchFetchAndConsumeMessages(this.packageId.toString(), topicIdList);\n                            resolve();\n                        }\n                    }));\n                    log.logDebug(`3. login callback then send subscribe: ${this.packageId}, ${topicId}`);\n                    log.reportLog('3. login callback then send subscribe');\n                    const timeTh = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---login callback->\", timeTh - this.timeLog);\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        return yield this.connector.connect();\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_SUB,\n                        params: {\n                            topic: topicId\n                        }\n                    });\n                }\n            }));\n        });\n    }\n}\nexports.WalletConnectionManager = WalletConnectionManager;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SessionCrypto = void 0;\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst utils_1 = require(\"../utils/utils\");\nclass SessionCrypto {\n    constructor(keyPair = undefined) {\n        this.nonceLength = 24;\n        this.sessionKeyPair = keyPair ? this.createKeypairFromString(keyPair) : this.createKeypair();\n    }\n    createKeypair() {\n        return tweetnacl_1.default.box.keyPair();\n    }\n    createKeypairFromString(keyPair) {\n        return {\n            publicKey: (0, utils_1.hexToByteArray)(keyPair.publicKey),\n            secretKey: (0, utils_1.hexToByteArray)(keyPair.secretKey),\n        };\n    }\n    createNonce() {\n        return tweetnacl_1.default.randomBytes(this.nonceLength);\n    }\n    get keyPair() {\n        return this.sessionKeyPair;\n    }\n    // dapp 加密:\n    // base64(hex（nonce+加密内容）)\n    encrypt(message, receiverPublicKey) {\n        const encodedMessage = new TextEncoder().encode(message);\n        const nonce = this.createNonce();\n        const encrypted = tweetnacl_1.default.box(encodedMessage, nonce, (0, utils_1.hexToByteArray)(receiverPublicKey), this.keyPair.secretKey);\n        let concatInfo = (0, utils_1.concatUint8Arrays)(nonce, encrypted);\n        var hexResult = (0, utils_1.toHexString)(concatInfo);\n        var encodedResult = new TextEncoder().encode(hexResult);\n        return (0, utils_1.base64encode)(encodedResult, false);\n    }\n    // 钱包加密内容\n    // 注意：没有中间hex的环节\n    // base64（nonce+加密内容)\n    encryptWallet(message, receiverPublicKey) {\n        const encodedMessage = new TextEncoder().encode(message);\n        const nonce = this.createNonce();\n        const encrypted = tweetnacl_1.default.box(encodedMessage, nonce, (0, utils_1.hexToByteArray)(receiverPublicKey), this.keyPair.secretKey);\n        let concatInfo = (0, utils_1.concatUint8Arrays)(nonce, encrypted);\n        return (0, utils_1.base64encode)(concatInfo, false);\n    }\n    // dapp 解密\n    // base64(split(nonce+加密内容))\n    decrypt(message, senderPublicKey) {\n        let base64Content = (0, utils_1.base64decode)(message, true);\n        let messageByteArray = base64Content.toUint8Array();\n        const [nonce, internalMessage] = (0, utils_1.splitToUint8Arrays)(messageByteArray, this.nonceLength);\n        const decrypted = tweetnacl_1.default.box.open(internalMessage, nonce, (0, utils_1.hexToByteArray)(senderPublicKey), this.keyPair.secretKey);\n        if (!decrypted) {\n            throw new Error(`Decryption error: \\n message: ${message.toString()} \\n sender pubkey: ${senderPublicKey.toString()} \\n keypair pubkey: ${(0, utils_1.toHexString)(this.keyPair.publicKey)} \\n keypair secretkey: ${(0, utils_1.toHexString)(this.keyPair.secretKey)}`);\n        }\n        return new TextDecoder().decode(decrypted);\n    }\n    // dapp 解密\n    // base64(hextoByte(split(nonce+加密内容)))\n    decryptWallet(message, senderPublicKey) {\n        let base64Content = (0, utils_1.base64decode)(message, true);\n        let messageByteArray = (0, utils_1.hexToByteArray)(base64Content.toString());\n        const [nonce, internalMessage] = (0, utils_1.splitToUint8Arrays)(messageByteArray, this.nonceLength);\n        const decrypted = tweetnacl_1.default.box.open(internalMessage, nonce, (0, utils_1.hexToByteArray)(senderPublicKey), this.keyPair.secretKey);\n        if (!decrypted) {\n            throw new Error(`Decryption error: \\n message: ${message.toString()} \\n sender pubkey: ${senderPublicKey.toString()} \\n keypair pubkey: ${(0, utils_1.toHexString)(this.keyPair.publicKey)} \\n keypair secretkey: ${(0, utils_1.toHexString)(this.keyPair.secretKey)}`);\n        }\n        return new TextDecoder().decode(decrypted);\n    }\n    stringifyKeypair() {\n        return {\n            publicKey: (0, utils_1.toHexString)(this.keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(this.keyPair.secretKey)\n        };\n    }\n}\nexports.SessionCrypto = SessionCrypto;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./connect\"), exports);\n__exportStar(require(\"./protocol\"), exports);\n__exportStar(require(\"./utils\"), exports);\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IEngine = exports.ISignClient = exports.ISignClientEvents = exports.IEngineEvents = void 0;\nconst eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\nclass IEngineEvents extends eventemitter3_1.default {\n    constructor() {\n        super();\n    }\n}\nexports.IEngineEvents = IEngineEvents;\nclass ISignClientEvents extends eventemitter3_1.default {\n    constructor() {\n        super();\n    }\n}\nexports.ISignClientEvents = ISignClientEvents;\nclass ISignClient {\n    constructor(data) {\n        this.data = data;\n    }\n}\nexports.ISignClient = ISignClient;\nclass IEngine {\n    constructor(client) {\n        this.client = client;\n    }\n}\nexports.IEngine = IEngine;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.creatOKXMiniAppWalletInfo = exports.creatOKXWalletInfo = exports.ISignClientEvents = exports.IEngine = exports.IEngineEvents = exports.ISignClient = exports.getBigIntRpcId = exports.formatJsonRpcRequest = exports.isJsonRpcError = exports.isJsonRpcResponse = exports.parseConnectionError = exports.isHttpUrl = exports.formatJsonRpcError = void 0;\nvar json_rpc_1 = require(\"./json-rpc\");\nObject.defineProperty(exports, \"formatJsonRpcError\", { enumerable: true, get: function () { return json_rpc_1.formatJsonRpcError; } });\nObject.defineProperty(exports, \"isHttpUrl\", { enumerable: true, get: function () { return json_rpc_1.isHttpUrl; } });\nObject.defineProperty(exports, \"parseConnectionError\", { enumerable: true, get: function () { return json_rpc_1.parseConnectionError; } });\nObject.defineProperty(exports, \"isJsonRpcResponse\", { enumerable: true, get: function () { return json_rpc_1.isJsonRpcResponse; } });\nObject.defineProperty(exports, \"isJsonRpcError\", { enumerable: true, get: function () { return json_rpc_1.isJsonRpcError; } });\nObject.defineProperty(exports, \"formatJsonRpcRequest\", { enumerable: true, get: function () { return json_rpc_1.formatJsonRpcRequest; } });\nObject.defineProperty(exports, \"getBigIntRpcId\", { enumerable: true, get: function () { return json_rpc_1.getBigIntRpcId; } });\nvar engine_1 = require(\"./engine\");\nObject.defineProperty(exports, \"ISignClient\", { enumerable: true, get: function () { return engine_1.ISignClient; } });\nObject.defineProperty(exports, \"IEngineEvents\", { enumerable: true, get: function () { return engine_1.IEngineEvents; } });\nObject.defineProperty(exports, \"IEngine\", { enumerable: true, get: function () { return engine_1.IEngine; } });\nObject.defineProperty(exports, \"ISignClientEvents\", { enumerable: true, get: function () { return engine_1.ISignClientEvents; } });\n__exportStar(require(\"./ton\"), exports);\nvar wallet_info_1 = require(\"./wallet-info\");\nObject.defineProperty(exports, \"creatOKXWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXWalletInfo; } });\nObject.defineProperty(exports, \"creatOKXMiniAppWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXMiniAppWalletInfo; } });\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isJsonRpcPayload = isJsonRpcPayload;\nexports.isJsonRpcRequest = isJsonRpcRequest;\nexports.isJsonRpcResponse = isJsonRpcResponse;\nexports.isJsonRpcResult = isJsonRpcResult;\nexports.isJsonRpcError = isJsonRpcError;\nexports.payloadId = payloadId;\nexports.getBigIntRpcId = getBigIntRpcId;\nexports.formatJsonRpcRequest = formatJsonRpcRequest;\nexports.formatJsonRpcResult = formatJsonRpcResult;\nexports.formatJsonRpcError = formatJsonRpcError;\nexports.isReservedErrorCode = isReservedErrorCode;\nexports.getError = getError;\nexports.getErrorByCode = getErrorByCode;\nexports.formatErrorMessage = formatErrorMessage;\nexports.isHttpUrl = isHttpUrl;\nexports.isWsUrl = isWsUrl;\nexports.parseConnectionError = parseConnectionError;\nfunction isJsonRpcPayload(payload) {\n    return (typeof payload === \"object\" &&\n        \"id\" in payload &&\n        \"jsonrpc\" in payload &&\n        payload.jsonrpc === \"2.0\");\n}\nfunction isJsonRpcRequest(payload) {\n    return isJsonRpcPayload(payload) && \"method\" in payload;\n}\nfunction isJsonRpcResponse(payload) {\n    return isJsonRpcPayload(payload) && (isJsonRpcResult(payload) || isJsonRpcError(payload));\n}\nfunction isJsonRpcResult(payload) {\n    return \"result\" in payload;\n}\nfunction isJsonRpcError(payload) {\n    return \"error\" in payload;\n}\nconst okx_connect_error_1 = require(\"../error/okx-connect.error\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nclass IncrementalRandomGenerator {\n    constructor(bits) {\n        this.i = 1;\n        const typedArray = bits === 8 ? new Uint8Array(1) : bits === 16 ? new Uint16Array(1) : new Uint32Array(1);\n        if (bits) {\n            this.initialValue = tweetnacl_1.default.randomBytes(bits / 8)[0];\n        }\n        else {\n            this.initialValue = 0;\n        }\n    }\n    getNextValue() {\n        return this.initialValue + this.i++;\n    }\n}\nconst uint8Generator = new IncrementalRandomGenerator(8);\nconst uint16Generator = new IncrementalRandomGenerator(16);\nfunction payloadId() {\n    const date = Date.now() * 1000;\n    const extra = uint8Generator.getNextValue();\n    return date + extra;\n}\nfunction getBigIntRpcId() {\n    const date = BigInt(Date.now()) * BigInt(1000000);\n    const extra = BigInt(uint16Generator.getNextValue());\n    return date + extra;\n}\nfunction formatJsonRpcRequest(method, params, id) {\n    return {\n        id: id || payloadId(),\n        jsonrpc: \"2.0\",\n        method,\n        params,\n    };\n}\nfunction formatJsonRpcResult(id, result) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        result,\n    };\n}\nfunction formatJsonRpcError(id, error, data) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        error: formatErrorMessage(error, data),\n    };\n}\nfunction isReservedErrorCode(code) {\n    return okx_connect_error_1.RESERVED_ERROR_CODES.includes(code);\n}\nfunction getError(type) {\n    if (!Object.keys(okx_connect_error_1.STANDARD_ERROR_MAP).includes(type)) {\n        return okx_connect_error_1.STANDARD_ERROR_MAP[okx_connect_error_1.DEFAULT_ERROR];\n    }\n    return okx_connect_error_1.STANDARD_ERROR_MAP[type];\n}\nfunction getErrorByCode(code) {\n    const match = Object.values(okx_connect_error_1.STANDARD_ERROR_MAP).find((e) => e.code === code);\n    if (!match) {\n        return okx_connect_error_1.STANDARD_ERROR_MAP[okx_connect_error_1.DEFAULT_ERROR];\n    }\n    return match;\n}\nfunction formatErrorMessage(error, data) {\n    if (typeof error === \"undefined\") {\n        return getError(okx_connect_error_1.INTERNAL_ERROR);\n    }\n    if (typeof error === \"string\") {\n        error = Object.assign(Object.assign({}, getError(okx_connect_error_1.SERVER_ERROR)), { message: error });\n    }\n    if (typeof data !== \"undefined\") {\n        error.data = data;\n    }\n    if (isReservedErrorCode(error.code)) {\n        error = getErrorByCode(error.code);\n    }\n    return error;\n}\nfunction getUrlProtocol(url) {\n    const matches = url.match(new RegExp(/^\\w+:/, \"gi\"));\n    if (!matches || !matches.length)\n        return;\n    return matches[0];\n}\nfunction matchRegexProtocol(url, regex) {\n    const protocol = getUrlProtocol(url);\n    if (typeof protocol === \"undefined\")\n        return false;\n    return new RegExp(regex).test(protocol);\n}\nfunction isHttpUrl(url) {\n    return matchRegexProtocol(url, \"^https?:\");\n}\nfunction isWsUrl(url) {\n    return matchRegexProtocol(url, \"^wss?:\");\n}\nfunction parseConnectionError(e, url, type) {\n    return e.message.includes(\"getaddrinfo ENOTFOUND\") || e.message.includes(\"connect ECONNREFUSED\")\n        ? new Error(`Unavailable ${type} RPC url at ${url}`)\n        : e;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_ITEM_ERROR_CODES = void 0;\nvar CONNECT_ITEM_ERROR_CODES;\n(function (CONNECT_ITEM_ERROR_CODES) {\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n})(CONNECT_ITEM_ERROR_CODES || (exports.CONNECT_ITEM_ERROR_CODES = CONNECT_ITEM_ERROR_CODES = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TONCHAIN = void 0;\nvar TONCHAIN;\n(function (TONCHAIN) {\n    TONCHAIN[\"MAINNET\"] = \"-239\";\n})(TONCHAIN || (exports.TONCHAIN = TONCHAIN = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_ITEM_ERROR_CODES = exports.TONCHAIN = void 0;\nvar connect_wallet_1 = require(\"./connect-wallet\");\nObject.defineProperty(exports, \"TONCHAIN\", { enumerable: true, get: function () { return connect_wallet_1.TONCHAIN; } });\nvar connect_event_1 = require(\"./connect-event\");\nObject.defineProperty(exports, \"CONNECT_ITEM_ERROR_CODES\", { enumerable: true, get: function () { return connect_event_1.CONNECT_ITEM_ERROR_CODES; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.creatOKXWalletInfo = creatOKXWalletInfo;\nexports.creatOKXMiniAppWalletInfo = creatOKXMiniAppWalletInfo;\nconst constants_1 = require(\"../constants\");\nfunction creatOKXWalletInfo() {\n    return {\n        \"appName\": \"okxAppWallet\",\n        \"name\": \"OKX Wallet\",\n        \"imageUrl\": \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\",\n        \"aboutUrl\": constants_1.downloadUrl,\n        \"universalLink\": constants_1.standardUniversalLink,\n        \"deepLink\": constants_1.standardDeeplink,\n        \"platforms\": [\"ios\", \"android\"]\n    };\n}\nfunction creatOKXMiniAppWalletInfo() {\n    return {\n        \"appName\": \"okxMiniApp\",\n        \"name\": \"OKX Mini Wallet\",\n        \"imageUrl\": \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\",\n        \"aboutUrl\": constants_1.downloadUrl,\n        \"universalLink\": `https://t.me/${constants_1.tgwalletName}/start`,\n        \"deepLink\": \"\",\n        \"platforms\": [\"ios\", \"android\", 'macos', 'windows']\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.tgwalletAppName = exports.tgwalletName = exports.tonConnectSdkVersion = exports.shortUniversalLink = exports.standardDeeplink = exports.downloadUrl = exports.standardUniversalLink = exports.okxDeeplink = void 0;\nexports.getTestTwaUrl = getTestTwaUrl;\nexports.getTestTgTwaUrl = getTestTgTwaUrl;\nexports.okxDeeplink = 'okx://web3';\nexports.standardUniversalLink = typeof window !== \"undefined\" && window.location.hostname.includes(\"okx.com\")\n    ? \"https://link.okx.com/download\"\n    : \"https://www.okx.com/download\";\nexports.downloadUrl = \"https://www.okx.com/download\";\n// export const standardUniversalLink = 'http://localhost:5173';\nexports.standardDeeplink = `${exports.okxDeeplink}/wallet/connect`;\nexports.shortUniversalLink = `https://www.okx.com/ul/connect`;\n// export const standardDeeplink = 'http://localhost:5173';\nexports.tonConnectSdkVersion = '1';\n// export const tgwalletName: string = \"TCTestqdqwdqwdqBot\"\nexports.tgwalletName = \"OKX_WALLET_BOT\";\nexports.tgwalletAppName = \"start\";\n// https://t.me/OKX_WALLET_BOT/start\nfunction getTestTwaUrl() {\n    return window.okxTesttwaUrl;\n}\nfunction getTestTgTwaUrl() {\n    return window.okxTestTgtwaUrl;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_CONNECT_ERROR_CODES = exports.OKXConnectError = void 0;\nvar okx_connect_error_1 = require(\"./okx-connect.error\");\nObject.defineProperty(exports, \"OKXConnectError\", { enumerable: true, get: function () { return okx_connect_error_1.OKXConnectError; } });\nObject.defineProperty(exports, \"OKX_CONNECT_ERROR_CODES\", { enumerable: true, get: function () { return okx_connect_error_1.OKX_CONNECT_ERROR_CODES; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEFAULT_ERROR = exports.STANDARD_ERROR_MAP = exports.SERVER_ERROR_CODE_RANGE = exports.RESERVED_ERROR_CODES = exports.SERVER_ERROR = exports.INTERNAL_ERROR = exports.INVALID_PARAMS = exports.METHOD_NOT_FOUND = exports.INVALID_REQUEST = exports.PARSE_ERROR = exports.OKX_CONNECT_ERROR_CODES = exports.OKXConnectError = void 0;\nclass OKXConnectError extends Error {\n    constructor(code, message) {\n        if (message == undefined) {\n            message = getDefaultMessageByCode(code);\n        }\n        super(message);\n        this.code = code;\n        this.message = `${OKXConnectError.prefix} ${message ? '\\n' + message : ''}`;\n        Object.setPrototypeOf(this, OKXConnectError.prototype);\n    }\n    toJSON() {\n        return {\n            message: this.message,\n            code: this.code\n        };\n    }\n}\nexports.OKXConnectError = OKXConnectError;\nOKXConnectError.prefix = '[OKX_CONNECT_SDK_ERROR]';\nfunction getDefaultMessageByCode(code) {\n    if (code == OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR) {\n        return \"unknown error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR) {\n        return \"bad request error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.ALREADY_CONNECTED_ERROR) {\n        return \"already connected error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR) {\n        return \"not connected error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.UNKNOWN_APP_ERROR) {\n        return \"unknown app error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n        return \"user rejects error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR_CAUSE_REGISTER) {\n        return \"wallet address are registering\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED) {\n        return \"method not supported\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.CONNECTION_ERROR) {\n        return \"connect error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED) {\n        return \"chain not supported\";\n    }\n    return \"unknown error\";\n}\nvar OKX_CONNECT_ERROR_CODES;\n(function (OKX_CONNECT_ERROR_CODES) {\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"BAD_REQUEST_ERROR\"] = 1] = \"BAD_REQUEST_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"ALREADY_CONNECTED_ERROR\"] = 11] = \"ALREADY_CONNECTED_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"NOT_CONNECTED_ERROR\"] = 12] = \"NOT_CONNECTED_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"UNKNOWN_APP_ERROR\"] = 100] = \"UNKNOWN_APP_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"USER_REJECTS_ERROR\"] = 300] = \"USER_REJECTS_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"USER_REJECTS_ERROR_CAUSE_REGISTER\"] = 301] = \"USER_REJECTS_ERROR_CAUSE_REGISTER\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"CHAIN_NOT_SUPPORTED\"] = 500] = \"CHAIN_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"WALLET_NOT_SUPPORTED\"] = 600] = \"WALLET_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"CONNECTION_ERROR\"] = 700] = \"CONNECTION_ERROR\";\n})(OKX_CONNECT_ERROR_CODES || (exports.OKX_CONNECT_ERROR_CODES = OKX_CONNECT_ERROR_CODES = {}));\nexports.PARSE_ERROR = \"PARSE_ERROR\";\nexports.INVALID_REQUEST = \"INVALID_REQUEST\";\nexports.METHOD_NOT_FOUND = \"METHOD_NOT_FOUND\";\nexports.INVALID_PARAMS = \"INVALID_PARAMS\";\nexports.INTERNAL_ERROR = \"INTERNAL_ERROR\";\nexports.SERVER_ERROR = \"SERVER_ERROR\";\nexports.RESERVED_ERROR_CODES = [-32700, -32600, -32601, -32602, -32603];\nexports.SERVER_ERROR_CODE_RANGE = [-32000, -32099];\nexports.STANDARD_ERROR_MAP = {\n    [exports.PARSE_ERROR]: { code: -32700, message: \"Parse error\" },\n    [exports.INVALID_REQUEST]: { code: -32600, message: \"Invalid Request\" },\n    [exports.METHOD_NOT_FOUND]: { code: -32601, message: \"Method not found\" },\n    [exports.INVALID_PARAMS]: { code: -32602, message: \"Invalid params\" },\n    [exports.INTERNAL_ERROR]: { code: -32603, message: \"Internal error\" },\n    [exports.SERVER_ERROR]: { code: -32000, message: \"Server error\" },\n};\nexports.DEFAULT_ERROR = exports.SERVER_ERROR;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.downloadUrl = exports.okxDeeplink = exports.tonConnectSdkVersion = exports.standardDeeplink = exports.standardUniversalLink = exports.NameSpaceKeyStarknet = exports.NameSpaceKeyTron = exports.NameSpaceKeyCosmos = exports.NameSpaceKeyAptos = exports.NameSpaceKeyBtc = exports.NameSpaceKeySui = exports.NameSpaceKeyTON = exports.NameSpaceKeySOL = exports.NameSpaceKeyEip155 = void 0;\n__exportStar(require(\"./error\"), exports);\nvar misc_1 = require(\"./misc\");\nObject.defineProperty(exports, \"NameSpaceKeyEip155\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyEip155; } });\nObject.defineProperty(exports, \"NameSpaceKeySOL\", { enumerable: true, get: function () { return misc_1.NameSpaceKeySOL; } });\nObject.defineProperty(exports, \"NameSpaceKeyTON\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyTON; } });\nObject.defineProperty(exports, \"NameSpaceKeySui\", { enumerable: true, get: function () { return misc_1.NameSpaceKeySui; } });\nObject.defineProperty(exports, \"NameSpaceKeyBtc\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyBtc; } });\nObject.defineProperty(exports, \"NameSpaceKeyAptos\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyAptos; } });\nObject.defineProperty(exports, \"NameSpaceKeyCosmos\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyCosmos; } });\nObject.defineProperty(exports, \"NameSpaceKeyTron\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyTron; } });\nObject.defineProperty(exports, \"NameSpaceKeyStarknet\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyStarknet; } });\nvar constants_1 = require(\"./constants\");\nObject.defineProperty(exports, \"standardUniversalLink\", { enumerable: true, get: function () { return constants_1.standardUniversalLink; } });\nObject.defineProperty(exports, \"standardDeeplink\", { enumerable: true, get: function () { return constants_1.standardDeeplink; } });\nObject.defineProperty(exports, \"tonConnectSdkVersion\", { enumerable: true, get: function () { return constants_1.tonConnectSdkVersion; } });\nObject.defineProperty(exports, \"okxDeeplink\", { enumerable: true, get: function () { return constants_1.okxDeeplink; } });\nObject.defineProperty(exports, \"downloadUrl\", { enumerable: true, get: function () { return constants_1.downloadUrl; } });\n__exportStar(require(\"./connect\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NameSpaceKeyStarknet = exports.NameSpaceKeyTron = exports.NameSpaceKeyCosmos = exports.NameSpaceKeyAptos = exports.NameSpaceKeyBtc = exports.NameSpaceKeySui = exports.NameSpaceKeyTON = exports.NameSpaceKeySOL = exports.NameSpaceKeyEip155 = void 0;\nexports.NameSpaceKeyEip155 = \"eip155\";\nexports.NameSpaceKeySOL = \"solana\";\nexports.NameSpaceKeyTON = \"ton\";\nexports.NameSpaceKeySui = \"sui\";\nexports.NameSpaceKeyBtc = \"btc\";\nexports.NameSpaceKeyAptos = \"aptos\";\nexports.NameSpaceKeyCosmos = \"cosmos\";\nexports.NameSpaceKeyTron = \"tron\";\nexports.NameSpaceKeyStarknet = \"starknet\";\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.callForSuccess = callForSuccess;\nexports.delay = delay;\n/**\n * Function to call ton api until we get response.\n * Because ton network is pretty unstable we need to make sure response is final.\n * @param {T} fn - function to call\n * @param {CallForSuccessOptions} [options] - optional configuration options\n */\nfunction callForSuccess(fn, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b;\n        const attempts = (_a = options === null || options === void 0 ? void 0 : options.attempts) !== null && _a !== void 0 ? _a : 3;\n        const delayMs = (_b = options === null || options === void 0 ? void 0 : options.delayMs) !== null && _b !== void 0 ? _b : 800;\n        if (typeof fn !== 'function') {\n            throw new Error(`Expected a function, got ${typeof fn}`);\n        }\n        let i = 0;\n        let lastError;\n        while (i < attempts) {\n            try {\n                return yield fn();\n            }\n            catch (err) {\n                lastError = err;\n                i++;\n                if (i < attempts) {\n                    yield delay(delayMs);\n                }\n            }\n        }\n        throw lastError;\n    });\n}\n/**\n * Delays the execution of code for a specified number of milliseconds.\n * @param {number} timeout - The number of milliseconds to delay the execution.\n * @param {DelayOptions} [options] - Optional configuration options for the delay.\n * @return {Promise<void>} - A promise that resolves after the specified delay, or rejects if the delay is aborted.\n */\nfunction delay(timeout, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            var _a, _b;\n            if ((_a = options === null || options === void 0 ? void 0 : options.signal) === null || _a === void 0 ? void 0 : _a.aborted) {\n                reject(new Error('Delay aborted'));\n                return;\n            }\n            const timeoutId = setTimeout(() => resolve(), timeout);\n            (_b = options === null || options === void 0 ? void 0 : options.signal) === null || _b === void 0 ? void 0 : _b.addEventListener('abort', () => {\n                clearTimeout(timeoutId);\n                reject(new Error('Delay aborted'));\n            });\n        });\n    });\n}\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkMetaData = exports.versionCompare = exports.isBrowser = exports.isOS = exports.isMobileUserAgent = exports.openDeeplinkWithFallback = exports.openLinkBlank = exports.openLink = exports.useShortLink = exports.toSafeBase64FromBase64 = exports.isValidObject = exports.isIos = exports.base64decode = exports.base64encode = exports.splitToUint8Arrays = exports.concatUint8Arrays = exports.toHexString = exports.hexToByteArray = exports.getOKXLink = exports.openOKXUniversalLink = exports.getAppWalletShortDeepLink = exports.encodeTWAConnectURLParams = exports.encodeConnectParams = exports.openOKXTMAWalletlinkWithFallback = exports.getTelegramWalletTWAUrl = exports.getAppWalletDeepLink = exports.encodeTelegramUrlParameters = exports.isTelegramUrl = exports.openOKXDeeplinkWithFallback = exports.openOKXDeeplink = exports.getUniversalLink = exports.safeJsonStringify = exports.safeJsonParse = exports.getDefaultReporter = exports.reportEvent = exports.reportLog = exports.logWarning = exports.logError = exports.logDebug = exports.callForSuccess = void 0;\nvar call_for_success_1 = require(\"./call-for-success\");\nObject.defineProperty(exports, \"callForSuccess\", { enumerable: true, get: function () { return call_for_success_1.callForSuccess; } });\nvar log_1 = require(\"./log\");\nObject.defineProperty(exports, \"logDebug\", { enumerable: true, get: function () { return log_1.logDebug; } });\nObject.defineProperty(exports, \"logError\", { enumerable: true, get: function () { return log_1.logError; } });\nObject.defineProperty(exports, \"logWarning\", { enumerable: true, get: function () { return log_1.logWarning; } });\nObject.defineProperty(exports, \"reportLog\", { enumerable: true, get: function () { return log_1.reportLog; } });\nObject.defineProperty(exports, \"reportEvent\", { enumerable: true, get: function () { return log_1.reportEvent; } });\nObject.defineProperty(exports, \"getDefaultReporter\", { enumerable: true, get: function () { return log_1.getDefaultReporter; } });\n__exportStar(require(\"./reportconstants\"), exports);\n__exportStar(require(\"./report\"), exports);\nvar safejson_1 = require(\"./safejson\");\nObject.defineProperty(exports, \"safeJsonParse\", { enumerable: true, get: function () { return safejson_1.safeJsonParse; } });\nObject.defineProperty(exports, \"safeJsonStringify\", { enumerable: true, get: function () { return safejson_1.safeJsonStringify; } });\nvar url_1 = require(\"./url\");\nObject.defineProperty(exports, \"getUniversalLink\", { enumerable: true, get: function () { return url_1.getUniversalLink; } });\nObject.defineProperty(exports, \"openOKXDeeplink\", { enumerable: true, get: function () { return url_1.openOKXDeeplink; } });\nObject.defineProperty(exports, \"openOKXDeeplinkWithFallback\", { enumerable: true, get: function () { return url_1.openOKXDeeplinkWithFallback; } });\nObject.defineProperty(exports, \"isTelegramUrl\", { enumerable: true, get: function () { return url_1.isTelegramUrl; } });\nObject.defineProperty(exports, \"encodeTelegramUrlParameters\", { enumerable: true, get: function () { return url_1.encodeTelegramUrlParameters; } });\nObject.defineProperty(exports, \"getAppWalletDeepLink\", { enumerable: true, get: function () { return url_1.getAppWalletDeepLink; } });\nObject.defineProperty(exports, \"getTelegramWalletTWAUrl\", { enumerable: true, get: function () { return url_1.getTelegramWalletTWAUrl; } });\nObject.defineProperty(exports, \"openOKXTMAWalletlinkWithFallback\", { enumerable: true, get: function () { return url_1.openOKXTMAWalletlinkWithFallback; } });\nObject.defineProperty(exports, \"encodeConnectParams\", { enumerable: true, get: function () { return url_1.encodeConnectParams; } });\nObject.defineProperty(exports, \"encodeTWAConnectURLParams\", { enumerable: true, get: function () { return url_1.encodeTWAConnectURLParams; } });\nObject.defineProperty(exports, \"getAppWalletShortDeepLink\", { enumerable: true, get: function () { return url_1.getAppWalletShortDeepLink; } });\nObject.defineProperty(exports, \"openOKXUniversalLink\", { enumerable: true, get: function () { return url_1.openOKXUniversalLink; } });\nObject.defineProperty(exports, \"getOKXLink\", { enumerable: true, get: function () { return url_1.getOKXLink; } });\nvar utils_1 = require(\"./utils\");\nObject.defineProperty(exports, \"hexToByteArray\", { enumerable: true, get: function () { return utils_1.hexToByteArray; } });\nObject.defineProperty(exports, \"toHexString\", { enumerable: true, get: function () { return utils_1.toHexString; } });\nObject.defineProperty(exports, \"concatUint8Arrays\", { enumerable: true, get: function () { return utils_1.concatUint8Arrays; } });\nObject.defineProperty(exports, \"splitToUint8Arrays\", { enumerable: true, get: function () { return utils_1.splitToUint8Arrays; } });\nObject.defineProperty(exports, \"base64encode\", { enumerable: true, get: function () { return utils_1.base64encode; } });\nObject.defineProperty(exports, \"base64decode\", { enumerable: true, get: function () { return utils_1.base64decode; } });\nObject.defineProperty(exports, \"isIos\", { enumerable: true, get: function () { return utils_1.isIos; } });\nObject.defineProperty(exports, \"isValidObject\", { enumerable: true, get: function () { return utils_1.isValidObject; } });\nObject.defineProperty(exports, \"toSafeBase64FromBase64\", { enumerable: true, get: function () { return utils_1.toSafeBase64FromBase64; } });\nObject.defineProperty(exports, \"useShortLink\", { enumerable: true, get: function () { return utils_1.useShortLink; } });\nvar web_api_1 = require(\"./web-api\");\nObject.defineProperty(exports, \"openLink\", { enumerable: true, get: function () { return web_api_1.openLink; } });\nObject.defineProperty(exports, \"openLinkBlank\", { enumerable: true, get: function () { return web_api_1.openLinkBlank; } });\nObject.defineProperty(exports, \"openDeeplinkWithFallback\", { enumerable: true, get: function () { return web_api_1.openDeeplinkWithFallback; } });\nObject.defineProperty(exports, \"isMobileUserAgent\", { enumerable: true, get: function () { return web_api_1.isMobileUserAgent; } });\nObject.defineProperty(exports, \"isOS\", { enumerable: true, get: function () { return web_api_1.isOS; } });\nObject.defineProperty(exports, \"isBrowser\", { enumerable: true, get: function () { return web_api_1.isBrowser; } });\nvar tma_api_1 = require(\"./tma-api\");\nObject.defineProperty(exports, \"versionCompare\", { enumerable: true, get: function () { return tma_api_1.versionCompare; } });\nvar request_1 = require(\"./request\");\nObject.defineProperty(exports, \"checkMetaData\", { enumerable: true, get: function () { return request_1.checkMetaData; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getDefaultReporter = getDefaultReporter;\nexports.logDebug = logDebug;\nexports.logError = logError;\nexports.logWarning = logWarning;\nexports.reportEvent = reportEvent;\nexports.reportLog = reportLog;\nconst debug = false;\nconst forceReport = false;\nconst report_1 = require(\"./report\");\nconst defaultReporter = new report_1.OKXReporter();\nfunction getDefaultReporter() {\n    return defaultReporter;\n}\nconst packageJson = require('../../package.json');\nconst version = packageJson.version;\nfunction logDebug(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.log(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction logError(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.error(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n            if (forceReport || !debug) {\n                let content = '';\n                content += [...args].reduce((result, item) => {\n                    if (typeof item == 'string') {\n                        result += ',' + item;\n                    }\n                    else if (typeof item == 'object') {\n                        result += JSON.stringify(item);\n                    }\n                });\n                defaultReporter.sendRecordContent(content, report_1.OKXReportType.LOG, '');\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction logWarning(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.warn(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction reportEvent(type, action, content) {\n    return __awaiter(this, void 0, void 0, function* () {\n        yield defaultReporter.sendRecordContent(content, type, action);\n    });\n}\nfunction reportLog(content_1) {\n    return __awaiter(this, arguments, void 0, function* (content, action = 'default') {\n        // await defaultReporter.sendRecordContent(content, OKXReportType.LOG, action)\n    });\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXReporter = exports.OKXReportSide = exports.OKXReportType = exports.versionStr = void 0;\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nconst log_1 = require(\"./log\");\nconst url_1 = require(\"./url\");\nconst utils_1 = require(\"../utils\");\nconst localforage_1 = __importDefault(require(\"localforage\"));\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nexports.versionStr = '1.6.1';\nconst reportApiList = [\n    'https://www.okx.com/dappstat/wallet-connect',\n    'https://www.okx.ac/dappstat/wallet-connect'\n];\nconst reportCacheKey = 'OKX_RP_CK';\nconst reportUUIDKey = 'OKX_RP_UUID_CK';\nconst MAX_LIMIT_REPORTCOUNT = 100;\nconst DEFAULT_HTTP_HEADERS = {\n    Accept: \"*/*\",\n    \"Content-Type\": \"text/plain\",\n};\nconst DEFAULT_HTTP_METHOD = \"POST\";\nconst DEFAULT_FETCH_OPTS = {\n    headers: DEFAULT_HTTP_HEADERS,\n    method: DEFAULT_HTTP_METHOD,\n};\nexports.OKXReportType = {\n    PAGE_IN: 'page_in',\n    PAGE_OUT: 'page_out',\n    CLICK: 'click',\n    LOG: 'log',\n};\nexports.OKXReportSide = {\n    DAPP: 'dapp',\n    WALLET: 'wallet',\n};\nclass IReporter {\n}\nconst fetchWithTimeout = (url, options, timeout = 5000) => {\n    const controller = new AbortController();\n    const signal = controller.signal;\n    const fetchPromise = (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, options), { signal }));\n    const timeoutPromise = new Promise((_, reject) => setTimeout(() => {\n        controller.abort();\n        reject(new Error('Request timed out'));\n    }, timeout));\n    return Promise.race([fetchPromise, timeoutPromise]);\n};\nconst fetchListWithTimeout = (urls_1, ...args_1) => __awaiter(void 0, [urls_1, ...args_1], void 0, function* (urls, options = {}, timeout = 5000) {\n    for (const url of urls) {\n        try {\n            const controller = new AbortController();\n            const signal = controller.signal;\n            const fetchPromise = (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, options), { signal }));\n            const timeoutPromise = new Promise((_, reject) => setTimeout(() => {\n                controller.abort();\n                reject(new Error('Request timed out'));\n            }, timeout));\n            const response = yield Promise.race([fetchPromise, timeoutPromise]);\n            if (response.ok) {\n                return response;\n            }\n            if (response.status == 502) {\n                console.error(`Fetch error status 502`, url);\n                return response;\n            }\n        }\n        catch (error) {\n            console.error(`Fetch error for ${url}:`, error);\n        }\n    }\n    console.error(`'All fetch attempts failed.'`);\n    throw new Error('All fetch attempts failed.');\n});\nclass OKXReporter {\n    constructor() {\n        this.currentSide = exports.OKXReportSide.DAPP;\n        this.currentVersion = exports.versionStr;\n        this.storage = localforage_1.default.createInstance({\n            name: \"OKXReporter\"\n        });\n        this.recordList = new Array();\n        this.currentUUID = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(16));\n    }\n    configVersionAndSide(version, side, appname) {\n        this.currentVersion = version;\n        this.currentSide = side;\n        this.appName = appname;\n    }\n    get recordCacheKey() {\n        return reportCacheKey + \"@\" + this.appName;\n    }\n    get reportPlatform() {\n        if ((0, utils_1.isMobileUserAgent)()) {\n            if ((0, utils_1.isIos)()) {\n                return 'iOS';\n            }\n            else {\n                return 'android';\n            }\n        }\n        else {\n            return 'pc';\n        }\n    }\n    beginReport() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.startErrorCatching();\n            let records = yield this.storage.getItem(this.recordCacheKey);\n            let uuid = yield this.storage.getItem(reportUUIDKey);\n            if (uuid) {\n                this.currentUUID = uuid;\n            }\n            else {\n                this.storage.setItem(reportUUIDKey, this.currentUUID);\n            }\n            if (records) {\n                this.recordList = records;\n                (0, log_1.logDebug)('resume records from cache length: ', this.recordList.length);\n                yield this.sendCachedRecords();\n            }\n        });\n    }\n    startErrorCatching() {\n        let window = (0, url_1.getWindow)();\n        if (window) {\n            (0, log_1.logDebug)('begin capture console error');\n            // window.onerror = (event: Event | string, source?: string, lineno?: number, colno?: number, error?: Error) => {\n            //     logDebug('capture error info:', error, source)\n            //     this.markRecord(error?.message+'/'+error?.name+'/'+error?.stack, OKXReportType.LOG, '', this.currentSide)\n            // }\n        }\n    }\n    cachedErrors() {\n        return this.recordList;\n    }\n    sendRecord(record) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    const body = JSON.stringify(record);\n                    (0, log_1.logDebug)('[REPORT] record: ', body);\n                    const res = yield fetchListWithTimeout(reportApiList, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body: body }));\n                    (0, log_1.logDebug)('[REPORT] get rsp:', res);\n                    if (res && res.status && res.status == 200) {\n                        this.recordList = this.recordList.filter((item) => {\n                            return item.timestamp != record.timestamp || item.content != record.content;\n                        });\n                        yield this.storage.setItem(this.recordCacheKey, this.recordList);\n                        resolve(true);\n                    }\n                    else {\n                        reject(false);\n                    }\n                }\n                catch (e) {\n                    (0, log_1.logDebug)('send record error:', e);\n                    resolve(true);\n                    // reject(e)\n                }\n            }));\n        });\n    }\n    sendRecordContent(content, type, action) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            let path = (_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.location.pathname;\n            let location = (_b = (0, url_1.getWindow)()) === null || _b === void 0 ? void 0 : _b.location.origin;\n            if (path && location) {\n                location = location + path;\n            }\n            let language = (_c = (0, url_1.getWindow)()) === null || _c === void 0 ? void 0 : _c.navigator.language;\n            let ua = (_d = (0, url_1.getWindow)()) === null || _d === void 0 ? void 0 : _d.navigator.userAgent;\n            let platform = this.reportPlatform;\n            let reportItem = {\n                uuid: this.currentUUID,\n                version: this.currentVersion,\n                content: content,\n                action: action,\n                side: this.currentSide,\n                timestamp: new Date().getTime(),\n                url: location,\n                lang: language,\n                type: type,\n                platform: platform,\n                \"user-agent\": ua\n            };\n            yield this.markRecordItem(reportItem);\n            yield this.sendRecord(reportItem);\n        });\n    }\n    sendCachedRecords() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let sendList = this.recordList.map(record => this.sendRecord(record));\n                (0, log_1.logDebug)('[REPORT] submit & clean recorded caches begin @', new Date().toUTCString());\n                Promise.allSettled(sendList).then((results) => {\n                    (0, log_1.logDebug)('[REPORT] submit & clean recorded caches ends @', new Date().toUTCString());\n                    let keepIndex = [];\n                    results.forEach((result, index) => {\n                        if (result.status == \"rejected\") {\n                            keepIndex.push(index);\n                        }\n                    });\n                    this.recordList = this.recordList.filter((_, index) => !keepIndex.includes(index));\n                    this.storage.setItem(this.recordCacheKey, this.recordList).then(function (value) {\n                        resolve();\n                    }).catch(function (err) {\n                        reject(err);\n                    });\n                });\n            }));\n        });\n    }\n    markRecordItem(item) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.recordList.push(item);\n            if (this.recordList.length > MAX_LIMIT_REPORTCOUNT) {\n                let offset = this.recordList.length - MAX_LIMIT_REPORTCOUNT;\n                this.recordList.splice(0, offset);\n            }\n            return new Promise((resolve, reject) => {\n                this.storage.setItem(this.recordCacheKey, this.recordList).then(function (value) {\n                    resolve(item);\n                }).catch(function (err) {\n                    reject(err);\n                });\n            });\n        });\n    }\n    markRecord(content, type, action, side) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            let path = (_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.location.pathname;\n            let location = (_b = (0, url_1.getWindow)()) === null || _b === void 0 ? void 0 : _b.location.origin;\n            if (path && location) {\n                location = location + path;\n            }\n            let language = (_c = (0, url_1.getWindow)()) === null || _c === void 0 ? void 0 : _c.navigator.language;\n            let platform = this.reportPlatform;\n            let ua = (_d = (0, url_1.getWindow)()) === null || _d === void 0 ? void 0 : _d.navigator.userAgent;\n            let reportItem = {\n                uuid: this.currentUUID,\n                version: this.currentVersion,\n                content: content,\n                action: action,\n                side: side,\n                timestamp: new Date().getTime(),\n                url: location,\n                lang: language,\n                type: type,\n                platform: platform,\n                \"user-agent\": ua\n            };\n            return yield this.markRecordItem(reportItem);\n        });\n    }\n}\nexports.OKXReporter = OKXReporter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Report_WalletType_Key = exports.Report_Proceed_QRCode_Click = exports.Report_ChooseType_Download_Click = exports.Report_ChooseType_ConnectWallet_Click = exports.Report_Proceed_Retry_Click = exports.Report_ChooseType_ConnectWallet_View = exports.Report_Loading_ConnectWallet_View = exports.Report_Proceed_QRCode_View = exports.Report_Proceed_Proceed_View = void 0;\nexports.Report_Proceed_Proceed_View = \"OKXConnectSDK_Proceed_Proceed_View\";\nexports.Report_Proceed_QRCode_View = \"OKXConnectSDK_Proceed_QRCode_View\";\nexports.Report_Loading_ConnectWallet_View = \"OKXConnectSDK_Loading_ConnectWallet_View\";\nexports.Report_ChooseType_ConnectWallet_View = \"OKXConnectSDK_ChooseType_ConnectWallet_View\";\nexports.Report_Proceed_Retry_Click = \"OKXConnectSDK_Proceed_Retry_Click\";\nexports.Report_ChooseType_ConnectWallet_Click = \"OKXConnectSDK_ChooseType_ConnectWallet_Click\";\nexports.Report_ChooseType_Download_Click = \"OKXConnectSDK_ChooseType_Download_Click\";\nexports.Report_Proceed_QRCode_Click = \"OKXConnectSDK_Proceed_QRCode_Click\";\nexports.Report_WalletType_Key = 'wallet_type';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkMetaData = checkMetaData;\nconst protocol_1 = require(\"../protocol\");\nfunction checkMetaData(dappMetaData) {\n    if (!dappMetaData) {\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"You have to specify a `dappMetaData`in the options.\");\n    }\n    if (!dappMetaData.name) {\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"dappName is required\");\n    }\n    if (!dappMetaData.icon) {\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"icon is required\");\n    }\n    return true;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.safeJsonParse = safeJsonParse;\nexports.safeJsonStringify = safeJsonStringify;\nconst log_1 = require(\"./log\");\nconst JSONStringify = (data) => JSON.stringify(data, (_, value) => (typeof value === \"bigint\" ? value.toString() + \"n\" : value));\n/*\n  Function to parse JSON.\n  If JSON has values in our custom format BigInt (strings with \"n\" character at the end), we just parse them to BigInt values.\n  If JSON has big number values, but not in our custom format, we copy it, and in a copy we convert those values to our custom format,\n  then parse them to BigInt values.\n  Other values (not big numbers and not our custom format BigInt values) are not affected and parsed as native JSON.parse() would parse them.\n*/\nconst JSONParse = (json) => {\n    /*\n      Big numbers are found and marked using Regex with this condition:\n      Number's length is bigger than 16 || Number's length is 16 and any numerical digit of the number is greater than that of the Number.MAX_SAFE_INTEGER\n      Additionally, it skips values that are strings (between double quotes).\n      */\n    // prettier-ignore\n    // eslint-disable-next-line no-useless-escape\n    const numbersBiggerThanMaxInt = /:(\\b\\d{17,}|\\b(?:[9](?:[1-9]07199254740991|0[1-9]7199254740991|00[8-9]199254740991|007[2-9]99254740991|007199[3-9]54740991|0071992[6-9]4740991|00719925[5-9]740991|007199254[8-9]40991|0071992547[5-9]0991|00719925474[1-9]991|00719925474099[2-9])))(?=[,\\}\\]]|$)/g;\n    const serializedData = json.replace(numbersBiggerThanMaxInt, (match, group) => `:\"${group}n\"`);\n    try {\n        return JSON.parse(serializedData, (_, value) => {\n            const isCustomFormatBigInt = typeof value === \"string\" && value.match(/^\\d+n$/);\n            if (isCustomFormatBigInt)\n                return BigInt(value.substring(0, value.length - 1));\n            return value;\n        });\n    }\n    catch (e) {\n        return JSON.parse(json);\n    }\n};\nfunction safeJsonParse(value) {\n    if (typeof value !== \"string\") {\n        (0, log_1.logDebug)(value);\n        throw new Error(`Cannot safe json parse value of type ${typeof value}`);\n    }\n    try {\n        return JSONParse(value);\n    }\n    catch (e) {\n        // eslint-disable-next-line no-console\n        console.error(\"safeJsonParse error:\", e);\n        return value;\n    }\n}\nfunction safeJsonStringify(value) {\n    return typeof value === \"string\" ? value : JSONStringify(value) || \"\";\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.okxfromString = okxfromString;\nexports.okxtoString = okxtoString;\nexports.alloc = alloc;\nexports.allocUnsafe = allocUnsafe;\nconst basics_1 = require(\"multiformats/basics\");\nconst log_1 = require(\"../utils/log\");\nfunction okxfromString(string, encoding = 'utf8') {\n    const base = BASES[encoding];\n    (0, log_1.logDebug)(\"okxfromstring ====> \");\n    if (!base) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    return base.decoder.decode(`${base.prefix}${string}`);\n}\nfunction okxtoString(array, encoding = 'utf8') {\n    const base = BASES[encoding];\n    (0, log_1.logDebug)(\"okxtoString ====> \");\n    if (!base) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    return base.encoder.encode(array).substring(1);\n}\nfunction alloc(size = 0) {\n    return new Uint8Array(size);\n}\nfunction allocUnsafe(size = 0) {\n    return new Uint8Array(size);\n}\nfunction createCodec(name, prefix, encode, decode) {\n    return {\n        name,\n        prefix,\n        encoder: {\n            name,\n            prefix,\n            encode\n        },\n        decoder: { decode }\n    };\n}\nconst string = createCodec('utf8', 'u', buf => {\n    const decoder = new TextDecoder('utf8');\n    return 'u' + decoder.decode(buf);\n}, str => {\n    const encoder = new TextEncoder();\n    return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', buf => {\n    let result = 'a';\n    for (let i = 0; i < buf.length; i++) {\n        let bufNum = buf[i];\n        if (bufNum && String.fromCharCode(bufNum)) {\n            result += String.fromCharCode(bufNum);\n        }\n    }\n    return result;\n}, str => {\n    str = str.substring(1);\n    const buf = allocUnsafe(str.length);\n    for (let i = 0; i < str.length; i++) {\n        buf[i] = str.charCodeAt(i);\n    }\n    return buf;\n});\nconst BASES = Object.assign({ utf8: string, 'utf-8': string, hex: basics_1.bases.base16, latin1: ascii, ascii: ascii, binary: ascii }, basics_1.bases);\n","\"use strict\";\nvar _a, _b, _c, _d, _e, _f, _g;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isTmaPlatform = isTmaPlatform;\nexports.isInTMA = isInTMA;\nexports.isInTelegramBrowser = isInTelegramBrowser;\nexports.sendExpand = sendExpand;\nexports.sendOpenTelegramLink = sendOpenTelegramLink;\nexports.versionCompare = versionCompare;\nconst url_1 = require(\"./url\");\nconst log_1 = require(\"./log\");\nconst protocol_1 = require(\"../protocol\");\nconst web_api_1 = require(\"./web-api\");\nlet initParams = {};\ntry {\n    let locationHash = location.hash.toString();\n    initParams = urlParseHashParams(locationHash);\n}\ncatch (e) { }\nlet tmaPlatform = 'unknown';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppPlatform) {\n    tmaPlatform = (_a = initParams.tgWebAppPlatform) !== null && _a !== void 0 ? _a : 'unknown';\n}\nif (tmaPlatform === 'unknown') {\n    const window = (0, url_1.getWindow)();\n    tmaPlatform = (_d = (_c = (_b = window === null || window === void 0 ? void 0 : window.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) === null || _c === void 0 ? void 0 : _c.platform) !== null && _d !== void 0 ? _d : 'unknown';\n}\nlet webAppVersion = '6.0';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppVersion) {\n    webAppVersion = initParams.tgWebAppVersion;\n}\nif (!webAppVersion) {\n    const window = (0, url_1.getWindow)();\n    webAppVersion = (_g = (_f = (_e = window === null || window === void 0 ? void 0 : window.Telegram) === null || _e === void 0 ? void 0 : _e.WebApp) === null || _f === void 0 ? void 0 : _f.version) !== null && _g !== void 0 ? _g : '6.0';\n}\n/**\n * Returns true if the app is running in TMA on the specified platform.\n * @param platforms\n */\nfunction isTmaPlatform(...platforms) {\n    return platforms.includes(tmaPlatform);\n}\n/**\n * Returns true if the app is running in TMA.\n */\nfunction isInTMA() {\n    var _a;\n    return tmaPlatform !== 'unknown' || !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n}\n/**\n * Returns true if the app is running in the Telegram browser.\n */\nfunction isInTelegramBrowser() {\n    var _a;\n    const isTelegramWebview = !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebview);\n    return (isInTMA() || isTelegramWebview) && tmaPlatform === 'unknown';\n}\n/**\n * Expand the app window.\n */\nfunction sendExpand() {\n    postEvent('web_app_expand', {});\n}\n/**\n * Opens link in TMA or in new tab and returns a function that closes the tab.\n * @param link The link to open.\n * @param fallback The function to call if the link can't be opened in TMA.\n */\nfunction sendOpenTelegramLink(link, fallback) {\n    const url = new URL(link);\n    if (url.protocol !== 'http:' && url.protocol !== 'https:') {\n        if (fallback) {\n            return fallback();\n        }\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Url protocol is not supported: ${url}`);\n    }\n    if (url.hostname !== 't.me') {\n        if (fallback) {\n            return fallback();\n        }\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Url host is not supported: ${url}`);\n    }\n    const pathFull = url.pathname + url.search;\n    if (isIframe() || versionAtLeast('6.1')) {\n        postEvent('web_app_open_tg_link', { path_full: pathFull });\n    }\n    else {\n        (0, web_api_1.openLinkBlank)('https://t.me' + pathFull);\n    }\n}\nfunction isIframe() {\n    try {\n        const window = (0, url_1.getWindow)();\n        if (!window) {\n            return false;\n        }\n        return window.parent != null && window !== window.parent;\n    }\n    catch (e) {\n        return false;\n    }\n}\nfunction postEvent(eventType, eventData) {\n    try {\n        const window = (0, url_1.getWindow)();\n        if (!window) {\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Can't post event to parent window: window is not defined`);\n        }\n        if (window.TelegramWebviewProxy !== undefined) {\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.TelegramWebviewProxy.postEvent(eventType, JSON.stringify(eventData));\n        }\n        else if (window.external && 'notify' in window.external) {\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.external.notify(JSON.stringify({ eventType: eventType, eventData: eventData }));\n        }\n        else if (isIframe()) {\n            const trustedTarget = '*';\n            const message = JSON.stringify({ eventType: eventType, eventData: eventData });\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.parent.postMessage(message, trustedTarget);\n        }\n        else {\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Can't post event to TMA`);\n        }\n    }\n    catch (e) {\n        (0, log_1.logError)(`Can't post event to parent window: ${e}`);\n    }\n}\nfunction urlParseHashParams(locationHash) {\n    locationHash = locationHash.replace(/^#/, '');\n    let params = {};\n    if (!locationHash.length) {\n        return params;\n    }\n    if (locationHash.indexOf('=') < 0 && locationHash.indexOf('?') < 0) {\n        params._path = urlSafeDecode(locationHash);\n        return params;\n    }\n    let qIndex = locationHash.indexOf('?');\n    if (qIndex >= 0) {\n        let pathParam = locationHash.substr(0, qIndex);\n        params._path = urlSafeDecode(pathParam);\n        locationHash = locationHash.substr(qIndex + 1);\n    }\n    let query_params = urlParseQueryString(locationHash);\n    for (let k in query_params) {\n        params[k] = query_params[k];\n    }\n    return params;\n}\nfunction urlSafeDecode(urlencoded) {\n    try {\n        urlencoded = urlencoded.replace(/\\+/g, '%20');\n        return decodeURIComponent(urlencoded);\n    }\n    catch (e) {\n        return urlencoded;\n    }\n}\nfunction urlParseQueryString(queryString) {\n    let params = {};\n    if (!queryString.length) {\n        return params;\n    }\n    let queryStringParams = queryString.split('&');\n    let i, param, paramName, paramValue;\n    for (i = 0; i < queryStringParams.length; i++) {\n        param = queryStringParams[i].split('=');\n        paramName = urlSafeDecode(param[0]);\n        paramValue = param[1] == null ? null : urlSafeDecode(param[1]);\n        params[paramName] = paramValue;\n    }\n    return params;\n}\nfunction versionCompare(v1, v2) {\n    if (typeof v1 !== 'string')\n        v1 = '';\n    if (typeof v2 !== 'string')\n        v2 = '';\n    let v1List = v1.replace(/^\\s+|\\s+$/g, '').split('.');\n    let v2List = v2.replace(/^\\s+|\\s+$/g, '').split('.');\n    let a, i, p1, p2;\n    a = Math.max(v1List.length, v2List.length);\n    for (i = 0; i < a; i++) {\n        p1 = parseInt(v1List[i]) || 0;\n        p2 = parseInt(v2List[i]) || 0;\n        if (p1 === p2)\n            continue;\n        if (p1 > p2)\n            return 1;\n        return -1;\n    }\n    return 0;\n}\nfunction versionAtLeast(ver) {\n    return versionCompare(webAppVersion, ver) >= 0;\n}\n","\"use strict\";\nvar _a, _b, _c, _d;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.removeUrlLastSlash = removeUrlLastSlash;\nexports.addPathToUrl = addPathToUrl;\nexports.getUniversalLink = getUniversalLink;\nexports.openOKXDeeplink = openOKXDeeplink;\nexports.openOKXUniversalLink = openOKXUniversalLink;\nexports.openOKXDeeplinkWithFallback = openOKXDeeplinkWithFallback;\nexports.getWindow = getWindow;\nexports.isTelegramUrl = isTelegramUrl;\nexports.encodeTelegramUrlParameters = encodeTelegramUrlParameters;\nexports.encodeConnectParams = encodeConnectParams;\nexports.encodeTWAConnectURLParams = encodeTWAConnectURLParams;\nexports.getAppWalletDeepLink = getAppWalletDeepLink;\nexports.getAppWalletShortDeepLink = getAppWalletShortDeepLink;\nexports.getTelegramWalletTWAUrl = getTelegramWalletTWAUrl;\nexports.openOKXTMAWalletlinkWithFallback = openOKXTMAWalletlinkWithFallback;\nexports.isInTMA = isInTMA;\nexports.isInTelegramBrowser = isInTelegramBrowser;\nexports.getOKXLink = getOKXLink;\nconst protocol_1 = require(\"../protocol\");\nconst log_1 = require(\"./log\");\nconst constants_1 = require(\"../protocol/constants\");\nconst utils_1 = require(\"./utils\");\nconst tma_api_1 = require(\"./tma-api\");\nfunction removeUrlLastSlash(url) {\n    if (url.slice(-1) === '/') {\n        return url.slice(0, -1);\n    }\n    return url;\n}\nfunction addPathToUrl(url, path) {\n    return removeUrlLastSlash(url) + '/' + path;\n}\nfunction getUniversalLink(deeplinkUrl, useStandardUniversalLink = false) {\n    console.log(\"getUniversalLink deeplinkUrl:\", deeplinkUrl, \", useStandardUniversalLink:\", useStandardUniversalLink);\n    const replaceStrWithParam = `${protocol_1.standardDeeplink}?param=`;\n    if (!useStandardUniversalLink && deeplinkUrl.startsWith(replaceStrWithParam)) {\n        const cleanUrl = deeplinkUrl.replace(replaceStrWithParam, '');\n        (0, log_1.logDebug)(\"getUniversalLink cleanUrl:\", cleanUrl);\n        const deeplinkEncodeUrl = encodeURIComponent(cleanUrl);\n        (0, log_1.logDebug)(\"getUniversalLink standardUniversalLink:\", protocol_1.standardUniversalLink);\n        (0, log_1.logDebug)(\"getUniversalLink `${shortUniversalLink}?param=${deeplinkEncodeUrl}`:\", `${constants_1.shortUniversalLink}?param=${deeplinkEncodeUrl}`);\n        return `${constants_1.shortUniversalLink}?param=${deeplinkEncodeUrl}`;\n    }\n    else if (!useStandardUniversalLink && deeplinkUrl == protocol_1.standardDeeplink) {\n        (0, log_1.logDebug)(\"getUniversalLink shortUniversalLink:\", constants_1.shortUniversalLink);\n        return constants_1.shortUniversalLink;\n    }\n    else {\n        const deeplinkEncodeUrl = encodeURIComponent(deeplinkUrl);\n        console.log(\"getUniversalLink standardUniversalLink:\", protocol_1.standardUniversalLink);\n        return `${protocol_1.standardUniversalLink}?deeplink=${deeplinkEncodeUrl}`;\n    }\n}\nfunction openOKXDeeplink(deeplinkUrl) {\n    var _a;\n    const fullUrl = getUniversalLink(deeplinkUrl);\n    const isTelegram = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n    console.log(\"openOKXDeeplink fullUrl:\", fullUrl);\n    if (!(0, utils_1.isIos)()) {\n        let newWindow = null;\n        if (isTelegram) {\n            newWindow = window.open(deeplinkUrl, '_blank');\n        }\n        else {\n            window.location.href = deeplinkUrl;\n        }\n    }\n    else {\n        openOKXUniversalLink(fullUrl);\n    }\n}\nfunction openOKXUniversalLink(fullUrl) {\n    if (!(0, utils_1.isIos)()) {\n        // if (isTelegram) {\n        window.open(fullUrl, '_blank');\n        // } else {\n        //     window.location.href = fullUrl;\n        // }\n    }\n    else {\n        if (isInTMA()) {\n            window.open(fullUrl, '_blank');\n        }\n        else {\n            console.log(\"windowOpen[before]: \", Date.now());\n            if (window === null || window === void 0 ? void 0 : window.okxLogDebug) {\n                window.open(fullUrl, '_blank');\n            }\n            else {\n                window.open(fullUrl, '_self');\n            }\n            console.log(\"windowOpen[after]: \", Date.now());\n        }\n    }\n}\nfunction openOKXDeeplinkWithFallback(deeplinkUrl) {\n    var _a;\n    const fullUrl = getUniversalLink(deeplinkUrl);\n    const isTelegram = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n    console.log(\"openOKXDeeplinkWithFallback fullUrl:\", fullUrl);\n    let deepLinkOpened = false;\n    const timeoutDuration = 3000; // 1.5秒的等待时间\n    const downloadUrl = protocol_1.standardUniversalLink;\n    console.log(\"openOKXDeeplinkWithFallback standardUniversalLink:\", protocol_1.standardUniversalLink);\n    if (!(0, utils_1.isIos)()) {\n        let newWindow = null;\n        var fallbackToDownloadPage = () => {\n            if (!deepLinkOpened) {\n                if (newWindow) {\n                    newWindow.open(fullUrl, '_self');\n                }\n                else {\n                    window.open(fullUrl, '_blank');\n                }\n            }\n        };\n        if (isTelegram) {\n            newWindow = window.open(deeplinkUrl, '_blank');\n        }\n        else {\n            window.location.href = deeplinkUrl;\n        }\n        setTimeout(fallbackToDownloadPage, timeoutDuration);\n        window.addEventListener('blur', () => {\n            deepLinkOpened = true;\n        }, { once: true });\n        document.addEventListener('visibilitychange', () => {\n            if (document.visibilityState === 'hidden') {\n                deepLinkOpened = true;\n            }\n        });\n    }\n    else {\n        if (isTelegram) {\n            window.open(fullUrl, '_blank');\n        }\n        else {\n            console.log(\"windowOpen[before]: \", Date.now());\n            if (window === null || window === void 0 ? void 0 : window.okxLogDebug) {\n                window.open(fullUrl, '_blank');\n            }\n            else {\n                window.open(fullUrl, '_self');\n            }\n            console.log(\"windowOpen[after]: \", Date.now());\n        }\n    }\n}\nfunction getWindow() {\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    return undefined;\n}\nfunction isTelegramUrl(link) {\n    if (!link) {\n        return false;\n    }\n    const url = new URL(link);\n    return url.protocol === 'tg:' || url.hostname === 't.me';\n}\nfunction encodeTelegramUrlParameters(parameters) {\n    let encodedParameters = parameters;\n    encodedParameters = encodedParameters.replace(/\\./g, '%2E');\n    encodedParameters = encodedParameters.replace(/-/g, '%2D');\n    encodedParameters = encodedParameters.replace(/_/g, '%5F');\n    encodedParameters = encodedParameters.replace(/&/g, '-');\n    encodedParameters = encodedParameters.replace(/=/g, '__');\n    encodedParameters = encodedParameters.replace(/%/g, '--');\n    return encodedParameters;\n}\nfunction encodeConnectParams(connectRequest) {\n    const connectRequestStr = JSON.stringify(connectRequest);\n    (0, log_1.logDebug)(\"url encodeConnectParams connectRequestStr \", connectRequestStr);\n    const utf8Array = new TextEncoder().encode(connectRequestStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    // .replace(/\\+/g, '-')\n    // .replace(/\\//g, '_')\n    // .replace(/=+$/, ''); //Compatible with older versions of iOS. Cannot be added directly  (Base64 URL Safe)\n    (0, log_1.logDebug)(\"url encodeConnectParams base64Encoded \", base64Encoded);\n    return base64Encoded;\n}\nfunction encodeTWAConnectURLParams(connectRequest) {\n    const connectRequestStr = JSON.stringify({ topic: connectRequest.topic, clientId: connectRequest.clientId });\n    (0, log_1.logDebug)(\"url encodeConnectParams connectRequestStr\", connectRequestStr);\n    const utf8Array = new TextEncoder().encode(connectRequestStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    return base64Encoded;\n}\nfunction getAppWalletDeepLink(connectParam) {\n    return `${protocol_1.standardDeeplink}?param=${connectParam}`;\n}\nfunction getAppWalletShortDeepLink(topic, clientId) {\n    return `${constants_1.shortUniversalLink}?topic=${topic}${(0, utils_1.getLastSixMd5Hash)(clientId)}`;\n}\n//  make telegram okx wallet TWA url\nfunction getTelegramWalletTWAUrl(connectParam, redirectStr) {\n    let base64Content = { okxconnect: \"\", redirect: \"\", extraparams: \"\" };\n    if (connectParam) {\n        base64Content.okxconnect = connectParam;\n    }\n    if (redirectStr) {\n        base64Content.redirect = redirectStr;\n    }\n    let base64ContentStr = JSON.stringify(base64Content);\n    const utf8Array = new TextEncoder().encode(base64ContentStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    const urlSafeBase64 = (0, utils_1.toSafeBase64FromBase64)(base64Encoded);\n    (0, log_1.logDebug)('[TWA] open link:', base64Content, base64Encoded);\n    if (connectParam || redirectStr) {\n        if (!isInTMA()) {\n            // return `http://localhost:5173?tgWebAppStartParam=${urlSafeBase64}`\n            if ((0, constants_1.getTestTwaUrl)()) {\n                return `${(0, constants_1.getTestTwaUrl)()}?tgWebAppStartParam=${urlSafeBase64}`;\n            }\n            else {\n                return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}&startapp=${urlSafeBase64}`;\n            }\n        }\n        else {\n            if ((0, constants_1.getTestTgTwaUrl)()) {\n                return `${(0, constants_1.getTestTgTwaUrl)()}?startapp=${urlSafeBase64}`;\n            }\n            else {\n                return `https://t.me/${constants_1.tgwalletName}/start?startapp=${urlSafeBase64}`;\n            }\n        }\n    }\n    if (!isInTMA()) {\n        // return \"http://localhost:5173\"\n        if ((0, constants_1.getTestTwaUrl)()) {\n            return `${(0, constants_1.getTestTwaUrl)()}`;\n        }\n        else {\n            return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}`;\n        }\n    }\n    else {\n        if ((0, constants_1.getTestTgTwaUrl)()) {\n            return `${(0, constants_1.getTestTgTwaUrl)()}`;\n        }\n        else {\n            return `https://t.me/${constants_1.tgwalletName}/start`;\n        }\n    }\n}\n//  open TWA url in telegram\nfunction openOKXTMAWalletlinkWithFallback(twaDeepLink) {\n    var _a, _b, _c, _d, _e;\n    (0, log_1.logDebug)('[TWA] open link:', twaDeepLink, \"isInTMA ==> \", isInTMA());\n    if (!isInTMA()) {\n        if ((0, constants_1.getTestTwaUrl)()) {\n            window.open(twaDeepLink, '_blank');\n        }\n        else {\n            window.open(twaDeepLink, '_self');\n        }\n    }\n    else {\n        if ((_b = (_a = getWindow()) === null || _a === void 0 ? void 0 : _a.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) {\n            (_e = (_d = (_c = getWindow()) === null || _c === void 0 ? void 0 : _c.Telegram) === null || _d === void 0 ? void 0 : _d.WebApp) === null || _e === void 0 ? void 0 : _e.openTelegramLink(twaDeepLink);\n        }\n        else {\n            (0, tma_api_1.sendOpenTelegramLink)(twaDeepLink);\n        }\n    }\n}\n/**\n * Returns true if the app is running in TMA.\n */\nfunction urlSafeDecode(urlencoded) {\n    try {\n        urlencoded = urlencoded.replace(/\\+/g, '%20');\n        return decodeURIComponent(urlencoded);\n    }\n    catch (e) {\n        return urlencoded;\n    }\n}\nfunction urlParseQueryString(queryString) {\n    let params = {};\n    if (!queryString.length) {\n        return params;\n    }\n    let queryStringParams = queryString.split('&');\n    let i, param, paramName, paramValue;\n    for (i = 0; i < queryStringParams.length; i++) {\n        param = queryStringParams[i].split('=');\n        paramName = urlSafeDecode(param[0]);\n        paramValue = param[1] == null ? null : urlSafeDecode(param[1]);\n        params[paramName] = paramValue;\n    }\n    return params;\n}\nfunction urlParseHashParams(locationHash) {\n    locationHash = locationHash.replace(/^#/, '');\n    let params = {};\n    if (!locationHash.length) {\n        return params;\n    }\n    if (locationHash.indexOf('=') < 0 && locationHash.indexOf('?') < 0) {\n        params._path = urlSafeDecode(locationHash);\n        return params;\n    }\n    let qIndex = locationHash.indexOf('?');\n    if (qIndex >= 0) {\n        let pathParam = locationHash.substr(0, qIndex);\n        params._path = urlSafeDecode(pathParam);\n        locationHash = locationHash.substr(qIndex + 1);\n    }\n    let query_params = urlParseQueryString(locationHash);\n    for (let k in query_params) {\n        params[k] = query_params[k];\n    }\n    return params;\n}\nlet initParams = {};\ntry {\n    let locationHash = location.hash.toString();\n    initParams = urlParseHashParams(locationHash);\n}\ncatch (e) { }\nlet tmaPlatform = 'unknown';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppPlatform) {\n    tmaPlatform = (_a = initParams.tgWebAppPlatform) !== null && _a !== void 0 ? _a : 'unknown';\n}\nif (tmaPlatform === 'unknown') {\n    const window = getWindow();\n    tmaPlatform = (_d = (_c = (_b = window === null || window === void 0 ? void 0 : window.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) === null || _c === void 0 ? void 0 : _c.platform) !== null && _d !== void 0 ? _d : 'unknown';\n}\nfunction isInTMA() {\n    var _a;\n    return tmaPlatform !== 'unknown' || !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n}\n/**\n * Returns true if the app is running in the Telegram browser.\n */\nfunction isInTelegramBrowser() {\n    var _a;\n    const isTelegramWebview = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebview);\n    return (isInTMA() || isTelegramWebview) && tmaPlatform === 'unknown';\n}\nfunction getOKXLink(connectRequest, useMini = false, tmaReturnUrl) {\n    (0, log_1.logDebug)(`url  getOKXLink() called connectRequest==> ${JSON.stringify(connectRequest)}  useMini=> ${useMini}  tmaReturnUrl==> ${tmaReturnUrl}`);\n    if (useMini) {\n        var encodeTGParams = encodeTWAConnectURLParams(connectRequest);\n        return getTelegramWalletTWAUrl(encodeTGParams, tmaReturnUrl !== null && tmaReturnUrl !== void 0 ? tmaReturnUrl : \"back\");\n    }\n    else {\n        if ((0, utils_1.useShortLink)()) {\n            return getAppWalletShortDeepLink(connectRequest.topic, connectRequest.clientId);\n        }\n        else {\n            const base64Encoded = encodeConnectParams(connectRequest);\n            return `${protocol_1.standardDeeplink}?param=${base64Encoded}`;\n        }\n    }\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isValidObject = exports.RANDOM_LENGTH = exports.isBrowser = exports.resolveLocalStorage = exports.hasLocalStorage = exports.hasBuiltInWebSocket = exports.resolveWebSocketImplementation = void 0;\nexports.hexToByteArray = hexToByteArray;\nexports.toHexString = toHexString;\nexports.concatUint8Arrays = concatUint8Arrays;\nexports.splitToUint8Arrays = splitToUint8Arrays;\nexports.base64encode = base64encode;\nexports.base64decode = base64decode;\nexports.checkWSUrl = checkWSUrl;\nexports.hashKey = hashKey;\nexports.generateRandomBytes32 = generateRandomBytes32;\nexports.generateTopic = generateTopic;\nexports.isIos = isIos;\nexports.getLastSixMd5Hash = getLastSixMd5Hash;\nexports.toSafeBase64FromBase64 = toSafeBase64FromBase64;\nexports.useShortLink = useShortLink;\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst tweetnacl_util_1 = __importDefault(require(\"tweetnacl-util\"));\nconst to_string_1 = require(\"uint8arrays/to-string\");\nconst sha256_1 = require(\"@stablelib/sha256\");\nconst safejson_1 = require(\"./safejson\");\nconst log_1 = require(\"./log\");\nconst stringUtils_1 = require(\"../utils/stringUtils\");\nconst crypto_js_1 = __importDefault(require(\"crypto-js\"));\nconst BASE16 = \"base16\";\nfunction hexToByteArray(hexString) {\n    if (hexString.length % 2 !== 0) {\n        throw new Error(`Cannot convert ${hexString} to bytesArray`);\n    }\n    const result = new Uint8Array(hexString.length / 2);\n    for (let i = 0; i < hexString.length; i += 2) {\n        result[i / 2] = parseInt(hexString.slice(i, i + 2), 16);\n    }\n    return result;\n}\nfunction toHexString(byteArray) {\n    let hexString = '';\n    byteArray.forEach(byte => {\n        hexString += ('0' + (byte & 0xff).toString(16)).slice(-2);\n    });\n    return hexString;\n}\nfunction concatUint8Arrays(buffer1, buffer2) {\n    const mergedArray = new Uint8Array(buffer1.length + buffer2.length);\n    mergedArray.set(buffer1);\n    mergedArray.set(buffer2, buffer1.length);\n    return mergedArray;\n}\nfunction splitToUint8Arrays(array, index) {\n    if (index >= array.length) {\n        throw new Error('Index is out of buffer');\n    }\n    const subArray1 = array.slice(0, index);\n    const subArray2 = array.slice(index);\n    return [subArray1, subArray2];\n}\nfunction encodeUint8Array(value, urlSafe) {\n    const encoded = tweetnacl_util_1.default.encodeBase64(value);\n    if (!urlSafe) {\n        return encoded;\n    }\n    return encodeURIComponent(encoded);\n}\nfunction decodeToUint8Array(value, urlSafe) {\n    if (urlSafe) {\n        value = decodeURIComponent(value);\n    }\n    return tweetnacl_util_1.default.decodeBase64(value);\n}\nfunction base64encode(value, urlSafe) {\n    let uint8Array;\n    if (value instanceof Uint8Array) {\n        uint8Array = value;\n    }\n    else {\n        if (typeof value !== 'string') {\n            value = (0, safejson_1.safeJsonStringify)(value);\n        }\n        uint8Array = tweetnacl_util_1.default.decodeUTF8(value);\n    }\n    return encodeUint8Array(uint8Array, urlSafe);\n}\nfunction base64decode(value, urlSafe) {\n    const decodedUint8Array = decodeToUint8Array(value, urlSafe);\n    return {\n        toString() {\n            return tweetnacl_util_1.default.encodeUTF8(decodedUint8Array);\n        },\n        toObject() {\n            try {\n                return (0, safejson_1.safeJsonParse)(tweetnacl_util_1.default.encodeUTF8(decodedUint8Array));\n            }\n            catch (e) {\n                return null;\n            }\n        },\n        toUint8Array() {\n            return decodedUint8Array;\n        }\n    };\n}\nfunction checkWSUrl(url) {\n    const match = url.match(new RegExp(/^\\w+:/, \"gi\"));\n    if (!match || !match.length) {\n        return false;\n    }\n    let scheme = match[0];\n    if (scheme === undefined) {\n        return false;\n    }\n    return new RegExp(\"^wss?:\").test(scheme);\n}\nconst resolveWebSocketImplementation = () => {\n    if (typeof WebSocket !== \"undefined\") {\n        return WebSocket;\n    }\n    else if (typeof global !== \"undefined\" && typeof global.WebSocket !== \"undefined\") {\n        return global.WebSocket;\n    }\n    else if (typeof window !== \"undefined\" && typeof window.WebSocket !== \"undefined\") {\n        return window.WebSocket;\n    }\n    else if (typeof self !== \"undefined\" && typeof self.WebSocket !== \"undefined\") {\n        return self.WebSocket;\n    }\n    return WebSocket;\n    //\n    // return require(\"ws\");\n};\nexports.resolveWebSocketImplementation = resolveWebSocketImplementation;\nconst hasBuiltInWebSocket = () => typeof WebSocket !== \"undefined\" ||\n    (typeof global !== \"undefined\" && typeof global.WebSocket !== \"undefined\") ||\n    (typeof window !== \"undefined\" && typeof window.WebSocket !== \"undefined\") ||\n    (typeof self !== \"undefined\" && typeof self.WebSocket !== \"undefined\");\nexports.hasBuiltInWebSocket = hasBuiltInWebSocket;\nconst hasLocalStorage = () => (typeof global !== \"undefined\" && (typeof global.localStorage !== \"undefined\")) ||\n    (typeof window !== \"undefined\" && typeof window.localStorage !== \"undefined\");\nexports.hasLocalStorage = hasLocalStorage;\nconst resolveLocalStorage = () => {\n    if (typeof global !== \"undefined\" && typeof global.localStorage !== \"undefined\") {\n        return global.localStorage;\n    }\n    else if (typeof window !== \"undefined\" && typeof window.localStorage !== \"undefined\") {\n        return window.localStorage;\n    }\n    return localStorage;\n};\nexports.resolveLocalStorage = resolveLocalStorage;\nconst isBrowser = () => typeof window !== \"undefined\";\nexports.isBrowser = isBrowser;\nexports.RANDOM_LENGTH = 32;\nfunction hashKey(key, encode = BASE16) {\n    (0, log_1.logDebug)(`hash key called ${key}`);\n    const result = (0, sha256_1.hash)((0, stringUtils_1.okxfromString)(key, encode));\n    return (0, to_string_1.toString)(result, encode);\n}\nfunction generateRandomBytes32() {\n    return tweetnacl_1.default.randomBytes(exports.RANDOM_LENGTH);\n}\nfunction generateTopic() {\n    let randomBytes32 = generateRandomBytes32();\n    (0, log_1.logDebug)(`generate topic called ${randomBytes32}`);\n    return hashKey((0, to_string_1.toString)(randomBytes32, BASE16));\n}\nconst isValidObject = (obj) => Object.getPrototypeOf(obj) === Object.prototype && Object.keys(obj).length;\nexports.isValidObject = isValidObject;\nfunction isIos() {\n    const userAgent = navigator.userAgent;\n    const maxTouchPoints = navigator.maxTouchPoints || 0;\n    // 检测 iPhone、iPod 和传统的 iPad\n    const isIOSDevice = /iPad|iPhone|iPod/.test(userAgent) && !window.MSStream;\n    // 针对 iPadOS 13 及以上的设备进行额外判断\n    const isIPadOS = (userAgent.includes('Mac') && maxTouchPoints > 1);\n    (0, log_1.logDebug)(`utils isIos >>>isIOSDevice: ${isIOSDevice}    >> isIPadOS: ${isIPadOS}`);\n    // 如果是 iOS 设备或者是 iPadOS 设备，返回 true\n    return isIOSDevice || isIPadOS;\n}\nfunction getLastSixMd5Hash(input) {\n    // 生成 MD5 哈希\n    const hash = crypto_js_1.default.MD5(input).toString();\n    // 获取最后六位\n    return hash.slice(-6);\n}\nfunction toSafeBase64FromBase64(base64) {\n    return base64\n        .replace(/=/g, \"\")\n        .replace(/\\+/g, \"-\")\n        .replace(/\\//g, \"_\");\n}\nfunction useShortLink() {\n    return !!window.useShortLink;\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.openLink = openLink;\nexports.openLinkBlank = openLinkBlank;\nexports.openDeeplinkWithFallback = openDeeplinkWithFallback;\nexports.isMobileUserAgent = isMobileUserAgent;\nexports.getUserAgent = getUserAgent;\nexports.isOS = isOS;\nexports.isBrowser = isBrowser;\nconst ua_parser_js_1 = __importDefault(require(\"ua-parser-js\"));\nconst log_1 = require(\"./log\");\nfunction openLink(href, target = '_self') {\n    (0, log_1.logDebug)('openLink', href, target);\n    window.open(href, target, 'noopener noreferrer');\n}\nfunction openLinkBlank(href) {\n    openLink(href, '_blank');\n}\nfunction openDeeplinkWithFallback(href, fallback) {\n    const doFallback = () => {\n        if (isBrowser('safari') || (isOS('android') && isBrowser('firefox'))) {\n            // Safari does not support fallback to direct link.\n            return;\n        }\n        fallback();\n    };\n    const fallbackTimeout = setTimeout(() => doFallback(), 500);\n    window.addEventListener('blur', () => clearTimeout(fallbackTimeout), { once: true });\n    openLink(href, '_self');\n}\nfunction isMobileUserAgent() {\n    let check = false;\n    (function (a) {\n        if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) ||\n            /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.slice(0, 4)))\n            check = true;\n    })(navigator.userAgent ||\n        navigator.vendor ||\n        window.opera);\n    return check;\n}\nfunction getUserAgent() {\n    var _a, _b, _c;\n    const results = new ua_parser_js_1.default().getResult();\n    const osName = (_a = results.os.name) === null || _a === void 0 ? void 0 : _a.toLowerCase();\n    const deviceModel = (_b = results.device.model) === null || _b === void 0 ? void 0 : _b.toLowerCase();\n    let os;\n    switch (true) {\n        case deviceModel === 'ipad':\n            os = 'ipad';\n            break;\n        case osName === 'ios':\n            os = 'ios';\n            break;\n        case osName === 'android':\n            os = 'android';\n            break;\n        case osName === 'mac os':\n            os = 'macos';\n            break;\n        case osName === 'linux':\n            os = 'linux';\n            break;\n        case osName === null || osName === void 0 ? void 0 : osName.includes('windows'):\n            os = 'windows';\n            break;\n    }\n    const browserName = (_c = results.browser.name) === null || _c === void 0 ? void 0 : _c.toLowerCase();\n    let browser;\n    switch (true) {\n        case browserName === 'chrome':\n            browser = 'chrome';\n            break;\n        case browserName === 'firefox':\n            browser = 'firefox';\n            break;\n        case browserName === null || browserName === void 0 ? void 0 : browserName.includes('safari'):\n            browser = 'safari';\n            break;\n        case browserName === null || browserName === void 0 ? void 0 : browserName.includes('opera'):\n            browser = 'opera';\n            break;\n    }\n    return {\n        os,\n        browser\n    };\n}\nfunction isOS(...os) {\n    return os.includes(getUserAgent().os);\n}\nfunction isBrowser(...browser) {\n    return browser.includes(getUserAgent().browser);\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXBtcProvider = void 0;\nconst _1 = require(\"./\");\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXBtcProvider {\n    constructor(provider) {\n        this.caip = [\n            \"btc:mainnet\",\n            \"fractal:mainnet\"\n        ];\n        this.provider = provider;\n    }\n    getAddressForChainId(chainId) {\n        var _a, _b;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let accounts = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['btc']) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        });\n        if (accounts == undefined || accounts.length < 0) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `no connected account`);\n        }\n        let account = accounts[0];\n        const address = account.split(':')[2];\n        return address;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let extra = (_c = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['btc']) === null || _b === void 0 ? void 0 : _b.extra) === null || _c === void 0 ? void 0 : _c[chainId];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"compressedPublicKey\"];\n        }\n        return {\n            address: this.getAddressForChainId(chainId),\n            publicKey: publicKey\n        };\n    }\n    /**\n     *\n     * @param signStr\n     * @param chainId\n     * @param type\n     * @returns\n     */\n    signMessage(chainId, signStr, type) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (signStr === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signMessage parmas error`);\n            }\n            let params = {\n                signStr: signStr,\n                from: this.getAddressForChainId(chainId)\n            };\n            if (type) {\n                params.type = type;\n            }\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signMessage\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param toAddress\n     * @param satoshis\n     * @param options { feeRate: 0 }\n     * @returns\n     */\n    sendBitcoin(chainId, toAddress, satoshis, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            let params = {\n                from: this.getAddressForChainId(chainId),\n                to: toAddress,\n                value: (satoshis / 100000000).toString(),\n            };\n            if (options === null || options === void 0 ? void 0 : options.feeRate) {\n                params[\"satBytes\"] = options.feeRate.toString();\n            }\n            let result = yield this.send(chainId, params);\n            if (result !== undefined && ('txhash' in result)) {\n                // return txhash directly\n                return result.txhash;\n            }\n            // or return unexpected result\n            return result;\n        });\n    }\n    //  from - string：当前连接的钱包的 BTC 地址\n    //  to - string：接受 BTC 的地址\n    //  value - string：发送 BTC 的数量\n    //  satBytes - string： (可选) 自定义费率\n    //  memo - string： (可选) 指定 outputs OP_RETURN 内容 示例\n    //  memoPos - number： (可选) 指定 outputs OP_RETURN 输出位置，如果传了 memo 则必须传入 memoPos 指定位置，否则 memo 不生效\n    send(chainId, input) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (!this.checkParameters(input, 'to', 'value')) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send parmas  error`);\n            }\n            input[\"from\"] = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: 'btc_send',\n                    params: input\n                }, chainId);\n                if ('result' in ret) {\n                    return {\n                        txhash: ret.result\n                    };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param psbtHex string 要签名的 psbt 的十六进制字符串\n     * @param options object { autoFinalized: 0 }\n     */\n    signPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.signPsbts(chainId, [psbtHex], [options]).then(psbtResults => {\n                    let results = JSON.parse(psbtResults);\n                    resolve(results[0]);\n                }).catch(error => {\n                    reject(error);\n                });\n            });\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHexs Array\n     * @param options Array [{ autoFinalized: 0 }]\n     * @returns\n     */\n    signPsbts(chainId, psbtHexs, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHexs === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHexs: psbtHexs,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signPsbts\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHex string\n     * @param options object\n     * @returns\n     */\n    signAndPushPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHex === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHex: psbtHex,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signAndPushPsbt\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return JSON.parse(ret.result);\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param address string, receiver address\n     * @param inscriptionId string, 铭文 ID + 协议，没有传协议则默认是 Ordinals NFT ，目前仅支持 Ordinals 及 Atomicals 协议\n     * @param options object, { feeRate: number } custom rates\n     */\n    sendInscription(chainId, address, inscriptionId, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let extension = {\n                address: address,\n                inscriptionId: inscriptionId,\n                options: options\n            };\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (address === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method sendInscription params error`);\n            }\n            var feeRate = 0;\n            if (options && ('feeRate' in options)) {\n                feeRate = options.feeRate;\n            }\n            let coinId = '';\n            let from = this.getAddressForChainId(chainId);\n            var protocolId = 7; //ProtocolIdBRCNFT\n            if (inscriptionId !== 'undefined') {\n                let atomicSuffix = \"-Atomicals\";\n                let ordinalsSuffix = \"-Ordinals\";\n                if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(atomicSuffix.toLowerCase())) {\n                    protocolId = 8; //WXRCProtocolIdARCNFT\n                    inscriptionId = this.removeSuffix(inscriptionId, atomicSuffix);\n                }\n                else if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(ordinalsSuffix.toLowerCase())) {\n                    inscriptionId = this.removeSuffix(inscriptionId, ordinalsSuffix);\n                }\n            }\n            let params = {\n                scenario: 5,\n                feeRate: feeRate,\n                txType: \"20\",\n                to: address,\n                batchBean: [\n                    {\n                        coinAmount: \"1\",\n                        nftId: inscriptionId,\n                        protocolId: protocolId,\n                        coinId: coinId,\n                        inscriptionId: \"\",\n                        from: from\n                    }\n                ],\n                extension: extension\n            };\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_sendInscription\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    sendRunes(chainId, address, runeid, amount, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!chainId || !address || !runeid || !amount) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `The parameter is empty. Please check`);\n                }\n                let ns = this.checkChainId(chainId);\n                let protocolId = this.getProtocolId(chainId);\n                if (ns == undefined || protocolId == undefined) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n                }\n                let fromAddress = this.getAddressForChainId(chainId); // string\n                let params = {\n                    fromAddress: fromAddress,\n                    protocolId: protocolId,\n                    address: address, //String\n                    runeid: runeid, //String\n                    amount: amount, // String\n                    options: options\n                };\n                (0, core_1.logDebug)(\"OKXBtcProvider sendRunes -->\", JSON.stringify(params));\n                const ret = yield this.provider.request({\n                    method: \"btc_sendRunes\",\n                    params: params\n                }, chainId);\n                return ret.result;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    inscribeTransfer(chainId, ticker, amount) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!chainId || !ticker || !amount) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `The parameter is empty. Please check`);\n                }\n                let ns = this.checkChainId(chainId);\n                let protocolId = this.getProtocolId(chainId);\n                if (ns == undefined || protocolId == undefined) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n                }\n                let fromAddress = this.getAddressForChainId(chainId); // string\n                let params = {\n                    fromAddress: fromAddress,\n                    protocolId: protocolId,\n                    ticker: ticker, //String\n                    amount: amount, // String\n                };\n                (0, core_1.logDebug)(\"OKXBtcProvider inscribeTransfer -->\", JSON.stringify(params));\n                const ret = yield this.provider.request({\n                    method: \"btc_inscribeTransfer\",\n                    params: params\n                }, chainId);\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    removeSuffix(str, suffix) {\n        if (str.endsWith(suffix)) {\n            return str.slice(0, str.length - suffix.length);\n        }\n        return str;\n    }\n    checkParameters(params, ...keys) {\n        var unexistKeys = [];\n        keys.forEach(key => {\n            if (!(`${key}` in params)) {\n                unexistKeys.push(key);\n            }\n        });\n        if (unexistKeys.length > 0) {\n            console.log('not find key: ', unexistKeys.join(\",\"));\n            return false;\n        }\n        return true;\n    }\n    /**\n     *\n     * @param chainId eg. btc:mainnet\n     * @returns eg. btc\n     */\n    checkChainId(chainId) {\n        if (this.caip.includes(chainId)) {\n            let [namespaceKey, _] = chainId.split(\":\");\n            return namespaceKey;\n        }\n        return undefined;\n    }\n    getProtocolId(chainId) {\n        let ns = this.checkChainId(chainId);\n        if (ns != undefined) {\n            if (ns.startsWith(\"btc\")) {\n                return 13;\n            }\n            else if (ns.startsWith(\"btc\")) {\n                return 16;\n            }\n        }\n        return undefined;\n    }\n}\nexports.OKXBtcProvider = OKXBtcProvider;\nexports.default = OKXBtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCosmosProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXCosmosProvider {\n    constructor(provider) {\n        this.provider = provider;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e, _f;\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount chainId:\", chainId);\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount namespaces:\", JSON.stringify((_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces));\n        let account = (_c = (_b = this.provider.session) === null || _b === void 0 ? void 0 : _b.namespaces[core_1.NameSpaceKeyCosmos]) === null || _c === void 0 ? void 0 : _c.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount account:\", JSON.stringify(account));\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount address:\", address);\n        let extra = (_f = (_e = (_d = this.provider.session) === null || _d === void 0 ? void 0 : _d.namespaces[core_1.NameSpaceKeyCosmos]) === null || _e === void 0 ? void 0 : _e.extra) === null || _f === void 0 ? void 0 : _f[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n            console.log(\"aptos_publicKey\", publicKey);\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            algo: \"secp256k1\",\n            address: address,\n            bech32Address: address,\n            pubKey: this.hexToUint8Array(publicKey),\n        };\n    }\n    signArbitrary(chainId, signerAddress, data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const base64Encoded = window.btoa(data);\n            const signDoc = {\n                chain_id: \"\",\n                account_number: \"0\",\n                sequence: \"0\",\n                fee: {\n                    gas: \"0\",\n                    amount: []\n                },\n                msgs: [{\n                        \"type\": \"sign/MsgSignData\",\n                        \"value\": {\n                            \"signer\": signerAddress,\n                            \"data\": base64Encoded\n                        }\n                    }],\n                memo: \"\"\n            };\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signArbitrary\",\n                \"params\": {\n                    \"signer\": signerAddress,\n                    \"chain_id\": chainId.split(\":\")[1],\n                    \"data\": signDoc\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    if (typeof ret.result == \"string\") {\n                        return JSON.parse(ret.result);\n                    }\n                    else {\n                        return ret.result;\n                    }\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signAmino(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (signDoc.msgs[0].type == \"sign/MsgSignData\") {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signArbitrary\",\n                    \"params\": {\n                        \"signer\": signerAddress,\n                        \"chain_id\": chainId.split(\":\")[1],\n                        \"data\": signDoc\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        return ret.result;\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    return error;\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                }\n            }\n            else {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signAmino\",\n                    \"params\": {\n                        \"signer\": signerAddress,\n                        \"chainId\": chainId.split(\":\")[1],\n                        \"sign_doc\": signDoc,\n                        \"signOptions\": signOptions\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        const resData = JSON.parse(ret.result);\n                        console.log(\"signdoc\", signDoc, resData.signDoc);\n                        signDoc.fee = resData.signDoc.fee;\n                        return { signed: signDoc, signature: resData.signature };\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                    return error;\n                }\n            }\n        });\n    }\n    signDirect(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const object = {\n                bodyBytes: this.bufferToHex(signDoc.bodyBytes),\n                authInfoBytes: this.bufferToHex(signDoc.authInfoBytes),\n                chainId: signDoc.chainId,\n                accountNumber: signDoc.accountNumber ? signDoc.accountNumber.toString() : null,\n                signOptions: signOptions ? signOptions : null\n            };\n            let data = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signDirect\",\n                \"params\": {\n                    \"signer\": signerAddress,\n                    \"chainId\": chainId.split(\":\")[1],\n                    \"sign_doc\": object,\n                }\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    const res = JSON.parse(ret.result);\n                    console.log(\"signdirect result\", res);\n                    signDoc.authInfoBytes = this.messageToBuffer(res.signDoc.authInfoBytes);\n                    return { signed: signDoc, signature: res.signature };\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    messageToBuffer(message) {\n        var buffer = Uint8Array.from([]);\n        try {\n            if (typeof message === \"string\") {\n                buffer = this.hexToUint8Array(message.replace(\"0x\", \"\"));\n            }\n            else {\n                buffer = Uint8Array.from(message);\n            }\n        }\n        catch (err) {\n            console.log(`messageToBuffer error: ${err}`);\n        }\n        return buffer;\n    }\n    bufferToHex(arr) {\n        let output = [...new Uint8Array(arr)]\n            .map(x => x.toString(16).padStart(2, '0'))\n            .join('');\n        return '0x' + output;\n    }\n    hexToUint8Array(hexString) {\n        if (hexString.length % 2 !== 0) {\n            throw \"Invalid hexString\";\n        }\n        var arrayBuffer = new Uint8Array(hexString.length / 2);\n        for (var i = 0; i < hexString.length; i += 2) {\n            var byteValue = parseInt(hexString.substr(i, 2), 16);\n            if (isNaN(byteValue)) {\n                throw \"Invalid hexString\";\n            }\n            arrayBuffer[i / 2] = byteValue;\n        }\n        return arrayBuffer;\n    }\n}\nexports.OKXCosmosProvider = OKXCosmosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXStarknetProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXStarknetProvider {\n    constructor(provider) {\n        this.STARKNET_CHAIN_ID = \"starknet:mainnet\";\n        this.provider = provider;\n    }\n    getChain(chainId) {\n        if (chainId == null) {\n            chainId = this.STARKNET_CHAIN_ID;\n        }\n        if (chainId != this.STARKNET_CHAIN_ID) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, \"The chainId:\" + chainId + \"is wrong for OKXStarknetProvider\");\n        }\n        return chainId;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e;\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[core_1.NameSpaceKeyStarknet]) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        let extra = (_e = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces[core_1.NameSpaceKeyStarknet]) === null || _d === void 0 ? void 0 : _d.extra) === null || _e === void 0 ? void 0 : _e[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address,\n            pubKey: publicKey\n        };\n    }\n    /**\n     *\n     * @param chainId\n     * @param signerAddress\n     * @param data: { types, primaryType, domain, message } as TypedData\n     * @returns [signedDataR, signedDataS]\n     */\n    signMessage(signerAddress, typedData, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            if (signerAddress.length == 0) {\n                signerAddress = this.getAccount(chainId)[\"address\"];\n            }\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"starknet_signMessage\",\n                \"params\": {\n                    \"accountAddress\": signerAddress,\n                    \"typedData\": typedData\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    let results = ret.result;\n                    if (typeof results == 'string') {\n                        results = JSON.parse(results);\n                    }\n                    return [results[\"signedDataR\"], results[\"signedDataS\"]];\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     * sendTransaction\n     * @param chainId\n     * @param signerAddress\n     * @param transaction\n     * @returns { transaction_hash }\n     */\n    sendTransaction(signerAddress, transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let transactionData = {\n                \"accountAddress\": signerAddress,\n                \"executionRequest\": transaction\n            };\n            let data = {\n                \"method\": \"starknet_sendTransaction\",\n                \"params\": {\n                    \"data\": JSON.stringify(transactionData),\n                    \"from\": signerAddress\n                }\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return { transaction_hash: ret.result };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     *\n     * signMessage old API（rarely used, no need provide to external）\n     * @param chainId\n     * @param payload\n     * @returns {transaction_hash, class_hash}\n     */\n    signMessageDeclareContractPayload(payload, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            try {\n                let data = {\n                    \"method\": \"starknet_signMessage\",\n                    \"params\": payload\n                };\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return {\n                        \"transaction_hash\": ret.result[\"txHash\"],\n                        \"class_hash\": ret.result[\"classHash\"]\n                    };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     * sendTransaction old API（rarely used, no need provide to external）\n     * @param chainId\n     * @param signerAddress\n     * @param calls\n     * @param abis\n     * @param transactionsDetail\n     * @returns { transaction_hash }\n     */\n    /// todo： \n    /// 修改方法名\n    /// chainId 放后面\n    sendMessageExecuteTransactionDetail(signerAddress, calls, abis, transactionsDetail, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            const transactions = Array.isArray(calls) ? calls : [calls];\n            const executionRequest = {\n                \"calls\": transactions,\n                \"abis\": abis,\n                \"transactionsDetail\": {\n                    \"nonce\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.nonce,\n                    \"maxFee\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.nonce,\n                    \"version\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.version,\n                }\n            };\n            return this.sendTransaction(signerAddress, executionRequest, chainId);\n        });\n    }\n}\nexports.OKXStarknetProvider = OKXStarknetProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTonProvider = void 0;\nconst _1 = require(\"./\");\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXTonProvider {\n    constructor(generator) {\n        this.statusChangeSubscriptions = [];\n        this.statusChangeErrorSubscriptions = [];\n        this.provider = generator;\n        this.provider.on(\"connect\", () => {\n            let tonWallet = this.wallet();\n            (0, core_1.logDebug)(\"OKXTONProvider event connect:\", JSON.stringify(tonWallet));\n            this.statusChangeSubscriptions.forEach(callback => callback(tonWallet));\n        });\n        this.provider.on(\"reconnect\", () => {\n            let tonWallet = this.wallet();\n            (0, core_1.logDebug)(\"OKXTONProvider event reconnect:\", JSON.stringify(tonWallet));\n            this.statusChangeSubscriptions.forEach(callback => callback(tonWallet));\n        });\n        this.provider.on(\"disconnect\", () => {\n            (0, core_1.logDebug)(\"OKXTONProvider event disconnect:\");\n            this.statusChangeSubscriptions.forEach(callback => callback(null));\n        });\n        this.provider.on(\"connect_error\", (error) => {\n            (0, core_1.logDebug)(\"OKXTONProvider event connect_error:\", JSON.stringify(error));\n            this.statusChangeErrorSubscriptions.forEach(errorsHandler => errorsHandler(error));\n        });\n    }\n    connected() {\n        if (this.provider.connected()) {\n            return !!this.provider.session.namespaces[\"ton\"];\n        }\n        return false;\n    }\n    account() {\n        try {\n            if (!this.provider.session) {\n                return null;\n            }\n            let tonNameSpace = this.provider.session.namespaces['ton'];\n            if (!tonNameSpace || !tonNameSpace.payload || !tonNameSpace.payload.ton_addr) {\n                return null;\n            }\n            let ton_addr = tonNameSpace.payload.ton_addr;\n            return {\n                address: ton_addr.address,\n                chain: ton_addr.network,\n                walletStateInit: ton_addr.walletStateInit,\n                publicKey: ton_addr.publicKey,\n            };\n        }\n        catch (e) {\n            (0, core_1.logDebug)(\"OKXTONProvider account  error:\", JSON.stringify(e));\n            return null;\n        }\n    }\n    wallet() {\n        if (this.connected()) {\n            try {\n                let sessionWallet = this.provider.session.wallet;\n                let tonDeviceInfo = {\n                    platform: sessionWallet.platform,\n                    appName: sessionWallet.appName,\n                    appVersion: sessionWallet.appVersion,\n                    maxProtocolVersion: sessionWallet.maxProtocolVersion,\n                    features: ['ton_sendTransaction'],\n                };\n                const wallet = {\n                    device: tonDeviceInfo,\n                    provider: \"http\",\n                    account: this.account()\n                };\n                let tonNameSpace = this.provider.session.namespaces['ton'];\n                if (tonNameSpace && tonNameSpace.payload && tonNameSpace.payload.ton_proof) {\n                    wallet.connectItems = {\n                        tonProof: tonNameSpace.payload.ton_proof\n                    };\n                }\n                (0, core_1.logDebug)(\"OKXTONProvider wallet :\", JSON.stringify(wallet));\n                return wallet;\n            }\n            catch (e) {\n                (0, core_1.logDebug)(\"OKXTONProvider wallet  error:\", JSON.stringify(e));\n                return null;\n            }\n        }\n        return null;\n    }\n    onStatusChange(callback, errorsHandler) {\n        this.statusChangeSubscriptions.push(callback);\n        if (errorsHandler) {\n            this.statusChangeErrorSubscriptions.push(errorsHandler);\n        }\n        return () => {\n            this.statusChangeSubscriptions = this.statusChangeSubscriptions.filter(item => item !== callback);\n            if (errorsHandler) {\n                this.statusChangeErrorSubscriptions = this.statusChangeErrorSubscriptions.filter(item => item !== errorsHandler);\n            }\n        };\n    }\n    sendTransaction(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (transaction.network && transaction.network !== core_1.TONCHAIN.MAINNET) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, 'OKXTONProvider sendTransaction network error');\n            }\n            if (!transaction.network) {\n                transaction.network = core_1.TONCHAIN.MAINNET;\n            }\n            if (this.provider.session) {\n                if (!transaction.from) {\n                    const accounts = this.provider.requestAccountsWithNamespace('ton');\n                    transaction.from = accounts[0];\n                }\n            }\n            const requestParams = {\n                method: \"ton_sendTransaction\",\n                params: transaction,\n            };\n            let chain = 'ton:' + core_1.TONCHAIN.MAINNET;\n            (0, core_1.logDebug)(\"OKXTONProvider sendTransaction transaction----:\", chain, JSON.stringify(requestParams));\n            return this.provider.request(requestParams, chain);\n        });\n    }\n}\nexports.OKXTonProvider = OKXTonProvider;\nexports.default = OKXTonProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTronProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXTronProvider {\n    constructor(provider) {\n        this.TRON_CHAIN_ID = \"tron:mainnet\";\n        this.provider = provider;\n    }\n    getChain(chainId) {\n        if (chainId == null) {\n            chainId = this.TRON_CHAIN_ID;\n        }\n        if (chainId != this.TRON_CHAIN_ID) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, \"The chainId:\" + chainId + \"is wrong for OKXTronProvider\");\n        }\n        return chainId;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e;\n        chainId = this.getChain(chainId);\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[core_1.NameSpaceKeyTron]) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        let extra = (_e = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces[core_1.NameSpaceKeyTron]) === null || _d === void 0 ? void 0 : _d.extra) === null || _e === void 0 ? void 0 : _e[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address\n        };\n    }\n    stringToHex(str) {\n        let hex = '';\n        for (let i = 0; i < str.length; i++) {\n            hex += str.charCodeAt(i).toString(16).padStart(2, '0');\n        }\n        return hex;\n    }\n    signMessage(data, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"tron_signMessage\",\n                \"params\": {\n                    \"message\": this.stringToHex(data)\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signMessageV2(data, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"tron_signMessageV2\",\n                \"params\": {\n                    \"message\": data\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let data = {\n                \"method\": \"tron_signTransaction\",\n                \"params\": transaction\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    let signedTx;\n                    if (typeof ret.result == \"string\") {\n                        signedTx = JSON.parse(ret.result);\n                    }\n                    else {\n                        signedTx = ret.result;\n                    }\n                    let realSignTx = {};\n                    realSignTx.visible = signedTx.visible;\n                    realSignTx.txID = signedTx.txID;\n                    let rawData = {};\n                    rawData.contract = signedTx.raw_data.contract;\n                    rawData.expiration = signedTx.raw_data.expiration;\n                    rawData.ref_block_bytes = signedTx.raw_data.ref_block_bytes;\n                    rawData.fee_limit = signedTx.raw_data.fee_limit;\n                    rawData.ref_block_hash = signedTx.raw_data.ref_block_hash;\n                    rawData.timestamp = signedTx.raw_data.timestamp;\n                    realSignTx.raw_data = rawData;\n                    realSignTx.raw_data_hex = signedTx.raw_data_hex;\n                    realSignTx.signature = signedTx.signature;\n                    return realSignTx;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signAndSendTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let data = {\n                \"method\": \"tron_signAndSendTransaction\",\n                \"params\": transaction\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n}\nexports.OKXTronProvider = OKXTronProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXUniversalProvider = void 0;\nconst eip155_1 = require(\"./provider/providers/eip155\");\nconst sui_1 = require(\"./provider/providers/sui\");\nconst constants_1 = require(\"./provider/constants\");\nconst eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\nconst client_1 = require(\"./packages/sign-client/client\");\nconst core_1 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"./packages/utils/namespaces\");\nconst solana_1 = __importDefault(require(\"./provider/providers/solana\"));\nconst btc_1 = __importDefault(require(\"./provider/providers/btc\"));\nconst aptos_1 = __importDefault(require(\"./provider/providers/aptos\"));\nconst ton_1 = __importDefault(require(\"./provider/providers/ton\"));\nconst cosmos_1 = __importDefault(require(\"./provider/providers/cosmos\"));\nconst tron_1 = __importDefault(require(\"./provider/providers/tron\"));\nconst utils_1 = require(\"./provider/utils\");\nconst packages_1 = require(\"./packages\");\nconst provider_1 = require(\"./provider\");\nconst starknet_1 = __importDefault(require(\"./provider/providers/starknet\"));\nclass OKXUniversalProvider {\n    static init(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider init() called');\n            (0, core_1.checkMetaData)(opts.dappMetaData);\n            // ignore rpc provider check by default\n            (0, utils_1.setGlobal)('disableProviderPing', true);\n            let provider;\n            if (window && window.okxConnectUniversalinwindow && window.okxConnectUniversalinwindow instanceof OKXUniversalProvider) {\n                (0, core_1.logDebug)('OKXUniversalConnect init() old called');\n                provider = window.okxConnectUniversalinwindow;\n            }\n            else {\n                (0, core_1.logDebug)('OKXUniversalConnect init() new called');\n                provider = new OKXUniversalProvider(opts);\n                if (window) {\n                    window.okxConnectUniversalinwindow = provider;\n                }\n                yield provider.initialize();\n            }\n            (0, core_1.getDefaultReporter)().configVersionAndSide('universalprovider-1.5.2', 'dapp', provider.providerOpts.dappMetaData.name);\n            return provider;\n        });\n    }\n    constructor(opts) {\n        this.rpcProviders = {};\n        this.events = new eventemitter3_1.default();\n        this.providerOpts = opts;\n    }\n    request(args, chain) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider request() called');\n            (0, core_1.reportLog)('OKXUniversalProvider request() called');\n            if (!this.connected()) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return yield this.getProvider(namespace).request(requestParam);\n        });\n    }\n    buildRequestParamFromRequest(args, chain) {\n        var _a;\n        (0, core_1.logDebug)(\"UniversalProvider request args >>>>>>>: \", chain, JSON.stringify(args));\n        let [namespace, chainId] = this.validateChain(chain);\n        if (!this.session) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Please call connect() before request()\");\n        }\n        let keyArr = Object.keys(this.session.namespaces);\n        if (!chain && keyArr && keyArr.length > 1) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Multiple chains have been linked, the request method requires chain`);\n        }\n        if (namespace == \"aptos\" && chainId == \"mainnet\") {\n            namespace = \"aptos\";\n            chainId = \"637\";\n        }\n        if (namespace == \"movement\" && chainId == \"testnet\") {\n            namespace = \"aptos\";\n            chainId = \"70000060\";\n        }\n        const requestParam = Object.assign(Object.assign({}, args), { chainId: `${namespace}:${chainId}`, redirect: (_a = args.redirect) !== null && _a !== void 0 ? _a : this.sessionConfig.redirect });\n        return { namespace, requestParam };\n    }\n    enable() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.client) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (!this.session) {\n                if (this.connectOpts) {\n                    yield this.connect(this.connectOpts);\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n                }\n            }\n            const accounts = yield this.requestAccounts();\n            return accounts;\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider disconnect() called');\n            (0, core_1.reportLog)('provider disconnect called');\n            if (!this.session) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n                let called = false;\n                const onRequestSent = () => __awaiter(this, void 0, void 0, function* () {\n                    if (!called) {\n                        called = true;\n                        yield this.disconnectAndEmit();\n                        yield this.cleanup();\n                        resolve();\n                        (0, core_1.logDebug)(\"UniversalProvider disconnect Disconnected\");\n                        (0, core_1.reportLog)('provider disconnect disconnected');\n                    }\n                });\n                try {\n                    yield this.client.disconnect();\n                    yield onRequestSent();\n                }\n                catch (e) {\n                    yield onRequestSent();\n                }\n            }));\n        });\n    }\n    disconnectAndEmit() {\n        var _a, _b;\n        this.client.engine.connectionManager.disconnect();\n        this.events.emit(\"disconnect\", { topic: (_a = this.session) === null || _a === void 0 ? void 0 : _a.topic });\n        this.events.emit(\"session_delete\", { topic: (_b = this.session) === null || _b === void 0 ? void 0 : _b.topic });\n    }\n    aptosChainNameToGeneralId(chainId) {\n        if (chainId == \"aptos:mainnet\") {\n            return \"aptos:637\";\n        }\n        else if (chainId == \"movement:testnet\") {\n            return \"aptos:70000060\";\n        }\n        else {\n            return chainId;\n        }\n    }\n    replaceAptos(opts) {\n        var _a, _b;\n        let aptosNameSpace = (_a = opts.namespaces) === null || _a === void 0 ? void 0 : _a[\"aptos\"];\n        if (aptosNameSpace != undefined) {\n            let realNS = this.replaceAptosInner(aptosNameSpace);\n            if (opts.namespaces != undefined && \"aptos\" in opts.namespaces && realNS != undefined) {\n                opts.namespaces.aptos = realNS;\n            }\n        }\n        let optionAptosNameSpace = (_b = opts.optionalNamespaces) === null || _b === void 0 ? void 0 : _b[\"aptos\"];\n        if (optionAptosNameSpace != undefined) {\n            let realOptionNS = this.replaceAptosInner(optionAptosNameSpace);\n            if (opts.optionalNamespaces != undefined && \"aptos\" in opts.optionalNamespaces && realOptionNS != undefined) {\n                opts.optionalNamespaces.aptos = realOptionNS;\n            }\n        }\n        return opts;\n    }\n    replaceAptosInner(aptosNameSpace) {\n        var _a;\n        if (aptosNameSpace != undefined) {\n            aptosNameSpace.chains = (_a = aptosNameSpace.chains) === null || _a === void 0 ? void 0 : _a.map(chainId => {\n                return this.aptosChainNameToGeneralId(chainId);\n            });\n            if (aptosNameSpace.defaultChain != undefined) {\n                aptosNameSpace.defaultChain = this.aptosChainNameToGeneralId(aptosNameSpace.defaultChain);\n            }\n        }\n        return aptosNameSpace;\n    }\n    replaceAptosGeneralIdWithNetName(chainId) {\n        if (chainId.includes(\"aptos:637\")) {\n            chainId = chainId.replace(\"aptos:637\", \"aptos:mainnet\");\n        }\n        else if (chainId.includes(\"aptos:70000060\")) {\n            chainId = chainId.replace(\"aptos:70000060\", \"movement:testnet\");\n        }\n        return chainId;\n    }\n    replaceSessionAptos(session) {\n        var _a;\n        let namespaces = (_a = session === null || session === void 0 ? void 0 : session.namespaces) === null || _a === void 0 ? void 0 : _a[\"aptos\"];\n        if (namespaces != undefined && namespaces.chains != undefined) {\n            namespaces.chains = namespaces.chains.map(chain => {\n                return this.replaceAptosGeneralIdWithNetName(chain);\n            });\n            namespaces.accounts = namespaces.accounts.map((account) => {\n                return this.replaceAptosGeneralIdWithNetName(account);\n            });\n            let extra = {};\n            Object.keys(namespaces.extra || {}).forEach((key, index) => {\n                let newKey = this.replaceAptosGeneralIdWithNetName(key);\n                extra[this.replaceAptosGeneralIdWithNetName(key)] = Object.values((session === null || session === void 0 ? void 0 : session.namespaces[\"aptos\"].extra) || {})[index];\n            });\n            namespaces.extra = extra;\n        }\n        (0, core_1.logDebug)(\"replaceSessionAptos\", session);\n    }\n    connected() {\n        (0, core_1.logDebug)('OKXUniversalProvider connected() called');\n        (0, core_1.reportLog)('provider connected called');\n        let disconnectInner = () => {\n            try {\n                this.cleanup();\n                this.client.engine.connectionManager.disconnect();\n            }\n            catch (e) {\n                (0, core_1.logDebug)(\"Error during disconnect:\", e);\n            }\n        };\n        try {\n            if (!this.session)\n                return false;\n            if (!this.client.engine.connectionManager.getCurrentConnectionReady()) {\n                disconnectInner();\n                return false;\n            }\n            return true;\n        }\n        catch (e) {\n            disconnectInner();\n            return false;\n        }\n    }\n    connectAndSign(opts, signRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() called');\n            const updatedOpts = Object.assign(Object.assign({}, opts), { signRequest });\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() opts:', JSON.stringify(opts));\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() signRequest:', JSON.stringify(signRequest));\n            return yield this.connect(updatedOpts);\n        });\n    }\n    connect(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider connect() called');\n            (0, core_1.reportLog)('provider connect called');\n            if (!this.client) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (this.connected()) {\n                return this.session;\n            }\n            opts = this.replaceAptos(opts);\n            (0, core_1.logDebug)(`OKXUniversalProvider connect >>>>`, JSON.stringify(opts));\n            if (opts.sessionConfig === undefined) {\n                opts.sessionConfig = {};\n            }\n            if (opts.sessionConfig.openUniversalUrl === undefined) {\n                opts.sessionConfig.openUniversalUrl = (0, core_1.isMobileUserAgent)();\n            }\n            this.setNamespaces(opts);\n            try {\n                (0, core_1.logDebug)(`UniversalProvider connect opts.stringify ====> ${JSON.stringify(opts)}`);\n                let session = yield this.client.connect(opts);\n                this.replaceSessionAptos(session);\n                (0, core_1.logDebug)(`UniversalProvider connect success ====> ${JSON.stringify(session)}`);\n                if (session) {\n                    this.session = session;\n                    this.client.session = session;\n                    (0, core_1.logDebug)(`OKXUniversalProvider connect success opts>>>>`, JSON.stringify(opts));\n                    this.onConnect();\n                    if (opts.signRequest && opts.signRequest.length > 0) {\n                        let requestItem = opts.signRequest[0];\n                        let signResponseList = [];\n                        if (typeof window !== \"undefined\" && window && window.okxConnectUniversalUIinwindow) { //from UI\n                            (0, core_1.logDebug)(`OKXUniversalProvider connect success, us UI SDK>>>>`);\n                            if (this.session.signResponse && this.session.signResponse.length > 0) { // >=6.96\n                                signResponseList = this.session.signResponse;\n                            }\n                        }\n                        else {\n                            (0, core_1.logDebug)(`OKXUniversalProvider connect success, us Universal SDK>>>>`);\n                            if (this.session.signResponse && this.session.signResponse.length > 0) { // >=6.96\n                                signResponseList = this.session.signResponse;\n                            }\n                            else {\n                                signResponseList.push((0, packages_1.creatNotSupportMethodItemReplay)(requestItem));\n                            }\n                        }\n                        (0, core_1.logDebug)(`UniversalProvider connect success connectRequestReply ====> ${JSON.stringify(signResponseList)}`);\n                        setTimeout(() => {\n                            this.events.emit(\"connect_signResponse\", signResponseList);\n                        }, 100);\n                    }\n                    return session;\n                }\n                return undefined;\n            }\n            catch (error) {\n                (0, core_1.logDebug)(`UniversalProvider connect error ====> `, JSON.stringify(error));\n                throw error;\n            }\n        });\n    }\n    syncAllAddresses() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if ((0, provider_1.syncAddressAvailable)(this.session.wallet)) {\n                return this.client.syncAllAddress();\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n            }\n        });\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    setDefaultChain(chain, rpcUrl) {\n        (0, core_1.logDebug)('OKXUniversalProvider setDefaultChain() called');\n        // chain = this.aptosChainNameToGeneralId(chain)\n        try {\n            // ignore without active session\n            if (!this.connected())\n                return;\n            const [namespace, chainId] = this.validateChain(chain);\n            const provider = this.getProvider(namespace);\n            provider.setDefaultChain(chainId, rpcUrl);\n        }\n        catch (error) {\n            // ignore the error if the fx is used prematurely before namespaces are set\n            if (!/Please call connect/.test(error.message))\n                throw error;\n        }\n    }\n    checkStorage() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let sessionInfoStr = yield this.getFromStore(\"connectSession\");\n            (0, core_1.logDebug)(sessionInfoStr);\n            if (sessionInfoStr) {\n                let sessionInfo = sessionInfoStr;\n                this.session = sessionInfo;\n                this.client.session = this.session;\n                this.sessionConfig = sessionInfo.sessionConfig;\n                this.client.sessionConfig = this.sessionConfig;\n                (0, core_1.logDebug)('[evm u-provider] do reconnection', this.session);\n                yield this.client.restoreconnect(sessionInfo);\n                this.createProviders();\n                this.registerEventListeners();\n                setTimeout(() => {\n                    this.events.emit(\"reconnect\", { session: this.session });\n                }, 100);\n                this.registerEventListeners();\n            }\n        });\n    }\n    initialize() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider initialize() called');\n            (0, core_1.reportLog)('provider initialize called');\n            const data = Object.assign({ url: window.location.hostname, origin: window.location.origin }, this.providerOpts.dappMetaData);\n            this.client = new client_1.SignClient(data, this.events);\n            yield this.checkStorage();\n        });\n    }\n    createProviders() {\n        if (!this.client) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n        }\n        if (!this.connected()) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Session not initialized. Please call connect() before enable()\");\n        }\n        const providersToCreate = [\n            ...new Set(Object.keys(this.session.namespaces)\n                .filter((namespace) => { var _a, _b; return ((_b = (_a = this.session.namespaces[namespace]) === null || _a === void 0 ? void 0 : _a.accounts) === null || _b === void 0 ? void 0 : _b.length) > 0; })\n                .map((namespace) => (0, namespaces_1.parseNamespaceKey)(namespace))),\n        ];\n        providersToCreate.forEach((namespace) => {\n            if (!this.session)\n                return;\n            const namespacesValue = this.session.namespaces;\n            const currentNameSpace = namespacesValue[namespace];\n            (0, core_1.logDebug)(\"init eip155 >> \", currentNameSpace);\n            switch (namespace) {\n                case \"eip155\":\n                    const opts = {\n                        namespace: currentNameSpace\n                    };\n                    this.rpcProviders[namespace] = new eip155_1.Eip155Provider(opts, this.client, this.events);\n                    break;\n                case \"solana\":\n                    const opts1 = {\n                        namespace: currentNameSpace\n                    };\n                    let solanaProvider = new solana_1.default(opts1, \"solana\", this.client, this.events);\n                    this.rpcProviders[namespace] = solanaProvider;\n                    let sonicProvider = new solana_1.default(opts1, \"sonic\", this.client, this.events);\n                    this.rpcProviders['sonic'] = sonicProvider;\n                    let svmProvider = new solana_1.default(opts1, \"svm\", this.client, this.events);\n                    this.rpcProviders['svm'] = svmProvider;\n                    // this.rpcProviders[namespace] = new SolanaProvider(opts1, () => { return this.session; });\n                    break;\n                case \"ton\":\n                    const optsTon = {\n                        namespace: currentNameSpace\n                    };\n                    let tonProvider = new ton_1.default(optsTon, this.client, this.events);\n                    this.rpcProviders[namespace] = tonProvider;\n                    break;\n                case \"sui\":\n                    const optsSui = {\n                        namespace: currentNameSpace\n                    };\n                    let suiProvider = new sui_1.SuiProvider(optsSui, this.client, this.events);\n                    suiProvider.name = \"sui\";\n                    this.rpcProviders[namespace] = suiProvider;\n                    break;\n                case \"btc\":\n                    const optsBtc = {\n                        namespace: currentNameSpace\n                    };\n                    let btcProvider = new btc_1.default(optsBtc, \"btc\", this.client, this.events);\n                    this.rpcProviders[\"btc\"] = btcProvider;\n                    let fbProvider = new btc_1.default(optsBtc, \"fractal\", this.client, this.events);\n                    this.rpcProviders[\"fractal\"] = fbProvider;\n                    break;\n                case \"aptos\":\n                    let aptosProvider = new aptos_1.default({\n                        namespace: currentNameSpace\n                    }, \"aptos\", this.client, this.events);\n                    this.rpcProviders[namespace] = aptosProvider;\n                    let moveProvider = new aptos_1.default({\n                        namespace: currentNameSpace\n                    }, \"movement\", this.client, this.events);\n                    this.rpcProviders[\"movement\"] = moveProvider;\n                    break;\n                case \"cosmos\":\n                    let cosmosProvider = new cosmos_1.default({\n                        namespace: currentNameSpace\n                    }, this.client, this.events);\n                    this.rpcProviders[namespace] = cosmosProvider;\n                    break;\n                case \"tron\":\n                    let tronProvider = new tron_1.default({\n                        namespace: currentNameSpace\n                    }, this.client, this.events);\n                    this.rpcProviders[namespace] = tronProvider;\n                    break;\n                case \"starknet\":\n                    let starknetProvider = new starknet_1.default({\n                        namespace: currentNameSpace\n                    }, \"starknet\", this.client, this.events);\n                    this.rpcProviders[namespace] = starknetProvider;\n                    break;\n            }\n        });\n    }\n    registerEventListeners() {\n        if (typeof this.client === \"undefined\") {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client is not initialized\");\n        }\n        this.client.engine.addDisconnectListener(() => {\n            this.disconnectAndEmit();\n            this.cleanup();\n        });\n        this.on(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, (caip2ChainId) => {\n            this.onChainChanged(caip2ChainId);\n        });\n        this.on(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, (nameSpaces) => {\n            if (nameSpaces) {\n                const nameSpacekey = Object.keys(nameSpaces)[0];\n                if (this.session) {\n                    this.session.namespaces[nameSpacekey] = nameSpaces[nameSpacekey];\n                    if (this.session) {\n                        this.persist(\"connectSession\", this.session);\n                        this.events.emit(\"session_update\", this.session);\n                    }\n                    (0, core_1.logDebug)(\"PROVIDER_EVENTS.UPDATE_NAMESPACES this.session... ->>>\", JSON.stringify(this.session));\n                }\n            }\n        });\n    }\n    getProvider(namespace) {\n        (0, core_1.logDebug)('current get providers', this.rpcProviders);\n        (0, core_1.logDebug)('query namespace: ', namespace);\n        return this.rpcProviders[namespace];\n    }\n    setNamespaces(params) {\n        this.connectOpts = params;\n        const { namespaces, sessionConfig } = params;\n        const data = {\n            origin: window.location.origin,\n            url: window.location.hostname,\n            name: this.providerOpts.dappMetaData.name,\n            icon: this.providerOpts.dappMetaData.icon,\n        };\n        this.sessionConfig = Object.assign({ dappInfo: data }, sessionConfig);\n        (0, core_1.logDebug)(\"setNamespaces sessionConfig>>>\", this.sessionConfig);\n        this.client.sessionConfig = this.sessionConfig;\n        this.persist(\"sessionConfig\", sessionConfig);\n    }\n    validateChain(chain) {\n        var _a;\n        let [namespace, chainId] = (chain === null || chain === void 0 ? void 0 : chain.split(\":\")) || [\"\", \"\"];\n        if (!this.session || !this.session.namespaces || !Object.keys(this.session.namespaces).length) {\n            (0, core_1.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        if (namespace) {\n            if (!this.isChainNamespaceInSession(namespace)) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace '${namespace}' is not configured. Please call connect() first with namespace config.`);\n            }\n            if (chainId && chain) {\n                (0, core_1.logDebug)('this.session.namespaces -->> ', namespace, JSON.stringify(this.session.namespaces));\n                const chainsArr = (_a = this.session.namespaces[namespace]) === null || _a === void 0 ? void 0 : _a.chains;\n                (0, core_1.logDebug)('get chainsArr & chain', JSON.stringify(chainsArr), chain);\n                if (chainsArr && !chainsArr.includes(chain)) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace not include the chain '${chain}'`);\n                }\n            }\n        }\n        if (namespace && chainId) {\n            (0, core_1.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        let defaultNamespace = (0, namespaces_1.parseNamespaceKey)(Object.keys(this.session.namespaces)[0]);\n        const defaultChain = this.rpcProviders[defaultNamespace].getDefaultChain();\n        (0, core_1.logDebug)('get default chain:', defaultChain);\n        return [defaultNamespace, defaultChain];\n    }\n    isChainNamespaceInSession(namespaceStr) {\n        var _a, _b;\n        if (Object.keys(((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces) || {})\n            .map((key) => (0, namespaces_1.parseNamespaceKey)(key))\n            .includes(namespaceStr)) {\n            return true;\n        }\n        let isChainNamespaceInSession = false;\n        Object.values(((_b = this.session) === null || _b === void 0 ? void 0 : _b.namespaces) || {})\n            .forEach(namespace => {\n            namespace.chains.forEach(chain => {\n                if (chain.split(\":\")[0] == namespaceStr) {\n                    isChainNamespaceInSession = true;\n                }\n            });\n        });\n        return isChainNamespaceInSession;\n    }\n    requestAccountsWithNamespace(namespace) {\n        return this.getProvider(namespace).requestAccounts();\n    }\n    requestDefaultChainWithNamespace(namespace) {\n        return this.getProvider(namespace).getDefaultChain();\n    }\n    requestAccounts() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const [namespace] = this.validateChain();\n            return yield this.getProvider(namespace).requestAccounts();\n        });\n    }\n    onChainChanged(caip2Chain) {\n        var _a;\n        if (!((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces))\n            return;\n        const [namespace, chainId] = this.validateChain(caip2Chain);\n        if (!chainId)\n            return;\n        if (this.session.namespaces[namespace]) {\n            this.session.namespaces[namespace].defaultChain = chainId;\n            this.persist(\"connectSession\", this.session);\n        }\n        this.events.emit(\"chainChanged\", chainId);\n    }\n    onConnect() {\n        this.createProviders();\n        if (this.session) {\n            this.persist(\"connectSession\", this.session);\n        }\n        this.events.emit(\"connect\", { session: this.session });\n        this.registerEventListeners();\n    }\n    cleanup() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.session = undefined;\n            this.client.session = undefined;\n            this.sessionProperties = undefined;\n            this.persist(\"optionalNamespaces\", undefined);\n            this.persist(\"sessionProperties\", undefined);\n            this.persist(\"connectSession\", undefined);\n        });\n    }\n    persist(key, data) {\n        (0, core_1.logDebug)('[evm u-provider] persisit data', key, data);\n        return this.client.engine.connectionManager.saveSessionContent(key, data);\n    }\n    getFromStore(key) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.client.engine.connectionManager.getSessionContent(key);\n        });\n    }\n    showRequestModal(args, chain) {\n        try {\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return this.getProvider(namespace).showRequestModal(requestParam);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n}\nexports.OKXUniversalProvider = OKXUniversalProvider;\nexports.default = OKXUniversalProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXStarknetProvider = exports.OKXTronProvider = exports.OKXTonProvider = exports.OKXCosmosProvider = exports.OKXBtcProvider = exports.OKXUniversalProvider = void 0;\n__exportStar(require(\"./provider/types\"), exports);\n__exportStar(require(\"./packages\"), exports);\nvar OKXUniversalProvider_1 = require(\"./OKXUniversalProvider\");\nObject.defineProperty(exports, \"OKXUniversalProvider\", { enumerable: true, get: function () { return OKXUniversalProvider_1.OKXUniversalProvider; } });\nvar OKXBtcProvider_1 = require(\"./OKXBtcProvider\");\nObject.defineProperty(exports, \"OKXBtcProvider\", { enumerable: true, get: function () { return OKXBtcProvider_1.OKXBtcProvider; } });\nvar OKXCosmosProvider_1 = require(\"./OKXCosmosProvider\");\nObject.defineProperty(exports, \"OKXCosmosProvider\", { enumerable: true, get: function () { return OKXCosmosProvider_1.OKXCosmosProvider; } });\nvar OKXTonProvider_1 = require(\"./OKXTonProvider\");\nObject.defineProperty(exports, \"OKXTonProvider\", { enumerable: true, get: function () { return OKXTonProvider_1.OKXTonProvider; } });\nvar OKXTronProvider_1 = require(\"./OKXTronProvider\");\nObject.defineProperty(exports, \"OKXTronProvider\", { enumerable: true, get: function () { return OKXTronProvider_1.OKXTronProvider; } });\nvar OKXStarknetProvider_1 = require(\"./OKXStarknetProvider\");\nObject.defineProperty(exports, \"OKXStarknetProvider\", { enumerable: true, get: function () { return OKXStarknetProvider_1.OKXStarknetProvider; } });\n__exportStar(require(\"@okxconnect/core\"), exports);\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./utils\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SignClient = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"../utils/namespaces\");\nconst ConnectMethodUtils_1 = require(\"../utils/ConnectMethodUtils\");\nconst constants_1 = require(\"../../provider/constants\");\nclass SignClient extends core_1.ISignClient {\n    constructor(metaData, events) {\n        super(metaData);\n        // ---------- Engine ----------------------------------------------- //\n        this.connect = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    var connectRequest = [];\n                    (0, core_1.logDebug)(`client connect params >>>`, JSON.stringify(params));\n                    var requestAccountItem = {\n                        name: \"requestAccounts\",\n                        requiredNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.namespaces),\n                        optionalNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.optionalNamespaces),\n                    };\n                    this.engine.setSessionConnectingListener(() => {\n                        (0, core_1.logDebug)(`sessionConnectingListener >>>`);\n                        this.events.emit(constants_1.PROVIDER_EVENTS.SESSION_CONNECTING);\n                    });\n                    if (params.signRequest) {\n                        requestAccountItem.connectRequestMethods = yield (0, ConnectMethodUtils_1.connectMethodsToConnectWalletMethods)(params.signRequest, requestAccountItem.requiredNamespaces);\n                    }\n                    connectRequest.push(requestAccountItem);\n                    (0, core_1.logDebug)(`client connect connectRequest >>>`, JSON.stringify(connectRequest));\n                    this.engine.universalConnect(connectRequest, Object.assign({ dappInfo: this.metadata }, params.sessionConfig), (info) => {\n                        if (info && info.connectRequest) {\n                            (0, core_1.logDebug)(`universalConect info.connectRequest :`, info.connectRequest);\n                            (0, core_1.logDebug)(`universalConect url:`, (0, core_1.getOKXLink)(info.connectRequest, this.sessionConfig.useMini));\n                            this.events.emit(\"display_uri\", (0, core_1.getOKXLink)(info.connectRequest, this.sessionConfig.useMini));\n                            this.events.emit(\"short_display_uri\", (0, core_1.getAppWalletShortDeepLink)(info.connectRequest.topic, info.connectRequest.clientId));\n                            (0, core_1.logDebug)(`universalConect EngineConnectInfo  ${JSON.stringify(info)}`);\n                            this.events.emit(\"okx_engine_connect_params\", info);\n                        }\n                    }).then((session) => __awaiter(this, void 0, void 0, function* () {\n                        (0, namespaces_1.fillParamsToSession)(session, params.namespaces, params.optionalNamespaces, this.sessionConfig);\n                        (0, core_1.logDebug)(`signClient: connect: session ${JSON.stringify(session)}`);\n                        if (params.signRequest) {\n                            yield (0, ConnectMethodUtils_1.connectMethodsResponseUpdate)(session, params.signRequest);\n                        }\n                        resolve(session);\n                    })).catch((e) => {\n                        (0, core_1.logDebug)(`signClient: connect: catch ${JSON.stringify(e)}`);\n                        this.events.emit(\"connect_error\", e);\n                        reject(e);\n                    });\n                }\n                catch (error) {\n                    (0, core_1.logDebug)(`signClient: connect:  ${JSON.stringify(error)}`);\n                    reject(error);\n                }\n            }));\n        });\n        this.restoreconnect = (sessionConfig) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.restoreconnect(sessionConfig, (session) => {\n                    resolve(session);\n                });\n            });\n        });\n        this.reject = (params) => __awaiter(this, void 0, void 0, function* () {\n            //   try {\n            //     return await this.engine.reject(params);\n            //   } catch (error: any) {\n            //     this.logger.error(error.message);\n            //     throw error;\n            //   }\n        });\n        //\n        // public update: ISignClient[\"update\"] = async (params) => {\n        //   return\n        // //   try {\n        // //     return await this.engine.update(params);\n        // //   } catch (error: any) {\n        // //     this.logger.error(error.message);\n        // //     throw error;\n        // //   }\n        // };\n        this.request = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                (0, core_1.logDebug)(\"clint request --params>>>> >\", this.engine.connectionManager.getCurrentConnectionReady(), (_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl, JSON.stringify(params));\n                try {\n                    // this.sessionConfig\n                    if (((_b = this.sessionConfig) === null || _b === void 0 ? void 0 : _b.openUniversalUrl) && (0, core_1.isIos)()) {\n                        this.openOKXWallet();\n                    }\n                    yield this.engine.send(params, {\n                        resolve: (response) => {\n                            delete response.requestId;\n                            (0, core_1.logDebug)(\"clint request --response >\", JSON.stringify(response));\n                            if (('error' in response) && response.error) {\n                                let error = response.error;\n                                reject(new core_1.OKXConnectError(response.error.code, response.method + \":\" + error.message));\n                            }\n                            else {\n                                resolve(response);\n                            }\n                        },\n                        onAck: () => {\n                            var _a;\n                            if (!(0, core_1.isIos)() && ((_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl)) {\n                                this.openOKXWallet();\n                            }\n                        }\n                    });\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }));\n        });\n        // public emit: ISignClient[\"emit\"] = async (params) => {\n        //     try {\n        //         // return await this.engine.emit(params);\n        //     } catch (error: any) {\n        //         throw error;\n        //     }\n        // };\n        this.disconnect = () => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.send({\n                    method: \"disconnect\"\n                }, {\n                    onAck: () => {\n                        resolve();\n                    }\n                }, undefined, 86400000).catch((error) => {\n                    console.log(`disconnect : ${JSON.stringify(error)}`);\n                    reject(error);\n                });\n            });\n        });\n        this.engine = new core_1.Engine(new core_1.ConnectionManager(metaData.name));\n        this.events = events;\n        this.metadata = metaData;\n    }\n    openOKXWallet() {\n        var _a;\n        // if (this.openUniversalUrl){\n        (0, core_1.logDebug)('bridge-provider ==>> connect_5');\n        if ((_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.useMini) {\n            let url = (0, core_1.getTelegramWalletTWAUrl)(undefined, this.sessionConfig.tmaReturnUrl);\n            (0, core_1.openOKXTMAWalletlinkWithFallback)(url);\n        }\n        else {\n            (0, core_1.openOKXDeeplink)(core_1.standardDeeplink);\n        }\n        // }\n    }\n    syncAllAddress() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.send({\n                    method: \"sync_all_addresses\"\n                }, {\n                    resolve: (response) => {\n                        delete response.requestId;\n                        (0, core_1.logDebug)(\"clint syncAllAddress --response >\", JSON.stringify(response));\n                        if (('error' in response) && response.error) {\n                            let error = response.error;\n                            reject(new core_1.OKXConnectError(response.error.code, response.method + \":\" + error.message));\n                        }\n                        else {\n                            let allAddressStr = response.result;\n                            resolve((0, ConnectMethodUtils_1.syncResoonseToRequire)(allAddressStr));\n                        }\n                    }\n                }).catch((error) => {\n                    console.log(`disconnect : ${JSON.stringify(error)}`);\n                    reject(error);\n                });\n            });\n        });\n    }\n}\nexports.SignClient = SignClient;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.connectSupportMethods = void 0;\nexports.creatNotSupportMethodItemReplay = creatNotSupportMethodItemReplay;\nexports.connectMethodsAdaptOldVersion = connectMethodsAdaptOldVersion;\nexports.connectMethodsResponseUpdate = connectMethodsResponseUpdate;\nexports.connectMethodsToConnectWalletMethods = connectMethodsToConnectWalletMethods;\nexports.syncResoonseToRequire = syncResoonseToRequire;\nconst core_1 = require(\"@okxconnect/core\");\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst uint8array_extras_1 = require(\"uint8array-extras\");\nconst provider_1 = require(\"../../provider\");\nfunction isArray(value) {\n    return typeof value === \"object\" && value !== null && Array.isArray(value);\n}\nfunction isRecord(value) {\n    return typeof value === \"object\" && value !== null && !Array.isArray(value);\n}\n// \"wallet_addEthereumChain\",\n// \"solana_signMessage\",  There are risks\nexports.connectSupportMethods = Object.freeze([\n    \"personal_sign\",\n    \"sui_signMessage\",\n    \"sui_signPersonalMessage\",\n    \"btc_signMessage\",\n    \"aptos_signMessage\",\n    \"cosmos_signArbitrary\",\n    \"tron_signMessage\",\n    \"tron_signMessageV2\",\n    \"starknet_signMessage\",\n    \"sync_all_addresses\"\n]);\nfunction creatNotSupportMethodItemReplay(requestParams) {\n    let notSupportError = new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n    var errorItem = {\n        method: requestParams.method,\n        chainId: requestParams.chainId,\n        error: {\n            code: notSupportError.code,\n            message: notSupportError.message\n        },\n    };\n    return errorItem;\n}\nfunction connectMethodsAdaptOldVersion(requestParams, session) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b, _c, _d, _e;\n        try {\n            (0, core_1.logDebug)(\"connectMethodsAdaptOldVersion start params :\", JSON.stringify(requestParams));\n            let callBackParams = {};\n            if (requestParams.method === \"solana_signMessage\") {\n                let solAccount = (_a = session.namespaces[core_1.NameSpaceKeySOL]) === null || _a === void 0 ? void 0 : _a.accounts.filter(function (account1) {\n                    return account1.startsWith(requestParams.chainId);\n                })[0];\n                const solAddress = (0, provider_1.fromAccountToAddress)(solAccount);\n                if (requestParams.params && solAddress && \"message\" in requestParams.params) {\n                    let realMessage = requestParams.params.message;\n                    if (((_b = session.wallet) === null || _b === void 0 ? void 0 : _b.appName) == \"OKX Wallet\") {\n                        realMessage = bs58_1.default.encode((0, uint8array_extras_1.stringToUint8Array)(realMessage));\n                    }\n                    requestParams.params = {\n                        message: realMessage,\n                        \"pubkey\": solAddress\n                    };\n                    callBackParams = {\n                        publicKey: solAddress\n                    };\n                    (0, core_1.logDebug)(\"solana_signMessage account and address:\", JSON.stringify(solAccount), solAddress);\n                    (0, core_1.logDebug)(\"solana_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"sui_signMessage\" || requestParams.method === \"sui_signPersonalMessage\") {\n                if (\"message\" in requestParams.params && requestParams.params.message) {\n                    let suiMessage = JSON.parse(JSON.stringify(requestParams.params.message));\n                    let convertedArray = Object.values(suiMessage);\n                    let uint8Array = new Uint8Array(convertedArray);\n                    let decoder = new TextDecoder(\"utf8\");\n                    let b64encoded = btoa(decoder.decode(uint8Array));\n                    requestParams.params = {\n                        message: atob(b64encoded),\n                    };\n                    console.log(\"sui_signMessag suiMessagee suiMessageb64:>>>>\", JSON.stringify(requestParams.params), b64encoded);\n                    if (requestParams.method === \"sui_signMessage\") {\n                        callBackParams = {\n                            \"messageBytes\": b64encoded,\n                            \"signature\": \"\"\n                        };\n                    }\n                    else if (requestParams.method === \"sui_signPersonalMessage\") {\n                        callBackParams = {\n                            \"bytes\": b64encoded,\n                            \"signature\": \"\"\n                        };\n                    }\n                    (0, core_1.logDebug)(\"sui_signMessage/sui_signPersonalMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"btc_signMessage\") {\n                let btcAccounts = (_c = session.namespaces[core_1.NameSpaceKeyBtc]) === null || _c === void 0 ? void 0 : _c.accounts.filter(function (account2) {\n                    return account2.startsWith(requestParams.chainId);\n                });\n                let btcAccount = btcAccounts[0];\n                const btcAddress = (0, provider_1.fromAccountToAddress)(btcAccount);\n                (0, core_1.logDebug)(\"btc_signMessage account and address:\", JSON.stringify(btcAccount), btcAddress);\n                if (btcAddress) {\n                    if (\"message\" in requestParams.params && requestParams.params.message && typeof requestParams.params.message === 'string') {\n                        requestParams.params = {\n                            from: btcAddress,\n                            signStr: requestParams.params.message\n                        };\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                    }\n                    requestParams.params[\"from\"] = btcAddress;\n                    (0, core_1.logDebug)(\"btc_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"aptos_signMessage\") {\n                let paramData = requestParams.params;\n                let aptosAccount = (_d = session.namespaces[core_1.NameSpaceKeyAptos]) === null || _d === void 0 ? void 0 : _d.accounts.filter(function (account3) {\n                    return account3.startsWith(requestParams.chainId);\n                })[0];\n                let aptosAddress = (0, provider_1.fromAccountToAddress)(aptosAccount);\n                if (paramData && aptosAddress) {\n                    let prefix = \"APTOS\";\n                    let message = \"\", nonce = \"\";\n                    var fullMessage = prefix;\n                    let application = window.location.protocol + \"//\" + window.location.hostname;\n                    if (\"address\" in paramData && paramData.address) {\n                        fullMessage += \"\\naddress: \" + aptosAddress;\n                    }\n                    if (\"application\" in paramData && paramData.application) {\n                        fullMessage += \"\\napplication: \" + application;\n                    }\n                    let aptosChainId = 1;\n                    if (\"chainId\" in paramData && paramData.chainId) {\n                        if (paramData.chainId == \"aptos:mainnet\") {\n                            aptosChainId = 1;\n                        }\n                        else if (paramData.chainId == \"movement:testnet\") {\n                            aptosChainId = 2;\n                        }\n                        fullMessage += \"\\nchainId: \" + aptosChainId;\n                    }\n                    if (\"message\" in paramData) {\n                        fullMessage += \"\\nmessage: \" + paramData.message;\n                        message = paramData.message;\n                    }\n                    if (\"nonce\" in paramData) {\n                        fullMessage += \"\\nnonce: \" + paramData.nonce;\n                        nonce = paramData.nonce;\n                    }\n                    const utf8Array = new TextEncoder().encode(fullMessage);\n                    const hex = Array.from(utf8Array)\n                        .map(byte => byte.toString(16).padStart(2, \"0\"))\n                        .join(\"\");\n                    requestParams.params = {\n                        \"message\": hex,\n                    };\n                    (0, core_1.logDebug)(\"aptos_signMessage requestParams:\", JSON.stringify(requestParams));\n                    callBackParams = {\n                        address: aptosAddress,\n                        application: application,\n                        chainId: aptosChainId,\n                        fullMessage: fullMessage,\n                        message: message,\n                        nonce: nonce,\n                        prefix: prefix,\n                        signature: \"\",\n                    };\n                    (0, core_1.logDebug)(\"aptos_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"cosmos_signArbitrary\") {\n                let cosmosAccount = (_e = session === null || session === void 0 ? void 0 : session.namespaces[core_1.NameSpaceKeyCosmos]) === null || _e === void 0 ? void 0 : _e.accounts.filter(function (account_cosmos) {\n                    return account_cosmos.startsWith(requestParams.chainId);\n                })[0];\n                const cosmosAddress = (0, provider_1.fromAccountToAddress)(cosmosAccount);\n                let cosmosData = requestParams.params[\"message\"];\n                const cosmosBase64Encoded = (0, uint8array_extras_1.stringToBase64)(cosmosData);\n                (0, core_1.logDebug)(\"cosmos_signArbitrary account and address:\", JSON.stringify(cosmosAccount), cosmosAddress);\n                (0, core_1.logDebug)(\"cosmos_signArbitrary cosmosBase64Encoded:\", cosmosBase64Encoded);\n                if (cosmosData && cosmosAddress) {\n                    const signDoc = {\n                        chain_id: \"\",\n                        account_number: \"0\",\n                        sequence: \"0\",\n                        fee: {\n                            gas: \"0\",\n                            amount: []\n                        },\n                        msgs: [{\n                                \"type\": \"sign/MsgSignData\",\n                                \"value\": {\n                                    \"signer\": cosmosAddress,\n                                    \"data\": cosmosBase64Encoded\n                                }\n                            }],\n                        memo: \"\"\n                    };\n                    requestParams.params = {\n                        \"signer\": cosmosAddress,\n                        \"chain_id\": requestParams.chainId.split(\":\")[1],\n                        \"data\": signDoc\n                    };\n                    (0, core_1.logDebug)(\"cosmos_signArbitrary callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            (0, core_1.logDebug)(\"sol_handleSignatureData end params:\", JSON.stringify(requestParams));\n        }\n        catch (error) {\n            throw error;\n        }\n    });\n}\nfunction connectMethodsResponseUpdate(session, requestParams) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a;\n        try {\n            if (session.signResponse) {\n                (0, core_1.logDebug)(\"connectMethodsResponseUpdate signResponse:\", JSON.stringify(session.signResponse));\n                (0, core_1.logDebug)(\"connectMethodsResponseUpdate session.namespaces:\", JSON.stringify(session.namespaces));\n                for (const methodItem of session.signResponse) {\n                    (0, core_1.logDebug)(\"connectMethodsResponseUpdate methodItem:\", JSON.stringify(methodItem));\n                    if (\"result\" in methodItem) {\n                        if (methodItem.method === \"solana_signMessage\") {\n                            let solanaSuccessData = methodItem.result;\n                            (0, core_1.logDebug)(\"solana_signMessage methodItem.chainId:\", methodItem.chainId);\n                            let account = (_a = session.namespaces[core_1.NameSpaceKeySOL]) === null || _a === void 0 ? void 0 : _a.accounts.filter(function (account) {\n                                (0, core_1.logDebug)(\"solana_signMessage account:\", account);\n                                return account.startsWith(methodItem.chainId);\n                            })[0];\n                            (0, core_1.logDebug)(\"solana_signMessage result account:\", solanaSuccessData, account);\n                            if (solanaSuccessData && account) {\n                                methodItem.result = {\n                                    \"signature\": bs58_1.default.decode(solanaSuccessData),\n                                    \"publicKey\": (0, provider_1.fromAccountToAddress)(account)\n                                };\n                            }\n                        }\n                        else if (methodItem.method === \"sui_signMessage\" || methodItem.method === \"sui_signPersonalMessage\") {\n                            let suiMethod = requestParams.filter(function (requestMethod) {\n                                return requestMethod.method === methodItem.method;\n                            })[0];\n                            if (suiMethod && suiMethod.params && \"message\" in suiMethod.params) {\n                                let suiMessage = suiMethod.params.message;\n                                let suiMessageb64 = btoa(suiMessage);\n                                console.log(\"sui_signMessag suiMessagee suiMessageb64:>>>>\", suiMessage, suiMessageb64);\n                                if (methodItem.method === \"sui_signMessage\") {\n                                    methodItem.result = {\n                                        \"messageBytes\": suiMessageb64,\n                                        \"signature\": methodItem.result\n                                    };\n                                }\n                                else if (methodItem.method === \"sui_signPersonalMessage\") {\n                                    methodItem.result = {\n                                        \"bytes\": suiMessageb64,\n                                        \"signature\": methodItem.result\n                                    };\n                                }\n                            }\n                        }\n                        else if (methodItem.method === \"aptos_signMessage\") {\n                            if (methodItem.chainId === \"aptos:637\") {\n                                methodItem.chainId = \"aptos:mainnet\";\n                            }\n                            else if (methodItem.chainId === \"aptos:70000060\") {\n                                methodItem.chainId = \"movement:testnet\";\n                            }\n                            methodItem.result = JSON.parse(methodItem.result);\n                            console.log(\"aptos_signMessage result methodItem.result before:>>>>\", JSON.stringify(methodItem.result));\n                            if (methodItem.result && \"signature\" in methodItem.result) {\n                                let aptosSignature = methodItem.result.signature;\n                                if (aptosSignature && aptosSignature.startsWith(\"0x\")) {\n                                    aptosSignature = aptosSignature.slice(2, aptosSignature.length);\n                                    methodItem.result.signature = aptosSignature;\n                                }\n                            }\n                            console.log(\"aptos_signMessage result methodItem.result after:>>>>\", JSON.stringify(methodItem.result));\n                        }\n                        else if (methodItem.method === \"cosmos_signArbitrary\") {\n                            methodItem.result = JSON.parse(methodItem.result);\n                        }\n                        else if (methodItem.method == 'starknet_signMessage') {\n                            let results = methodItem.result;\n                            if (typeof results == 'string') {\n                                results = JSON.parse(results);\n                            }\n                            methodItem.result = [results[\"signedDataR\"], results[\"signedDataS\"]];\n                        }\n                        else if (methodItem.method == 'sync_all_addresses') {\n                            methodItem.result = syncResoonseToRequire(methodItem.result);\n                        }\n                    }\n                }\n            }\n        }\n        catch (error) {\n            (0, core_1.logDebug)(\"connectMethodsResponseUpdate signResponse Error:\", JSON.stringify(error));\n            throw error;\n        }\n    });\n}\nfunction connectMethodsToConnectWalletMethods(params, requireNameSpace) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            (0, core_1.logDebug)(\"connectMethodsToConnectWalletMethods requestMethods:\", JSON.stringify(params));\n            const result = [];\n            //TODO  后面需要打开限制\n            if (params && params.length > 1) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connectAndSign/openModalAndSign signRequest only support one data`);\n            }\n            if (!requireNameSpace && params && params.length > 0) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error , RequestMethods cannot be added when the NameSpace is empty`);\n            }\n            // check chianId\n            for (const methodItem of params) {\n                if (methodItem.method === \"aptos_signMessage\") { //update chainId\n                    if (methodItem.chainId === \"aptos:mainnet\") {\n                        methodItem.chainId = \"aptos:637\";\n                    }\n                    else if (methodItem.chainId === \"movement:testnet\") {\n                        methodItem.chainId = \"aptos:70000060\";\n                    }\n                }\n                // check chianId\n                if (methodItem.method === \"wallet_addEthereumChain\") {\n                    var includeEip155 = requireNameSpace === null || requireNameSpace === void 0 ? void 0 : requireNameSpace.some(space => space.namespace.includes(\"eip155\"));\n                    if (!includeEip155) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error, When using '${methodItem.method}', the EVM chain needs to be included in the NameSpace`);\n                    }\n                }\n                else if (methodItem.method === \"sync_all_addresses\") {\n                    if ((0, provider_1.syncAddressHostAvailable)()) {\n                        methodItem.chainId = \"\";\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                    }\n                }\n                else {\n                    const includeChain = !!(requireNameSpace === null || requireNameSpace === void 0 ? void 0 : requireNameSpace.some(space => space.chains.some(chain => chain.includes(`${methodItem.chainId}`))));\n                    if (!includeChain) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error, When using '${methodItem.method}', NameSpace must contain '${methodItem.chainId}'`);\n                    }\n                }\n            }\n            for (const item of params) {\n                if (!exports.connectSupportMethods.includes(item.method)) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect requestMethods not support method, method: '${item.method}'`);\n                }\n                if (item.method === \"wallet_addEthereumChain\") {\n                    if (Array.isArray(item.params)) {\n                        const paramsArr = item.params;\n                        if (paramsArr && paramsArr.length === 1) {\n                            const firstParam = paramsArr[0];\n                            if (isRecord(firstParam)) {\n                                item.params = firstParam;\n                            }\n                        }\n                        else if (paramsArr && paramsArr.length > 1) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params only support one data, method: '${item.method}'`);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is nil, method: '${item.method}'`);\n                        }\n                    }\n                }\n                else if (item.method === \"personal_sign\") {\n                    if (isArray(item.params)) {\n                        if (item.params && item.params.length !== 1) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params error,  method: '${item.method}' `);\n                        }\n                        let firstObj = item.params[0];\n                        if (firstObj && typeof firstObj === 'string') {\n                            item.params = {\n                                message: firstObj\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                }\n                else if (item.method === \"sui_signMessage\" || item.method === \"sui_signPersonalMessage\") {\n                    if (isRecord(item.params) && 'message' in item.params) {\n                        if (item.params.message) {\n                            (0, core_1.logDebug)(\"sui_signMessage item.params.message :\", item.params.message);\n                            let message = JSON.parse(JSON.stringify(item.params.message));\n                            let convertedArray = Object.values(message);\n                            let uint8Array = new Uint8Array(convertedArray);\n                            let decoder = new TextDecoder(\"utf8\");\n                            let b64encoded = btoa(decoder.decode(uint8Array));\n                            item.params.message = atob(b64encoded);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"solana_signMessage\") {\n                    if (isRecord(item.params) && 'message' in item.params) {\n                        if (item.params.message && typeof item.params.message === 'string') {\n                            item.params[\"bs58Message\"] = bs58_1.default.encode((0, uint8array_extras_1.stringToUint8Array)(item.params.message));\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"aptos_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (item.chainId && (item.chainId === \"aptos:637\" || item.chainId === \"aptos:70000060\")) {\n                            var aptosParams = item.params;\n                            var currentURL = window.location.protocol + \"//\" + window.location.hostname;\n                            let signChainId = 1;\n                            if (item.chainId === \"aptos:637\") {\n                            }\n                            else if (item.chainId === \"aptos:70000060\") {\n                                signChainId = 2;\n                            }\n                            item.params = {\n                                data: aptosParams,\n                                applicationUrl: currentURL,\n                                prefix: \"APTOS\",\n                                aptosChainId: signChainId\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params chainId is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"cosmos_signArbitrary\") {\n                    if (isRecord(item.params)) {\n                        if (item.params.message && typeof item.params.message === 'string') {\n                            const base64Encoded = (0, uint8array_extras_1.stringToBase64)(item.params.message);\n                            let cosmosChain = item.chainId.split(\":\")[1];\n                            if (cosmosChain) {\n                                item.params = {\n                                    chain_id: cosmosChain,\n                                    data: {\n                                        chain_id: \"\",\n                                        account_number: \"0\",\n                                        sequence: \"0\",\n                                        fee: {\n                                            gas: \"0\",\n                                            amount: []\n                                        },\n                                        msgs: [{\n                                                \"type\": \"sign/MsgSignData\",\n                                                \"value\": {\n                                                    \"signer\": \"\", //address\n                                                    \"data\": base64Encoded\n                                                }\n                                            }],\n                                        memo: \"\"\n                                    }\n                                };\n                            }\n                            else {\n                                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params chainId is error,  method: '${item.method}' `);\n                            }\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params message is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method == \"tron_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (\"message\" in item.params && item.params.message && typeof item.params.message === 'string') {\n                            item.params.message = stringToHex(item.params.message);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method == \"btc_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (\"message\" in item.params && item.params.message && typeof item.params.message === 'string') {\n                            item.params = {\n                                signStr: item.params.message\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                (0, core_1.logDebug)(\"connectMethodsToConnectWalletMethods item:\", JSON.stringify(item));\n                result.push(item);\n            }\n            return result;\n        }\n        catch (error) {\n            throw error;\n        }\n    });\n}\nfunction stringToHex(str) {\n    let hex = '';\n    for (let i = 0; i < str.length; i++) {\n        hex += str.charCodeAt(i).toString(16).padStart(2, '0');\n    }\n    return hex;\n}\nfunction syncResoonseToRequire(responseAddressStr) {\n    const allAddress = JSON.parse(responseAddressStr);\n    const result = {\n        type: allAddress.type,\n        isEvm: allAddress.isEvm,\n        walletName: allAddress.walletName,\n        deriveName: allAddress.deriveName,\n        addresses: allAddress.addresses.map((addr) => ({\n            coinId: addr.ci,\n            address: addr.a && addr.a !== 'null' ? addr.a : allAddress.evmAddress,\n        })),\n    };\n    return result;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.creatNotSupportMethodItemReplay = exports.connectMethodsAdaptOldVersion = void 0;\nvar ConnectMethodUtils_1 = require(\"./ConnectMethodUtils\");\nObject.defineProperty(exports, \"connectMethodsAdaptOldVersion\", { enumerable: true, get: function () { return ConnectMethodUtils_1.connectMethodsAdaptOldVersion; } });\nObject.defineProperty(exports, \"creatNotSupportMethodItemReplay\", { enumerable: true, get: function () { return ConnectMethodUtils_1.creatNotSupportMethodItemReplay; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAccountsChains = getAccountsChains;\nexports.nameSpaceToConnectWalletNameSpace = nameSpaceToConnectWalletNameSpace;\nexports.fillParamsToSession = fillParamsToSession;\nexports.isCaipNamespace = isCaipNamespace;\nexports.parseNamespaceKey = parseNamespaceKey;\nconst core_1 = require(\"@okxconnect/core\");\nfunction getAccountsChains(accounts) {\n    const chains = [];\n    accounts.forEach((account) => {\n        const [chain, chainId] = account.split(\":\");\n        chains.push(`${chain}:${chainId}`);\n    });\n    return chains;\n}\nfunction nameSpaceToConnectWalletNameSpace(namespaces) {\n    var result = [];\n    if (!namespaces) {\n        return result;\n    }\n    Object.keys(namespaces).forEach((key) => {\n        if (key === core_1.NameSpaceKeyEip155 || key === core_1.NameSpaceKeySOL || key === core_1.NameSpaceKeySui || key === core_1.NameSpaceKeyAptos\n            || key == core_1.NameSpaceKeyBtc || key === core_1.NameSpaceKeyTON || key === core_1.NameSpaceKeyCosmos || key === core_1.NameSpaceKeyTron || key === core_1.NameSpaceKeyStarknet) {\n            if (namespaces[key].chains) {\n                result.push({\n                    namespace: key,\n                    chains: namespaces[key].chains,\n                    params: namespaces[key].params\n                });\n            }\n        }\n    });\n    return result;\n}\nfunction fillParamsToSession(session, namespaces, optionalNamespaces, sessionConfig) {\n    // Helper function to merge rpcMaps\n    const mergeRpcMap = (targetRpcMap, sourceRpcMap) => {\n        Object.assign(targetRpcMap, sourceRpcMap);\n    };\n    // Merge function for namespaces\n    const mergeNamespaces = (target, source) => {\n        for (const key in source) {\n            if (source.hasOwnProperty(key) && source[key].rpcMap) {\n                if (source[key].rpcMap) {\n                    if (!target[key].rpcMap) {\n                        target[key].rpcMap = {};\n                    }\n                    // 合并 rpcMap\n                    mergeRpcMap(target[key].rpcMap, source[key].rpcMap);\n                }\n                if (source[key].defaultChain && target[key].defaultChain === undefined) {\n                    //defaultChain need in session nameSpace\n                    if (target[key].chains.some(chain => chain.split(\":\")[1] === source[key].defaultChain)) {\n                        target[key].defaultChain = source[key].defaultChain;\n                    }\n                }\n            }\n        }\n    };\n    // 合并 namespaces\n    if (namespaces) {\n        mergeNamespaces(session.namespaces, namespaces);\n    }\n    // 合并 optionalNamespaces\n    if (optionalNamespaces) {\n        mergeNamespaces(session.namespaces, optionalNamespaces);\n    }\n    for (const key in session.namespaces) {\n        const namespace = session.namespaces[key];\n        if (!(namespace === null || namespace === void 0 ? void 0 : namespace.accounts) || namespace.accounts.length === 0) {\n            delete session.namespaces[key];\n        }\n    }\n    session.sessionConfig = sessionConfig;\n}\n/**\n * util designed for Wallets that builds namespaces structure by provided supported chains, methods, events & accounts.\n * It takes required & optional namespaces provided in the session proposal\n * along with the supported chains/methods/events/accounts by the wallet and returns a structured namespaces object\n * @param {BuildApprovedNamespacesParams} params\n * @returns {SessionTypes.Namespaces}\n */\n// export function buildApprovedNamespaces(\n//   params: BuildApprovedNamespacesParams,\n// ): SessionTypes.Namespaces {\n//   const {\n//     proposal: { requiredNamespaces, optionalNamespaces = {} },\n//     supportedNamespaces,\n//   } = params;\n//   const normalizedRequired = normalizeNamespaces(requiredNamespaces);\n//   const normalizedOptional = normalizeNamespaces(optionalNamespaces);\n//\n//   // build approved namespaces\n//   const namespaces = {};\n//   Object.keys(supportedNamespaces).forEach((namespace) => {\n//     const supportedChains = supportedNamespaces[namespace].chains;\n//     const supportedMethods = supportedNamespaces[namespace].methods;\n//     const supportedEvents = supportedNamespaces[namespace].events;\n//     const supportedAccounts = supportedNamespaces[namespace].accounts;\n//\n//     supportedChains.forEach((chain) => {\n//       if (!supportedAccounts.some((account) => account.includes(chain))) {\n//         throw new Error(`No accounts provided for chain ${chain} in namespace ${namespace}`);\n//       }\n//     });\n//\n//     namespaces[namespace] = {\n//       chains: supportedChains,\n//       methods: supportedMethods,\n//       events: supportedEvents,\n//       accounts: supportedAccounts,\n//     };\n//   });\n//\n//   // verify all required namespaces are supported\n//   const err = isConformingNamespaces(requiredNamespaces, namespaces, \"approve()\");\n//   if (err) throw new Error(err.message);\n//\n//   const approvedNamespaces = {};\n//\n//   // if both required & optional namespaces are empty, return all supported namespaces by the wallet\n//   if (!Object.keys(requiredNamespaces).length && !Object.keys(optionalNamespaces).length)\n//     return namespaces;\n//\n//   // assign accounts for the required namespaces\n//   Object.keys(normalizedRequired).forEach((requiredNamespace) => {\n//     const chains = supportedNamespaces[requiredNamespace].chains.filter((chain) =>\n//       normalizedRequired[requiredNamespace]?.chains?.includes(chain),\n//     );\n//     const methods = supportedNamespaces[requiredNamespace].methods.filter((method) =>\n//       normalizedRequired[requiredNamespace]?.methods?.includes(method),\n//     );\n//     const events = supportedNamespaces[requiredNamespace].events.filter((event) =>\n//       normalizedRequired[requiredNamespace]?.events?.includes(event),\n//     );\n//\n//     const accounts = chains\n//       .map((chain: string) =>\n//         supportedNamespaces[requiredNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[requiredNamespace] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   });\n//\n//   // add optional namespaces\n//   Object.keys(normalizedOptional).forEach((optionalNamespace) => {\n//     if (!supportedNamespaces[optionalNamespace]) return;\n//\n//     const chainsToAdd = normalizedOptional[optionalNamespace]?.chains?.filter((chain) =>\n//       supportedNamespaces[optionalNamespace].chains.includes(chain),\n//     );\n//     const methodsToAdd = supportedNamespaces[optionalNamespace].methods.filter((method) =>\n//       normalizedOptional[optionalNamespace]?.methods?.includes(method),\n//     );\n//     const eventsToAdd = supportedNamespaces[optionalNamespace].events.filter((event) =>\n//       normalizedOptional[optionalNamespace]?.events?.includes(event),\n//     );\n//\n//     const accountsToAdd = chainsToAdd\n//       ?.map((chain: string) =>\n//         supportedNamespaces[optionalNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[optionalNamespace] = {\n//       chains: mergeArrays(approvedNamespaces[optionalNamespace]?.chains, chainsToAdd),\n//       methods: mergeArrays(approvedNamespaces[optionalNamespace]?.methods, methodsToAdd),\n//       events: mergeArrays(approvedNamespaces[optionalNamespace]?.events, eventsToAdd),\n//       accounts: mergeArrays(approvedNamespaces[optionalNamespace]?.accounts, accountsToAdd),\n//     };\n//   });\n//\n//   return approvedNamespaces;\n// }\nfunction isCaipNamespace(namespace) {\n    return namespace.includes(\":\");\n}\nfunction parseNamespaceKey(namespace) {\n    return isCaipNamespace(namespace) ? namespace.split(\":\")[0] : namespace;\n}\n/**\n * Converts\n * ```\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * ```\n * into\n * ```\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *```\n */\n// export function normalizeNamespaces(\n//   namespaces: ProposalTypes.RequiredNamespaces,\n// ): ProposalTypes.RequiredNamespaces {\n//   const normalizedNamespaces = {} as ProposalTypes.RequiredNamespaces;\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       methods: mergeArrays(methods, normalizedNamespaces[normalizedKey]?.methods),\n//       events: mergeArrays(events, normalizedNamespaces[normalizedKey]?.events),\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n// export function getNamespacesFromAccounts(accounts: string[]) {\n//   const namespaces = {};\n//   accounts?.forEach((account) => {\n//     const [namespace, chainId] = account.split(\":\");\n//     if (!namespaces[namespace]) {\n//       namespaces[namespace] = {\n//         accounts: [],\n//         chains: [],\n//         events: [],\n//       };\n//     }\n//     namespaces[namespace].accounts.push(account);\n//     namespaces[namespace].chains.push(`${namespace}:${chainId}`);\n//   });\n//\n//   return namespaces;\n// }\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PROVIDER_EVENTS = void 0;\nexports.PROVIDER_EVENTS = {\n    DEFAULT_CHAIN_CHANGED: \"default_chain_changed\",\n    UPDATE_NAMESPACES: \"update_name_spaces\",\n    SESSION_CONNECTING: \"session_connecting\"\n};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./values\"), exports);\n__exportStar(require(\"./events\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GENERIC_SUBPROVIDER_NAME = exports.RPC_URL = exports.STORAGE = exports.CONTEXT = exports.WC_VERSION = exports.PROTOCOL = exports.RELAY_URL = exports.LOGGER = void 0;\nexports.LOGGER = \"error\";\nexports.RELAY_URL = \"wss://relay.walletconnect.com\";\nexports.PROTOCOL = \"wc\";\nexports.WC_VERSION = 2;\nexports.CONTEXT = \"universal_provider\";\nexports.STORAGE = `${exports.PROTOCOL}@${exports.WC_VERSION}:${exports.CONTEXT}:`;\nexports.RPC_URL = \"https://rpc.walletconnect.com/v1/\";\nexports.GENERIC_SUBPROVIDER_NAME = \"generic\";\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./types\"), exports);\n__exportStar(require(\"./utils\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass AptosProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"aptos\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"solana request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"solana provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = AptosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass BtcProvider {\n    constructor(opts, name, client, events) {\n        this.name = core_1.NameSpaceKeyBtc;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"btc request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"btc provider namespace: \", JSON.stringify(this.namespace));\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = BtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass CosmosProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyCosmos;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"cosmos request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"cosmos provider namespace: \", JSON.stringify(this.namespace));\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = CosmosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Eip155Provider = void 0;\nconst utils_1 = require(\"../utils\");\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nclass Eip155Provider {\n    constructor(opts, client, events) {\n        this.name = \"eip155\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = parseInt(this.getDefaultChain());\n        // rpc\n        this.httpProviders = this.createHttpProviders();\n        (0, core_1.logDebug)(\"eip155 constructor --opts.namespace-->\", opts.namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    isArray(value) {\n        return typeof value === \"object\" && value !== null && Array.isArray(value);\n    }\n    updateRequestParams(args) {\n        let isDic = args.params && typeof args.params === 'object' && !Array.isArray(args.params);\n        if (args.method === 'wallet_switchEthereumChain') {\n            const switchChainId = args.chainId.split(\":\")[1];\n            // const hexChainId = parseInt(switchChainId, 16);\n            const decimalNumber = parseInt(switchChainId, 10);\n            if (isNaN(decimalNumber)) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid decimal number,  chainId: '${switchChainId}' `);\n            }\n            if (!args.params) {\n                args.params = { chainId: '0x' + decimalNumber.toString(16) };\n            }\n            else if (isDic) { //为 Record<string, unknown>\n                let params = args.params;\n                if (!('chainId' in params)) {\n                    params['chainId'] = '0x' + decimalNumber.toString(16);\n                    args.params = params;\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params error ,  method: '${args.method}' `);\n            }\n        }\n        else if (args.method === 'personal_sign'\n            || args.method === 'eth_signTypedData_v4'\n            || args.method === 'eth_sendTransaction'\n            || args.method === 'wallet_watchAsset') {\n            if (!args.params) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params is nil, method: '${args.method}'`);\n            }\n            if (this.isRecord(args.params)) {\n                let params = args.params;\n                (0, core_1.logDebug)(\"eip155 updateRequestParams params>\", JSON.stringify(params));\n                if ('chainId' in params) {\n                    const selectedChainId = args.chainId.split(\":\")[1];\n                    const chainNum = parseInt(selectedChainId, 10);\n                    let paramsChainString = String(params.chainId);\n                    let paramsChainId;\n                    if (paramsChainString.startsWith(this.name) && args.chainId === paramsChainString) { //为\n                        paramsChainId = chainNum;\n                    }\n                    else if (paramsChainString.startsWith(\"0x\")) {\n                        paramsChainId = parseInt(paramsChainString, 16);\n                    }\n                    else if (!isNaN(Number(paramsChainString))) { //数字\n                        paramsChainId = parseInt(paramsChainString, 10);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid params.chainId format, method: '${args.method}'`);\n                    }\n                    if (chainNum !== paramsChainId) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params.chainId not equal chain,  method: '${args.method}' `);\n                    }\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid request params type, method: '${args.method}'`);\n            }\n        }\n    }\n    //adapt array\n    adaptArray(args) {\n        if (args.method === 'wallet_switchEthereumChain'\n            || args.method === 'wallet_addEthereumChain'\n            || args.method === 'wallet_watchAsset'\n            || args.method === 'eth_sendTransaction') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr) {\n                    if (paramsArr.length === 1) {\n                        let firstParam = args.params[0];\n                        if (this.isRecord(firstParam)) {\n                            args.params = firstParam;\n                        }\n                    }\n                    else if (paramsArr.length > 1) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                    }\n                }\n            }\n        }\n        else if (args.method === 'eth_signTypedData_v4') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr && paramsArr.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                }\n                else if (paramsArr && paramsArr.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let messageObj = {};\n                if (paramsArr && paramsArr.length === 2) {\n                    let addressObj = args.params[0]; //address\n                    if (addressObj && typeof addressObj === 'string') { //check address\n                        let isEqual = false;\n                        this.namespace.accounts.forEach((account) => {\n                            let chainAddress = (0, utils_1.fromAccountToAddress)(account);\n                            if (chainAddress.toLowerCase() === addressObj.toLowerCase()) {\n                                isEqual = true;\n                            }\n                        });\n                        (0, core_1.logDebug)(\"eip155 adaptArray eth_signTypedData_v4 >>>isEqual: \", isEqual);\n                        if (!isEqual) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error, not equal,  method: '${args.method}' `);\n                        }\n                        if (this.isRecord(args.params[1])) {\n                            messageObj = args.params[1];\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error , not string,  method: '${args.method}' `);\n                    }\n                }\n                else if (paramsArr && paramsArr.length === 1) {\n                    if (this.isRecord(args.params[0])) {\n                        messageObj = args.params[0];\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                    }\n                }\n                try {\n                    let messages = JSON.stringify(messageObj);\n                    args.params = {\n                        typedDataJson: messages\n                    };\n                }\n                catch (err) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params call JSON.stringify() failed,  method: '${args.method}' `);\n                }\n            }\n        }\n        else if (args.method === 'personal_sign') {\n            if (this.isArray(args.params)) {\n                if (args.params && args.params.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params error,  method: '${args.method}' `);\n                }\n                else if (args.params && args.params.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let firstObj = args.params[0];\n                let secondObj = args.params[1];\n                if (secondObj && typeof secondObj === 'string') { //check address\n                    let isEqual = false;\n                    this.namespace.accounts.forEach((account) => {\n                        let chainAddress = (0, utils_1.fromAccountToAddress)(account);\n                        if (chainAddress.toLowerCase() === secondObj.toLowerCase()) {\n                            isEqual = true;\n                        }\n                    });\n                    (0, core_1.logDebug)(\"eip155 adaptArray personal_sign >>>isEqual: \", isEqual);\n                    if (!isEqual) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error,  method: '${args.method}' `);\n                    }\n                }\n                if (firstObj && typeof firstObj === 'string') {\n                    args.params = {\n                        message: firstObj\n                    };\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is error,  method: '${args.method}' `);\n                }\n            }\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"eth_requestAccounts\":\n            case \"eth_accounts\":\n            case \"eth_chainId\":\n                return false;\n            case \"eth_sendTransaction\":\n            case \"eth_signTransaction\":\n            case \"eth_sign\":\n            case \"personal_sign\":\n            case \"eth_signTypedData\":\n            case \"wallet_addEthereumChain\":\n            case \"wallet_watchAsset\":\n            case \"eth_signTypedData_v4\":\n                return true;\n            case \"wallet_switchEthereumChain\": {\n                this.adaptArray(args);\n                this.updateRequestParams(args);\n                const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n                return !this.isChainApproved(parsedChainId);\n            }\n            default:\n                return false;\n        }\n        return false;\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.adaptArray(args);\n            (0, core_1.logDebug)(\"eip155 request --args--string>\", JSON.stringify(args));\n            this.updateRequestParams(args);\n            (0, core_1.logDebug)(\"eip155 request --params--string>\", JSON.stringify(args));\n            switch (args.method) {\n                case \"eth_requestAccounts\":\n                    return this.getAccounts();\n                case \"eth_accounts\":\n                    return this.getAccounts();\n                case \"eth_chainId\":\n                    return parseInt(this.getDefaultChain());\n                case \"wallet_switchEthereumChain\": {\n                    return (yield this.handleSwitchChain(args));\n                }\n                case \"wallet_addEthereumChain\":\n                    return this.addEthereumChain(args);\n                default:\n                    break;\n            }\n            if (this.namespace.methods.includes(args.method)) {\n                // personal_sign\n                // eth_signTypedData_v4\n                // eth_sendTransaction\n                // wallet_watchAsset\n                try {\n                    const response = yield this.client.request(args);\n                    (0, core_1.logDebug)(\"eip155 request --response----string>\", JSON.stringify(response));\n                    if (this.isRecord(response)) {\n                        if ('result' in response) {\n                            let result = response.result;\n                            if (result && typeof result === 'string' && (result === \"true\" || result === \"false\")) {\n                                (0, core_1.logDebug)(\"eip155 request --wallet_watchAsset>>>>\", result === \"true\");\n                                return (result === \"true\");\n                            }\n                            return response.result;\n                        }\n                    }\n                    return response;\n                }\n                catch (e) {\n                    (0, core_1.logDebug)(`eip155 request --response --error--string> e instanceof OKXConnectError ${e instanceof core_1.OKXConnectError}`, JSON.stringify(e));\n                    throw e;\n                }\n            }\n            else {\n                (0, core_1.logDebug)('[RPC] request begin');\n                return yield this.getHttpProvider().request(args);\n            }\n        });\n    }\n    addEthereumChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let resultData = (yield this.client.request(args));\n            try {\n                if ('result' in resultData) {\n                    let successData = resultData;\n                    let account = resultData.result;\n                    if (account) {\n                        const nameSpace = account.split(\":\")[0];\n                        const chainId = account.split(\":\")[1];\n                        const chain = nameSpace + ':' + chainId;\n                        let newNameSpace = this.namespace;\n                        this.namespace.accounts.push(account);\n                        this.namespace.chains.push(chain);\n                        if (this.isRecord(args.params)) {\n                            if (\"rpcUrls\" in args.params) {\n                                let rpcUrls = args.params.rpcUrls;\n                                let rpcUrl = rpcUrls ? rpcUrls[0] : undefined;\n                                if (rpcUrl) {\n                                    if (this.namespace.rpcMap) {\n                                        this.namespace.rpcMap[chainId] = rpcUrl;\n                                    }\n                                    else {\n                                        this.namespace.rpcMap = {\n                                            [chainId]: rpcUrl\n                                        };\n                                    }\n                                    this.setHttpProvider(chainId, rpcUrl);\n                                }\n                            }\n                        }\n                        this.events.emit(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, {\n                            eip155: this.namespace\n                        });\n                    }\n                }\n                else {\n                    new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request error`);\n                }\n            }\n            catch (error) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request  error`);\n            }\n            return null;\n        });\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        this.chainId = parseInt(chainId);\n        // set rpc\n        if (!this.httpProviders[chainId]) {\n            const rpc = rpcUrl || (0, utils_1.getRpcUrl)(`${this.name}:${chainId}`, this.namespace);\n            if (!rpc) {\n                // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n                (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            }\n            else {\n                this.setHttpProvider(chainId, rpc);\n            }\n        }\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId.toString();\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // ---------- Private ----------------------------------------------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"eip155 getAccounts \", accounts, this.chainId);\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => {\n                return (0, utils_1.fromAccountToAddress)(account);\n            })),\n        ];\n    }\n    getHexChainIdFromRequest(args) {\n        let params = args.params;\n        let hexChainId = \"0x0\";\n        if (params && \"chainId\" in params) {\n            hexChainId = params.chainId;\n        }\n        hexChainId = hexChainId.startsWith(\"0x\") ? hexChainId : `0x${hexChainId}`;\n        (0, core_1.logDebug)(\"handleSwitchChain -->args \", args);\n        (0, core_1.logDebug)(\"handleSwitchChain -->hexChainId \", hexChainId);\n        const parsedChainId = parseInt(hexChainId, 16);\n        (0, core_1.logDebug)(\"handleSwitchChain -->parsedChainId \", parsedChainId);\n        return { parsedChainId, hexChainId };\n    }\n    handleSwitchChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n            if (this.isChainApproved(parsedChainId)) {\n                this.setDefaultChain(`${parsedChainId}`);\n            }\n            else {\n                const resultData = (yield this.client.request({\n                    method: \"wallet_switchEthereumChain\",\n                    chainId: args.chainId,\n                    params: {\n                        chainId: hexChainId,\n                    },\n                }));\n                try {\n                    if ('result' in resultData) {\n                        let successData = resultData;\n                        let account = resultData.result;\n                        if (account) {\n                            const nameSpace = account.split(\":\")[0];\n                            const chainId = account.split(\":\")[1];\n                            const chain = nameSpace + ':' + chainId;\n                            let newNameSpace = this.namespace;\n                            this.namespace.accounts.push(account);\n                            this.namespace.chains.push(chain);\n                            (0, core_1.logDebug)(\"handleSwitchChain -->wallet_switchEthereumChain \", resultData);\n                            this.setDefaultChain(`${parsedChainId}`);\n                            this.events.emit(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, {\n                                eip155: this.namespace\n                            });\n                        }\n                    }\n                    else {\n                        new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request error`);\n                    }\n                }\n                catch (error) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request  error`);\n                }\n            }\n            return null;\n        });\n    }\n    isChainApproved(chainId) {\n        return this.namespace.chains.includes(`${this.name}:${chainId}`);\n    }\n    // rpc\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            //   throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            (0, core_1.logDebug)('get parsed chain and rpc:', parsedChainId, parsedRpc);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        (0, core_1.logDebug)('get http providermap:', http);\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n}\nexports.Eip155Provider = Eip155Provider;\nexports.default = Eip155Provider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcConnection = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nconst DEFAULT_HTTP_HEADERS = {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n};\nconst DEFAULT_HTTP_METHOD = \"POST\";\nconst DEFAULT_FETCH_OPTS = {\n    headers: DEFAULT_HTTP_HEADERS,\n    method: DEFAULT_HTTP_METHOD,\n};\n// Source: https://nodejs.org/api/events.html#emittersetmaxlistenersn\nconst EVENT_EMITTER_MAX_LISTENERS_DEFAULT = 10;\nclass JsonRpcConnection {\n    constructor(url, disableProviderPing = false) {\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n        this.events = new eventemitter3_1.EventEmitter();\n        this.isAvailable = false;\n        this.registering = false;\n        if (!(0, core_2.isHttpUrl)(url)) {\n            throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n        }\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n    }\n    get connected() {\n        return this.isAvailable;\n    }\n    get connecting() {\n        return this.registering;\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            yield this.register(url);\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                throw new Error(\"Connection already closed\");\n            }\n            this.onClose();\n        });\n    }\n    send(payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                yield this.register();\n            }\n            try {\n                const body = (0, core_1.safeJsonStringify)(payload);\n                const res = yield (0, cross_fetch_1.default)(this.url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                const data = yield res.json();\n                this.onPayload({ data });\n            }\n            catch (e) {\n                this.onError(payload.id, e);\n            }\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    register() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            if (!(0, core_2.isHttpUrl)(url)) {\n                throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n            }\n            if (this.registering) {\n                return new Promise((resolve, reject) => {\n                    this.events.once(\"register_error\", (error) => {\n                        reject(error);\n                    });\n                    this.events.once(\"open\", () => {\n                        if (typeof this.isAvailable === \"undefined\") {\n                            return reject(new Error(\"HTTP connection is missing or invalid\"));\n                        }\n                        resolve();\n                    });\n                });\n            }\n            this.url = url;\n            this.registering = true;\n            try {\n                if (!this.disableProviderPing) {\n                    const body = (0, core_1.safeJsonStringify)({ id: 1, jsonrpc: \"2.0\", method: \"test\", params: [] });\n                    yield (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                }\n                this.onOpen();\n            }\n            catch (e) {\n                const error = this.parseError(e);\n                this.events.emit(\"register_error\", error);\n                this.onClose();\n                throw error;\n            }\n        });\n    }\n    onOpen() {\n        this.isAvailable = true;\n        this.registering = false;\n        this.events.emit(\"open\");\n    }\n    onClose() {\n        this.isAvailable = false;\n        this.registering = false;\n        this.events.emit(\"close\");\n    }\n    onPayload(e) {\n        if (typeof e.data === \"undefined\")\n            return;\n        const payload = typeof e.data === \"string\" ? (0, core_1.safeJsonParse)(e.data) : e.data;\n        this.events.emit(\"payload\", payload);\n    }\n    onError(id, e) {\n        const error = this.parseError(e);\n        const message = error.message || error.toString();\n        const payload = (0, core_2.formatJsonRpcError)(id, message);\n        this.events.emit(\"payload\", payload);\n    }\n    parseError(e, url = this.url) {\n        return (0, core_2.parseConnectionError)(e, url, \"HTTP\");\n    }\n}\nexports.JsonRpcConnection = JsonRpcConnection;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcProvider = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst types_1 = require(\"../../types\");\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nclass JsonRpcProvider extends types_1.IJSONRpcProvider {\n    constructor(connection) {\n        super(connection);\n        this.events = new eventemitter3_1.EventEmitter();\n        this.connected = false;\n        this.connecting = false;\n        this.hasRegisteredEventListeners = false;\n        this.connection = this.setConnection(connection);\n        if (this.connection.connected) {\n            this.registerEventListeners();\n        }\n    }\n    connect() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            yield this.open(connection);\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.close();\n        });\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    request(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.requestStrict((0, core_1.formatJsonRpcRequest)(request.method, request.params || [], (0, core_1.getBigIntRpcId)().toString()), // casting to any is required in order to use BigInt as rpcId\n            context);\n        });\n    }\n    // ---------- Protected ----------------------------------------------- //\n    requestStrict(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                if (!this.connection.connected) {\n                    try {\n                        yield this.open();\n                    }\n                    catch (e) {\n                        reject(e);\n                    }\n                }\n                this.events.on(`${request.id}`, (response) => {\n                    if ((0, core_1.isJsonRpcError)(response)) {\n                        reject(response.error);\n                    }\n                    else {\n                        resolve(response.result);\n                    }\n                });\n                try {\n                    (0, core_2.logDebug)('[RPC] >>> send request', request, context);\n                    yield this.connection.send(request, context);\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }));\n        });\n    }\n    setConnection(connection = this.connection) {\n        return connection;\n    }\n    onPayload(payload) {\n        this.events.emit(\"payload\", payload);\n        if ((0, core_1.isJsonRpcResponse)(payload)) {\n            this.events.emit(`${payload.id}`, payload);\n        }\n        else {\n            this.events.emit(\"message\", {\n                type: payload.method,\n                data: payload.params,\n            });\n        }\n    }\n    onClose(event) {\n        // Code 3000 indicates an abnormal closure signalled by the relay -> emit an error in this case.\n        if (event && event.code === 3000) {\n            this.events.emit(\"error\", new Error(`WebSocket connection closed abnormally with code: ${event.code} ${event.reason ? `(${event.reason})` : \"\"}`));\n        }\n        this.events.emit(\"disconnect\");\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            if (this.connection === connection && this.connection.connected)\n                return;\n            if (this.connection.connected)\n                this.close();\n            if (typeof connection === \"string\") {\n                yield this.connection.open(connection);\n                connection = this.connection;\n            }\n            this.connection = this.setConnection(connection);\n            yield this.connection.open();\n            this.registerEventListeners();\n            this.events.emit(\"connect\");\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.connection.close();\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    registerEventListeners() {\n        if (this.hasRegisteredEventListeners)\n            return;\n        this.connection.on(\"payload\", (payload) => this.onPayload(payload));\n        this.connection.on(\"close\", (event) => this.onClose(event));\n        this.connection.on(\"error\", (error) => this.events.emit(\"error\", error));\n        this.connection.on(\"register_error\", (_error) => this.onClose());\n        this.hasRegisteredEventListeners = true;\n    }\n}\nexports.JsonRpcProvider = JsonRpcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SolanaProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SolanaProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"solana\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"solana request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"solana provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    //   {\n    //     \"chains\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\" ],\n    //     \"accounts\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp:F7wnJc5wiBGy1k87jv6gyNwE3jMEWd18oTQiYsF1xVG7\"],\n    //     \"methods\": [\n    //         \"solana_signTransaction\",\n    //         \"solana_signMessage\"\n    //     ],\n    //     \"defaultChain\": \"5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\"\n    // }\n    // TODO:确认上面的defaultChain是否正确（没有solana前缀）\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"solana\"))) {\n                chainId = `solana:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.SolanaProvider = SolanaProvider;\nexports.default = SolanaProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass StarknetProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"starknet\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"starknet request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"starknet provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Wallet doesn't support\" + args.method);\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = StarknetProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SuiProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SuiProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeySui;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"sui request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"sui provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"sui\"))) {\n                chainId = `sui:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"sui_signMessage\":\n            case \"sui_signPersonalMessage\":\n            case \"sui_signTransactionBlock\":\n            case \"sui_signAndExecuteTransactionBlock\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.SuiProvider = SuiProvider;\nexports.default = SuiProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass TONProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyTON;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            (0, core_1.logDebug)(\"TONProvider request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"TONProvider request provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                if (!args.params) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params is nil\");\n                }\n                if (this.isRecord(args.params)) {\n                    const _e = args.params, { validUntil } = _e, newParams = __rest(_e, [\"validUntil\"]);\n                    let fromAddress = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n                    if ('from' in newParams) {\n                        fromAddress = newParams.from || ((_d = (_c = this.namespace.payload) === null || _c === void 0 ? void 0 : _c.ton_addr) === null || _d === void 0 ? void 0 : _d.address);\n                    }\n                    args.params['from'] = fromAddress;\n                    args.params['network'] = this.getDefaultChain();\n                    args.params['valid_until'] = validUntil;\n                    let response = yield this.client.request(args);\n                    if (this.isRecord(response) && 'result' in response) {\n                        const result = {\n                            boc: response.result.toString()\n                        };\n                        (0, core_1.logDebug)(\"TONProvider request provider response: \", JSON.stringify(response));\n                        (0, core_1.logDebug)(\"TONProvider request provider result: \", JSON.stringify(result));\n                        return result;\n                    }\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton_send request response is nil\");\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params type add nil\");\n                }\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        var _a, _b;\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"ton getAccounts accounts :\", accounts);\n        (0, core_1.logDebug)(\"ton getAccounts .namespace :\", JSON.stringify(this.namespace));\n        if (!accounts) {\n            return [];\n        }\n        let address = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n        (0, core_1.logDebug)(\"ton getAccounts address :\", address);\n        if (address) {\n            return [\n                address\n            ];\n        }\n        return [];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"ton_sendTransaction\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.default = TONProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass TronProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyTron;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"tron request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"tron provider namespace: \", JSON.stringify(this.namespace));\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = TronProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./providers\"), exports);\n__exportStar(require(\"./misc\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IJSONRpcProvider = exports.IJSONRpcConnection = void 0;\nclass IJSONRpcConnection {\n}\nexports.IJSONRpcConnection = IJSONRpcConnection;\nclass IJSONRpcProvider {\n    constructor(opt) {\n    }\n}\nexports.IJSONRpcProvider = IJSONRpcProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setGlobal = exports.getGlobal = void 0;\nconst globals = {};\nconst getGlobal = (key) => {\n    return globals[key];\n};\nexports.getGlobal = getGlobal;\nconst setGlobal = (key, value) => {\n    globals[key] = value;\n};\nexports.setGlobal = setGlobal;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./misc\"), exports);\n__exportStar(require(\"./globals\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRpcUrl = getRpcUrl;\nexports.getChainId = getChainId;\nexports.fromAccountToAddress = fromAccountToAddress;\nexports.convertChainIdToNumber = convertChainIdToNumber;\nexports.parseChainId = parseChainId;\nexports.mergeArrays = mergeArrays;\nexports.syncAddressAvailable = syncAddressAvailable;\nexports.syncAddressHostAvailable = syncAddressHostAvailable;\nconst core_1 = require(\"@okxconnect/core\");\nfunction getRpcUrl(chainId, rpc, projectId) {\n    var _a;\n    const chain = parseChainId(chainId);\n    // no default\n    return (((_a = rpc.rpcMap) === null || _a === void 0 ? void 0 : _a[chain.reference]) ||\n        ``);\n}\nfunction getChainId(chain) {\n    return chain.includes(\":\") ? chain.split(\":\")[1] : chain;\n}\nfunction fromAccountToAddress(account) {\n    if (!account) {\n        return \"\";\n    }\n    try {\n        let addressArr = account.split(\":\").slice(2);\n        let address = addressArr.length > 0 ? addressArr.join(\":\") : \"\";\n        (0, core_1.logDebug)(\"fromAccountToAddress address and account:\", address, account);\n        return address;\n    }\n    catch (e) {\n        (0, core_1.logError)(\"fromAccountToAddress error:\", account);\n        return \"\";\n    }\n}\n// export function validateChainApproval(chain: string, chains: string[]): void {\n//   if (!chains.includes(chain)) {\n//     throw new Error(\n//       `Chain '${chain}' not approved. Please use one of the following: ${chains.toString()}`,\n//     );\n//   }\n// }\n// export function getChainsFromApprovedSession(accounts: string[]): string[] {\n//   return accounts.map((address) => `${address.split(\":\")[0]}:${address.split(\":\")[1]}`);\n// }\n// export function getAccountsFromSession(namespace: string, session: SessionTypes.Struct): string[] {\n//   // match namespaces e.g. eip155 with eip155:1\n//   const matchedNamespaceKeys = Object.keys(session.namespaces).filter((key) =>\n//     key.includes(namespace),\n//   );\n//   if (!matchedNamespaceKeys.length) return [];\n//   const accounts: string[] = [];\n//   matchedNamespaceKeys.forEach((key) => {\n//     const accountsForNamespace = session.namespaces[key].accounts;\n//     accounts.push(...accountsForNamespace);\n//   });\n//   return accounts;\n// }\n// export function mergeRequiredOptionalNamespaces(\n//   required: NamespaceConfig = {},\n//   optional: NamespaceConfig = {},\n// ){\n//   const requiredNamespaces = normalizeNamespaces(required);\n//   const optionalNamespaces = normalizeNamespaces(optional);\n//    return merge.merge(requiredNamespaces,optionalNamespaces)\n// }\n/**\n * Converts\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * into\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *\n */\n// export function normalizeNamespaces(namespaces: NamespaceConfig): NamespaceConfig {\n//   const normalizedNamespaces: NamespaceConfig = {};\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const rpcMap = values.rpcMap || {};\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       ...values,\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       rpcMap: { ...rpcMap, ...normalizedNamespaces[normalizedKey]?.rpcMap },\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n//\n// export function parseCaip10Account(caip10Account: string): string {\n//   return caip10Account.includes(\":\") ? caip10Account.split(\":\")[2] : caip10Account;\n// }\n/**\n * Populates the chains array for each namespace with the chains extracted from the accounts if are otherwise missing\n */\n// export function populateNamespacesChains(\n//   namespaces: SessionTypes.Namespaces,\n// ): Record<string, SessionTypes.Namespace> {\n//   const parsedNamespaces: Record<string, SessionTypes.Namespace> = {};\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const accounts = values.accounts || [];\n//     // If the key includes a CAIP separator `:` we know it's a namespace + chainId (e.g. `eip155:1`)\n//     const chains = isCaipNamespace(key)\n//       ? [key]\n//       : values.chains\n//       ? values.chains\n//       : getChainsFromApprovedSession(values.accounts);\n//     parsedNamespaces[key] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   }\n//   return parsedNamespaces;\n// }\nfunction convertChainIdToNumber(chainId) {\n    if (typeof chainId === \"number\")\n        return chainId;\n    if (chainId.includes(\"0x\")) {\n        return parseInt(chainId, 16);\n    }\n    chainId = chainId.includes(\":\") ? chainId.split(\":\")[1] : chainId;\n    return isNaN(Number(chainId)) ? chainId : Number(chainId);\n}\nconst CAIP_DELIMITER = \":\";\nfunction parseChainId(chain) {\n    const [namespace, reference] = chain.split(CAIP_DELIMITER);\n    return { namespace, reference };\n}\nfunction mergeArrays(a = [], b = []) {\n    return [...new Set([...a, ...b])];\n}\nfunction syncAddressAvailable(wallet) {\n    if (!wallet) {\n        return false;\n    }\n    if (wallet.appName !== 'OKX Wallet') {\n        return false;\n    }\n    if ((0, core_1.versionCompare)('6.97.0', wallet.appVersion) > 0) {\n        return false;\n    }\n    return syncAddressHostAvailable();\n}\nfunction syncAddressHostAvailable() {\n    try {\n        return !!(window.okxGlobal);\n    }\n    catch (e) {\n        return false;\n    }\n}\n","<template>\n  <div id=\"app\">\n    <el-container>\n      <el-header>OKX Connect</el-header>\n      <el-main>\n        <el-card class=\"wallet-info\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Wallet Info</div>\n          </template>\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Wallet Address:</strong> {{ getWalletAddress }}\n            </el-col>\n          </el-row>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Status :</strong> {{ currentStatus }}\n            </el-col>\n          </el-row>\n\n        </el-card>\n\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Connect Params</div>\n          </template>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"12\">\n              <el-checkbox v-model=\"withUI\" @change=\"handleWithUI\">\n                Show UI</el-checkbox>\n            </el-col>\n\n            <el-col :span=\"12\">\n              <el-checkbox v-model=\"universalToTG\" @change=\"handleUniversalToTG\">\n                Use mini wallet</el-checkbox>\n            </el-col>\n          </el-row>\n\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Modals</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"modals\" placeholder=\"Modals\" @change=\"handleModalsSelect\" multiple>\n                <el-option label=\"Before\" value=\"before\" />\n                <el-option label=\"Success\" value=\"success\" />\n                <el-option label=\"Error\" value=\"error\" />\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center; justify-content: space-between;\">\n            <el-col :span=\"6\" style=\"gap: 2px\">\n              <p style=\"font-size: 11pt; margin: 0px\">Return Strategy</p>\n              <p style=\"font-size: 9pt; margin: 0px\">(Mobile only)</p>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-select\n                v-model=\"returnStrategy\"\n                @change=\"handleReturnStrategySelect\"\n                placeholder=\"Return Strategy\"\n              >\n                <el-option\n                  v-for=\"strategy in returnStrategies\"\n                  :key=\"`return-strategy-select-option-${strategy}`\"\n                  :label=\"strategy\"\n                  :value=\"strategy\"\n                />\n              </el-select>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-input\n                v-if=\"returnStrategy === 'deeplink'\"\n                v-model=\"deeplink\"\n                @change=\"handleReturnStrategyDeeplink\"\n                placeholder=\"Deeplink\"\n                :disabled=\"returnStrategy !== 'deeplink'\"\n                style=\"margin: 0px\"\n              />\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Lang</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"language\" @change=\"handleLanguageSelect\" placeholder=\"Language\">\n                <el-option v-for=\"locale in locales\" :key=\"`language-select-option-${locale}`\" :label=\"locale\"\n                  :value=\"locale\" />\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Theme</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"theme\" @change=\"handleThemeSelect\" placeholder=\"Theme\">\n                <el-option label=\"LIGHT\" :value=\"THEME.LIGHT\" />\n                <el-option label=\"DARK\" :value=\"THEME.DARK\" />\n              </el-select>\n            </el-col>\n          </el-row>\n\n<!--          <el-row>-->\n<!--          <el-row style=\"align-items: center\">-->\n<!--            <el-col :span=\"4\">-->\n<!--              <p style=\"font-size: 11pt\">Connect</p>-->\n<!--              <p style=\"font-size: 11pt\">Methods</p>-->\n<!--            </el-col>-->\n<!--            <el-col :span=\"20\">-->\n<!--              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" placeholder=\"Methods\">-->\n<!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n<!--                           :value=\"methods\" />-->\n\n<!--              </el-select>-->\n<!--            </el-col>-->\n<!--          </el-row>-->\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Connect</p>\n              <p style=\"font-size: 11pt\">Methods</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" multiple placeholder=\"methods\">\n                <el-option\n                    v-for=\"item in connectMethods\"\n                    :key=\"item\"\n                    :label=\"item\"\n                    :value=\"item\">\n                </el-option>\n              </el-select>\n\n\n<!--              <el-select v-model=\"selectedMethod\" placeholder=\"Methods\" @change=\"handleConnectMethodsSelect\" multiple>-->\n<!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n<!--                           :value=\"methods\" />-->\n<!--              </el-select>-->\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">ton_proof</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-input v-model=\"tonProofValue\"  placeholder=\"input ton_proof\"></el-input>\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" align=\"middle\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Required Chains</div>\n            </el-col>\n            <el-col\n              :span=\"6\"\n              v-for=\"item in Object.keys(availableChains)\"\n              :key=\"item\"\n            >\n              <el-checkbox\n                v-model=\"availableChains[item].checked\"\n                :disabled=\"!areChainsInit\"\n                >{{ availableChains[item].name }}</el-checkbox\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" align=\"middle\" style=\"margin-top: 20px\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Optional Chains</div>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(43114)\" @change=\"() => handleOptionChange(43114)\">\n                AVAX</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(10)\" @change=\"() => handleOptionChange(10)\">OP</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(8453)\" @change=\"() => handleOptionChange(8453)\">\n                BASE</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(99781165)\"\n                @change=\"() => handleOptionChange(99781165)\">Nonexist</el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp')\" @change=\"() => handleOptionChange('solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp')\">Solana</el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('ton:-239')\" @change=\"() => handleOptionChange('ton:-239')\">Ton</el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('btc:mainnet')\" @change=\"() => handleOptionChange('btc:mainnet')\">btc</el-checkbox>\n            </el-col>\n\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"initBtnClicked\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectInitStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                type=\"primary\"\n                @click=\"connectBtnClicked\"\n                icon=\"el-icon-connection\"\n                :disabled=\"!areChainsInit\"\n                >{{ connectStatusStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"syncAllAddressClick\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ syncAllAddressStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                type=\"danger\"\n                @click=\"disconnectAction\"\n                icon=\"el-icon-switch-button\"\n                :disabled=\"!areChainsInit || walletAddress.length == 0\"\n                >{{ disconnectStatusStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n          <teleport to=\"body\">\n            <div v-if=\"showModal\" class=\"modal-overlay\" @click=\"closeModal\">\n              <div class=\"modal-content\" @click.stop>\n                <button class=\"close-button\" @click=\"closeModal\">\n                  &times;\n                </button>\n                <h2>Scan to connect</h2>\n                <qrcode-vue :value=\"qrValue\" :size=\"350\" level=\"L\" />\n              </div>\n            </div>\n          </teleport>\n        </el-card>\n\n        <!-- 发送交易 -->\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Transactions</div>\n          </template>\n\n          <el-tabs v-model=\"activeTab\" type=\"border-card\" @tab-click=\"clickActiveTab\">\n            <!-- ETH -->\n            <el-tab-pane label=\"ETH\" name=\"eip155:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to ETH)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve TONCoin)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(eth mint\n                    nft)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add SPX6900)\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TON\" name=\"ton:-239\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_getAccount\">ton_getAccount</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_sendTransaction\">ton_sendTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- solana -->\n            <el-tab-pane label=\"Sol\" name=\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- Sui-->\n            <el-tab-pane label=\"Sui\" name=\"sui:mainnet\">\n              <SuiPanel @generateTransactionParams=\"sui_generateTransactionParams\" />\n            </el-tab-pane>\n            <!-- BTC -->\n            <el-tab-pane label=\"BTC\" name=\"btc:mainnet\">\n              <BTCPanel @generateTransactionParams=\"btc_generateTransactionParams\" />\n            </el-tab-pane>\n\n            <!-- Fractal BTC -->\n            <el-tab-pane label=\"Fractal\" name=\"fractal:mainnet\">\n              <FractalPanel @generateTransactionParams=\"fractal_generateTransactionParams\" />\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Tron\" name=\"tron:mainnet\">\n              <TronTransactionPanel\n                  @generateTransactionParams=\"tron_generateTransactionParams\"\n                  @generateTransactionResult=\"tron_getTransactionResult\" />\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Aptos\" name=\"aptos:mainnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signTransaction\">aptos_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"aptos_signAndSubmitTransaction\">aptos_signAndSubmitTransaction</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Cosmos\" name=\"cosmos:cosmoshub-4\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <!-- Polygon-->\n            <el-tab-pane label=\"Polygon\" name=\"eip155:137\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send POL)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve sushi)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(polygon mint\n                    nft)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add LGNS)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_testRpc()\">wallet_testRpc(Polygon)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\"\n                  >eth_sendTransaction(转账FUSE)</el-button\n                  >\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\"\n                  >eth_sendTransaction(授权USDC)</el-button\n                  >\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- BSC-->\n            <el-tab-pane label=\"BNB\" name=\"eip155:56\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to BNB)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve POSI)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add FET)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_testRpc()\">wallet_testRpc(check balance on eth)</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Fuse\" name=\"eip155:122\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_swap\">eth_sendTransaction(Swap)</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Sonic testnet\" name=\"svm:70000062\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Movement\" name=\"movement:testnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"move_signTransaction\">move_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"move_signAndSubmitTransaction\">move_signAndSubmitTransaction</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n\n            <el-tab-pane label=\"osmos\" name=\"cosmos:osmosis-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"SEI\" name=\"cosmos:pacific-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Starknet\" name=\"starknet:mainnet\">\n              <StarknetPanel ref=\"starknetPanelRef\" @generateTransactionParams=\"starknet_generateTransactionParams\" @generateTransactionResult=\"starknet_getTransactionResult\" />\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TEST \" name=\"test:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"testBase64UrlSafe\">testBase64UrlSafe</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n          </el-tabs>\n\n          <el-col :xs=\"24\" :sm=\"24\" style=\"margin: 16px 0px;\">\n            <el-row style=\"align-items: center; justify-content: space-between; margin-bottom: 8px;\">\n              <el-col :span=\"4\">\n                <p style=\"font-size: 11pt; margin: 0px; text-align: start\">Redirect param (only for ETH, Polygon, BNB, Fuse)</p>\n              </el-col>\n              <el-col :span=\"9\">\n                <el-select\n                  v-model=\"redirect\"\n                  @change=\"handleRedirectSelect\"\n                  placeholder=\"Return Strategy\"\n                  :disabled=\"!canChainAddRedirectParam()\"\n                  >\n                  <el-option\n                    v-for=\"strategy in returnStrategies\"\n                    :key=\"`return-strategy-select-option-${strategy}`\"\n                    :label=\"strategy\"\n                    :value=\"strategy\"\n                  />\n                </el-select>\n              </el-col>\n              <el-col :span=\"10\">\n                <el-input\n                  v-if=\"redirect === 'deeplink'\"\n                  v-model=\"redirectDeeplink\"\n                  @change=\"handleRedirectDeeplink\"\n                  placeholder=\"Deeplink\"\n                  :disabled=\"!canChainAddRedirectParam() || redirect !== 'deeplink'\"\n                  style=\"margin: 0px\"\n                />\n              </el-col>\n            </el-row>\n            <el-button\n              type=\"primary\" @click=\"addRedirectParam()\"\n              :disabled=\"!canChainAddRedirectParam() || !testTransaction\"\n            >\n              Add redirect param to data\n            </el-button>\n          </el-col>\n\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Data:</div>\n            <el-input v-model=\"testTransaction\" type=\"textarea\" :rows=\"5\" placeholder=\"sendTransactions\"></el-input>\n          </el-col>\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Result :</div>\n            <el-input v-model=\"testboc\" type=\"textarea\" :rows=\"5\" placeholder=\"boc\"></el-input>\n          </el-col>\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button type=\"primary\" :disabled=\"sendBtnDisabled\" @click=\"sendTransaction()\">{{\n                testTransactionStr\n                }}</el-button>\n            </el-col>\n          </el-row>\n        </el-card>\n      </el-main>\n    </el-container>\n  </div>\n</template>\n\n<style scoped>\n/* 重置全局边距和内边距 */\nbody,\nhtml {\n  margin: 0;\n  padding: 0;\n  height: 100%;\n}\n\n/* 确保 app 容器占满整个视口 */\n#app {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin: 0 auto;\n  /* 居中 */\n  max-width: 600px;\n  /* 设置最大宽度 */\n  padding: 0 20px;\n  /* 添加一些左右内边距 */\n}\n\n/* 调整 el-container 样式 */\n.el-container {\n  min-height: 100vh;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n}\n\n/* 调整 el-header 样式 */\n.el-header {\n  background-color: #333333;\n  color: white;\n  height: 50px;\n  line-height: 50px;\n  font-size: 18px;\n  font-weight: bold;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1000;\n}\n\n/* 调整 el-main 样式 */\n.el-main {\n  padding: 70px 0 20px;\n  /* 增加顶部内边距以避免被固定header遮挡 */\n  flex-grow: 1;\n}\n\n.el-card {\n  margin-bottom: 20px;\n}\n\n.info-row {\n  margin-bottom: 10px;\n}\n\n.input-label {\n  margin-bottom: 5px;\n  text-align: left;\n}\n\n.el-input {\n  margin-bottom: 10px;\n}\n\n/* 通用按钮样式 */\n.wallet-actions .el-button,\n.transaction .el-button,\n.clear-cache .el-button {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 40px;\n}\n\n.wallet-actions .el-button span,\n.transaction .el-button span,\n.clear-cache .el-button span {\n  margin: 0 auto;\n}\n\n/* 按钮行间距 */\n.wallet-actions .button-row,\n.transaction .button-row {\n  margin-bottom: 8px;\n}\n\n.wallet-actions .button-row:last-child,\n.transaction .button-row:last-child {\n  margin-bottom: 0;\n}\n\n/* 调整图标和文字的对齐 */\n.wallet-actions .el-button [class^=\"el-icon-\"],\n.transaction .el-button [class^=\"el-icon-\"],\n.clear-cache .el-button [class^=\"el-icon-\"] {\n  margin-right: 5px;\n  vertical-align: middle;\n}\n\n/* 新增：调整发送交易按钮与输入框的间距 */\n.transaction .el-row:not(:last-child) {\n  margin-bottom: 10px;\n}\n\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.modal-content {\n  background-color: white;\n  padding: 20px;\n  border-radius: 8px;\n  text-align: center;\n  position: relative;\n  max-width: 90%;\n  width: 400px;\n}\n\n.close-button {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  font-size: 24px;\n  border: none;\n  background: none;\n  cursor: pointer;\n}\n\n/* 响应式调整 */\n@media (max-width: 600px) {\n  #app {\n    padding: 0 10px;\n  }\n\n  .el-main {\n    padding: 60px 0 10px;\n  }\n}\n</style>\n<script>\nimport {OKX_CONNECT_ERROR_CODES, safeJsonStringify,getAppWalletDeepLink,getUniversalLink} from \"@okxconnect/core\"\nimport {\n  OKXBtcProvider,\n  OKXUniversalProvider,\n  OKXCosmosProvider,\n  OKXTonProvider,\n  OKXTronProvider,\n  OKXStarknetProvider\n} from \"@okxconnect/universal-provider\"\nimport {OKXSolanaProvider} from \"@okxconnect/solana-provider\";\nimport {\n  Connection,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n  TransactionMessage,\n  VersionedTransaction\n} from '@solana/web3.js';\nimport {OKXSuiProvider as SuiAdapter} from \"@okxconnect/sui-provider\"\nimport QrcodeVue from 'qrcode.vue'\n\nimport {OKXAptosProvider} from \"@okxconnect/aptos-provider\";\nimport {Aptos, AptosConfig, Network} from \"@aptos-labs/ts-sdk\";\n\nimport BTCPanel from \"./components/BtcTransactionPanel.vue\";\nimport FractalPanel from \"./components/FractalTransactionPanel.vue\"\nimport SuiPanel from \"./components/SuiTransactionPanel.vue\";\nimport StarknetPanel from \"./components/StarknetTransactionPanel.vue\";\n\nimport {OKXUniversalConnectUI, THEME} from \"@okxconnect/ui\";\nimport {ethers} from 'ethers';\nimport VConsole from 'vconsole';\nimport nacl from \"tweetnacl\";\nconst { verifyADR36Amino } = require('@keplr-wallet/cosmos')\nconst { fromBech32 } = require('@cosmjs/encoding')\nimport { verifyPersonalMessageSignature } from '@mysten/sui/verify';\nimport {useShortLink} from \"@okxconnect/core\";\nimport TronTransactionPanel from \"@/components/TronTransactionPanel.vue\";\nimport {TronWeb} from \"tronweb\";\nimport { RpcProvider as StarknetRpcProvider, Account as StarknetAccount } from \"starknet\";\nimport { ref, toRaw } from \"vue\";\nnew VConsole();\n\nconst allChains = {\n  1: { name: \"Eth\", checked: false },\n  56: { name: \"BNB\", checked: false },\n  137: { name: \"Polygon\", checked: false },\n  122: { name: \"Fuse\", checked: false },\n  \"ton:-239\":{name: \"TON\",checked: false},\n  \"btc:mainnet\": { name: \"BTC\", checked: false },\n  \"sui:mainnet\": { name: \"Sui\", checked: false },\n  \"aptos:mainnet\": { name: \"Aptos\", checked: false },\n  \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\": {\n    name: \"Solana\",\n    checked: false,\n  },\n  \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\": {\n    name: \"Sol testnet\",\n    checked: false,\n  },\n  \"svm:70000062\": {\n    name: \"Sonic testnet\",\n    checked: false,\n  },\n  \"movement:testnet\": { name: \"Movement\", checked: false },\n  \"fractal:mainnet\": { name: \"Fractal\", checked: false },\n  \"cosmos:osmosis-1\": {name: \"Osmos\", checked: false},\n  \"cosmos:cosmoshub-4\": {name: \"Cosmos\", checked: false},\n  \"cosmos:pacific-1\": {name: \"SEI\", checked: false},\n  \"cosmos:abvdefg\": {name: \"cosmos:abvdefg\", checked: false},\n  \"tron:mainnet\": {name: \"tron\", checked: false},\n  997865: { name: \"Non Exist chain\", checked: false },\n  2020: { name: \"Ronin\", checked: false },\n  1666600000: { name: \"Harmony\", checked: false },\n  \"starknet:mainnet\": { name: \"starknet\", checked: false }\n};\n\nconst chainsThatCanAddRedirectParam = [\n  \"eip\"\n]\n\nvar optionChains = new Set([]);\nvar selectedModals = [\"before\", \"success\", \"error\"];\nvar selectedReturnStrategy = \"none\";\nvar selectedDeepLink = \"tg://resolve\";\nvar selectedLanguage = \"en_US\";\nvar selectedTheme = THEME.LIGHT;\n\n// import QrcodeVue from 'qrcode.vue'\nexport default {\n  name: \"App\",\n  components: {\n    TronTransactionPanel,\n    QrcodeVue,\n    BTCPanel,\n    FractalPanel,\n    SuiPanel,\n    StarknetPanel\n  },\n\n  setup() {\n    const sendBtnDisabled = ref(false)\n\n    return {\n      sendBtnDisabled\n    }\n  },\n  data: () => {\n    return {\n      activeTab: \"eip155:1\",\n      testTopic: \"\",\n      testPublicKey: \"\",\n      testProofPayload: \"\",\n      tonProofValue:\"\",\n      pendingDeepLink: \"-\",\n      logList: [],\n      connectReady: false,\n      connectStatusStr: \"Connect\",\n      syncAllAddressStr: \"syncAllAddress\",\n      connectInitStr: \"init test\",\n      disconnectStatusStr: \"Disconnect\",\n      localPubKey: \"\",\n      localSecKey: \"\",\n      testTransaction: \"\",\n      selectedChain: \"eip155:1\",\n      testTransactionStr: \"Send\",\n      walletAddress: \"\",\n      testboc: \"\",\n      ProofPayloadVerify: \"\",\n      showModal: false,\n      showVerifyRow: false,\n      qrValue: \"https://www.okx.com/download\",\n      currentStatus: \"\",\n      areChainsInit: false,\n      availableChains: allChains,\n      isOptionalChecked: (chainId) => {\n        return optionChains.has(chainId);\n      },\n      withUI: localStorage.getItem(\"autoRefresh\") != \"false\",\n      universalToTG: localStorage.getItem(\"universalToTG\") != \"false\",\n      modals: selectedModals,\n      returnStrategies: [\"none\", \"back\", \"deeplink\"],\n      returnStrategy: selectedReturnStrategy,\n      deeplink: selectedDeepLink,\n      locales: [\n        \"en_US\",\n        \"ru_RU\",\n        \"zh_CN\",\n        \"zh\",\n        \"ar_AE\",\n        \"cs_CZ\",\n        \"de_DE\",\n        \"es_ES\",\n        \"es_LAT\",\n        \"fr_FR\",\n        \"id_ID\",\n        \"it_IT\",\n        \"nl_NL\",\n        \"pl_PL\",\n        \"pt_BR\",\n        \"pt_PT\",\n        \"ro_RO\",\n        \"tr_TR\",\n        \"uk_UA\",\n        \"vi_VN\",\n        \"zh_TW\"\n      ],\n      selectedMethod:[],\n      selectedMethodData:[],\n      connectMethods:[\n        \"wallet_addEthereumChain(ETH)\",\n        \"personal_sign(ETH)\",\n        \"solana_signMessage(Sol mainnet)\",\n        \"sui_signMessage(Sui mainnet)\",\n        \"sui_signPersonalMessage(Sui mainnet)\",\n        \"btc_signMessage(BTC)\",\n        \"aptos_signMessage(aptos mainnet)\",\n        \"cosmos_signArbitrary(cosmoshub)\",\n        \"test_noSupport_eth(ETH)\",\n        \"tron_signMessage\",\n        \"tron_signMessageV2\",\n        \"starknet_signMessage\",\n        \"sync_all_addresses\"\n      ],\n\n      language: selectedLanguage,\n      theme: selectedTheme,\n      THEME: THEME,\n      redirect: selectedReturnStrategy,\n      redirectDeeplink: selectedDeepLink,\n      handleWithUI: (isChecked) => {\n        localStorage.setItem(\"autoRefresh\", `${isChecked}`);\n        location.reload();\n      },\n      handleUniversalToTG: (isChecked) => {\n        localStorage.setItem(\"universalToTG\", `${isChecked}`);\n      },\n      handleOptionChange: (chainId) => {\n        if (optionChains.has(chainId)) {\n          optionChains.delete(chainId);\n        } else {\n          optionChains.add(chainId);\n        }\n      },\n      starknetPanelTypedData: ''\n    };\n  },\n  computed: {\n    getWalletAddress: function () {\n      return this.walletAddress;\n    },\n  },\n  methods: {\n    isChecked(chainId) {\n      return this.selectedChains.has(chainId);\n    },\n\n    initChains(newChains) {\n      if (newChains.length > 0) {\n        const updatedChains = Object.assign({}, this.availableChains);\n        for (const chainId of newChains) {\n          if (updatedChains[chainId]){\n            updatedChains[chainId].checked = !updatedChains[chainId].checked;\n          }\n        }\n        this.availableChains = updatedChains;\n      }\n\n      this.areChainsInit = true;\n    },\n\n    async clickActiveTab(tab) {\n      const tabName = tab.props ? tab.props.name : tab.name;\n      this.selectedChain = tabName;\n      console.log(`已切换到链 :`, tabName);\n\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      if (tabName == \"starknet:mainnet\") {\n        this.sendBtnDisabled = true\n      }else {\n        this.sendBtnDisabled = false\n      }\n\n      window.provider.setDefaultChain(this.selectedChain);\n    },\n\n    async initBtnClicked() {\n      var initCall;\n      if (!this.withUI) {\n        initCall = OKXUniversalProvider.init({\n          dappMetaData: {\n            name: \"univer test dapp\",\n            icon: \"https://avatars.githubusercontent.com/u/37784886\",\n          },\n        });\n      } else {\n        initCall = OKXUniversalConnectUI.init({\n          dappMetaData: {\n            icon: \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\",\n            name: \"OKX WalletConnect UI Demo\",\n          },\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: \"all\",\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme\n          },\n        });\n      }\n\n      initCall.then((provider) => {\n        window.provider = provider;\n        window.tonProvider = new OKXTonProvider(window.provider);\n        window.tonProvider.onStatusChange((walletInfo) => {\n              console.log('TONConnection onStatusChange:', JSON.stringify(walletInfo));\n            }, (err) => {\n              console.log('TONConnection onStatusChange error:', err);\n            }\n        )\n\n        if (window.provider instanceof OKXUniversalConnectUI) {\n          window.provider.onModalStateChange((state)=>{\n            console.log(`onModalStateChange   ${JSON.stringify(state)}`)\n          })\n        }\n\n        console.log(\"init finished:\", provider);\n        console.log(\"init finished session:\", JSON.stringify(provider.session));\n\n        if (provider.session?.namespaces) {\n          const newChains = [];\n          console.log(\"namespaces\", provider.session.namespaces);\n          Object.entries(provider.session.namespaces).forEach(([key, value]) => {\n            if (key === \"eip155\") {\n              value.chains.forEach((chain) => {\n                newChains.push(parseInt(chain.substring(7)));\n              });\n            }\n            else {\n              value.chains.forEach((chain) => {\n                newChains.push(chain);\n              });\n            }\n          });\n\n          console.log(\"existing chains:\", newChains);\n          this.initChains(newChains);\n        } else {\n          this.initChains([]);\n        }\n\n        provider.on(\"display_uri\", (uri) => {\n          if (!useShortLink()){\n            if (this.isPC()) {\n              if (uri && !this.withUI && !this.universalToTG) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          }\n          console.log(\"通知>>>display_uri  ==> \", uri);\n        });\n\n        provider.on(\"connect_signResponse\", (items) => {\n          console.log(\"通知>>>connect_signResponse  ==> \", JSON.stringify(items));\n          this.verifyMessage(items)\n        })\n\n        provider.on(\"short_display_uri\", (uri) => {\n          if (useShortLink()){\n            if (this.isPC()) {\n              if (uri && !this.withUI && !this.universalToTG) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          }\n          console.log(\"通知>>>short_display_uri  ==> \", uri);\n        });\n\n\n        provider.on(\"session_connecting\", () => {\n          if (useShortLink()){\n            alert(\"session_connecting\")\n          }\n          console.log(\"通知>>>session_connecting  ==> \");\n        });\n\n        provider.on(\"connect\", (session) => {\n          console.log(\"通知>>>get connect session\", session);\n        });\n        provider.on(\"reconnect\", (session) => {\n          console.log(\"通知>>>get reconnect session\", session);\n          this.walletAddress = \"connected\";\n        });\n        provider.on(\"disconnect\", ({ topic }) => {\n          console.log(`通知>>>get disconnect  ${topic}`);\n          this.walletAddress = \"disconnecteddddd\";\n        });\n        provider.on(\"session_delete\", ({ topic }) => {\n          console.log(`通知>>>get session_delete  ${topic}`);\n        });\n        provider.on(\"session_update\", (session) => {\n          console.log(`通知>>>get session_update `, JSON.stringify(session));\n        });\n      });\n    },\n\n    async connectBtnClicked() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        this.testTonSdk();\n      } else {\n        console.log(`connectBtnClicked provider not finish init`);\n      }\n    },\n\n    async syncAllAddressClick() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        if (window.provider instanceof OKXUniversalProvider){\n          if (window.provider.connected()){\n            try {\n              let message = await window.provider.syncAllAddresses()\n              if (typeof message == \"string\") {\n                this.testboc = message\n              } else {\n                this.testboc = JSON.stringify(message)\n              }\n            }catch (e) {\n              this.testboc = JSON.stringify(e)\n            }\n          }else{\n            this.testboc = \"not connected\"\n          }\n        }\n\n      } else {\n        console.log(`syncAllAddress provider not finish init`);\n      }\n    },\n\n    async disconnectAction() {\n      try {\n        console.log(\"get disconnect wallet btn clicked\");\n        // await TON.disconnect();\n        var provider = window.provider;\n        await provider.disconnect();\n        this.walletAddress = \"disconnected\";\n      } catch (error) {\n        console.log(\"Disconnect  error ==>> \", error.message);\n        this.currentStatus = error.message;\n      }\n    },\n\n    async eth_requestAccounts() {\n      var data = { method: \"eth_requestAccounts\" };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_chainId() {\n      var data = { method: \"eth_chainId\" };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async wallet_switchEthereumChain() {\n      var data = { method: \"wallet_switchEthereumChain\" };\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async wallet_addEthereumChain() {\n      var data = {\n        method: \"wallet_addEthereumChain\",\n        params: {\n          blockExplorerUrls: [\"https://explorer.fuse.io\"],\n          chainId: \"0x7a\",\n          chainName: \"Fuse\",\n          nativeCurrency: { name: \"Fuse\", symbol: \"FUSE\", decimals: 18 },\n          rpcUrls: [\"https://rpc.fuse.io\"],\n        },\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n    async personal_sign() {\n      if (this.selectedChain === \"eip155:1\") {\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0x1ca023f10e157d148deed210f8bee193657a1eaa7f187909e20a9dc3b071dbc364c41fde37960c05093359f410a061ec8a7dca8c0c39fc7c1e24de8a3329775d1b\n\n        var accounts = await window.provider.request(\n          { method: \"eth_requestAccounts\" },\n          \"eip155:1\"\n        );\n        var address = accounts[0];\n        console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n        var dataETH = {\n          method: \"personal_sign\",\n          params: [\n            \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n            address,\n          ],\n        };\n\n        this.testTransaction = JSON.stringify(dataETH);\n      } else if (\n        this.selectedChain === \"eip155:137\" ||\n        this.selectedChain === \"eip155:122\"\n      ) {\n        // method\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0xebda9cfa2af43999058dffa0107031d1ef7fc0252dca85dcbd22ea097af922ca39b64d509ef61ce42b7641c5840b8a80337ffd1411b13e87e2260a3f1b6c151c1b\n\n        var dataPolygon = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n        this.testTransaction = JSON.stringify(dataPolygon);\n      } else if (this.selectedChain === \"eip155:56\") {\n        var data = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n\n        this.testTransaction = JSON.stringify(data);\n      }\n    },\n\n    async eth_sendTransaction_swap() {\n      var data = {\n        method: \"eth_sendTransaction\",\n        chainId: \"eip155:122\",\n        params: {\n          value: \"0x38d7ea4c68000\",\n          gas: \"0x2665f\",\n          to: \"0xf2614A233c7C3e7f08b1F887Ba133a13f1eb2c55\",\n          from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n          data: \"0x2646478b000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee00000000000000000000000000000000000000000000000000038d7ea4c68000000000000000000000000000620fd5fa44be6af63715ef4e65ddfa0387ad13f5000000000000000000000000000000000000000000000000000000000000001b000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000700301ffff0201602352A9Eb5234466Eac23E59e7B99bCaE79C39c0BE9e53fd7EDaC9F859882AfdDa116645287C629040BE9e53fd7EDaC9F859882AfdDa116645287C62900602352A9Eb5234466Eac23E59e7B99bCaE79C39c01f2F3e73be57031114dd1f4E75c1DD87658be7F0E000bb800000000000000000000000000000000\",\n        },\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_signTypedData_v4() {\n      // method\n      // eth_signTypedData\n      // address\n      // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n      // valid\n      // true\n      // result\n      // 0xa8bb3c6b33a119d2d567c7632195c21988df778006082742125a591f5c633f716107883a37f7de6531a6312a5f69022135bf46fe5ab77905b62c82b3395f985e1b\n      //\n\n      // var data = {\n      //   \"method\": \"eth_signTypedData_v4\",\n      //   \"params\": {\n      //     \"typedDataJson\":\"{\\\"types\\\":{\\\"EIP712Domain\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"version\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"chainId\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"name\\\":\\\"verifyingContract\\\",\\\"type\\\":\\\"address\\\"}],\\\"Person\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"wallet\\\",\\\"type\\\":\\\"address\\\"}],\\\"Mail\\\":[{\\\"name\\\":\\\"from\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"to\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"contents\\\",\\\"type\\\":\\\"string\\\"}]},\\\"primaryType\\\":\\\"Mail\\\",\\\"domain\\\":{\\\"name\\\":\\\"Ether Mail\\\",\\\"version\\\":\\\"1\\\",\\\"chainId\\\":1,\\\"verifyingContract\\\":\\\"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\\\"},\\\"message\\\":{\\\"from\\\":{\\\"name\\\":\\\"Cow\\\",\\\"wallet\\\":\\\"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\\\"},\\\"to\\\":{\\\"name\\\":\\\"Bob\\\",\\\"wallet\\\":\\\"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\\\"},\\\"contents\\\":\\\"Hello, Bob!\\\"}}\"\n      // }}\n\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n        this.selectedChain\n      );\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n      var data = {\n        method: \"eth_signTypedData_v4\",\n        params: [\n          address,\n          {\n            types: {\n              EIP712Domain: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"version\",\n                  type: \"string\",\n                },\n                {\n                  name: \"chainId\",\n                  type: \"uint256\",\n                },\n                {\n                  name: \"verifyingContract\",\n                  type: \"address\",\n                },\n              ],\n              Person: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"wallet\",\n                  type: \"address\",\n                },\n              ],\n              Mail: [\n                {\n                  name: \"from\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"to\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"contents\",\n                  type: \"string\",\n                },\n              ],\n            },\n            primaryType: \"Mail\",\n            domain: {\n              name: \"Ether Mail\",\n              version: \"1\",\n              chainId: 1,\n              verifyingContract: \"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\",\n            },\n            message: {\n              from: {\n                name: \"Cow\",\n                wallet: \"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\",\n              },\n              to: {\n                name: \"Bob\",\n                wallet: \"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\",\n              },\n              contents: \"Hello, Bob!\",\n            },\n          },\n        ],\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_sendTransaction_transfer() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            chainId: \"0x1\",\n            to: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            value: \"0x5af3107a4000\",\n            maxPriorityFeePerGas: \"0x3b9aca00\",\n            gas: \"0x5e56\",\n            maxFeePerGas: \"0x2643b9db8\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gasPrice: \"0x17003f6530\",\n            nonce: \"0x0d30\",\n            data: \"0x\",\n            value: \"0x00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasLimit: \"0x5208\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x5e56\",\n            value: \"0x5af3107a4000\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasPrice: \"0x3b9aca00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            chainId: \"0x38\",\n          },\n        };\n      }else if(this.selectedChain === \"eip155:122\"){\n         data =   {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            value: \"0x0\",\n            chainId: \"0x7a\",\n          }\n        }\n      }\n\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n        this.selectedChain\n      );\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"to\"] = address;\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_approve() {\n      var data = {};\n\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000000000000022d473030f116ddee9f6b43ac78ba3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x582d872a1b094fc48f5de31d3b73f2d9be47def1\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000f6f8096ac575b0\",\n            to: \"0x0b3F868E0BE5597D5DB7fEB59E1CADBb0fdDa50a\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            value: \"0x0\",\n            gas: \"0xe117\",\n            gasPrice: \"0xb2d05e00\",\n            data: \"0x095ea7b300000000000000000000000031c2f6fcff4f8759b3bd5bf0e1084a055615c768ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x5CA42204cDaa70d5c773946e69dE942b85CA6706\",\n          },\n        };\n      }else if (this.selectedChain === 'eip155:122'){\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000000000000013b3\",\n            to: \"0x620fd5fa44BE6af63715Ef4E65DDFA0387aD13F5\",\n          },\n        };\n      }\n\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n        this.selectedChain\n      );\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_mint() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x4cacb\",\n            data: \"0xa64dfa75000000000000000000000000ed688002f3797599db8b4feacfe8b1dda0df1c8d000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cecb15396825a895ff8da8fc2d2c77a234dccee00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f6261667962656968643737366b6177706e71336f6f6a6635693274787a76617737737164656b34616a776472637472703261366f626b70723773792f7b69647dan            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x30795\",\n            data: \"0xa64dfa75000000000000000000000000341b3687f0309778f08f29336b2c4b9c38b9f110000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f62616679626569686a6279676b68747a71376b68377434336266686e676e793236337668766f6578716a6d6e377161716166366e717a64743777712f7b69647dan            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      }\n\n      let str = JSON.stringify(data);\n      console.log(\"-----长度--->\", str.length);\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n          this.selectedChain\n      );\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async wallet_testRpc() {\n      let provider = window.provider;\n      provider.setDefaultChain(\n        `eip155:56`,\n        `https://eth-mainnet.g.alchemy.com/v2/NxUfYJUr-TQtEpLmSXhhD5pXn70GwsyV`\n      );\n      var data = {\n        method: \"eth_getBalance\",\n        params: [\"0x8D97689C9818892B700e27F316cc3E41e17fBeb9\", \"latest\"],\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async wallet_watchAsset() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xe0f63a424a4439cbe457d80e4f4b51ad25b2c56c\",\n              symbol: \"SPX6900\",\n              image:\n                \"https://assets.coingecko.com/coins/images/31401/standard/sticker_%281%29.jpg?1702371083\",\n              decimals: 8,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xeB51D9A39AD5EEF215dC0Bf39a8821ff804A0F01\",\n              symbol: \"LGNS\",\n              image: \"https://polygonscan.com/token/images/originlgns_32.png\",\n              decimals: 9,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0x031b41e504677879370e9dbcf937283a8691fa7f\",\n              symbol: \"FET\",\n              image: \"https://bscscan.com/token/images/fetch_32.png\",\n              decimals: 18,\n            },\n          },\n        };\n      }\n\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async ton_sendTransaction() {\n      var data  = {\n        \"messages\":[{\"address\":\"EQARULUYsmJq1RiZ-YiH-IJLcAZUVkVff-KBPwEmmaQGH6aC\",\"amount\":\"205000000\",\"payload\":\"te6cckEBAgEAhwABbQ+KfqUAAADNgG7tIEATEtAIAO87mQKicbKgHIk4pSPP4k5xhHqutqYgAB7USnesDnCcECwbgQMBAJUlk4VhgBD3JEg1TUr75iTijBghOKm/sxNDXUBl7CD6WMut0Q85x4RafwA/Es89DBXoTxuqxVFxyBbzt9Rav2HBUKl7hmkvLuKHLBCW57aK\"}],\n        \"validUntil\":1792481054,\n        \"network\":'-239'}\n      this.testTransaction = JSON.stringify(data)\n    },\n    ton_getAccount() {\n      this.testTransaction = \"这里是同步获取 不再需要点击 <<发送交易>>\"\n      let result =   window.tonProvider.account()\n      if (result) {\n        this.testboc = JSON.stringify(result);\n      } else {\n        this.testboc = 'null'\n      }\n    },\n\n    async tonUniversalLog() {\n      console.log(\"ton 信息: tonProvider  connected:\",window.tonProvider.connected())\n      console.log(\"ton 信息: tonProvider  account:\",JSON.stringify(window.tonProvider.account()))\n      console.log(\"ton 信息: tonProvider  wallet:\",JSON.stringify(window.tonProvider.wallet()))\n    },\n\n    async sendTransactionAlert() {\n      //\n      const response = await fetch(`https://apitest.fireverse.ai/oauth/okx/getNonce?publicAddress=0x0cecb15396825a895ff8da8fc2d2c77a234dccee`);\n      const data = await response.json();\n      console.log(\"请求数据----\",JSON.stringify(data))\n      await this.personal_sign()\n      if (confirm(\"Are you want to sign message?\")) {\n        this.sendTransaction();\n      }\n\n      // window.open(\"https://www.okx.com/download?deeplink=okx%3A%2F%2Fweb3%2Fwallet%2Fconnect\",'_self')\n    },\n\n    async sendTransaction() {\n      if (this.selectedChain.startsWith(\"aptos\")\n          || this.selectedChain.startsWith(\"movement\")\n          || this.selectedChain.startsWith(\"solana\")\n          || this.selectedChain.startsWith(\"sonic\")\n          || this.selectedChain.startsWith(\"cosmos\")) {\n        return\n      }\n      console.log(\"sendTransaction\", window.provider);\n      console.log(\"sendTransaction内容11------\", this.testTransaction);\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      if (this.testTransaction && window.provider) {\n        // eslint-disable-next-line no-undef\n        const sendData = JSON.parse(this.testTransaction);\n        try {\n          console.log(\"sendTransaction-----22method>>\", sendData.method);\n\n          let chainId = \"eip155:1\";\n          if (this.selectedChain) {\n            chainId = this.selectedChain;\n            console.log(\n              \"sendTransaction-----this.selectedChain>>\",\n              this.selectedChain\n            );\n          }\n          console.log(\"windowOpen[click_1]: \", Date.now());\n          console.log(\"交易的ChainId: \",chainId);\n\n          if (chainId == \"sui:mainnet\") {\n            const adapter = new SuiAdapter(window.provider);\n            var suiResult = \"invalid result\";\n            if (this.currentSuiMethod == 'sui_getAccount') {\n              let result = adapter.getAccount()\n              if (typeof result == \"string\") {\n                this.testboc = result\n              } else {\n                this.testboc = JSON.stringify(result)\n              }\n            }\n            if (this.currentSuiMethod == \"sui_signTransaction\") {\n              suiResult = await adapter.signTransaction(\n                this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signAndExecuteTransaction\") {\n              suiResult = await adapter.signAndExecuteTransaction(\n                this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signMessage\") {\n              console.log(\"signMessage----\", this.currentSuiTransaction);\n              suiResult = await adapter.signMessage(this.currentSuiTransaction);\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_signPersonalMessage\") {\n              console.log(\n                \"signPersonalMessage----\",\n                this.currentSuiTransaction\n              );\n              suiResult = await adapter.signPersonalMessage(\n                this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_testRpc\") {\n              console.log(\"test rpc----\", this.currentSuiTransaction);\n              console.log(\n                `请求数据发送 rpc ----->> ${JSON.stringify(sendData)}`\n              );\n              const res = await window.provider.request(sendData, chainId);\n              console.log(`请求数据回调 rpc ----->> ${JSON.stringify(result)}`);\n              if (typeof res == \"string\") {\n                this.testboc = res;\n              } else {\n                this.testboc = JSON.stringify(res);\n              }\n            }\n            console.log(\"windowOpen[click_2]: \", Date.now());\n            return;\n          }else if(chainId === \"ton:-239\"){\n            console.log(\n                `请求数据发送 sendTransaction ---ton-->> ${JSON.stringify(sendData)}`\n            );\n            let result =  await window.tonProvider.sendTransaction(sendData)\n            console.log(\n                `请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`\n            );\n            if (typeof result == \"string\") {\n              this.testboc = result;\n            } else {\n              this.testboc = JSON.stringify(result);\n            }\n            return\n          }\n\n          if (chainId == 'btc:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var btcResult = 'invalid result'\n\n            if (this.currentBtcMethod == 'btc_signMessage') {\n              btcResult = await btcAdapter.signMessage(chainId, this.currentBtcTransaction[\"signStr\"])\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_send') {\n              btcResult = await btcAdapter.send(chainId, this.currentBtcTransaction)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signPsbt') {\n              btcResult = await btcAdapter.signPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n\n              this.hexToBase64(btcResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentBtcMethod == 'btc_signPsbts') {\n              btcResult = await btcAdapter.signPsbts(chainId, this.currentBtcTransaction.psbtHexs, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_sendInscription') {\n              btcResult = await btcAdapter.sendInscription(chainId, this.currentBtcTransaction.address, this.currentBtcTransaction.inscriptionId, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signAndPushPsbt') {\n              btcResult = await btcAdapter.signAndPushPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            }else if (this.currentBtcMethod == 'btc_sendBitcoin') {\n              btcResult = await btcAdapter.sendBitcoin(chainId, this.currentBtcTransaction.toAddress, this.currentBtcTransaction.satoshis, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            }else if (this.currentBtcMethod == 'btc_getAccount'){\n              btcResult = btcAdapter.getAccount(chainId)\n              this.testboc = JSON.stringify(btcResult)\n            }else if(this.currentBtcMethod === \"btc_sendRunes\"){\n              console.log(\"BTC参数--->\",JSON.stringify(this.currentBtcTransaction))\n              btcResult = await btcAdapter.sendRunes(chainId,this.currentBtcTransaction.address,this.currentBtcTransaction.runeid,this.currentBtcTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }else if(this.currentBtcMethod === \"btc_inscribeTransfer\"){\n              console.log(\"BTC参数--->\",JSON.stringify(this.currentBtcTransaction))\n              btcResult = await btcAdapter.inscribeTransfer(chainId,this.currentBtcTransaction.ticker,this.currentBtcTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }\n\n            return\n          }\n\n          if (chainId == 'fractal:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var fractalResult = 'invalid result'\n\n            if (this.currentFractalMethod == 'fractal_signMessage') {\n              fractalResult = await btcAdapter.signMessage(chainId, this.currentFractalTransaction['signStr'])\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_send') {\n              fractalResult = await btcAdapter.send(chainId, this.currentFractalTransaction)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signPsbt') {\n              fractalResult = await btcAdapter.signPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.hexToBase64(fractalResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentFractalMethod == 'fractal_signPsbts') {\n              fractalResult = await btcAdapter.signPsbts(chainId, this.currentFractalTransaction.psbtHexs, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_sendInscription') {\n              fractalResult = await btcAdapter.sendInscription(chainId, this.currentFractalTransaction.address, this.currentFractalTransaction.inscriptionId, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signAndPushPsbt') {\n              fractalResult = await btcAdapter.signAndPushPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            }else if (this.currentFractalMethod == 'fractal_sendBitcoin') {\n              fractalResult = await btcAdapter.sendBitcoin(chainId, this.currentFractalTransaction.toAddress, this.currentFractalTransaction.satoshis, this.currentFractalTransaction.options)\n\n              this.testboc = JSON.stringify(fractalResult)\n            }else if (this.currentFractalMethod == 'fractal_getAccount'){\n              fractalResult = btcAdapter.getAccount(chainId)\n              this.testboc = JSON.stringify(fractalResult)\n            }else if(this.currentFractalMethod === \"fractal_sendRunes\"){\n              console.log(\"fractal参数--->\",JSON.stringify(this.currentFractalTransaction))\n              btcResult = await btcAdapter.sendRunes(chainId,this.currentFractalTransaction.address,this.currentFractalTransaction.runeid,this.currentFractalTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }else if(this.currentFractalMethod === \"fractal_inscribeTransfer\"){\n              console.log(\"fractal参数--->\",JSON.stringify(this.currentFractalTransaction))\n              btcResult = await btcAdapter.inscribeTransfer(chainId,this.currentFractalTransaction.ticker,this.currentFractalTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }\n\n            return\n          }\n\n          console.log(`请求数据发送 sendTransaction ----->> ${JSON.stringify(sendData)}`)\n          var result = await window.provider.request(sendData, chainId)\n          console.log(`请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`)\n\n          console.log(\"windowOpen[click_3]: \", Date.now());\n          if (typeof result == \"string\") {\n            this.testboc = result;\n          } else {\n            this.testboc = JSON.stringify(result);\n          }\n          console.log(\"方法数据回调 --this.testboc--\", this.testboc);\n        } catch (error) {\n          console.error(\"方法数据回调失败 --Error--\", error.message);\n\n          if (error.code === OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n            this.testboc = error.message;\n          } else {\n            this.testboc = \"wrong signature！\" + error.message;\n          }\n        }\n      } else {\n        alert(\"Please input transaction data\");\n      }\n    },\n\n    hexToBase64(hexStr) {\n      var bytes = [];\n      for (var i = 0; i < hexStr.length; i += 2) {\n        bytes.push(parseInt(hexStr.substr(i, 2), 16));\n      }\n      const buffer = new Uint8Array(bytes)\n      const blob = new Blob([buffer]);\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = function (e) {\n          var base64Data = e.target.result.split(\",\")[1]\n          resolve(base64Data);\n        };\n        reader.onerror = function (e) {\n          reject(e);\n        };\n        reader.readAsDataURL(blob);\n      });\n    },\n    testBase64UrlSafe(){\n      let datatest = {\"protocolVer\":1,\"topic\":\"8a7a4c3be73802d0ae2587123ade7bb79f27433b9aa3ca589a2208a2089eecfd\",\"clientId\":\"5f1bbf9eac92160affa7ef04d0a710817ddb6d8c22ebbd6263e86f059930b404\",\"requestId\":\"1731383250054\",\"dAppInfo\":{\"url\":\"connect.oker.vip\",\"origin\":\"https://connect.oker.vip\",\"name\":\"univer test dapp\",\"icon\":\"https://avatars.githubusercontent.com/u/37784886\"},\"requests\":[{\"name\":\"requestAccounts\",\"requiredNamespaces\":[{\"namespace\":\"aptos\",\"chains\":[\"aptos:637\"]}],\"optionalNamespaces\":[],\"connectRequestMethods\":[{\"chainId\":\"aptos:637\",\"method\":\"aptos_signMessage\",\"params\":{\"data\":{\"address\":true,\"application\":true,\"chainId\":true,\"message\":\"123 中文测试!\",\"nonce\":\"1234\"},\"applicationUrl\":\"https://connect.oker.vip\",\"prefix\":\"APTOS\",\"aptosChainId\":\"1\"}}]}],\"redirect\":\"none\"}\n      let json = JSON.stringify(datatest)\n      const utf8Array = new TextEncoder().encode(json);\n      let binary = '';\n      utf8Array.forEach(byte => {\n        binary += String.fromCharCode(byte);\n      });\n\n      let firstStr =  btoa(binary)\n      console.log(\"字符串编码1>>>>\",firstStr)\n      firstStr = firstStr.replace(/\\+/g, '-')  // 替换 '+'\n      console.log(\"字符串编码2>>>>\",firstStr)\n      firstStr = firstStr.replace(/\\//g, '_')  // 替换 '/'\n      console.log(\"字符串编码3>>>>\",firstStr)\n      firstStr = firstStr.replace(/=+$/, '');  // 移除 '=';\n      console.log(\"字符串编码4>>>>\",firstStr)\n\n      let showUrl =  getUniversalLink(getAppWalletDeepLink(firstStr))\n      console.log(\"字符串编码5>>>>\",showUrl)\n      this.qrValue = showUrl;\n      this.showModal = true;\n    },\n\n\n    async testTonSdk() {\n      // 1. connect\n      //  create sub providers for each namespace/chain\n      let nameSpacesChains = [];\n      let optSpaceChains = [];\n\n      let solanaChains = [\n        \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n        \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n        \"svm:70000062\",\n      ];\n      let hasEip155, hasSolana, hasSui, hasBtc, hasAptos, hasTon, hasCosmos, hasTron, hasStarknet = false\n\n      let suiChains = [\n        \"sui:mainnet\",\n      ];\n\n      let btcChains = [\n        \"btc:mainnet\",\n        \"fractal:mainnet\"\n      ];\n\n      const chains = Object.entries(this.availableChains)\n          .filter((chain) => chain[1].checked)\n          .map((chain) => chain[0]);\n      console.log(`chains  ===> ${chains.values()}`)\n      chains.forEach(function (chainId) {\n        console.log(`chains.forEach chainId  ===> ${chainId}`)\n\n        if (solanaChains.includes(chainId)) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"ton\")) {\n          nameSpacesChains.push(chainId)\n          hasTon = true\n          return\n        }\n        if (typeof chainId == 'string' && (chainId.startsWith(\"aptos\") || chainId.startsWith(\"movement\"))) {\n          nameSpacesChains.push(chainId)\n          hasAptos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId)\n          hasSolana = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"cosmos\")) {\n          nameSpacesChains.push(chainId)\n          hasCosmos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"tron\")) {\n          nameSpacesChains.push(chainId)\n          hasTron = true\n          return\n        }\n\n        if (typeof chainId == 'string' && chainId.startsWith(\"starknet\")) {\n          nameSpacesChains.push(chainId)\n          hasStarknet = true\n          return\n        }\n\n        if (suiChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`);\n          nameSpacesChains.push(chainId);\n          hasSui = true;\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`)\n          nameSpacesChains.push(chainId)\n          hasBtc = true\n          return\n        }\n\n        hasEip155 = true\n        nameSpacesChains.push(`eip155:${chainId}`)\n      })\n\n\n      optionChains.forEach(function (chainId) {\n        if (solanaChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n        if (typeof chainId == \"string\" && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (suiChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          optSpaceChains.push(chainId)\n          return\n        }\n\n        if (chainId.startsWith('ton')) {\n          optSpaceChains.push(chainId)\n          return\n        }\n\n        optSpaceChains.push(`eip155:${chainId}`)\n      })\n\n      console.log(`namespaceChains  ===> ${JSON.stringify(nameSpacesChains)}`);\n      var connectData = {};\n      if (nameSpacesChains && nameSpacesChains.length > 0) {\n        var requireData = {};\n\n        if (hasEip155) {\n          requireData.eip155 = {\n            chains: nameSpacesChains.filter((item) =>\n              item.startsWith(\"eip155\")\n            ),\n            defaultChain: nameSpacesChains.filter((item) =>\n              item.startsWith(\"eip155\")\n            )[0],\n          };\n        }\n        if (hasSolana) {\n          requireData.solana = {\n            chains: nameSpacesChains.filter(\n              (item) =>\n                item.startsWith(\"solana\") ||\n                item.startsWith(\"sonic\") ||\n                item.startsWith(\"svm\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n              (item) =>\n                item.startsWith(\"solana\") ||\n                item.startsWith(\"sonic\") ||\n                item.startsWith(\"svm\")\n            )[0],\n          };\n        }\n\n        if (hasCosmos) {\n          requireData.cosmos = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            )[0],\n          }\n        }\n        if (hasTron) {\n          requireData.tron = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            )[0],\n          }\n        }\n        if (hasStarknet) {\n          requireData.starknet = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"starknet\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"starknet\")\n            )[0],\n          }\n        }\n        if (hasTon) {\n\n          //\n          let tonParams = {\n            ton_addr:{\n              name: 'ton_addr',\n            }\n          };\n          if (this.tonProofValue){\n            tonParams = {\n              ton_addr:{\n                name: 'ton_addr',\n              },\n              ton_proof:{\n                name: 'ton_proof',\n                payload: this.tonProofValue,\n              }\n            };\n          }\n\n\n          requireData.ton = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"ton\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"ton\"))[0],\n            params:tonParams\n          };\n        }\n\n        if (hasSui) {\n          requireData.sui = {\n            chains: nameSpacesChains.filter((item) => item.startsWith(\"sui\")),\n            defaultChain: nameSpacesChains.filter((item) =>\n              item.startsWith(\"sui\")\n            )[0],\n            rpcMap: {\n              \"sui:mainnet\": \"https://www.okx.com/fullnode/sui/discover/rpc\"\n            }\n          };\n        }\n        if (hasAptos) {\n          requireData.aptos = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\"))[0]\n          }\n        }\n\n        if (hasBtc) {\n          let btcChains = nameSpacesChains.filter(item => item.startsWith(\"btc\") || item.startsWith(\"fractal\"))\n          requireData.btc = {\n            chains: btcChains,\n            defaultChain: btcChains[0]\n          }\n        }\n        console.log(`requireData  ===> ${JSON.stringify(requireData)}`)\n        connectData['namespaces'] = requireData;\n        console.log(JSON.stringify(connectData))\n      }\n\n      if (optSpaceChains && optSpaceChains.length > 0) {\n        const optData = {};\n\n        const eip155Chains = optSpaceChains.filter((item) => item.startsWith(\"eip155\"));\n        if (eip155Chains.length > 0) {\n          optData[\"eip155\"] = {\n            chains: eip155Chains,\n            defaultChain: eip155Chains[0],\n          };\n        }\n\n        const solanaChains = optSpaceChains.filter((item) => item.startsWith(\"solana\"));\n        if (solanaChains.length > 0) {\n          optData[\"solana\"] = {\n            chains: solanaChains,\n            defaultChain: solanaChains[0],\n          };\n        }\n\n        const tonChains = optSpaceChains.filter((item) => item.startsWith(\"ton\"));\n        if (tonChains.length > 0) {\n\n          let tonParams = {\n            ton_addr:{\n              name: 'ton_addr',\n            }\n          };\n          if (this.tonProofValue){\n            tonParams = {\n              ton_addr:{\n                name: 'ton_addr',\n              },\n              ton_proof:{\n                name: 'ton_proof',\n                payload: this.tonProofValue,\n              }\n            };\n          }\n\n\n          optData[\"ton\"] = {\n            chains: tonChains,\n            defaultChain: tonChains[0],\n            params: tonParams\n          };\n        }\n\n        const btcChains = optSpaceChains.filter((item) => item.startsWith(\"btc\"));\n        if (btcChains.length > 0) {\n          optData[\"btc\"] = {\n            chains: btcChains,\n            defaultChain: btcChains[0],\n          };\n        }\n\n        connectData[\"optionalNamespaces\"] = optData;\n      }\n\n      if (nameSpacesChains.length === 0 && optSpaceChains.length === 0) {\n        //未选择链\n        alert(\"Please select a chain from above to continue\");\n        return;\n      }\n      console.log(\"=====>connectData \");\n      console.log(connectData);\n\n      var connectMethod;\n      let signMethods = this.getCurrentSelectedMethodData();\n      if (window.provider instanceof OKXUniversalConnectUI) {\n        if (signMethods && signMethods.length>0){\n          connectMethod = window.provider.openModalAndSign(connectData,JSON.parse(JSON.stringify(signMethods)));\n        }else {\n          connectMethod = window.provider.openModal(connectData);\n        }\n      } else {\n        if (this.universalToTG){\n          connectData.sessionConfig = {\n            useMini:true,\n            openUniversalUrl:true,\n            tmaReturnUrl:'back'\n          }\n        }else{\n          connectData.sessionConfig = {\n            redirect: selectedReturnStrategy\n          }\n        }\n        if (signMethods && signMethods.length>0){\n          connectMethod = window.provider.connectAndSign(connectData,JSON.parse(JSON.stringify(signMethods)));\n        }else {\n          connectMethod = window.provider.connect(connectData);\n        }\n      }\n\n      await connectMethod\n        .then((result) => {\n          // 2. set defaul chain\n          this.walletAddress = \"connected\";\n          if (this.isPC()) {\n            this.showModal = false;\n          }\n          if (result){\n            this.testboc = JSON.stringify(result)\n          }\n\n          if (window.provider.session && window.provider.session.namespaces){\n            let ton = window.provider.session.namespaces[\"ton\"];\n          console.log(\"是否包含ton\",ton)\n            if (ton){\n              this.tonUniversalLog()\n            }\n          }\n        })\n        .catch((error) => {\n          if (error.code == 301) {\n            setTimeout(() => {\n              alert(error.message)\n            }, 0.5);\n          } else if (error.message){\n            alert(error.message)\n          }\n          console.error(\"发生了错误：\", error);\n        });\n    },\n\n    getCurrentSelectedMethodData(){// 连接签名\n      var methodList = [];\n      this.selectedMethod.forEach(method =>{\n        switch (method) {\n          case \"wallet_addEthereumChain(ETH)\":\n            methodList.push({\n              method: \"wallet_addEthereumChain\",\n              chainId:\"eip155:1\",\n              params: {\n                blockExplorerUrls: [\"https://explorer.fuse.io\"],\n                chainId: \"0x7a\",\n                chainName: \"Fuse\",\n                nativeCurrency: { name: \"Fuse\", symbol: \"FUSE\", decimals: 18 },\n                rpcUrls: [\"https://rpc.fuse.io\"],\n              },\n            })\n            break;\n          case \"personal_sign(ETH)\":\n            methodList.push(\n              {\n                method: \"personal_sign\",\n                chainId: \"eip155:1\",\n                params: [\n                  \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n                ],\n              });\n            break;\n          case \"solana_signMessage(Sol mainnet)\":\n            methodList.push(\n              {\n                \"chainId\": \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n                \"method\": \"solana_signMessage\",\n                \"params\": {\n                  \"message\": \"Hello Solana\",\n                }\n              }\n            );\n            break;\n          case \"sui_signMessage(Sui mainnet)\":\n          case \"sui_signPersonalMessage(Sui mainnet)\": {\n            let suiData = [\n              76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n              109, 111, 118, 101,\n            ];\n            let uint8Array = new Uint8Array(suiData);\n            let currentMethod = \"sui_signMessage\";\n            this.currentSuiTransaction = {\n              message:uint8Array\n            }\n\n            if(method.startsWith(\"sui_signPersonalMessage\")){\n              currentMethod = \"sui_signPersonalMessage\";\n            }\n            methodList.push(\n                {\n                  method: currentMethod,\n                  chainId: \"sui:mainnet\",\n                  params: {\n                    message: uint8Array,\n                  }\n                }\n            );\n            break;\n          }\n          case \"btc_signMessage(BTC)\":\n            methodList.push(\n              {\n                method: \"btc_signMessage\",\n                chainId: \"btc:mainnet\",\n                params: {\n                  message: \"Welcome to BTC\"\n                }\n              }\n            )\n            break;\n          case \"aptos_signMessage(aptos mainnet)\":\n            methodList.push(\n              {\n                \"chainId\": \"aptos:mainnet\",\n                \"method\": \"aptos_signMessage\",\n                \"params\": {\n                  address: true,\n                  application: true,\n                  chainId: true,\n                  message: \"Hello Aptos\",\n                  nonce: \"1234\"\n                }\n              }\n            )\n            break;\n          case \"cosmos_signArbitrary(cosmoshub)\":\n            methodList.push(\n                {\n                  \"chainId\": \"cosmos:cosmoshub-4\",\n                  \"method\": \"cosmos_signArbitrary\",\n                  \"params\": {\n                    message: \"test cosmos\"\n                  }\n                }\n            )\n\n            break;\n          case \"test_noSupport_eth(ETH)\":\n            methodList.push(\n                {\n                  chainId: \"eip155:1\",\n                  method: \"test_noSupport_eth\",\n                  params: {\n                    message: \"test hello\",\n                  }\n                }\n            )\n            break;\n          case \"sync_all_addresses\":\n            methodList.push(\n                {\n                  method: \"sync_all_addresses\",\n                });\n            break;\n          case \"tron_signMessage\":\n            methodList.push(\n                {\n                  chainId:\"tron:mainnet\",\n                  method: \"tron_signMessage\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n          case \"tron_signMessageV2\":\n            methodList.push(\n                {\n                  chainId:\"tron:mainnet\",\n                  method: \"tron_signMessageV2\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n\n            //\n          case \"starknet_signMessage\": {\n            const signData = {\n              \"domain\": {\n                \"chainId\": \"0x534e5f4d41494e\",\n                \"name\": \"STRKFarm\",\n                \"version\": \"1\"\n              },\n              \"message\": {\n                \"document\": \"app.strkfarm.xyz/tnc/v1\",\n                \"message\": \"Read and Agree T&C\"\n              },\n              \"primaryType\": \"Tnc\",\n              \"types\": {\n                \"StarkNetDomain\": [\n                  {\n                    \"name\": \"name\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"version\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"chainId\",\n                    \"type\": \"felt\"\n                  }\n                ],\n                \"Tnc\": [\n                  {\n                    \"name\": \"message\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"document\",\n                    \"type\": \"felt\"\n                  }\n                ]\n              }\n            }\n            methodList.push({\n              chainId:\"starknet:mainnet\",\n              method: \"starknet_signMessage\",\n              params: {\n                accountAddress: \"\",\n                typedData: signData\n              }\n            })\n          }\n            break\n          default:\n\n            break;\n        }\n      })\n      this.selectedMethodData = methodList\n      return methodList\n\n    },\n\n    closeModal() {\n      this.showModal = false;\n    },\n\n    isPC() {\n      const userAgentInfo = navigator.userAgent;\n      console.log(\"current device ua is ===>\", userAgentInfo);\n\n      const Agents = [\n        \"Android\",\n        \"iPhone\",\n        \"SymbianOS\",\n        \"Windows Phone\",\n        \"iPad\",\n        \"iPod\",\n      ];\n      let flag = true;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = false;\n          break;\n        }\n      }\n      return flag;\n    },\n    isSafariOrChrome() {\n      const userAgentInfo = navigator.userAgent;\n      const Agents = [\"Safari\", \"Chrome\"];\n      let flag = false;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = true;\n          break;\n        }\n      }\n      return flag;\n    },\n\n    /// solana\n    async sol_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      let data = {\n        method: \"solana_signMessage\",\n        params: {\n          message: \"Hello Solana\",\n          pubkey: \"\",\n        },\n      };\n      this.testTransaction = JSON.stringify(data);\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let message = await provider.signMessage(\n          \"Hello Solana\",\n          this.selectedChain\n      );\n      console.log(\"solana_signMessage Result:\",JSON.stringify(message))\n      const result1 = nacl.sign.detached.verify(\n          new TextEncoder().encode(\"Hello Solana\"),\n          message.signature,\n          new PublicKey(message.publicKey).toBytes()\n      );\n      console.log(result1)\n\n      if (typeof message == \"string\") {\n        this.testboc = result1;\n      } else {\n        this.testboc = result1;\n      }\n    },\n\n    async aptos_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      let data = {\n        address: true,\n        application: true,\n        chainId: true,\n        message: \"Hello Aptos\",\n        nonce: \"1234\"\n      }\n\n      let provider = new OKXAptosProvider(window.provider)\n      let message = await provider.signMessage(data, this.selectedChain)\n      this.testTransaction = JSON.stringify(data)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n          functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async move_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async move_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n          functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n        },\n      });\n\n      // let data = {\n      //   \"arguments\": [\"100000\",[\"0\",\"0\",\"10533\"],[\"10\",\"5\",\"5\"],[\"false\",\"false\",\"true\"]],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x3\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\",\"0x73eb84966be67e4697fc5ae75173ca6c35089e802650f75422ab49a8729704ec::coin::DooDoo\",\"0x53a30a6e5936c0a4c5140daed34de39d17ca7fcae08f947c02e979cef98a3719::coin::LSD\",\"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::CurveV1\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x54cb0bb2c18564b86e34539b9f89cfe1186e39d89fce54e1cd007b8e61673a85::bin_steps::X80\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async sol_signVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(\n        provider.getAccount(\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\").address\n      );\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n         recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signTransaction(\n        transaction,\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAndSendVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n        transaction,\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllVersionedTransactions() {\n      let provider = new OKXSolanaProvider(window.provider);\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n        [transaction],\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signTransaction() {\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n         recentBlockhash: blockhash,\n      }).add(\n        SystemProgram.transfer({\n          fromPubkey: new PublicKey(provider.getAccount().address),\n          toPubkey: new PublicKey(provider.getAccount().address),\n          lamports: 1000,\n        })\n      );\n\n      this.testTransaction = safeJsonStringify(transaction)\n      let result = await provider.signTransaction(\n        transaction,\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllTransactions() {\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n        SystemProgram.transfer({\n          fromPubkey: new PublicKey(provider.getAccount().address),\n          toPubkey: new PublicKey(provider.getAccount().address),\n          lamports: \"100\",\n        })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n        [transaction],\n        this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    getSolConnect() {\n      let rpc = \"https://www.okx.com/fullnode/sol/discover/rpc\"\n      if (this.selectedChain === \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\") {\n        rpc = \"https://www.okx.com//fullnode/sol/discover/rpc\"\n      } else if (this.selectedChain === \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\"){\n        rpc = \"https://www.okx.com/fullnode/soltestnet/discover/rpc\"\n      } else if (this.selectedChain === \"svm:70000062\") {\n        rpc = \"https://www.okx.com/fullnode/sonic/testnet/discover/rpc\"\n      }\n      return rpc\n    },\n\n    async sol_signAndSendTransaction() {\n\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n        SystemProgram.transfer({\n          fromPubkey: new PublicKey(provider.getAccount().address),\n          toPubkey: new PublicKey(provider.getAccount().address),\n          lamports: \"100\",\n        })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n        transaction,\n        this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async cosmos_signArbitrary() {\n      let provider = new OKXCosmosProvider(window.provider)\n      let message = await provider.signArbitrary(this.selectedChain, provider.getAccount(this.selectedChain).address, \"test cosmos\")\n      if (typeof message == \"string\") {\n        this.testboc = message;\n      } else {\n        let isValid =  await this.cosmos_verifySignArbitrary(provider.getAccount(this.selectedChain).address,\"test cosmos\",message.signature, message.pub_key.value)\n        console.log(\"verify\",isValid)\n        this.testboc = \"verify:\" + isValid + JSON.stringify(message);\n      }\n    },\n\n    async cosmos_verifySignArbitrary(signer, data, signature, pubkey) {\n      try {\n        console.log(\"cosmos_verifySignArbitrary signer:\",signer)\n        console.log(\"cosmos_verifySignArbitrary data:\",JSON.stringify(data))\n        console.log(\"cosmos_verifySignArbitrary signature:\",signature)\n        console.log(\"cosmos_verifySignArbitrary pubkey:\",pubkey)\n\n        // 将bech32地址转换为公钥\n        const {prefix: prefixStr} = fromBech32(signer)\n\n        const signatureBuffer = Buffer.from(signature, 'base64');\n\n        const uint8Signature = new Uint8Array(signatureBuffer); // Convert the buffer to an Uint8Array\n\n        const pubKeyValueBuffer = Buffer.from(pubkey, 'base64'); // Decode the base64 encoded value\n\n        const pubKeyUint8Array = new Uint8Array(pubKeyValueBuffer); // Convert the buffer to an Uint8Array\n\n        // 验证签名\n        return await verifyADR36Amino(\n            prefixStr,\n            signer,\n            data,\n            pubKeyUint8Array,\n            uint8Signature\n        )\n      } catch (err) {\n        console.error('Verification failed:', err)\n        return false\n      }\n    },\n\n    async cosmos_signAmino(){\n      let provider = new OKXCosmosProvider(window.provider)\n      // const rpcUrl = 'https://osmosis-rpc.publicnode.com:443';\n      // const client = await StargateClient.connect(rpcUrl);\n      // const height = await client.getHeight();\n      // let address = provider.getAccount(this.selectedChain).address\n      // const sequence = await client.getSequence(address)\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      // let signDoc = makeSignDoc(\n      //     transaction.msgs,\n      //     transaction.fee,\n      //     this.selectedChain.split(\":\")[1],\n      //     transaction.memo,\n      //     transaction.accountNumber,\n      //     transaction.sequence,\n      // )\n      let signDoc = {\n        \"chain_id\": \"osmosis-1\",\n        \"account_number\": \"630104\",\n        \"sequence\": \"480\",\n        \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]},\n        \"msgs\": [{\n          \"type\": \"osmosis/poolmanager/swap-exact-amount-in\",\n          \"value\": {\n            \"sender\": \"osmo1u6lts9ng4etxj0zdaxsada6zgl8dudpgelmuyu\",\n            \"routes\": [{\n              \"pool_id\": \"1096\",\n              \"token_out_denom\": \"ibc/987C17B11ABC2B20019178ACE62929FE9840202CE79498E29FE8E5CB02B7C0A4\"\n            }, {\n              \"pool_id\": \"611\",\n              \"token_out_denom\": \"ibc/27394FB092D2ECCD56123C74F36E4C1F926001CEADA9CA97EA622B25F41E5EB2\"\n            }],\n            \"token_in\": {\"denom\": \"uosmo\", \"amount\": \"100\"},\n            \"token_out_min_amount\": \"8\"\n          }\n        }],\n        \"memo\": \"FE\",\n        \"timeout_height\": \"23603788\",\n        \"signOptions\": {\n          \"useOneClickTrading\": false,\n          \"preferNoSetFee\": true,\n          \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]}\n        }\n      }\n\n\n\n\n\n\n\n      // let signOption = {\n      //   memo: true, // optional\n      //   fee: true, // optional\n      //   gasRate: {\n      //     // optional\n      //     average: \"0.2\",\n      //     low: \"0.02\",\n      //     tiny: \"0.002\",\n      //   },\n      // }\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signAmino(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, signDoc)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    messageToBuffer(message) {\n      var buffer = Buffer.from([]);\n      try {\n        if (typeof message === \"string\") {\n          buffer = Buffer.from(message.replace(\"0x\", \"\"), \"hex\");\n        } else {\n          buffer = Buffer.from(message);\n        }\n      } catch (err) {\n        console.log(`messageToBuffer error: ${err}`);\n      }\n      return buffer;\n    },\n\n\n\n    async cosmos_signDirect() {\n      let provider = new OKXCosmosProvider(window.provider)\n\n      let signDoc = {\n        \"bodyBytes\": this.messageToBuffer(\"0x0ac1010a292f6962632e6170706c69636174696f6e732e7472616e736665722e76312e4d73675472616e736665721293010a087472616e7366657212096368616e6e656c2d301a0d0a05756f736d6f120431303030222b6f736d6f3175366c7473396e67346574786a307a64617873616461367a676c386475647067656c6d7579752a2d636f736d6f733175366c7473396e67346574786a307a64617873616461367a676c386475647067337967766a773207080410ebe3f90a3880b0bcafd18cec8218\"),\n        \"authInfoBytes\": this.messageToBuffer(\"0x0a510a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a2102446e19e94ac0e83ea896d2712507577eb39fbdd2d6ae9f0fc0b9759f1fbaba9012040a02080118e00312140a0e0a05756f736d6f1205323530303010859a11\"),\n        \"chainId\": \"osmosis-1\",\n        \"accountNumber\": \"630104\",\n      }\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signDirect(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, transaction)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    sui_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentSuiTransaction = params\n      this.currentSuiMethod = flag\n    },\n\n    btc_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentBtcTransaction = params\n      this.currentBtcMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n\n    fractal_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentFractalTransaction = params\n      this.currentFractalMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n    tron_getTransactionResult(result) {\n      if (typeof result == \"string\") {\n        this.testboc = result\n      } else {\n        this.testboc = JSON.stringify(result)\n      }\n    },\n    tron_generateTransactionParams(params){\n      if (typeof params == \"string\") {\n        this.testTransaction = params\n      } else {\n        this.testTransaction = JSON.stringify(params)\n      }\n    },\n\n    starknet_getTransactionResult(result) {\n      if (typeof result == \"string\") {\n        this.testboc = result\n      } else {\n        this.testboc = JSON.stringify(result)\n      }\n    },\n\n    starknet_generateTransactionParams(params) {\n      if (typeof params == \"string\") {\n        this.testTransaction = params\n      } else {\n        this.testTransaction = JSON.stringify(params)\n      }\n    },\n\n    handleModalsSelect(modals) {\n      selectedModals = modals;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: modals.length === 3 ? \"all\" : modals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n\n    handleReturnStrategySelect(returnStrategy) {\n      selectedReturnStrategy = returnStrategy === \"deeplink\" ? this.deeplink : returnStrategy;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      } else {\n        if (window.provider.sessionConfig) {\n          window.provider.sessionConfig.redirect = selectedReturnStrategy;\n        } else {\n          window.provider.sessionConfig = {\n            redirect: selectedReturnStrategy\n          };\n        }\n      }\n    },\n\n    handleReturnStrategyDeeplink(deeplink) {\n      console.log('handleReturnStrategyDeeplink', deeplink)\n      selectedReturnStrategy = deeplink;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: deeplink,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      } else {\n        if (window.provider.sessionConfig) {\n          window.provider.sessionConfig.redirect = deeplink;\n        } else {\n          window.provider.sessionConfig = {\n            redirect: deeplink\n          };\n        }\n      }\n    },\n\n    handleLanguageSelect(language) {\n      selectedLanguage = language;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: language,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n    handleConnectMethodsSelect() {\n      console.log(\"当前的方法 this.selectedMethod>>>>\",this.selectedMethod);\n    },\n\n    eth_verifyMessage(message, signature,ethAddress) {\n      console.log(\"eth_verifyMessage   message>>>\",message)\n      console.log(\"eth_verifyMessage   signature>>>\",signature)\n      console.log(\"eth_verifyMessage   ethAddress>>>\",ethAddress)\n      if (!message || !signature){\n        return \"\"\n      }\n      let originalMessage = message\n      if (message.startsWith(\"0x\")){\n        originalMessage = originalMessage.replace(/^0x/, '');\n        let str = '';\n        for (let i = 0; i < originalMessage.length; i += 2) {\n          const byte = originalMessage.slice(i, i + 2);\n          str += String.fromCharCode(parseInt(byte, 16));\n        }\n        originalMessage = str\n      }\n      console.log(\"eth_verifyMessage   originalMessage>>>\",originalMessage)\n\n      // const messageHash = ethers.utils.hashMessage(originalMessage);\n      const recoveredAddress = ethers.utils.verifyMessage(originalMessage, signature);\n      console.log(\"eth_verifyMessage recoveredAddress:\", recoveredAddress);\n      return recoveredAddress.toLowerCase() === ethAddress.toLowerCase();\n    },\n\n    async verifyMessage(list){ //连接验签\n\n        if (window.provider && window.provider.session && list && list.length>0){\n          let verifyList = {}\n          for (let methodItem of list){\n            if (\"result\" in methodItem && \"method\" in methodItem){\n              let requestItme = this.selectedMethodData.filter(item => item.method === methodItem.method)[0];\n              console.log(\"验证签名 请求>>>:\", JSON.stringify(requestItme));\n              console.log(\"验证签名 结果>>>:\", JSON.stringify(methodItem));\n              if (methodItem.method === \"personal_sign\"){\n                let ethAddress = await window.provider.request({ method: \"eth_requestAccounts\" },methodItem.chainId)\n                ethAddress = ethAddress[0];\n                console.log(\"验证eth 钱包地址>>>:\", ethAddress);\n                let ethMessage = requestItme.params[0]\n                console.log(\"验证eth 签名消息体>>:\", JSON.stringify(ethMessage));\n                verifyList[methodItem.method] = this.eth_verifyMessage(ethMessage,methodItem.result,ethAddress)\n              }else if(methodItem.method === \"solana_signMessage\"){\n                let solanaMessage = methodItem.result\n                if (\"signature\" in solanaMessage && \"publicKey\" in solanaMessage){\n                  const verifySol = nacl.sign.detached.verify(\n                      new TextEncoder().encode(\"Hello Solana\"),\n                      solanaMessage.signature,\n                      new PublicKey(solanaMessage.publicKey).toBytes()\n                  );\n                  verifyList[methodItem.method] = verifySol\n                }else {\n                  verifyList[methodItem.method] = false\n                }\n              }else if(methodItem.method === \"sui_signPersonalMessage\" || methodItem.method === \"sui_signMessage\"){\n                let suiResult =  this.sui_verifySignature(methodItem.result);\n                  verifyList[methodItem.method] = (await suiResult).result\n              }else if(methodItem.method === \"btc_signMessage\"){\n\n                verifyList[methodItem.method] = \"Not verified yet\"\n\n              }else if(methodItem.method === \"aptos_signMessage\"){\n                let aptosMessage = methodItem.result\n                let aptosProvider = new OKXAptosProvider(window.provider)\n                let  aptosPublicKey  = aptosProvider.getAccount(methodItem.chainId)?.publicKey\n\n                let signStr = aptosMessage.signature\n                if (signStr.startsWith(\"0x\")) {\n                  signStr = signStr.slice(2, signStr.length)\n                }\n\n                console.log(\"aptos_signMessage aptosPublicKey And signStr\",aptosPublicKey,signStr)\n                verifyList[methodItem.method] = nacl.sign.detached.verify(\n                    Buffer.from(aptosMessage.fullMessage),\n                    Buffer.from(signStr, 'hex'),\n                    Buffer.from(aptosPublicKey, 'hex'),\n                );\n              }else if(methodItem.method === \"cosmos_signArbitrary\"){\n                let cosmosProvider = new OKXCosmosProvider(window.provider)\n                let cosmosAddress = cosmosProvider.getAccount(methodItem.chainId)?.address\n                let cosmosMessage = methodItem.result\n                let isValid =  await this.cosmos_verifySignArbitrary(cosmosAddress,\"test cosmos\",cosmosMessage.signature, cosmosMessage.pub_key.value)\n                verifyList[methodItem.method] = isValid\n\n              }else if (methodItem.method === \"tron_signMessage\") {\n                let tronMessage = methodItem.result\n                let tronWeb = new TronWeb({\n                  \"fullHost\": 'https://api.trongrid.io',\n                  \"headers\": {},\n                  \"privateKey\": ''\n                })\n                let provider = new OKXTronProvider(window.provider)\n                verifyList[methodItem.method] = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), tronMessage, provider.getAccount(\"tron:mainnet\").address)\n              } else if (methodItem.method === \"tron_signMessageV2\") {\n                let tronMessage = methodItem.result\n                let tronWeb = new TronWeb({\n                  \"fullHost\": 'https://api.trongrid.io',\n                  \"headers\": {},\n                  \"privateKey\": ''\n                })\n                const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", tronMessage);\n                let provider = new OKXTronProvider(window.provider)\n\n                verifyList[methodItem.method] = base58Address === provider.getAccount(\"tron:mainnet\").address\n              }else if (methodItem.method === \"starknet_signMessage\") {\n                let res = methodItem.result\n                let signData = this.starknetPanelTypedData\n\n                const rpcProvider = new StarknetRpcProvider({ nodeUrl: \"https://free-rpc.nethermind.io/mainnet-juno/v0_7\" });\n\n                let provider = new OKXStarknetProvider(window.provider)\n                let address = provider.getAccount(\"starknet:mainnet\").address\n                let pk = \"0x123\"; /// random pk\n                const account = new StarknetAccount(rpcProvider, address, pk)\n\n                let that = this\n                account.verifyMessage(signData, res).then(function (isValid) {\n                  that.testTransaction = `Verifyed result: \\n${isValid}`\n                }).catch(function (error) {\n                  that.testTransaction = `Verifyed failed: \\n${error}`\n                })\n                verifyList[methodItem.method] = \"starknet is verifying signature...\"\n              }\n              else {\n                verifyList[methodItem.method] = \"Not verified yet\"\n\n              }\n            }else if(\"method\" in methodItem && \"error\" in methodItem) {\n              verifyList[methodItem.method] = methodItem.error\n            }\n\n          }\n\n          console.log(\"验证签名 最后的结果>>>:\", JSON.stringify(verifyList));\n          this.testTransaction = \"签名验证结果如下: \\n\" + JSON.stringify(verifyList)\n        }else {\n          console.log(\"验证签名 window.provider.session.connectMethodsReply 为空:\");\n\n        }\n\n    },\n\n    handleThemeSelect(theme) {\n      selectedTheme = theme;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: theme,\n          },\n        };\n      }\n    },\n\n    async sui_verifySignature(signatureResult) {\n      let resultObj = signatureResult\n      let result = false\n      let msg = ''\n      try {\n        /// 获取当前account\n        const adapter = new SuiAdapter(window.provider);\n        let account = adapter.getAccount()\n        console.log(`Account中获取的address：${account.address}`)\n\n        /// 验证签名\n        let pubKey = await verifyPersonalMessageSignature(this.currentSuiTransaction.message, resultObj.signature)\n        let address = pubKey.toSuiAddress()\n        console.log(`验签结果计算得到address：${address}`)\n\n        /// 对比pubKey\n        console.log(`account pubkey: ${account.publicKey}`,)\n        console.log(`result pubkey: ${pubKey.toBase64()}`)\n        result = (account.address === address) && (account.publicKey === pubKey.toBase64())\n\n        msg = `address verify: ${account.address === address}\\npublicKey verify: ${account.publicKey === pubKey.toBase64()}`\n        console.log(\"signature verify success: \", pubKey)\n      } catch (e) {\n        console.log(\"signature verify failed: \", e)\n      }\n      return {\n        result,\n        msg\n      }\n    },\n\n\n    handleRedirectSelect(input) {\n      this.redirect = input;\n    },\n\n    handleRedirectDeeplink(input) {\n      this.redirectDeeplink = input;\n    },\n\n    addRedirectParam() {\n      if (this.testTransaction) {\n        const newTransaction = JSON.parse(this.testTransaction);\n        newTransaction.redirect = this.redirect === 'deeplink' ? this.redirectDeeplink : this.redirect;\n        this.testTransaction = JSON.stringify(newTransaction);\n      }\n    },\n\n    canChainAddRedirectParam() {\n      return chainsThatCanAddRedirectParam.some((c) => this.selectedChain.startsWith(c));\n    }\n  },\n  created() {\n    // for (const eventName of Object.values(OKX_TON_CONNECTION_AND_TRANSACTION_EVENT)) {\n    //   console.log(eventName);\n    //   window.addEventListener(eventName, (event) => {\n    //     console.log(eventName,event.detail)\n    //     this.currentStatus = eventName\n    //   });\n    // }\n  },\n\n  mounted() {\n\n    var scriptTag = document.createElement(\"script\");\n    scriptTag.src = \"https://telegram.org/js/telegram-web-app.js\";\n    scriptTag.id = \"tgsdk\";\n    document.getElementsByTagName('head')[0].appendChild(scriptTag);\n\n    this.connectReady = true;\n    document.title = \"OKX Connect\";\n    this.initBtnClicked()\n\n    console.log(\"挂载成功:\")\n    if (this.$refs.starknetPanelRef) {\n      this.starknetPanelTypedData = toRaw(this.$refs.starknetPanelRef.signData)\n      console.log(\"111: \", this.starknetPanelTypedData)\n    }else {\n      console.log(\"222\")\n    }\n  },\n};\n</script>\n","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_getAccount()\">getAccount(BTC)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signMessage()\">signMessage(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_send()\">send(BTC)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendBitcoin()\">sendBitcoin(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signPsbt_up()\">signPsbt(上架NFT)</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"btc_signAndPushPsbt_up()\">signAndPushPsbt(上架NFT)</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在OKX App选择要上架的Btc NFT，点击【上架】\n        </li>\n        <li>\n          2. 弹出签名面板，点开高级选项，查看\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出上架流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendInscription()\">sendInscription(BTC)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Btc NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"runsAddress\" clearable placeholder=\"the receiver address\" />\n      <el-input class=\"grid-content\" v-model=\"runsId\" clearable placeholder=\"the runeid\" />\n      <el-input class=\"grid-content\" v-model=\"runsAmount\" clearable placeholder=\"the amount to send\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendRunes()\">btc_sendRunes(BTC)</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model= \"intTicker\" clearable placeholder=\"BRC-20 ticker \" />\n      <el-input class=\"grid-content\" v-model=\" intAmount\" clearable placeholder=\" the amount to inscribe\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_inscribeTransfer()\">btc_inscribeTransfer(BTC)</el-button>\n    </el-col>\n\n\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    const runsAddress = ref('')\n    const runsId = ref('')\n    const runsAmount = ref('')\n    const intTicker = ref('')\n    const intAmount = ref('')\n\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount,\n      runsAddress,\n      runsId,\n      runsAmount,\n      intTicker,\n      intAmount\n    }\n  },\n  methods: {\n\n    btc_getAccount() {\n      this.$emit('generateTransactionParams', {}, \"btc_getAccount\")\n    },\n\n    btc_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to BTC\"\n      };\n      this.$emit('generateTransactionParams', params, \"btc_signMessage\")\n    },\n\n    btc_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"btc_send\")\n    },\n\n    btc_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"btc_sendBitcoin\")\n    },\n\n    btc_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"btc_signPsbt\")\n    },\n\n    btc_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"btc_signAndPushPsbt\")\n    },\n\n    btc_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"btc_sendInscription\")\n    },\n    btc_sendRunes() {\n      if (!this.runsAddress) {\n        alert(\"Please enter the receiver address\")\n        return\n      }\n      if (!this.runsId) {\n        alert(\"Please enter the runsId\")\n        return\n      }\n      if (!this.runsAmount) {\n        alert(\"Please enter the amount to send \")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        address:this.runsAddress,\n        runeid:this.runsId,\n        amount:this.runsAmount\n      }, \"btc_sendRunes\")\n    },\n\n    btc_inscribeTransfer() {\n      if (!this.intTicker) {\n        alert(\"Please enter BRC-20 ticker\")\n        return\n      }\n      if (!this.intAmount) {\n        alert(\"Please enter the amount to inscribe\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        ticker:this.intTicker,\n        amount:this.intAmount\n      }, \"btc_inscribeTransfer\")\n    },\n\n\n\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./BtcTransactionPanel.vue?vue&type=template&id=759766a0&scoped=true\"\nimport script from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./BtcTransactionPanel.vue?vue&type=style&index=0&id=759766a0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-759766a0\"]])\n\nexport default __exports__","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_getAccount()\">getAccount(Fractal)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signMessage()\">signMessage(Fractal)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_send()\">send(Fractal)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_sendBitcoin()\">sendBitcoin(Fractal)</el-button>\n\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signPsbt_up()\">signPsbt(上架NFT)</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_signAndPushPsbt_up()\">signAndPushPsbt(上架NFT)</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在OKX App选择要上架的Fractal NFT，点击【上架】\n        </li>\n        <li>\n          2. 弹出签名面板，点开高级选项，查看\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出上架流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_sendInscription()\">sendInscription(Fractal)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Fractal NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"runsAddress\" clearable placeholder=\"the receiver address\" />\n      <el-input class=\"grid-content\" v-model=\"runsId\" clearable placeholder=\"the runeid\" />\n      <el-input class=\"grid-content\" v-model=\"runsAmount\" clearable placeholder=\"the amount to send\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_sendRunes()\">fractal_sendRunes(fractal)</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model= \"intTicker\" clearable placeholder=\"BRC-20 ticker \" />\n      <el-input class=\"grid-content\" v-model=\" intAmount\" clearable placeholder=\" the amount to inscribe\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_inscribeTransfer()\">fractal_inscribeTransfer(fractal)</el-button>\n    </el-col>\n\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    const runsAddress = ref('')\n    const runsId = ref('')\n    const runsAmount = ref('')\n    const intTicker = ref('')\n    const intAmount = ref('')\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount,\n      runsAddress,\n      runsId,\n      runsAmount,\n      intTicker,\n      intAmount\n    }\n  },\n  methods: {\n\n    fractal_getAccount() {\n      this.$emit('generateTransactionParams', {}, \"fractal_getAccount\")\n    },\n\n    fractal_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to UniSat!\\n\\nClick to sign in and accept the UniSat Terms of Service (https://unisat.io/terms-of-service.html) and Privacy Policy (https://unisat.io/privacy-policy.html).\\n    \\nThis request will not trigger a blockchain transaction.\\n    \\nYour authentication status will reset after 24 hours.\\n    \\nWallet address:\\nbc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\\n    \\nNonce:\\n162d70e3-8c21-4cfd-9a22-9bf0a4b7be51\\n\"\n      };\n      this.$emit('generateTransactionParams', params, \"fractal_signMessage\")\n    },\n\n    fractal_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_send\")\n    },\n\n    fractal_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_sendBitcoin\")\n    },\n\n    fractal_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"fractal_signPsbt\")\n    },\n\n    fractal_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"fractal_signAndPushPsbt\")\n    },\n\n    fractal_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"fractal_sendInscription\")\n    },\n\n    fractal_sendRunes() {\n      if (!this.runsAddress) {\n        alert(\"Please enter the receiver address\")\n        return\n      }\n      if (!this.runsId) {\n        alert(\"Please enter the runsId\")\n        return\n      }\n      if (!this.runsAmount) {\n        alert(\"Please enter the amount to send \")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        address:this.runsAddress,\n        runeid:this.runsId,\n        amount:this.runsAmount\n      }, \"fractal_sendRunes\")\n    },\n\n    fractal_inscribeTransfer() {\n      if (!this.intTicker) {\n        alert(\"Please enter BRC-20 ticker\")\n        return\n      }\n      if (!this.intAmount) {\n        alert(\"Please enter the amount to inscribe\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        ticker:this.intTicker,\n        amount:this.intAmount\n      }, \"fractal_inscribeTransfer\")\n    },\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./FractalTransactionPanel.vue?vue&type=template&id=07ed8044&scoped=true\"\nimport script from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./FractalTransactionPanel.vue?vue&type=style&index=0&id=07ed8044&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-07ed8044\"]])\n\nexport default __exports__","<script>\n\nimport {getFullnodeUrl, SuiClient} from \"@mysten/sui/client\";\nimport {Transaction as SuiTransaction} from '@mysten/sui/transactions';\n\nexport default {\n  name: \"SuiTransactionPanel\",\n  methods: {\n    sui_getAccount() {\n      this.$emit('generateTransactionParams', '', \"sui_getAccount\")\n    },\n\n    //对单个交易签名（不发送)\n    async sui_signMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signMessage\")\n    },\n\n    async sui_signPersonalMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signPersonalMessage\")\n    },\n\n    sui_signTransaction2() {\n      // 定义要转移的金额和目标地址\n      const amount = 109; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    async sui_requestRpc() {\n      let provider = window.provider;\n      provider.setDefaultChain(\n          `sui:mainnet`,\n          `https://fullnode.mainnet.sui.io:443`\n      );\n      var data = {\n        method: \"suix_getBalance\",\n        params: [\n          \"0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae\",\n          \"0x168da5bf1f48dafc111b0a488fa454aca95e0b5e::usdc::USDC\",\n        ],\n      };\n\n      this.$emit(\"generateTransactionParams\", data, \"sui_testRpc\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 102; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signAndExecuteTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n      this.$emit(\"generateTransactionParams\", input, \"sui_signAndExecuteTransaction\")\n    },\n\n    /// generate txBytes and txSerialize\n    async generateTsBytesAndSerizlize(input) {\n      /// txBytes and txSerialize may be constructed in advance by the dapp side\n      let resultTuple = [\"\", \"\"];\n      if (\n          \"txBytes\" in input &&\n          input.txBytes.length > 0 &&\n          \"txSerialize\" in input &&\n          input.txSerialize.length > 0\n      ) {\n        resultTuple = [input.txBytes, input.txSerialize];\n      }\n\n      /// Otherwise, a transactionBlock parameter is required.\n      if (!(\"transactionBlock\" in input)) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      // if (this.walletAddress != \"connected\") {\n      //   alert(\"请先连接钱包\");\n      //   return new Promise((resolve) => {\n      //     resolve(resultTuple);\n      //   });\n      // }\n\n      let senderAccounts = window.provider.requestAccountsWithNamespace(\"sui\");\n      if (senderAccounts.length == 0) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      try {\n        let rpcUrl = getFullnodeUrl(\"mainnet\");\n        rpcUrl = \"https://www.okx.com/fullnode/sui/discover/rpc\"\n        const suiClient = new SuiClient({ url: rpcUrl });\n\n        /// sender is required\n        input.transactionBlock.setSender(senderAccounts[0]);\n        const result = await input.transactionBlock.build({\n          client: suiClient,\n        });\n        const txBytes = Buffer(result).toString(\"base64\");\n        const txSerialize = await SuiTransaction.from(txBytes).toJSON();\n        resultTuple = [txBytes, txSerialize];\n      } catch (error) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      return new Promise((resolve) => {\n        resolve(resultTuple)\n      })\n    },\n\n    //签名并发送交易\n    sui_signAndExecuteTransaction() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n        \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.testTransaction = JSON.stringify(input);\n      this.currentSuiTransaction = input;\n      this.currentSuiMethod = \"sui_signAndExecuteTransaction\";\n    },\n  },\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_getAccount()\">getAccount(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signMessage()\">signMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signPersonalMessage()\">signPersonalMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signTransaction2()\">signTransaction(Sui)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signAndExecuteTransaction()\">sendTransaction(Sui)</el-button>\n      <div style=\"font-size: 12px; color: gray;\">(send to Rally Tiger account)</div>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_requestRpc()\">RPC_getBalance</el-button>\n      <div style=\"font-size: 12px; color: gray;\">get USDC balance of address:</div>\n      <div style=\"font-size: 12px; color: gray\">0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae</div>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signTransaction_pre_execution()\">signTransaction(prepared data)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signAndExecuteTransaction_pre_execution()\">sendTransaction(prepared data)</el-button>\n    </el-col>\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./SuiTransactionPanel.vue?vue&type=template&id=56a8eddf&scoped=true\"\nimport script from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./SuiTransactionPanel.vue?vue&type=style&index=0&id=56a8eddf&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-56a8eddf\"]])\n\nexport default __exports__","<script>\nimport { OKXStarknetProvider } from \"@okxconnect/universal-provider\";\nimport { CallData, uint256, RpcProvider, Account } from \"starknet\";\n\nexport default {\n  name: \"StarknetTransactionPanel\",\n  methods: {\n    async starknet_signMessage() {\n      this.address = this.getCurrentAddress()\n      if (this.address === \"\") {\n        alert(\"address can't be ''\");\n        return\n      }\n\n      let signData = this.signData\n      this.$emit(\"generateTransactionParams\", JSON.stringify(signData))\n      let provider = new OKXStarknetProvider(window.provider)\n      let res = await provider.signMessage(this.address, signData, \"starknet:mainnet\")\n      if (res.code) {\n        if (res.code == 301) {\n          let msg = \"Wallet address is registering, please try again later!\"\n          alert(msg)\n          this.$emit(\"generateTransactionResult\", msg, \"starknet_signMessage\")\n        }\n        this.$emit(\"generateTransactionResult\", res, \"starknet_signMessage\")\n        return\n      }\n      console.log(res)\n\n      const rpcProvider = new RpcProvider({ nodeUrl: \"https://free-rpc.nethermind.io/mainnet-juno/v0_7\" });\n      let pk = \"0x123\"; /// random pk\n      const account = new Account(rpcProvider, this.address, pk)\n      let that = this\n      account.verifyMessage(signData, res).then(function (isValid) {\n        that.$emit(\"generateTransactionResult\", \"verify:\" + isValid + \"\\n\" + res, \"starknet_signMessage\")\n      }).catch(function (error) {\n        that.$emit(\"generateTransactionResult\", \"failed:\" + error + \"\\n\" + res, \"starknet_signMessage\")\n      })\n    },\n\n    async starknet_sendTransaction() {\n      this.address = this.getCurrentAddress()\n      if (this.address === \"\") {\n        alert(\"address can't be ''\");\n        return\n      }\n\n      let val = uint256.bnToUint256(120000000000000000)\n      const transferCalldata = CallData.compile({\n        to: \"0x00b909cefa36ab6bc26f5887a867e46ef162238f0a171b1c2974b665afd4237f\",\n        value: val\n      })\n\n      // const ETHTokenAddress = \"0x049d36570d4e46f48e99674bd3fcc84644ddd6b96f7c741b1562b82f9e004dc7\"\n      // const STARKTokenAddress = \"0x04718f5a0fc34cc1af16a1cdee98ffb20c31f5cd61d6ab07201858f4287c938d\"\n      const DAITokenAddress = \"0x00da114221cb83fa859dbdb4c44beeaa0bb37c7537ad5ae66fe5e0efd20e6eb3\"\n\n      const invokeParams = {\n        calls: [\n          {\n            contract_address: DAITokenAddress,\n            entry_point: \"transfer\",\n            calldata: transferCalldata\n          }\n        ],\n      }\n\n      this.$emit(\"generateTransactionParams\", JSON.stringify(invokeParams))\n      let provider = new OKXStarknetProvider(window.provider)\n\n      let that = this\n      provider.sendTransaction(this.address, invokeParams, \"starknet:mainnet\").then(function(res){\n        console.log(\"starknet_sendTransaction result \", res)\n        that.$emit(\"generateTransactionResult\", res, \"starknet_sendTransaction\")\n      }).catch(function(error) {\n        if (error.code == 301) {\n          let msg = \"Wallet address is registering, please try again later!\"\n          alert(msg)\n          that.$emit(\"generateTransactionResult\", msg, \"starknet_sendTransaction\")\n        }else {\n          that.$emit(\"generateTransactionResult\", error, \"starknet_sendTransaction\")\n        }\n      });\n    },\n\n    getCurrentAddress() {\n      let provider = new OKXStarknetProvider(window.provider)\n      const address = provider.getAccount(\"starknet:mainnet\")?.address\n      return address\n    },\n\n    getPublicKey() {\n      let provider = new OKXStarknetProvider(window.provider)\n      const account = provider.getAccount(\"starknet:mainnet\")\n      console.log(\"获取到的account是：\")\n      console.log(account)\n      return \"05d8e5e9c1dd686246716c888159271d2f13986cb4acee46164e2c4e034629c0\"\n    }\n  },\n\n  data() {\n    const signData = {\n        \"domain\": {\n          \"chainId\": \"0x534e5f4d41494e\",\n          \"name\": \"STRKFarm\",\n          \"version\": \"1\"\n        },\n        \"message\": {\n          \"document\": \"app.strkfarm.xyz/tnc/v1\",\n          \"message\": \"Read and Agree T&C\"\n        },\n        \"primaryType\": \"Tnc\",\n        \"types\": {\n          \"StarkNetDomain\": [\n            {\n              \"name\": \"name\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"version\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"chainId\",\n              \"type\": \"felt\"\n            }\n          ],\n          \"Tnc\": [\n            {\n              \"name\": \"message\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"document\",\n              \"type\": \"felt\"\n            }\n          ]\n        }\n    }\n\n    return {\n      signData\n    }\n  }\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"starknet_signMessage()\">signMessage</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 验签不成功的话，请尝试连接VPN\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"starknet_sendTransaction(true)\">\n        sendTransaction\n      </el-button>\n\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 发送0.12个DAI到0x00b9...4237f的地址\n        </li>\n        <li>\n          2. 请保证你的钱包有足够的DAI\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./StarknetTransactionPanel.vue?vue&type=template&id=082fda2b&scoped=true\"\nimport script from \"./StarknetTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./StarknetTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./StarknetTransactionPanel.vue?vue&type=style&index=0&id=082fda2b&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-082fda2b\"]])\n\nexport default __exports__","<script>\n\n\nimport {OKXTronProvider} from \"@okxconnect/universal-provider\";\nimport {TronWeb} from \"tronweb\";\n\nexport default {\n  name: \"TronTransactionPanel\",\n  methods: {\n\n    async tron_signMessage() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessage(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n\n      const verify = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), res, provider.getAccount(\"tron:mainnet\").address)\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" + res, \"tron_signMessage\")\n    },\n\n    async tron_signMessageV2() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessageV2(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", res);\n      console.log(\"tron_signMessageV2_base58Address\", base58Address)\n      console.log(\"tron_signMessageV2_address\", provider.getAccount(\"tron:mainnet\").address)\n      const verify = base58Address === provider.getAccount(\"tron:mainnet\").address\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" +  res, \"tron_signMessage\")\n    },\n\n    async tron_signTransaction(isOnlySign) {\n      let provider = new OKXTronProvider(window.provider)\n        let tronWeb = new TronWeb({\n          \"fullHost\": 'https://api.trongrid.io',\n          \"headers\": {},\n          \"privateKey\": ''\n        })\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const transaction = await tronWeb.transactionBuilder.sendTrx(\"TGBcVLMnVtvJzjPWZpPiYBgwwb7th1w3BF\", 1000, address);\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let res = await provider.signTransaction( transaction, \"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", res, \"tron_signTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async getContract() {\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41b4a428ab7092c2f1395f376ce297033b3bb446c1\"\n      \n      try {\n        const contract = await tronWeb.trx.getContract(contractAddress)\n        const abi = contract.abi.entrys;\n        console.log(\"获取到的合约：\")\n        console.log(abi)\n      } catch (error) {\n        console.log(\"Error getting contract ABI:\", error);\n      }\n    },\n    \n    async tron_signAndSendTransactionContract(isOnlySign) {\n      // this.getContract()\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41e95812d8d5b5412d2b9f3a4d5a87ca15c5c51f33\"\n      let provider = new OKXTronProvider(window.provider)\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const parameter = [\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n      ]\n      const ret = await tronWeb.transactionBuilder.triggerSmartContract(contractAddress, \"quote(uint256,uint256,uint256)\", {}, parameter, address);\n      console.log(\"=====>transaction: \")\n      console.log(ret);\n      this.$emit(\"generateTransactionParams\", ret.transaction)\n      if (isOnlySign) {\n        let tx = await provider.signTransaction( ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async tron_signAndSendTransactionApprove(isOnlySign) {\n      let contractAddress = \"41b4a428ab7092c2f1395f376ce297033b3bb446c1\"\n      let provider = new OKXTronProvider(window.provider)\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const parameter = [\n        {type: 'address', value: contractAddress},\n        {type: 'uint256', value: 1000},\n      ]\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      const ret = await tronWeb.transactionBuilder.triggerSmartContract(contractAddress, \"approve(address,uint256)\", {}, parameter, address);\n\n      let transaction = ret.transaction\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let tx = await provider.signTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n\n    }\n\n  }\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessage()\">tron_signMessage</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessageV2()\">tron_signMessageV2</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(true)\">\n        tron_signTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(true)\">\n        tron_signTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(true)\">\n        tron_signTransaction(Approve)\n      </el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(false)\">\n        tron_signAndSendTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(false)\">\n        tron_signAndSendTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(false)\">\n        tron_signAndSendTransaction(approve)\n      </el-button>\n    </el-col>\n\n\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./TronTransactionPanel.vue?vue&type=template&id=55a13ab0&scoped=true\"\nimport script from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./TronTransactionPanel.vue?vue&type=style&index=0&id=55a13ab0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-55a13ab0\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=5aadf5eb&scoped=true\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=5aadf5eb&scoped=true&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-5aadf5eb\"]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport ElementPlus from 'element-plus'\nimport 'element-plus/dist/index.css'\nimport App from './App.vue'\n\nconst app = createApp(App)\n\napp.use(ElementPlus)\napp.mount('#app')","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? function(obj) { return Object.getPrototypeOf(obj); } : function(obj) { return obj.__proto__; };\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(function(key) { def[key] = function() { return value[key]; }; });\n\t}\n\tdef['default'] = function() { return value; };\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkokxconnectdemo\"] = self[\"webpackChunkokxconnectdemo\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(88576); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["Object","defineProperty","exports","value","CONNECT_METHOD_BATCH_FETCHMSG","CONNECT_METHOD_FETCHMSG","CONNECT_METHOD_RECEIVE","CONNECT_METHOD_UNSUB","CONNECT_METHOD_SUB","CONNECT_METHOD_PUBLISH","CONNECT_METHOD_LOGIN","CONNECT_METHOD_PUSH","require","__createBinding","this","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","__setModuleDefault","v","__importStar","ownKeys","getOwnPropertyNames","ar","prototype","hasOwnProperty","call","length","mod","result","i","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","next","e","rejected","done","then","apply","OKXWalletConnector","constants_1","storageconstants_1","storage_1","utils_1","utils_2","eventemitter3_1","log","protocol_1","report_1","WS","resolveWebSocketImplementation","constructor","url","events","EventEmitter","state","ConnectorState","InitState","selectedUrlIndex","retryCount","timeOutLimit","checkWSUrl","Error","heartbeatTimer","connectionTimeoutTimer","connectURLStorage","Storage","OKXCONNECTOR_CACHE_KEY","connecting","Connecting","onPayload","data","logDebug","rsp","Date","now","toString","emit","onClose","event","_a","socket","code","onError","id","payload","msg","onopen","onmessage","onclose","Connected","emitError","errorEvent","heartbeat","clearTimeout","OnError","readyState","WebSocket","OPEN","send","setTimeout","bind","tryRegistOpen","logError","registOpen","inRetry","toUTCString","URLSearchParams","startTimeOutTimer","hasBuiltInWebSocket","onerror","close","on","resetTimeOutTimer","OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE","FINISHED","checkMaxRetry","OKXCONNECTOR_WS_URL_LIST","connectionTryNext","nextUrl","getNextSelectUrl","CANCELED","pendingSocket","TIME_OUT","reportEvent","OKXReportType","LOG","cacheSuccessUrlSelect","saveContent","onVisibleChanged","document","visibilityState","arguments","once","err","OKXConnectError","OKX_CONNECT_ERROR_CODES","CONNECTION_ERROR","connect","removeEventListener","addEventListener","disconnect","Disconnected","currentStatus","addListener","decrypt","success","failed","listenPayloadHandler","removeListener","parsedEvent","safeJsonParse","params","rawMsg","message","failHandler","addPackageParse","callback","payloadHandler","param","listener","off","doLogin","safeJsonStringify","getMsgPayloadFromHistory","tmpMsg","jsonstr","onOpen","openHandler","ConnectionManager","connect_1","commands_1","jwtconstants_1","crypto_1","jwt_1","safejson_1","log_1","url_1","appname","connectStorage","OKXCONNECTOR_CACHE_KEY_DAPP","crypto","SessionCrypto","inTMA","isInTMA","reportLog","keyPairInfo","getCachedCryptoKeyPair","jwtKeyPair","getCachedJWTKeyPair","saveJWTKeyPair","connector","OKXCONNECTOR_WS_URL_1","packageId","connectedWalletPK","currentTopic","refreshPackageId","saveCryptoKeyPair","keyPair","cacheInfo","encryptStoreMsg","OKXCONNECTOR_CRYPTO_KEY","kp","getAndDecrypt","content","clearCache","strkeyPair","publicKey","toHexString","secretKey","OKXCONNECTOR_JWT_KEY","strKeyPairInfo","hexToByteArray","generateKeyPair","isWalletPKReady","makeJWT","topic","signJWT","OKXCONNECTOR_JWT_SIDE","OKXCONNECTOR_JWT_TTL","parsePackage","input_1","input","ignoreACK","_b","_c","_d","_e","sendACK","getItem","OKXCONNECTOR_TOKEN_CACHE","inputObj","messageId","sendReceive","restoreConnect","getConnectInfo","generateTopic","info","channelId","clientId","stringifyKeypair","fromRestore","timeLog","getTime","lastConnectId","cachedSenderPublicKey","OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE","jwtToken","timeOne","error","name","timeF","sendFetchAndConsumeMessages","timeTh","catch","jsonrpc","CONNECT_JSONRPC_VER","method","token","replace","parsedMessage","fail","msgObj","trimStart","startsWith","sendRaw","ttl","OKXCONNECTOR_MESSAGE_TTL","msg_1","encrypt","msgId_1","success_1","msgId","reason","sendConnectSessionInfo","fetchedMessages","hasMore","receivedMsgs","timeFive","cleanCache","saveSessionContent","key","OKXCONNECTOR_SESSION_PREFIX_KEY","jsonData","getSessionContent","jsonStr","object","getCurrentConnectionReady","OKXCONNECTOR_WS_URL_IDX_KEY","OKXCONNECTOR_WS_URL_3","OKXCONNECTOR_WS_URL_2","EVENT_EMITTER_MAX_LISTENERS","Engine","sessionUtils_1","connectionManager","pendingRequests","Map","disconnectListener","getDefaultReporter","beginReport","jsonResponse","handleResponse","addDisconnectListener","disconnecter","push","setSessionConnectingListener","sessionConnectingListener","clear","getRequestId","requestId","bindRequestForPromise","set","request","requestAnswer","option","JSON","stringify","assign","onAck","sendSession","sessionInfo","response","delete","forEach","restoreconnect","onConnectResult","conect","sessionConfig","connectInfo","openUniversalLink","openUniversalUrl","connectRequest","protocolVer","Number","tonConnectSdkVersion","dAppInfo","dappInfo","requests","connectRequestStr","utf8Array","TextEncoder","encode","base64Encoded","btoa","String","fromCharCode","deeplinkUrl","standardDeeplink","isIOS","isIos","openOKXDeeplinkWithFallback","session","onConnect","getUniversalLink","connectResponse","namespaces","buildNameSpacesByConnectResponse","universalConnect","connectInfoAndUrl","universalRequest","item","universalConnectRequest","redirect","encodeConnectParams","openOKXLink","getOKXLink","useMini","tmaReturnUrl","openMethod","openOKXTMAWalletlinkWithFallback","useShortLink","openOKXUniversalLink","UNKNOWN_ERROR","walletName","responses","wallet","methodsResponse","find","connectRequestMethods","signResponse","WalletConnectionManager","connectionManager_1","walletConnectionManager_1","engine_1","__importDefault","MULTICODEC_ED25519_LENGTH","MULTICODEC_ED25519_HEADER","MULTICODEC_ED25519_BASE","MULTICODEC_ED25519_ENCODING","DID_METHOD","DID_PREFIX","DID_DELIMITER","KEY_PAIR_SEED_LENGTH","DATA_ENCODING","JSON_ENCODING","JWT_ENCODING","JWT_DELIMITER","JWT_IRIDIUM_TYP","JWT_IRIDIUM_ALG","JWTHeaderType","decodeJSON","encodeJSON","encodeIss","decodeIss","encodeSig","decodeSig","encodeData","decodeData","encodeJWT","decodeJWT","verifyJWT","ed25519","tweetnacl_1","stringUtils_1","default","sign","str","okxtoString","okxfromString","val","publicKeyStr","join","issuer","prefix","multicodec","split","bytes","encoded","header","signature","jwt","slice","sub_1","aud_1","ttl_1","keyPair_1","sub","aud","iat","Math","floor","alg","typ","iss","exp","act","detached","verify","OKXCONNECTOR_JWT_WALLET_SIDE","buildRequestAccountNameSpacesByConnectResponse","requestAccountNameSpaces","universalResponse","accounts","filterAccount","namespace","ton_addr","address","tonAddress","tonProof","network","ton_proof","addresses","methods","extra","chains","addressItem","addressArr","chain","utils_3","crypto_js_1","subKey","beforeKey","localStorage","resolveLocalStorage","checkAndUpgradeCache","storeKey","cipherIV","cacheStr","cacheKey","cache","cacheObj","fromCacheKey","toCacheKey","setItem","removeItem","timestamp","saveItem","localKey","totalCacheStr","getCachedPBKDF2InfoKey","pwLen","saltLen","pw","iv","salt","OKXCONNECTOR_STORAGER_CRYPTO_SALT","randomBytes","OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD","OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV","ivBuffer","PBKDF2","iterations","storeInfo","AES","enc","Utf8","OKXCONNECTOR_STORAGE_CIPHER_METHOD","OKXCONNECTOR_TON_KEY","WalletConnectionManagerEvent","WalletConnectionManagerTopicInfoCacheKey","RECEIVE_REQUEST","walletConnectionConstants_1","communicateEvents","sessionCryptoInfoMap","inLogin","isLogined","offset","topicId","isTopicPublicKeyExist","timestampStr","parseInternalMsg","internalMsg","internalObj","origin","originContent","base64decode","updateClientId","cid","lastCheck","getLastSixMd5Hash","dappPublicKey","syncCacheSessionInfo","topic_1","_f","_g","_h","_j","_k","_l","isInternalData","inner_message","inner_topic","messageObj","sessionInfoString","base64Content","inner_connection","toObject","decryptWallet","recovrySessionInfoFromCache","cacheMap","topicItem","cryptoItem","cryptoKeyPair","cacheSessionInfo","sync","duplicatedTopics","includes","appendTopic","sessionPublicKey","subscribeTopics","Array","from","confirmAppendingTopics","size","keys","getSessionPublicKey","getCurrentCachedTopicIdList","needPublicKey","useRaw","connectedDappPK","cryptoObject","encryptWallet","sendUnsubscribe","sendBatchFetchAndConsumeMessages","topicIdList","topics","withInternalData","finishCount","idx","nonceLength","sessionKeyPair","createKeypairFromString","createKeypair","box","createNonce","receiverPublicKey","encodedMessage","nonce","encrypted","concatInfo","concatUint8Arrays","hexResult","encodedResult","base64encode","senderPublicKey","messageByteArray","toUint8Array","internalMessage","splitToUint8Arrays","decrypted","open","TextDecoder","decode","__exportStar","p","IEngine","ISignClient","ISignClientEvents","IEngineEvents","super","client","creatOKXMiniAppWalletInfo","creatOKXWalletInfo","getBigIntRpcId","formatJsonRpcRequest","isJsonRpcError","isJsonRpcResponse","parseConnectionError","isHttpUrl","formatJsonRpcError","json_rpc_1","wallet_info_1","isJsonRpcPayload","isJsonRpcRequest","isJsonRpcResult","payloadId","formatJsonRpcResult","isReservedErrorCode","getError","getErrorByCode","formatErrorMessage","isWsUrl","okx_connect_error_1","IncrementalRandomGenerator","bits","Uint8Array","Uint16Array","Uint32Array","initialValue","getNextValue","uint8Generator","uint16Generator","date","BigInt","RESERVED_ERROR_CODES","type","STANDARD_ERROR_MAP","DEFAULT_ERROR","match","values","INTERNAL_ERROR","SERVER_ERROR","getUrlProtocol","matches","RegExp","matchRegexProtocol","regex","protocol","test","CONNECT_ITEM_ERROR_CODES","TONCHAIN","connect_wallet_1","connect_event_1","downloadUrl","standardUniversalLink","tgwalletName","getTestTwaUrl","window","okxTesttwaUrl","getTestTgTwaUrl","okxTestTgtwaUrl","tgwalletAppName","shortUniversalLink","okxDeeplink","location","hostname","SERVER_ERROR_CODE_RANGE","INVALID_PARAMS","METHOD_NOT_FOUND","INVALID_REQUEST","PARSE_ERROR","getDefaultMessageByCode","setPrototypeOf","toJSON","BAD_REQUEST_ERROR","ALREADY_CONNECTED_ERROR","NOT_CONNECTED_ERROR","UNKNOWN_APP_ERROR","USER_REJECTS_ERROR","USER_REJECTS_ERROR_CAUSE_REGISTER","METHOD_NOT_SUPPORTED","CHAIN_NOT_SUPPORTED","NameSpaceKeyStarknet","NameSpaceKeyTron","NameSpaceKeyCosmos","NameSpaceKeyAptos","NameSpaceKeyBtc","NameSpaceKeySui","NameSpaceKeyTON","NameSpaceKeySOL","NameSpaceKeyEip155","misc_1","callForSuccess","fn","options","attempts","delayMs","lastError","delay","timeout","signal","aborted","timeoutId","checkMetaData","versionCompare","isBrowser","isOS","isMobileUserAgent","openDeeplinkWithFallback","openLinkBlank","openLink","toSafeBase64FromBase64","isValidObject","getAppWalletShortDeepLink","encodeTWAConnectURLParams","getTelegramWalletTWAUrl","getAppWalletDeepLink","encodeTelegramUrlParameters","isTelegramUrl","openOKXDeeplink","logWarning","call_for_success_1","web_api_1","tma_api_1","request_1","debug","forceReport","defaultReporter","OKXReporter","packageJson","version","args","console","okxLogDebug","reduce","sendRecordContent","warn","action","content_1","OKXReportSide","versionStr","cross_fetch_1","localforage_1","reportApiList","reportCacheKey","reportUUIDKey","MAX_LIMIT_REPORTCOUNT","DEFAULT_HTTP_HEADERS","Accept","DEFAULT_HTTP_METHOD","DEFAULT_FETCH_OPTS","headers","PAGE_IN","PAGE_OUT","CLICK","DAPP","WALLET","fetchListWithTimeout","urls_1","args_1","urls","controller","AbortController","fetchPromise","timeoutPromise","_","abort","race","ok","status","currentSide","currentVersion","storage","createInstance","recordList","currentUUID","configVersionAndSide","side","appName","recordCacheKey","reportPlatform","startErrorCatching","records","uuid","sendCachedRecords","getWindow","cachedErrors","sendRecord","record","body","res","filter","path","pathname","language","navigator","ua","userAgent","platform","reportItem","lang","markRecordItem","sendList","map","allSettled","results","keepIndex","index","splice","markRecord","Report_WalletType_Key","Report_Proceed_QRCode_Click","Report_ChooseType_Download_Click","Report_ChooseType_ConnectWallet_Click","Report_Proceed_Retry_Click","Report_ChooseType_ConnectWallet_View","Report_Loading_ConnectWallet_View","Report_Proceed_QRCode_View","Report_Proceed_Proceed_View","dappMetaData","icon","JSONStringify","JSONParse","json","numbersBiggerThanMaxInt","serializedData","group","parse","isCustomFormatBigInt","substring","alloc","allocUnsafe","basics_1","string","encoding","base","BASES","decoder","array","encoder","createCodec","buf","ascii","bufNum","charCodeAt","utf8","hex","bases","base16","latin1","binary","isTmaPlatform","isInTelegramBrowser","sendExpand","sendOpenTelegramLink","initParams","locationHash","hash","urlParseHashParams","tmaPlatform","tgWebAppPlatform","Telegram","WebApp","webAppVersion","tgWebAppVersion","platforms","TelegramWebviewProxy","isTelegramWebview","TelegramWebview","postEvent","link","fallback","URL","pathFull","search","isIframe","versionAtLeast","path_full","parent","eventType","eventData","external","notify","trustedTarget","postMessage","indexOf","_path","urlSafeDecode","qIndex","pathParam","substr","query_params","urlParseQueryString","urlencoded","decodeURIComponent","queryString","paramName","paramValue","queryStringParams","v1","v2","a","p1","p2","v1List","v2List","max","parseInt","ver","removeUrlLastSlash","addPathToUrl","useStandardUniversalLink","replaceStrWithParam","cleanUrl","deeplinkEncodeUrl","encodeURIComponent","fullUrl","isTelegram","newWindow","href","deepLinkOpened","timeoutDuration","fallbackToDownloadPage","parameters","encodedParameters","connectParam","redirectStr","okxconnect","extraparams","base64ContentStr","urlSafeBase64","twaDeepLink","openTelegramLink","encodeTGParams","RANDOM_LENGTH","hasLocalStorage","hashKey","generateRandomBytes32","tweetnacl_util_1","to_string_1","sha256_1","BASE16","hexString","byteArray","byte","buffer1","buffer2","mergedArray","subArray1","subArray2","encodeUint8Array","urlSafe","encodeBase64","decodeToUint8Array","decodeBase64","uint8Array","decodeUTF8","decodedUint8Array","encodeUTF8","scheme","global","self","randomBytes32","obj","getPrototypeOf","maxTouchPoints","isIOSDevice","MSStream","isIPadOS","MD5","base64","getUserAgent","ua_parser_js_1","target","doFallback","fallbackTimeout","check","vendor","opera","getResult","osName","os","toLowerCase","deviceModel","device","model","browserName","browser","OKXBtcProvider","_1","core_1","provider","caip","getAddressForChainId","chainId","ns","checkChainId","account","getAccount","signMessage","signStr","ret","errorData","sendBitcoin","toAddress","satoshis","to","feeRate","txhash","checkParameters","signPsbt","psbtHex","signPsbts","psbtResults","psbtHexs","signAndPushPsbt","sendInscription","inscriptionId","extension","coinId","protocolId","atomicSuffix","ordinalsSuffix","endsWith","removeSuffix","scenario","txType","batchBean","coinAmount","nftId","sendRunes","runeid","amount","getProtocolId","fromAddress","inscribeTransfer","ticker","suffix","unexistKeys","namespaceKey","OKXCosmosProvider","accountArray","algo","bech32Address","pubKey","hexToUint8Array","signArbitrary","signerAddress","signDoc","chain_id","account_number","sequence","fee","gas","msgs","memo","signData","signAmino","signOptions","resData","signed","signDirect","bodyBytes","bufferToHex","authInfoBytes","accountNumber","messageToBuffer","buffer","arr","output","x","padStart","arrayBuffer","byteValue","isNaN","OKXStarknetProvider","STARKNET_CHAIN_ID","getChain","typedData","sendTransaction","transaction","transactionData","transaction_hash","signMessageDeclareContractPayload","sendMessageExecuteTransactionDetail","calls","abis","transactionsDetail","transactions","isArray","executionRequest","OKXTonProvider","statusChangeSubscriptions","statusChangeErrorSubscriptions","tonWallet","errorsHandler","connected","tonNameSpace","walletStateInit","sessionWallet","tonDeviceInfo","appVersion","maxProtocolVersion","features","connectItems","onStatusChange","MAINNET","requestAccountsWithNamespace","requestParams","OKXTronProvider","TRON_CHAIN_ID","stringToHex","signMessageV2","signTransaction","signedTx","realSignTx","visible","txID","rawData","contract","raw_data","expiration","ref_block_bytes","fee_limit","ref_block_hash","raw_data_hex","signAndSendTransaction","OKXUniversalProvider","eip155_1","sui_1","client_1","namespaces_1","solana_1","btc_1","aptos_1","ton_1","cosmos_1","tron_1","packages_1","provider_1","starknet_1","init","opts","setGlobal","okxConnectUniversalinwindow","initialize","providerOpts","rpcProviders","requestParam","buildRequestParamFromRequest","getProvider","validateChain","keyArr","enable","connectOpts","requestAccounts","called","onRequestSent","disconnectAndEmit","cleanup","engine","aptosChainNameToGeneralId","replaceAptos","aptosNameSpace","realNS","replaceAptosInner","aptos","optionAptosNameSpace","optionalNamespaces","realOptionNS","defaultChain","replaceAptosGeneralIdWithNetName","replaceSessionAptos","disconnectInner","connectAndSign","signRequest","updatedOpts","setNamespaces","requestItem","signResponseList","okxConnectUniversalUIinwindow","creatNotSupportMethodItemReplay","syncAllAddresses","syncAddressAvailable","syncAllAddress","setDefaultChain","rpcUrl","checkStorage","sessionInfoStr","getFromStore","createProviders","registerEventListeners","SignClient","providersToCreate","Set","parseNamespaceKey","namespacesValue","currentNameSpace","Eip155Provider","opts1","solanaProvider","sonicProvider","svmProvider","optsTon","tonProvider","optsSui","suiProvider","SuiProvider","optsBtc","btcProvider","fbProvider","aptosProvider","moveProvider","cosmosProvider","tronProvider","starknetProvider","PROVIDER_EVENTS","DEFAULT_CHAIN_CHANGED","caip2ChainId","onChainChanged","UPDATE_NAMESPACES","nameSpaces","nameSpacekey","persist","isChainNamespaceInSession","chainsArr","defaultNamespace","getDefaultChain","namespaceStr","requestDefaultChainWithNamespace","caip2Chain","sessionProperties","showRequestModal","OKXUniversalProvider_1","OKXBtcProvider_1","OKXCosmosProvider_1","OKXTonProvider_1","OKXTronProvider_1","OKXStarknetProvider_1","ConnectMethodUtils_1","metaData","requestAccountItem","requiredNamespaces","nameSpaceToConnectWalletNameSpace","SESSION_CONNECTING","connectMethodsToConnectWalletMethods","metadata","fillParamsToSession","connectMethodsResponseUpdate","openOKXWallet","allAddressStr","syncResoonseToRequire","connectSupportMethods","connectMethodsAdaptOldVersion","bs58_1","uint8array_extras_1","isRecord","notSupportError","errorItem","callBackParams","solAccount","account1","solAddress","fromAccountToAddress","realMessage","stringToUint8Array","suiMessage","convertedArray","b64encoded","atob","btcAccounts","account2","btcAccount","btcAddress","paramData","aptosAccount","account3","aptosAddress","fullMessage","application","aptosChainId","cosmosAccount","account_cosmos","cosmosAddress","cosmosData","cosmosBase64Encoded","stringToBase64","methodItem","solanaSuccessData","suiMethod","requestMethod","suiMessageb64","aptosSignature","requireNameSpace","includeEip155","some","space","syncAddressHostAvailable","includeChain","paramsArr","firstParam","firstObj","aptosParams","currentURL","signChainId","applicationUrl","cosmosChain","responseAddressStr","allAddress","isEvm","deriveName","addr","ci","evmAddress","freeze","getAccountsChains","isCaipNamespace","mergeRpcMap","targetRpcMap","sourceRpcMap","mergeNamespaces","source","rpcMap","GENERIC_SUBPROVIDER_NAME","RPC_URL","STORAGE","CONTEXT","WC_VERSION","PROTOCOL","RELAY_URL","LOGGER","JsonRpcConnection_1","JsonRpcProvider_1","AptosProvider","httpProviders","createHttpProviders","updateNamespace","getAccounts","setHttpProvider","http","parsedChainId","getChainId","parsedRpc","getRpcUrl","httpProvider","createHttpProvider","getHttpProvider","rpc","JsonRpcProvider","JsonRpcConnection","getGlobal","BtcProvider","CosmosProvider","updateRequestParams","isDic","switchChainId","decimalNumber","selectedChainId","chainNum","paramsChainId","paramsChainString","adaptArray","addressObj","isEqual","chainAddress","messages","typedDataJson","secondObj","hexChainId","getHexChainIdFromRequest","isChainApproved","handleSwitchChain","addEthereumChain","resultData","nameSpace","rpcUrls","eip155","core_2","disableProviderPing","isAvailable","registering","register","parseError","types_1","IJSONRpcProvider","connection","hasRegisteredEventListeners","setConnection","context","requestStrict","_error","SolanaProvider","getPubkey","getWalletAddress","components","StarknetProvider","__rest","s","t","getOwnPropertySymbols","propertyIsEnumerable","TONProvider","validUntil","newParams","boc","TronProvider","IJSONRpcConnection","opt","globals","convertChainIdToNumber","parseChainId","mergeArrays","projectId","reference","CAIP_DELIMITER","b","okxGlobal","_createElementBlock","_hoisted_1","_createVNode","_component_el_container","_withCtx","_component_el_header","_cache","_createTextVNode","_component_el_main","_component_el_card","class","_createElementVNode","style","_component_el_row","_component_el_col","span","_toDisplayString","$options","_ctx","_component_el_checkbox","modelValue","withUI","$event","onChange","handleWithUI","universalToTG","handleUniversalToTG","_component_el_select","modals","placeholder","handleModalsSelect","multiple","_component_el_option","label","returnStrategy","handleReturnStrategySelect","_Fragment","_renderList","returnStrategies","strategy","_createBlock","_component_el_input","deeplink","handleReturnStrategyDeeplink","disabled","_createCommentVNode","handleLanguageSelect","locales","locale","theme","handleThemeSelect","THEME","LIGHT","DARK","selectedMethod","handleConnectMethodsSelect","connectMethods","tonProofValue","gutter","align","availableChains","checked","areChainsInit","isOptionalChecked","handleOptionChange","_component_el_button","onClick","initBtnClicked","connectInitStr","connectBtnClicked","connectStatusStr","syncAllAddressClick","syncAllAddressStr","disconnectAction","walletAddress","disconnectStatusStr","_Teleport","showModal","closeModal","_withModifiers","_component_qrcode_vue","qrValue","level","_component_el_tabs","activeTab","onTabClick","clickActiveTab","_component_el_tab_pane","eth_requestAccounts","eth_chainId","wallet_switchEthereumChain","wallet_addEthereumChain","personal_sign","eth_signTypedData_v4","eth_sendTransaction_transfer","eth_sendTransaction_approve","eth_sendTransaction_mint","wallet_watchAsset","ton_getAccount","ton_sendTransaction","sol_signMessage","sol_signTransaction","sol_signVersionedTransaction","sol_signAllTransactions","sol_signAllVersionedTransactions","sol_signAndSendTransaction","sol_signAndSendVersionedTransaction","_component_SuiPanel","onGenerateTransactionParams","sui_generateTransactionParams","_component_BTCPanel","btc_generateTransactionParams","_component_FractalPanel","fractal_generateTransactionParams","_component_TronTransactionPanel","tron_generateTransactionParams","onGenerateTransactionResult","tron_getTransactionResult","aptos_signMessage","aptos_signTransaction","aptos_signAndSubmitTransaction","cosmos_signArbitrary","cosmos_signAmino","cosmos_signDirect","wallet_testRpc","eth_sendTransaction_swap","move_signTransaction","move_signAndSubmitTransaction","_component_StarknetPanel","ref","starknet_generateTransactionParams","starknet_getTransactionResult","testBase64UrlSafe","xs","sm","handleRedirectSelect","canChainAddRedirectParam","redirectDeeplink","handleRedirectDeeplink","addRedirectParam","testTransaction","rows","testboc","$setup","sendBtnDisabled","testTransactionStr","btc_getAccount","btc_signMessage","sendAmount","clearable","btc_send","sendSatoshisAmount","btc_sendBitcoin","btc_signPsbt_up","btc_signAndPushPsbt_up","receiver","btc_sendInscription","runsAddress","runsId","runsAmount","btc_sendRunes","intTicker","intAmount","btc_inscribeTransfer","props","setup","$emit","alert","autoFinalized","__exports__","fractal_getAccount","fractal_signMessage","fractal_send","fractal_sendBitcoin","fractal_signPsbt_up","fractal_signAndPushPsbt_up","fractal_sendInscription","fractal_sendRunes","fractal_inscribeTransfer","sui_getAccount","sui_signMessage","sui_signPersonalMessage","sui_signTransaction2","sui_signAndExecuteTransaction","sui_requestRpc","sui_signTransaction_pre_execution","sui_signAndExecuteTransaction_pre_execution","recipientAddress","tx","SuiTransaction","coin","splitCoins","transferObjects","transactionBlock","showEffects","txBytes","txSerialize","generateTsBytesAndSerizlize","resultTuple","senderAccounts","getFullnodeUrl","suiClient","SuiClient","setSender","build","Buffer","currentSuiTransaction","currentSuiMethod","starknet_signMessage","starknet_sendTransaction","getCurrentAddress","rpcProvider","RpcProvider","nodeUrl","pk","Account","that","verifyMessage","isValid","uint256","bnToUint256","transferCalldata","CallData","compile","DAITokenAddress","invokeParams","contract_address","entry_point","calldata","getPublicKey","tron_signMessage","tron_signMessageV2","tron_signTransaction","tron_signAndSendTransactionContract","tron_signAndSendTransactionApprove","tronWeb","TronWeb","trx","base58Address","verifyMessageV2","isOnlySign","transactionBuilder","sendTrx","getContract","contractAddress","abi","entrys","parameter","triggerSmartContract","verifyADR36Amino","fromBech32","VConsole","allChains","chainsThatCanAddRedirectParam","optionChains","selectedModals","selectedReturnStrategy","selectedDeepLink","selectedLanguage","selectedTheme","TronTransactionPanel","QrcodeVue","BTCPanel","FractalPanel","SuiPanel","StarknetPanel","testTopic","testPublicKey","testProofPayload","pendingDeepLink","logList","connectReady","localPubKey","localSecKey","selectedChain","ProofPayloadVerify","showVerifyRow","has","selectedMethodData","isChecked","reload","add","starknetPanelTypedData","computed","selectedChains","initChains","newChains","updatedChains","tab","tabName","initCall","OKXUniversalConnectUI","actionsConfiguration","uiPreferences","walletInfo","onModalStateChange","entries","uri","isPC","items","testTonSdk","blockExplorerUrls","chainName","nativeCurrency","symbol","decimals","dataETH","dataPolygon","types","EIP712Domain","Person","Mail","primaryType","domain","verifyingContract","contents","maxPriorityFeePerGas","maxFeePerGas","gasPrice","gasLimit","image","tonUniversalLog","sendTransactionAlert","fetch","confirm","sendData","adapter","SuiAdapter","suiResult","signAndExecuteTransaction","sui_verifySignature","signPersonalMessage","btcAdapter","btcResult","currentBtcMethod","currentBtcTransaction","hexToBase64","bs64Str","fractalResult","currentFractalMethod","currentFractalTransaction","hexStr","blob","Blob","reader","FileReader","onload","base64Data","readAsDataURL","datatest","firstStr","showUrl","hasEip155","hasSolana","hasSui","hasBtc","hasAptos","hasTon","hasCosmos","hasTron","nameSpacesChains","optSpaceChains","solanaChains","hasStarknet","suiChains","btcChains","connectMethod","connectData","requireData","solana","cosmos","tron","starknet","tonParams","ton","sui","btc","optData","eip155Chains","tonChains","signMethods","getCurrentSelectedMethodData","openModalAndSign","openModal","methodList","suiData","currentMethod","accountAddress","userAgentInfo","Agents","flag","isSafariOrChrome","pubkey","OKXSolanaProvider","result1","nacl","PublicKey","toBytes","OKXAptosProvider","config","AptosConfig","Network","Aptos","simple","sender","function","typeArguments","functionArguments","signAndSubmitTransaction","Connection","getSolConnect","blockhash","getLatestBlockhash","versionedTransactionMessage","TransactionMessage","payerKey","recentBlockhash","instructions","SystemProgram","transfer","fromPubkey","toPubkey","lamports","compileToV0Message","VersionedTransaction","signAllTransactions","Transaction","feePayer","cosmos_verifySignArbitrary","pub_key","signer","prefixStr","signatureBuffer","uint8Signature","pubKeyValueBuffer","pubKeyUint8Array","uiOptions","eth_verifyMessage","ethAddress","originalMessage","recoveredAddress","ethers","list","verifyList","requestItme","ethMessage","solanaMessage","verifySol","aptosMessage","aptosPublicKey","cosmosMessage","tronMessage","StarknetRpcProvider","StarknetAccount","signatureResult","resultObj","verifyPersonalMessageSignature","toSuiAddress","toBase64","newTransaction","c","created","mounted","scriptTag","createElement","src","getElementsByTagName","appendChild","title","$refs","starknetPanelRef","toRaw","render","app","createApp","App","use","ElementPlus","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","loaded","__webpack_modules__","amdO","deferred","O","chunkIds","priority","notFulfilled","Infinity","j","every","r","n","getter","d","leafPrototypes","getProto","__proto__","mode","def","current","definition","g","globalThis","Function","prop","Symbol","toStringTag","nmd","paths","children","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}