{"version":3,"file":"js/app.45231739.js","mappings":"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","sources":["webpack://okxconnectdemo/../packages/universal-provider/src/OKXBtcProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXCosmosProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXTonProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXTronProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXUniversalProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/sign-client/client.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/ConnectMethodUtils.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/namespaces.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/events.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/values.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/aptos.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/btc.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/cosmos.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/eip155.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcConnection.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/solana.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/sui.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/ton.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/tron.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/misc.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/providers.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/globals.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/misc.js","webpack://okxconnectdemo/./src/App.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue?1b44","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue?e4fb","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue?aa83","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue?089a","webpack://okxconnectdemo/./src/App.vue?7ccd","webpack://okxconnectdemo/./src/main.js","webpack://okxconnectdemo/webpack/bootstrap","webpack://okxconnectdemo/webpack/runtime/amd options","webpack://okxconnectdemo/webpack/runtime/chunk loaded","webpack://okxconnectdemo/webpack/runtime/compat get default export","webpack://okxconnectdemo/webpack/runtime/define property getters","webpack://okxconnectdemo/webpack/runtime/global","webpack://okxconnectdemo/webpack/runtime/hasOwnProperty shorthand","webpack://okxconnectdemo/webpack/runtime/make namespace object","webpack://okxconnectdemo/webpack/runtime/node module decorator","webpack://okxconnectdemo/webpack/runtime/jsonp chunk loading","webpack://okxconnectdemo/webpack/startup"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXBtcProvider = void 0;\nconst _1 = require(\"./\");\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXBtcProvider {\n    constructor(provider) {\n        this.caip = [\n            \"btc:mainnet\",\n            \"fractal:mainnet\"\n        ];\n        this.provider = provider;\n    }\n    getAddressForChainId(chainId) {\n        var _a, _b;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let accounts = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['btc']) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        });\n        if (accounts == undefined || accounts.length < 0) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `no connected account`);\n        }\n        let account = accounts[0];\n        const address = account.split(':')[2];\n        return address;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let extra = (_c = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['btc']) === null || _b === void 0 ? void 0 : _b.extra) === null || _c === void 0 ? void 0 : _c[chainId];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"compressedPublicKey\"];\n        }\n        return {\n            address: this.getAddressForChainId(chainId),\n            publicKey: publicKey\n        };\n    }\n    /**\n     *\n     * @param signStr\n     * @param chainId\n     * @param type\n     * @returns\n     */\n    signMessage(chainId, signStr, type) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (signStr === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signMessage parmas error`);\n            }\n            let params = {\n                signStr: signStr,\n                from: this.getAddressForChainId(chainId)\n            };\n            if (type) {\n                params.type = type;\n            }\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signMessage\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param toAddress\n     * @param satoshis\n     * @param options { feeRate: 0 }\n     * @returns\n     */\n    sendBitcoin(chainId, toAddress, satoshis, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            let params = {\n                from: this.getAddressForChainId(chainId),\n                to: toAddress,\n                value: (satoshis / 100000000).toString(),\n            };\n            if (options === null || options === void 0 ? void 0 : options.feeRate) {\n                params[\"satBytes\"] = options.feeRate.toString();\n            }\n            let result = yield this.send(chainId, params);\n            if (result !== undefined && ('txhash' in result)) {\n                // return txhash directly\n                return result.txhash;\n            }\n            // or return unexpected result\n            return result;\n        });\n    }\n    //  from - string：当前连接的钱包的 BTC 地址\n    //  to - string：接受 BTC 的地址\n    //  value - string：发送 BTC 的数量\n    //  satBytes - string： (可选) 自定义费率\n    //  memo - string： (可选) 指定 outputs OP_RETURN 内容 示例\n    //  memoPos - number： (可选) 指定 outputs OP_RETURN 输出位置，如果传了 memo 则必须传入 memoPos 指定位置，否则 memo 不生效\n    send(chainId, input) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (!this.checkParameters(input, 'to', 'value')) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send parmas  error`);\n            }\n            input[\"from\"] = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: 'btc_send',\n                    params: input\n                }, chainId);\n                if ('result' in ret) {\n                    return {\n                        txhash: ret.result\n                    };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param psbtHex string 要签名的 psbt 的十六进制字符串\n     * @param options object { autoFinalized: 0 }\n     */\n    signPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.signPsbts(chainId, [psbtHex], [options]).then(psbtResults => {\n                    let results = JSON.parse(psbtResults);\n                    resolve(results[0]);\n                }).catch(error => {\n                    reject(error);\n                });\n            });\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHexs Array\n     * @param options Array [{ autoFinalized: 0 }]\n     * @returns\n     */\n    signPsbts(chainId, psbtHexs, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHexs === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHexs: psbtHexs,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signPsbts\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHex string\n     * @param options object\n     * @returns\n     */\n    signAndPushPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHex === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHex: psbtHex,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signAndPushPsbt\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return JSON.parse(ret.result);\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param address string, receiver address\n     * @param inscriptionId string, 铭文 ID + 协议，没有传协议则默认是 Ordinals NFT ，目前仅支持 Ordinals 及 Atomicals 协议\n     * @param options object, { feeRate: number } custom rates\n     */\n    sendInscription(chainId, address, inscriptionId, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let extension = {\n                address: address,\n                inscriptionId: inscriptionId,\n                options: options\n            };\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (address === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method sendInscription params error`);\n            }\n            var feeRate = 0;\n            if (options && ('feeRate' in options)) {\n                feeRate = options.feeRate;\n            }\n            let coinId = '';\n            let from = this.getAddressForChainId(chainId);\n            var protocolId = 7; //ProtocolIdBRCNFT\n            if (inscriptionId !== 'undefined') {\n                let atomicSuffix = \"-Atomicals\";\n                let ordinalsSuffix = \"-Ordinals\";\n                if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(atomicSuffix.toLowerCase())) {\n                    protocolId = 8; //WXRCProtocolIdARCNFT\n                    inscriptionId = this.removeSuffix(inscriptionId, atomicSuffix);\n                }\n                else if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(ordinalsSuffix.toLowerCase())) {\n                    inscriptionId = this.removeSuffix(inscriptionId, ordinalsSuffix);\n                }\n            }\n            let params = {\n                scenario: 5,\n                feeRate: feeRate,\n                txType: \"20\",\n                to: address,\n                batchBean: [\n                    {\n                        coinAmount: \"1\",\n                        nftId: inscriptionId,\n                        protocolId: protocolId,\n                        coinId: coinId,\n                        inscriptionId: \"\",\n                        from: from\n                    }\n                ],\n                extension: extension\n            };\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_sendInscription\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    sendRunes(chainId, address, runeid, amount, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!chainId || !address || !runeid || !amount) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `The parameter is empty. Please check`);\n            }\n            try {\n                let params = {\n                    address: address, //String\n                    runeid: runeid, //String\n                    amount: amount, // String\n                    options: options\n                };\n                (0, core_1.logDebug)(\"OKXBtcProvider sendRunes -->\", JSON.stringify(params));\n                const ret = yield this.provider.request({\n                    method: \"btc_sendRunes\",\n                    params: params\n                }, chainId);\n                return ret.result;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    inscribeTransfer(chainId, ticker, amount) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!chainId || !ticker || !amount) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `The parameter is empty. Please check`);\n            }\n            try {\n                let params = {\n                    ticker: ticker, //String\n                    amount: amount, // String\n                };\n                (0, core_1.logDebug)(\"OKXBtcProvider inscribeTransfer -->\", JSON.stringify(params));\n                const ret = yield this.provider.request({\n                    method: \"btc_inscribeTransfer\",\n                    params: params\n                }, chainId);\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    removeSuffix(str, suffix) {\n        if (str.endsWith(suffix)) {\n            return str.slice(0, str.length - suffix.length);\n        }\n        return str;\n    }\n    checkParameters(params, ...keys) {\n        var unexistKeys = [];\n        keys.forEach(key => {\n            if (!(`${key}` in params)) {\n                unexistKeys.push(key);\n            }\n        });\n        if (unexistKeys.length > 0) {\n            console.log('not find key: ', unexistKeys.join(\",\"));\n            return false;\n        }\n        return true;\n    }\n    /**\n     *\n     * @param chainId eg. btc:mainnet\n     * @returns eg. btc\n     */\n    checkChainId(chainId) {\n        if (this.caip.includes(chainId)) {\n            let [namespaceKey, _] = chainId.split(\":\");\n            return namespaceKey;\n        }\n        return undefined;\n    }\n}\nexports.OKXBtcProvider = OKXBtcProvider;\nexports.default = OKXBtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCosmosProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXCosmosProvider {\n    constructor(provider) {\n        this.provider = provider;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e, _f;\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount chainId:\", chainId);\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount namespaces:\", JSON.stringify((_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces));\n        let account = (_c = (_b = this.provider.session) === null || _b === void 0 ? void 0 : _b.namespaces[core_1.NameSpaceKeyCosmos]) === null || _c === void 0 ? void 0 : _c.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount account:\", JSON.stringify(account));\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount address:\", address);\n        let extra = (_f = (_e = (_d = this.provider.session) === null || _d === void 0 ? void 0 : _d.namespaces[core_1.NameSpaceKeyCosmos]) === null || _e === void 0 ? void 0 : _e.extra) === null || _f === void 0 ? void 0 : _f[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n            console.log(\"aptos_publicKey\", publicKey);\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            algo: \"secp256k1\",\n            address: address,\n            bech32Address: address,\n            pubKey: this.hexToUint8Array(publicKey),\n        };\n    }\n    signArbitrary(chainId, signerAddress, data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const base64Encoded = window.btoa(data);\n            const signDoc = {\n                chain_id: \"\",\n                account_number: \"0\",\n                sequence: \"0\",\n                fee: {\n                    gas: \"0\",\n                    amount: []\n                },\n                msgs: [{\n                        \"type\": \"sign/MsgSignData\",\n                        \"value\": {\n                            \"signer\": signerAddress,\n                            \"data\": base64Encoded\n                        }\n                    }],\n                memo: \"\"\n            };\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signArbitrary\",\n                \"params\": {\n                    \"signer\": signerAddress,\n                    \"chain_id\": chainId.split(\":\")[1],\n                    \"data\": signDoc\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    if (typeof ret.result == \"string\") {\n                        return JSON.parse(ret.result);\n                    }\n                    else {\n                        return ret.result;\n                    }\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signAmino(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (signDoc.msgs[0].type == \"sign/MsgSignData\") {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signArbitrary\",\n                    \"params\": {\n                        \"signer\": signerAddress,\n                        \"chain_id\": chainId.split(\":\")[1],\n                        \"data\": signDoc\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        return ret.result;\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    return error;\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                }\n            }\n            else {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signAmino\",\n                    \"params\": {\n                        \"signer\": signerAddress,\n                        \"chainId\": chainId.split(\":\")[1],\n                        \"sign_doc\": signDoc,\n                        \"signOptions\": signOptions\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        const resData = JSON.parse(ret.result);\n                        console.log(\"signdoc\", signDoc, resData.signDoc);\n                        signDoc.fee = resData.signDoc.fee;\n                        return { signed: signDoc, signature: resData.signature };\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                    return error;\n                }\n            }\n        });\n    }\n    signDirect(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const object = {\n                bodyBytes: this.bufferToHex(signDoc.bodyBytes),\n                authInfoBytes: this.bufferToHex(signDoc.authInfoBytes),\n                chainId: signDoc.chainId,\n                accountNumber: signDoc.accountNumber ? signDoc.accountNumber.toString() : null,\n                signOptions: signOptions ? signOptions : null\n            };\n            let data = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signDirect\",\n                \"params\": {\n                    \"signer\": signerAddress,\n                    \"chainId\": chainId.split(\":\")[1],\n                    \"sign_doc\": object,\n                }\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    const res = JSON.parse(ret.result);\n                    console.log(\"signdirect result\", res);\n                    signDoc.authInfoBytes = this.messageToBuffer(res.signDoc.authInfoBytes);\n                    return { signed: signDoc, signature: res.signature };\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    messageToBuffer(message) {\n        var buffer = Uint8Array.from([]);\n        try {\n            if (typeof message === \"string\") {\n                buffer = this.hexToUint8Array(message.replace(\"0x\", \"\"));\n            }\n            else {\n                buffer = Uint8Array.from(message);\n            }\n        }\n        catch (err) {\n            console.log(`messageToBuffer error: ${err}`);\n        }\n        return buffer;\n    }\n    bufferToHex(arr) {\n        let output = [...new Uint8Array(arr)]\n            .map(x => x.toString(16).padStart(2, '0'))\n            .join('');\n        return '0x' + output;\n    }\n    hexToUint8Array(hexString) {\n        if (hexString.length % 2 !== 0) {\n            throw \"Invalid hexString\";\n        }\n        var arrayBuffer = new Uint8Array(hexString.length / 2);\n        for (var i = 0; i < hexString.length; i += 2) {\n            var byteValue = parseInt(hexString.substr(i, 2), 16);\n            if (isNaN(byteValue)) {\n                throw \"Invalid hexString\";\n            }\n            arrayBuffer[i / 2] = byteValue;\n        }\n        return arrayBuffer;\n    }\n}\nexports.OKXCosmosProvider = OKXCosmosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTonProvider = void 0;\nconst _1 = require(\"./\");\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXTonProvider {\n    constructor(generator) {\n        this.statusChangeSubscriptions = [];\n        this.statusChangeErrorSubscriptions = [];\n        this.provider = generator;\n        this.provider.on(\"connect\", () => {\n            let tonWallet = this.wallet();\n            (0, core_1.logDebug)(\"OKXTONProvider event connect:\", JSON.stringify(tonWallet));\n            this.statusChangeSubscriptions.forEach(callback => callback(tonWallet));\n        });\n        this.provider.on(\"reconnect\", () => {\n            let tonWallet = this.wallet();\n            (0, core_1.logDebug)(\"OKXTONProvider event reconnect:\", JSON.stringify(tonWallet));\n            this.statusChangeSubscriptions.forEach(callback => callback(tonWallet));\n        });\n        this.provider.on(\"disconnect\", () => {\n            (0, core_1.logDebug)(\"OKXTONProvider event disconnect:\");\n            this.statusChangeSubscriptions.forEach(callback => callback(null));\n        });\n        this.provider.on(\"connect_error\", (error) => {\n            (0, core_1.logDebug)(\"OKXTONProvider event connect_error:\", JSON.stringify(error));\n            this.statusChangeErrorSubscriptions.forEach(errorsHandler => errorsHandler(error));\n        });\n    }\n    connected() {\n        if (this.provider.connected()) {\n            return !!this.provider.session.namespaces[\"ton\"];\n        }\n        return false;\n    }\n    account() {\n        try {\n            if (!this.provider.session) {\n                return null;\n            }\n            let tonNameSpace = this.provider.session.namespaces['ton'];\n            if (!tonNameSpace || !tonNameSpace.payload || !tonNameSpace.payload.ton_addr) {\n                return null;\n            }\n            let ton_addr = tonNameSpace.payload.ton_addr;\n            return {\n                address: ton_addr.address,\n                chain: ton_addr.network,\n                walletStateInit: ton_addr.walletStateInit,\n                publicKey: ton_addr.publicKey,\n            };\n        }\n        catch (e) {\n            (0, core_1.logDebug)(\"OKXTONProvider account  error:\", JSON.stringify(e));\n            return null;\n        }\n    }\n    wallet() {\n        if (this.connected()) {\n            try {\n                let sessionWallet = this.provider.session.wallet;\n                let tonDeviceInfo = {\n                    platform: sessionWallet.platform,\n                    appName: sessionWallet.appName,\n                    appVersion: sessionWallet.appVersion,\n                    maxProtocolVersion: sessionWallet.maxProtocolVersion,\n                    features: ['ton_sendTransaction'],\n                };\n                const wallet = {\n                    device: tonDeviceInfo,\n                    provider: \"http\",\n                    account: this.account()\n                };\n                let tonNameSpace = this.provider.session.namespaces['ton'];\n                if (tonNameSpace && tonNameSpace.payload && tonNameSpace.payload.ton_proof) {\n                    wallet.connectItems = {\n                        tonProof: tonNameSpace.payload.ton_proof\n                    };\n                }\n                (0, core_1.logDebug)(\"OKXTONProvider wallet :\", JSON.stringify(wallet));\n                return wallet;\n            }\n            catch (e) {\n                (0, core_1.logDebug)(\"OKXTONProvider wallet  error:\", JSON.stringify(e));\n                return null;\n            }\n        }\n        return null;\n    }\n    onStatusChange(callback, errorsHandler) {\n        this.statusChangeSubscriptions.push(callback);\n        if (errorsHandler) {\n            this.statusChangeErrorSubscriptions.push(errorsHandler);\n        }\n        return () => {\n            this.statusChangeSubscriptions = this.statusChangeSubscriptions.filter(item => item !== callback);\n            if (errorsHandler) {\n                this.statusChangeErrorSubscriptions = this.statusChangeErrorSubscriptions.filter(item => item !== errorsHandler);\n            }\n        };\n    }\n    sendTransaction(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (transaction.network && transaction.network !== core_1.TONCHAIN.MAINNET) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, 'OKXTONProvider sendTransaction network error');\n            }\n            if (!transaction.network) {\n                transaction.network = core_1.TONCHAIN.MAINNET;\n            }\n            if (this.provider.session) {\n                if (!transaction.from) {\n                    const accounts = this.provider.requestAccountsWithNamespace('ton');\n                    transaction.from = accounts[0];\n                }\n            }\n            const requestParams = {\n                method: \"ton_sendTransaction\",\n                params: transaction,\n            };\n            let chain = 'ton:' + core_1.TONCHAIN.MAINNET;\n            (0, core_1.logDebug)(\"OKXTONProvider sendTransaction transaction----:\", chain, JSON.stringify(requestParams));\n            return this.provider.request(requestParams, chain);\n        });\n    }\n}\nexports.OKXTonProvider = OKXTonProvider;\nexports.default = OKXTonProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTronProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXTronProvider {\n    constructor(provider) {\n        this.TRON_CHAIN_ID = \"tron:mainnet\";\n        this.provider = provider;\n    }\n    getChain(chainId) {\n        if (chainId == null) {\n            chainId = this.TRON_CHAIN_ID;\n        }\n        if (chainId != this.TRON_CHAIN_ID) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, \"The chainId:\" + chainId + \"is wrong for OKXTronProvider\");\n        }\n        return chainId;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e;\n        chainId = this.getChain(chainId);\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[core_1.NameSpaceKeyTron]) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        let extra = (_e = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces[core_1.NameSpaceKeyTron]) === null || _d === void 0 ? void 0 : _d.extra) === null || _e === void 0 ? void 0 : _e[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address\n        };\n    }\n    stringToHex(str) {\n        let hex = '';\n        for (let i = 0; i < str.length; i++) {\n            hex += str.charCodeAt(i).toString(16).padStart(2, '0');\n        }\n        return hex;\n    }\n    signMessage(data, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"tron_signMessage\",\n                \"params\": {\n                    \"message\": this.stringToHex(data)\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signMessageV2(data, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"tron_signMessageV2\",\n                \"params\": {\n                    \"message\": data\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let data = {\n                \"method\": \"tron_signTransaction\",\n                \"params\": transaction\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    let signedTx;\n                    if (typeof ret.result == \"string\") {\n                        signedTx = JSON.parse(ret.result);\n                    }\n                    else {\n                        signedTx = ret.result;\n                    }\n                    let realSignTx = {};\n                    realSignTx.visible = signedTx.visible;\n                    realSignTx.txID = signedTx.txID;\n                    let rawData = {};\n                    rawData.contract = signedTx.raw_data.contract;\n                    rawData.expiration = signedTx.raw_data.expiration;\n                    rawData.ref_block_bytes = signedTx.raw_data.ref_block_bytes;\n                    rawData.fee_limit = signedTx.raw_data.fee_limit;\n                    rawData.ref_block_hash = signedTx.raw_data.ref_block_hash;\n                    rawData.timestamp = signedTx.raw_data.timestamp;\n                    realSignTx.raw_data = rawData;\n                    realSignTx.raw_data_hex = signedTx.raw_data_hex;\n                    realSignTx.signature = signedTx.signature;\n                    return realSignTx;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signAndSendTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let data = {\n                \"method\": \"tron_signAndSendTransaction\",\n                \"params\": transaction\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n}\nexports.OKXTronProvider = OKXTronProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXUniversalProvider = void 0;\nconst eip155_1 = require(\"./provider/providers/eip155\");\nconst sui_1 = require(\"./provider/providers/sui\");\nconst constants_1 = require(\"./provider/constants\");\nconst eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\nconst client_1 = require(\"./packages/sign-client/client\");\nconst core_1 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"./packages/utils/namespaces\");\nconst solana_1 = __importDefault(require(\"./provider/providers/solana\"));\nconst btc_1 = __importDefault(require(\"./provider/providers/btc\"));\nconst aptos_1 = __importDefault(require(\"./provider/providers/aptos\"));\nconst ton_1 = __importDefault(require(\"./provider/providers/ton\"));\nconst cosmos_1 = __importDefault(require(\"./provider/providers/cosmos\"));\nconst tron_1 = __importDefault(require(\"./provider/providers/tron\"));\nconst utils_1 = require(\"./provider/utils\");\nconst packages_1 = require(\"./packages\");\nconst provider_1 = require(\"./provider\");\nclass OKXUniversalProvider {\n    static init(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider init() called');\n            (0, core_1.checkMetaData)(opts.dappMetaData);\n            // ignore rpc provider check by default\n            (0, utils_1.setGlobal)('disableProviderPing', true);\n            let provider;\n            if (window && window.okxConnectUniversalinwindow && window.okxConnectUniversalinwindow instanceof OKXUniversalProvider) {\n                (0, core_1.logDebug)('OKXUniversalConnect init() old called');\n                provider = window.okxConnectUniversalinwindow;\n            }\n            else {\n                (0, core_1.logDebug)('OKXUniversalConnect init() new called');\n                provider = new OKXUniversalProvider(opts);\n                yield provider.initialize();\n                if (window) {\n                    window.okxConnectUniversalinwindow = provider;\n                }\n            }\n            (0, core_1.getDefaultReporter)().configVersionAndSide('universalprovider-1.5.2', 'dapp', provider.providerOpts.dappMetaData.name);\n            return provider;\n        });\n    }\n    constructor(opts) {\n        this.rpcProviders = {};\n        this.events = new eventemitter3_1.default();\n        this.providerOpts = opts;\n    }\n    request(args, chain) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider request() called');\n            (0, core_1.reportLog)('OKXUniversalProvider request() called');\n            if (!this.connected()) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return yield this.getProvider(namespace).request(requestParam);\n        });\n    }\n    buildRequestParamFromRequest(args, chain) {\n        var _a;\n        (0, core_1.logDebug)(\"UniversalProvider request args >>>>>>>: \", chain, JSON.stringify(args));\n        let [namespace, chainId] = this.validateChain(chain);\n        if (!this.session) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Please call connect() before request()\");\n        }\n        let keyArr = Object.keys(this.session.namespaces);\n        if (!chain && keyArr && keyArr.length > 1) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Multiple chains have been linked, the request method requires chain`);\n        }\n        if (namespace == \"aptos\" && chainId == \"mainnet\") {\n            namespace = \"aptos\";\n            chainId = \"637\";\n        }\n        if (namespace == \"movement\" && chainId == \"testnet\") {\n            namespace = \"aptos\";\n            chainId = \"70000060\";\n        }\n        const requestParam = Object.assign(Object.assign({}, args), { chainId: `${namespace}:${chainId}`, redirect: (_a = args.redirect) !== null && _a !== void 0 ? _a : this.sessionConfig.redirect });\n        return { namespace, requestParam };\n    }\n    enable() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.client) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (!this.session) {\n                if (this.connectOpts) {\n                    yield this.connect(this.connectOpts);\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n                }\n            }\n            const accounts = yield this.requestAccounts();\n            return accounts;\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider disconnect() called');\n            (0, core_1.reportLog)('provider disconnect called');\n            if (!this.session) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n                let called = false;\n                const onRequestSent = () => __awaiter(this, void 0, void 0, function* () {\n                    if (!called) {\n                        called = true;\n                        yield this.disconnectAndEmit();\n                        yield this.cleanup();\n                        resolve();\n                        (0, core_1.logDebug)(\"UniversalProvider disconnect Disconnected\");\n                        (0, core_1.reportLog)('provider disconnect disconnected');\n                    }\n                });\n                try {\n                    yield this.client.disconnect();\n                    yield onRequestSent();\n                }\n                catch (e) {\n                    yield onRequestSent();\n                }\n            }));\n        });\n    }\n    disconnectAndEmit() {\n        var _a, _b;\n        this.client.engine.connectionManager.disconnect();\n        this.events.emit(\"disconnect\", { topic: (_a = this.session) === null || _a === void 0 ? void 0 : _a.topic });\n        this.events.emit(\"session_delete\", { topic: (_b = this.session) === null || _b === void 0 ? void 0 : _b.topic });\n    }\n    aptosChainNameToGeneralId(chainId) {\n        if (chainId == \"aptos:mainnet\") {\n            return \"aptos:637\";\n        }\n        else if (chainId == \"movement:testnet\") {\n            return \"aptos:70000060\";\n        }\n        else {\n            return chainId;\n        }\n    }\n    replaceAptos(opts) {\n        var _a, _b;\n        let aptosNameSpace = (_a = opts.namespaces) === null || _a === void 0 ? void 0 : _a[\"aptos\"];\n        if (aptosNameSpace != undefined) {\n            let realNS = this.replaceAptosInner(aptosNameSpace);\n            if (opts.namespaces != undefined && \"aptos\" in opts.namespaces && realNS != undefined) {\n                opts.namespaces.aptos = realNS;\n            }\n        }\n        let optionAptosNameSpace = (_b = opts.optionalNamespaces) === null || _b === void 0 ? void 0 : _b[\"aptos\"];\n        if (optionAptosNameSpace != undefined) {\n            let realOptionNS = this.replaceAptosInner(optionAptosNameSpace);\n            if (opts.optionalNamespaces != undefined && \"aptos\" in opts.optionalNamespaces && realOptionNS != undefined) {\n                opts.optionalNamespaces.aptos = realOptionNS;\n            }\n        }\n        return opts;\n    }\n    replaceAptosInner(aptosNameSpace) {\n        var _a;\n        if (aptosNameSpace != undefined) {\n            aptosNameSpace.chains = (_a = aptosNameSpace.chains) === null || _a === void 0 ? void 0 : _a.map(chainId => {\n                return this.aptosChainNameToGeneralId(chainId);\n            });\n            if (aptosNameSpace.defaultChain != undefined) {\n                aptosNameSpace.defaultChain = this.aptosChainNameToGeneralId(aptosNameSpace.defaultChain);\n            }\n        }\n        return aptosNameSpace;\n    }\n    replaceAptosGeneralIdWithNetName(chainId) {\n        if (chainId.includes(\"aptos:637\")) {\n            chainId = chainId.replace(\"aptos:637\", \"aptos:mainnet\");\n        }\n        else if (chainId.includes(\"aptos:70000060\")) {\n            chainId = chainId.replace(\"aptos:70000060\", \"movement:testnet\");\n        }\n        return chainId;\n    }\n    replaceSessionAptos(session) {\n        var _a;\n        let namespaces = (_a = session === null || session === void 0 ? void 0 : session.namespaces) === null || _a === void 0 ? void 0 : _a[\"aptos\"];\n        if (namespaces != undefined && namespaces.chains != undefined) {\n            namespaces.chains = namespaces.chains.map(chain => {\n                return this.replaceAptosGeneralIdWithNetName(chain);\n            });\n            namespaces.accounts = namespaces.accounts.map((account) => {\n                return this.replaceAptosGeneralIdWithNetName(account);\n            });\n            let extra = {};\n            Object.keys(namespaces.extra || {}).forEach((key, index) => {\n                let newKey = this.replaceAptosGeneralIdWithNetName(key);\n                extra[this.replaceAptosGeneralIdWithNetName(key)] = Object.values((session === null || session === void 0 ? void 0 : session.namespaces[\"aptos\"].extra) || {})[index];\n            });\n            namespaces.extra = extra;\n        }\n        (0, core_1.logDebug)(\"replaceSessionAptos\", session);\n    }\n    connected() {\n        (0, core_1.logDebug)('OKXUniversalProvider connected() called');\n        (0, core_1.reportLog)('provider connected called');\n        let disconnectInner = () => {\n            try {\n                this.cleanup();\n                this.client.engine.connectionManager.disconnect();\n            }\n            catch (e) {\n                (0, core_1.logDebug)(\"Error during disconnect:\", e);\n            }\n        };\n        try {\n            if (!this.session)\n                return false;\n            if (!this.client.engine.connectionManager.getCurrentConnectionReady()) {\n                disconnectInner();\n                return false;\n            }\n            return true;\n        }\n        catch (e) {\n            disconnectInner();\n            return false;\n        }\n    }\n    connectAndSign(opts, signRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() called');\n            const updatedOpts = Object.assign(Object.assign({}, opts), { signRequest });\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() opts:', JSON.stringify(opts));\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() signRequest:', JSON.stringify(signRequest));\n            return yield this.connect(updatedOpts);\n        });\n    }\n    connect(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider connect() called');\n            (0, core_1.reportLog)('provider connect called');\n            if (!this.client) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (this.connected()) {\n                return this.session;\n            }\n            opts = this.replaceAptos(opts);\n            (0, core_1.logDebug)(`OKXUniversalProvider connect >>>>`, JSON.stringify(opts));\n            if (opts.sessionConfig === undefined) {\n                opts.sessionConfig = {};\n            }\n            if (opts.sessionConfig.openUniversalUrl === undefined) {\n                opts.sessionConfig.openUniversalUrl = (0, core_1.isMobileUserAgent)();\n            }\n            this.setNamespaces(opts);\n            try {\n                (0, core_1.logDebug)(`UniversalProvider connect opts.stringify ====> ${JSON.stringify(opts)}`);\n                let session = yield this.client.connect(opts);\n                this.replaceSessionAptos(session);\n                (0, core_1.logDebug)(`UniversalProvider connect success ====> ${JSON.stringify(session)}`);\n                if (session) {\n                    this.session = session;\n                    this.client.session = session;\n                    (0, core_1.logDebug)(`OKXUniversalProvider connect success opts>>>>`, JSON.stringify(opts));\n                    this.onConnect();\n                    if (opts.signRequest && opts.signRequest.length > 0) {\n                        let requestItem = opts.signRequest[0];\n                        let signResponseList = [];\n                        if (typeof window !== \"undefined\" && window && window.okxConnectUniversalUIinwindow) { //from UI\n                            (0, core_1.logDebug)(`OKXUniversalProvider connect success, us UI SDK>>>>`);\n                            if (this.session.signResponse && this.session.signResponse.length > 0) { // >=6.96\n                                signResponseList = this.session.signResponse;\n                            }\n                        }\n                        else {\n                            (0, core_1.logDebug)(`OKXUniversalProvider connect success, us Universal SDK>>>>`);\n                            if (this.session.signResponse && this.session.signResponse.length > 0) { // >=6.96\n                                signResponseList = this.session.signResponse;\n                            }\n                            else {\n                                signResponseList.push((0, packages_1.creatNotSupportMethodItemReplay)(requestItem));\n                            }\n                        }\n                        (0, core_1.logDebug)(`UniversalProvider connect success connectRequestReply ====> ${JSON.stringify(signResponseList)}`);\n                        setTimeout(() => {\n                            this.events.emit(\"connect_signResponse\", signResponseList);\n                        }, 100);\n                    }\n                    return session;\n                }\n                return undefined;\n            }\n            catch (error) {\n                (0, core_1.logDebug)(`UniversalProvider connect error ====> `, JSON.stringify(error));\n                throw error;\n            }\n        });\n    }\n    syncAllAddresses() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if ((0, provider_1.syncAddressAvailable)(this.session.wallet)) {\n                return this.client.syncAllAddress();\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n            }\n        });\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    setDefaultChain(chain, rpcUrl) {\n        (0, core_1.logDebug)('OKXUniversalProvider setDefaultChain() called');\n        // chain = this.aptosChainNameToGeneralId(chain)\n        try {\n            // ignore without active session\n            if (!this.connected())\n                return;\n            const [namespace, chainId] = this.validateChain(chain);\n            const provider = this.getProvider(namespace);\n            provider.setDefaultChain(chainId, rpcUrl);\n        }\n        catch (error) {\n            // ignore the error if the fx is used prematurely before namespaces are set\n            if (!/Please call connect/.test(error.message))\n                throw error;\n        }\n    }\n    checkStorage() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let sessionInfoStr = yield this.getFromStore(\"connectSession\");\n            (0, core_1.logDebug)(sessionInfoStr);\n            if (sessionInfoStr) {\n                let sessionInfo = sessionInfoStr;\n                this.session = sessionInfo;\n                this.client.session = this.session;\n                this.sessionConfig = sessionInfo.sessionConfig;\n                this.client.sessionConfig = this.sessionConfig;\n                (0, core_1.logDebug)('[evm u-provider] do reconnection', this.session);\n                yield this.client.restoreconnect(sessionInfo);\n                this.createProviders();\n                this.registerEventListeners();\n                setTimeout(() => {\n                    this.events.emit(\"reconnect\", { session: this.session });\n                }, 100);\n                this.registerEventListeners();\n            }\n        });\n    }\n    initialize() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider initialize() called');\n            (0, core_1.reportLog)('provider initialize called');\n            const data = Object.assign({ url: window.location.hostname, origin: window.location.origin }, this.providerOpts.dappMetaData);\n            this.client = new client_1.SignClient(data, this.events);\n            yield this.checkStorage();\n        });\n    }\n    createProviders() {\n        if (!this.client) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n        }\n        if (!this.connected()) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Session not initialized. Please call connect() before enable()\");\n        }\n        const providersToCreate = [\n            ...new Set(Object.keys(this.session.namespaces)\n                .filter((namespace) => { var _a, _b; return ((_b = (_a = this.session.namespaces[namespace]) === null || _a === void 0 ? void 0 : _a.accounts) === null || _b === void 0 ? void 0 : _b.length) > 0; })\n                .map((namespace) => (0, namespaces_1.parseNamespaceKey)(namespace))),\n        ];\n        providersToCreate.forEach((namespace) => {\n            if (!this.session)\n                return;\n            const namespacesValue = this.session.namespaces;\n            const currentNameSpace = namespacesValue[namespace];\n            (0, core_1.logDebug)(\"init eip155 >> \", currentNameSpace);\n            switch (namespace) {\n                case \"eip155\":\n                    const opts = {\n                        namespace: currentNameSpace\n                    };\n                    this.rpcProviders[namespace] = new eip155_1.Eip155Provider(opts, this.client, this.events);\n                    break;\n                case \"solana\":\n                    const opts1 = {\n                        namespace: currentNameSpace\n                    };\n                    let solanaProvider = new solana_1.default(opts1, \"solana\", this.client, this.events);\n                    this.rpcProviders[namespace] = solanaProvider;\n                    let sonicProvider = new solana_1.default(opts1, \"sonic\", this.client, this.events);\n                    this.rpcProviders['sonic'] = sonicProvider;\n                    let svmProvider = new solana_1.default(opts1, \"svm\", this.client, this.events);\n                    this.rpcProviders['svm'] = svmProvider;\n                    // this.rpcProviders[namespace] = new SolanaProvider(opts1, () => { return this.session; });\n                    break;\n                case \"ton\":\n                    const optsTon = {\n                        namespace: currentNameSpace\n                    };\n                    let tonProvider = new ton_1.default(optsTon, this.client, this.events);\n                    this.rpcProviders[namespace] = tonProvider;\n                    break;\n                case \"sui\":\n                    const optsSui = {\n                        namespace: currentNameSpace\n                    };\n                    let suiProvider = new sui_1.SuiProvider(optsSui, this.client, this.events);\n                    suiProvider.name = \"sui\";\n                    this.rpcProviders[namespace] = suiProvider;\n                    break;\n                case \"btc\":\n                    const optsBtc = {\n                        namespace: currentNameSpace\n                    };\n                    let btcProvider = new btc_1.default(optsBtc, \"btc\", this.client, this.events);\n                    this.rpcProviders[\"btc\"] = btcProvider;\n                    let fbProvider = new btc_1.default(optsBtc, \"fractal\", this.client, this.events);\n                    this.rpcProviders[\"fractal\"] = fbProvider;\n                    break;\n                case \"aptos\":\n                    let aptosProvider = new aptos_1.default({\n                        namespace: currentNameSpace\n                    }, \"aptos\", this.client, this.events);\n                    this.rpcProviders[namespace] = aptosProvider;\n                    let moveProvider = new aptos_1.default({\n                        namespace: currentNameSpace\n                    }, \"movement\", this.client, this.events);\n                    this.rpcProviders[\"movement\"] = moveProvider;\n                    break;\n                case \"cosmos\":\n                    let cosmosProvider = new cosmos_1.default({\n                        namespace: currentNameSpace\n                    }, this.client, this.events);\n                    this.rpcProviders[namespace] = cosmosProvider;\n                    break;\n                case \"tron\":\n                    let tronProvider = new tron_1.default({\n                        namespace: currentNameSpace\n                    }, this.client, this.events);\n                    this.rpcProviders[namespace] = tronProvider;\n                    break;\n            }\n        });\n    }\n    registerEventListeners() {\n        if (typeof this.client === \"undefined\") {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client is not initialized\");\n        }\n        this.client.engine.addDisconnectListener(() => {\n            this.disconnectAndEmit();\n            this.cleanup();\n        });\n        this.on(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, (caip2ChainId) => {\n            this.onChainChanged(caip2ChainId);\n        });\n        this.on(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, (nameSpaces) => {\n            if (nameSpaces) {\n                const nameSpacekey = Object.keys(nameSpaces)[0];\n                if (this.session) {\n                    this.session.namespaces[nameSpacekey] = nameSpaces[nameSpacekey];\n                    if (this.session) {\n                        this.persist(\"connectSession\", this.session);\n                        this.events.emit(\"session_update\", this.session);\n                    }\n                    (0, core_1.logDebug)(\"PROVIDER_EVENTS.UPDATE_NAMESPACES this.session... ->>>\", JSON.stringify(this.session));\n                }\n            }\n        });\n    }\n    getProvider(namespace) {\n        (0, core_1.logDebug)('current get providers', this.rpcProviders);\n        (0, core_1.logDebug)('query namespace: ', namespace);\n        return this.rpcProviders[namespace];\n    }\n    setNamespaces(params) {\n        this.connectOpts = params;\n        const { namespaces, sessionConfig } = params;\n        const data = {\n            origin: window.location.origin,\n            url: window.location.hostname,\n            name: this.providerOpts.dappMetaData.name,\n            icon: this.providerOpts.dappMetaData.icon,\n        };\n        this.sessionConfig = Object.assign({ dappInfo: data }, sessionConfig);\n        (0, core_1.logDebug)(\"setNamespaces sessionConfig>>>\", this.sessionConfig);\n        this.client.sessionConfig = this.sessionConfig;\n        this.persist(\"sessionConfig\", sessionConfig);\n    }\n    validateChain(chain) {\n        var _a;\n        let [namespace, chainId] = (chain === null || chain === void 0 ? void 0 : chain.split(\":\")) || [\"\", \"\"];\n        if (!this.session || !this.session.namespaces || !Object.keys(this.session.namespaces).length) {\n            (0, core_1.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        if (namespace) {\n            if (!this.isChainNamespaceInSession(namespace)) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace '${namespace}' is not configured. Please call connect() first with namespace config.`);\n            }\n            if (chainId && chain) {\n                (0, core_1.logDebug)('this.session.namespaces -->> ', namespace, JSON.stringify(this.session.namespaces));\n                const chainsArr = (_a = this.session.namespaces[namespace]) === null || _a === void 0 ? void 0 : _a.chains;\n                (0, core_1.logDebug)('get chainsArr & chain', JSON.stringify(chainsArr), chain);\n                if (chainsArr && !chainsArr.includes(chain)) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace not include the chain '${chain}'`);\n                }\n            }\n        }\n        if (namespace && chainId) {\n            (0, core_1.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        let defaultNamespace = (0, namespaces_1.parseNamespaceKey)(Object.keys(this.session.namespaces)[0]);\n        const defaultChain = this.rpcProviders[defaultNamespace].getDefaultChain();\n        (0, core_1.logDebug)('get default chain:', defaultChain);\n        return [defaultNamespace, defaultChain];\n    }\n    isChainNamespaceInSession(namespaceStr) {\n        var _a, _b;\n        if (Object.keys(((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces) || {})\n            .map((key) => (0, namespaces_1.parseNamespaceKey)(key))\n            .includes(namespaceStr)) {\n            return true;\n        }\n        let isChainNamespaceInSession = false;\n        Object.values(((_b = this.session) === null || _b === void 0 ? void 0 : _b.namespaces) || {})\n            .forEach(namespace => {\n            namespace.chains.forEach(chain => {\n                if (chain.split(\":\")[0] == namespaceStr) {\n                    isChainNamespaceInSession = true;\n                }\n            });\n        });\n        return isChainNamespaceInSession;\n    }\n    requestAccountsWithNamespace(namespace) {\n        return this.getProvider(namespace).requestAccounts();\n    }\n    requestDefaultChainWithNamespace(namespace) {\n        return this.getProvider(namespace).getDefaultChain();\n    }\n    requestAccounts() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const [namespace] = this.validateChain();\n            return yield this.getProvider(namespace).requestAccounts();\n        });\n    }\n    onChainChanged(caip2Chain) {\n        var _a;\n        if (!((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces))\n            return;\n        const [namespace, chainId] = this.validateChain(caip2Chain);\n        if (!chainId)\n            return;\n        if (this.session.namespaces[namespace]) {\n            this.session.namespaces[namespace].defaultChain = chainId;\n            this.persist(\"connectSession\", this.session);\n        }\n        this.events.emit(\"chainChanged\", chainId);\n    }\n    onConnect() {\n        this.createProviders();\n        if (this.session) {\n            this.persist(\"connectSession\", this.session);\n        }\n        this.events.emit(\"connect\", { session: this.session });\n        this.registerEventListeners();\n    }\n    cleanup() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.session = undefined;\n            this.client.session = undefined;\n            this.sessionProperties = undefined;\n            this.persist(\"optionalNamespaces\", undefined);\n            this.persist(\"sessionProperties\", undefined);\n            this.persist(\"connectSession\", undefined);\n        });\n    }\n    persist(key, data) {\n        (0, core_1.logDebug)('[evm u-provider] persisit data', key, data);\n        return this.client.engine.connectionManager.saveSessionContent(key, data);\n    }\n    getFromStore(key) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.client.engine.connectionManager.getSessionContent(key);\n        });\n    }\n    showRequestModal(args, chain) {\n        try {\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return this.getProvider(namespace).showRequestModal(requestParam);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n}\nexports.OKXUniversalProvider = OKXUniversalProvider;\nexports.default = OKXUniversalProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTronProvider = exports.OKXTonProvider = exports.OKXCosmosProvider = exports.OKXBtcProvider = exports.OKXUniversalProvider = void 0;\n__exportStar(require(\"./provider/types\"), exports);\n__exportStar(require(\"./packages\"), exports);\nvar OKXUniversalProvider_1 = require(\"./OKXUniversalProvider\");\nObject.defineProperty(exports, \"OKXUniversalProvider\", { enumerable: true, get: function () { return OKXUniversalProvider_1.OKXUniversalProvider; } });\nvar OKXBtcProvider_1 = require(\"./OKXBtcProvider\");\nObject.defineProperty(exports, \"OKXBtcProvider\", { enumerable: true, get: function () { return OKXBtcProvider_1.OKXBtcProvider; } });\nvar OKXCosmosProvider_1 = require(\"./OKXCosmosProvider\");\nObject.defineProperty(exports, \"OKXCosmosProvider\", { enumerable: true, get: function () { return OKXCosmosProvider_1.OKXCosmosProvider; } });\nvar OKXTonProvider_1 = require(\"./OKXTonProvider\");\nObject.defineProperty(exports, \"OKXTonProvider\", { enumerable: true, get: function () { return OKXTonProvider_1.OKXTonProvider; } });\nvar OKXTronProvider_1 = require(\"./OKXTronProvider\");\nObject.defineProperty(exports, \"OKXTronProvider\", { enumerable: true, get: function () { return OKXTronProvider_1.OKXTronProvider; } });\n__exportStar(require(\"@okxconnect/core\"), exports);\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./utils\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SignClient = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"../utils/namespaces\");\nconst ConnectMethodUtils_1 = require(\"../utils/ConnectMethodUtils\");\nconst constants_1 = require(\"../../provider/constants\");\nclass SignClient extends core_1.ISignClient {\n    constructor(metaData, events) {\n        super(metaData);\n        // ---------- Engine ----------------------------------------------- //\n        this.connect = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    var connectRequest = [];\n                    (0, core_1.logDebug)(`client connect params >>>`, JSON.stringify(params));\n                    var requestAccountItem = {\n                        name: \"requestAccounts\",\n                        requiredNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.namespaces),\n                        optionalNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.optionalNamespaces),\n                    };\n                    this.engine.setSessionConnectingListener(() => {\n                        (0, core_1.logDebug)(`sessionConnectingListener >>>`);\n                        this.events.emit(constants_1.PROVIDER_EVENTS.SESSION_CONNECTING);\n                    });\n                    if (params.signRequest) {\n                        requestAccountItem.connectRequestMethods = yield (0, ConnectMethodUtils_1.connectMethodsToConnectWalletMethods)(params.signRequest, requestAccountItem.requiredNamespaces);\n                    }\n                    connectRequest.push(requestAccountItem);\n                    (0, core_1.logDebug)(`client connect connectRequest >>>`, JSON.stringify(connectRequest));\n                    this.engine.universalConnect(connectRequest, Object.assign({ dappInfo: this.metadata }, params.sessionConfig), (info) => {\n                        if (info && info.connectRequest) {\n                            (0, core_1.logDebug)(`universalConect info.connectRequest :`, info.connectRequest);\n                            (0, core_1.logDebug)(`universalConect url:`, (0, core_1.getOKXLink)(info.connectRequest, this.sessionConfig.useMini));\n                            this.events.emit(\"display_uri\", (0, core_1.getOKXLink)(info.connectRequest, this.sessionConfig.useMini));\n                            this.events.emit(\"short_display_uri\", (0, core_1.getAppWalletShortDeepLink)(info.connectRequest.topic, info.connectRequest.clientId));\n                            (0, core_1.logDebug)(`universalConect EngineConnectInfo  ${JSON.stringify(info)}`);\n                            this.events.emit(\"okx_engine_connect_params\", info);\n                        }\n                    }).then((session) => __awaiter(this, void 0, void 0, function* () {\n                        (0, namespaces_1.fillParamsToSession)(session, params.namespaces, params.optionalNamespaces, this.sessionConfig);\n                        (0, core_1.logDebug)(`signClient: connect: session ${JSON.stringify(session)}`);\n                        if (params.signRequest) {\n                            yield (0, ConnectMethodUtils_1.connectMethodsResponseUpdate)(session, params.signRequest);\n                        }\n                        resolve(session);\n                    })).catch((e) => {\n                        (0, core_1.logDebug)(`signClient: connect: catch ${JSON.stringify(e)}`);\n                        this.events.emit(\"connect_error\", e);\n                        reject(e);\n                    });\n                }\n                catch (error) {\n                    (0, core_1.logDebug)(`signClient: connect:  ${JSON.stringify(error)}`);\n                    reject(error);\n                }\n            }));\n        });\n        this.restoreconnect = (sessionConfig) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.restoreconnect(sessionConfig, (session) => {\n                    resolve(session);\n                });\n            });\n        });\n        this.reject = (params) => __awaiter(this, void 0, void 0, function* () {\n            //   try {\n            //     return await this.engine.reject(params);\n            //   } catch (error: any) {\n            //     this.logger.error(error.message);\n            //     throw error;\n            //   }\n        });\n        //\n        // public update: ISignClient[\"update\"] = async (params) => {\n        //   return\n        // //   try {\n        // //     return await this.engine.update(params);\n        // //   } catch (error: any) {\n        // //     this.logger.error(error.message);\n        // //     throw error;\n        // //   }\n        // };\n        this.request = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                (0, core_1.logDebug)(\"clint request --params>>>> >\", this.engine.connectionManager.getCurrentConnectionReady(), (_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl, JSON.stringify(params));\n                try {\n                    // this.sessionConfig\n                    if (((_b = this.sessionConfig) === null || _b === void 0 ? void 0 : _b.openUniversalUrl) && (0, core_1.isIos)()) {\n                        this.openOKXWallet();\n                    }\n                    yield this.engine.send(params, {\n                        resolve: (response) => {\n                            delete response.requestId;\n                            (0, core_1.logDebug)(\"clint request --response >\", JSON.stringify(response));\n                            if (('error' in response) && response.error) {\n                                let error = response.error;\n                                reject(new core_1.OKXConnectError(response.error.code, response.method + \":\" + error.message));\n                            }\n                            else {\n                                resolve(response);\n                            }\n                        },\n                        onAck: () => {\n                            var _a;\n                            if (!(0, core_1.isIos)() && ((_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl)) {\n                                this.openOKXWallet();\n                            }\n                        }\n                    });\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }));\n        });\n        // public emit: ISignClient[\"emit\"] = async (params) => {\n        //     try {\n        //         // return await this.engine.emit(params);\n        //     } catch (error: any) {\n        //         throw error;\n        //     }\n        // };\n        this.disconnect = () => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.send({\n                    method: \"disconnect\"\n                }, {\n                    onAck: () => {\n                        resolve();\n                    }\n                }, undefined, 86400000).catch((error) => {\n                    console.log(`disconnect : ${JSON.stringify(error)}`);\n                    reject(error);\n                });\n            });\n        });\n        this.engine = new core_1.Engine(new core_1.ConnectionManager(metaData.name));\n        this.events = events;\n        this.metadata = metaData;\n    }\n    openOKXWallet() {\n        var _a;\n        // if (this.openUniversalUrl){\n        (0, core_1.logDebug)('bridge-provider ==>> connect_5');\n        if ((_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.useMini) {\n            let url = (0, core_1.getTelegramWalletTWAUrl)(undefined, this.sessionConfig.tmaReturnUrl);\n            (0, core_1.openOKXTMAWalletlinkWithFallback)(url);\n        }\n        else {\n            (0, core_1.openOKXDeeplink)(core_1.standardDeeplink);\n        }\n        // }\n    }\n    syncAllAddress() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.send({\n                    method: \"sync_all_addresses\"\n                }, {\n                    resolve: (response) => {\n                        delete response.requestId;\n                        (0, core_1.logDebug)(\"clint syncAllAddress --response >\", JSON.stringify(response));\n                        if (('error' in response) && response.error) {\n                            let error = response.error;\n                            reject(new core_1.OKXConnectError(response.error.code, response.method + \":\" + error.message));\n                        }\n                        else {\n                            let allAddressStr = response.result;\n                            resolve((0, ConnectMethodUtils_1.syncResoonseToRequire)(allAddressStr));\n                        }\n                    }\n                }).catch((error) => {\n                    console.log(`disconnect : ${JSON.stringify(error)}`);\n                    reject(error);\n                });\n            });\n        });\n    }\n}\nexports.SignClient = SignClient;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.connectSupportMethods = void 0;\nexports.creatNotSupportMethodItemReplay = creatNotSupportMethodItemReplay;\nexports.connectMethodsAdaptOldVersion = connectMethodsAdaptOldVersion;\nexports.connectMethodsResponseUpdate = connectMethodsResponseUpdate;\nexports.connectMethodsToConnectWalletMethods = connectMethodsToConnectWalletMethods;\nexports.syncResoonseToRequire = syncResoonseToRequire;\nconst core_1 = require(\"@okxconnect/core\");\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst uint8array_extras_1 = require(\"uint8array-extras\");\nconst provider_1 = require(\"../../provider\");\nfunction isArray(value) {\n    return typeof value === \"object\" && value !== null && Array.isArray(value);\n}\nfunction isRecord(value) {\n    return typeof value === \"object\" && value !== null && !Array.isArray(value);\n}\n// \"wallet_addEthereumChain\",\nexports.connectSupportMethods = Object.freeze([\n    \"personal_sign\",\n    \"solana_signMessage\",\n    \"sui_signMessage\",\n    \"sui_signPersonalMessage\",\n    \"btc_signMessage\",\n    \"aptos_signMessage\",\n    \"cosmos_signArbitrary\",\n    \"tron_signMessage\",\n    \"tron_signMessageV2\",\n    \"sync_all_addresses\"\n]);\nfunction creatNotSupportMethodItemReplay(requestParams) {\n    let notSupportError = new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n    var errorItem = {\n        method: requestParams.method,\n        chainId: requestParams.chainId,\n        error: {\n            code: notSupportError.code,\n            message: notSupportError.message\n        },\n    };\n    return errorItem;\n}\nfunction connectMethodsAdaptOldVersion(requestParams, session) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b, _c, _d, _e;\n        try {\n            (0, core_1.logDebug)(\"connectMethodsAdaptOldVersion start params :\", JSON.stringify(requestParams));\n            let callBackParams = {};\n            if (requestParams.method === \"solana_signMessage\") {\n                let solAccount = (_a = session.namespaces[core_1.NameSpaceKeySOL]) === null || _a === void 0 ? void 0 : _a.accounts.filter(function (account1) {\n                    return account1.startsWith(requestParams.chainId);\n                })[0];\n                const solAddress = (0, provider_1.fromAccountToAddress)(solAccount);\n                if (requestParams.params && solAddress && \"message\" in requestParams.params) {\n                    let realMessage = requestParams.params.message;\n                    if (((_b = session.wallet) === null || _b === void 0 ? void 0 : _b.appName) == \"OKX Wallet\") {\n                        realMessage = bs58_1.default.encode((0, uint8array_extras_1.stringToUint8Array)(realMessage));\n                    }\n                    requestParams.params = {\n                        message: realMessage,\n                        \"pubkey\": solAddress\n                    };\n                    callBackParams = {\n                        publicKey: solAddress\n                    };\n                    (0, core_1.logDebug)(\"solana_signMessage account and address:\", JSON.stringify(solAccount), solAddress);\n                    (0, core_1.logDebug)(\"solana_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"sui_signMessage\" || requestParams.method === \"sui_signPersonalMessage\") {\n                if (\"message\" in requestParams.params && requestParams.params.message) {\n                    let suiMessage = JSON.parse(JSON.stringify(requestParams.params.message));\n                    let convertedArray = Object.values(suiMessage);\n                    let uint8Array = new Uint8Array(convertedArray);\n                    let decoder = new TextDecoder(\"utf8\");\n                    let b64encoded = btoa(decoder.decode(uint8Array));\n                    requestParams.params = {\n                        message: atob(b64encoded),\n                    };\n                    console.log(\"sui_signMessag suiMessagee suiMessageb64:>>>>\", JSON.stringify(requestParams.params), b64encoded);\n                    if (requestParams.method === \"sui_signMessage\") {\n                        callBackParams = {\n                            \"messageBytes\": b64encoded,\n                            \"signature\": \"\"\n                        };\n                    }\n                    else if (requestParams.method === \"sui_signPersonalMessage\") {\n                        callBackParams = {\n                            \"bytes\": b64encoded,\n                            \"signature\": \"\"\n                        };\n                    }\n                    (0, core_1.logDebug)(\"sui_signMessage/sui_signPersonalMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"btc_signMessage\") {\n                let btcAccounts = (_c = session.namespaces[core_1.NameSpaceKeyBtc]) === null || _c === void 0 ? void 0 : _c.accounts.filter(function (account2) {\n                    return account2.startsWith(requestParams.chainId);\n                });\n                let btcAccount = btcAccounts[0];\n                const btcAddress = (0, provider_1.fromAccountToAddress)(btcAccount);\n                (0, core_1.logDebug)(\"btc_signMessage account and address:\", JSON.stringify(btcAccount), btcAddress);\n                if (btcAddress) {\n                    if (\"message\" in requestParams.params && requestParams.params.message && typeof requestParams.params.message === 'string') {\n                        requestParams.params = {\n                            from: btcAddress,\n                            signStr: requestParams.params.message\n                        };\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                    }\n                    requestParams.params[\"from\"] = btcAddress;\n                    (0, core_1.logDebug)(\"btc_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"aptos_signMessage\") {\n                let paramData = requestParams.params;\n                let aptosAccount = (_d = session.namespaces[core_1.NameSpaceKeyAptos]) === null || _d === void 0 ? void 0 : _d.accounts.filter(function (account3) {\n                    return account3.startsWith(requestParams.chainId);\n                })[0];\n                let aptosAddress = (0, provider_1.fromAccountToAddress)(aptosAccount);\n                if (paramData && aptosAddress) {\n                    let prefix = \"APTOS\";\n                    let message = \"\", nonce = \"\";\n                    var fullMessage = prefix;\n                    let application = window.location.protocol + \"//\" + window.location.hostname;\n                    if (\"address\" in paramData && paramData.address) {\n                        fullMessage += \"\\naddress: \" + aptosAddress;\n                    }\n                    if (\"application\" in paramData && paramData.application) {\n                        fullMessage += \"\\napplication: \" + application;\n                    }\n                    let aptosChainId = 1;\n                    if (\"chainId\" in paramData && paramData.chainId) {\n                        if (paramData.chainId == \"aptos:mainnet\") {\n                            aptosChainId = 1;\n                        }\n                        else if (paramData.chainId == \"movement:testnet\") {\n                            aptosChainId = 2;\n                        }\n                        fullMessage += \"\\nchainId: \" + aptosChainId;\n                    }\n                    if (\"message\" in paramData) {\n                        fullMessage += \"\\nmessage: \" + paramData.message;\n                        message = paramData.message;\n                    }\n                    if (\"nonce\" in paramData) {\n                        fullMessage += \"\\nnonce: \" + paramData.nonce;\n                        nonce = paramData.nonce;\n                    }\n                    const utf8Array = new TextEncoder().encode(fullMessage);\n                    const hex = Array.from(utf8Array)\n                        .map(byte => byte.toString(16).padStart(2, \"0\"))\n                        .join(\"\");\n                    requestParams.params = {\n                        \"message\": hex,\n                    };\n                    (0, core_1.logDebug)(\"aptos_signMessage requestParams:\", JSON.stringify(requestParams));\n                    callBackParams = {\n                        address: aptosAddress,\n                        application: application,\n                        chainId: aptosChainId,\n                        fullMessage: fullMessage,\n                        message: message,\n                        nonce: nonce,\n                        prefix: prefix,\n                        signature: \"\",\n                    };\n                    (0, core_1.logDebug)(\"aptos_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"cosmos_signArbitrary\") {\n                let cosmosAccount = (_e = session === null || session === void 0 ? void 0 : session.namespaces[core_1.NameSpaceKeyCosmos]) === null || _e === void 0 ? void 0 : _e.accounts.filter(function (account_cosmos) {\n                    return account_cosmos.startsWith(requestParams.chainId);\n                })[0];\n                const cosmosAddress = (0, provider_1.fromAccountToAddress)(cosmosAccount);\n                let cosmosData = requestParams.params[\"message\"];\n                const cosmosBase64Encoded = (0, uint8array_extras_1.stringToBase64)(cosmosData);\n                (0, core_1.logDebug)(\"cosmos_signArbitrary account and address:\", JSON.stringify(cosmosAccount), cosmosAddress);\n                (0, core_1.logDebug)(\"cosmos_signArbitrary cosmosBase64Encoded:\", cosmosBase64Encoded);\n                if (cosmosData && cosmosAddress) {\n                    const signDoc = {\n                        chain_id: \"\",\n                        account_number: \"0\",\n                        sequence: \"0\",\n                        fee: {\n                            gas: \"0\",\n                            amount: []\n                        },\n                        msgs: [{\n                                \"type\": \"sign/MsgSignData\",\n                                \"value\": {\n                                    \"signer\": cosmosAddress,\n                                    \"data\": cosmosBase64Encoded\n                                }\n                            }],\n                        memo: \"\"\n                    };\n                    requestParams.params = {\n                        \"signer\": cosmosAddress,\n                        \"chain_id\": requestParams.chainId.split(\":\")[1],\n                        \"data\": signDoc\n                    };\n                    (0, core_1.logDebug)(\"cosmos_signArbitrary callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            (0, core_1.logDebug)(\"sol_handleSignatureData end params:\", JSON.stringify(requestParams));\n        }\n        catch (error) {\n            throw error;\n        }\n    });\n}\nfunction connectMethodsResponseUpdate(session, requestParams) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a;\n        try {\n            if (session.signResponse) {\n                (0, core_1.logDebug)(\"connectMethodsResponseUpdate signResponse:\", JSON.stringify(session.signResponse));\n                (0, core_1.logDebug)(\"connectMethodsResponseUpdate session.namespaces:\", JSON.stringify(session.namespaces));\n                for (const methodItem of session.signResponse) {\n                    (0, core_1.logDebug)(\"connectMethodsResponseUpdate methodItem:\", JSON.stringify(methodItem));\n                    if (\"result\" in methodItem) {\n                        if (methodItem.method === \"solana_signMessage\") {\n                            let solanaSuccessData = methodItem.result;\n                            (0, core_1.logDebug)(\"solana_signMessage methodItem.chainId:\", methodItem.chainId);\n                            let account = (_a = session.namespaces[core_1.NameSpaceKeySOL]) === null || _a === void 0 ? void 0 : _a.accounts.filter(function (account) {\n                                (0, core_1.logDebug)(\"solana_signMessage account:\", account);\n                                return account.startsWith(methodItem.chainId);\n                            })[0];\n                            (0, core_1.logDebug)(\"solana_signMessage result account:\", solanaSuccessData, account);\n                            if (solanaSuccessData && account) {\n                                methodItem.result = {\n                                    \"signature\": bs58_1.default.decode(solanaSuccessData),\n                                    \"publicKey\": (0, provider_1.fromAccountToAddress)(account)\n                                };\n                            }\n                        }\n                        else if (methodItem.method === \"sui_signMessage\" || methodItem.method === \"sui_signPersonalMessage\") {\n                            let suiMethod = requestParams.filter(function (requestMethod) {\n                                return requestMethod.method === methodItem.method;\n                            })[0];\n                            if (suiMethod && suiMethod.params && \"message\" in suiMethod.params) {\n                                let suiMessage = suiMethod.params.message;\n                                let suiMessageb64 = btoa(suiMessage);\n                                console.log(\"sui_signMessag suiMessagee suiMessageb64:>>>>\", suiMessage, suiMessageb64);\n                                if (methodItem.method === \"sui_signMessage\") {\n                                    methodItem.result = {\n                                        \"messageBytes\": suiMessageb64,\n                                        \"signature\": methodItem.result\n                                    };\n                                }\n                                else if (methodItem.method === \"sui_signPersonalMessage\") {\n                                    methodItem.result = {\n                                        \"bytes\": suiMessageb64,\n                                        \"signature\": methodItem.result\n                                    };\n                                }\n                            }\n                        }\n                        else if (methodItem.method === \"aptos_signMessage\") {\n                            if (methodItem.chainId === \"aptos:637\") {\n                                methodItem.chainId = \"aptos:mainnet\";\n                            }\n                            else if (methodItem.chainId === \"aptos:70000060\") {\n                                methodItem.chainId = \"movement:testnet\";\n                            }\n                            methodItem.result = JSON.parse(methodItem.result);\n                            console.log(\"aptos_signMessage result methodItem.result before:>>>>\", JSON.stringify(methodItem.result));\n                            if (methodItem.result && \"signature\" in methodItem.result) {\n                                let aptosSignature = methodItem.result.signature;\n                                if (aptosSignature && aptosSignature.startsWith(\"0x\")) {\n                                    aptosSignature = aptosSignature.slice(2, aptosSignature.length);\n                                    methodItem.result.signature = aptosSignature;\n                                }\n                            }\n                            console.log(\"aptos_signMessage result methodItem.result after:>>>>\", JSON.stringify(methodItem.result));\n                        }\n                        else if (methodItem.method === \"cosmos_signArbitrary\") {\n                            methodItem.result = JSON.parse(methodItem.result);\n                        }\n                        else if (methodItem.method == 'sync_all_addresses') {\n                            methodItem.result = syncResoonseToRequire(methodItem.result);\n                        }\n                    }\n                }\n            }\n        }\n        catch (error) {\n            (0, core_1.logDebug)(\"connectMethodsResponseUpdate signResponse Error:\", JSON.stringify(error));\n            throw error;\n        }\n    });\n}\nfunction connectMethodsToConnectWalletMethods(params, requireNameSpace) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            (0, core_1.logDebug)(\"connectMethodsToConnectWalletMethods requestMethods:\", JSON.stringify(params));\n            const result = [];\n            //TODO  后面需要打开限制\n            if (params && params.length > 1) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connectAndSign/openModalAndSign signRequest only support one data`);\n            }\n            if (!requireNameSpace && params && params.length > 0) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error , RequestMethods cannot be added when the NameSpace is empty`);\n            }\n            // check chianId\n            for (const methodItem of params) {\n                if (methodItem.method === \"aptos_signMessage\") { //update chainId\n                    if (methodItem.chainId === \"aptos:mainnet\") {\n                        methodItem.chainId = \"aptos:637\";\n                    }\n                    else if (methodItem.chainId === \"movement:testnet\") {\n                        methodItem.chainId = \"aptos:70000060\";\n                    }\n                }\n                // check chianId\n                if (methodItem.method === \"wallet_addEthereumChain\") {\n                    var includeEip155 = requireNameSpace === null || requireNameSpace === void 0 ? void 0 : requireNameSpace.some(space => space.namespace.includes(\"eip155\"));\n                    if (!includeEip155) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error, When using '${methodItem.method}', the EVM chain needs to be included in the NameSpace`);\n                    }\n                }\n                else if (methodItem.method === \"sync_all_addresses\") {\n                    if ((0, provider_1.syncAddressHostAvailable)()) {\n                        methodItem.chainId = \"\";\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                    }\n                }\n                else {\n                    const includeChain = !!(requireNameSpace === null || requireNameSpace === void 0 ? void 0 : requireNameSpace.some(space => space.chains.some(chain => chain.includes(`${methodItem.chainId}`))));\n                    if (!includeChain) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error, When using '${methodItem.method}', NameSpace must contain '${methodItem.chainId}'`);\n                    }\n                }\n            }\n            for (const item of params) {\n                if (!exports.connectSupportMethods.includes(item.method)) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect requestMethods not support method, method: '${item.method}'`);\n                }\n                if (item.method === \"wallet_addEthereumChain\") {\n                    if (Array.isArray(item.params)) {\n                        const paramsArr = item.params;\n                        if (paramsArr && paramsArr.length === 1) {\n                            const firstParam = paramsArr[0];\n                            if (isRecord(firstParam)) {\n                                item.params = firstParam;\n                            }\n                        }\n                        else if (paramsArr && paramsArr.length > 1) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params only support one data, method: '${item.method}'`);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is nil, method: '${item.method}'`);\n                        }\n                    }\n                }\n                else if (item.method === \"personal_sign\") {\n                    if (isArray(item.params)) {\n                        if (item.params && item.params.length !== 1) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params error,  method: '${item.method}' `);\n                        }\n                        let firstObj = item.params[0];\n                        if (firstObj && typeof firstObj === 'string') {\n                            item.params = {\n                                message: firstObj\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                }\n                else if (item.method === \"sui_signMessage\" || item.method === \"sui_signPersonalMessage\") {\n                    if (isRecord(item.params) && 'message' in item.params) {\n                        if (item.params.message) {\n                            (0, core_1.logDebug)(\"sui_signMessage item.params.message :\", item.params.message);\n                            let message = JSON.parse(JSON.stringify(item.params.message));\n                            let convertedArray = Object.values(message);\n                            let uint8Array = new Uint8Array(convertedArray);\n                            let decoder = new TextDecoder(\"utf8\");\n                            let b64encoded = btoa(decoder.decode(uint8Array));\n                            item.params.message = atob(b64encoded);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"solana_signMessage\") {\n                    if (isRecord(item.params) && 'message' in item.params) {\n                        if (item.params.message && typeof item.params.message === 'string') {\n                            item.params[\"bs58Message\"] = bs58_1.default.encode((0, uint8array_extras_1.stringToUint8Array)(item.params.message));\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"aptos_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (item.chainId && (item.chainId === \"aptos:637\" || item.chainId === \"aptos:70000060\")) {\n                            var aptosParams = item.params;\n                            var currentURL = window.location.protocol + \"//\" + window.location.hostname;\n                            let signChainId = 1;\n                            if (item.chainId === \"aptos:637\") {\n                            }\n                            else if (item.chainId === \"aptos:70000060\") {\n                                signChainId = 2;\n                            }\n                            item.params = {\n                                data: aptosParams,\n                                applicationUrl: currentURL,\n                                prefix: \"APTOS\",\n                                aptosChainId: signChainId\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params chainId is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"cosmos_signArbitrary\") {\n                    if (isRecord(item.params)) {\n                        if (item.params.message && typeof item.params.message === 'string') {\n                            const base64Encoded = (0, uint8array_extras_1.stringToBase64)(item.params.message);\n                            let cosmosChain = item.chainId.split(\":\")[1];\n                            if (cosmosChain) {\n                                item.params = {\n                                    chain_id: cosmosChain,\n                                    data: {\n                                        chain_id: \"\",\n                                        account_number: \"0\",\n                                        sequence: \"0\",\n                                        fee: {\n                                            gas: \"0\",\n                                            amount: []\n                                        },\n                                        msgs: [{\n                                                \"type\": \"sign/MsgSignData\",\n                                                \"value\": {\n                                                    \"signer\": \"\", //address\n                                                    \"data\": base64Encoded\n                                                }\n                                            }],\n                                        memo: \"\"\n                                    }\n                                };\n                            }\n                            else {\n                                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params chainId is error,  method: '${item.method}' `);\n                            }\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params message is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method == \"tron_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (\"message\" in item.params && item.params.message && typeof item.params.message === 'string') {\n                            item.params.message = stringToHex(item.params.message);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method == \"btc_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (\"message\" in item.params && item.params.message && typeof item.params.message === 'string') {\n                            item.params = {\n                                signStr: item.params.message\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                (0, core_1.logDebug)(\"connectMethodsToConnectWalletMethods item:\", JSON.stringify(item));\n                result.push(item);\n            }\n            return result;\n        }\n        catch (error) {\n            throw error;\n        }\n    });\n}\nfunction stringToHex(str) {\n    let hex = '';\n    for (let i = 0; i < str.length; i++) {\n        hex += str.charCodeAt(i).toString(16).padStart(2, '0');\n    }\n    return hex;\n}\nfunction syncResoonseToRequire(responseAddressStr) {\n    const allAddress = JSON.parse(responseAddressStr);\n    const result = {\n        type: allAddress.type,\n        isEvm: allAddress.isEvm,\n        walletName: allAddress.walletName,\n        deriveName: allAddress.deriveName,\n        addresses: allAddress.addresses.map((addr) => ({\n            coinId: addr.ci,\n            address: addr.a && addr.a !== 'null' ? addr.a : allAddress.evmAddress,\n        })),\n    };\n    return result;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.creatNotSupportMethodItemReplay = exports.connectMethodsAdaptOldVersion = void 0;\nvar ConnectMethodUtils_1 = require(\"./ConnectMethodUtils\");\nObject.defineProperty(exports, \"connectMethodsAdaptOldVersion\", { enumerable: true, get: function () { return ConnectMethodUtils_1.connectMethodsAdaptOldVersion; } });\nObject.defineProperty(exports, \"creatNotSupportMethodItemReplay\", { enumerable: true, get: function () { return ConnectMethodUtils_1.creatNotSupportMethodItemReplay; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAccountsChains = getAccountsChains;\nexports.nameSpaceToConnectWalletNameSpace = nameSpaceToConnectWalletNameSpace;\nexports.fillParamsToSession = fillParamsToSession;\nexports.isCaipNamespace = isCaipNamespace;\nexports.parseNamespaceKey = parseNamespaceKey;\nconst core_1 = require(\"@okxconnect/core\");\nfunction getAccountsChains(accounts) {\n    const chains = [];\n    accounts.forEach((account) => {\n        const [chain, chainId] = account.split(\":\");\n        chains.push(`${chain}:${chainId}`);\n    });\n    return chains;\n}\nfunction nameSpaceToConnectWalletNameSpace(namespaces) {\n    var result = [];\n    if (!namespaces) {\n        return result;\n    }\n    Object.keys(namespaces).forEach((key) => {\n        if (key === core_1.NameSpaceKeyEip155 || key === core_1.NameSpaceKeySOL || key === core_1.NameSpaceKeySui || key === core_1.NameSpaceKeyAptos\n            || key == core_1.NameSpaceKeyBtc || key === core_1.NameSpaceKeyTON || key === core_1.NameSpaceKeyCosmos || key === core_1.NameSpaceKeyTron) {\n            if (namespaces[key].chains) {\n                result.push({\n                    namespace: key,\n                    chains: namespaces[key].chains,\n                    params: namespaces[key].params\n                });\n            }\n        }\n    });\n    return result;\n}\nfunction fillParamsToSession(session, namespaces, optionalNamespaces, sessionConfig) {\n    // Helper function to merge rpcMaps\n    const mergeRpcMap = (targetRpcMap, sourceRpcMap) => {\n        Object.assign(targetRpcMap, sourceRpcMap);\n    };\n    // Merge function for namespaces\n    const mergeNamespaces = (target, source) => {\n        for (const key in source) {\n            if (source.hasOwnProperty(key) && source[key].rpcMap) {\n                if (source[key].rpcMap) {\n                    if (!target[key].rpcMap) {\n                        target[key].rpcMap = {};\n                    }\n                    // 合并 rpcMap\n                    mergeRpcMap(target[key].rpcMap, source[key].rpcMap);\n                }\n                if (source[key].defaultChain && target[key].defaultChain === undefined) {\n                    //defaultChain need in session nameSpace\n                    if (target[key].chains.some(chain => chain.split(\":\")[1] === source[key].defaultChain)) {\n                        target[key].defaultChain = source[key].defaultChain;\n                    }\n                }\n            }\n        }\n    };\n    // 合并 namespaces\n    if (namespaces) {\n        mergeNamespaces(session.namespaces, namespaces);\n    }\n    // 合并 optionalNamespaces\n    if (optionalNamespaces) {\n        mergeNamespaces(session.namespaces, optionalNamespaces);\n    }\n    for (const key in session.namespaces) {\n        const namespace = session.namespaces[key];\n        if (!(namespace === null || namespace === void 0 ? void 0 : namespace.accounts) || namespace.accounts.length === 0) {\n            delete session.namespaces[key];\n        }\n    }\n    session.sessionConfig = sessionConfig;\n}\n/**\n * util designed for Wallets that builds namespaces structure by provided supported chains, methods, events & accounts.\n * It takes required & optional namespaces provided in the session proposal\n * along with the supported chains/methods/events/accounts by the wallet and returns a structured namespaces object\n * @param {BuildApprovedNamespacesParams} params\n * @returns {SessionTypes.Namespaces}\n */\n// export function buildApprovedNamespaces(\n//   params: BuildApprovedNamespacesParams,\n// ): SessionTypes.Namespaces {\n//   const {\n//     proposal: { requiredNamespaces, optionalNamespaces = {} },\n//     supportedNamespaces,\n//   } = params;\n//   const normalizedRequired = normalizeNamespaces(requiredNamespaces);\n//   const normalizedOptional = normalizeNamespaces(optionalNamespaces);\n//\n//   // build approved namespaces\n//   const namespaces = {};\n//   Object.keys(supportedNamespaces).forEach((namespace) => {\n//     const supportedChains = supportedNamespaces[namespace].chains;\n//     const supportedMethods = supportedNamespaces[namespace].methods;\n//     const supportedEvents = supportedNamespaces[namespace].events;\n//     const supportedAccounts = supportedNamespaces[namespace].accounts;\n//\n//     supportedChains.forEach((chain) => {\n//       if (!supportedAccounts.some((account) => account.includes(chain))) {\n//         throw new Error(`No accounts provided for chain ${chain} in namespace ${namespace}`);\n//       }\n//     });\n//\n//     namespaces[namespace] = {\n//       chains: supportedChains,\n//       methods: supportedMethods,\n//       events: supportedEvents,\n//       accounts: supportedAccounts,\n//     };\n//   });\n//\n//   // verify all required namespaces are supported\n//   const err = isConformingNamespaces(requiredNamespaces, namespaces, \"approve()\");\n//   if (err) throw new Error(err.message);\n//\n//   const approvedNamespaces = {};\n//\n//   // if both required & optional namespaces are empty, return all supported namespaces by the wallet\n//   if (!Object.keys(requiredNamespaces).length && !Object.keys(optionalNamespaces).length)\n//     return namespaces;\n//\n//   // assign accounts for the required namespaces\n//   Object.keys(normalizedRequired).forEach((requiredNamespace) => {\n//     const chains = supportedNamespaces[requiredNamespace].chains.filter((chain) =>\n//       normalizedRequired[requiredNamespace]?.chains?.includes(chain),\n//     );\n//     const methods = supportedNamespaces[requiredNamespace].methods.filter((method) =>\n//       normalizedRequired[requiredNamespace]?.methods?.includes(method),\n//     );\n//     const events = supportedNamespaces[requiredNamespace].events.filter((event) =>\n//       normalizedRequired[requiredNamespace]?.events?.includes(event),\n//     );\n//\n//     const accounts = chains\n//       .map((chain: string) =>\n//         supportedNamespaces[requiredNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[requiredNamespace] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   });\n//\n//   // add optional namespaces\n//   Object.keys(normalizedOptional).forEach((optionalNamespace) => {\n//     if (!supportedNamespaces[optionalNamespace]) return;\n//\n//     const chainsToAdd = normalizedOptional[optionalNamespace]?.chains?.filter((chain) =>\n//       supportedNamespaces[optionalNamespace].chains.includes(chain),\n//     );\n//     const methodsToAdd = supportedNamespaces[optionalNamespace].methods.filter((method) =>\n//       normalizedOptional[optionalNamespace]?.methods?.includes(method),\n//     );\n//     const eventsToAdd = supportedNamespaces[optionalNamespace].events.filter((event) =>\n//       normalizedOptional[optionalNamespace]?.events?.includes(event),\n//     );\n//\n//     const accountsToAdd = chainsToAdd\n//       ?.map((chain: string) =>\n//         supportedNamespaces[optionalNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[optionalNamespace] = {\n//       chains: mergeArrays(approvedNamespaces[optionalNamespace]?.chains, chainsToAdd),\n//       methods: mergeArrays(approvedNamespaces[optionalNamespace]?.methods, methodsToAdd),\n//       events: mergeArrays(approvedNamespaces[optionalNamespace]?.events, eventsToAdd),\n//       accounts: mergeArrays(approvedNamespaces[optionalNamespace]?.accounts, accountsToAdd),\n//     };\n//   });\n//\n//   return approvedNamespaces;\n// }\nfunction isCaipNamespace(namespace) {\n    return namespace.includes(\":\");\n}\nfunction parseNamespaceKey(namespace) {\n    return isCaipNamespace(namespace) ? namespace.split(\":\")[0] : namespace;\n}\n/**\n * Converts\n * ```\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * ```\n * into\n * ```\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *```\n */\n// export function normalizeNamespaces(\n//   namespaces: ProposalTypes.RequiredNamespaces,\n// ): ProposalTypes.RequiredNamespaces {\n//   const normalizedNamespaces = {} as ProposalTypes.RequiredNamespaces;\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       methods: mergeArrays(methods, normalizedNamespaces[normalizedKey]?.methods),\n//       events: mergeArrays(events, normalizedNamespaces[normalizedKey]?.events),\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n// export function getNamespacesFromAccounts(accounts: string[]) {\n//   const namespaces = {};\n//   accounts?.forEach((account) => {\n//     const [namespace, chainId] = account.split(\":\");\n//     if (!namespaces[namespace]) {\n//       namespaces[namespace] = {\n//         accounts: [],\n//         chains: [],\n//         events: [],\n//       };\n//     }\n//     namespaces[namespace].accounts.push(account);\n//     namespaces[namespace].chains.push(`${namespace}:${chainId}`);\n//   });\n//\n//   return namespaces;\n// }\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PROVIDER_EVENTS = void 0;\nexports.PROVIDER_EVENTS = {\n    DEFAULT_CHAIN_CHANGED: \"default_chain_changed\",\n    UPDATE_NAMESPACES: \"update_name_spaces\",\n    SESSION_CONNECTING: \"session_connecting\"\n};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./values\"), exports);\n__exportStar(require(\"./events\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GENERIC_SUBPROVIDER_NAME = exports.RPC_URL = exports.STORAGE = exports.CONTEXT = exports.WC_VERSION = exports.PROTOCOL = exports.RELAY_URL = exports.LOGGER = void 0;\nexports.LOGGER = \"error\";\nexports.RELAY_URL = \"wss://relay.walletconnect.com\";\nexports.PROTOCOL = \"wc\";\nexports.WC_VERSION = 2;\nexports.CONTEXT = \"universal_provider\";\nexports.STORAGE = `${exports.PROTOCOL}@${exports.WC_VERSION}:${exports.CONTEXT}:`;\nexports.RPC_URL = \"https://rpc.walletconnect.com/v1/\";\nexports.GENERIC_SUBPROVIDER_NAME = \"generic\";\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./types\"), exports);\n__exportStar(require(\"./utils\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass AptosProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"aptos\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"solana request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"solana provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = AptosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass BtcProvider {\n    constructor(opts, name, client, events) {\n        this.name = core_1.NameSpaceKeyBtc;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"btc request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"btc provider namespace: \", JSON.stringify(this.namespace));\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = BtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass CosmosProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyCosmos;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"cosmos request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"cosmos provider namespace: \", JSON.stringify(this.namespace));\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = CosmosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Eip155Provider = void 0;\nconst utils_1 = require(\"../utils\");\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nclass Eip155Provider {\n    constructor(opts, client, events) {\n        this.name = \"eip155\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = parseInt(this.getDefaultChain());\n        // rpc\n        this.httpProviders = this.createHttpProviders();\n        (0, core_1.logDebug)(\"eip155 constructor --opts.namespace-->\", opts.namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    isArray(value) {\n        return typeof value === \"object\" && value !== null && Array.isArray(value);\n    }\n    updateRequestParams(args) {\n        let isDic = args.params && typeof args.params === 'object' && !Array.isArray(args.params);\n        if (args.method === 'wallet_switchEthereumChain') {\n            const switchChainId = args.chainId.split(\":\")[1];\n            // const hexChainId = parseInt(switchChainId, 16);\n            const decimalNumber = parseInt(switchChainId, 10);\n            if (isNaN(decimalNumber)) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid decimal number,  chainId: '${switchChainId}' `);\n            }\n            if (!args.params) {\n                args.params = { chainId: '0x' + decimalNumber.toString(16) };\n            }\n            else if (isDic) { //为 Record<string, unknown>\n                let params = args.params;\n                if (!('chainId' in params)) {\n                    params['chainId'] = '0x' + decimalNumber.toString(16);\n                    args.params = params;\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params error ,  method: '${args.method}' `);\n            }\n        }\n        else if (args.method === 'personal_sign'\n            || args.method === 'eth_signTypedData_v4'\n            || args.method === 'eth_sendTransaction'\n            || args.method === 'wallet_watchAsset') {\n            if (!args.params) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params is nil, method: '${args.method}'`);\n            }\n            if (this.isRecord(args.params)) {\n                let params = args.params;\n                (0, core_1.logDebug)(\"eip155 updateRequestParams params>\", JSON.stringify(params));\n                if ('chainId' in params) {\n                    const selectedChainId = args.chainId.split(\":\")[1];\n                    const chainNum = parseInt(selectedChainId, 10);\n                    let paramsChainString = String(params.chainId);\n                    let paramsChainId;\n                    if (paramsChainString.startsWith(this.name) && args.chainId === paramsChainString) { //为\n                        paramsChainId = chainNum;\n                    }\n                    else if (paramsChainString.startsWith(\"0x\")) {\n                        paramsChainId = parseInt(paramsChainString, 16);\n                    }\n                    else if (!isNaN(Number(paramsChainString))) { //数字\n                        paramsChainId = parseInt(paramsChainString, 10);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid params.chainId format, method: '${args.method}'`);\n                    }\n                    if (chainNum !== paramsChainId) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params.chainId not equal chain,  method: '${args.method}' `);\n                    }\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid request params type, method: '${args.method}'`);\n            }\n        }\n    }\n    //adapt array\n    adaptArray(args) {\n        if (args.method === 'wallet_switchEthereumChain'\n            || args.method === 'wallet_addEthereumChain'\n            || args.method === 'wallet_watchAsset'\n            || args.method === 'eth_sendTransaction') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr) {\n                    if (paramsArr.length === 1) {\n                        let firstParam = args.params[0];\n                        if (this.isRecord(firstParam)) {\n                            args.params = firstParam;\n                        }\n                    }\n                    else if (paramsArr.length > 1) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                    }\n                }\n            }\n        }\n        else if (args.method === 'eth_signTypedData_v4') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr && paramsArr.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                }\n                else if (paramsArr && paramsArr.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let messageObj = {};\n                if (paramsArr && paramsArr.length === 2) {\n                    let addressObj = args.params[0]; //address\n                    if (addressObj && typeof addressObj === 'string') { //check address\n                        let isEqual = false;\n                        this.namespace.accounts.forEach((account) => {\n                            let chainAddress = (0, utils_1.fromAccountToAddress)(account);\n                            if (chainAddress.toLowerCase() === addressObj.toLowerCase()) {\n                                isEqual = true;\n                            }\n                        });\n                        (0, core_1.logDebug)(\"eip155 adaptArray eth_signTypedData_v4 >>>isEqual: \", isEqual);\n                        if (!isEqual) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error, not equal,  method: '${args.method}' `);\n                        }\n                        if (this.isRecord(args.params[1])) {\n                            messageObj = args.params[1];\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error , not string,  method: '${args.method}' `);\n                    }\n                }\n                else if (paramsArr && paramsArr.length === 1) {\n                    if (this.isRecord(args.params[0])) {\n                        messageObj = args.params[0];\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                    }\n                }\n                try {\n                    let messages = JSON.stringify(messageObj);\n                    args.params = {\n                        typedDataJson: messages\n                    };\n                }\n                catch (err) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params call JSON.stringify() failed,  method: '${args.method}' `);\n                }\n            }\n        }\n        else if (args.method === 'personal_sign') {\n            if (this.isArray(args.params)) {\n                if (args.params && args.params.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params error,  method: '${args.method}' `);\n                }\n                else if (args.params && args.params.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let firstObj = args.params[0];\n                let secondObj = args.params[1];\n                if (secondObj && typeof secondObj === 'string') { //check address\n                    let isEqual = false;\n                    this.namespace.accounts.forEach((account) => {\n                        let chainAddress = (0, utils_1.fromAccountToAddress)(account);\n                        if (chainAddress.toLowerCase() === secondObj.toLowerCase()) {\n                            isEqual = true;\n                        }\n                    });\n                    (0, core_1.logDebug)(\"eip155 adaptArray personal_sign >>>isEqual: \", isEqual);\n                    if (!isEqual) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error,  method: '${args.method}' `);\n                    }\n                }\n                if (firstObj && typeof firstObj === 'string') {\n                    args.params = {\n                        message: firstObj\n                    };\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is error,  method: '${args.method}' `);\n                }\n            }\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"eth_requestAccounts\":\n            case \"eth_accounts\":\n            case \"eth_chainId\":\n                return false;\n            case \"eth_sendTransaction\":\n            case \"eth_signTransaction\":\n            case \"eth_sign\":\n            case \"personal_sign\":\n            case \"eth_signTypedData\":\n            case \"wallet_addEthereumChain\":\n            case \"wallet_watchAsset\":\n            case \"eth_signTypedData_v4\":\n                return true;\n            case \"wallet_switchEthereumChain\": {\n                this.adaptArray(args);\n                this.updateRequestParams(args);\n                const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n                return !this.isChainApproved(parsedChainId);\n            }\n            default:\n                return false;\n        }\n        return false;\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.adaptArray(args);\n            (0, core_1.logDebug)(\"eip155 request --args--string>\", JSON.stringify(args));\n            this.updateRequestParams(args);\n            (0, core_1.logDebug)(\"eip155 request --params--string>\", JSON.stringify(args));\n            switch (args.method) {\n                case \"eth_requestAccounts\":\n                    return this.getAccounts();\n                case \"eth_accounts\":\n                    return this.getAccounts();\n                case \"eth_chainId\":\n                    return parseInt(this.getDefaultChain());\n                case \"wallet_switchEthereumChain\": {\n                    return (yield this.handleSwitchChain(args));\n                }\n                case \"wallet_addEthereumChain\":\n                    return this.addEthereumChain(args);\n                default:\n                    break;\n            }\n            if (this.namespace.methods.includes(args.method)) {\n                // personal_sign\n                // eth_signTypedData_v4\n                // eth_sendTransaction\n                // wallet_watchAsset\n                try {\n                    const response = yield this.client.request(args);\n                    (0, core_1.logDebug)(\"eip155 request --response----string>\", JSON.stringify(response));\n                    if (this.isRecord(response)) {\n                        if ('result' in response) {\n                            let result = response.result;\n                            if (result && typeof result === 'string' && (result === \"true\" || result === \"false\")) {\n                                (0, core_1.logDebug)(\"eip155 request --wallet_watchAsset>>>>\", result === \"true\");\n                                return (result === \"true\");\n                            }\n                            return response.result;\n                        }\n                    }\n                    return response;\n                }\n                catch (e) {\n                    (0, core_1.logDebug)(`eip155 request --response --error--string> e instanceof OKXConnectError ${e instanceof core_1.OKXConnectError}`, JSON.stringify(e));\n                    throw e;\n                }\n            }\n            else {\n                (0, core_1.logDebug)('[RPC] request begin');\n                return yield this.getHttpProvider().request(args);\n            }\n        });\n    }\n    addEthereumChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let resultData = (yield this.client.request(args));\n            try {\n                if ('result' in resultData) {\n                    let successData = resultData;\n                    let account = resultData.result;\n                    if (account) {\n                        const nameSpace = account.split(\":\")[0];\n                        const chainId = account.split(\":\")[1];\n                        const chain = nameSpace + ':' + chainId;\n                        let newNameSpace = this.namespace;\n                        this.namespace.accounts.push(account);\n                        this.namespace.chains.push(chain);\n                        if (this.isRecord(args.params)) {\n                            if (\"rpcUrls\" in args.params) {\n                                let rpcUrls = args.params.rpcUrls;\n                                let rpcUrl = rpcUrls ? rpcUrls[0] : undefined;\n                                if (rpcUrl) {\n                                    if (this.namespace.rpcMap) {\n                                        this.namespace.rpcMap[chainId] = rpcUrl;\n                                    }\n                                    else {\n                                        this.namespace.rpcMap = {\n                                            [chainId]: rpcUrl\n                                        };\n                                    }\n                                    this.setHttpProvider(chainId, rpcUrl);\n                                }\n                            }\n                        }\n                        this.events.emit(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, {\n                            eip155: this.namespace\n                        });\n                    }\n                }\n                else {\n                    new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request error`);\n                }\n            }\n            catch (error) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request  error`);\n            }\n            return null;\n        });\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        this.chainId = parseInt(chainId);\n        // set rpc\n        if (!this.httpProviders[chainId]) {\n            const rpc = rpcUrl || (0, utils_1.getRpcUrl)(`${this.name}:${chainId}`, this.namespace);\n            if (!rpc) {\n                // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n                (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            }\n            else {\n                this.setHttpProvider(chainId, rpc);\n            }\n        }\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId.toString();\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // ---------- Private ----------------------------------------------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"eip155 getAccounts \", accounts, this.chainId);\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => {\n                return (0, utils_1.fromAccountToAddress)(account);\n            })),\n        ];\n    }\n    getHexChainIdFromRequest(args) {\n        let params = args.params;\n        let hexChainId = \"0x0\";\n        if (params && \"chainId\" in params) {\n            hexChainId = params.chainId;\n        }\n        hexChainId = hexChainId.startsWith(\"0x\") ? hexChainId : `0x${hexChainId}`;\n        (0, core_1.logDebug)(\"handleSwitchChain -->args \", args);\n        (0, core_1.logDebug)(\"handleSwitchChain -->hexChainId \", hexChainId);\n        const parsedChainId = parseInt(hexChainId, 16);\n        (0, core_1.logDebug)(\"handleSwitchChain -->parsedChainId \", parsedChainId);\n        return { parsedChainId, hexChainId };\n    }\n    handleSwitchChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n            if (this.isChainApproved(parsedChainId)) {\n                this.setDefaultChain(`${parsedChainId}`);\n            }\n            else {\n                const resultData = (yield this.client.request({\n                    method: \"wallet_switchEthereumChain\",\n                    chainId: args.chainId,\n                    params: {\n                        chainId: hexChainId,\n                    },\n                }));\n                try {\n                    if ('result' in resultData) {\n                        let successData = resultData;\n                        let account = resultData.result;\n                        if (account) {\n                            const nameSpace = account.split(\":\")[0];\n                            const chainId = account.split(\":\")[1];\n                            const chain = nameSpace + ':' + chainId;\n                            let newNameSpace = this.namespace;\n                            this.namespace.accounts.push(account);\n                            this.namespace.chains.push(chain);\n                            (0, core_1.logDebug)(\"handleSwitchChain -->wallet_switchEthereumChain \", resultData);\n                            this.setDefaultChain(`${parsedChainId}`);\n                            this.events.emit(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, {\n                                eip155: this.namespace\n                            });\n                        }\n                    }\n                    else {\n                        new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request error`);\n                    }\n                }\n                catch (error) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request  error`);\n                }\n            }\n            return null;\n        });\n    }\n    isChainApproved(chainId) {\n        return this.namespace.chains.includes(`${this.name}:${chainId}`);\n    }\n    // rpc\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            //   throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            (0, core_1.logDebug)('get parsed chain and rpc:', parsedChainId, parsedRpc);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        (0, core_1.logDebug)('get http providermap:', http);\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n}\nexports.Eip155Provider = Eip155Provider;\nexports.default = Eip155Provider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcConnection = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nconst DEFAULT_HTTP_HEADERS = {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n};\nconst DEFAULT_HTTP_METHOD = \"POST\";\nconst DEFAULT_FETCH_OPTS = {\n    headers: DEFAULT_HTTP_HEADERS,\n    method: DEFAULT_HTTP_METHOD,\n};\n// Source: https://nodejs.org/api/events.html#emittersetmaxlistenersn\nconst EVENT_EMITTER_MAX_LISTENERS_DEFAULT = 10;\nclass JsonRpcConnection {\n    constructor(url, disableProviderPing = false) {\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n        this.events = new eventemitter3_1.EventEmitter();\n        this.isAvailable = false;\n        this.registering = false;\n        if (!(0, core_2.isHttpUrl)(url)) {\n            throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n        }\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n    }\n    get connected() {\n        return this.isAvailable;\n    }\n    get connecting() {\n        return this.registering;\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            yield this.register(url);\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                throw new Error(\"Connection already closed\");\n            }\n            this.onClose();\n        });\n    }\n    send(payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                yield this.register();\n            }\n            try {\n                const body = (0, core_1.safeJsonStringify)(payload);\n                const res = yield (0, cross_fetch_1.default)(this.url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                const data = yield res.json();\n                this.onPayload({ data });\n            }\n            catch (e) {\n                this.onError(payload.id, e);\n            }\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    register() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            if (!(0, core_2.isHttpUrl)(url)) {\n                throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n            }\n            if (this.registering) {\n                return new Promise((resolve, reject) => {\n                    this.events.once(\"register_error\", (error) => {\n                        reject(error);\n                    });\n                    this.events.once(\"open\", () => {\n                        if (typeof this.isAvailable === \"undefined\") {\n                            return reject(new Error(\"HTTP connection is missing or invalid\"));\n                        }\n                        resolve();\n                    });\n                });\n            }\n            this.url = url;\n            this.registering = true;\n            try {\n                if (!this.disableProviderPing) {\n                    const body = (0, core_1.safeJsonStringify)({ id: 1, jsonrpc: \"2.0\", method: \"test\", params: [] });\n                    yield (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                }\n                this.onOpen();\n            }\n            catch (e) {\n                const error = this.parseError(e);\n                this.events.emit(\"register_error\", error);\n                this.onClose();\n                throw error;\n            }\n        });\n    }\n    onOpen() {\n        this.isAvailable = true;\n        this.registering = false;\n        this.events.emit(\"open\");\n    }\n    onClose() {\n        this.isAvailable = false;\n        this.registering = false;\n        this.events.emit(\"close\");\n    }\n    onPayload(e) {\n        if (typeof e.data === \"undefined\")\n            return;\n        const payload = typeof e.data === \"string\" ? (0, core_1.safeJsonParse)(e.data) : e.data;\n        this.events.emit(\"payload\", payload);\n    }\n    onError(id, e) {\n        const error = this.parseError(e);\n        const message = error.message || error.toString();\n        const payload = (0, core_2.formatJsonRpcError)(id, message);\n        this.events.emit(\"payload\", payload);\n    }\n    parseError(e, url = this.url) {\n        return (0, core_2.parseConnectionError)(e, url, \"HTTP\");\n    }\n}\nexports.JsonRpcConnection = JsonRpcConnection;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcProvider = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst types_1 = require(\"../../types\");\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nclass JsonRpcProvider extends types_1.IJSONRpcProvider {\n    constructor(connection) {\n        super(connection);\n        this.events = new eventemitter3_1.EventEmitter();\n        this.connected = false;\n        this.connecting = false;\n        this.hasRegisteredEventListeners = false;\n        this.connection = this.setConnection(connection);\n        if (this.connection.connected) {\n            this.registerEventListeners();\n        }\n    }\n    connect() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            yield this.open(connection);\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.close();\n        });\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    request(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.requestStrict((0, core_1.formatJsonRpcRequest)(request.method, request.params || [], (0, core_1.getBigIntRpcId)().toString()), // casting to any is required in order to use BigInt as rpcId\n            context);\n        });\n    }\n    // ---------- Protected ----------------------------------------------- //\n    requestStrict(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                if (!this.connection.connected) {\n                    try {\n                        yield this.open();\n                    }\n                    catch (e) {\n                        reject(e);\n                    }\n                }\n                this.events.on(`${request.id}`, (response) => {\n                    if ((0, core_1.isJsonRpcError)(response)) {\n                        reject(response.error);\n                    }\n                    else {\n                        resolve(response.result);\n                    }\n                });\n                try {\n                    (0, core_2.logDebug)('[RPC] >>> send request', request, context);\n                    yield this.connection.send(request, context);\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }));\n        });\n    }\n    setConnection(connection = this.connection) {\n        return connection;\n    }\n    onPayload(payload) {\n        this.events.emit(\"payload\", payload);\n        if ((0, core_1.isJsonRpcResponse)(payload)) {\n            this.events.emit(`${payload.id}`, payload);\n        }\n        else {\n            this.events.emit(\"message\", {\n                type: payload.method,\n                data: payload.params,\n            });\n        }\n    }\n    onClose(event) {\n        // Code 3000 indicates an abnormal closure signalled by the relay -> emit an error in this case.\n        if (event && event.code === 3000) {\n            this.events.emit(\"error\", new Error(`WebSocket connection closed abnormally with code: ${event.code} ${event.reason ? `(${event.reason})` : \"\"}`));\n        }\n        this.events.emit(\"disconnect\");\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            if (this.connection === connection && this.connection.connected)\n                return;\n            if (this.connection.connected)\n                this.close();\n            if (typeof connection === \"string\") {\n                yield this.connection.open(connection);\n                connection = this.connection;\n            }\n            this.connection = this.setConnection(connection);\n            yield this.connection.open();\n            this.registerEventListeners();\n            this.events.emit(\"connect\");\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.connection.close();\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    registerEventListeners() {\n        if (this.hasRegisteredEventListeners)\n            return;\n        this.connection.on(\"payload\", (payload) => this.onPayload(payload));\n        this.connection.on(\"close\", (event) => this.onClose(event));\n        this.connection.on(\"error\", (error) => this.events.emit(\"error\", error));\n        this.connection.on(\"register_error\", (_error) => this.onClose());\n        this.hasRegisteredEventListeners = true;\n    }\n}\nexports.JsonRpcProvider = JsonRpcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SolanaProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SolanaProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"solana\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"solana request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"solana provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    //   {\n    //     \"chains\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\" ],\n    //     \"accounts\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp:F7wnJc5wiBGy1k87jv6gyNwE3jMEWd18oTQiYsF1xVG7\"],\n    //     \"methods\": [\n    //         \"solana_signTransaction\",\n    //         \"solana_signMessage\"\n    //     ],\n    //     \"defaultChain\": \"5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\"\n    // }\n    // TODO:确认上面的defaultChain是否正确（没有solana前缀）\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"solana\"))) {\n                chainId = `solana:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.SolanaProvider = SolanaProvider;\nexports.default = SolanaProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SuiProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SuiProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeySui;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"sui request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"sui provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"sui\"))) {\n                chainId = `sui:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"sui_signMessage\":\n            case \"sui_signPersonalMessage\":\n            case \"sui_signTransactionBlock\":\n            case \"sui_signAndExecuteTransactionBlock\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.SuiProvider = SuiProvider;\nexports.default = SuiProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass TONProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyTON;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            (0, core_1.logDebug)(\"TONProvider request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"TONProvider request provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                if (!args.params) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params is nil\");\n                }\n                if (this.isRecord(args.params)) {\n                    const _e = args.params, { validUntil } = _e, newParams = __rest(_e, [\"validUntil\"]);\n                    let fromAddress = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n                    if ('from' in newParams) {\n                        fromAddress = newParams.from || ((_d = (_c = this.namespace.payload) === null || _c === void 0 ? void 0 : _c.ton_addr) === null || _d === void 0 ? void 0 : _d.address);\n                    }\n                    args.params['from'] = fromAddress;\n                    args.params['network'] = this.getDefaultChain();\n                    args.params['valid_until'] = validUntil;\n                    let response = yield this.client.request(args);\n                    if (this.isRecord(response) && 'result' in response) {\n                        const result = {\n                            boc: response.result.toString()\n                        };\n                        (0, core_1.logDebug)(\"TONProvider request provider response: \", JSON.stringify(response));\n                        (0, core_1.logDebug)(\"TONProvider request provider result: \", JSON.stringify(result));\n                        return result;\n                    }\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton_send request response is nil\");\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params type add nil\");\n                }\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        var _a, _b;\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"ton getAccounts accounts :\", accounts);\n        (0, core_1.logDebug)(\"ton getAccounts .namespace :\", JSON.stringify(this.namespace));\n        if (!accounts) {\n            return [];\n        }\n        let address = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n        (0, core_1.logDebug)(\"ton getAccounts address :\", address);\n        if (address) {\n            return [\n                address\n            ];\n        }\n        return [];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"ton_sendTransaction\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.default = TONProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass TronProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyTron;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"tron request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"tron provider namespace: \", JSON.stringify(this.namespace));\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = TronProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./providers\"), exports);\n__exportStar(require(\"./misc\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IJSONRpcProvider = exports.IJSONRpcConnection = void 0;\nclass IJSONRpcConnection {\n}\nexports.IJSONRpcConnection = IJSONRpcConnection;\nclass IJSONRpcProvider {\n    constructor(opt) {\n    }\n}\nexports.IJSONRpcProvider = IJSONRpcProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setGlobal = exports.getGlobal = void 0;\nconst globals = {};\nconst getGlobal = (key) => {\n    return globals[key];\n};\nexports.getGlobal = getGlobal;\nconst setGlobal = (key, value) => {\n    globals[key] = value;\n};\nexports.setGlobal = setGlobal;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./misc\"), exports);\n__exportStar(require(\"./globals\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRpcUrl = getRpcUrl;\nexports.getChainId = getChainId;\nexports.fromAccountToAddress = fromAccountToAddress;\nexports.convertChainIdToNumber = convertChainIdToNumber;\nexports.parseChainId = parseChainId;\nexports.mergeArrays = mergeArrays;\nexports.syncAddressAvailable = syncAddressAvailable;\nexports.syncAddressHostAvailable = syncAddressHostAvailable;\nconst core_1 = require(\"@okxconnect/core\");\nfunction getRpcUrl(chainId, rpc, projectId) {\n    var _a;\n    const chain = parseChainId(chainId);\n    // no default\n    return (((_a = rpc.rpcMap) === null || _a === void 0 ? void 0 : _a[chain.reference]) ||\n        ``);\n}\nfunction getChainId(chain) {\n    return chain.includes(\":\") ? chain.split(\":\")[1] : chain;\n}\nfunction fromAccountToAddress(account) {\n    if (!account) {\n        return \"\";\n    }\n    try {\n        let addressArr = account.split(\":\").slice(2);\n        let address = addressArr.length > 0 ? addressArr.join(\":\") : \"\";\n        (0, core_1.logDebug)(\"fromAccountToAddress address and account:\", address, account);\n        return address;\n    }\n    catch (e) {\n        (0, core_1.logError)(\"fromAccountToAddress error:\", account);\n        return \"\";\n    }\n}\n// export function validateChainApproval(chain: string, chains: string[]): void {\n//   if (!chains.includes(chain)) {\n//     throw new Error(\n//       `Chain '${chain}' not approved. Please use one of the following: ${chains.toString()}`,\n//     );\n//   }\n// }\n// export function getChainsFromApprovedSession(accounts: string[]): string[] {\n//   return accounts.map((address) => `${address.split(\":\")[0]}:${address.split(\":\")[1]}`);\n// }\n// export function getAccountsFromSession(namespace: string, session: SessionTypes.Struct): string[] {\n//   // match namespaces e.g. eip155 with eip155:1\n//   const matchedNamespaceKeys = Object.keys(session.namespaces).filter((key) =>\n//     key.includes(namespace),\n//   );\n//   if (!matchedNamespaceKeys.length) return [];\n//   const accounts: string[] = [];\n//   matchedNamespaceKeys.forEach((key) => {\n//     const accountsForNamespace = session.namespaces[key].accounts;\n//     accounts.push(...accountsForNamespace);\n//   });\n//   return accounts;\n// }\n// export function mergeRequiredOptionalNamespaces(\n//   required: NamespaceConfig = {},\n//   optional: NamespaceConfig = {},\n// ){\n//   const requiredNamespaces = normalizeNamespaces(required);\n//   const optionalNamespaces = normalizeNamespaces(optional);\n//    return merge.merge(requiredNamespaces,optionalNamespaces)\n// }\n/**\n * Converts\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * into\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *\n */\n// export function normalizeNamespaces(namespaces: NamespaceConfig): NamespaceConfig {\n//   const normalizedNamespaces: NamespaceConfig = {};\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const rpcMap = values.rpcMap || {};\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       ...values,\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       rpcMap: { ...rpcMap, ...normalizedNamespaces[normalizedKey]?.rpcMap },\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n//\n// export function parseCaip10Account(caip10Account: string): string {\n//   return caip10Account.includes(\":\") ? caip10Account.split(\":\")[2] : caip10Account;\n// }\n/**\n * Populates the chains array for each namespace with the chains extracted from the accounts if are otherwise missing\n */\n// export function populateNamespacesChains(\n//   namespaces: SessionTypes.Namespaces,\n// ): Record<string, SessionTypes.Namespace> {\n//   const parsedNamespaces: Record<string, SessionTypes.Namespace> = {};\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const accounts = values.accounts || [];\n//     // If the key includes a CAIP separator `:` we know it's a namespace + chainId (e.g. `eip155:1`)\n//     const chains = isCaipNamespace(key)\n//       ? [key]\n//       : values.chains\n//       ? values.chains\n//       : getChainsFromApprovedSession(values.accounts);\n//     parsedNamespaces[key] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   }\n//   return parsedNamespaces;\n// }\nfunction convertChainIdToNumber(chainId) {\n    if (typeof chainId === \"number\")\n        return chainId;\n    if (chainId.includes(\"0x\")) {\n        return parseInt(chainId, 16);\n    }\n    chainId = chainId.includes(\":\") ? chainId.split(\":\")[1] : chainId;\n    return isNaN(Number(chainId)) ? chainId : Number(chainId);\n}\nconst CAIP_DELIMITER = \":\";\nfunction parseChainId(chain) {\n    const [namespace, reference] = chain.split(CAIP_DELIMITER);\n    return { namespace, reference };\n}\nfunction mergeArrays(a = [], b = []) {\n    return [...new Set([...a, ...b])];\n}\nfunction syncAddressAvailable(wallet) {\n    if (!wallet) {\n        return false;\n    }\n    if (wallet.appName !== 'OKX Wallet') {\n        return false;\n    }\n    if ((0, core_1.versionCompare)('6.97.0', wallet.appVersion) > 0) {\n        return false;\n    }\n    return syncAddressHostAvailable();\n}\nfunction syncAddressHostAvailable() {\n    try {\n        return !!(window.okxGlobal);\n    }\n    catch (e) {\n        return false;\n    }\n}\n","<template>\n  <div id=\"app\">\n    <el-container>\n      <el-header>OKX Connect</el-header>\n      <el-main>\n        <el-card class=\"wallet-info\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Wallet Info</div>\n          </template>\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Wallet Address:</strong> {{ getWalletAddress }}\n            </el-col>\n          </el-row>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Status :</strong> {{ currentStatus }}\n            </el-col>\n          </el-row>\n\n        </el-card>\n\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Connect Params</div>\n          </template>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"12\">\n              <el-checkbox v-model=\"withUI\" @change=\"handleWithUI\">\n                Show UI</el-checkbox>\n            </el-col>\n\n            <el-col :span=\"12\">\n              <el-checkbox v-model=\"universalToTG\" @change=\"handleUniversalToTG\">\n                Use mini wallet</el-checkbox>\n            </el-col>\n          </el-row>\n\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Modals</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"modals\" placeholder=\"Modals\" @change=\"handleModalsSelect\" multiple>\n                <el-option label=\"Before\" value=\"before\" />\n                <el-option label=\"Success\" value=\"success\" />\n                <el-option label=\"Error\" value=\"error\" />\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center; justify-content: space-between;\">\n            <el-col :span=\"6\" style=\"gap: 2px\">\n              <p style=\"font-size: 11pt; margin: 0px\">Return Strategy</p>\n              <p style=\"font-size: 9pt; margin: 0px\">(Mobile only)</p>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-select\n                v-model=\"returnStrategy\"\n                @change=\"handleReturnStrategySelect\"\n                placeholder=\"Return Strategy\"\n              >\n                <el-option\n                  v-for=\"strategy in returnStrategies\"\n                  :key=\"`return-strategy-select-option-${strategy}`\"\n                  :label=\"strategy\"\n                  :value=\"strategy\"\n                />\n              </el-select>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-input\n                v-if=\"returnStrategy === 'deeplink'\"\n                v-model=\"deeplink\"\n                @change=\"handleReturnStrategyDeeplink\"\n                placeholder=\"Deeplink\"\n                :disabled=\"returnStrategy !== 'deeplink'\"\n                style=\"margin: 0px\"\n              />\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Lang</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"language\" @change=\"handleLanguageSelect\" placeholder=\"Language\">\n                <el-option v-for=\"locale in locales\" :key=\"`language-select-option-${locale}`\" :label=\"locale\"\n                  :value=\"locale\" />\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Theme</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"theme\" @change=\"handleThemeSelect\" placeholder=\"Theme\">\n                <el-option label=\"LIGHT\" :value=\"THEME.LIGHT\" />\n                <el-option label=\"DARK\" :value=\"THEME.DARK\" />\n              </el-select>\n            </el-col>\n          </el-row>\n\n<!--          <el-row>-->\n<!--          <el-row style=\"align-items: center\">-->\n<!--            <el-col :span=\"4\">-->\n<!--              <p style=\"font-size: 11pt\">Connect</p>-->\n<!--              <p style=\"font-size: 11pt\">Methods</p>-->\n<!--            </el-col>-->\n<!--            <el-col :span=\"20\">-->\n<!--              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" placeholder=\"Methods\">-->\n<!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n<!--                           :value=\"methods\" />-->\n\n<!--              </el-select>-->\n<!--            </el-col>-->\n<!--          </el-row>-->\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Connect</p>\n              <p style=\"font-size: 11pt\">Methods</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" multiple placeholder=\"methods\">\n                <el-option\n                    v-for=\"item in connectMethods\"\n                    :key=\"item\"\n                    :label=\"item\"\n                    :value=\"item\">\n                </el-option>\n              </el-select>\n\n\n<!--              <el-select v-model=\"selectedMethod\" placeholder=\"Methods\" @change=\"handleConnectMethodsSelect\" multiple>-->\n<!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n<!--                           :value=\"methods\" />-->\n<!--              </el-select>-->\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">ton_proof</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-input v-model=\"tonProofValue\"  placeholder=\"input ton_proof\"></el-input>\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" align=\"middle\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Required Chains</div>\n            </el-col>\n            <el-col\n              :span=\"6\"\n              v-for=\"item in Object.keys(availableChains)\"\n              :key=\"item\"\n            >\n              <el-checkbox\n                v-model=\"availableChains[item].checked\"\n                :disabled=\"!areChainsInit\"\n                >{{ availableChains[item].name }}</el-checkbox\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" align=\"middle\" style=\"margin-top: 20px\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Optional Chains</div>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(43114)\" @change=\"() => handleOptionChange(43114)\">\n                AVAX</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(10)\" @change=\"() => handleOptionChange(10)\">OP</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(8453)\" @change=\"() => handleOptionChange(8453)\">\n                BASE</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(99781165)\"\n                @change=\"() => handleOptionChange(99781165)\">Nonexist</el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp')\" @change=\"() => handleOptionChange('solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp')\">Solana</el-checkbox>\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"initBtnClicked\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectInitStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                type=\"primary\"\n                @click=\"connectBtnClicked\"\n                icon=\"el-icon-connection\"\n                :disabled=\"!areChainsInit\"\n                >{{ connectStatusStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"syncAllAddressClick\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ syncAllAddressStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                type=\"danger\"\n                @click=\"disconnectAction\"\n                icon=\"el-icon-switch-button\"\n                :disabled=\"!areChainsInit || walletAddress.length == 0\"\n                >{{ disconnectStatusStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n          <teleport to=\"body\">\n            <div v-if=\"showModal\" class=\"modal-overlay\" @click=\"closeModal\">\n              <div class=\"modal-content\" @click.stop>\n                <button class=\"close-button\" @click=\"closeModal\">\n                  &times;\n                </button>\n                <h2>Scan to connect</h2>\n                <qrcode-vue :value=\"qrValue\" :size=\"350\" level=\"L\" />\n              </div>\n            </div>\n          </teleport>\n        </el-card>\n\n        <!-- 发送交易 -->\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Transactions</div>\n          </template>\n\n          <el-tabs v-model=\"activeTab\" type=\"border-card\" @tab-click=\"clickActiveTab\">\n            <!-- ETH -->\n            <el-tab-pane label=\"ETH\" name=\"eip155:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to ETH)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve TONCoin)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(eth mint\n                    nft)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add SPX6900)\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TON\" name=\"ton:-239\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_getAccount\">ton_getAccount</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_sendTransaction\">ton_sendTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- solana -->\n            <el-tab-pane label=\"Sol\" name=\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- Sui-->\n            <el-tab-pane label=\"Sui\" name=\"sui:mainnet\">\n              <SuiPanel @generateTransactionParams=\"sui_generateTransactionParams\" />\n            </el-tab-pane>\n            <!-- BTC -->\n            <el-tab-pane label=\"BTC\" name=\"btc:mainnet\">\n              <BTCPanel @generateTransactionParams=\"btc_generateTransactionParams\" />\n            </el-tab-pane>\n\n            <!-- Fractal BTC -->\n            <el-tab-pane label=\"Fractal\" name=\"fractal:mainnet\">\n              <FractalPanel @generateTransactionParams=\"fractal_generateTransactionParams\" />\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Tron\" name=\"tron:mainnet\">\n              <TronTransactionPanel\n                  @generateTransactionParams=\"tron_generateTransactionParams\"\n                  @generateTransactionResult=\"tron_getTransactionResult\" />\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Aptos\" name=\"aptos:mainnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signTransaction\">aptos_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"aptos_signAndSubmitTransaction\">aptos_signAndSubmitTransaction</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Cosmos\" name=\"cosmos:cosmoshub-4\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <!-- Polygon-->\n            <el-tab-pane label=\"Polygon\" name=\"eip155:137\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send POL)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve sushi)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(polygon mint\n                    nft)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add LGNS)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_testRpc()\">wallet_testRpc(Polygon)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\"\n                  >eth_sendTransaction(转账FUSE)</el-button\n                  >\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\"\n                  >eth_sendTransaction(授权USDC)</el-button\n                  >\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- BSC-->\n            <el-tab-pane label=\"BNB\" name=\"eip155:56\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to BNB)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve POSI)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add FET)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_testRpc()\">wallet_testRpc(check balance on eth)</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Fuse\" name=\"eip155:122\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_swap\">eth_sendTransaction(Swap)</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Sonic testnet\" name=\"svm:70000062\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Movement\" name=\"movement:testnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"move_signTransaction\">move_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"move_signAndSubmitTransaction\">move_signAndSubmitTransaction</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n\n            <el-tab-pane label=\"osmos\" name=\"cosmos:osmosis-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"SEI\" name=\"cosmos:pacific-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TEST \" name=\"test:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"testBase64UrlSafe\">testBase64UrlSafe</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n          </el-tabs>\n\n          <el-col :xs=\"24\" :sm=\"24\" style=\"margin: 16px 0px;\">\n            <el-row style=\"align-items: center; justify-content: space-between; margin-bottom: 8px;\">\n              <el-col :span=\"4\">\n                <p style=\"font-size: 11pt; margin: 0px; text-align: start\">Redirect param (only for ETH, Polygon, BNB, Fuse)</p>\n              </el-col>\n              <el-col :span=\"9\">\n                <el-select\n                  v-model=\"redirect\"\n                  @change=\"handleRedirectSelect\"\n                  placeholder=\"Return Strategy\"\n                  :disabled=\"!canChainAddRedirectParam()\"\n                  >\n                  <el-option\n                    v-for=\"strategy in returnStrategies\"\n                    :key=\"`return-strategy-select-option-${strategy}`\"\n                    :label=\"strategy\"\n                    :value=\"strategy\"\n                  />\n                </el-select>\n              </el-col>\n              <el-col :span=\"10\">\n                <el-input\n                  v-if=\"redirect === 'deeplink'\"\n                  v-model=\"redirectDeeplink\"\n                  @change=\"handleRedirectDeeplink\"\n                  placeholder=\"Deeplink\"\n                  :disabled=\"!canChainAddRedirectParam() || redirect !== 'deeplink'\"\n                  style=\"margin: 0px\"\n                />\n              </el-col>\n            </el-row>\n            <el-button\n              type=\"primary\" @click=\"addRedirectParam()\"\n              :disabled=\"!canChainAddRedirectParam() || !testTransaction\"\n            >\n              Add redirect param to data\n            </el-button>\n          </el-col>\n\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Data:</div>\n            <el-input v-model=\"testTransaction\" type=\"textarea\" :rows=\"5\" placeholder=\"sendTransactions\"></el-input>\n          </el-col>\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Result :</div>\n            <el-input v-model=\"testboc\" type=\"textarea\" :rows=\"5\" placeholder=\"boc\"></el-input>\n          </el-col>\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button type=\"primary\" @click=\"sendTransaction()\">{{\n                testTransactionStr\n                }}</el-button>\n            </el-col>\n          </el-row>\n        </el-card>\n      </el-main>\n    </el-container>\n  </div>\n</template>\n\n<style scoped>\n/* 重置全局边距和内边距 */\nbody,\nhtml {\n  margin: 0;\n  padding: 0;\n  height: 100%;\n}\n\n/* 确保 app 容器占满整个视口 */\n#app {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin: 0 auto;\n  /* 居中 */\n  max-width: 600px;\n  /* 设置最大宽度 */\n  padding: 0 20px;\n  /* 添加一些左右内边距 */\n}\n\n/* 调整 el-container 样式 */\n.el-container {\n  min-height: 100vh;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n}\n\n/* 调整 el-header 样式 */\n.el-header {\n  background-color: #333333;\n  color: white;\n  height: 50px;\n  line-height: 50px;\n  font-size: 18px;\n  font-weight: bold;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1000;\n}\n\n/* 调整 el-main 样式 */\n.el-main {\n  padding: 70px 0 20px;\n  /* 增加顶部内边距以避免被固定header遮挡 */\n  flex-grow: 1;\n}\n\n.el-card {\n  margin-bottom: 20px;\n}\n\n.info-row {\n  margin-bottom: 10px;\n}\n\n.input-label {\n  margin-bottom: 5px;\n  text-align: left;\n}\n\n.el-input {\n  margin-bottom: 10px;\n}\n\n/* 通用按钮样式 */\n.wallet-actions .el-button,\n.transaction .el-button,\n.clear-cache .el-button {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 40px;\n}\n\n.wallet-actions .el-button span,\n.transaction .el-button span,\n.clear-cache .el-button span {\n  margin: 0 auto;\n}\n\n/* 按钮行间距 */\n.wallet-actions .button-row,\n.transaction .button-row {\n  margin-bottom: 8px;\n}\n\n.wallet-actions .button-row:last-child,\n.transaction .button-row:last-child {\n  margin-bottom: 0;\n}\n\n/* 调整图标和文字的对齐 */\n.wallet-actions .el-button [class^=\"el-icon-\"],\n.transaction .el-button [class^=\"el-icon-\"],\n.clear-cache .el-button [class^=\"el-icon-\"] {\n  margin-right: 5px;\n  vertical-align: middle;\n}\n\n/* 新增：调整发送交易按钮与输入框的间距 */\n.transaction .el-row:not(:last-child) {\n  margin-bottom: 10px;\n}\n\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.modal-content {\n  background-color: white;\n  padding: 20px;\n  border-radius: 8px;\n  text-align: center;\n  position: relative;\n  max-width: 90%;\n  width: 400px;\n}\n\n.close-button {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  font-size: 24px;\n  border: none;\n  background: none;\n  cursor: pointer;\n}\n\n/* 响应式调整 */\n@media (max-width: 600px) {\n  #app {\n    padding: 0 10px;\n  }\n\n  .el-main {\n    padding: 60px 0 10px;\n  }\n}\n</style>\n<script>\nimport {OKX_CONNECT_ERROR_CODES, safeJsonStringify,getAppWalletDeepLink,getUniversalLink} from \"@okxconnect/core\"\nimport {\n  OKXBtcProvider,\n  OKXUniversalProvider,\n  OKXCosmosProvider,\n  OKXTonProvider,\n  OKXTronProvider\n} from \"@okxconnect/universal-provider\"\nimport {OKXSolanaProvider} from \"@okxconnect/solana-provider\";\nimport {\n  Connection,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n  TransactionMessage,\n  VersionedTransaction\n} from '@solana/web3.js';\nimport {OKXSuiProvider as SuiAdapter} from \"@okxconnect/sui-provider\"\nimport QrcodeVue from 'qrcode.vue'\n\nimport {OKXAptosProvider} from \"@okxconnect/aptos-provider\";\nimport {Aptos, AptosConfig, Network} from \"@aptos-labs/ts-sdk\";\n\nimport BTCPanel from \"./components/BtcTransactionPanel.vue\";\nimport FractalPanel from \"./components/FractalTransactionPanel.vue\"\nimport SuiPanel from \"./components/SuiTransactionPanel.vue\";\n\nimport {OKXUniversalConnectUI, THEME} from \"@okxconnect/ui\";\nimport { ethers } from 'ethers';\nimport VConsole from 'vconsole';\nimport nacl from \"tweetnacl\";\nconst { verifyADR36Amino } = require('@keplr-wallet/cosmos')\nconst { fromBech32 } = require('@cosmjs/encoding')\nimport { verifyPersonalMessageSignature } from '@mysten/sui/verify';\nimport {useShortLink} from \"@okxconnect/core\";\nimport TronTransactionPanel from \"@/components/TronTransactionPanel.vue\";\nimport {TronWeb} from \"tronweb\";\nnew VConsole();\n\nconst allChains = {\n  1: { name: \"Eth\", checked: false },\n  56: { name: \"BNB\", checked: false },\n  137: { name: \"Polygon\", checked: false },\n  122: { name: \"Fuse\", checked: false },\n  \"ton:-239\":{name: \"TON\",checked: false},\n  \"btc:mainnet\": { name: \"BTC\", checked: false },\n  \"sui:mainnet\": { name: \"Sui\", checked: false },\n  \"aptos:mainnet\": { name: \"Aptos\", checked: false },\n  \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\": {\n    name: \"Solana\",\n    checked: false,\n  },\n  \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\": {\n    name: \"Sol testnet\",\n    checked: false,\n  },\n  \"svm:70000062\": {\n    name: \"Sonic testnet\",\n    checked: false,\n  },\n  \"movement:testnet\": { name: \"Movement\", checked: false },\n  \"fractal:mainnet\": { name: \"Fractal\", checked: false },\n  \"cosmos:osmosis-1\": {name: \"Osmos\", checked: false},\n  \"cosmos:cosmoshub-4\": {name: \"Cosmos\", checked: false},\n  \"cosmos:pacific-1\": {name: \"SEI\", checked: false},\n  \"cosmos:abvdefg\": {name: \"cosmos:abvdefg\", checked: false},\n  \"tron:mainnet\": {name: \"tron\", checked: false},\n  997865: { name: \"Non Exist chain\", checked: false },\n  2020: { name: \"Ronin\", checked: false },\n  1666600000: { name: \"Harmony\", checked: false },\n};\n\nconst chainsThatCanAddRedirectParam = [\n  \"eip\"\n]\n\nvar optionChains = new Set([]);\nvar selectedModals = [\"before\", \"success\", \"error\"];\nvar selectedReturnStrategy = \"none\";\nvar selectedDeepLink = \"tg://resolve\";\nvar selectedLanguage = \"en_US\";\nvar selectedTheme = THEME.LIGHT;\n\n// import QrcodeVue from 'qrcode.vue'\nexport default {\n  name: \"App\",\n  components: {\n    TronTransactionPanel,\n    QrcodeVue,\n    BTCPanel,\n    FractalPanel,\n    SuiPanel\n  },\n\n  data: () => {\n    return {\n      activeTab: \"eip155:1\",\n      testTopic: \"\",\n      testPublicKey: \"\",\n      testProofPayload: \"\",\n      tonProofValue:\"\",\n      pendingDeepLink: \"-\",\n      logList: [],\n      connectReady: false,\n      connectStatusStr: \"Connect\",\n      syncAllAddressStr: \"syncAllAddress\",\n      connectInitStr: \"init test\",\n      disconnectStatusStr: \"Disconnect\",\n      localPubKey: \"\",\n      localSecKey: \"\",\n      testTransaction: \"\",\n      selectedChain: \"eip155:1\",\n      testTransactionStr: \"Send\",\n      walletAddress: \"\",\n      testboc: \"\",\n      ProofPayloadVerify: \"\",\n      showModal: false,\n      showVerifyRow: false,\n      qrValue: \"https://www.okx.com/download\",\n      currentStatus: \"\",\n      areChainsInit: false,\n      availableChains: allChains,\n      isOptionalChecked: (chainId) => {\n        return optionChains.has(chainId);\n      },\n      withUI: localStorage.getItem(\"autoRefresh\") != \"false\",\n      universalToTG: localStorage.getItem(\"universalToTG\") != \"false\",\n      modals: selectedModals,\n      returnStrategies: [\"none\", \"back\", \"deeplink\"],\n      returnStrategy: selectedReturnStrategy,\n      deeplink: selectedDeepLink,\n      locales: [\n        \"en_US\",\n        \"ru_RU\",\n        \"zh_CN\",\n        \"zh\",\n        \"ar_AE\",\n        \"cs_CZ\",\n        \"de_DE\",\n        \"es_ES\",\n        \"es_LAT\",\n        \"fr_FR\",\n        \"id_ID\",\n        \"it_IT\",\n        \"nl_NL\",\n        \"pl_PL\",\n        \"pt_BR\",\n        \"pt_PT\",\n        \"ro_RO\",\n        \"tr_TR\",\n        \"uk_UA\",\n        \"vi_VN\",\n        \"zh_TW\"\n      ],\n      selectedMethod:[],\n      selectedMethodData:[],\n      connectMethods:[\n        \"wallet_addEthereumChain(ETH)\",\n        \"personal_sign(ETH)\",\n        \"solana_signMessage(Sol mainnet)\",\n        \"sui_signMessage(Sui mainnet)\",\n        \"sui_signPersonalMessage(Sui mainnet)\",\n        \"btc_signMessage(BTC)\",\n        \"aptos_signMessage(aptos mainnet)\",\n        \"cosmos_signArbitrary(cosmoshub)\",\n        \"test_noSupport_eth(ETH)\",\n        \"tron_signMessage\",\n        \"tron_signMessageV2\",\n        \"sync_all_addresses\"\n      ],\n\n      language: selectedLanguage,\n      theme: selectedTheme,\n      THEME: THEME,\n      redirect: selectedReturnStrategy,\n      redirectDeeplink: selectedDeepLink,\n      handleWithUI: (isChecked) => {\n        localStorage.setItem(\"autoRefresh\", `${isChecked}`);\n        location.reload();\n      },\n      handleUniversalToTG: (isChecked) => {\n        localStorage.setItem(\"universalToTG\", `${isChecked}`);\n      },\n      handleOptionChange: (chainId) => {\n        if (optionChains.has(chainId)) {\n          optionChains.delete(chainId);\n        } else {\n          optionChains.add(chainId);\n        }\n      },\n    };\n  },\n  computed: {\n    getWalletAddress: function () {\n      return this.walletAddress;\n    },\n  },\n  methods: {\n    isChecked(chainId) {\n      return this.selectedChains.has(chainId);\n    },\n\n    initChains(newChains) {\n      if (newChains.length > 0) {\n        const updatedChains = Object.assign({}, this.availableChains);\n        for (const chainId of newChains) {\n          if (updatedChains[chainId]){\n            updatedChains[chainId].checked = !updatedChains[chainId].checked;\n          }\n        }\n        this.availableChains = updatedChains;\n      }\n\n      this.areChainsInit = true;\n    },\n\n    async clickActiveTab(tab) {\n      const tabName = tab.props ? tab.props.name : tab.name;\n      this.selectedChain = tabName;\n      console.log(`已切换到链 :`, tabName);\n\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      window.provider.setDefaultChain(this.selectedChain);\n    },\n\n    async initBtnClicked() {\n      var initCall;\n      if (!this.withUI) {\n        initCall = OKXUniversalProvider.init({\n          dappMetaData: {\n            name: \"univer test dapp\",\n            icon: \"https://avatars.githubusercontent.com/u/37784886\",\n          },\n        });\n      } else {\n        initCall = OKXUniversalConnectUI.init({\n          dappMetaData: {\n            icon: \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\",\n            name: \"OKX WalletConnect UI Demo\",\n          },\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: \"all\",\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme\n          },\n        });\n      }\n\n      initCall.then((provider) => {\n        window.provider = provider;\n        window.tonProvider = new OKXTonProvider(window.provider);\n        window.tonProvider.onStatusChange((walletInfo) => {\n              console.log('TONConnection onStatusChange:', JSON.stringify(walletInfo));\n            }, (err) => {\n              console.log('TONConnection onStatusChange error:', err);\n            }\n        )\n\n        if (window.provider instanceof OKXUniversalConnectUI) {\n          window.provider.onModalStateChange((state)=>{\n            console.log(`onModalStateChange   ${JSON.stringify(state)}`)\n          })\n        }\n\n        console.log(\"init finished:\", provider);\n        console.log(\"init finished session:\", JSON.stringify(provider.session));\n\n        if (provider.session?.namespaces) {\n          const newChains = [];\n          console.log(\"namespaces\", provider.session.namespaces);\n          Object.entries(provider.session.namespaces).forEach(([key, value]) => {\n            if (key === \"eip155\") {\n              value.chains.forEach((chain) => {\n                newChains.push(parseInt(chain.substring(7)));\n              });\n            }\n            else {\n              value.chains.forEach((chain) => {\n                newChains.push(chain);\n              });\n            }\n          });\n\n          console.log(\"existing chains:\", newChains);\n          this.initChains(newChains);\n        } else {\n          this.initChains([]);\n        }\n\n        provider.on(\"display_uri\", (uri) => {\n          if (!useShortLink()){\n            if (this.isPC()) {\n              if (uri && !this.withUI && !this.universalToTG) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          }\n          console.log(\"通知>>>display_uri  ==> \", uri);\n        });\n\n        provider.on(\"connect_signResponse\", (items) => {\n          console.log(\"通知>>>connect_signResponse  ==> \", JSON.stringify(items));\n          this.verifyMessage(items)\n        })\n\n        provider.on(\"short_display_uri\", (uri) => {\n          if (useShortLink()){\n            if (this.isPC()) {\n              if (uri && !this.withUI && !this.universalToTG) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          }\n          console.log(\"通知>>>short_display_uri  ==> \", uri);\n        });\n\n\n        provider.on(\"session_connecting\", () => {\n          if (useShortLink()){\n            alert(\"session_connecting\")\n          }\n          console.log(\"通知>>>session_connecting  ==> \");\n        });\n\n        provider.on(\"connect\", (session) => {\n          console.log(\"通知>>>get connect session\", session);\n        });\n        provider.on(\"reconnect\", (session) => {\n          console.log(\"通知>>>get reconnect session\", session);\n          this.walletAddress = \"connected\";\n        });\n        provider.on(\"disconnect\", ({ topic }) => {\n          console.log(`通知>>>get disconnect  ${topic}`);\n          this.walletAddress = \"disconnecteddddd\";\n        });\n        provider.on(\"session_delete\", ({ topic }) => {\n          console.log(`通知>>>get session_delete  ${topic}`);\n        });\n        provider.on(\"session_update\", (session) => {\n          console.log(`通知>>>get session_update `, JSON.stringify(session));\n        });\n      });\n    },\n\n    async connectBtnClicked() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        this.testTonSdk();\n      } else {\n        console.log(`connectBtnClicked provider not finish init`);\n      }\n    },\n\n    async syncAllAddressClick() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        if (window.provider instanceof OKXUniversalProvider){\n          if (window.provider.connected()){\n            try {\n              let message = await window.provider.syncAllAddresses()\n              if (typeof message == \"string\") {\n                this.testboc = message\n              } else {\n                this.testboc = JSON.stringify(message)\n              }\n            }catch (e) {\n              this.testboc = JSON.stringify(e)\n            }\n          }else{\n            this.testboc = \"not connected\"\n          }\n        }\n\n      } else {\n        console.log(`syncAllAddress provider not finish init`);\n      }\n    },\n\n    async disconnectAction() {\n      try {\n        console.log(\"get disconnect wallet btn clicked\");\n        // await TON.disconnect();\n        var provider = window.provider;\n        await provider.disconnect();\n        this.walletAddress = \"disconnected\";\n      } catch (error) {\n        console.log(\"Disconnect  error ==>> \", error.message);\n        this.currentStatus = error.message;\n      }\n    },\n\n    async eth_requestAccounts() {\n      var data = { method: \"eth_requestAccounts\" };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_chainId() {\n      var data = { method: \"eth_chainId\" };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async wallet_switchEthereumChain() {\n      var data = { method: \"wallet_switchEthereumChain\" };\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async wallet_addEthereumChain() {\n      var data = {\n        method: \"wallet_addEthereumChain\",\n        params: {\n          blockExplorerUrls: [\"https://explorer.fuse.io\"],\n          chainId: \"0x7a\",\n          chainName: \"Fuse\",\n          nativeCurrency: { name: \"Fuse\", symbol: \"FUSE\", decimals: 18 },\n          rpcUrls: [\"https://rpc.fuse.io\"],\n        },\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n    async personal_sign() {\n      if (this.selectedChain === \"eip155:1\") {\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0x1ca023f10e157d148deed210f8bee193657a1eaa7f187909e20a9dc3b071dbc364c41fde37960c05093359f410a061ec8a7dca8c0c39fc7c1e24de8a3329775d1b\n\n        var accounts = await window.provider.request(\n          { method: \"eth_requestAccounts\" },\n          \"eip155:1\"\n        );\n        var address = accounts[0];\n        console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n        var dataETH = {\n          method: \"personal_sign\",\n          params: [\n            \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n            address,\n          ],\n        };\n\n        this.testTransaction = JSON.stringify(dataETH);\n      } else if (\n        this.selectedChain === \"eip155:137\" ||\n        this.selectedChain === \"eip155:122\"\n      ) {\n        // method\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0xebda9cfa2af43999058dffa0107031d1ef7fc0252dca85dcbd22ea097af922ca39b64d509ef61ce42b7641c5840b8a80337ffd1411b13e87e2260a3f1b6c151c1b\n\n        var dataPolygon = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n        this.testTransaction = JSON.stringify(dataPolygon);\n      } else if (this.selectedChain === \"eip155:56\") {\n        var data = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n\n        this.testTransaction = JSON.stringify(data);\n      }\n    },\n\n    async eth_sendTransaction_swap() {\n      var data = {\n        method: \"eth_sendTransaction\",\n        chainId: \"eip155:122\",\n        params: {\n          value: \"0x38d7ea4c68000\",\n          gas: \"0x2665f\",\n          to: \"0xf2614A233c7C3e7f08b1F887Ba133a13f1eb2c55\",\n          from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n          data: \"0x2646478b000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee00000000000000000000000000000000000000000000000000038d7ea4c68000000000000000000000000000620fd5fa44be6af63715ef4e65ddfa0387ad13f5000000000000000000000000000000000000000000000000000000000000001b000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000700301ffff0201602352A9Eb5234466Eac23E59e7B99bCaE79C39c0BE9e53fd7EDaC9F859882AfdDa116645287C629040BE9e53fd7EDaC9F859882AfdDa116645287C62900602352A9Eb5234466Eac23E59e7B99bCaE79C39c01f2F3e73be57031114dd1f4E75c1DD87658be7F0E000bb800000000000000000000000000000000\",\n        },\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_signTypedData_v4() {\n      // method\n      // eth_signTypedData\n      // address\n      // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n      // valid\n      // true\n      // result\n      // 0xa8bb3c6b33a119d2d567c7632195c21988df778006082742125a591f5c633f716107883a37f7de6531a6312a5f69022135bf46fe5ab77905b62c82b3395f985e1b\n      //\n\n      // var data = {\n      //   \"method\": \"eth_signTypedData_v4\",\n      //   \"params\": {\n      //     \"typedDataJson\":\"{\\\"types\\\":{\\\"EIP712Domain\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"version\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"chainId\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"name\\\":\\\"verifyingContract\\\",\\\"type\\\":\\\"address\\\"}],\\\"Person\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"wallet\\\",\\\"type\\\":\\\"address\\\"}],\\\"Mail\\\":[{\\\"name\\\":\\\"from\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"to\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"contents\\\",\\\"type\\\":\\\"string\\\"}]},\\\"primaryType\\\":\\\"Mail\\\",\\\"domain\\\":{\\\"name\\\":\\\"Ether Mail\\\",\\\"version\\\":\\\"1\\\",\\\"chainId\\\":1,\\\"verifyingContract\\\":\\\"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\\\"},\\\"message\\\":{\\\"from\\\":{\\\"name\\\":\\\"Cow\\\",\\\"wallet\\\":\\\"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\\\"},\\\"to\\\":{\\\"name\\\":\\\"Bob\\\",\\\"wallet\\\":\\\"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\\\"},\\\"contents\\\":\\\"Hello, Bob!\\\"}}\"\n      // }}\n\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n        this.selectedChain\n      );\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n      var data = {\n        method: \"eth_signTypedData_v4\",\n        params: [\n          address,\n          {\n            types: {\n              EIP712Domain: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"version\",\n                  type: \"string\",\n                },\n                {\n                  name: \"chainId\",\n                  type: \"uint256\",\n                },\n                {\n                  name: \"verifyingContract\",\n                  type: \"address\",\n                },\n              ],\n              Person: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"wallet\",\n                  type: \"address\",\n                },\n              ],\n              Mail: [\n                {\n                  name: \"from\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"to\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"contents\",\n                  type: \"string\",\n                },\n              ],\n            },\n            primaryType: \"Mail\",\n            domain: {\n              name: \"Ether Mail\",\n              version: \"1\",\n              chainId: 1,\n              verifyingContract: \"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\",\n            },\n            message: {\n              from: {\n                name: \"Cow\",\n                wallet: \"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\",\n              },\n              to: {\n                name: \"Bob\",\n                wallet: \"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\",\n              },\n              contents: \"Hello, Bob!\",\n            },\n          },\n        ],\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_sendTransaction_transfer() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            chainId: \"0x1\",\n            to: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            value: \"0x5af3107a4000\",\n            maxPriorityFeePerGas: \"0x3b9aca00\",\n            gas: \"0x5e56\",\n            maxFeePerGas: \"0x2643b9db8\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gasPrice: \"0x17003f6530\",\n            nonce: \"0x0d30\",\n            data: \"0x\",\n            value: \"0x00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasLimit: \"0x5208\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x5e56\",\n            value: \"0x5af3107a4000\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasPrice: \"0x3b9aca00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            chainId: \"0x38\",\n          },\n        };\n      }else if(this.selectedChain === \"eip155:122\"){\n         data =   {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            value: \"0x0\",\n            chainId: \"0x7a\",\n          }\n        }\n      }\n\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n        this.selectedChain\n      );\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"to\"] = address;\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_approve() {\n      var data = {};\n\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000000000000022d473030f116ddee9f6b43ac78ba3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x582d872a1b094fc48f5de31d3b73f2d9be47def1\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000f6f8096ac575b0\",\n            to: \"0x0b3F868E0BE5597D5DB7fEB59E1CADBb0fdDa50a\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            value: \"0x0\",\n            gas: \"0xe117\",\n            gasPrice: \"0xb2d05e00\",\n            data: \"0x095ea7b300000000000000000000000031c2f6fcff4f8759b3bd5bf0e1084a055615c768ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x5CA42204cDaa70d5c773946e69dE942b85CA6706\",\n          },\n        };\n      }else if (this.selectedChain === 'eip155:122'){\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000000000000013b3\",\n            to: \"0x620fd5fa44BE6af63715Ef4E65DDFA0387aD13F5\",\n          },\n        };\n      }\n\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n        this.selectedChain\n      );\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_mint() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x4cacb\",\n            data: \"0xa64dfa75000000000000000000000000ed688002f3797599db8b4feacfe8b1dda0df1c8d000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cecb15396825a895ff8da8fc2d2c77a234dccee00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f6261667962656968643737366b6177706e71336f6f6a6635693274787a76617737737164656b34616a776472637472703261366f626b70723773792f7b69647dan            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x30795\",\n            data: \"0xa64dfa75000000000000000000000000341b3687f0309778f08f29336b2c4b9c38b9f110000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f62616679626569686a6279676b68747a71376b68377434336266686e676e793236337668766f6578716a6d6e377161716166366e717a64743777712f7b69647da3078303030303030303030303030303030303030303030303030303030303030303030303030303030300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001\",\n            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      }\n\n      let str = JSON.stringify(data);\n      console.log(\"-----长度--->\", str.length);\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n          this.selectedChain\n      );\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async wallet_testRpc() {\n      let provider = window.provider;\n      provider.setDefaultChain(\n        `eip155:56`,\n        `https://eth-mainnet.g.alchemy.com/v2/NxUfYJUr-TQtEpLmSXhhD5pXn70GwsyV`\n      );\n      var data = {\n        method: \"eth_getBalance\",\n        params: [\"0x8D97689C9818892B700e27F316cc3E41e17fBeb9\", \"latest\"],\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async wallet_watchAsset() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xe0f63a424a4439cbe457d80e4f4b51ad25b2c56c\",\n              symbol: \"SPX6900\",\n              image:\n                \"https://assets.coingecko.com/coins/images/31401/standard/sticker_%281%29.jpg?1702371083\",\n              decimals: 8,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xeB51D9A39AD5EEF215dC0Bf39a8821ff804A0F01\",\n              symbol: \"LGNS\",\n              image: \"https://polygonscan.com/token/images/originlgns_32.png\",\n              decimals: 9,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0x031b41e504677879370e9dbcf937283a8691fa7f\",\n              symbol: \"FET\",\n              image: \"https://bscscan.com/token/images/fetch_32.png\",\n              decimals: 18,\n            },\n          },\n        };\n      }\n\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async ton_sendTransaction() {\n      var data  = {\n        \"messages\":[{\"address\":\"EQARULUYsmJq1RiZ-YiH-IJLcAZUVkVff-KBPwEmmaQGH6aC\",\"amount\":\"205000000\",\"payload\":\"te6cckEBAgEAhwABbQ+KfqUAAADNgG7tIEATEtAIAO87mQKicbKgHIk4pSPP4k5xhHqutqYgAB7USnesDnCcECwbgQMBAJUlk4VhgBD3JEg1TUr75iTijBghOKm/sxNDXUBl7CD6WMut0Q85x4RafwA/Es89DBXoTxuqxVFxyBbzt9Rav2HBUKl7hmkvLuKHLBCW57aK\"}],\n        \"validUntil\":1792481054,\n        \"network\":'-239'}\n      this.testTransaction = JSON.stringify(data)\n    },\n    ton_getAccount() {\n      this.testTransaction = \"这里是同步获取 不再需要点击 <<发送交易>>\"\n      let result =   window.tonProvider.account()\n      if (result) {\n        this.testboc = JSON.stringify(result);\n      } else {\n        this.testboc = 'null'\n      }\n    },\n\n    async tonUniversalLog() {\n      console.log(\"ton 信息: tonProvider  connected:\",window.tonProvider.connected())\n      console.log(\"ton 信息: tonProvider  account:\",JSON.stringify(window.tonProvider.account()))\n      console.log(\"ton 信息: tonProvider  wallet:\",JSON.stringify(window.tonProvider.wallet()))\n    },\n\n    async sendTransactionAlert() {\n      //\n      const response = await fetch(`https://apitest.fireverse.ai/oauth/okx/getNonce?publicAddress=0x0cecb15396825a895ff8da8fc2d2c77a234dccee`);\n      const data = await response.json();\n      console.log(\"请求数据----\",JSON.stringify(data))\n      await this.personal_sign()\n      if (confirm(\"Are you want to sign message?\")) {\n        this.sendTransaction();\n      }\n\n      // window.open(\"https://www.okx.com/download?deeplink=okx%3A%2F%2Fweb3%2Fwallet%2Fconnect\",'_self')\n    },\n\n    async sendTransaction() {\n      if (this.selectedChain.startsWith(\"aptos\")\n          || this.selectedChain.startsWith(\"movement\")\n          || this.selectedChain.startsWith(\"solana\")\n          || this.selectedChain.startsWith(\"sonic\")\n          || this.selectedChain.startsWith(\"cosmos\")) {\n        return\n      }\n      console.log(\"sendTransaction\", window.provider);\n      console.log(\"sendTransaction内容11------\", this.testTransaction);\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      if (this.testTransaction && window.provider) {\n        // eslint-disable-next-line no-undef\n        const sendData = JSON.parse(this.testTransaction);\n        try {\n          console.log(\"sendTransaction-----22method>>\", sendData.method);\n\n          let chainId = \"eip155:1\";\n          if (this.selectedChain) {\n            chainId = this.selectedChain;\n            console.log(\n              \"sendTransaction-----this.selectedChain>>\",\n              this.selectedChain\n            );\n          }\n          console.log(\"windowOpen[click_1]: \", Date.now());\n          console.log(\"交易的ChainId: \",chainId);\n\n          if (chainId == \"sui:mainnet\") {\n            const adapter = new SuiAdapter(window.provider);\n            var suiResult = \"invalid result\";\n            if (this.currentSuiMethod == 'sui_getAccount') {\n              let result = adapter.getAccount()\n              if (typeof result == \"string\") {\n                this.testboc = result\n              } else {\n                this.testboc = JSON.stringify(result)\n              }\n            }\n            if (this.currentSuiMethod == \"sui_signTransaction\") {\n              suiResult = await adapter.signTransaction(\n                this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signAndExecuteTransaction\") {\n              suiResult = await adapter.signAndExecuteTransaction(\n                this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signMessage\") {\n              console.log(\"signMessage----\", this.currentSuiTransaction);\n              suiResult = await adapter.signMessage(this.currentSuiTransaction);\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_signPersonalMessage\") {\n              console.log(\n                \"signPersonalMessage----\",\n                this.currentSuiTransaction\n              );\n              suiResult = await adapter.signPersonalMessage(\n                this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_testRpc\") {\n              console.log(\"test rpc----\", this.currentSuiTransaction);\n              console.log(\n                `请求数据发送 rpc ----->> ${JSON.stringify(sendData)}`\n              );\n              const res = await window.provider.request(sendData, chainId);\n              console.log(`请求数据回调 rpc ----->> ${JSON.stringify(result)}`);\n              if (typeof res == \"string\") {\n                this.testboc = res;\n              } else {\n                this.testboc = JSON.stringify(res);\n              }\n            }\n            console.log(\"windowOpen[click_2]: \", Date.now());\n            return;\n          }else if(chainId === \"ton:-239\"){\n            console.log(\n                `请求数据发送 sendTransaction ---ton-->> ${JSON.stringify(sendData)}`\n            );\n            let result =  await window.tonProvider.sendTransaction(sendData)\n            console.log(\n                `请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`\n            );\n            if (typeof result == \"string\") {\n              this.testboc = result;\n            } else {\n              this.testboc = JSON.stringify(result);\n            }\n            return\n          }\n\n          if (chainId == 'btc:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var btcResult = 'invalid result'\n\n            if (this.currentBtcMethod == 'btc_signMessage') {\n              btcResult = await btcAdapter.signMessage(chainId, this.currentBtcTransaction[\"signStr\"])\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_send') {\n              btcResult = await btcAdapter.send(chainId, this.currentBtcTransaction)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signPsbt') {\n              btcResult = await btcAdapter.signPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n\n              this.hexToBase64(btcResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentBtcMethod == 'btc_signPsbts') {\n              btcResult = await btcAdapter.signPsbts(chainId, this.currentBtcTransaction.psbtHexs, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_sendInscription') {\n              btcResult = await btcAdapter.sendInscription(chainId, this.currentBtcTransaction.address, this.currentBtcTransaction.inscriptionId, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signAndPushPsbt') {\n              btcResult = await btcAdapter.signAndPushPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            }else if (this.currentBtcMethod == 'btc_sendBitcoin') {\n              btcResult = await btcAdapter.sendBitcoin(chainId, this.currentBtcTransaction.toAddress, this.currentBtcTransaction.satoshis, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            }else if (this.currentBtcMethod == 'btc_getAccount'){\n              btcResult = btcAdapter.getAccount(chainId)\n              this.testboc = JSON.stringify(btcResult)\n            }else if(this.currentBtcMethod === \"btc_sendRunes\"){\n              console.log(\"BTC参数--->\",JSON.stringify(this.currentBtcTransaction))\n              btcResult = await btcAdapter.sendRunes(chainId,this.currentBtcTransaction.address,this.currentBtcTransaction.runeid,this.currentBtcTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }else if(this.currentBtcMethod === \"btc_inscribeTransfer\"){\n              console.log(\"BTC参数--->\",JSON.stringify(this.currentBtcTransaction))\n              btcResult = await btcAdapter.inscribeTransfer(chainId,this.currentBtcTransaction.ticker,this.currentBtcTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }\n\n            return\n          }\n\n          if (chainId == 'fractal:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var fractalResult = 'invalid result'\n\n            if (this.currentFractalMethod == 'fractal_signMessage') {\n              fractalResult = await btcAdapter.signMessage(chainId, this.currentFractalTransaction['signStr'])\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_send') {\n              fractalResult = await btcAdapter.send(chainId, this.currentFractalTransaction)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signPsbt') {\n              fractalResult = await btcAdapter.signPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.hexToBase64(fractalResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentFractalMethod == 'fractal_signPsbts') {\n              fractalResult = await btcAdapter.signPsbts(chainId, this.currentFractalTransaction.psbtHexs, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_sendInscription') {\n              fractalResult = await btcAdapter.sendInscription(chainId, this.currentFractalTransaction.address, this.currentFractalTransaction.inscriptionId, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signAndPushPsbt') {\n              fractalResult = await btcAdapter.signAndPushPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            }else if (this.currentFractalMethod == 'fractal_sendBitcoin') {\n              fractalResult = await btcAdapter.sendBitcoin(chainId, this.currentFractalTransaction.toAddress, this.currentFractalTransaction.satoshis, this.currentFractalTransaction.options)\n\n              this.testboc = JSON.stringify(fractalResult)\n            }else if (this.currentFractalMethod == 'fractal_getAccount'){\n              fractalResult = btcAdapter.getAccount(chainId)\n              this.testboc = JSON.stringify(fractalResult)\n            }else if(this.currentFractalMethod === \"fractal_sendRunes\"){\n              console.log(\"fractal参数--->\",JSON.stringify(this.currentFractalTransaction))\n              btcResult = await btcAdapter.sendRunes(chainId,this.currentFractalTransaction.address,this.currentFractalTransaction.runeid,this.currentFractalTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }else if(this.currentFractalMethod === \"fractal_inscribeTransfer\"){\n              console.log(\"fractal参数--->\",JSON.stringify(this.currentFractalTransaction))\n              btcResult = await btcAdapter.inscribeTransfer(chainId,this.currentFractalTransaction.ticker,this.currentFractalTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }\n\n            return\n          }\n\n          console.log(`请求数据发送 sendTransaction ----->> ${JSON.stringify(sendData)}`)\n          var result = await window.provider.request(sendData, chainId)\n          console.log(`请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`)\n\n          console.log(\"windowOpen[click_3]: \", Date.now());\n          if (typeof result == \"string\") {\n            this.testboc = result;\n          } else {\n            this.testboc = JSON.stringify(result);\n          }\n          console.log(\"方法数据回调 --this.testboc--\", this.testboc);\n        } catch (error) {\n          console.error(\"方法数据回调失败 --Error--\", error.message);\n\n          if (error.code === OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n            this.testboc = error.message;\n          } else {\n            this.testboc = \"wrong signature！\" + error.message;\n          }\n        }\n      } else {\n        alert(\"Please input transaction data\");\n      }\n    },\n\n    hexToBase64(hexStr) {\n      var bytes = [];\n      for (var i = 0; i < hexStr.length; i += 2) {\n        bytes.push(parseInt(hexStr.substr(i, 2), 16));\n      }\n      const buffer = new Uint8Array(bytes)\n      const blob = new Blob([buffer]);\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = function (e) {\n          var base64Data = e.target.result.split(\",\")[1]\n          resolve(base64Data);\n        };\n        reader.onerror = function (e) {\n          reject(e);\n        };\n        reader.readAsDataURL(blob);\n      });\n    },\n    testBase64UrlSafe(){\n      let datatest = {\"protocolVer\":1,\"topic\":\"8a7a4c3be73802d0ae2587123ade7bb79f27433b9aa3ca589a2208a2089eecfd\",\"clientId\":\"5f1bbf9eac92160affa7ef04d0a710817ddb6d8c22ebbd6263e86f059930b404\",\"requestId\":\"1731383250054\",\"dAppInfo\":{\"url\":\"connect.oker.vip\",\"origin\":\"https://connect.oker.vip\",\"name\":\"univer test dapp\",\"icon\":\"https://avatars.githubusercontent.com/u/37784886\"},\"requests\":[{\"name\":\"requestAccounts\",\"requiredNamespaces\":[{\"namespace\":\"aptos\",\"chains\":[\"aptos:637\"]}],\"optionalNamespaces\":[],\"connectRequestMethods\":[{\"chainId\":\"aptos:637\",\"method\":\"aptos_signMessage\",\"params\":{\"data\":{\"address\":true,\"application\":true,\"chainId\":true,\"message\":\"123 中文测试!\",\"nonce\":\"1234\"},\"applicationUrl\":\"https://connect.oker.vip\",\"prefix\":\"APTOS\",\"aptosChainId\":\"1\"}}]}],\"redirect\":\"none\"}\n      let json = JSON.stringify(datatest)\n      const utf8Array = new TextEncoder().encode(json);\n      let binary = '';\n      utf8Array.forEach(byte => {\n        binary += String.fromCharCode(byte);\n      });\n\n      let firstStr =  btoa(binary)\n      console.log(\"字符串编码1>>>>\",firstStr)\n      firstStr = firstStr.replace(/\\+/g, '-')  // 替换 '+'\n      console.log(\"字符串编码2>>>>\",firstStr)\n      firstStr = firstStr.replace(/\\//g, '_')  // 替换 '/'\n      console.log(\"字符串编码3>>>>\",firstStr)\n      firstStr = firstStr.replace(/=+$/, '');  // 移除 '=';\n      console.log(\"字符串编码4>>>>\",firstStr)\n\n      let showUrl =  getUniversalLink(getAppWalletDeepLink(firstStr))\n      console.log(\"字符串编码5>>>>\",showUrl)\n      this.qrValue = showUrl;\n      this.showModal = true;\n    },\n\n\n    async testTonSdk() {\n      // 1. connect\n      //  create sub providers for each namespace/chain\n      let nameSpacesChains = [];\n      let optSpaceChains = [];\n\n      let solanaChains = [\n        \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n        \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n        \"svm:70000062\",\n      ];\n      let hasEip155, hasSolana, hasSui, hasBtc, hasAptos, hasTon, hasCosmos, hasTron = false\n\n      let suiChains = [\n        \"sui:mainnet\",\n      ];\n\n      let btcChains = [\n        \"btc:mainnet\",\n        \"fractal:mainnet\"\n      ];\n\n      const chains = Object.entries(this.availableChains)\n          .filter((chain) => chain[1].checked)\n          .map((chain) => chain[0]);\n      console.log(`chains  ===> ${chains.values()}`)\n      chains.forEach(function (chainId) {\n        console.log(`chains.forEach chainId  ===> ${chainId}`)\n\n        if (solanaChains.includes(chainId)) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"ton\")) {\n          nameSpacesChains.push(chainId)\n          hasTon = true\n          return\n        }\n        if (typeof chainId == 'string' && (chainId.startsWith(\"aptos\") || chainId.startsWith(\"movement\"))) {\n          nameSpacesChains.push(chainId)\n          hasAptos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId)\n          hasSolana = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"cosmos\")) {\n          nameSpacesChains.push(chainId)\n          hasCosmos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"tron\")) {\n          nameSpacesChains.push(chainId)\n          hasTron = true\n          return\n        }\n\n        if (suiChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`);\n          nameSpacesChains.push(chainId);\n          hasSui = true;\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`)\n          nameSpacesChains.push(chainId)\n          hasBtc = true\n          return\n        }\n\n        hasEip155 = true\n        nameSpacesChains.push(`eip155:${chainId}`)\n      })\n\n\n      optionChains.forEach(function (chainId) {\n        if (solanaChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n        if (typeof chainId == \"string\" && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (suiChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          optSpaceChains.push(chainId)\n          return\n        }\n\n        optSpaceChains.push(`eip155:${chainId}`)\n      })\n\n      console.log(`namespaceChains  ===> ${JSON.stringify(nameSpacesChains)}`);\n      var connectData = {};\n      if (nameSpacesChains && nameSpacesChains.length > 0) {\n        var requireData = {};\n\n        if (hasEip155) {\n          requireData.eip155 = {\n            chains: nameSpacesChains.filter((item) =>\n              item.startsWith(\"eip155\")\n            ),\n            defaultChain: nameSpacesChains.filter((item) =>\n              item.startsWith(\"eip155\")\n            )[0],\n          };\n        }\n        if (hasSolana) {\n          requireData.solana = {\n            chains: nameSpacesChains.filter(\n              (item) =>\n                item.startsWith(\"solana\") ||\n                item.startsWith(\"sonic\") ||\n                item.startsWith(\"svm\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n              (item) =>\n                item.startsWith(\"solana\") ||\n                item.startsWith(\"sonic\") ||\n                item.startsWith(\"svm\")\n            )[0],\n          };\n        }\n\n        if (hasCosmos) {\n          requireData.cosmos = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            )[0],\n          }\n        }\n        if (hasTron) {\n          requireData.tron = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            )[0],\n          }\n        }\n        if (hasTon) {\n\n          //\n          let tonParams = {\n            ton_addr:{\n              name: 'ton_addr',\n            }\n          };\n          if (this.tonProofValue){\n            tonParams = {\n              ton_addr:{\n                name: 'ton_addr',\n              },\n              ton_proof:{\n                name: 'ton_proof',\n                payload: this.tonProofValue,\n              }\n            };\n          }\n\n\n          requireData.ton = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"ton\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"ton\"))[0],\n            params:tonParams\n          };\n        }\n\n        if (hasSui) {\n          requireData.sui = {\n            chains: nameSpacesChains.filter((item) => item.startsWith(\"sui\")),\n            defaultChain: nameSpacesChains.filter((item) =>\n              item.startsWith(\"sui\")\n            )[0],\n            rpcMap: {\n              \"sui:mainnet\": \"https://www.okx.com/fullnode/sui/discover/rpc\"\n            }\n          };\n        }\n        if (hasAptos) {\n          requireData.aptos = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\"))[0]\n          }\n        }\n\n        if (hasBtc) {\n          let btcChains = nameSpacesChains.filter(item => item.startsWith(\"btc\") || item.startsWith(\"fractal\"))\n          requireData.btc = {\n            chains: btcChains,\n            defaultChain: btcChains[0]\n          }\n        }\n        console.log(`requireData  ===> ${JSON.stringify(requireData)}`)\n        connectData['namespaces'] = requireData;\n        console.log(JSON.stringify(connectData))\n      }\n\n      if (optSpaceChains && optSpaceChains.length > 0) {\n        const optData = {};\n\n        const eip155Chains = optSpaceChains.filter((item) => item.startsWith(\"eip155\"));\n        if (eip155Chains.length > 0) {\n          optData[\"eip155\"] = {\n            chains: eip155Chains,\n            defaultChain: eip155Chains[0],\n          };\n        }\n\n        const solanaChains = optSpaceChains.filter((item) => item.startsWith(\"solana\"));\n        if (solanaChains.length > 0) {\n          optData[\"solana\"] = {\n            chains: solanaChains,\n            defaultChain: solanaChains[0],\n          };\n        }\n\n        connectData[\"optionalNamespaces\"] = optData;\n      }\n\n      if (nameSpacesChains.length === 0 && optSpaceChains.length === 0) {\n        //未选择链\n        alert(\"Please select a chain from above to continue\");\n        return;\n      }\n      console.log(\"=====>connectData \");\n      console.log(connectData);\n\n      var connectMethod;\n      let signMethods = this.getCurrentSelectedMethodData();\n      if (window.provider instanceof OKXUniversalConnectUI) {\n        if (signMethods && signMethods.length>0){\n          connectMethod = window.provider.openModalAndSign(connectData,JSON.parse(JSON.stringify(signMethods)));\n        }else {\n          connectMethod = window.provider.openModal(connectData);\n        }\n      } else {\n        if (this.universalToTG){\n          connectData.sessionConfig = {\n            useMini:true,\n            openUniversalUrl:true,\n            tmaReturnUrl:'back'\n          }\n        }else{\n          connectData.sessionConfig = {\n            redirect: selectedReturnStrategy\n          }\n        }\n        if (signMethods && signMethods.length>0){\n          connectMethod = window.provider.connectAndSign(connectData,JSON.parse(JSON.stringify(signMethods)));\n        }else {\n          connectMethod = window.provider.connect(connectData);\n        }\n      }\n\n      await connectMethod\n        .then((result) => {\n          // 2. set defaul chain\n          this.walletAddress = \"connected\";\n          if (this.isPC()) {\n            this.showModal = false;\n          }\n          if (result){\n            this.testboc = JSON.stringify(result)\n          }\n\n          if (window.provider.session && window.provider.session.namespaces){\n            let ton = window.provider.session.namespaces[\"ton\"];\n          console.log(\"是否包含ton\",ton)\n            if (ton){\n              this.tonUniversalLog()\n            }\n          }\n\n\n\n        })\n        .catch((error) => {\n          if (error.message){\n            alert(error.message)\n          }\n\n          console.error(\"发生了错误：\", error);\n        });\n    },\n\n    getCurrentSelectedMethodData(){// 连接签名\n      var methodList = [];\n      this.selectedMethod.forEach(method =>{\n        switch (method) {\n          case \"wallet_addEthereumChain(ETH)\":\n            methodList.push({\n              method: \"wallet_addEthereumChain\",\n              chainId:\"eip155:1\",\n              params: {\n                blockExplorerUrls: [\"https://explorer.fuse.io\"],\n                chainId: \"0x7a\",\n                chainName: \"Fuse\",\n                nativeCurrency: { name: \"Fuse\", symbol: \"FUSE\", decimals: 18 },\n                rpcUrls: [\"https://rpc.fuse.io\"],\n              },\n            })\n            break;\n          case \"personal_sign(ETH)\":\n            methodList.push(\n              {\n                method: \"personal_sign\",\n                chainId: \"eip155:1\",\n                params: [\n                  \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n                ],\n              });\n            break;\n          case \"solana_signMessage(Sol mainnet)\":\n            methodList.push(\n              {\n                \"chainId\": \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n                \"method\": \"solana_signMessage\",\n                \"params\": {\n                  \"message\": \"Hello Solana\",\n                }\n              }\n            );\n            break;\n          case \"sui_signMessage(Sui mainnet)\":\n          case \"sui_signPersonalMessage(Sui mainnet)\": {\n            let suiData = [\n              76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n              109, 111, 118, 101,\n            ];\n            let uint8Array = new Uint8Array(suiData);\n            let currentMethod = \"sui_signMessage\";\n            this.currentSuiTransaction = {\n              message:uint8Array\n            }\n\n            if(method.startsWith(\"sui_signPersonalMessage\")){\n              currentMethod = \"sui_signPersonalMessage\";\n            }\n            methodList.push(\n                {\n                  method: currentMethod,\n                  chainId: \"sui:mainnet\",\n                  params: {\n                    message: uint8Array,\n                  }\n                }\n            );\n            break;\n          }\n          case \"btc_signMessage(BTC)\":\n            methodList.push(\n              {\n                method: \"btc_signMessage\",\n                chainId: \"btc:mainnet\",\n                params: {\n                  message: \"Welcome to BTC\"\n                }\n              }\n            )\n            break;\n          case \"aptos_signMessage(aptos mainnet)\":\n            methodList.push(\n              {\n                \"chainId\": \"aptos:mainnet\",\n                \"method\": \"aptos_signMessage\",\n                \"params\": {\n                  address: true,\n                  application: true,\n                  chainId: true,\n                  message: \"Hello Aptos\",\n                  nonce: \"1234\"\n                }\n              }\n            )\n            break;\n          case \"cosmos_signArbitrary(cosmoshub)\":\n            methodList.push(\n                {\n                  \"chainId\": \"cosmos:cosmoshub-4\",\n                  \"method\": \"cosmos_signArbitrary\",\n                  \"params\": {\n                    message: \"test cosmos\"\n                  }\n                }\n            )\n\n            break;\n          case \"test_noSupport_eth(ETH)\":\n            methodList.push(\n                {\n                  chainId: \"eip155:1\",\n                  method: \"test_noSupport_eth\",\n                  params: {\n                    message: \"test hello\",\n                  }\n                }\n            )\n            break;\n          case \"sync_all_addresses\":\n            methodList.push(\n                {\n                  method: \"sync_all_addresses\",\n                });\n            break;\n          case \"tron_signMessage\":\n            methodList.push(\n                {\n                  chainId:\"tron:mainnet\",\n                  method: \"tron_signMessage\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n          case \"tron_signMessageV2\":\n            methodList.push(\n                {\n                  chainId:\"tron:mainnet\",\n                  method: \"tron_signMessageV2\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n            //\n          default:\n\n            break;\n        }\n      })\n      this.selectedMethodData = methodList\n      return methodList\n\n    },\n\n\n    closeModal() {\n      this.showModal = false;\n    },\n\n    isPC() {\n      const userAgentInfo = navigator.userAgent;\n      console.log(\"current device ua is ===>\", userAgentInfo);\n\n      const Agents = [\n        \"Android\",\n        \"iPhone\",\n        \"SymbianOS\",\n        \"Windows Phone\",\n        \"iPad\",\n        \"iPod\",\n      ];\n      let flag = true;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = false;\n          break;\n        }\n      }\n      return flag;\n    },\n    isSafariOrChrome() {\n      const userAgentInfo = navigator.userAgent;\n      const Agents = [\"Safari\", \"Chrome\"];\n      let flag = false;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = true;\n          break;\n        }\n      }\n      return flag;\n    },\n\n    /// solana\n    async sol_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      let data = {\n        method: \"solana_signMessage\",\n        params: {\n          message: \"Hello Solana\",\n          pubkey: \"\",\n        },\n      };\n      this.testTransaction = JSON.stringify(data);\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let message = await provider.signMessage(\n          \"Hello Solana\",\n          this.selectedChain\n      );\n      console.log(\"solana_signMessage Result:\",JSON.stringify(message))\n      const result1 = nacl.sign.detached.verify(\n          new TextEncoder().encode(\"Hello Solana\"),\n          message.signature,\n          new PublicKey(message.publicKey).toBytes()\n      );\n      console.log(result1)\n\n      if (typeof message == \"string\") {\n        this.testboc = result1;\n      } else {\n        this.testboc = result1;\n      }\n    },\n\n    async aptos_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      let data = {\n        address: true,\n        application: true,\n        chainId: true,\n        message: \"Hello Aptos\",\n        nonce: \"1234\"\n      }\n\n      let provider = new OKXAptosProvider(window.provider)\n      let message = await provider.signMessage(data, this.selectedChain)\n      this.testTransaction = JSON.stringify(data)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n          functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async move_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async move_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n          functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n        },\n      });\n\n      // let data = {\n      //   \"arguments\": [\"100000\",[\"0\",\"0\",\"10533\"],[\"10\",\"5\",\"5\"],[\"false\",\"false\",\"true\"]],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x3\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\",\"0x73eb84966be67e4697fc5ae75173ca6c35089e802650f75422ab49a8729704ec::coin::DooDoo\",\"0x53a30a6e5936c0a4c5140daed34de39d17ca7fcae08f947c02e979cef98a3719::coin::LSD\",\"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::CurveV1\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x54cb0bb2c18564b86e34539b9f89cfe1186e39d89fce54e1cd007b8e61673a85::bin_steps::X80\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async sol_signVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(\n        provider.getAccount(\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\").address\n      );\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n         recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signTransaction(\n        transaction,\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAndSendVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n        transaction,\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllVersionedTransactions() {\n      let provider = new OKXSolanaProvider(window.provider);\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n        [transaction],\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signTransaction() {\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n         recentBlockhash: blockhash,\n      }).add(\n        SystemProgram.transfer({\n          fromPubkey: new PublicKey(provider.getAccount().address),\n          toPubkey: new PublicKey(provider.getAccount().address),\n          lamports: 1000,\n        })\n      );\n\n      this.testTransaction = safeJsonStringify(transaction)\n      let result = await provider.signTransaction(\n        transaction,\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllTransactions() {\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n        SystemProgram.transfer({\n          fromPubkey: new PublicKey(provider.getAccount().address),\n          toPubkey: new PublicKey(provider.getAccount().address),\n          lamports: \"100\",\n        })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n        [transaction],\n        this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    getSolConnect() {\n      let rpc = \"https://www.okx.com/fullnode/sol/discover/rpc\"\n      if (this.selectedChain === \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\") {\n        rpc = \"https://www.okx.com//fullnode/sol/discover/rpc\"\n      } else if (this.selectedChain === \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\"){\n        rpc = \"https://www.okx.com/fullnode/soltestnet/discover/rpc\"\n      } else if (this.selectedChain === \"svm:70000062\") {\n        rpc = \"https://www.okx.com/fullnode/sonic/testnet/discover/rpc\"\n      }\n      return rpc\n    },\n\n    async sol_signAndSendTransaction() {\n\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n        SystemProgram.transfer({\n          fromPubkey: new PublicKey(provider.getAccount().address),\n          toPubkey: new PublicKey(provider.getAccount().address),\n          lamports: \"100\",\n        })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n        transaction,\n        this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async cosmos_signArbitrary() {\n      let provider = new OKXCosmosProvider(window.provider)\n      let message = await provider.signArbitrary(this.selectedChain, provider.getAccount(this.selectedChain).address, \"test cosmos\")\n      if (typeof message == \"string\") {\n        this.testboc = message;\n      } else {\n        let isValid =  await this.cosmos_verifySignArbitrary(provider.getAccount(this.selectedChain).address,\"test cosmos\",message.signature, message.pub_key.value)\n        console.log(\"verify\",isValid)\n        this.testboc = \"verify:\" + isValid + JSON.stringify(message);\n      }\n    },\n\n    async cosmos_verifySignArbitrary(signer, data, signature, pubkey) {\n      try {\n        console.log(\"cosmos_verifySignArbitrary signer:\",signer)\n        console.log(\"cosmos_verifySignArbitrary data:\",JSON.stringify(data))\n        console.log(\"cosmos_verifySignArbitrary signature:\",signature)\n        console.log(\"cosmos_verifySignArbitrary pubkey:\",pubkey)\n\n        // 将bech32地址转换为公钥\n        const {prefix: prefixStr} = fromBech32(signer)\n\n        const signatureBuffer = Buffer.from(signature, 'base64');\n\n        const uint8Signature = new Uint8Array(signatureBuffer); // Convert the buffer to an Uint8Array\n\n        const pubKeyValueBuffer = Buffer.from(pubkey, 'base64'); // Decode the base64 encoded value\n\n        const pubKeyUint8Array = new Uint8Array(pubKeyValueBuffer); // Convert the buffer to an Uint8Array\n\n        // 验证签名\n        return await verifyADR36Amino(\n            prefixStr,\n            signer,\n            data,\n            pubKeyUint8Array,\n            uint8Signature\n        )\n      } catch (err) {\n        console.error('Verification failed:', err)\n        return false\n      }\n    },\n\n    async cosmos_signAmino(){\n      let provider = new OKXCosmosProvider(window.provider)\n      // const rpcUrl = 'https://osmosis-rpc.publicnode.com:443';\n      // const client = await StargateClient.connect(rpcUrl);\n      // const height = await client.getHeight();\n      // let address = provider.getAccount(this.selectedChain).address\n      // const sequence = await client.getSequence(address)\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      // let signDoc = makeSignDoc(\n      //     transaction.msgs,\n      //     transaction.fee,\n      //     this.selectedChain.split(\":\")[1],\n      //     transaction.memo,\n      //     transaction.accountNumber,\n      //     transaction.sequence,\n      // )\n      let signDoc = {\n        \"chain_id\": \"osmosis-1\",\n        \"account_number\": \"630104\",\n        \"sequence\": \"480\",\n        \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]},\n        \"msgs\": [{\n          \"type\": \"osmosis/poolmanager/swap-exact-amount-in\",\n          \"value\": {\n            \"sender\": \"osmo1u6lts9ng4etxj0zdaxsada6zgl8dudpgelmuyu\",\n            \"routes\": [{\n              \"pool_id\": \"1096\",\n              \"token_out_denom\": \"ibc/987C17B11ABC2B20019178ACE62929FE9840202CE79498E29FE8E5CB02B7C0A4\"\n            }, {\n              \"pool_id\": \"611\",\n              \"token_out_denom\": \"ibc/27394FB092D2ECCD56123C74F36E4C1F926001CEADA9CA97EA622B25F41E5EB2\"\n            }],\n            \"token_in\": {\"denom\": \"uosmo\", \"amount\": \"100\"},\n            \"token_out_min_amount\": \"8\"\n          }\n        }],\n        \"memo\": \"FE\",\n        \"timeout_height\": \"23603788\",\n        \"signOptions\": {\n          \"useOneClickTrading\": false,\n          \"preferNoSetFee\": true,\n          \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]}\n        }\n      }\n\n\n\n\n\n\n\n      // let signOption = {\n      //   memo: true, // optional\n      //   fee: true, // optional\n      //   gasRate: {\n      //     // optional\n      //     average: \"0.2\",\n      //     low: \"0.02\",\n      //     tiny: \"0.002\",\n      //   },\n      // }\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signAmino(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, signDoc)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    messageToBuffer(message) {\n      var buffer = Buffer.from([]);\n      try {\n        if (typeof message === \"string\") {\n          buffer = Buffer.from(message.replace(\"0x\", \"\"), \"hex\");\n        } else {\n          buffer = Buffer.from(message);\n        }\n      } catch (err) {\n        console.log(`messageToBuffer error: ${err}`);\n      }\n      return buffer;\n    },\n\n\n\n    async cosmos_signDirect() {\n      let provider = new OKXCosmosProvider(window.provider)\n\n      let signDoc = {\n        \"bodyBytes\": this.messageToBuffer(\"0x0ac1010a292f6962632e6170706c69636174696f6e732e7472616e736665722e76312e4d73675472616e736665721293010a087472616e7366657212096368616e6e656c2d301a0d0a05756f736d6f120431303030222b6f736d6f3175366c7473396e67346574786a307a64617873616461367a676c386475647067656c6d7579752a2d636f736d6f733175366c7473396e67346574786a307a64617873616461367a676c386475647067337967766a773207080410ebe3f90a3880b0bcafd18cec8218\"),\n        \"authInfoBytes\": this.messageToBuffer(\"0x0a510a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a2102446e19e94ac0e83ea896d2712507577eb39fbdd2d6ae9f0fc0b9759f1fbaba9012040a02080118e00312140a0e0a05756f736d6f1205323530303010859a11\"),\n        \"chainId\": \"osmosis-1\",\n        \"accountNumber\": \"630104\",\n      }\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signDirect(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, transaction)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    sui_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentSuiTransaction = params\n      this.currentSuiMethod = flag\n    },\n\n    btc_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentBtcTransaction = params\n      this.currentBtcMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n\n    fractal_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentFractalTransaction = params\n      this.currentFractalMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n    tron_getTransactionResult(result) {\n      if (typeof result == \"string\") {\n        this.testboc = result\n      } else {\n        this.testboc = JSON.stringify(result)\n      }\n    },\n    tron_generateTransactionParams(params){\n      if (typeof params == \"string\") {\n        this.testTransaction = params\n      } else {\n        this.testTransaction = JSON.stringify(params)\n      }\n    },\n    handleModalsSelect(modals) {\n      selectedModals = modals;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: modals.length === 3 ? \"all\" : modals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n\n    handleReturnStrategySelect(returnStrategy) {\n      selectedReturnStrategy = returnStrategy === \"deeplink\" ? this.deeplink : returnStrategy;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      } else {\n        if (window.provider.sessionConfig) {\n          window.provider.sessionConfig.redirect = selectedReturnStrategy;\n        } else {\n          window.provider.sessionConfig = {\n            redirect: selectedReturnStrategy\n          };\n        }\n      }\n    },\n\n    handleReturnStrategyDeeplink(deeplink) {\n      console.log('handleReturnStrategyDeeplink', deeplink)\n      selectedReturnStrategy = deeplink;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: deeplink,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      } else {\n        if (window.provider.sessionConfig) {\n          window.provider.sessionConfig.redirect = deeplink;\n        } else {\n          window.provider.sessionConfig = {\n            redirect: deeplink\n          };\n        }\n      }\n    },\n\n    handleLanguageSelect(language) {\n      selectedLanguage = language;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: language,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n    handleConnectMethodsSelect() {\n      console.log(\"当前的方法 this.selectedMethod>>>>\",this.selectedMethod);\n    },\n\n    eth_verifyMessage(message, signature,ethAddress) {\n      console.log(\"eth_verifyMessage   message>>>\",message)\n      console.log(\"eth_verifyMessage   signature>>>\",signature)\n      console.log(\"eth_verifyMessage   ethAddress>>>\",ethAddress)\n      if (!message || !signature){\n        return \"\"\n      }\n      let originalMessage = message\n      if (message.startsWith(\"0x\")){\n        originalMessage = originalMessage.replace(/^0x/, '');\n        let str = '';\n        for (let i = 0; i < originalMessage.length; i += 2) {\n          const byte = originalMessage.slice(i, i + 2);\n          str += String.fromCharCode(parseInt(byte, 16));\n        }\n        originalMessage = str\n      }\n      console.log(\"eth_verifyMessage   originalMessage>>>\",originalMessage)\n\n      // const messageHash = ethers.utils.hashMessage(originalMessage);\n      const recoveredAddress = ethers.utils.verifyMessage(originalMessage, signature);\n      console.log(\"eth_verifyMessage recoveredAddress:\", recoveredAddress);\n      return recoveredAddress.toLowerCase() === ethAddress.toLowerCase();\n    },\n\n    async verifyMessage(list){ //连接验签\n\n        if (window.provider && window.provider.session && list && list.length>0){\n          let verifyList = {}\n          for (let methodItem of list){\n            if (\"result\" in methodItem && \"method\" in methodItem){\n              let requestItme = this.selectedMethodData.filter(item => item.method === methodItem.method)[0];\n              console.log(\"验证签名 请求>>>:\", JSON.stringify(requestItme));\n              console.log(\"验证签名 结果>>>:\", JSON.stringify(methodItem));\n              if (methodItem.method === \"personal_sign\"){\n                let ethAddress = await window.provider.request({ method: \"eth_requestAccounts\" },methodItem.chainId)\n                ethAddress = ethAddress[0];\n                console.log(\"验证eth 钱包地址>>>:\", ethAddress);\n                let ethMessage = requestItme.params[0]\n                console.log(\"验证eth 签名消息体>>:\", JSON.stringify(ethMessage));\n                verifyList[methodItem.method] = this.eth_verifyMessage(ethMessage,methodItem.result,ethAddress)\n              }else if(methodItem.method === \"solana_signMessage\"){\n                let solanaMessage = methodItem.result\n                if (\"signature\" in solanaMessage && \"publicKey\" in solanaMessage){\n                  const verifySol = nacl.sign.detached.verify(\n                      new TextEncoder().encode(\"Hello Solana\"),\n                      solanaMessage.signature,\n                      new PublicKey(solanaMessage.publicKey).toBytes()\n                  );\n                  verifyList[methodItem.method] = verifySol\n                }else {\n                  verifyList[methodItem.method] = false\n                }\n              }else if(methodItem.method === \"sui_signPersonalMessage\" || methodItem.method === \"sui_signMessage\"){\n                let suiResult =  this.sui_verifySignature(methodItem.result);\n                  verifyList[methodItem.method] = (await suiResult).result\n              }else if(methodItem.method === \"btc_signMessage\"){\n\n                verifyList[methodItem.method] = \"Not verified yet\"\n\n              }else if(methodItem.method === \"aptos_signMessage\"){\n                let aptosMessage = methodItem.result\n                let aptosProvider = new OKXAptosProvider(window.provider)\n                let  aptosPublicKey  = aptosProvider.getAccount(methodItem.chainId)?.publicKey\n\n                let signStr = aptosMessage.signature\n                if (signStr.startsWith(\"0x\")) {\n                  signStr = signStr.slice(2, signStr.length)\n                }\n\n                console.log(\"aptos_signMessage aptosPublicKey And signStr\",aptosPublicKey,signStr)\n                verifyList[methodItem.method] = nacl.sign.detached.verify(\n                    Buffer.from(aptosMessage.fullMessage),\n                    Buffer.from(signStr, 'hex'),\n                    Buffer.from(aptosPublicKey, 'hex'),\n                );\n              }else if(methodItem.method === \"cosmos_signArbitrary\"){\n                let cosmosProvider = new OKXCosmosProvider(window.provider)\n                let cosmosAddress = cosmosProvider.getAccount(methodItem.chainId)?.address\n                let cosmosMessage = methodItem.result\n                let isValid =  await this.cosmos_verifySignArbitrary(cosmosAddress,\"test cosmos\",cosmosMessage.signature, cosmosMessage.pub_key.value)\n                verifyList[methodItem.method] = isValid\n\n              }else if (methodItem.method === \"tron_signMessage\") {\n                let tronMessage = methodItem.result\n                let tronWeb = new TronWeb({\n                  \"fullHost\": 'https://api.trongrid.io',\n                  \"headers\": {},\n                  \"privateKey\": ''\n                })\n                let provider = new OKXTronProvider(window.provider)\n                verifyList[methodItem.method] = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), tronMessage, provider.getAccount(\"tron:mainnet\").address)\n              } else if (methodItem.method === \"tron_signMessageV2\") {\n                let tronMessage = methodItem.result\n                let tronWeb = new TronWeb({\n                  \"fullHost\": 'https://api.trongrid.io',\n                  \"headers\": {},\n                  \"privateKey\": ''\n                })\n                const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", tronMessage);\n                let provider = new OKXTronProvider(window.provider)\n\n                verifyList[methodItem.method] = base58Address === provider.getAccount(\"tron:mainnet\").address\n              }\n              else {\n                verifyList[methodItem.method] = \"Not verified yet\"\n\n              }\n            }else if(\"method\" in methodItem && \"error\" in methodItem) {\n              verifyList[methodItem.method] = methodItem.error\n            }\n\n          }\n\n          console.log(\"验证签名 最后的结果>>>:\", JSON.stringify(verifyList));\n          this.testTransaction = \"签名验证结果如下: \\n\" + JSON.stringify(verifyList)\n        }else {\n          console.log(\"验证签名 window.provider.session.connectMethodsReply 为空:\");\n\n        }\n\n    },\n\n    handleThemeSelect(theme) {\n      selectedTheme = theme;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: theme,\n          },\n        };\n      }\n    },\n\n    async sui_verifySignature(signatureResult) {\n      let resultObj = signatureResult\n      let result = false\n      let msg = ''\n      try {\n        /// 获取当前account\n        const adapter = new SuiAdapter(window.provider);\n        let account = adapter.getAccount()\n        console.log(`Account中获取的address：${account.address}`)\n\n        /// 验证签名\n        let pubKey = await verifyPersonalMessageSignature(this.currentSuiTransaction.message, resultObj.signature)\n        let address = pubKey.toSuiAddress()\n        console.log(`验签结果计算得到address：${address}`)\n\n        /// 对比pubKey\n        console.log(`account pubkey: ${account.publicKey}`,)\n        console.log(`result pubkey: ${pubKey.toBase64()}`)\n        result = (account.address === address) && (account.publicKey === pubKey.toBase64())\n\n        msg = `address verify: ${account.address === address}\\npublicKey verify: ${account.publicKey === pubKey.toBase64()}`\n        console.log(\"signature verify success: \", pubKey)\n      } catch (e) {\n        console.log(\"signature verify failed: \", e)\n      }\n      return {\n        result,\n        msg\n      }\n    },\n\n\n    handleRedirectSelect(input) {\n      this.redirect = input;\n    },\n\n    handleRedirectDeeplink(input) {\n      this.redirectDeeplink = input;\n    },\n\n    addRedirectParam() {\n      if (this.testTransaction) {\n        const newTransaction = JSON.parse(this.testTransaction);\n        newTransaction.redirect = this.redirect === 'deeplink' ? this.redirectDeeplink : this.redirect;\n        this.testTransaction = JSON.stringify(newTransaction);\n      }\n    },\n\n    canChainAddRedirectParam() {\n      return chainsThatCanAddRedirectParam.some((c) => this.selectedChain.startsWith(c));\n    }\n  },\n  created() {\n    // for (const eventName of Object.values(OKX_TON_CONNECTION_AND_TRANSACTION_EVENT)) {\n    //   console.log(eventName);\n    //   window.addEventListener(eventName, (event) => {\n    //     console.log(eventName,event.detail)\n    //     this.currentStatus = eventName\n    //   });\n    // }\n  },\n\n  mounted() {\n\n    var scriptTag = document.createElement(\"script\");\n    scriptTag.src = \"https://telegram.org/js/telegram-web-app.js\";\n    scriptTag.id = \"tgsdk\";\n    document.getElementsByTagName('head')[0].appendChild(scriptTag);\n\n    this.connectReady = true;\n    document.title = \"OKX Connect\";\n    this.initBtnClicked()\n  },\n};\n</script>\n","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_getAccount()\">getAccount(BTC)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signMessage()\">signMessage(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_send()\">send(BTC)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendBitcoin()\">sendBitcoin(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signPsbt_up()\">signPsbt(上架NFT)</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"btc_signAndPushPsbt_up()\">signAndPushPsbt(上架NFT)</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在OKX App选择要上架的Btc NFT，点击【上架】\n        </li>\n        <li>\n          2. 弹出签名面板，点开高级选项，查看\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出上架流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendInscription()\">sendInscription(BTC)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Btc NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"runsAddress\" clearable placeholder=\"the receiver address\" />\n      <el-input class=\"grid-content\" v-model=\"runsId\" clearable placeholder=\"the runeid\" />\n      <el-input class=\"grid-content\" v-model=\"runsAmount\" clearable placeholder=\"the amount to send\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendRunes()\">btc_sendRunes(BTC)</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model= \"intTicker\" clearable placeholder=\"BRC-20 ticker \" />\n      <el-input class=\"grid-content\" v-model=\" intAmount\" clearable placeholder=\" the amount to inscribe\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_inscribeTransfer()\">btc_inscribeTransfer(BTC)</el-button>\n    </el-col>\n\n\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    const runsAddress = ref('')\n    const runsId = ref('')\n    const runsAmount = ref('')\n    const intTicker = ref('')\n    const intAmount = ref('')\n\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount,\n      runsAddress,\n      runsId,\n      runsAmount,\n      intTicker,\n      intAmount\n    }\n  },\n  methods: {\n\n    btc_getAccount() {\n      this.$emit('generateTransactionParams', {}, \"btc_getAccount\")\n    },\n\n    btc_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to BTC\"\n      };\n      this.$emit('generateTransactionParams', params, \"btc_signMessage\")\n    },\n\n    btc_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"btc_send\")\n    },\n\n    btc_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"btc_sendBitcoin\")\n    },\n\n    btc_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"btc_signPsbt\")\n    },\n\n    btc_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"btc_signAndPushPsbt\")\n    },\n\n    btc_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"btc_sendInscription\")\n    },\n    btc_sendRunes() {\n      if (!this.runsAddress) {\n        alert(\"Please enter the receiver address\")\n        return\n      }\n      if (!this.runsId) {\n        alert(\"Please enter the runsId\")\n        return\n      }\n      if (!this.runsAmount) {\n        alert(\"Please enter the amount to send \")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        address:this.runsAddress,\n        runeid:this.runsId,\n        amount:this.runsAmount\n      }, \"btc_sendRunes\")\n    },\n\n    btc_inscribeTransfer() {\n      if (!this.intTicker) {\n        alert(\"Please enter BRC-20 ticker\")\n        return\n      }\n      if (!this.intAmount) {\n        alert(\"Please enter the amount to inscribe\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        ticker:this.intTicker,\n        amount:this.intAmount\n      }, \"btc_inscribeTransfer\")\n    },\n\n\n\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./BtcTransactionPanel.vue?vue&type=template&id=759766a0&scoped=true\"\nimport script from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./BtcTransactionPanel.vue?vue&type=style&index=0&id=759766a0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-759766a0\"]])\n\nexport default __exports__","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_getAccount()\">getAccount(Fractal)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signMessage()\">signMessage(Fractal)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_send()\">send(Fractal)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_sendBitcoin()\">sendBitcoin(Fractal)</el-button>\n\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signPsbt_up()\">signPsbt(上架NFT)</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_signAndPushPsbt_up()\">signAndPushPsbt(上架NFT)</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在OKX App选择要上架的Fractal NFT，点击【上架】\n        </li>\n        <li>\n          2. 弹出签名面板，点开高级选项，查看\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出上架流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_sendInscription()\">sendInscription(Fractal)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Fractal NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"runsAddress\" clearable placeholder=\"the receiver address\" />\n      <el-input class=\"grid-content\" v-model=\"runsId\" clearable placeholder=\"the runeid\" />\n      <el-input class=\"grid-content\" v-model=\"runsAmount\" clearable placeholder=\"the amount to send\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_sendRunes()\">fractal_sendRunes(fractal)</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model= \"intTicker\" clearable placeholder=\"BRC-20 ticker \" />\n      <el-input class=\"grid-content\" v-model=\" intAmount\" clearable placeholder=\" the amount to inscribe\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_inscribeTransfer()\">fractal_inscribeTransfer(fractal)</el-button>\n    </el-col>\n\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    const runsAddress = ref('')\n    const runsId = ref('')\n    const runsAmount = ref('')\n    const intTicker = ref('')\n    const intAmount = ref('')\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount,\n      runsAddress,\n      runsId,\n      runsAmount,\n      intTicker,\n      intAmount\n    }\n  },\n  methods: {\n\n    fractal_getAccount() {\n      this.$emit('generateTransactionParams', {}, \"fractal_getAccount\")\n    },\n\n    fractal_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to UniSat!\\n\\nClick to sign in and accept the UniSat Terms of Service (https://unisat.io/terms-of-service.html) and Privacy Policy (https://unisat.io/privacy-policy.html).\\n    \\nThis request will not trigger a blockchain transaction.\\n    \\nYour authentication status will reset after 24 hours.\\n    \\nWallet address:\\nbc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\\n    \\nNonce:\\n162d70e3-8c21-4cfd-9a22-9bf0a4b7be51\\n\"\n      };\n      this.$emit('generateTransactionParams', params, \"fractal_signMessage\")\n    },\n\n    fractal_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_send\")\n    },\n\n    fractal_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_sendBitcoin\")\n    },\n\n    fractal_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"fractal_signPsbt\")\n    },\n\n    fractal_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"fractal_signAndPushPsbt\")\n    },\n\n    fractal_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"fractal_sendInscription\")\n    },\n\n    fractal_sendRunes() {\n      if (!this.runsAddress) {\n        alert(\"Please enter the receiver address\")\n        return\n      }\n      if (!this.runsId) {\n        alert(\"Please enter the runsId\")\n        return\n      }\n      if (!this.runsAmount) {\n        alert(\"Please enter the amount to send \")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        address:this.runsAddress,\n        runeid:this.runsId,\n        amount:this.runsAmount\n      }, \"fractal_sendRunes\")\n    },\n\n    fractal_inscribeTransfer() {\n      if (!this.intTicker) {\n        alert(\"Please enter BRC-20 ticker\")\n        return\n      }\n      if (!this.intAmount) {\n        alert(\"Please enter the amount to inscribe\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        ticker:this.intTicker,\n        amount:this.intAmount\n      }, \"fractal_inscribeTransfer\")\n    },\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./FractalTransactionPanel.vue?vue&type=template&id=07ed8044&scoped=true\"\nimport script from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./FractalTransactionPanel.vue?vue&type=style&index=0&id=07ed8044&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-07ed8044\"]])\n\nexport default __exports__","<script>\n\nimport {getFullnodeUrl, SuiClient} from \"@mysten/sui/client\";\nimport {Transaction as SuiTransaction} from '@mysten/sui/transactions';\n\nexport default {\n  name: \"SuiTransactionPanel\",\n  methods: {\n    sui_getAccount() {\n      this.$emit('generateTransactionParams', '', \"sui_getAccount\")\n    },\n\n    //对单个交易签名（不发送)\n    async sui_signMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signMessage\")\n    },\n\n    async sui_signPersonalMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signPersonalMessage\")\n    },\n\n    sui_signTransaction2() {\n      // 定义要转移的金额和目标地址\n      const amount = 109; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    async sui_requestRpc() {\n      let provider = window.provider;\n      provider.setDefaultChain(\n          `sui:mainnet`,\n          `https://fullnode.mainnet.sui.io:443`\n      );\n      var data = {\n        method: \"suix_getBalance\",\n        params: [\n          \"0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae\",\n          \"0x168da5bf1f48dafc111b0a488fa454aca95e0b5e::usdc::USDC\",\n        ],\n      };\n\n      this.$emit(\"generateTransactionParams\", data, \"sui_testRpc\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 102; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signAndExecuteTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n      this.$emit(\"generateTransactionParams\", input, \"sui_signAndExecuteTransaction\")\n    },\n\n    /// generate txBytes and txSerialize\n    async generateTsBytesAndSerizlize(input) {\n      /// txBytes and txSerialize may be constructed in advance by the dapp side\n      let resultTuple = [\"\", \"\"];\n      if (\n          \"txBytes\" in input &&\n          input.txBytes.length > 0 &&\n          \"txSerialize\" in input &&\n          input.txSerialize.length > 0\n      ) {\n        resultTuple = [input.txBytes, input.txSerialize];\n      }\n\n      /// Otherwise, a transactionBlock parameter is required.\n      if (!(\"transactionBlock\" in input)) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      // if (this.walletAddress != \"connected\") {\n      //   alert(\"请先连接钱包\");\n      //   return new Promise((resolve) => {\n      //     resolve(resultTuple);\n      //   });\n      // }\n\n      let senderAccounts = window.provider.requestAccountsWithNamespace(\"sui\");\n      if (senderAccounts.length == 0) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      try {\n        let rpcUrl = getFullnodeUrl(\"mainnet\");\n        rpcUrl = \"https://www.okx.com/fullnode/sui/discover/rpc\"\n        const suiClient = new SuiClient({ url: rpcUrl });\n\n        /// sender is required\n        input.transactionBlock.setSender(senderAccounts[0]);\n        const result = await input.transactionBlock.build({\n          client: suiClient,\n        });\n        const txBytes = Buffer(result).toString(\"base64\");\n        const txSerialize = await SuiTransaction.from(txBytes).toJSON();\n        resultTuple = [txBytes, txSerialize];\n      } catch (error) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      return new Promise((resolve) => {\n        resolve(resultTuple)\n      })\n    },\n\n    //签名并发送交易\n    sui_signAndExecuteTransaction() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n        \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.testTransaction = JSON.stringify(input);\n      this.currentSuiTransaction = input;\n      this.currentSuiMethod = \"sui_signAndExecuteTransaction\";\n    },\n  },\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_getAccount()\">getAccount(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signMessage()\">signMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signPersonalMessage()\">signPersonalMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signTransaction2()\">signTransaction(Sui)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signAndExecuteTransaction()\">sendTransaction(Sui)</el-button>\n      <div style=\"font-size: 12px; color: gray;\">(send to Rally Tiger account)</div>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_requestRpc()\">RPC_getBalance</el-button>\n      <div style=\"font-size: 12px; color: gray;\">get USDC balance of address:</div>\n      <div style=\"font-size: 12px; color: gray\">0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae</div>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signTransaction_pre_execution()\">signTransaction(prepared data)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signAndExecuteTransaction_pre_execution()\">sendTransaction(prepared data)</el-button>\n    </el-col>\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./SuiTransactionPanel.vue?vue&type=template&id=56a8eddf&scoped=true\"\nimport script from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./SuiTransactionPanel.vue?vue&type=style&index=0&id=56a8eddf&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-56a8eddf\"]])\n\nexport default __exports__","<script>\n\n\nimport {OKXTronProvider} from \"@okxconnect/universal-provider\";\nimport {TronWeb} from \"tronweb\";\n\nexport default {\n  name: \"TronTransactionPanel\",\n  methods: {\n\n    async tron_signMessage() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessage(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n\n      const verify = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), res, provider.getAccount(\"tron:mainnet\").address)\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" + res, \"tron_signMessage\")\n    },\n\n    async tron_signMessageV2() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessageV2(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", res);\n      console.log(\"tron_signMessageV2_base58Address\", base58Address)\n      console.log(\"tron_signMessageV2_address\", provider.getAccount(\"tron:mainnet\").address)\n      const verify = base58Address === provider.getAccount(\"tron:mainnet\").address\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" +  res, \"tron_signMessage\")\n    },\n\n    async tron_signTransaction(isOnlySign) {\n      let provider = new OKXTronProvider(window.provider)\n        let tronWeb = new TronWeb({\n          \"fullHost\": 'https://api.trongrid.io',\n          \"headers\": {},\n          \"privateKey\": ''\n        })\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const transaction = await tronWeb.transactionBuilder.sendTrx(\"TGBcVLMnVtvJzjPWZpPiYBgwwb7th1w3BF\", 1000, address);\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let res = await provider.signTransaction( transaction, \"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", res, \"tron_signTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async getContract() {\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41e95812d8d5b5412d2b9f3a4d5a87ca15c5c51f33\"\n      \n      try {\n        const contract = await tronWeb.trx.getContract(contractAddress)\n        const abi = contract.abi.entrys;\n        console.log(\"获取到的合约：\")\n        console.log(abi)\n      } catch (error) {\n        console.log(\"Error getting contract ABI:\", error);\n      }\n    },\n    \n    async tron_signAndSendTransactionContract(isOnlySign) {\n      // this.getContract()\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41e95812d8d5b5412d2b9f3a4d5a87ca15c5c51f33\"\n      let provider = new OKXTronProvider(window.provider)\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const parameter = [\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n      ]\n      const ret = await tronWeb.transactionBuilder.triggerSmartContract(contractAddress, \"quote(uint256,uint256,uint256)\", {}, parameter, address);\n      console.log(\"=====>transaction: \")\n      console.log(ret);\n      this.$emit(\"generateTransactionParams\", ret.transaction)\n      if (isOnlySign) {\n        let tx = await provider.signTransaction( ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async tron_signAndSendTransactionApprove(isOnlySign) {\n      let provider = new OKXTronProvider(window.provider)\n\n      let transaction = {\n        \"visible\": false,\n        \"txID\": \"d1ed31b6abd2c37e248254681d3ee61b2e628fbd776def753b5592712ebd98c5\",\n        \"raw_data\": {\n          \"contract\": [{\n            \"parameter\": {\n              \"value\": {\n                \"data\": \"095ea7b3000000000000000000000000e95812d8d5b5412d2b9f3a4d5a87ca15c5c51f33ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n                \"owner_address\": \"4157c140be01fa2bbabf7f055ab879d0c05725293c\",\n                \"contract_address\": \"41b4a428ab7092c2f1395f376ce297033b3bb446c1\"\n              },\n              \"type_url\": \"type.googleapis.com/protocol.TriggerSmartContract\"\n            },\n            \"type\": \"TriggerSmartContract\"\n          }],\n          \"ref_block_bytes\": \"1bde\",\n          \"ref_block_hash\": \"af71fa1aa01b5bd1\",\n          \"expiration\": Date.now() + 60000,\n          \"fee_limit\": 250000000,\n          \"timestamp\": Date.now()\n        },\n        \"raw_data_hex\": \"0a021bde2208af71fa1aa01b5bd140f8b1fa98b4325aae01081f12a9010a31747970652e676f6f676c65617069732e636f6d2f70726f746f636f6c2e54726967676572536d617274436f6e747261637412740a154157c140be01fa2bbabf7f055ab879d0c05725293c121541b4a428ab7092c2f1395f376ce297033b3bb446c12244095ea7b3000000000000000000000000e95812d8d5b5412d2b9f3a4d5a87ca15c5c51f33ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff70f1e6f698b432900180e59a77\"\n      }\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let tx = await provider.signTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n\n    }\n\n  }\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessage()\">tron_signMessage</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessageV2()\">tron_signMessageV2</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(true)\">\n        tron_signTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(true)\">\n        tron_signTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(true)\">\n        tron_signTransaction(Approve)\n      </el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(false)\">\n        tron_signAndSendTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(false)\">\n        tron_signAndSendTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(false)\">\n        tron_signAndSendTransaction(approve)\n      </el-button>\n    </el-col>\n\n\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./TronTransactionPanel.vue?vue&type=template&id=eaaccc08&scoped=true\"\nimport script from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./TronTransactionPanel.vue?vue&type=style&index=0&id=eaaccc08&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-eaaccc08\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=6184f446&scoped=true\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=6184f446&scoped=true&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-6184f446\"]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport ElementPlus from 'element-plus'\nimport 'element-plus/dist/index.css'\nimport App from './App.vue'\n\nconst app = createApp(App)\n\napp.use(ElementPlus)\napp.mount('#app')","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkokxconnectdemo\"] = self[\"webpackChunkokxconnectdemo\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(5636); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["require","__awaiter","this","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","OKXBtcProvider","_1","core_1","constructor","provider","caip","getAddressForChainId","chainId","_a","_b","ns","checkChainId","undefined","OKXConnectError","OKX_CONNECT_ERROR_CODES","UNKNOWN_ERROR","accounts","session","namespaces","filter","account","startsWith","length","address","split","getAccount","_c","extra","publicKey","signMessage","signStr","type","params","from","ret","request","method","errorData","error","sendBitcoin","toAddress","satoshis","options","to","toString","feeRate","send","txhash","input","checkParameters","signPsbt","psbtHex","signPsbts","psbtResults","results","JSON","parse","catch","psbtHexs","signAndPushPsbt","sendInscription","inscriptionId","extension","coinId","protocolId","atomicSuffix","ordinalsSuffix","toLowerCase","endsWith","removeSuffix","scenario","txType","batchBean","coinAmount","nftId","sendRunes","runeid","amount","logDebug","stringify","err","inscribeTransfer","ticker","str","suffix","slice","keys","unexistKeys","forEach","key","push","console","log","join","includes","namespaceKey","_","OKXCosmosProvider","_d","_e","_f","NameSpaceKeyCosmos","accountArray","algo","bech32Address","pubKey","hexToUint8Array","signArbitrary","signerAddress","data","base64Encoded","window","btoa","signDoc","chain_id","account_number","sequence","fee","gas","msgs","memo","signData","signAmino","signOptions","resData","signed","signature","signDirect","object","bodyBytes","bufferToHex","authInfoBytes","accountNumber","res","messageToBuffer","message","buffer","Uint8Array","replace","arr","output","map","x","padStart","hexString","arrayBuffer","i","byteValue","parseInt","substr","isNaN","OKXTonProvider","statusChangeSubscriptions","statusChangeErrorSubscriptions","on","tonWallet","wallet","callback","errorsHandler","connected","tonNameSpace","payload","ton_addr","chain","network","walletStateInit","sessionWallet","tonDeviceInfo","platform","appName","appVersion","maxProtocolVersion","features","device","ton_proof","connectItems","tonProof","onStatusChange","item","sendTransaction","transaction","TONCHAIN","MAINNET","requestAccountsWithNamespace","requestParams","OKXTronProvider","TRON_CHAIN_ID","getChain","CHAIN_NOT_SUPPORTED","NameSpaceKeyTron","stringToHex","hex","charCodeAt","signMessageV2","signTransaction","signedTx","realSignTx","visible","txID","rawData","contract","raw_data","expiration","ref_block_bytes","fee_limit","ref_block_hash","timestamp","raw_data_hex","signAndSendTransaction","__importDefault","mod","__esModule","OKXUniversalProvider","eip155_1","sui_1","constants_1","eventemitter3_1","client_1","namespaces_1","solana_1","btc_1","aptos_1","ton_1","cosmos_1","tron_1","utils_1","packages_1","provider_1","init","opts","checkMetaData","dappMetaData","setGlobal","okxConnectUniversalinwindow","initialize","getDefaultReporter","configVersionAndSide","providerOpts","name","rpcProviders","events","default","args","reportLog","NOT_CONNECTED_ERROR","namespace","requestParam","buildRequestParamFromRequest","getProvider","validateChain","keyArr","assign","redirect","sessionConfig","enable","client","connectOpts","connect","requestAccounts","disconnect","called","onRequestSent","disconnectAndEmit","cleanup","engine","connectionManager","emit","topic","aptosChainNameToGeneralId","replaceAptos","aptosNameSpace","realNS","replaceAptosInner","aptos","optionAptosNameSpace","optionalNamespaces","realOptionNS","chains","defaultChain","replaceAptosGeneralIdWithNetName","replaceSessionAptos","index","values","disconnectInner","getCurrentConnectionReady","connectAndSign","signRequest","updatedOpts","openUniversalUrl","isMobileUserAgent","setNamespaces","onConnect","requestItem","signResponseList","okxConnectUniversalUIinwindow","signResponse","creatNotSupportMethodItemReplay","setTimeout","syncAllAddresses","syncAddressAvailable","syncAllAddress","METHOD_NOT_SUPPORTED","event","listener","once","removeListener","off","setDefaultChain","rpcUrl","test","checkStorage","sessionInfoStr","getFromStore","sessionInfo","restoreconnect","createProviders","registerEventListeners","url","location","hostname","origin","SignClient","providersToCreate","Set","parseNamespaceKey","namespacesValue","currentNameSpace","Eip155Provider","opts1","solanaProvider","sonicProvider","svmProvider","optsTon","tonProvider","optsSui","suiProvider","SuiProvider","optsBtc","btcProvider","fbProvider","aptosProvider","moveProvider","cosmosProvider","tronProvider","addDisconnectListener","PROVIDER_EVENTS","DEFAULT_CHAIN_CHANGED","caip2ChainId","onChainChanged","UPDATE_NAMESPACES","nameSpaces","nameSpacekey","persist","icon","dappInfo","isChainNamespaceInSession","chainsArr","defaultNamespace","getDefaultChain","namespaceStr","requestDefaultChainWithNamespace","caip2Chain","sessionProperties","saveSessionContent","getSessionContent","showRequestModal","__createBinding","create","o","m","k","k2","desc","getOwnPropertyDescriptor","writable","configurable","enumerable","get","__exportStar","p","prototype","hasOwnProperty","call","OKXUniversalProvider_1","OKXBtcProvider_1","OKXCosmosProvider_1","OKXTonProvider_1","OKXTronProvider_1","ConnectMethodUtils_1","ISignClient","metaData","super","connectRequest","requestAccountItem","requiredNamespaces","nameSpaceToConnectWalletNameSpace","setSessionConnectingListener","SESSION_CONNECTING","connectRequestMethods","connectMethodsToConnectWalletMethods","universalConnect","metadata","info","getOKXLink","useMini","getAppWalletShortDeepLink","clientId","fillParamsToSession","connectMethodsResponseUpdate","isIos","openOKXWallet","response","requestId","code","onAck","Engine","ConnectionManager","getTelegramWalletTWAUrl","tmaReturnUrl","openOKXTMAWalletlinkWithFallback","openOKXDeeplink","standardDeeplink","allAddressStr","syncResoonseToRequire","connectSupportMethods","connectMethodsAdaptOldVersion","bs58_1","uint8array_extras_1","isArray","Array","isRecord","notSupportError","errorItem","callBackParams","solAccount","NameSpaceKeySOL","account1","solAddress","fromAccountToAddress","realMessage","encode","stringToUint8Array","suiMessage","convertedArray","uint8Array","decoder","TextDecoder","b64encoded","decode","atob","btcAccounts","NameSpaceKeyBtc","account2","btcAccount","btcAddress","paramData","aptosAccount","NameSpaceKeyAptos","account3","aptosAddress","prefix","nonce","fullMessage","application","protocol","aptosChainId","utf8Array","TextEncoder","byte","cosmosAccount","account_cosmos","cosmosAddress","cosmosData","cosmosBase64Encoded","stringToBase64","methodItem","solanaSuccessData","suiMethod","requestMethod","suiMessageb64","aptosSignature","requireNameSpace","includeEip155","some","space","syncAddressHostAvailable","includeChain","paramsArr","firstParam","firstObj","aptosParams","currentURL","signChainId","applicationUrl","cosmosChain","responseAddressStr","allAddress","isEvm","walletName","deriveName","addresses","addr","ci","a","evmAddress","freeze","getAccountsChains","isCaipNamespace","NameSpaceKeyEip155","NameSpaceKeySui","NameSpaceKeyTON","mergeRpcMap","targetRpcMap","sourceRpcMap","mergeNamespaces","target","source","rpcMap","GENERIC_SUBPROVIDER_NAME","RPC_URL","STORAGE","CONTEXT","WC_VERSION","PROTOCOL","RELAY_URL","LOGGER","JsonRpcConnection_1","JsonRpcProvider_1","AptosProvider","httpProviders","createHttpProviders","updateNamespace","getAccounts","methods","setHttpProvider","Error","http","parsedChainId","getChainId","parsedRpc","getRpcUrl","httpProvider","createHttpProvider","getHttpProvider","rpc","JsonRpcProvider","JsonRpcConnection","getGlobal","BtcProvider","logError","CosmosProvider","updateRequestParams","isDic","switchChainId","decimalNumber","selectedChainId","chainNum","paramsChainId","paramsChainString","String","Number","adaptArray","messageObj","addressObj","isEqual","chainAddress","messages","typedDataJson","secondObj","hexChainId","getHexChainIdFromRequest","isChainApproved","handleSwitchChain","addEthereumChain","resultData","nameSpace","rpcUrls","eip155","cross_fetch_1","core_2","DEFAULT_HTTP_HEADERS","Accept","DEFAULT_HTTP_METHOD","DEFAULT_FETCH_OPTS","headers","disableProviderPing","EventEmitter","isAvailable","registering","isHttpUrl","connecting","open","arguments","register","close","onClose","body","safeJsonStringify","json","onPayload","onError","id","jsonrpc","onOpen","parseError","safeJsonParse","formatJsonRpcError","parseConnectionError","types_1","IJSONRpcProvider","connection","hasRegisteredEventListeners","setConnection","context","requestStrict","formatJsonRpcRequest","getBigIntRpcId","isJsonRpcError","isJsonRpcResponse","reason","_error","SolanaProvider","getPubkey","getWalletAddress","components","__rest","s","t","indexOf","getOwnPropertySymbols","propertyIsEnumerable","TONProvider","validUntil","newParams","fromAddress","boc","TronProvider","IJSONRpcConnection","opt","globals","convertChainIdToNumber","parseChainId","mergeArrays","projectId","reference","addressArr","CAIP_DELIMITER","b","versionCompare","okxGlobal","_createElementBlock","_hoisted_1","_createVNode","_component_el_container","_withCtx","_component_el_header","_cache","_createTextVNode","_component_el_main","_component_el_card","class","header","_createElementVNode","style","_component_el_row","_component_el_col","span","_toDisplayString","$options","_ctx","currentStatus","_component_el_checkbox","modelValue","withUI","$event","onChange","handleWithUI","universalToTG","handleUniversalToTG","_component_el_select","modals","placeholder","handleModalsSelect","multiple","_component_el_option","label","returnStrategy","handleReturnStrategySelect","_Fragment","_renderList","returnStrategies","strategy","_createBlock","_component_el_input","deeplink","handleReturnStrategyDeeplink","disabled","_createCommentVNode","language","handleLanguageSelect","locales","locale","theme","handleThemeSelect","THEME","LIGHT","DARK","selectedMethod","handleConnectMethodsSelect","connectMethods","tonProofValue","gutter","align","availableChains","checked","areChainsInit","isOptionalChecked","handleOptionChange","_component_el_button","onClick","initBtnClicked","connectInitStr","connectBtnClicked","connectStatusStr","syncAllAddressClick","syncAllAddressStr","disconnectAction","walletAddress","disconnectStatusStr","_Teleport","showModal","closeModal","_withModifiers","_component_qrcode_vue","qrValue","size","level","_component_el_tabs","activeTab","onTabClick","clickActiveTab","_component_el_tab_pane","eth_requestAccounts","eth_chainId","wallet_switchEthereumChain","wallet_addEthereumChain","personal_sign","eth_signTypedData_v4","eth_sendTransaction_transfer","eth_sendTransaction_approve","eth_sendTransaction_mint","wallet_watchAsset","ton_getAccount","ton_sendTransaction","sol_signMessage","sol_signTransaction","sol_signVersionedTransaction","sol_signAllTransactions","sol_signAllVersionedTransactions","sol_signAndSendTransaction","sol_signAndSendVersionedTransaction","_component_SuiPanel","onGenerateTransactionParams","sui_generateTransactionParams","_component_BTCPanel","btc_generateTransactionParams","_component_FractalPanel","fractal_generateTransactionParams","_component_TronTransactionPanel","tron_generateTransactionParams","onGenerateTransactionResult","tron_getTransactionResult","aptos_signMessage","aptos_signTransaction","aptos_signAndSubmitTransaction","cosmos_signArbitrary","cosmos_signAmino","cosmos_signDirect","wallet_testRpc","eth_sendTransaction_swap","move_signTransaction","move_signAndSubmitTransaction","testBase64UrlSafe","xs","sm","handleRedirectSelect","canChainAddRedirectParam","redirectDeeplink","handleRedirectDeeplink","addRedirectParam","testTransaction","rows","testboc","testTransactionStr","btc_getAccount","btc_signMessage","$setup","sendAmount","clearable","btc_send","sendSatoshisAmount","btc_sendBitcoin","btc_signPsbt_up","btc_signAndPushPsbt_up","receiver","btc_sendInscription","runsAddress","runsId","runsAmount","btc_sendRunes","intTicker","intAmount","btc_inscribeTransfer","props","msg","setup","ref","$emit","alert","autoFinalized","__exports__","fractal_getAccount","fractal_signMessage","fractal_send","fractal_sendBitcoin","fractal_signPsbt_up","fractal_signAndPushPsbt_up","fractal_sendInscription","fractal_sendRunes","fractal_inscribeTransfer","sui_getAccount","sui_signMessage","sui_signPersonalMessage","sui_signTransaction2","sui_signAndExecuteTransaction","sui_requestRpc","sui_signTransaction_pre_execution","sui_signAndExecuteTransaction_pre_execution","recipientAddress","tx","SuiTransaction","coin","splitCoins","transferObjects","transactionBlock","showEffects","txBytes","txSerialize","generateTsBytesAndSerizlize","resultTuple","senderAccounts","getFullnodeUrl","suiClient","SuiClient","setSender","build","Buffer","toJSON","currentSuiTransaction","currentSuiMethod","tron_signMessage","tron_signMessageV2","tron_signTransaction","tron_signAndSendTransactionContract","tron_signAndSendTransactionApprove","tronWeb","TronWeb","verify","trx","verifyMessage","base58Address","verifyMessageV2","isOnlySign","transactionBuilder","sendTrx","getContract","contractAddress","abi","entrys","parameter","triggerSmartContract","Date","now","verifyADR36Amino","fromBech32","VConsole","allChains","chainsThatCanAddRedirectParam","optionChains","selectedModals","selectedReturnStrategy","selectedDeepLink","selectedLanguage","selectedTheme","TronTransactionPanel","QrcodeVue","BTCPanel","FractalPanel","SuiPanel","testTopic","testPublicKey","testProofPayload","pendingDeepLink","logList","connectReady","localPubKey","localSecKey","selectedChain","ProofPayloadVerify","showVerifyRow","has","localStorage","getItem","selectedMethodData","isChecked","setItem","reload","delete","add","computed","selectedChains","initChains","newChains","updatedChains","tab","tabName","initCall","OKXUniversalConnectUI","actionsConfiguration","uiPreferences","walletInfo","onModalStateChange","state","entries","substring","uri","useShortLink","isPC","items","testTonSdk","blockExplorerUrls","chainName","nativeCurrency","symbol","decimals","dataETH","dataPolygon","types","EIP712Domain","Person","Mail","primaryType","domain","version","verifyingContract","contents","maxPriorityFeePerGas","maxFeePerGas","gasPrice","gasLimit","image","tonUniversalLog","sendTransactionAlert","fetch","confirm","sendData","adapter","SuiAdapter","suiResult","signAndExecuteTransaction","sui_verifySignature","signPersonalMessage","btcAdapter","btcResult","currentBtcMethod","currentBtcTransaction","hexToBase64","bs64Str","fractalResult","currentFractalMethod","currentFractalTransaction","USER_REJECTS_ERROR","hexStr","bytes","blob","Blob","reader","FileReader","onload","base64Data","onerror","readAsDataURL","datatest","binary","fromCharCode","firstStr","showUrl","getUniversalLink","getAppWalletDeepLink","hasEip155","hasSolana","hasSui","hasBtc","hasAptos","hasTon","hasCosmos","nameSpacesChains","optSpaceChains","solanaChains","hasTron","suiChains","btcChains","connectMethod","connectData","requireData","solana","cosmos","tron","tonParams","ton","sui","btc","optData","eip155Chains","signMethods","getCurrentSelectedMethodData","openModalAndSign","openModal","methodList","suiData","currentMethod","userAgentInfo","navigator","userAgent","Agents","flag","v","isSafariOrChrome","pubkey","OKXSolanaProvider","result1","nacl","detached","PublicKey","toBytes","OKXAptosProvider","config","AptosConfig","Network","Aptos","simple","sender","function","typeArguments","functionArguments","signAndSubmitTransaction","Connection","getSolConnect","blockhash","getLatestBlockhash","versionedTransactionMessage","TransactionMessage","payerKey","recentBlockhash","instructions","SystemProgram","transfer","fromPubkey","toPubkey","lamports","compileToV0Message","VersionedTransaction","signAllTransactions","Transaction","feePayer","isValid","cosmos_verifySignArbitrary","pub_key","signer","prefixStr","signatureBuffer","uint8Signature","pubKeyValueBuffer","pubKeyUint8Array","uiOptions","eth_verifyMessage","ethAddress","originalMessage","recoveredAddress","ethers","list","verifyList","requestItme","ethMessage","solanaMessage","verifySol","aptosMessage","aptosPublicKey","cosmosMessage","tronMessage","signatureResult","resultObj","verifyPersonalMessageSignature","toSuiAddress","toBase64","newTransaction","c","created","mounted","scriptTag","document","createElement","src","getElementsByTagName","appendChild","title","render","app","createApp","App","use","ElementPlus","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","loaded","__webpack_modules__","amdO","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","j","every","splice","r","n","getter","d","definition","g","globalThis","Function","obj","prop","Symbol","toStringTag","nmd","paths","children","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}