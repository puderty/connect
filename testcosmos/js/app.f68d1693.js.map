{"version":3,"file":"js/app.f68d1693.js","mappings":"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","sources":["webpack://okxconnectdemo/../packages/aptos-provider/src/AptosUtils.js","webpack://okxconnectdemo/../packages/aptos-provider/src/OKXAptosProvider.js","webpack://okxconnectdemo/../packages/aptos-provider/src/index.js","webpack://okxconnectdemo/../packages/solana-provider/src/OKXSolanaProvider.js","webpack://okxconnectdemo/../packages/solana-provider/src/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXBtcProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXCosmosProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXUniversalProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/sign-client/client.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/namespaces.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/events.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/values.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/aptos.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/btc.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/cosmos.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/eip155.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcConnection.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/solana.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/sui.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/ton.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/misc.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/providers.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/globals.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/misc.js","webpack://okxconnectdemo/./src/App.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue?1b44","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue?e4fb","webpack://okxconnectdemo/./src/App.vue?7ccd","webpack://okxconnectdemo/./src/main.js","webpack://okxconnectdemo/webpack/bootstrap","webpack://okxconnectdemo/webpack/runtime/amd options","webpack://okxconnectdemo/webpack/runtime/chunk loaded","webpack://okxconnectdemo/webpack/runtime/compat get default export","webpack://okxconnectdemo/webpack/runtime/define property getters","webpack://okxconnectdemo/webpack/runtime/global","webpack://okxconnectdemo/webpack/runtime/hasOwnProperty shorthand","webpack://okxconnectdemo/webpack/runtime/make namespace object","webpack://okxconnectdemo/webpack/runtime/node module decorator","webpack://okxconnectdemo/webpack/runtime/jsonp chunk loading","webpack://okxconnectdemo/webpack/startup"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AptosUtils = void 0;\nclass AptosUtils {\n    static getTransaction(o) {\n        if (\"rawTransaction\" in o) {\n            let transaction = o;\n            if (\"entryFunction\" in transaction.rawTransaction.payload) {\n                let entryFunction = transaction.rawTransaction.payload.entryFunction;\n                let typeArgs = entryFunction.type_args;\n                let typeArguments = new Array();\n                typeArgs.forEach(typeTag => {\n                    typeArguments.push(typeTag.toString());\n                });\n                let realArguments = new Array();\n                this.getTypeArguments(entryFunction.args, realArguments);\n                let i = {\n                    arguments: realArguments,\n                    function: `${entryFunction.module_name.address.data ? entryFunction.module_name.address.toString() : entryFunction.module_name.address}::${entryFunction.module_name.name.identifier ? entryFunction.module_name.name.identifier : entryFunction.module_name.name}::${entryFunction.function_name.identifier ? entryFunction.function_name.identifier : entryFunction.function_name}`,\n                    type: \"entry_function_payload\",\n                    type_arguments: typeArguments\n                };\n                return this.getArguments(i);\n            }\n        }\n        return o;\n    }\n    static getTypeArguments(args, array) {\n        for (let j = 0; j < args.length; j++) {\n            let y = args[j];\n            if (\"values\" in y && y.values != null && y.values instanceof Array) {\n                let subArray = new Array();\n                array.push(subArray);\n                this.getTypeArguments(y.values, subArray);\n            }\n            else {\n                this.dealArrayElements(y, array);\n            }\n        }\n    }\n    static dealArrayElements(e, array) {\n        if (\"value\" in e && e.value != null) {\n            array.push(e.value.toString());\n        }\n        else if (\"data\" in e && e.data != null && e.data instanceof Uint8Array) {\n            return array.push(e.toString());\n        }\n        else {\n            return array.push(e.toString());\n        }\n    }\n    static getArguments(e) {\n        if (\"arguments\" in e) {\n            let t = e.arguments;\n            if (Array.isArray(t)) {\n                let r = new Array();\n                t.forEach(n => {\n                    if (n instanceof Uint8Array) {\n                        let o = new Array();\n                        n.forEach(i => {\n                            o.push(i);\n                        });\n                        r.push(o);\n                    }\n                    else\n                        r.push(n);\n                });\n                e = Object.assign(Object.assign({}, e), { arguments: r });\n            }\n        }\n        return e;\n    }\n}\nexports.AptosUtils = AptosUtils;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXAptosProvider = void 0;\nconst buffer_1 = require(\"buffer\");\nconst AptosUtils_1 = require(\"./AptosUtils\");\nconst core_1 = require(\"@okxconnect/core\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nclass OKXAptosProvider {\n    constructor(provider) {\n        this.chainsSet = new Set();\n        this.provider = provider.getUniversalProvider();\n        this.getConnectedNamespace();\n    }\n    get defaultNetwork() {\n        let network = this.provider.requestDefaultChainWithNamespace(core_1.NameSpaceKeyAptos);\n        return network;\n    }\n    get currentChainId() {\n        return `aptos:${this.defaultNetwork}`;\n    }\n    getRealChainId(chainId) {\n        // if (chainId == \"aptos:mainnet\") {\n        //     return \"aptos:637\"\n        // } else if (chainId == \"movement:testnet\") {\n        //     return \"aptos:70000060\"\n        // }\n        if (chainId == null) {\n            if (this.chainsSet.size == 1) {\n                return this.currentChainId;\n            }\n            else {\n                throw new Error(\"connected to multiple aptos chains,chainId can not be null\");\n            }\n        }\n        else {\n            return chainId;\n        }\n    }\n    getConnectedNamespace() {\n        var _a, _b, _c;\n        (_c = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces) === null || _b === void 0 ? void 0 : _b['aptos']) === null || _c === void 0 ? void 0 : _c.chains.forEach(chain => {\n            this.chainsSet.add(chain);\n        });\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n        chainId = this.getRealChainId(chainId);\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['aptos']) === null || _b === void 0 ? void 0 : _b.accounts[0];\n        if (chainId != null) {\n            account = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces['aptos']) === null || _d === void 0 ? void 0 : _d.accounts.filter(function (account) {\n                return account.startsWith(chainId);\n            })[0];\n        }\n        (0, core_1.logDebug)(\"getAccount\", account);\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        console.log(\"aptos_publicKey\", (_f = (_e = this.provider.session) === null || _e === void 0 ? void 0 : _e.namespaces['aptos']) === null || _f === void 0 ? void 0 : _f.extra);\n        let extra = (_j = (_h = (_g = this.provider.session) === null || _g === void 0 ? void 0 : _g.namespaces['aptos']) === null || _h === void 0 ? void 0 : _h.extra) === null || _j === void 0 ? void 0 : _j[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n            console.log(\"aptos_publicKey\", publicKey);\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address,\n            publicKey: publicKey\n        };\n    }\n    signMessage(payload, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b;\n            let realChain = this.getRealChainId(chainId);\n            try {\n                let prefix = \"APTOS\";\n                let address = (_a = this.getAccount(realChain)) === null || _a === void 0 ? void 0 : _a.address;\n                let message = \"\", nonce = \"\";\n                var fullMessage = prefix;\n                let application = window.location.protocol + \"//\" + window.location.hostname;\n                if (\"address\" in payload && payload.address) {\n                    fullMessage += \"\\naddress: \" + address;\n                }\n                if (\"application\" in payload && payload.application) {\n                    fullMessage += \"\\napplication: \" + application;\n                }\n                if (\"chainId\" in payload && payload.chainId) {\n                    let chainId = 1;\n                    if (realChain == \"aptos:mainnet\") {\n                        chainId = 1;\n                    }\n                    else if (realChain == \"movement:testnet\") {\n                        chainId = 2;\n                    }\n                    fullMessage += \"\\nchainId: \" + chainId;\n                }\n                if (\"message\" in payload) {\n                    fullMessage += \"\\nmessage: \" + payload.message;\n                    message = payload.message;\n                }\n                if (\"nonce\" in payload) {\n                    fullMessage += \"\\nnonce: \" + payload.nonce;\n                    nonce = payload.nonce;\n                }\n                console.log(\"signMessage\", fullMessage);\n                const buffer = buffer_1.Buffer.from(fullMessage);\n                const hex = this.bufferToHex(buffer);\n                let data = {\n                    \"chainId\": realChain,\n                    \"method\": \"aptos_signMessage\",\n                    \"params\": {\n                        \"message\": hex,\n                    }\n                };\n                let signedMessage = yield this.provider.request(data, realChain);\n                if ('result' in signedMessage) {\n                    let successData = signedMessage.result;\n                    let publicKey = (_b = this.getAccount(realChain)) === null || _b === void 0 ? void 0 : _b.publicKey;\n                    // Remove the 0x prefix\n                    const key = publicKey.slice(2, 66);\n                    console.log(\"apt_signMessage\", buffer_1.Buffer.from(successData, 'hex'));\n                    console.log(\"apt_signMessage\", successData);\n                    let signStr = successData;\n                    if (successData.startsWith(\"0x\")) {\n                        signStr = successData.slice(2, successData.length);\n                    }\n                    const verified = tweetnacl_1.default.sign.detached.verify(buffer_1.Buffer.from(fullMessage), buffer_1.Buffer.from(signStr, 'hex'), buffer_1.Buffer.from(publicKey, 'hex'));\n                    console.log(\"signMessage\", verified);\n                    return new Promise((resolve, reject) => {\n                        resolve({\n                            address: address,\n                            application: application,\n                            chainId: realChain,\n                            fullMessage: fullMessage,\n                            message: message,\n                            nonce: nonce,\n                            prefix: prefix,\n                            signature: successData,\n                            // verified:verified\n                        });\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        if (\"error\" in signedMessage) {\n                            resolve(signedMessage.error);\n                        }\n                    });\n                }\n            }\n            catch (error) {\n                console.error('方法数据回调失败 --Error--', error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    signTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let tx = AptosUtils_1.AptosUtils.getTransaction(transaction);\n            console.log(\"signTransaction\", tx);\n            let realChain = this.getRealChainId(chainId);\n            try {\n                let signature = yield this.provider.request({\n                    \"method\": \"aptos_signTransaction\",\n                    \"params\": tx\n                }, realChain);\n                if ('result' in signature) {\n                    let successData = signature.result;\n                    return new Promise((resolve, reject) => {\n                        resolve(buffer_1.Buffer.from(successData));\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        reject(signature);\n                    });\n                }\n            }\n            catch (error) {\n                (0, core_1.logDebug)(\"getSignedTransaction\", error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    signAndSubmitTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let tx = AptosUtils_1.AptosUtils.getTransaction(transaction);\n            console.log(\"signAndSubmitTransaction\", tx);\n            let realChain = this.getRealChainId(chainId);\n            try {\n                let signature = yield this.provider.request({\n                    \"method\": \"aptos_signAndSubmitTransaction\",\n                    \"params\": tx\n                }, realChain);\n                if ('result' in signature) {\n                    let successData = signature.result;\n                    return new Promise((resolve, reject) => {\n                        resolve(successData);\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        reject(signature);\n                    });\n                }\n            }\n            catch (error) {\n                (0, core_1.logDebug)(\"getSignedTransaction\", error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    bufferToHex(buf) {\n        return \"0x\" + buffer_1.Buffer.from(buf).toString(\"hex\");\n    }\n}\nexports.OKXAptosProvider = OKXAptosProvider;\nexports.default = OKXAptosProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXAptosProvider = void 0;\nvar OKXAptosProvider_1 = require(\"./OKXAptosProvider\");\nObject.defineProperty(exports, \"OKXAptosProvider\", { enumerable: true, get: function () { return OKXAptosProvider_1.OKXAptosProvider; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXSolanaProvider = void 0;\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXSolanaProvider {\n    getRealChainId(chainId) {\n        if (chainId == null) {\n            if (this.chainsSet.size == 1) {\n                let realChain = \"\";\n                let map = this.defaultChainMap;\n                this.chainsSet.forEach(function (chain) {\n                    if (map.has(chain)) {\n                        realChain = map.get(chain);\n                    }\n                });\n                if (realChain == \"\") {\n                    throw new Error(\"unsupported chainId\");\n                }\n                else {\n                    return realChain;\n                }\n            }\n            else {\n                throw new Error(\"connected to multiple solana chains,chainId can not be null\");\n            }\n        }\n        else {\n            if (chainId.startsWith(\"svm\")) {\n                return chainId;\n            }\n            else {\n                if (this.caip.includes(chainId)) {\n                    return chainId;\n                }\n                else {\n                    throw new Error(\"wrong chainId\");\n                }\n            }\n        }\n    }\n    getConnectedNamespace() {\n        var _a, _b, _c;\n        (_c = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces) === null || _b === void 0 ? void 0 : _b['solana']) === null || _c === void 0 ? void 0 : _c.chains.forEach(chain => {\n            this.chainsSet.add(chain.split(\":\")[0]);\n        });\n    }\n    constructor(provider) {\n        this.chainsSet = new Set();\n        this.caip = [\n            \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n            \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n            \"sonic:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n            \"sonic:EtWTRABZaYq6iMfeYKouRu166VU2xqa1\"\n        ];\n        this.defaultChainMap = new Map();\n        this.provider = provider.getUniversalProvider();\n        this.defaultChainMap.set(\"solana\", \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\");\n        this.defaultChainMap.set(\"sonic\", \"sonic:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\");\n        this.getConnectedNamespace();\n    }\n    signMessage(message, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c;\n            let realMessage = message;\n            if (((_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.wallet) === null || _b === void 0 ? void 0 : _b.appName) == \"OKX Wallet\") {\n                realMessage = bs58_1.default.encode(new TextEncoder().encode(message));\n            }\n            else {\n                realMessage = message;\n            }\n            chainId = this.getRealChainId(chainId);\n            try {\n                let data = {\n                    \"chainId\": chainId,\n                    \"method\": \"solana_signMessage\",\n                    \"params\": {\n                        \"message\": realMessage,\n                        \"pubkey\": (_c = this.getAccount(chainId)) === null || _c === void 0 ? void 0 : _c.address\n                    }\n                };\n                let signedMessage = yield this.provider.request(data, chainId);\n                (0, core_1.logDebug)(\"signMessage111\", signedMessage);\n                if ('result' in signedMessage) {\n                    let successData = signedMessage.result;\n                    return new Promise((resolve, reject) => {\n                        var _a;\n                        resolve({\n                            \"signature\": bs58_1.default.decode(successData),\n                            \"publicKey\": (_a = this.getAccount(chainId)) === null || _a === void 0 ? void 0 : _a.address\n                        });\n                    });\n                }\n                else {\n                    (0, core_1.logDebug)(\"signMessage111\", signedMessage);\n                    return new Promise((resolve, reject) => {\n                        resolve(signedMessage.error);\n                    });\n                }\n            }\n            catch (error) {\n                console.error('方法数据回调失败 --Error--', error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d;\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['solana']) === null || _b === void 0 ? void 0 : _b.accounts[0];\n        if (chainId != null) {\n            account = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces['solana']) === null || _d === void 0 ? void 0 : _d.accounts.filter(function (account) {\n                return account.startsWith(chainId);\n            })[0];\n        }\n        (0, core_1.logDebug)(\"getAccount\", account);\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const address = account.split(':')[2];\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address,\n            publicKey: new web3_js_1.PublicKey(address)\n        };\n    }\n    signTransaction(transaction, chainId) {\n        var _a, _b;\n        (0, core_1.logDebug)(\"OKXSolanaProvider\", typeof transaction);\n        chainId = this.getRealChainId(chainId);\n        try {\n            let serializedMessage = transaction.serialize({\n                requireAllSignatures: false,\n                verifySignatures: false,\n            });\n            let data = { \"data\": bs58_1.default.encode(serializedMessage), \"from\": (_a = this.getAccount(chainId)) === null || _a === void 0 ? void 0 : _a.address };\n            return this.getSignedTransaction(\"solana_signTransaction\", data, chainId);\n        }\n        catch (e) {\n            let serializedMessage = transaction.serialize();\n            let data = { \"data\": bs58_1.default.encode(serializedMessage), \"from\": (_b = this.getAccount(chainId)) === null || _b === void 0 ? void 0 : _b.address };\n            return this.getSignedTransaction(\"solana_signTransaction\", data, chainId);\n        }\n    }\n    signAllTransactions(transactions, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getRealChainId(chainId);\n            try {\n                var array = transactions.map((tx) => {\n                    var _a;\n                    var serializedMessage;\n                    if (tx instanceof web3_js_1.VersionedTransaction) {\n                        serializedMessage = tx.serialize();\n                    }\n                    else {\n                        serializedMessage = tx.serialize({\n                            requireAllSignatures: false,\n                            verifySignatures: false,\n                        });\n                    }\n                    return { \"data\": bs58_1.default.encode(serializedMessage), \"from\": (_a = this.getAccount(chainId)) === null || _a === void 0 ? void 0 : _a.address };\n                });\n                const response = yield this.provider.request({\n                    \"method\": \"solana_signAllTransactions\",\n                    \"params\": {\n                        \"transactions\": array\n                    }\n                }, chainId);\n                if (\"result\" in response) {\n                    let result = response.result;\n                    let newTransactions = JSON.parse(result).map((s) => {\n                        let c = bs58_1.default.decode(s);\n                        try {\n                            let transaction = web3_js_1.Transaction.from(c);\n                            (0, core_1.logDebug)(\"verifySignatures\", transaction.verifySignatures());\n                            return transaction;\n                        }\n                        catch (error) {\n                            return web3_js_1.VersionedTransaction.deserialize(c);\n                        }\n                    });\n                    return new Promise((resolve, reject) => {\n                        resolve(newTransactions);\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        resolve(response);\n                    });\n                }\n            }\n            catch (error) {\n                (0, core_1.logDebug)(\"getSignedTransaction\", error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    signAndSendTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b;\n            chainId = this.getRealChainId(chainId);\n            try {\n                let data = {};\n                try {\n                    let serializedMessage = transaction.serialize({\n                        requireAllSignatures: false,\n                        verifySignatures: false,\n                    });\n                    data = { \"data\": bs58_1.default.encode(serializedMessage), \"from\": (_a = this.getAccount(chainId)) === null || _a === void 0 ? void 0 : _a.address };\n                }\n                catch (e) {\n                    let serializedMessage = transaction.serialize();\n                    data = { \"data\": bs58_1.default.encode(serializedMessage), \"from\": (_b = this.getAccount(chainId)) === null || _b === void 0 ? void 0 : _b.address };\n                }\n                let signature = yield this.provider.request({\n                    \"method\": \"solana_signAndSendTransaction\",\n                    \"params\": data\n                }, chainId);\n                if ('result' in signature) {\n                    let successData = signature.result;\n                    return new Promise((resolve, reject) => {\n                        resolve(successData);\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        resolve(signature);\n                    });\n                }\n            }\n            catch (error) {\n                (0, core_1.logDebug)(\"getSignedTransaction\", error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    getSignedTransaction(method, transactionStr, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let signature = yield this.provider.request({\n                    \"method\": method,\n                    \"params\": transactionStr\n                }, chainId);\n                if ('result' in signature) {\n                    let successData = signature.result;\n                    let c = bs58_1.default.decode(successData);\n                    let resultTx;\n                    try {\n                        resultTx = web3_js_1.Transaction.from(c);\n                    }\n                    catch (error) {\n                        resultTx = web3_js_1.VersionedTransaction.deserialize(c);\n                    }\n                    if (!(resultTx instanceof web3_js_1.VersionedTransaction)) {\n                        (0, core_1.logDebug)(\"verifySignatures\", resultTx.verifySignatures());\n                    }\n                    return new Promise((resolve, reject) => {\n                        resolve(resultTx);\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        reject(signature);\n                    });\n                }\n            }\n            catch (error) {\n                (0, core_1.logDebug)(\"getSignedTransaction\", error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n}\nexports.OKXSolanaProvider = OKXSolanaProvider;\nexports.default = OKXSolanaProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXSolanaProvider = void 0;\nvar OKXSolanaProvider_1 = require(\"./OKXSolanaProvider\");\nObject.defineProperty(exports, \"OKXSolanaProvider\", { enumerable: true, get: function () { return OKXSolanaProvider_1.OKXSolanaProvider; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXBtcProvider = void 0;\nconst _1 = require(\"./\");\nclass OKXBtcProvider {\n    constructor(generator) {\n        this.caip = [\n            \"btc:mainnet\",\n            \"fractal:mainnet\"\n        ];\n        this.provider = generator.getUniversalProvider();\n    }\n    getAddressForChainId(chainId) {\n        var _a, _b;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let accounts = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['btc']) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        });\n        if (accounts == undefined || accounts.length < 0) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `no connected account`);\n        }\n        let account = accounts[0];\n        const address = account.split(':')[2];\n        return address;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let extra = (_c = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[ns]) === null || _b === void 0 ? void 0 : _b.extra) === null || _c === void 0 ? void 0 : _c[chainId];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n        }\n        return {\n            address: this.getAddressForChainId(chainId),\n            publicKey: publicKey\n        };\n    }\n    /**\n     *\n     * @param signStr\n     * @param chainId\n     * @param type\n     * @returns\n     */\n    signMessage(chainId, signStr, type) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (signStr === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signMessage parmas error`);\n            }\n            let params = {\n                signStr: signStr,\n                from: this.getAddressForChainId(chainId)\n            };\n            if (type) {\n                params.type = type;\n            }\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signMessage\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param toAddress\n     * @param satoshis\n     * @param options { feeRate: 0 }\n     * @returns\n     */\n    sendBitcoin(chainId, toAddress, satoshis, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            let params = {\n                from: this.getAddressForChainId(chainId),\n                to: toAddress,\n                value: (satoshis / 100000000).toString(),\n            };\n            if (options === null || options === void 0 ? void 0 : options.feeRate) {\n                params[\"satBytes\"] = options.feeRate.toString();\n            }\n            let result = yield this.send(chainId, params);\n            if (result !== undefined && ('txhash' in result)) {\n                // return txhash directly\n                return result.txhash;\n            }\n            // or return unexpected result\n            return result;\n        });\n    }\n    //  from - string：当前连接的钱包的 BTC 地址\n    //  to - string：接受 BTC 的地址\n    //  value - string：发送 BTC 的数量\n    //  satBytes - string： (可选) 自定义费率\n    //  memo - string： (可选) 指定 outputs OP_RETURN 内容 示例\n    //  memoPos - number： (可选) 指定 outputs OP_RETURN 输出位置，如果传了 memo 则必须传入 memoPos 指定位置，否则 memo 不生效\n    send(chainId, input) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (!this.checkParameters(input, 'to', 'value')) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send parmas  error`);\n            }\n            input[\"from\"] = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: 'btc_send',\n                    params: input\n                }, chainId);\n                if ('result' in ret) {\n                    return {\n                        txhash: ret.result\n                    };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param psbtHex string 要签名的 psbt 的十六进制字符串\n     * @param options object { autoFinalized: 0 }\n     */\n    signPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.signPsbts(chainId, [psbtHex], [options]).then(psbtResults => {\n                    let results = JSON.parse(psbtResults);\n                    resolve(results[0]);\n                }).catch(error => {\n                    reject(error);\n                });\n            });\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHexs Array\n     * @param options Array [{ autoFinalized: 0 }]\n     * @returns\n     */\n    signPsbts(chainId, psbtHexs, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHexs === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHexs: psbtHexs,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signPsbts\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHex string\n     * @param options object\n     * @returns\n     */\n    signAndPushPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHex === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHex: psbtHex,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signAndPushPsbt\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return JSON.parse(ret.result);\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param address string, receiver address\n     * @param inscriptionId string, 铭文 ID + 协议，没有传协议则默认是 Ordinals NFT ，目前仅支持 Ordinals 及 Atomicals 协议\n     * @param options object, { feeRate: number } custom rates\n     */\n    sendInscription(chainId, address, inscriptionId, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let extension = {\n                address: address,\n                inscriptionId: inscriptionId,\n                options: options\n            };\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (address === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method sendInscription params error`);\n            }\n            var feeRate = 0;\n            if (options && ('feeRate' in options)) {\n                feeRate = options.feeRate;\n            }\n            let coinId = '';\n            let from = this.getAddressForChainId(chainId);\n            var protocolId = 7; //ProtocolIdBRCNFT\n            if (inscriptionId !== 'undefined') {\n                let atomicSuffix = \"-Atomicals\";\n                let ordinalsSuffix = \"-Ordinals\";\n                if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(atomicSuffix.toLowerCase())) {\n                    protocolId = 8; //WXRCProtocolIdARCNFT\n                    inscriptionId = this.removeSuffix(inscriptionId, atomicSuffix);\n                }\n                else if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(ordinalsSuffix.toLowerCase())) {\n                    inscriptionId = this.removeSuffix(inscriptionId, ordinalsSuffix);\n                }\n            }\n            let params = {\n                scenario: 5,\n                feeRate: feeRate,\n                txType: \"20\",\n                to: address,\n                batchBean: [\n                    {\n                        coinAmount: \"1\",\n                        nftId: inscriptionId,\n                        protocolId: protocolId,\n                        coinId: coinId,\n                        inscriptionId: \"\",\n                        from: from\n                    }\n                ],\n                extension: extension\n            };\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_sendInscription\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    removeSuffix(str, suffix) {\n        if (str.endsWith(suffix)) {\n            return str.slice(0, str.length - suffix.length);\n        }\n        return str;\n    }\n    checkParameters(params, ...keys) {\n        var unexistKeys = [];\n        keys.forEach(key => {\n            if (!(`${key}` in params)) {\n                unexistKeys.push(key);\n            }\n        });\n        if (unexistKeys.length > 0) {\n            console.log('not find key: ', unexistKeys.join(\",\"));\n            return false;\n        }\n        return true;\n    }\n    /**\n     *\n     * @param chainId eg. btc:mainnet\n     * @returns eg. btc\n     */\n    checkChainId(chainId) {\n        if (this.caip.includes(chainId)) {\n            let [namespaceKey, _] = chainId.split(\":\");\n            return namespaceKey;\n        }\n        return undefined;\n    }\n}\nexports.OKXBtcProvider = OKXBtcProvider;\nexports.default = OKXBtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCosmosProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXCosmosProvider {\n    constructor(provider) {\n        this.provider = provider.getUniversalProvider();\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e;\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[core_1.NameSpaceKeyCosmos]) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        let extra = (_e = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces[core_1.NameSpaceKeyCosmos]) === null || _d === void 0 ? void 0 : _d.extra) === null || _e === void 0 ? void 0 : _e[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n            console.log(\"aptos_publicKey\", publicKey);\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            algo: \"secp256k1\",\n            address: address,\n            bech32Address: address,\n            pubKey: this.hexToUint8Array(publicKey),\n        };\n    }\n    signArbitrary(chainId, signerAddress, data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const base64Encoded = window.btoa(data);\n            const signDoc = {\n                chain_id: \"\",\n                account_number: \"0\",\n                sequence: \"0\",\n                fee: {\n                    gas: \"0\",\n                    amount: []\n                },\n                msgs: [{\n                        \"type\": \"sign/MsgSignData\",\n                        \"value\": {\n                            \"signer\": signerAddress,\n                            \"data\": base64Encoded\n                        }\n                    }],\n                memo: \"\"\n            };\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signArbitrary\",\n                \"params\": {\n                    \"signer\": signerAddress,\n                    \"chain_id\": chainId.split(\":\")[1],\n                    \"data\": signDoc\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    if (typeof ret.result == \"string\") {\n                        return JSON.parse(ret.result);\n                    }\n                    else {\n                        return ret.result;\n                    }\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signAmino(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (signDoc.msgs[0].type == \"sign/MsgSignData\") {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signArbitrary\",\n                    \"params\": {\n                        \"signer\": signerAddress,\n                        \"chain_id\": chainId.split(\":\")[1],\n                        \"data\": signDoc\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        return ret.result;\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    return error;\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                }\n            }\n            else {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signAmino\",\n                    \"params\": {\n                        \"signer\": signerAddress,\n                        \"chainId\": chainId.split(\":\")[1],\n                        \"sign_doc\": signDoc,\n                        \"signOptions\": signOptions\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        const resData = JSON.parse(ret.result);\n                        console.log(\"signdoc\", signDoc, resData.signDoc);\n                        signDoc.fee = resData.signDoc.fee;\n                        return { signed: signDoc, signature: resData.signature };\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                    return error;\n                }\n            }\n        });\n    }\n    signDirect(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const object = {\n                bodyBytes: this.bufferToHex(signDoc.bodyBytes),\n                authInfoBytes: this.bufferToHex(signDoc.authInfoBytes),\n                chainId: signDoc.chainId,\n                accountNumber: signDoc.accountNumber ? signDoc.accountNumber.toString() : null,\n                signOptions: signOptions ? signOptions : null\n            };\n            let data = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signDirect\",\n                \"params\": {\n                    \"signer\": signerAddress,\n                    \"chainId\": chainId.split(\":\")[1],\n                    \"sign_doc\": object,\n                }\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    const res = JSON.parse(ret.result);\n                    console.log(\"signdirect result\", res);\n                    signDoc.authInfoBytes = this.messageToBuffer(res.signDoc.authInfoBytes);\n                    return { signed: signDoc, signature: res.signature };\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    messageToBuffer(message) {\n        var buffer = Uint8Array.from([]);\n        try {\n            if (typeof message === \"string\") {\n                buffer = this.hexToUint8Array(message.replace(\"0x\", \"\"));\n            }\n            else {\n                buffer = Uint8Array.from(message);\n            }\n        }\n        catch (err) {\n            console.log(`messageToBuffer error: ${err}`);\n        }\n        return buffer;\n    }\n    bufferToHex(arr) {\n        let output = [...new Uint8Array(arr)]\n            .map(x => x.toString(16).padStart(2, '0'))\n            .join('');\n        return '0x' + output;\n    }\n    hexToUint8Array(hexString) {\n        if (hexString.length % 2 !== 0) {\n            throw \"Invalid hexString\";\n        }\n        var arrayBuffer = new Uint8Array(hexString.length / 2);\n        for (var i = 0; i < hexString.length; i += 2) {\n            var byteValue = parseInt(hexString.substr(i, 2), 16);\n            if (isNaN(byteValue)) {\n                throw \"Invalid hexString\";\n            }\n            arrayBuffer[i / 2] = byteValue;\n        }\n        return arrayBuffer;\n    }\n}\nexports.OKXCosmosProvider = OKXCosmosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXUniversalProvider = void 0;\nconst utils_1 = require(\"./provider/utils\");\nconst eip155_1 = require(\"./provider/providers/eip155\");\nconst sui_1 = require(\"./provider/providers/sui\");\nconst constants_1 = require(\"./provider/constants\");\nconst eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\nconst client_1 = require(\"./packages/sign-client/client\");\nconst core_1 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"./packages/utils/namespaces\");\nconst solana_1 = __importDefault(require(\"./provider/providers/solana\"));\nconst btc_1 = __importDefault(require(\"./provider/providers/btc\"));\nconst aptos_1 = __importDefault(require(\"./provider/providers/aptos\"));\nconst ton_1 = __importDefault(require(\"./provider/providers/ton\"));\nconst cosmos_1 = __importDefault(require(\"./provider/providers/cosmos\"));\nclass OKXUniversalProvider {\n    static init(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const provider = new OKXUniversalProvider(opts);\n            yield provider.initialize();\n            return provider;\n        });\n    }\n    getUniversalProvider() {\n        return this;\n    }\n    constructor(opts) {\n        this.rpcProviders = {};\n        this.events = new eventemitter3_1.default();\n        this.providerOpts = opts;\n    }\n    request(args, chain) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.connected()) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return yield this.getProvider(namespace).request(requestParam);\n        });\n    }\n    buildRequestParamFromRequest(args, chain) {\n        (0, core_1.logDebug)(\"UniversalProvider request args >>>: \", chain, JSON.stringify(args));\n        const [namespace, chainId] = this.validateChain(chain);\n        if (!this.session) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Please call connect() before request()\");\n        }\n        let keyArr = Object.keys(this.session.namespaces);\n        if (!chain && keyArr && keyArr.length > 1) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Multiple chains have been linked, the request method requires chain`);\n        }\n        (0, core_1.logDebug)(\"UniversalProvider request >>args>>>: \", args);\n        const requestParam = Object.assign(Object.assign({}, args), { chainId: `${namespace}:${chainId}` });\n        return { namespace, requestParam };\n    }\n    enable() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.client) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (!this.session) {\n                if (this.connectOpts) {\n                    yield this.connect(this.connectOpts);\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n                }\n            }\n            const accounts = yield this.requestAccounts();\n            return accounts;\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.session) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n                let called = false;\n                const onRequestSent = () => __awaiter(this, void 0, void 0, function* () {\n                    if (!called) {\n                        called = true;\n                        yield this.disconnectAndEmit();\n                        yield this.cleanup();\n                        resolve();\n                        (0, core_1.logDebug)(\"UniversalProvider disconnect Disconnected\");\n                    }\n                });\n                try {\n                    yield this.client.disconnect();\n                    yield onRequestSent();\n                }\n                catch (e) {\n                    yield onRequestSent();\n                }\n            }));\n        });\n    }\n    disconnectAndEmit() {\n        var _a, _b;\n        this.client.engine.connectionManager.disconnect();\n        this.events.emit(\"disconnect\", { topic: (_a = this.session) === null || _a === void 0 ? void 0 : _a.topic });\n        this.events.emit(\"session_delete\", { topic: (_b = this.session) === null || _b === void 0 ? void 0 : _b.topic });\n    }\n    aptosChainNameToGeneralId(chainId) {\n        if (chainId == \"aptos:mainnet\") {\n            return \"aptos:637\";\n        }\n        else if (chainId == \"movement:testnet\") {\n            return \"aptos:70000060\";\n        }\n        else {\n            return chainId;\n        }\n    }\n    replaceAptos(opts) {\n        var _a, _b;\n        let aptosNameSpace = (_a = opts.namespaces) === null || _a === void 0 ? void 0 : _a[\"aptos\"];\n        if (aptosNameSpace != undefined) {\n            let realNS = this.replaceAptosInner(aptosNameSpace);\n            if (opts.namespaces != undefined && \"aptos\" in opts.namespaces && realNS != undefined) {\n                opts.namespaces.aptos = realNS;\n            }\n        }\n        let optionAptosNameSpace = (_b = opts.optionalNamespaces) === null || _b === void 0 ? void 0 : _b[\"aptos\"];\n        if (optionAptosNameSpace != undefined) {\n            let realOptionNS = this.replaceAptosInner(optionAptosNameSpace);\n            if (opts.optionalNamespaces != undefined && \"aptos\" in opts.optionalNamespaces && realOptionNS != undefined) {\n                opts.optionalNamespaces.aptos = realOptionNS;\n            }\n        }\n        return opts;\n    }\n    replaceAptosInner(aptosNameSpace) {\n        var _a;\n        if (aptosNameSpace != undefined) {\n            aptosNameSpace.chains = (_a = aptosNameSpace.chains) === null || _a === void 0 ? void 0 : _a.map(chainId => {\n                return this.aptosChainNameToGeneralId(chainId);\n            });\n            if (aptosNameSpace.defaultChain != undefined) {\n                aptosNameSpace.defaultChain = this.aptosChainNameToGeneralId(aptosNameSpace.defaultChain);\n            }\n        }\n        return aptosNameSpace;\n    }\n    connected() {\n        let disconnectInner = () => {\n            try {\n                this.cleanup();\n                this.client.engine.connectionManager.disconnect();\n            }\n            catch (e) {\n                (0, core_1.logDebug)(\"Error during disconnect:\", e);\n            }\n        };\n        try {\n            if (!this.session)\n                return false;\n            if (!this.client.engine.connectionManager.getCurrentConnectionReady()) {\n                disconnectInner();\n                return false;\n            }\n            return true;\n        }\n        catch (e) {\n            disconnectInner();\n            return false;\n        }\n    }\n    connect(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.client) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            opts = this.replaceAptos(opts);\n            if (this.connected()) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.ALREADY_CONNECTED_ERROR);\n            }\n            (0, core_1.logDebug)(`OKXUniversalProvider connect >>>>`, JSON.stringify(opts));\n            if (opts.sessionConfig === undefined) {\n                opts.sessionConfig = {};\n            }\n            if (opts.sessionConfig.openUniversalUrl === undefined) {\n                opts.sessionConfig.openUniversalUrl = (0, core_1.isMobileUserAgent)();\n            }\n            this.setNamespaces(opts);\n            try {\n                (0, core_1.logDebug)(`UniversalProvider connect opts.stringify ====> ${JSON.stringify(opts)}`);\n                let session = yield this.client.connect(opts);\n                (0, core_1.logDebug)(`UniversalProvider connect success ====> ${JSON.stringify(session)}`);\n                if (session) {\n                    this.session = session;\n                    this.onConnect();\n                    return session;\n                }\n                return undefined;\n            }\n            catch (error) {\n                (0, core_1.logDebug)(`UniversalProvider connect error ====> `, JSON.stringify(error));\n                throw error;\n            }\n        });\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    setDefaultChain(chain, rpcUrl) {\n        chain = this.aptosChainNameToGeneralId(chain);\n        try {\n            // ignore without active session\n            if (!this.connected())\n                return;\n            const [namespace, chainId] = this.validateChain(chain);\n            const provider = this.getProvider(namespace);\n            provider.setDefaultChain(chainId, rpcUrl);\n        }\n        catch (error) {\n            // ignore the error if the fx is used prematurely before namespaces are set\n            if (!/Please call connect/.test(error.message))\n                throw error;\n        }\n    }\n    checkStorage() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let sessionInfoStr = yield this.getFromStore(\"connectSession\");\n            (0, core_1.logDebug)(sessionInfoStr);\n            if (sessionInfoStr) {\n                let sessionInfo = sessionInfoStr;\n                this.session = sessionInfo;\n                this.client.session = this.session;\n                this.sessionConfig = sessionInfo.sessionConfig;\n                this.client.sessionConfig = this.sessionConfig;\n                (0, core_1.logDebug)('[evm u-provider] do reconnection', this.session);\n                yield this.client.restoreconnect(sessionInfo);\n                this.createProviders();\n                setTimeout(() => {\n                    this.events.emit(\"reconnect\", { session: this.session });\n                }, 100);\n            }\n        });\n    }\n    initialize() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const data = Object.assign({ url: window.location.hostname, origin: window.location.origin }, this.providerOpts.dappMetaData);\n            (0, utils_1.setGlobal)(\"events\", this.events);\n            this.client = new client_1.SignClient(data);\n            (0, utils_1.setGlobal)(\"client\", this.client);\n            yield this.checkStorage();\n        });\n    }\n    createProviders() {\n        if (!this.client) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n        }\n        if (!this.connected()) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Session not initialized. Please call connect() before enable()\");\n        }\n        const providersToCreate = [\n            ...new Set(Object.keys(this.session.namespaces).map((namespace) => (0, namespaces_1.parseNamespaceKey)(namespace))),\n        ];\n        providersToCreate.forEach((namespace) => {\n            if (!this.session)\n                return;\n            const namespacesValue = this.session.namespaces;\n            const currentNameSpace = namespacesValue[namespace];\n            (0, core_1.logDebug)(\"init eip155 >> \", currentNameSpace);\n            switch (namespace) {\n                case \"eip155\":\n                    const opts = {\n                        namespace: currentNameSpace\n                    };\n                    this.rpcProviders[namespace] = new eip155_1.Eip155Provider(opts);\n                    break;\n                case \"solana\":\n                    const opts1 = {\n                        namespace: currentNameSpace\n                    };\n                    let solanaProvider = new solana_1.default(opts1, \"solana\");\n                    this.rpcProviders[namespace] = solanaProvider;\n                    let sonicProvider = new solana_1.default(opts1, \"sonic\");\n                    this.rpcProviders['sonic'] = sonicProvider;\n                    let svmProvider = new solana_1.default(opts1, \"svm\");\n                    this.rpcProviders['svm'] = svmProvider;\n                    // this.rpcProviders[namespace] = new SolanaProvider(opts1, () => { return this.session; });\n                    break;\n                case \"ton\":\n                    const optsTon = {\n                        namespace: currentNameSpace\n                    };\n                    let tonProvider = new ton_1.default(optsTon);\n                    this.rpcProviders[namespace] = tonProvider;\n                    break;\n                case \"sui\":\n                    const optsSui = {\n                        namespace: currentNameSpace\n                    };\n                    let suiProvider = new sui_1.SuiProvider(optsSui);\n                    suiProvider.name = \"sui\";\n                    this.rpcProviders[namespace] = suiProvider;\n                    break;\n                case \"btc\":\n                    const optsBtc = {\n                        namespace: currentNameSpace\n                    };\n                    let btcProvider = new btc_1.default(optsBtc, \"btc\");\n                    this.rpcProviders[\"btc\"] = btcProvider;\n                    let fbProvider = new btc_1.default(optsBtc, \"fractal\");\n                    this.rpcProviders[\"fractal\"] = fbProvider;\n                    break;\n                case \"aptos\":\n                    let aptosProvider = new aptos_1.default({\n                        namespace: currentNameSpace\n                    }, \"aptos\");\n                    this.rpcProviders[namespace] = aptosProvider;\n                    break;\n                case \"cosmos\":\n                    let cosmosProvider = new cosmos_1.default({\n                        namespace: currentNameSpace\n                    });\n                    this.rpcProviders[namespace] = cosmosProvider;\n                    break;\n            }\n        });\n    }\n    registerEventListeners() {\n        if (typeof this.client === \"undefined\") {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client is not initialized\");\n        }\n        this.client.engine.addDisconnectListener(() => {\n            this.disconnectAndEmit();\n            this.cleanup();\n        });\n        this.on(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, (caip2ChainId) => {\n            this.onChainChanged(caip2ChainId);\n        });\n        this.on(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, (nameSpaces) => {\n            if (nameSpaces) {\n                const nameSpacekey = Object.keys(nameSpaces)[0];\n                if (this.session) {\n                    this.session.namespaces[nameSpacekey] = nameSpaces[nameSpacekey];\n                    if (this.session) {\n                        this.persist(\"connectSession\", this.session);\n                        this.events.emit(\"session_update\", this.session);\n                    }\n                    (0, core_1.logDebug)(\"PROVIDER_EVENTS.UPDATE_NAMESPACES this.session... ->>>\", JSON.stringify(this.session));\n                }\n            }\n        });\n    }\n    getProvider(namespace) {\n        (0, core_1.logDebug)('current get providers', this.rpcProviders);\n        (0, core_1.logDebug)('query namespace: ', namespace);\n        return this.rpcProviders[namespace];\n    }\n    setNamespaces(params) {\n        this.connectOpts = params;\n        const { namespaces, sessionConfig } = params;\n        const data = {\n            origin: window.location.origin,\n            url: window.location.hostname,\n            name: this.providerOpts.dappMetaData.name,\n            icon: this.providerOpts.dappMetaData.icon,\n        };\n        this.sessionConfig = {\n            dappInfo: data,\n            openUniversalUrl: sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.openUniversalUrl,\n            redirect: sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect,\n        };\n        (0, core_1.logDebug)(\"setNamespaces sessionConfig>>>\", this.sessionConfig);\n        this.client.sessionConfig = this.sessionConfig;\n        this.persist(\"sessionConfig\", sessionConfig);\n    }\n    validateChain(chain) {\n        var _a;\n        let [namespace, chainId] = (chain === null || chain === void 0 ? void 0 : chain.split(\":\")) || [\"\", \"\"];\n        if (!this.session || !this.session.namespaces || !Object.keys(this.session.namespaces).length) {\n            (0, core_1.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        if (namespace) {\n            if (!this.isChainNamespaceInSession(namespace)) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace '${namespace}' is not configured. Please call connect() first with namespace config.`);\n            }\n            if (chainId && chain) {\n                (0, core_1.logDebug)('this.session.namespaces -->> ', namespace, JSON.stringify(this.session.namespaces));\n                const chainsArr = (_a = this.session.namespaces[namespace]) === null || _a === void 0 ? void 0 : _a.chains;\n                (0, core_1.logDebug)('get chainsArr & chain', JSON.stringify(chainsArr), chain);\n                if (chainsArr && !chainsArr.includes(chain)) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace not include the chain '${chain}'`);\n                }\n            }\n        }\n        if (namespace && chainId) {\n            (0, core_1.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        let defaultNamespace = (0, namespaces_1.parseNamespaceKey)(Object.keys(this.session.namespaces)[0]);\n        const defaultChain = this.rpcProviders[defaultNamespace].getDefaultChain();\n        (0, core_1.logDebug)('get default chain:', defaultChain);\n        return [defaultNamespace, defaultChain];\n    }\n    isChainNamespaceInSession(namespaceStr) {\n        var _a, _b;\n        if (Object.keys(((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces) || {})\n            .map((key) => (0, namespaces_1.parseNamespaceKey)(key))\n            .includes(namespaceStr)) {\n            return true;\n        }\n        let isChainNamespaceInSession = false;\n        Object.values(((_b = this.session) === null || _b === void 0 ? void 0 : _b.namespaces) || {})\n            .forEach(namespace => {\n            namespace.chains.forEach(chain => {\n                if (chain.split(\":\")[0] == namespaceStr) {\n                    isChainNamespaceInSession = true;\n                }\n            });\n        });\n        return isChainNamespaceInSession;\n    }\n    requestAccountsWithNamespace(namespace) {\n        return this.getProvider(namespace).requestAccounts();\n    }\n    requestDefaultChainWithNamespace(namespace) {\n        return this.getProvider(namespace).getDefaultChain();\n    }\n    requestAccounts() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const [namespace] = this.validateChain();\n            return yield this.getProvider(namespace).requestAccounts();\n        });\n    }\n    onChainChanged(caip2Chain) {\n        var _a;\n        if (!((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces))\n            return;\n        const [namespace, chainId] = this.validateChain(caip2Chain);\n        if (!chainId)\n            return;\n        if (this.session.namespaces[namespace]) {\n            this.session.namespaces[namespace].defaultChain = chainId;\n            this.persist(\"connectSession\", this.session);\n        }\n        this.events.emit(\"chainChanged\", chainId);\n    }\n    onConnect() {\n        this.createProviders();\n        if (this.session) {\n            this.persist(\"connectSession\", this.session);\n        }\n        this.events.emit(\"connect\", { session: this.session });\n        this.registerEventListeners();\n    }\n    cleanup() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.session = undefined;\n            this.sessionProperties = undefined;\n            this.persist(\"optionalNamespaces\", undefined);\n            this.persist(\"sessionProperties\", undefined);\n            this.persist(\"connectSession\", undefined);\n        });\n    }\n    persist(key, data) {\n        (0, core_1.logDebug)('[evm u-provider] persisit data', key, data);\n        return this.client.engine.connectionManager.saveSessionContent(key, data);\n    }\n    getFromStore(key) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.client.engine.connectionManager.getSessionContent(key);\n        });\n    }\n    showRequestModal(args, chain) {\n        try {\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return this.getProvider(namespace).showRequestModal(requestParam);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n}\nexports.OKXUniversalProvider = OKXUniversalProvider;\nexports.default = OKXUniversalProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXConnectError = exports.OKX_CONNECT_ERROR_CODES = exports.NameSpaceKeyBtc = exports.NameSpaceKeySui = exports.OKXCosmosProvider = exports.OKXBtcProvider = exports.OKXUniversalProvider = void 0;\n__exportStar(require(\"./provider/types\"), exports);\nvar OKXUniversalProvider_1 = require(\"./OKXUniversalProvider\");\nObject.defineProperty(exports, \"OKXUniversalProvider\", { enumerable: true, get: function () { return OKXUniversalProvider_1.OKXUniversalProvider; } });\nvar OKXBtcProvider_1 = require(\"./OKXBtcProvider\");\nObject.defineProperty(exports, \"OKXBtcProvider\", { enumerable: true, get: function () { return OKXBtcProvider_1.OKXBtcProvider; } });\nvar OKXCosmosProvider_1 = require(\"./OKXCosmosProvider\");\nObject.defineProperty(exports, \"OKXCosmosProvider\", { enumerable: true, get: function () { return OKXCosmosProvider_1.OKXCosmosProvider; } });\nvar core_1 = require(\"@okxconnect/core\");\nObject.defineProperty(exports, \"NameSpaceKeySui\", { enumerable: true, get: function () { return core_1.NameSpaceKeySui; } });\nObject.defineProperty(exports, \"NameSpaceKeyBtc\", { enumerable: true, get: function () { return core_1.NameSpaceKeyBtc; } });\nObject.defineProperty(exports, \"OKX_CONNECT_ERROR_CODES\", { enumerable: true, get: function () { return core_1.OKX_CONNECT_ERROR_CODES; } });\nObject.defineProperty(exports, \"OKXConnectError\", { enumerable: true, get: function () { return core_1.OKXConnectError; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SignClient = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"../utils/namespaces\");\nconst utils_1 = require(\"../../provider/utils\");\nclass SignClient extends core_1.ISignClient {\n    constructor(metaData) {\n        super(metaData);\n        this.engine = new core_1.Engine(new core_1.ConnectionManager());\n        // ---------- Engine ----------------------------------------------- //\n        this.connect = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                var connectRequest = [];\n                (0, core_1.logDebug)(`client connect params >>>`, JSON.stringify(params));\n                var requestAccountItem = {\n                    name: \"requestAccounts\",\n                    requiredNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.namespaces),\n                    optionalNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.optionalNamespaces)\n                };\n                (0, core_1.logDebug)(`client connect connectRequest >>>`, JSON.stringify(connectRequest));\n                connectRequest.push(requestAccountItem);\n                this.engine.universalConnect(connectRequest, Object.assign({ dappInfo: this.metadata }, params.sessionConfig), (info) => {\n                    if (info && info.connectRequest) {\n                        var encodeParams = (0, core_1.encodeConnectParams)(info.connectRequest);\n                        this.events.emit(\"display_uri\", (0, core_1.getUniversalLink)((0, core_1.getAppWalletDeepLink)(encodeParams)));\n                        (0, core_1.logDebug)(`universalConect EngineConnectInfo  ${JSON.stringify(info)}`);\n                        this.events.emit(\"okx_engine_connect_params\", info);\n                    }\n                }).then((session) => {\n                    (0, namespaces_1.fillParamsToSession)(session, params.namespaces, params.optionalNamespaces, this.sessionConfig);\n                    (0, core_1.logDebug)(`signClient: connect: session ${JSON.stringify(session)}`);\n                    resolve(session);\n                }).catch((e) => {\n                    (0, core_1.logDebug)(`signClient: connect: catch ${JSON.stringify(e)}`);\n                    this.events.emit(\"connect_error\", e);\n                    reject(e);\n                });\n            });\n        });\n        this.restoreconnect = (sessionConfig) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.restoreconnect(sessionConfig, (session) => {\n                    resolve(session);\n                });\n            });\n        });\n        this.reject = (params) => __awaiter(this, void 0, void 0, function* () {\n            //   try {\n            //     return await this.engine.reject(params);\n            //   } catch (error: any) {\n            //     this.logger.error(error.message);\n            //     throw error;\n            //   }\n        });\n        //\n        // public update: ISignClient[\"update\"] = async (params) => {\n        //   return\n        // //   try {\n        // //     return await this.engine.update(params);\n        // //   } catch (error: any) {\n        // //     this.logger.error(error.message);\n        // //     throw error;\n        // //   }\n        // };\n        this.request = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                (0, core_1.logDebug)(\"clint request --params>>>> >\", (_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl, JSON.stringify(params));\n                try {\n                    // this.sessionConfig\n                    if (((_b = this.sessionConfig) === null || _b === void 0 ? void 0 : _b.openUniversalUrl) && (0, core_1.isIos)()) {\n                        this.openOKXWallet();\n                    }\n                    yield this.engine.send(params, {\n                        resolve: (response) => {\n                            delete response.requestId;\n                            (0, core_1.logDebug)(\"clint request --response >\", JSON.stringify(response));\n                            if (('error' in response) && response.error) {\n                                let error = response.error;\n                                reject(new core_1.OKXConnectError(response.error.code, response.method + \":\" + error.message));\n                            }\n                            else {\n                                resolve(response);\n                            }\n                        },\n                        onAck: () => {\n                            var _a;\n                            if (!(0, core_1.isIos)() && ((_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl)) {\n                                this.openOKXWallet();\n                            }\n                        }\n                    });\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }));\n        });\n        // public emit: ISignClient[\"emit\"] = async (params) => {\n        //     try {\n        //         // return await this.engine.emit(params);\n        //     } catch (error: any) {\n        //         throw error;\n        //     }\n        // };\n        this.disconnect = () => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.send({\n                    method: \"disconnect\"\n                }, {\n                    onAck: () => {\n                        resolve();\n                    }\n                }).catch((error) => {\n                    console.log(`disconnect : ${JSON.stringify(error)}`);\n                    reject(error);\n                });\n            });\n        });\n        this.events = (0, utils_1.getGlobal)(\"events\");\n        this.metadata = metaData;\n    }\n    openOKXWallet() {\n        // if (this.openUniversalUrl){\n        (0, core_1.logDebug)('bridge-provider ==>> connect_5');\n        (0, core_1.openOKXDeeplinkWithFallback)(core_1.standardDeeplink);\n        // }\n    }\n}\nexports.SignClient = SignClient;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAccountsChains = getAccountsChains;\nexports.nameSpaceToConnectWalletNameSpace = nameSpaceToConnectWalletNameSpace;\nexports.fillParamsToSession = fillParamsToSession;\nexports.isCaipNamespace = isCaipNamespace;\nexports.parseNamespaceKey = parseNamespaceKey;\nconst core_1 = require(\"@okxconnect/core\");\nfunction getAccountsChains(accounts) {\n    const chains = [];\n    accounts.forEach((account) => {\n        const [chain, chainId] = account.split(\":\");\n        chains.push(`${chain}:${chainId}`);\n    });\n    return chains;\n}\nfunction nameSpaceToConnectWalletNameSpace(namespaces) {\n    var result = [];\n    if (!namespaces) {\n        return result;\n    }\n    Object.keys(namespaces).forEach((key) => {\n        if (key === core_1.NameSpaceKeyEip155 || key === core_1.NameSpaceKeySOL || key === core_1.NameSpaceKeySui || key === core_1.NameSpaceKeyAptos\n            || key == core_1.NameSpaceKeyBtc || key === core_1.NameSpaceKeyTON || key === core_1.NameSpaceKeyCosmos) {\n            if (namespaces[key].chains) {\n                result.push({\n                    namespace: key,\n                    chains: namespaces[key].chains,\n                    params: namespaces[key].params\n                });\n            }\n        }\n    });\n    return result;\n}\nfunction fillParamsToSession(session, namespaces, optionalNamespaces, sessionConfig) {\n    // Helper function to merge rpcMaps\n    const mergeRpcMap = (targetRpcMap, sourceRpcMap) => {\n        Object.assign(targetRpcMap, sourceRpcMap);\n    };\n    // Merge function for namespaces\n    const mergeNamespaces = (target, source) => {\n        for (const key in source) {\n            if (source.hasOwnProperty(key) && source[key].rpcMap) {\n                if (source[key].rpcMap) {\n                    if (!target[key].rpcMap) {\n                        target[key].rpcMap = {};\n                    }\n                    // 合并 rpcMap\n                    mergeRpcMap(target[key].rpcMap, source[key].rpcMap);\n                }\n                if (source[key].defaultChain && target[key].defaultChain === undefined) {\n                    //defaultChain need in session nameSpace\n                    if (target[key].chains.some(chain => chain.split(\":\")[1] === source[key].defaultChain)) {\n                        target[key].defaultChain = source[key].defaultChain;\n                    }\n                }\n            }\n        }\n    };\n    // 合并 namespaces\n    if (namespaces) {\n        mergeNamespaces(session.namespaces, namespaces);\n    }\n    // 合并 optionalNamespaces\n    if (optionalNamespaces) {\n        mergeNamespaces(session.namespaces, optionalNamespaces);\n    }\n    session.sessionConfig = sessionConfig;\n}\n/**\n * util designed for Wallets that builds namespaces structure by provided supported chains, methods, events & accounts.\n * It takes required & optional namespaces provided in the session proposal\n * along with the supported chains/methods/events/accounts by the wallet and returns a structured namespaces object\n * @param {BuildApprovedNamespacesParams} params\n * @returns {SessionTypes.Namespaces}\n */\n// export function buildApprovedNamespaces(\n//   params: BuildApprovedNamespacesParams,\n// ): SessionTypes.Namespaces {\n//   const {\n//     proposal: { requiredNamespaces, optionalNamespaces = {} },\n//     supportedNamespaces,\n//   } = params;\n//   const normalizedRequired = normalizeNamespaces(requiredNamespaces);\n//   const normalizedOptional = normalizeNamespaces(optionalNamespaces);\n//\n//   // build approved namespaces\n//   const namespaces = {};\n//   Object.keys(supportedNamespaces).forEach((namespace) => {\n//     const supportedChains = supportedNamespaces[namespace].chains;\n//     const supportedMethods = supportedNamespaces[namespace].methods;\n//     const supportedEvents = supportedNamespaces[namespace].events;\n//     const supportedAccounts = supportedNamespaces[namespace].accounts;\n//\n//     supportedChains.forEach((chain) => {\n//       if (!supportedAccounts.some((account) => account.includes(chain))) {\n//         throw new Error(`No accounts provided for chain ${chain} in namespace ${namespace}`);\n//       }\n//     });\n//\n//     namespaces[namespace] = {\n//       chains: supportedChains,\n//       methods: supportedMethods,\n//       events: supportedEvents,\n//       accounts: supportedAccounts,\n//     };\n//   });\n//\n//   // verify all required namespaces are supported\n//   const err = isConformingNamespaces(requiredNamespaces, namespaces, \"approve()\");\n//   if (err) throw new Error(err.message);\n//\n//   const approvedNamespaces = {};\n//\n//   // if both required & optional namespaces are empty, return all supported namespaces by the wallet\n//   if (!Object.keys(requiredNamespaces).length && !Object.keys(optionalNamespaces).length)\n//     return namespaces;\n//\n//   // assign accounts for the required namespaces\n//   Object.keys(normalizedRequired).forEach((requiredNamespace) => {\n//     const chains = supportedNamespaces[requiredNamespace].chains.filter((chain) =>\n//       normalizedRequired[requiredNamespace]?.chains?.includes(chain),\n//     );\n//     const methods = supportedNamespaces[requiredNamespace].methods.filter((method) =>\n//       normalizedRequired[requiredNamespace]?.methods?.includes(method),\n//     );\n//     const events = supportedNamespaces[requiredNamespace].events.filter((event) =>\n//       normalizedRequired[requiredNamespace]?.events?.includes(event),\n//     );\n//\n//     const accounts = chains\n//       .map((chain: string) =>\n//         supportedNamespaces[requiredNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[requiredNamespace] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   });\n//\n//   // add optional namespaces\n//   Object.keys(normalizedOptional).forEach((optionalNamespace) => {\n//     if (!supportedNamespaces[optionalNamespace]) return;\n//\n//     const chainsToAdd = normalizedOptional[optionalNamespace]?.chains?.filter((chain) =>\n//       supportedNamespaces[optionalNamespace].chains.includes(chain),\n//     );\n//     const methodsToAdd = supportedNamespaces[optionalNamespace].methods.filter((method) =>\n//       normalizedOptional[optionalNamespace]?.methods?.includes(method),\n//     );\n//     const eventsToAdd = supportedNamespaces[optionalNamespace].events.filter((event) =>\n//       normalizedOptional[optionalNamespace]?.events?.includes(event),\n//     );\n//\n//     const accountsToAdd = chainsToAdd\n//       ?.map((chain: string) =>\n//         supportedNamespaces[optionalNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[optionalNamespace] = {\n//       chains: mergeArrays(approvedNamespaces[optionalNamespace]?.chains, chainsToAdd),\n//       methods: mergeArrays(approvedNamespaces[optionalNamespace]?.methods, methodsToAdd),\n//       events: mergeArrays(approvedNamespaces[optionalNamespace]?.events, eventsToAdd),\n//       accounts: mergeArrays(approvedNamespaces[optionalNamespace]?.accounts, accountsToAdd),\n//     };\n//   });\n//\n//   return approvedNamespaces;\n// }\nfunction isCaipNamespace(namespace) {\n    return namespace.includes(\":\");\n}\nfunction parseNamespaceKey(namespace) {\n    return isCaipNamespace(namespace) ? namespace.split(\":\")[0] : namespace;\n}\n/**\n * Converts\n * ```\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * ```\n * into\n * ```\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *```\n */\n// export function normalizeNamespaces(\n//   namespaces: ProposalTypes.RequiredNamespaces,\n// ): ProposalTypes.RequiredNamespaces {\n//   const normalizedNamespaces = {} as ProposalTypes.RequiredNamespaces;\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       methods: mergeArrays(methods, normalizedNamespaces[normalizedKey]?.methods),\n//       events: mergeArrays(events, normalizedNamespaces[normalizedKey]?.events),\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n// export function getNamespacesFromAccounts(accounts: string[]) {\n//   const namespaces = {};\n//   accounts?.forEach((account) => {\n//     const [namespace, chainId] = account.split(\":\");\n//     if (!namespaces[namespace]) {\n//       namespaces[namespace] = {\n//         accounts: [],\n//         chains: [],\n//         events: [],\n//       };\n//     }\n//     namespaces[namespace].accounts.push(account);\n//     namespaces[namespace].chains.push(`${namespace}:${chainId}`);\n//   });\n//\n//   return namespaces;\n// }\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PROVIDER_EVENTS = void 0;\nexports.PROVIDER_EVENTS = {\n    DEFAULT_CHAIN_CHANGED: \"default_chain_changed\",\n    UPDATE_NAMESPACES: \"update_name_spaces\",\n};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./values\"), exports);\n__exportStar(require(\"./events\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GENERIC_SUBPROVIDER_NAME = exports.RPC_URL = exports.STORAGE = exports.CONTEXT = exports.WC_VERSION = exports.PROTOCOL = exports.RELAY_URL = exports.LOGGER = void 0;\nexports.LOGGER = \"error\";\nexports.RELAY_URL = \"wss://relay.walletconnect.com\";\nexports.PROTOCOL = \"wc\";\nexports.WC_VERSION = 2;\nexports.CONTEXT = \"universal_provider\";\nexports.STORAGE = `${exports.PROTOCOL}@${exports.WC_VERSION}:${exports.CONTEXT}:`;\nexports.RPC_URL = \"https://rpc.walletconnect.com/v1/\";\nexports.GENERIC_SUBPROVIDER_NAME = \"generic\";\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass AptosProvider {\n    constructor(opts, name) {\n        this.name = \"aptos\";\n        this.namespace = opts.namespace;\n        this.events = (0, utils_1.getGlobal)(\"events\");\n        this.client = (0, utils_1.getGlobal)(\"client\");\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"solana request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"solana provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = AptosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass BtcProvider {\n    constructor(opts, name) {\n        this.name = core_1.NameSpaceKeyBtc;\n        this.namespace = opts.namespace;\n        this.events = (0, utils_1.getGlobal)(\"events\");\n        this.client = (0, utils_1.getGlobal)(\"client\");\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"btc request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"btc provider namespace: \", JSON.stringify(this.namespace));\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = BtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass CosmosProvider {\n    constructor(opts) {\n        this.name = core_1.NameSpaceKeyCosmos;\n        this.namespace = opts.namespace;\n        this.events = (0, utils_1.getGlobal)(\"events\");\n        this.client = (0, utils_1.getGlobal)(\"client\");\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"btc request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"btc provider namespace: \", JSON.stringify(this.namespace));\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = CosmosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Eip155Provider = void 0;\nconst utils_1 = require(\"../utils\");\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nclass Eip155Provider {\n    constructor(opts) {\n        this.name = \"eip155\";\n        this.namespace = opts.namespace;\n        this.events = (0, utils_1.getGlobal)(\"events\");\n        this.client = (0, utils_1.getGlobal)(\"client\");\n        this.chainId = parseInt(this.getDefaultChain());\n        // rpc\n        this.httpProviders = this.createHttpProviders();\n        (0, core_1.logDebug)(\"eip155 constructor --opts.namespace-->\", opts.namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    isArray(value) {\n        return typeof value === \"object\" && value !== null && Array.isArray(value);\n    }\n    updateRequestParams(args) {\n        let isDic = args.params && typeof args.params === 'object' && !Array.isArray(args.params);\n        if (args.method === 'wallet_switchEthereumChain') {\n            const switchChainId = args.chainId.split(\":\")[1];\n            // const hexChainId = parseInt(switchChainId, 16);\n            const decimalNumber = parseInt(switchChainId, 10);\n            if (isNaN(decimalNumber)) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid decimal number,  chainId: '${switchChainId}' `);\n            }\n            if (!args.params) {\n                args.params = { chainId: '0x' + decimalNumber.toString(16) };\n            }\n            else if (isDic) { //为 Record<string, unknown>\n                let params = args.params;\n                if (!('chainId' in params)) {\n                    params['chainId'] = '0x' + decimalNumber.toString(16);\n                    args.params = params;\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params error ,  method: '${args.method}' `);\n            }\n        }\n        else if (args.method === 'personal_sign'\n            || args.method === 'eth_signTypedData_v4'\n            || args.method === 'eth_sendTransaction'\n            || args.method === 'wallet_watchAsset') {\n            if (!args.params) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params is nil, method: '${args.method}'`);\n            }\n            if (this.isRecord(args.params)) {\n                let params = args.params;\n                (0, core_1.logDebug)(\"eip155 updateRequestParams params>\", JSON.stringify(params));\n                if ('chainId' in params) {\n                    const selectedChainId = args.chainId.split(\":\")[1];\n                    const chainNum = parseInt(selectedChainId, 10);\n                    let paramsChainString = String(params.chainId);\n                    let paramsChainId;\n                    if (paramsChainString.startsWith(this.name) && args.chainId === paramsChainString) { //为\n                        paramsChainId = chainNum;\n                    }\n                    else if (paramsChainString.startsWith(\"0x\")) {\n                        paramsChainId = parseInt(paramsChainString, 16);\n                    }\n                    else if (!isNaN(Number(paramsChainString))) { //数字\n                        paramsChainId = parseInt(paramsChainString, 10);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid params.chainId format, method: '${args.method}'`);\n                    }\n                    if (chainNum !== paramsChainId) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params.chainId not equal chain,  method: '${args.method}' `);\n                    }\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid request params type, method: '${args.method}'`);\n            }\n        }\n    }\n    //adapt array\n    adaptArray(args) {\n        if (args.method === 'wallet_switchEthereumChain'\n            || args.method === 'wallet_addEthereumChain'\n            || args.method === 'wallet_watchAsset'\n            || args.method === 'eth_sendTransaction') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr) {\n                    if (paramsArr.length === 1) {\n                        let firstParam = args.params[0];\n                        if (this.isRecord(firstParam)) {\n                            args.params = firstParam;\n                        }\n                    }\n                    else if (paramsArr.length > 1) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                    }\n                }\n            }\n        }\n        else if (args.method === 'eth_signTypedData_v4') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr && paramsArr.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                }\n                else if (paramsArr && paramsArr.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let messageObj = {};\n                if (paramsArr && paramsArr.length === 2) {\n                    let addressObj = args.params[0]; //address\n                    if (addressObj && typeof addressObj === 'string') { //check address\n                        let isEqual = false;\n                        this.namespace.accounts.forEach((chain) => {\n                            let chainAddress = chain.split(':')[2];\n                            if (chainAddress === addressObj) {\n                                isEqual = true;\n                            }\n                        });\n                        (0, core_1.logDebug)(\"eip155 adaptArray eth_signTypedData_v4 >>>isEqual: \", isEqual);\n                        if (!isEqual) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error, not equal,  method: '${args.method}' `);\n                        }\n                        if (this.isRecord(args.params[1])) {\n                            messageObj = args.params[1];\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error , not string,  method: '${args.method}' `);\n                    }\n                }\n                else if (paramsArr && paramsArr.length === 1) {\n                    if (this.isRecord(args.params[0])) {\n                        messageObj = args.params[0];\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                    }\n                }\n                try {\n                    let messages = JSON.stringify(messageObj);\n                    args.params = {\n                        typedDataJson: messages\n                    };\n                }\n                catch (err) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params call JSON.stringify() failed,  method: '${args.method}' `);\n                }\n            }\n        }\n        else if (args.method === 'personal_sign') {\n            if (this.isArray(args.params)) {\n                if (args.params && args.params.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params error,  method: '${args.method}' `);\n                }\n                else if (args.params && args.params.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let firstObj = args.params[0];\n                let secondObj = args.params[1];\n                if (secondObj && typeof secondObj === 'string') { //check address\n                    let isEqual = false;\n                    this.namespace.accounts.forEach((chain) => {\n                        let chainAddress = chain.split(':')[2];\n                        if (chainAddress === secondObj) {\n                            isEqual = true;\n                        }\n                    });\n                    (0, core_1.logDebug)(\"eip155 adaptArray personal_sign >>>isEqual: \", isEqual);\n                    if (!isEqual) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error,  method: '${args.method}' `);\n                    }\n                }\n                if (firstObj && typeof firstObj === 'string') {\n                    args.params = {\n                        message: firstObj\n                    };\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is error,  method: '${args.method}' `);\n                }\n            }\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"eth_requestAccounts\":\n            case \"eth_accounts\":\n            case \"eth_chainId\":\n                return false;\n            case \"eth_sendTransaction\":\n            case \"eth_signTransaction\":\n            case \"eth_sign\":\n            case \"personal_sign\":\n            case \"eth_signTypedData\":\n            case \"wallet_addEthereumChain\":\n            case \"wallet_watchAsset\":\n            case \"eth_signTypedData_v4\":\n                return true;\n            case \"wallet_switchEthereumChain\": {\n                this.adaptArray(args);\n                this.updateRequestParams(args);\n                const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n                return !this.isChainApproved(parsedChainId);\n            }\n            default:\n                return false;\n        }\n        return false;\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.adaptArray(args);\n            (0, core_1.logDebug)(\"eip155 request --args--string>\", JSON.stringify(args));\n            this.updateRequestParams(args);\n            (0, core_1.logDebug)(\"eip155 request --params--string>\", JSON.stringify(args));\n            switch (args.method) {\n                case \"eth_requestAccounts\":\n                    return this.getAccounts();\n                case \"eth_accounts\":\n                    return this.getAccounts();\n                case \"eth_chainId\":\n                    return parseInt(this.getDefaultChain());\n                case \"wallet_switchEthereumChain\": {\n                    return (yield this.handleSwitchChain(args));\n                }\n                case \"wallet_addEthereumChain\":\n                    return this.addEthereumChain(args);\n                default:\n                    break;\n            }\n            if (this.namespace.methods.includes(args.method)) {\n                // personal_sign\n                // eth_signTypedData_v4\n                // eth_sendTransaction\n                // wallet_watchAsset\n                try {\n                    const response = yield this.client.request(args);\n                    (0, core_1.logDebug)(\"eip155 request --response----string>\", JSON.stringify(response));\n                    if (this.isRecord(response)) {\n                        if ('result' in response) {\n                            let result = response.result;\n                            if (result && typeof result === 'string' && (result === \"true\" || result === \"false\")) {\n                                (0, core_1.logDebug)(\"eip155 request --wallet_watchAsset>>>>\", result === \"true\");\n                                return (result === \"true\");\n                            }\n                            return response.result;\n                        }\n                    }\n                    return response;\n                }\n                catch (e) {\n                    (0, core_1.logDebug)(`eip155 request --response --error--string> e instanceof OKXConnectError ${e instanceof core_1.OKXConnectError}`, JSON.stringify(e));\n                    throw e;\n                }\n            }\n            else {\n                (0, core_1.logDebug)('[RPC] request begin');\n                return yield this.getHttpProvider().request(args);\n            }\n        });\n    }\n    addEthereumChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let resultData = (yield this.client.request(args));\n            try {\n                if ('result' in resultData) {\n                    let successData = resultData;\n                    let account = resultData.result;\n                    if (account) {\n                        const nameSpace = account.split(\":\")[0];\n                        const chainId = account.split(\":\")[1];\n                        const chain = nameSpace + ':' + chainId;\n                        let newNameSpace = this.namespace;\n                        this.namespace.accounts.push(account);\n                        this.namespace.chains.push(chain);\n                        if (this.isRecord(args.params)) {\n                            if (\"rpcUrls\" in args.params) {\n                                let rpcUrls = args.params.rpcUrls;\n                                let rpcUrl = rpcUrls ? rpcUrls[0] : undefined;\n                                if (rpcUrl) {\n                                    if (this.namespace.rpcMap) {\n                                        this.namespace.rpcMap[chainId] = rpcUrl;\n                                    }\n                                    else {\n                                        this.namespace.rpcMap = {\n                                            [chainId]: rpcUrl\n                                        };\n                                    }\n                                    this.setHttpProvider(chainId, rpcUrl);\n                                }\n                            }\n                        }\n                        this.events.emit(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, {\n                            eip155: this.namespace\n                        });\n                    }\n                }\n                else {\n                    new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request error`);\n                }\n            }\n            catch (error) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request  error`);\n            }\n            return null;\n        });\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        this.chainId = parseInt(chainId);\n        // set rpc\n        if (!this.httpProviders[chainId]) {\n            const rpc = rpcUrl || (0, utils_1.getRpcUrl)(`${this.name}:${chainId}`, this.namespace);\n            if (!rpc) {\n                // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n                (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            }\n            else {\n                this.setHttpProvider(chainId, rpc);\n            }\n        }\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId.toString();\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // ---------- Private ----------------------------------------------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"eip155 getAccounts \", accounts, this.chainId);\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    getHexChainIdFromRequest(args) {\n        let params = args.params;\n        let hexChainId = \"0x0\";\n        if (params && \"chainId\" in params) {\n            hexChainId = params.chainId;\n        }\n        hexChainId = hexChainId.startsWith(\"0x\") ? hexChainId : `0x${hexChainId}`;\n        (0, core_1.logDebug)(\"handleSwitchChain -->args \", args);\n        (0, core_1.logDebug)(\"handleSwitchChain -->hexChainId \", hexChainId);\n        const parsedChainId = parseInt(hexChainId, 16);\n        (0, core_1.logDebug)(\"handleSwitchChain -->parsedChainId \", parsedChainId);\n        return { parsedChainId, hexChainId };\n    }\n    handleSwitchChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n            if (this.isChainApproved(parsedChainId)) {\n                this.setDefaultChain(`${parsedChainId}`);\n            }\n            else {\n                const resultData = (yield this.client.request({\n                    method: \"wallet_switchEthereumChain\",\n                    chainId: args.chainId,\n                    params: {\n                        chainId: hexChainId,\n                    },\n                }));\n                try {\n                    if ('result' in resultData) {\n                        let successData = resultData;\n                        let account = resultData.result;\n                        if (account) {\n                            const nameSpace = account.split(\":\")[0];\n                            const chainId = account.split(\":\")[1];\n                            const chain = nameSpace + ':' + chainId;\n                            let newNameSpace = this.namespace;\n                            this.namespace.accounts.push(account);\n                            this.namespace.chains.push(chain);\n                            (0, core_1.logDebug)(\"handleSwitchChain -->wallet_switchEthereumChain \", resultData);\n                            this.setDefaultChain(`${parsedChainId}`);\n                            this.events.emit(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, {\n                                eip155: this.namespace\n                            });\n                        }\n                    }\n                    else {\n                        new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request error`);\n                    }\n                }\n                catch (error) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request  error`);\n                }\n            }\n            return null;\n        });\n    }\n    isChainApproved(chainId) {\n        return this.namespace.chains.includes(`${this.name}:${chainId}`);\n    }\n    // rpc\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            //   throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            (0, core_1.logDebug)('get parsed chain and rpc:', parsedChainId, parsedRpc);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        (0, core_1.logDebug)('get http providermap:', http);\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n}\nexports.Eip155Provider = Eip155Provider;\nexports.default = Eip155Provider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcConnection = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nconst DEFAULT_HTTP_HEADERS = {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n};\nconst DEFAULT_HTTP_METHOD = \"POST\";\nconst DEFAULT_FETCH_OPTS = {\n    headers: DEFAULT_HTTP_HEADERS,\n    method: DEFAULT_HTTP_METHOD,\n};\n// Source: https://nodejs.org/api/events.html#emittersetmaxlistenersn\nconst EVENT_EMITTER_MAX_LISTENERS_DEFAULT = 10;\nclass JsonRpcConnection {\n    constructor(url, disableProviderPing = false) {\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n        this.events = new eventemitter3_1.EventEmitter();\n        this.isAvailable = false;\n        this.registering = false;\n        if (!(0, core_2.isHttpUrl)(url)) {\n            throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n        }\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n    }\n    get connected() {\n        return this.isAvailable;\n    }\n    get connecting() {\n        return this.registering;\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            yield this.register(url);\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                throw new Error(\"Connection already closed\");\n            }\n            this.onClose();\n        });\n    }\n    send(payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                yield this.register();\n            }\n            try {\n                const body = (0, core_1.safeJsonStringify)(payload);\n                const res = yield (0, cross_fetch_1.default)(this.url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                const data = yield res.json();\n                this.onPayload({ data });\n            }\n            catch (e) {\n                this.onError(payload.id, e);\n            }\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    register() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            if (!(0, core_2.isHttpUrl)(url)) {\n                throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n            }\n            if (this.registering) {\n                return new Promise((resolve, reject) => {\n                    this.events.once(\"register_error\", (error) => {\n                        reject(error);\n                    });\n                    this.events.once(\"open\", () => {\n                        if (typeof this.isAvailable === \"undefined\") {\n                            return reject(new Error(\"HTTP connection is missing or invalid\"));\n                        }\n                        resolve();\n                    });\n                });\n            }\n            this.url = url;\n            this.registering = true;\n            try {\n                if (!this.disableProviderPing) {\n                    const body = (0, core_1.safeJsonStringify)({ id: 1, jsonrpc: \"2.0\", method: \"test\", params: [] });\n                    yield (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                }\n                this.onOpen();\n            }\n            catch (e) {\n                const error = this.parseError(e);\n                this.events.emit(\"register_error\", error);\n                this.onClose();\n                throw error;\n            }\n        });\n    }\n    onOpen() {\n        this.isAvailable = true;\n        this.registering = false;\n        this.events.emit(\"open\");\n    }\n    onClose() {\n        this.isAvailable = false;\n        this.registering = false;\n        this.events.emit(\"close\");\n    }\n    onPayload(e) {\n        if (typeof e.data === \"undefined\")\n            return;\n        const payload = typeof e.data === \"string\" ? (0, core_1.safeJsonParse)(e.data) : e.data;\n        this.events.emit(\"payload\", payload);\n    }\n    onError(id, e) {\n        const error = this.parseError(e);\n        const message = error.message || error.toString();\n        const payload = (0, core_2.formatJsonRpcError)(id, message);\n        this.events.emit(\"payload\", payload);\n    }\n    parseError(e, url = this.url) {\n        return (0, core_2.parseConnectionError)(e, url, \"HTTP\");\n    }\n}\nexports.JsonRpcConnection = JsonRpcConnection;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcProvider = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst types_1 = require(\"../../types\");\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nclass JsonRpcProvider extends types_1.IJSONRpcProvider {\n    constructor(connection) {\n        super(connection);\n        this.events = new eventemitter3_1.EventEmitter();\n        this.connected = false;\n        this.connecting = false;\n        this.hasRegisteredEventListeners = false;\n        this.connection = this.setConnection(connection);\n        if (this.connection.connected) {\n            this.registerEventListeners();\n        }\n    }\n    connect() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            yield this.open(connection);\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.close();\n        });\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    request(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.requestStrict((0, core_1.formatJsonRpcRequest)(request.method, request.params || [], (0, core_1.getBigIntRpcId)().toString()), // casting to any is required in order to use BigInt as rpcId\n            context);\n        });\n    }\n    // ---------- Protected ----------------------------------------------- //\n    requestStrict(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                if (!this.connection.connected) {\n                    try {\n                        yield this.open();\n                    }\n                    catch (e) {\n                        reject(e);\n                    }\n                }\n                this.events.on(`${request.id}`, (response) => {\n                    if ((0, core_1.isJsonRpcError)(response)) {\n                        reject(response.error);\n                    }\n                    else {\n                        resolve(response.result);\n                    }\n                });\n                try {\n                    (0, core_2.logDebug)('[RPC] >>> send request', request, context);\n                    yield this.connection.send(request, context);\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }));\n        });\n    }\n    setConnection(connection = this.connection) {\n        return connection;\n    }\n    onPayload(payload) {\n        this.events.emit(\"payload\", payload);\n        if ((0, core_1.isJsonRpcResponse)(payload)) {\n            this.events.emit(`${payload.id}`, payload);\n        }\n        else {\n            this.events.emit(\"message\", {\n                type: payload.method,\n                data: payload.params,\n            });\n        }\n    }\n    onClose(event) {\n        // Code 3000 indicates an abnormal closure signalled by the relay -> emit an error in this case.\n        if (event && event.code === 3000) {\n            this.events.emit(\"error\", new Error(`WebSocket connection closed abnormally with code: ${event.code} ${event.reason ? `(${event.reason})` : \"\"}`));\n        }\n        this.events.emit(\"disconnect\");\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            if (this.connection === connection && this.connection.connected)\n                return;\n            if (this.connection.connected)\n                this.close();\n            if (typeof connection === \"string\") {\n                yield this.connection.open(connection);\n                connection = this.connection;\n            }\n            this.connection = this.setConnection(connection);\n            yield this.connection.open();\n            this.registerEventListeners();\n            this.events.emit(\"connect\");\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.connection.close();\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    registerEventListeners() {\n        if (this.hasRegisteredEventListeners)\n            return;\n        this.connection.on(\"payload\", (payload) => this.onPayload(payload));\n        this.connection.on(\"close\", (event) => this.onClose(event));\n        this.connection.on(\"error\", (error) => this.events.emit(\"error\", error));\n        this.connection.on(\"register_error\", (_error) => this.onClose());\n        this.hasRegisteredEventListeners = true;\n    }\n}\nexports.JsonRpcProvider = JsonRpcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SolanaProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SolanaProvider {\n    constructor(opts, name) {\n        this.name = \"solana\";\n        this.namespace = opts.namespace;\n        this.events = (0, utils_1.getGlobal)(\"events\");\n        this.client = (0, utils_1.getGlobal)(\"client\");\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"solana request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"solana provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    //   {\n    //     \"chains\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\" ],\n    //     \"accounts\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp:F7wnJc5wiBGy1k87jv6gyNwE3jMEWd18oTQiYsF1xVG7\"],\n    //     \"methods\": [\n    //         \"solana_signTransaction\",\n    //         \"solana_signMessage\"\n    //     ],\n    //     \"defaultChain\": \"5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\"\n    // }\n    // TODO:确认上面的defaultChain是否正确（没有solana前缀）\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"solana\"))) {\n                chainId = `solana:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.SolanaProvider = SolanaProvider;\nexports.default = SolanaProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SuiProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SuiProvider {\n    constructor(opts) {\n        this.name = core_1.NameSpaceKeySui;\n        this.namespace = opts.namespace;\n        this.events = (0, utils_1.getGlobal)(\"events\");\n        this.client = (0, utils_1.getGlobal)(\"client\");\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"sui request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"sui provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"sui\"))) {\n                chainId = `sui:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"sui_signMessage\":\n            case \"sui_signPersonalMessage\":\n            case \"sui_signTransactionBlock\":\n            case \"sui_signAndExecuteTransactionBlock\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.SuiProvider = SuiProvider;\nexports.default = SuiProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass TONProvider {\n    constructor(opts) {\n        this.name = core_1.NameSpaceKeyTON;\n        this.namespace = opts.namespace;\n        this.events = (0, utils_1.getGlobal)(\"events\");\n        this.client = (0, utils_1.getGlobal)(\"client\");\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            (0, core_1.logDebug)(\"TONProvider request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"TONProvider request provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                if (!args.params) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params is nil\");\n                }\n                if (this.isRecord(args.params)) {\n                    const _e = args.params, { validUntil } = _e, newParams = __rest(_e, [\"validUntil\"]);\n                    let fromAddress = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n                    if ('from' in newParams) {\n                        fromAddress = newParams.from || ((_d = (_c = this.namespace.payload) === null || _c === void 0 ? void 0 : _c.ton_addr) === null || _d === void 0 ? void 0 : _d.address);\n                    }\n                    args.params['from'] = fromAddress;\n                    args.params['network'] = this.getDefaultChain();\n                    args.params['valid_until'] = validUntil;\n                    let response = yield this.client.request(args);\n                    if (this.isRecord(response) && 'result' in response) {\n                        const result = {\n                            boc: response.result.toString()\n                        };\n                        (0, core_1.logDebug)(\"TONProvider request provider response: \", JSON.stringify(response));\n                        (0, core_1.logDebug)(\"TONProvider request provider result: \", JSON.stringify(result));\n                        return result;\n                    }\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton_send request response is nil\");\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params type add nil\");\n                }\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        var _a, _b;\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"ton getAccounts accounts :\", accounts);\n        (0, core_1.logDebug)(\"ton getAccounts .namespace :\", JSON.stringify(this.namespace));\n        if (!accounts) {\n            return [];\n        }\n        let address = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n        (0, core_1.logDebug)(\"ton getAccounts address :\", address);\n        if (address) {\n            return [\n                address\n            ];\n        }\n        return [];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"ton_sendTransaction\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.default = TONProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./providers\"), exports);\n__exportStar(require(\"./misc\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IJSONRpcProvider = exports.IJSONRpcConnection = void 0;\nclass IJSONRpcConnection {\n}\nexports.IJSONRpcConnection = IJSONRpcConnection;\nclass IJSONRpcProvider {\n    constructor(opt) {\n    }\n}\nexports.IJSONRpcProvider = IJSONRpcProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setGlobal = exports.getGlobal = void 0;\nconst globals = {};\nconst getGlobal = (key) => {\n    return globals[key];\n};\nexports.getGlobal = getGlobal;\nconst setGlobal = (key, value) => {\n    globals[key] = value;\n};\nexports.setGlobal = setGlobal;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./misc\"), exports);\n__exportStar(require(\"./globals\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRpcUrl = getRpcUrl;\nexports.getChainId = getChainId;\nexports.convertChainIdToNumber = convertChainIdToNumber;\nexports.parseChainId = parseChainId;\nexports.mergeArrays = mergeArrays;\nfunction getRpcUrl(chainId, rpc, projectId) {\n    var _a;\n    const chain = parseChainId(chainId);\n    // no default\n    return (((_a = rpc.rpcMap) === null || _a === void 0 ? void 0 : _a[chain.reference]) ||\n        ``);\n}\nfunction getChainId(chain) {\n    return chain.includes(\":\") ? chain.split(\":\")[1] : chain;\n}\n// export function validateChainApproval(chain: string, chains: string[]): void {\n//   if (!chains.includes(chain)) {\n//     throw new Error(\n//       `Chain '${chain}' not approved. Please use one of the following: ${chains.toString()}`,\n//     );\n//   }\n// }\n// export function getChainsFromApprovedSession(accounts: string[]): string[] {\n//   return accounts.map((address) => `${address.split(\":\")[0]}:${address.split(\":\")[1]}`);\n// }\n// export function getAccountsFromSession(namespace: string, session: SessionTypes.Struct): string[] {\n//   // match namespaces e.g. eip155 with eip155:1\n//   const matchedNamespaceKeys = Object.keys(session.namespaces).filter((key) =>\n//     key.includes(namespace),\n//   );\n//   if (!matchedNamespaceKeys.length) return [];\n//   const accounts: string[] = [];\n//   matchedNamespaceKeys.forEach((key) => {\n//     const accountsForNamespace = session.namespaces[key].accounts;\n//     accounts.push(...accountsForNamespace);\n//   });\n//   return accounts;\n// }\n// export function mergeRequiredOptionalNamespaces(\n//   required: NamespaceConfig = {},\n//   optional: NamespaceConfig = {},\n// ){\n//   const requiredNamespaces = normalizeNamespaces(required);\n//   const optionalNamespaces = normalizeNamespaces(optional);\n//    return merge.merge(requiredNamespaces,optionalNamespaces)\n// }\n/**\n * Converts\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * into\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *\n */\n// export function normalizeNamespaces(namespaces: NamespaceConfig): NamespaceConfig {\n//   const normalizedNamespaces: NamespaceConfig = {};\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const rpcMap = values.rpcMap || {};\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       ...values,\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       rpcMap: { ...rpcMap, ...normalizedNamespaces[normalizedKey]?.rpcMap },\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n//\n// export function parseCaip10Account(caip10Account: string): string {\n//   return caip10Account.includes(\":\") ? caip10Account.split(\":\")[2] : caip10Account;\n// }\n/**\n * Populates the chains array for each namespace with the chains extracted from the accounts if are otherwise missing\n */\n// export function populateNamespacesChains(\n//   namespaces: SessionTypes.Namespaces,\n// ): Record<string, SessionTypes.Namespace> {\n//   const parsedNamespaces: Record<string, SessionTypes.Namespace> = {};\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const accounts = values.accounts || [];\n//     // If the key includes a CAIP separator `:` we know it's a namespace + chainId (e.g. `eip155:1`)\n//     const chains = isCaipNamespace(key)\n//       ? [key]\n//       : values.chains\n//       ? values.chains\n//       : getChainsFromApprovedSession(values.accounts);\n//     parsedNamespaces[key] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   }\n//   return parsedNamespaces;\n// }\nfunction convertChainIdToNumber(chainId) {\n    if (typeof chainId === \"number\")\n        return chainId;\n    if (chainId.includes(\"0x\")) {\n        return parseInt(chainId, 16);\n    }\n    chainId = chainId.includes(\":\") ? chainId.split(\":\")[1] : chainId;\n    return isNaN(Number(chainId)) ? chainId : Number(chainId);\n}\nconst CAIP_DELIMITER = \":\";\nfunction parseChainId(chain) {\n    const [namespace, reference] = chain.split(CAIP_DELIMITER);\n    return { namespace, reference };\n}\nfunction mergeArrays(a = [], b = []) {\n    return [...new Set([...a, ...b])];\n}\n","<template>\n  <div id=\"app\">\n    <el-container>\n      <el-header>OKX Connect</el-header>\n      <el-main>\n        <!-- 钱包信息 -->\n        <el-card class=\"wallet-info\">\n          <template #header>\n            <div>Wallet Info</div>\n          </template>\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Wallet Address:</strong> {{ getWalletAddress }}\n            </el-col>\n          </el-row>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Status :</strong> {{ currentStatus }}\n            </el-col>\n          </el-row>\n\n          <!--          <el-row class=\"info-row\">-->\n          <!--            <el-col :span=\"24\">-->\n          <!--              <strong>Universal Link:</strong> {{ updateUniLink }}-->\n          <!--            </el-col>-->\n          <!--          </el-row>-->\n        </el-card>\n\n        <!-- 连接钱包 -->\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div>Actions</div>\n          </template>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <el-checkbox v-model=\"withUI\" @change=\"handleWithUI\">\n                show UI</el-checkbox>\n            </el-col>\n          </el-row>\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Modals</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"modals\" placeholder=\"Modals\" @change=\"handleModalsSelect\" multiple>\n                <el-option label=\"Before\" value=\"before\" />\n                <el-option label=\"Success\" value=\"success\" />\n                <el-option label=\"Error\" value=\"error\" />\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center; justify-content: space-between;\">\n            <el-col :span=\"4\" style=\"gap: 2px\">\n              <p style=\"font-size: 11pt; margin: 0px\">Return Strategy</p>\n              <p style=\"font-size: 9pt; margin: 0px\">(Mobile only)</p>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-select\n                v-model=\"returnStrategy\"\n                @change=\"handleReturnStrategySelect\"\n                placeholder=\"Return Strategy\"\n              >\n                <el-option\n                  v-for=\"strategy in returnStrategies\"\n                  :key=\"`return-strategy-select-option-${strategy}`\"\n                  :label=\"strategy\"\n                  :value=\"strategy\"\n                />\n              </el-select>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-input\n                v-if=\"returnStrategy === 'deeplink'\"\n                v-model=\"deeplink\"\n                @change=\"handleReturnStrategyDeeplink\"\n                placeholder=\"Deeplink\"\n                :disabled=\"returnStrategy !== 'deeplink'\"\n                style=\"margin: 0px\"\n              />\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Language</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"language\" @change=\"handleLanguageSelect\" placeholder=\"Language\">\n                <el-option v-for=\"locale in locales\" :key=\"`language-select-option-${locale}`\" :label=\"locale\"\n                  :value=\"locale\" />\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Theme</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"theme\" @change=\"handleThemeSelect\" placeholder=\"Theme\">\n                <el-option label=\"LIGHT\" :value=\"THEME.LIGHT\" />\n                <el-option label=\"DARK\" :value=\"THEME.DARK\" />\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">ton_proof</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-input v-model=\"tonProofValue\"  placeholder=\"input ton_proof\"></el-input>\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" align=\"middle\">\n            <el-col :span=\"4\">\n              <div>req</div>\n            </el-col>\n            <el-col\n              :span=\"6\"\n              v-for=\"item in Object.keys(availableChains)\"\n              :key=\"item\"\n            >\n              <el-checkbox\n                v-model=\"availableChains[item].checked\"\n                :disabled=\"!areChainsInit\"\n                >{{ availableChains[item].name }}</el-checkbox\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" align=\"middle\" style=\"margin-top: 20px\">\n            <el-col :span=\"4\">\n              <div>opt</div>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(43114)\" @change=\"() => handleOptionChange(43114)\">\n                avax</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(10)\" @change=\"() => handleOptionChange(10)\">op</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(8453)\" @change=\"() => handleOptionChange(8453)\">\n                BASE</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(99781165)\"\n                @change=\"() => handleOptionChange(99781165)\">Non-exist chain</el-checkbox>\n            </el-col>\n          </el-row>\n\n          <!-- <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button type=\"primary\" @click=\"deeplinkActionTest\" icon=\"el-icon-connection\">测试Deeplink</el-button>\n            </el-col>\n          </el-row> -->\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                type=\"primary\"\n                @click=\"connectBtnClicked\"\n                icon=\"el-icon-connection\"\n                :disabled=\"!areChainsInit\"\n                >{{ connectStatusStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                type=\"danger\"\n                @click=\"disconnectAction\"\n                icon=\"el-icon-switch-button\"\n                :disabled=\"!areChainsInit || walletAddress.length == 0\"\n                >{{ disconnectStatusStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n          <teleport to=\"body\">\n            <div v-if=\"showModal\" class=\"modal-overlay\" @click=\"closeModal\">\n              <div class=\"modal-content\" @click.stop>\n                <button class=\"close-button\" @click=\"closeModal\">\n                  &times;\n                </button>\n                <h2>Scan to connect</h2>\n                <qrcode-vue :value=\"qrValue\" :size=\"200\" level=\"H\" />\n              </div>\n            </div>\n          </teleport>\n        </el-card>\n\n        <!-- 发送交易 -->\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div>Transactions</div>\n          </template>\n\n          <el-tabs v-model=\"activeTab\" type=\"border-card\" @tab-click=\"clickActiveTab\">\n            <!-- ETH -->\n            <el-tab-pane label=\"ETH\" name=\"eip155:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to ETH)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve TONCoin)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(eth mint\n                    nft)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add SPX6900)\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n            <!-- Polygon-->\n            <el-tab-pane label=\"Polygon\" name=\"eip155:137\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send POL)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve sushi)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(polygon mint\n                    nft)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add LGNS)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_testRpc()\">wallet_testRpc(Polygon)</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- BSC-->\n            <el-tab-pane label=\"BNB\" name=\"eip155:56\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to BNB)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve POSI)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add FET)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_testRpc()\">wallet_testRpc(check balance on eth)</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Fuse\" name=\"eip155:122\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_swap\">eth_sendTransaction(Swap)</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TON\" name=\"ton:-239\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_getAccount\">ton_getAccount</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_sendTransaction\">ton_sendTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- solana -->\n            <el-tab-pane label=\"Sol\" name=\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Sonic\" name=\"sonic:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Sonic(svm)\" name=\"svm:70000059\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- Sui-->\n            <el-tab-pane label=\"Sui\" name=\"sui:mainnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sui_getAccount()\">getAccount(Sui)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sui_signMessage()\">signMessage(Sui)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sui_signPersonalMessage()\">signPersonalMessage(Sui)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sui_signTransaction2()\">signTransaction(Sui)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sui_signAndExecuteTransaction()\">sendTransaction(send to Rally\n                    Tiger account)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sui_requestRpc()\">rpc(Sui)</el-button>\n                </el-col>\n              </el-row>\n\n              <div style=\"height: 48px\"></div>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"sui_signTransaction_pre_execution()\">signTransaction(prepared data)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"sui_signAndExecuteTransaction_pre_execution()\">sendTransaction(prepared data)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sui_signTransaction()\">signTransaction(Pattern account)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sui_signAndExecuteTransaction_stake()\">stake (Sui)</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n            <!-- BTC -->\n            <el-tab-pane label=\"BTC\" name=\"btc:mainnet\">\n              <BTCPanel @generateTransactionParams=\"btc_generateTransactionParams\" />\n            </el-tab-pane>\n\n            <!-- Fractal BTC -->\n            <el-tab-pane label=\"Fractal\" name=\"fractal:mainnet\">\n              <FractalPanel @generateTransactionParams=\"fractal_generateTransactionParams\" />\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Aptos\" name=\"aptos:mainnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signTransaction\">aptos_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"aptos_signAndSubmitTransaction\">aptos_signAndSubmitTransaction</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Movement\" name=\"movement:testnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"move_signTransaction\">move_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"move_signAndSubmitTransaction\">move_signAndSubmitTransaction</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"cosmos\" name=\"cosmos:cosmoshub-4\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"osmos\" name=\"cosmos:osmosis-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"sei交易\" name=\"cosmos:pacific-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n          </el-tabs>\n\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Data:</div>\n            <el-input v-model=\"testTransaction\" type=\"textarea\" :rows=\"5\" placeholder=\"sendTransactions\"></el-input>\n          </el-col>\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Result :</div>\n            <el-input v-model=\"testboc\" type=\"textarea\" :rows=\"5\" placeholder=\"boc\"></el-input>\n          </el-col>\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button type=\"primary\" @click=\"sendTransaction()\">{{\n                testTransactionStr\n                }}</el-button>\n            </el-col>\n          </el-row>\n        </el-card>\n      </el-main>\n    </el-container>\n  </div>\n</template>\n\n<style scoped>\n/* 重置全局边距和内边距 */\nbody,\nhtml {\n  margin: 0;\n  padding: 0;\n  height: 100%;\n}\n\n/* 确保 app 容器占满整个视口 */\n#app {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin: 0 auto;\n  /* 居中 */\n  max-width: 600px;\n  /* 设置最大宽度 */\n  padding: 0 20px;\n  /* 添加一些左右内边距 */\n}\n\n/* 调整 el-container 样式 */\n.el-container {\n  min-height: 100vh;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n}\n\n/* 调整 el-header 样式 */\n.el-header {\n  background-color: #333333;\n  color: white;\n  height: 50px;\n  line-height: 50px;\n  font-size: 18px;\n  font-weight: bold;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1000;\n}\n\n/* 调整 el-main 样式 */\n.el-main {\n  padding: 70px 0 20px;\n  /* 增加顶部内边距以避免被固定header遮挡 */\n  flex-grow: 1;\n}\n\n.el-card {\n  margin-bottom: 20px;\n}\n\n.info-row {\n  margin-bottom: 10px;\n}\n\n.input-label {\n  margin-bottom: 5px;\n  text-align: left;\n}\n\n.el-input {\n  margin-bottom: 10px;\n}\n\n/* 通用按钮样式 */\n.wallet-actions .el-button,\n.transaction .el-button,\n.clear-cache .el-button {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 40px;\n}\n\n.wallet-actions .el-button span,\n.transaction .el-button span,\n.clear-cache .el-button span {\n  margin: 0 auto;\n}\n\n/* 按钮行间距 */\n.wallet-actions .button-row,\n.transaction .button-row {\n  margin-bottom: 8px;\n}\n\n.wallet-actions .button-row:last-child,\n.transaction .button-row:last-child {\n  margin-bottom: 0;\n}\n\n/* 调整图标和文字的对齐 */\n.wallet-actions .el-button [class^=\"el-icon-\"],\n.transaction .el-button [class^=\"el-icon-\"],\n.clear-cache .el-button [class^=\"el-icon-\"] {\n  margin-right: 5px;\n  vertical-align: middle;\n}\n\n/* 新增：调整发送交易按钮与输入框的间距 */\n.transaction .el-row:not(:last-child) {\n  margin-bottom: 10px;\n}\n\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.modal-content {\n  background-color: white;\n  padding: 20px;\n  border-radius: 8px;\n  text-align: center;\n  position: relative;\n  max-width: 90%;\n  width: 300px;\n}\n\n.close-button {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  font-size: 24px;\n  border: none;\n  background: none;\n  cursor: pointer;\n}\n\n/* 响应式调整 */\n@media (max-width: 600px) {\n  #app {\n    padding: 0 10px;\n  }\n\n  .el-main {\n    padding: 60px 0 10px;\n  }\n}\n</style>\n<script>\n\nimport {OKX_CONNECT_ERROR_CODES, safeJsonStringify} from \"@okxconnect/core\"\nimport {OKXBtcProvider, OKXUniversalProvider, OKXCosmosProvider} from \"@okxconnect/universal-provider\"\nimport {OKXSolanaProvider} from \"@okxconnect/solana-provider\";\nimport {\n  Connection,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n  TransactionMessage,\n  VersionedTransaction\n} from '@solana/web3.js';\nimport {OKXSuiProvider as SuiAdapter} from \"@okxconnect/sui-provider\"\nimport {Transaction as SuiTransaction} from '@mysten/sui/transactions';\nimport QrcodeVue from 'qrcode.vue'\nimport {getFullnodeUrl, SuiClient} from \"@mysten/sui/client\";\nimport { OKXTONProvider } from \"@okxconnect/ton-provider\"\n\nimport {OKXAptosProvider} from \"@okxconnect/aptos-provider\";\nimport {Aptos, AptosConfig, Network} from \"@aptos-labs/ts-sdk\";\n\nimport BTCPanel from \"./components/BtcTransactionPanel.vue\";\nimport FractalPanel from \"./components/FractalTransactionPanel.vue\"\n\nimport {OKXUniversalConnectUI, THEME} from \"@okxconnect/ui\";\nimport VConsole from 'vconsole';\nimport nacl from \"tweetnacl\";\n\nnew VConsole();\n\nconst allChains = {\n  1: { name: \"eth\", checked: false },\n  56: { name: \"BNB\", checked: false },\n  137: { name: \"Polygon\", checked: false },\n  122: { name: \"Fuse\", checked: false },\n  \"ton:-239\":{name: \"TON\",checked: false},\n  \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\": {\n    name: \"Sol mainnet\",\n    checked: false,\n  },\n  \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\": {\n    name: \"Sol testnet\",\n    checked: false,\n  },\n  \"sonic:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\": {\n    name: \"Sonic testnet\",\n    checked: false,\n  },\n  \"svm:70000059\": { name: \"70000059\", checked: false },\n  \"sui:mainnet\": { name: \"Sui mainnet\", checked: false },\n  \"aptos:mainnet\": { name: \"Aptos mainnet\", checked: false },\n  \"movement:testnet\": { name: \"Movement\", checked: false },\n  \"btc:mainnet\": { name: \"BTC\", checked: false },\n  \"fractal:mainnet\": { name: \"Fractal\", checked: false },\n  \"cosmos:osmosis-1\": {name: \"osmos\", checked: false},\n  \"cosmos:cosmoshub-4\": {name: \"cosmoshub\", checked: false},\n  \"cosmos:pacific-1\": {name: \"sei\", checked: false},\n  \"cosmos:abvdefg\": {name: \"cosmos:abvdefg\", checked: false},\n  997865: { name: \"Non Exist chain\", checked: false },\n};\n\nvar optionChains = new Set([]);\nvar selectedModals = [\"before\", \"success\", \"error\"];\nvar selectedReturnStrategy = \"none\";\nvar selectedDeepLink = \"tg://resolve\";\nvar selectedLanguage = \"en_US\";\nvar selectedTheme = THEME.LIGHT;\n\n// import QrcodeVue from 'qrcode.vue'\nexport default {\n  name: \"App\",\n  components: {\n    QrcodeVue,\n    BTCPanel,\n    FractalPanel\n  },\n\n  data: () => {\n    return {\n      activeTab: \"eip155:1\",\n      testTopic: \"\",\n      testPublicKey: \"\",\n      testProofPayload: \"\",\n      tonProofValue:\"\",\n      pendingDeepLink: \"-\",\n      logList: [],\n      connectReady: false,\n      connectStatusStr: \"Connect\",\n      disconnectStatusStr: \"Disconnect\",\n      localPubKey: \"\",\n      localSecKey: \"\",\n      testTransaction: \"\",\n      selectedChain: \"eip155:1\",\n      testTransactionStr: \"Send\",\n      walletAddress: \"\",\n      testboc: \"\",\n      ProofPayloadVerify: \"\",\n      showModal: false,\n      showVerifyRow: false,\n      qrValue: \"https://www.okx.com/download\",\n      currentStatus: \"\",\n      areChainsInit: false,\n      availableChains: allChains,\n      isOptionalChecked: (chainId) => {\n        return optionChains.has(chainId);\n      },\n      withUI: localStorage.getItem(\"autoRefresh\") != \"false\",\n      modals: selectedModals,\n      returnStrategies: [\"none\", \"back\", \"deeplink\"],\n      returnStrategy: selectedReturnStrategy,\n      deeplink: selectedDeepLink,\n      locales: [\n        \"en_US\",\n        \"ru_RU\",\n        \"zh_CN\",\n        \"zh\",\n        \"ar_AE\",\n        \"cs_CZ\",\n        \"de_DE\",\n        \"es_ES\",\n        \"es_LAT\",\n        \"fr_FR\",\n        \"id_ID\",\n        \"it_IT\",\n        \"nl_NL\",\n        \"pl_PL\",\n        \"pt_BR\",\n        \"pt_PT\",\n        \"ro_RO\",\n        \"tr_TR\",\n        \"uk_UA\",\n        \"vi_VN\",\n      ],\n      language: selectedLanguage,\n      theme: selectedTheme,\n      THEME: THEME,\n      handleWithUI: (isChecked) => {\n        localStorage.setItem(\"autoRefresh\", `${isChecked}`);\n        location.reload();\n      },\n      handleOptionChange: (chainId) => {\n        if (optionChains.has(chainId)) {\n          optionChains.delete(chainId);\n        } else {\n          optionChains.add(chainId);\n        }\n      },\n    };\n  },\n  computed: {\n    getWalletAddress: function () {\n      return this.walletAddress;\n    },\n  },\n  methods: {\n    isChecked(chainId) {\n      return this.selectedChains.has(chainId);\n    },\n\n    initChains(newChains) {\n      if (newChains.length > 0) {\n        const updatedChains = Object.assign({}, this.availableChains);\n        for (const chainId of newChains) {\n          if (updatedChains[chainId]){\n            updatedChains[chainId].checked = !updatedChains[chainId].checked;\n          }\n        }\n        this.availableChains = updatedChains;\n      }\n\n      this.areChainsInit = true;\n    },\n\n    async clickActiveTab(tab) {\n      const tabName = tab.props ? tab.props.name : tab.name;\n      this.selectedChain = tabName;\n      console.log(`已切换到链 :`, tabName);\n\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n      window.provider.setDefaultChain(this.selectedChain);\n    },\n\n    async connectBtnClicked() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        this.testTonSdk();\n      } else {\n        console.log(`connectBtnClicked provider not finish init`);\n      }\n    },\n\n    async disconnectAction() {\n      try {\n        console.log(\"get disconnect wallet btn clicked\");\n        // await TON.disconnect();\n        var provider = window.provider;\n        await provider.disconnect();\n        this.walletAddress = \"disconnected\";\n      } catch (error) {\n        console.log(\"Disconnect  error ==>> \", error.message);\n        this.currentStatus = error.message;\n      }\n    },\n\n    async eth_requestAccounts() {\n      var data = { method: \"eth_requestAccounts\" };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_chainId() {\n      var data = { method: \"eth_chainId\" };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async wallet_switchEthereumChain() {\n      var data = { method: \"wallet_switchEthereumChain\" };\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async wallet_addEthereumChain() {\n      var data = {\n        method: \"wallet_addEthereumChain\",\n        params: {\n          blockExplorerUrls: [\"https://explorer.fuse.io\"],\n          chainId: \"0x7a\",\n          chainName: \"Fuse\",\n          nativeCurrency: { name: \"Fuse\", symbol: \"FUSE\", decimals: 18 },\n          rpcUrls: [\"https://rpc.fuse.io\"],\n        },\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n    async personal_sign() {\n      if (this.selectedChain === \"eip155:1\") {\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0x1ca023f10e157d148deed210f8bee193657a1eaa7f187909e20a9dc3b071dbc364c41fde37960c05093359f410a061ec8a7dca8c0c39fc7c1e24de8a3329775d1b\n\n        var accounts = await window.provider.request(\n          { method: \"eth_requestAccounts\" },\n          \"eip155\"\n        );\n        var address = accounts[0];\n        console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n        var dataETH = {\n          method: \"personal_sign\",\n          params: [\n            \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n            address,\n          ],\n        };\n\n        this.testTransaction = JSON.stringify(dataETH);\n      } else if (\n        this.selectedChain === \"eip155:137\" ||\n        this.selectedChain === \"eip155:122\"\n      ) {\n        // method\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0xebda9cfa2af43999058dffa0107031d1ef7fc0252dca85dcbd22ea097af922ca39b64d509ef61ce42b7641c5840b8a80337ffd1411b13e87e2260a3f1b6c151c1b\n\n        var dataPolygon = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n        this.testTransaction = JSON.stringify(dataPolygon);\n      } else if (this.selectedChain === \"eip155:56\") {\n        var data = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n\n        this.testTransaction = JSON.stringify(data);\n      }\n    },\n\n    async eth_sendTransaction_swap() {\n      var data = {\n        method: \"eth_sendTransaction\",\n        chainId: \"eip155:122\",\n        params: {\n          value: \"0x38d7ea4c68000\",\n          gas: \"0x2665f\",\n          to: \"0xf2614A233c7C3e7f08b1F887Ba133a13f1eb2c55\",\n          from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n          data: \"0x2646478b000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee00000000000000000000000000000000000000000000000000038d7ea4c68000000000000000000000000000620fd5fa44be6af63715ef4e65ddfa0387ad13f5000000000000000000000000000000000000000000000000000000000000001b000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000700301ffff0201602352A9Eb5234466Eac23E59e7B99bCaE79C39c0BE9e53fd7EDaC9F859882AfdDa116645287C629040BE9e53fd7EDaC9F859882AfdDa116645287C62900602352A9Eb5234466Eac23E59e7B99bCaE79C39c01f2F3e73be57031114dd1f4E75c1DD87658be7F0E000bb800000000000000000000000000000000\",\n        },\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_signTypedData_v4() {\n      // method\n      // eth_signTypedData\n      // address\n      // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n      // valid\n      // true\n      // result\n      // 0xa8bb3c6b33a119d2d567c7632195c21988df778006082742125a591f5c633f716107883a37f7de6531a6312a5f69022135bf46fe5ab77905b62c82b3395f985e1b\n      //\n\n      // var data = {\n      //   \"method\": \"eth_signTypedData_v4\",\n      //   \"params\": {\n      //     \"typedDataJson\":\"{\\\"types\\\":{\\\"EIP712Domain\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"version\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"chainId\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"name\\\":\\\"verifyingContract\\\",\\\"type\\\":\\\"address\\\"}],\\\"Person\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"wallet\\\",\\\"type\\\":\\\"address\\\"}],\\\"Mail\\\":[{\\\"name\\\":\\\"from\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"to\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"contents\\\",\\\"type\\\":\\\"string\\\"}]},\\\"primaryType\\\":\\\"Mail\\\",\\\"domain\\\":{\\\"name\\\":\\\"Ether Mail\\\",\\\"version\\\":\\\"1\\\",\\\"chainId\\\":1,\\\"verifyingContract\\\":\\\"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\\\"},\\\"message\\\":{\\\"from\\\":{\\\"name\\\":\\\"Cow\\\",\\\"wallet\\\":\\\"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\\\"},\\\"to\\\":{\\\"name\\\":\\\"Bob\\\",\\\"wallet\\\":\\\"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\\\"},\\\"contents\\\":\\\"Hello, Bob!\\\"}}\"\n      // }}\n\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n        \"eip155\"\n      );\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n      var data = {\n        method: \"eth_signTypedData_v4\",\n        params: [\n          address,\n          {\n            types: {\n              EIP712Domain: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"version\",\n                  type: \"string\",\n                },\n                {\n                  name: \"chainId\",\n                  type: \"uint256\",\n                },\n                {\n                  name: \"verifyingContract\",\n                  type: \"address\",\n                },\n              ],\n              Person: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"wallet\",\n                  type: \"address\",\n                },\n              ],\n              Mail: [\n                {\n                  name: \"from\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"to\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"contents\",\n                  type: \"string\",\n                },\n              ],\n            },\n            primaryType: \"Mail\",\n            domain: {\n              name: \"Ether Mail\",\n              version: \"1\",\n              chainId: 1,\n              verifyingContract: \"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\",\n            },\n            message: {\n              from: {\n                name: \"Cow\",\n                wallet: \"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\",\n              },\n              to: {\n                name: \"Bob\",\n                wallet: \"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\",\n              },\n              contents: \"Hello, Bob!\",\n            },\n          },\n        ],\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_sendTransaction_transfer() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            chainId: \"0x1\",\n            to: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            value: \"0x5af3107a4000\",\n            maxPriorityFeePerGas: \"0x3b9aca00\",\n            gas: \"0x5e56\",\n            maxFeePerGas: \"0x2643b9db8\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gasPrice: \"0x17003f6530\",\n            nonce: \"0x0d30\",\n            data: \"0x\",\n            value: \"0x00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasLimit: \"0x5208\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x5e56\",\n            value: \"0x5af3107a4000\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasPrice: \"0x3b9aca00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            chainId: \"0x38\",\n          },\n        };\n      }\n\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n        \"eip155\"\n      );\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"to\"] = address;\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_approve() {\n      var data = {};\n\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000000000000022d473030f116ddee9f6b43ac78ba3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x582d872a1b094fc48f5de31d3b73f2d9be47def1\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000f6f8096ac575b0\",\n            to: \"0x0b3F868E0BE5597D5DB7fEB59E1CADBb0fdDa50a\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            value: \"0x0\",\n            gas: \"0xe117\",\n            gasPrice: \"0xb2d05e00\",\n            data: \"0x095ea7b300000000000000000000000031c2f6fcff4f8759b3bd5bf0e1084a055615c768ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x5CA42204cDaa70d5c773946e69dE942b85CA6706\",\n          },\n        };\n      }\n\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n        \"eip155\"\n      );\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_mint() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x4cacb\",\n            data: \"0xa64dfa75000000000000000000000000ed688002f3797599db8b4feacfe8b1dda0df1c8d000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003e00000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000042000000000000000000000000000000000000000000000000000000000000005000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000052000000000000000000000000000000000000000000000000000000000000005400000000000000000000000000000000000000000000000000000000000000560000000000000000000000000000000000000000000000000000000000000058000000000000000000000000000000000000000000000000000000000000005a000000000000000000000000000000000000000000000000000000000000005c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cecb15396825a895ff8da8fc2d2c77a234dccee00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f6261667962656968643737366b6177706e71336f6f6a6635693274787a76617737737164656b34616a776472637472703261366f626b70723773792f7b69647dan            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x30795\",\n            data: \"0xa64dfa75000000000000000000000000341b3687f0309778f08f29336b2c4b9c38b9f110000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f62616679626569686a6279676b68747a71376b68377434336266686e676e793236337668766f6578716a6d6e377161716166366e717a64743777712f7b69647d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002an            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      }\n\n      let str = JSON.stringify(data);\n      console.log(\"-----长度--->\", str.length);\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n        \"eip155\"\n      );\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async wallet_testRpc() {\n      let provider = window.provider;\n      provider.setDefaultChain(\n        `eip155:56`,\n        `https://eth-mainnet.g.alchemy.com/v2/NxUfYJUr-TQtEpLmSXhhD5pXn70GwsyV`\n      );\n      var data = {\n        method: \"eth_getBalance\",\n        params: [\"0x8D97689C9818892B700e27F316cc3E41e17fBeb9\", \"latest\"],\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async wallet_watchAsset() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xe0f63a424a4439cbe457d80e4f4b51ad25b2c56c\",\n              symbol: \"SPX6900\",\n              image:\n                \"https://assets.coingecko.com/coins/images/31401/standard/sticker_%281%29.jpg?1702371083\",\n              decimals: 8,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xeB51D9A39AD5EEF215dC0Bf39a8821ff804A0F01\",\n              symbol: \"LGNS\",\n              image: \"https://polygonscan.com/token/images/originlgns_32.png\",\n              decimals: 9,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0x031b41e504677879370e9dbcf937283a8691fa7f\",\n              symbol: \"FET\",\n              image: \"https://bscscan.com/token/images/fetch_32.png\",\n              decimals: 18,\n            },\n          },\n        };\n      }\n\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async ton_sendTransaction() {\n      var data  = {\n        \"messages\":[{\"address\":\"EQARULUYsmJq1RiZ-YiH-IJLcAZUVkVff-KBPwEmmaQGH6aC\",\"amount\":\"205000000\",\"payload\":\"te6cckEBAgEAhwABbQ+KfqUAAADNgG7tIEATEtAIAO87mQKicbKgHIk4pSPP4k5xhHqutqYgAB7USnesDnCcECwbgQMBAJUlk4VhgBD3JEg1TUr75iTijBghOKm/sxNDXUBl7CD6WMut0Q85x4RafwA/Es89DBXoTxuqxVFxyBbzt9Rav2HBUKl7hmkvLuKHLBCW57aK\"}],\n        \"validUntil\":1792481054,\n        \"network\":'-239'}\n      this.testTransaction = JSON.stringify(data)\n    },\n    ton_getAccount() {\n      this.testTransaction = \"这里是同步获取 不再需要点击 <<发送交易>>\"\n      const adapter = new OKXTONProvider(window.provider);\n      let result =   adapter.getAccount()\n      if (result) {\n        this.testboc = JSON.stringify(result);\n      } else {\n        this.testboc = 'null'\n      }\n    },\n\n\n    async sendTransaction() {\n      if (this.selectedChain.startsWith(\"aptos\")\n          || this.selectedChain.startsWith(\"movement\")\n          || this.selectedChain.startsWith(\"solana\")\n          || this.selectedChain.startsWith(\"sonic\")\n          || this.selectedChain.startsWith(\"cosmos\")) {\n        return\n      }\n      console.log(\"sendTransaction\", window.provider);\n      console.log(\"sendTransaction内容11------\", this.testTransaction);\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      if (this.testTransaction && window.provider) {\n        // eslint-disable-next-line no-undef\n        const sendData = JSON.parse(this.testTransaction);\n        try {\n          console.log(\"sendTransaction-----22method>>\", sendData.method);\n\n          let chainId = \"eip155:1\";\n          if (this.selectedChain) {\n            chainId = this.selectedChain;\n            console.log(\n              \"sendTransaction-----this.selectedChain>>\",\n              this.selectedChain\n            );\n          }\n          console.log(\"windowOpen[click_1]: \", Date.now());\n          if (chainId == \"sui:mainnet\") {\n            const adapter = new SuiAdapter(window.provider);\n            var suiResult = \"invalid result\";\n            if (this.currentSuiMethod == \"sui_signTransaction\") {\n              suiResult = await adapter.signTransaction(\n                this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (\n              this.currentSuiMethod == \"sui_signAndExecuteTransaction\"\n            ) {\n              suiResult = await adapter.signAndExecuteTransaction(\n                this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signMessage\") {\n              console.log(\"signMessage----\", this.currentSuiTransaction);\n              suiResult = await adapter.signMessage(this.currentSuiTransaction);\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signPersonalMessage\") {\n              console.log(\n                \"signPersonalMessage----\",\n                this.currentSuiTransaction\n              );\n              suiResult = await adapter.signPersonalMessage(\n                this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_testRpc\") {\n              console.log(\"test rpc----\", this.currentSuiTransaction);\n              console.log(\n                `请求数据发送 rpc ----->> ${JSON.stringify(sendData)}`\n              );\n              const res = await window.provider.request(sendData, chainId);\n              console.log(`请求数据回调 rpc ----->> ${JSON.stringify(result)}`);\n              if (typeof res == \"string\") {\n                this.testboc = res;\n              } else {\n                this.testboc = JSON.stringify(res);\n              }\n            }\n            console.log(\"windowOpen[click_2]: \", Date.now());\n            return;\n          }else if(chainId === \"ton:-239\"){\n            console.log(\n                `请求数据发送 sendTransaction ---ton-->> ${JSON.stringify(sendData)}`\n            );\n            const adapter = new OKXTONProvider(window.provider);\n            let result =  await adapter.sendTransaction(sendData)\n            console.log(\n                `请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`\n            );\n            if (typeof result == \"string\") {\n              this.testboc = result;\n            } else {\n              this.testboc = JSON.stringify(result);\n            }\n            return\n          }\n\n          if (chainId == 'btc:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var btcResult = 'invalid result'\n\n            if (this.currentBtcMethod == 'btc_signMessage') {\n              btcResult = await btcAdapter.signMessage(chainId, this.currentBtcTransaction[\"signStr\"])\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_send') {\n              btcResult = await btcAdapter.send(chainId, this.currentBtcTransaction)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signPsbt') {\n              btcResult = await btcAdapter.signPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n\n              this.hexToBase64(btcResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentBtcMethod == 'btc_signPsbts') {\n              btcResult = await btcAdapter.signPsbts(chainId, this.currentBtcTransaction.psbtHexs, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_sendInscription') {\n              btcResult = await btcAdapter.sendInscription(chainId, this.currentBtcTransaction.address, this.currentBtcTransaction.inscriptionId, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signAndPushPsbt') {\n              btcResult = await btcAdapter.signAndPushPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            }else if (this.currentBtcMethod == 'btc_sendBitcoin') {\n              btcResult = await btcAdapter.sendBitcoin(chainId, this.currentBtcTransaction.toAddress, this.currentBtcTransaction.satoshis, this.currentBtcTransaction.options)\n\n              this.testboc = JSON.stringify(btcResult)\n            }\n            return\n          }\n\n          if (chainId == 'fractal:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var fractalResult = 'invalid result'\n\n            if (this.currentFractalMethod == 'fractal_signMessage') {\n              fractalResult = await btcAdapter.signMessage(chainId, this.currentFractalTransaction['signStr'])\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_send') {\n              fractalResult = await btcAdapter.send(chainId, this.currentFractalTransaction)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signPsbt') {\n              fractalResult = await btcAdapter.signPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.hexToBase64(fractalResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentFractalMethod == 'fractal_signPsbts') {\n              fractalResult = await btcAdapter.signPsbts(chainId, this.currentFractalTransaction.psbtHexs, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_sendInscription') {\n              fractalResult = await btcAdapter.sendInscription(chainId, this.currentFractalTransaction.address, this.currentFractalTransaction.inscriptionId, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signAndPushPsbt') {\n              fractalResult = await btcAdapter.signAndPushPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            }else if (this.currentFractalMethod == 'fractal_sendBitcoin') {\n              fractalResult = await btcAdapter.sendBitcoin(chainId, this.currentFractalTransaction.toAddress, this.currentFractalTransaction.satoshis, this.currentFractalTransaction.options)\n\n              this.testboc = JSON.stringify(fractalResult)\n            }\n\n            return\n          }\n\n          console.log(`请求数据发送 sendTransaction ----->> ${JSON.stringify(sendData)}`)\n          var result = await window.provider.request(sendData, chainId)\n          console.log(`请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`)\n\n          console.log(\"windowOpen[click_3]: \", Date.now());\n          if (typeof result == \"string\") {\n            this.testboc = result;\n          } else {\n            this.testboc = JSON.stringify(result);\n          }\n          console.log(\"方法数据回调 --this.testboc--\", this.testboc);\n        } catch (error) {\n          console.error(\"方法数据回调失败 --Error--\", error.message);\n\n          if (error.code === OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n            this.testboc = error.message;\n          } else {\n            this.testboc = \"签名错误！\" + error.message;\n          }\n        }\n      } else {\n        alert(\"交易数据为空，请选则或输入交易数据。\");\n      }\n    },\n\n    hexToBase64(hexStr) {\n      var bytes = [];\n      for (var i = 0; i < hexStr.length; i += 2) {\n        bytes.push(parseInt(hexStr.substr(i, 2), 16));\n      }\n      const buffer = new Uint8Array(bytes)\n      const blob = new Blob([buffer]);\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = function (e) {\n          var base64Data = e.target.result.split(\",\")[1]\n          resolve(base64Data);\n        };\n        reader.onerror = function (e) {\n          reject(e);\n        };\n        reader.readAsDataURL(blob);\n      });\n    },\n\n    async testTonSdk() {\n      // 1. connect\n      //  create sub providers for each namespace/chain\n      let nameSpacesChains = [];\n      let optSpaceChains = [];\n\n      let solanaChains = [\n        \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n        \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n        \"sonic:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n      ];\n      let hasEip155, hasSolana, hasSui, hasBtc, hasAptos, hasTon, hasCosmos = false\n\n      let suiChains = [\n        \"sui:mainnet\",\n      ];\n\n      let btcChains = [\n        \"btc:mainnet\",\n        \"fractal:mainnet\"\n      ];\n\n      const chains = Object.entries(this.availableChains)\n          .filter((chain) => chain[1].checked)\n          .map((chain) => chain[0]);\n      console.log(`chains  ===> ${chains.values()}`)\n      chains.forEach(function (chainId) {\n        console.log(`chains.forEach chainId  ===> ${chainId}`)\n\n        if (solanaChains.includes(chainId)) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"ton\")) {\n          nameSpacesChains.push(chainId)\n          hasTon = true\n          return\n        }\n        if (typeof chainId == 'string' && (chainId.startsWith(\"aptos\") || chainId.startsWith(\"movement\"))) {\n          nameSpacesChains.push(chainId)\n          hasAptos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId)\n          hasSolana = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"cosmos\")) {\n          nameSpacesChains.push(chainId)\n          hasCosmos = true\n          return\n        }\n\n        if (suiChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`);\n          nameSpacesChains.push(chainId);\n          hasSui = true;\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`)\n          nameSpacesChains.push(chainId)\n          hasBtc = true\n          return\n        }\n\n        hasEip155 = true\n        nameSpacesChains.push(`eip155:${chainId}`)\n      })\n\n\n      optionChains.forEach(function (chainId) {\n        if (solanaChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n        if (typeof chainId == \"string\" && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (suiChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          optSpaceChains.push(chainId)\n          return\n        }\n\n        optSpaceChains.push(`eip155:${chainId}`)\n      })\n\n      console.log(`namespaceChains  ===> ${JSON.stringify(nameSpacesChains)}`);\n      var connectData = {};\n      if (nameSpacesChains && nameSpacesChains.length > 0) {\n        var requireData = {};\n        if (hasEip155) {\n          requireData.eip155 = {\n            chains: nameSpacesChains.filter((item) =>\n              item.startsWith(\"eip155\")\n            ),\n            defaultChain: nameSpacesChains.filter((item) =>\n              item.startsWith(\"eip155\")\n            )[0],\n          };\n        }\n        if (hasSolana) {\n          requireData.solana = {\n            chains: nameSpacesChains.filter(\n              (item) =>\n                item.startsWith(\"solana\") ||\n                item.startsWith(\"sonic\") ||\n                item.startsWith(\"svm\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n              (item) =>\n                item.startsWith(\"solana\") ||\n                item.startsWith(\"sonic\") ||\n                item.startsWith(\"svm\")\n            )[0],\n          };\n        }\n\n        if (hasCosmos) {\n          requireData.cosmos = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            )[0],\n          }\n        }\n        if (hasTon) {\n\n          //\n          let tonParams = {\n            ton_addr:{\n              name: 'ton_addr',\n            }\n          };\n          if (this.tonProofValue){\n            tonParams = {\n              ton_addr:{\n                name: 'ton_addr',\n              },\n              ton_proof:{\n                name: 'ton_proof',\n                payload: this.tonProofValue,\n              }\n            };\n          }\n\n\n          requireData.ton = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"ton\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"ton\"))[0],\n            params:tonParams\n          };\n        }\n\n        if (hasSui) {\n          requireData.sui = {\n            chains: nameSpacesChains.filter((item) => item.startsWith(\"sui\")),\n            defaultChain: nameSpacesChains.filter((item) =>\n              item.startsWith(\"sui\")\n            )[0],\n            rpcMap: {\n              \"sui:mainnet\": \"https://www.okx.com/fullnode/sui/discover/rpc\"\n            }\n          };\n        }\n        if (hasAptos) {\n          requireData.aptos = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\"))[0]\n          }\n        }\n\n        if (hasBtc) {\n          let btcChains = nameSpacesChains.filter(item => item.startsWith(\"btc\") || item.startsWith(\"fractal\"))\n          requireData.btc = {\n            chains: btcChains,\n            defaultChain: btcChains[0]\n          }\n        }\n        console.log(`requireData  ===> ${JSON.stringify(requireData)}`)\n        connectData['namespaces'] = requireData;\n        console.log(JSON.stringify(connectData))\n      }\n\n      if (optSpaceChains && optSpaceChains.length > 0) {\n        var optData = {\n          eip155: {\n            chains: optSpaceChains.filter((item) => item.startsWith(\"eip155\")),\n            defaultChain: optSpaceChains.filter((item) =>\n              item.startsWith(\"eip155\")\n            )[0],\n          },\n        };\n        connectData[\"optionalNamespaces\"] = optData;\n      }\n\n      if (nameSpacesChains.length === 0 && optSpaceChains.length === 0) {\n        //未选择链\n        alert(\"请选择一条链\");\n        return;\n      }\n      console.log(\"=====>connectData \");\n      console.log(connectData);\n\n      var connectMethod;\n      if (window.provider instanceof OKXUniversalConnectUI) {\n        connectMethod = window.provider.openModal(connectData);\n      } else {\n        connectMethod = window.provider.connect(connectData);\n      }\n\n      await connectMethod\n        .then(() => {\n          // 2. set defaul chain\n          this.walletAddress = \"connected\";\n          if (this.isPC()) {\n            this.showModal = false;\n          }\n        })\n        .catch((error) => {\n          console.error(\"发生了错误：\", error);\n        });\n    },\n\n    closeModal() {\n      this.showModal = false;\n    },\n\n    isPC() {\n      const userAgentInfo = navigator.userAgent;\n      console.log(\"current device ua is ===>\", userAgentInfo);\n\n      const Agents = [\n        \"Android\",\n        \"iPhone\",\n        \"SymbianOS\",\n        \"Windows Phone\",\n        \"iPad\",\n        \"iPod\",\n      ];\n      let flag = true;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = false;\n          break;\n        }\n      }\n      return flag;\n    },\n    isSafariOrChrome() {\n      const userAgentInfo = navigator.userAgent;\n      const Agents = [\"Safari\", \"Chrome\"];\n      let flag = false;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = true;\n          break;\n        }\n      }\n      return flag;\n    },\n\n    /// solana\n    async sol_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      let data = {\n        method: \"solana_signMessage\",\n        params: {\n          message: \"Hello Solana\",\n          pubkey: \"\",\n        },\n      };\n      this.testTransaction = JSON.stringify(data);\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let message = await provider.signMessage(\n          \"Hello Solana\",\n        this.selectedChain\n      );\n\n      const result1 = nacl.sign.detached.verify(\n          new TextEncoder().encode(\"Hello Solana\"),\n          message.signature,\n          new PublicKey(message.publicKey).toBytes()\n      );\n      console.log(result1)\n\n      if (typeof message == \"string\") {\n        this.testboc = result1;\n      } else {\n        this.testboc = result1;\n      }\n    },\n\n    async aptos_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      let data = {\n        address: true,\n        application: true,\n        chainId: true,\n        message: \"123 签名测试!\",\n        nonce: \"1234\"\n      }\n\n      let provider = new OKXAptosProvider(window.provider)\n      let message = await provider.signMessage(data, this.selectedChain)\n      this.testTransaction = JSON.stringify(data)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n          functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async move_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async move_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n          functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n        },\n      });\n\n      // let data = {\n      //   \"arguments\": [\"100000\",[\"0\",\"0\",\"10533\"],[\"10\",\"5\",\"5\"],[\"false\",\"false\",\"true\"]],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x3\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\",\"0x73eb84966be67e4697fc5ae75173ca6c35089e802650f75422ab49a8729704ec::coin::DooDoo\",\"0x53a30a6e5936c0a4c5140daed34de39d17ca7fcae08f947c02e979cef98a3719::coin::LSD\",\"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::CurveV1\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x54cb0bb2c18564b86e34539b9f89cfe1186e39d89fce54e1cd007b8e61673a85::bin_steps::X80\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async sol_signVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(\n        provider.getAccount(\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\").address\n      );\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n         recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signTransaction(\n        transaction,\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAndSendVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n        transaction,\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllVersionedTransactions() {\n      let provider = new OKXSolanaProvider(window.provider);\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n        [transaction],\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signTransaction() {\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n         recentBlockhash: blockhash,\n      }).add(\n        SystemProgram.transfer({\n          fromPubkey: new PublicKey(provider.getAccount().address),\n          toPubkey: new PublicKey(provider.getAccount().address),\n          lamports: 1000,\n        })\n      );\n\n      this.testTransaction = safeJsonStringify(transaction)\n      let result = await provider.signTransaction(\n        transaction,\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllTransactions() {\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n        SystemProgram.transfer({\n          fromPubkey: new PublicKey(provider.getAccount().address),\n          toPubkey: new PublicKey(provider.getAccount().address),\n          lamports: \"100\",\n        })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n        [transaction],\n        this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    getSolConnect() {\n      let rpc = \"https://www.okx.com/fullnode/sol/discover/rpc\"\n      if (this.selectedChain === \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\") {\n        rpc = \"https://www.okx.com//fullnode/sol/discover/rpc\"\n      } else if (this.selectedChain === \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\"){\n        rpc = \"https://www.okx.com/fullnode/soltestnet/discover/rpc\"\n      } else if (this.selectedChain === \"sonic:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\") {\n        rpc = \"https://www.okx.com/fullnode/sonic/testnet/discover/rpc/sonic-testnet-rpc-light\"\n      }\n      return rpc\n    },\n\n    async sol_signAndSendTransaction() {\n\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n        SystemProgram.transfer({\n          fromPubkey: new PublicKey(provider.getAccount().address),\n          toPubkey: new PublicKey(provider.getAccount().address),\n          lamports: \"100\",\n        })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n        transaction,\n        this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async cosmos_signArbitrary() {\n      let provider = new OKXCosmosProvider(window.provider)\n      let message = await provider.signArbitrary(this.selectedChain, provider.getAccount(this.selectedChain).address, \"test cosmos\")\n      if (typeof message == \"string\") {\n        this.testboc = message;\n      } else {\n        this.testboc = JSON.stringify(message);\n      }\n    },\n\n    async cosmos_signAmino(){\n      let provider = new OKXCosmosProvider(window.provider)\n      // const rpcUrl = 'https://osmosis-rpc.publicnode.com:443';\n      // const client = await StargateClient.connect(rpcUrl);\n      // const height = await client.getHeight();\n      // let address = provider.getAccount(this.selectedChain).address\n      // const sequence = await client.getSequence(address)\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      // let signDoc = makeSignDoc(\n      //     transaction.msgs,\n      //     transaction.fee,\n      //     this.selectedChain.split(\":\")[1],\n      //     transaction.memo,\n      //     transaction.accountNumber,\n      //     transaction.sequence,\n      // )\n      let signDoc = {\n        \"chain_id\": \"osmosis-1\",\n        \"account_number\": \"630104\",\n        \"sequence\": \"480\",\n        \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]},\n        \"msgs\": [{\n          \"type\": \"osmosis/poolmanager/swap-exact-amount-in\",\n          \"value\": {\n            \"sender\": \"osmo1u6lts9ng4etxj0zdaxsada6zgl8dudpgelmuyu\",\n            \"routes\": [{\n              \"pool_id\": \"1096\",\n              \"token_out_denom\": \"ibc/987C17B11ABC2B20019178ACE62929FE9840202CE79498E29FE8E5CB02B7C0A4\"\n            }, {\n              \"pool_id\": \"611\",\n              \"token_out_denom\": \"ibc/27394FB092D2ECCD56123C74F36E4C1F926001CEADA9CA97EA622B25F41E5EB2\"\n            }],\n            \"token_in\": {\"denom\": \"uosmo\", \"amount\": \"100\"},\n            \"token_out_min_amount\": \"8\"\n          }\n        }],\n        \"memo\": \"FE\",\n        \"timeout_height\": \"23603788\",\n        \"signOptions\": {\n          \"useOneClickTrading\": false,\n          \"preferNoSetFee\": true,\n          \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]}\n        }\n      }\n\n\n\n\n\n\n\n      // let signOption = {\n      //   memo: true, // optional\n      //   fee: true, // optional\n      //   gasRate: {\n      //     // optional\n      //     average: \"0.2\",\n      //     low: \"0.02\",\n      //     tiny: \"0.002\",\n      //   },\n      // }\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signAmino(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, signDoc)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    messageToBuffer(message) {\n      var buffer = Buffer.from([]);\n      try {\n        if (typeof message === \"string\") {\n          buffer = Buffer.from(message.replace(\"0x\", \"\"), \"hex\");\n        } else {\n          buffer = Buffer.from(message);\n        }\n      } catch (err) {\n        console.log(`messageToBuffer error: ${err}`);\n      }\n      return buffer;\n    },\n\n\n\n    async cosmos_signDirect() {\n      let provider = new OKXCosmosProvider(window.provider)\n\n      let signDoc = {\n        \"bodyBytes\": this.messageToBuffer(\"0x0ac1010a292f6962632e6170706c69636174696f6e732e7472616e736665722e76312e4d73675472616e736665721293010a087472616e7366657212096368616e6e656c2d301a0d0a05756f736d6f120431303030222b6f736d6f3175366c7473396e67346574786a307a64617873616461367a676c386475647067656c6d7579752a2d636f736d6f733175366c7473396e67346574786a307a64617873616461367a676c386475647067337967766a773207080410ebe3f90a3880b0bcafd18cec8218\"),\n        \"authInfoBytes\": this.messageToBuffer(\"0x0a510a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a2102446e19e94ac0e83ea896d2712507577eb39fbdd2d6ae9f0fc0b9759f1fbaba9012040a02080118e00312140a0e0a05756f736d6f1205323530303010859a11\"),\n        \"chainId\": \"osmosis-1\",\n        \"accountNumber\": \"630104\",\n      }\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signDirect(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, transaction)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    // Sui methods\n    sui_getAccount() {\n      let provider = new SuiAdapter(window.provider)\n      let result = provider.getAccount()\n      if (typeof result == \"string\") {\n        this.testboc = result\n      } else {\n        this.testboc = JSON.stringify(result)\n      }\n    },\n\n    //对单个交易签名（不发送)\n    async sui_signMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.testTransaction = JSON.stringify(input);\n      this.currentSuiTransaction = input;\n      this.currentSuiMethod = \"sui_signMessage\";\n    },\n\n    async sui_signPersonalMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.testTransaction = JSON.stringify(input);\n      this.currentSuiTransaction = input;\n      this.currentSuiMethod = \"sui_signPersonalMessage\";\n    },\n\n    //签名并发送交易\n    sui_signAndExecuteTransaction() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n        \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.testTransaction = JSON.stringify(input);\n      this.currentSuiTransaction = input;\n      this.currentSuiMethod = \"sui_signAndExecuteTransaction\";\n    },\n\n    async deeplinkActionTest() {\n      // let url = \"okx://web3/wallet/connect\"\n      let url =\n        \"https://www.okx.com/download?deeplink=okx%3A%2F%2Fweb3%2Fwallet%2Fconnect\";\n      await this.performAsyncTask();\n      window.open(url, \"_self\");\n    },\n    async performAsyncTask() {\n      // 模拟耗时的异步操作\n      return new Promise((resolve) => {\n        setTimeout(() => {\n          resolve(\"Task completed\");\n        }, 5000); // 模拟耗时5秒\n      });\n    },\n\n    sui_signTransaction2() {\n      // 定义要转移的金额和目标地址\n      const amount = 109; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n        \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n      this.testTransaction = JSON.stringify(input);\n      this.currentSuiTransaction = input;\n      this.currentSuiMethod = \"sui_signTransaction\";\n    },\n\n    //对交易块进行签名\n    async sui_signTransaction() {\n      // const tx = new Transaction();\n      // console.log(tx)\n      // // 定义要转移的金额和目标地址\n      // const amount = 100; // 需要转移的金额\n      // const recipientAddress = '0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2'; // 目标地址\n      // const [coin] = tx.splitCoins(tx.gas, [amount]);\n      // tx.setSender('0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2')\n      // tx.transferObjects([coin], recipientAddress);\n      // console.log(\"====rpcUrl: \", rpcUrl)\n\n      let str =\n        '{\"version\":1, \"expiration\":null,\"gasConfig\":{\"payment\":[{\"objectId\":\"0x04a1673fa847afa845e477925c271cb3e8cf0d19cfb830e8c3e841adc299cbca\",\"version\":\"391804724\",\"digest\":\"AHXon1Qvb1xUj5r7aaHyHfLgGhdeNXQ1V3RaNW755mVK\"}],\"owner\":\"0xe62ee1c436125b5b6224cb11b0fa9fbf2c313743aea84eead0450ab49dd0d6ed\",\"price\":\"750\",\"budget\":\"8177120\"},\"inputs\":[{\"kind\":\"Input\",\"type\":\"object\",\"index\":0,\"value\":\"0x0000000000000000000000000000000000000000000000000000000000000006\"},{\"kind\":\"Input\",\"type\":\"object\",\"index\":1,\"value\":\"0xbb4e2f4b6205c2e2a2db47aeb4f830796ec7c005f88537ee775986639bc442fe\"},{\"kind\":\"Input\",\"type\":\"object\",\"index\":2,\"value\":\"0x96df0fce3c471489f4debaaa762cf960b3d97820bd1f3f025ff8190730e958c5\"},{\"kind\":\"Input\",\"index\":3,\"value\":{\"Pure\":[0]},\"type\":\"pure\"},{\"kind\":\"Input\",\"index\":4,\"value\":{\"Pure\":[0,202,154,59,0,0,0,0]},\"type\":\"pure\"},{\"kind\":\"Input\",\"index\":5,\"value\":{\"Pure\":[0,202,154,59,0,0,0,0]},\"type\":\"pure\"},{\"kind\":\"Input\",\"type\":\"object\",\"index\":6,\"value\":\"0xaaf735bf83ff564e1b219a0d644de894ef5bdc4b2250b126b2a46dd002331821\"},{\"kind\":\"Input\",\"type\":\"object\",\"index\":7,\"value\":\"0xf87a8acb8b81d14307894d12595541a73f19933f88e1326d5be349c7a6f7559c\"}],\"transactions\":[{\"kind\":\"SplitCoins\",\"coin\":{\"kind\":\"GasCoin\"},\"amounts\":[{\"kind\":\"Input\",\"index\":4,\"value\":{\"Pure\":[0,202,154,59,0,0,0,0]},\"type\":\"pure\"}]},{\"kind\":\"MoveCall\",\"target\":\"0x834a86970ae93a73faf4fff16ae40bdb72b91c47be585fff19a2af60a19ddca3::incentive_v2::entry_deposit\",\"typeArguments\":[\"0x2::sui::SUI\"],\"arguments\":[{\"kind\":\"Input\",\"type\":\"object\",\"index\":0,\"value\":\"0x0000000000000000000000000000000000000000000000000000000000000006\"},{\"kind\":\"Input\",\"type\":\"object\",\"index\":1,\"value\":\"0xbb4e2f4b6205c2e2a2db47aeb4f830796ec7c005f88537ee775986639bc442fe\"},{\"kind\":\"Input\",\"type\":\"object\",\"index\":2,\"value\":\"0x96df0fce3c471489f4debaaa762cf960b3d97820bd1f3f025ff8190730e958c5\"},{\"kind\":\"Input\",\"index\":3,\"value\":{\"Pure\":[0]},\"type\":\"pure\"},{\"kind\":\"Result\",\"index\":0},{\"kind\":\"Input\",\"index\":5,\"value\":{\"Pure\":[0,202,154,59,0,0,0,0]},\"type\":\"pure\"},{\"kind\":\"Input\",\"type\":\"object\",\"index\":6,\"value\":\"0xaaf735bf83ff564e1b219a0d644de894ef5bdc4b2250b126b2a46dd002331821\"},{\"kind\":\"Input\",\"type\":\"object\",\"index\":7,\"value\":\"0xf87a8acb8b81d14307894d12595541a73f19933f88e1326d5be349c7a6f7559c\"}]}]}';\n\n      /// 从给定的交易中，反序列化一个transaction对象\n      const tx = SuiTransaction.from(str);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 记录当前交易的transaction，用来显示\n      this.testTransaction = JSON.stringify(input);\n      /// 记录当前的transaction对象，用来交易\n      this.currentSuiTransaction = input;\n      /// 记录当前的交易方法，用来SuiAdaper分发\n      this.currentSuiMethod = \"sui_signTransaction\";\n    },\n\n    async sui_requestRpc() {\n      let provider = window.provider;\n      provider.setDefaultChain(\n        `sui:mainnet`,\n        `https://fullnode.mainnet.sui.io:443`\n      );\n      var data = {\n        method: \"suix_getBalance\",\n        params: [\n          \"0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae\",\n          \"0x168da5bf1f48dafc111b0a488fa454aca95e0b5e::usdc::USDC\",\n        ],\n      };\n      this.testTransaction = JSON.stringify(data);\n      this.currentSuiTransaction = JSON.stringify(data);\n      this.currentSuiMethod = \"sui_testRpc\";\n    },\n\n    async sui_signAndExecuteTransaction_stake() {\n      if (this.testboc.length == 0) {\n        alert(\"输入input.serilize()读取到的参数\");\n        return;\n      }\n      let str = this.testboc;\n\n      let tx;\n      try {\n        /// 从给定的交易中，反序列化一个transaction对象\n        tx = SuiTransaction.from(str);\n      } catch (error) {\n        alert(\"参数错误\");\n      }\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 记录当前交易的transaction，用来显示\n      this.testTransaction = JSON.stringify(input);\n      /// 记录当前的transaction对象，用来交易\n      this.currentSuiTransaction = input;\n      /// 记录当前的交易方法，用来SuiAdaper分发\n      this.currentSuiMethod = \"sui_signAndExecuteTransaction\";\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 102; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n        \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n        input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n\n      this.testTransaction = JSON.stringify(input);\n      this.currentSuiTransaction = input;\n      this.currentSuiMethod = \"sui_signTransaction\";\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signAndExecuteTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n        \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n        input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n\n      this.testTransaction = JSON.stringify(input);\n      this.currentSuiTransaction = input;\n      this.currentSuiMethod = \"sui_signAndExecuteTransaction\";\n    },\n\n    /// generate txBytes and txSerialize\n    async generateTsBytesAndSerizlize(input) {\n      /// txBytes and txSerialize may be constructed in advance by the dapp side\n      let resultTuple = [\"\", \"\"];\n      if (\n        \"txBytes\" in input &&\n        input.txBytes.length > 0 &&\n        \"txSerialize\" in input &&\n        input.txSerialize.length > 0\n      ) {\n        resultTuple = [input.txBytes, input.txSerialize];\n      }\n\n      /// Otherwise, a transactionBlock parameter is required.\n      if (!(\"transactionBlock\" in input)) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      if (this.walletAddress != \"connected\") {\n        alert(\"请先连接钱包\");\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      let senderAccounts = window.provider.requestAccountsWithNamespace(\"sui\");\n      if (senderAccounts.length == 0) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      try {\n        let rpcUrl = getFullnodeUrl(\"mainnet\");\n        rpcUrl = \"https://www.okx.com/fullnode/sui/discover/rpc\"\n        const suiClient = new SuiClient({ url: rpcUrl });\n\n        /// sender is required\n        input.transactionBlock.setSender(senderAccounts[0]);\n        const result = await input.transactionBlock.build({\n          client: suiClient,\n        });\n        const txBytes = Buffer(result).toString(\"base64\");\n        const txSerialize = await SuiTransaction.from(txBytes).toJSON();\n        resultTuple = [txBytes, txSerialize];\n      } catch (error) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      return new Promise((resolve) => {\n        resolve(resultTuple)\n      })\n    },\n\n    btc_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentBtcTransaction = params\n      this.currentBtcMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n\n    fractal_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentFractalTransaction = params\n      this.currentFractalMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n    handleModalsSelect(modals) {\n      selectedModals = modals;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedDeepLink,\n            modals: modals.length === 3 ? \"all\" : modals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n\n    handleReturnStrategySelect(returnStrategy) {\n      selectedReturnStrategy = returnStrategy === \"deeplink\" ? this.deeplink : returnStrategy;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n\n    handleReturnStrategyDeeplink(deeplink) {\n      selectedReturnStrategy = deeplink;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: deeplink,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n\n    handleLanguageSelect(language) {\n      selectedLanguage = language;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: language,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n\n    handleThemeSelect(theme) {\n      selectedTheme = theme;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: theme,\n          },\n        };\n      }\n    },\n  },\n  created() {\n    // for (const eventName of Object.values(OKX_TON_CONNECTION_AND_TRANSACTION_EVENT)) {\n    //   console.log(eventName);\n    //   window.addEventListener(eventName, (event) => {\n    //     console.log(eventName,event.detail)\n    //     this.currentStatus = eventName\n    //   });\n    // }\n  },\n\n  mounted() {\n\n    var scriptTag = document.createElement(\"script\");\n    scriptTag.src = \"https://telegram.org/js/telegram-web-app.js\";\n    scriptTag.id = \"tgsdk\";\n    document.getElementsByTagName('head')[0].appendChild(scriptTag);\n\n    this.connectReady = true;\n    document.title = \"OKX Connect\";\n    var initCall;\n    if (!this.withUI) {\n      initCall = OKXUniversalProvider.init({\n        dappMetaData: {\n          name: \"univer test dapp\",\n          icon: \"https://avatars.githubusercontent.com/u/37784886\",\n        },\n      });\n    } else {\n      initCall = OKXUniversalConnectUI.init({\n        dappMetaData: {\n          icon: \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\",\n          name: \"OKX WalletConnect UI Demo\",\n        },\n        actionsConfiguration: {\n          returnStrategy: selectedReturnStrategy,\n          modals: \"all\",\n        },\n        language: selectedLanguage,\n        uiPreferences: {\n          theme: selectedTheme\n        },\n      });\n    }\n\n    initCall.then((provider) => {\n      window.provider = provider;\n      console.log(\"init finished:\", provider);\n      console.log(\"init finished session:\", JSON.stringify(provider.session));\n\n      if (provider.session?.namespaces) {\n        const newChains = [];\n        console.log(\"namespaces\", provider.session.namespaces);\n        Object.entries(provider.session.namespaces).forEach(([key, value]) => {\n          if (key === \"eip155\") {\n            value.chains.forEach((chain) => {\n              newChains.push(parseInt(chain.substring(7)));\n            });\n          } else if (key === \"aptos\") {\n            value.chains.forEach((chain) => {\n              if (chain === \"aptos:637\") {\n                newChains.push(\"aptos:mainnet\")\n              } else {\n                newChains.push(\"movement:testnet\")\n              }\n            })\n          }\n          else {\n            value.chains.forEach((chain) => {\n              newChains.push(chain);\n            });\n          }\n        });\n\n        console.log(\"existing chains:\", newChains);\n        this.initChains(newChains);\n      } else {\n        this.initChains([]);\n      }\n\n      provider.on(\"display_uri\", (uri) => {\n        if (this.isPC()) {\n          if (uri && !this.withUI) {\n            this.qrValue = uri;\n            this.showModal = true;\n          }\n        }\n        console.log(\"通知>>>display_uri  ==> \", uri);\n      });\n\n      provider.on(\"connect\", (session) => {\n        console.log(\"通知>>>get connect session\", session);\n      });\n      provider.on(\"reconnect\", (session) => {\n        console.log(\"通知>>>get reconnect session\", session);\n        this.walletAddress = \"connected\";\n      });\n      provider.on(\"disconnect\", ({ topic }) => {\n        console.log(`通知>>>get disconnect  ${topic}`);\n        this.walletAddress = \"disconnecteddddd\";\n      });\n      provider.on(\"session_delete\", ({ topic }) => {\n        console.log(`通知>>>get session_delete  ${topic}`);\n      });\n      provider.on(\"session_update\", (session) => {\n        console.log(`通知>>>get session_update `, JSON.stringify(session));\n      });\n    });\n  },\n};\n</script>\n","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signMessage()\">signMessage(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_send()\">send(BTC)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendBitcoin()\">sendBitcoin(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signPsbt_up()\">signPsbt(上架NFT)</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"btc_signAndPushPsbt_up()\">signAndPushPsbt(上架NFT)</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在OKX App选择要上架的Btc NFT，点击【上架】\n        </li>\n        <li>\n          2. 弹出签名面板，点开高级选项，查看\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出上架流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendInscription()\">sendInscription(BTC)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Btc NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount\n    }\n  },\n  methods: {\n    btc_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to UniSat!\\n\\nClick to sign in and accept the UniSat Terms of Service (https://unisat.io/terms-of-service.html) and Privacy Policy (https://unisat.io/privacy-policy.html).\\n    \\nThis request will not trigger a blockchain transaction.\\n    \\nYour authentication status will reset after 24 hours.\\n    \\nWallet address:\\nbc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\\n    \\nNonce:\\n162d70e3-8c21-4cfd-9a22-9bf0a4b7be51\\n\"\n      };\n      this.$emit('generateTransactionParams', params, \"btc_signMessage\")\n    },\n\n    btc_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"btc_send\")\n    },\n\n    btc_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"btc_sendBitcoin\")\n    },\n\n    btc_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"btc_signPsbt\")\n    },\n\n    btc_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"btc_signAndPushPsbt\")\n    },\n\n    btc_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"btc_sendInscription\")\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./BtcTransactionPanel.vue?vue&type=template&id=17e9106e&scoped=true\"\nimport script from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./BtcTransactionPanel.vue?vue&type=style&index=0&id=17e9106e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-17e9106e\"]])\n\nexport default __exports__","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signMessage()\">signMessage(Fractal)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_send()\">send(Fractal)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_sendBitcoin()\">sendBitcoin(Fractal)</el-button>\n\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signPsbt_up()\">signPsbt(上架NFT)</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_signAndPushPsbt_up()\">signAndPushPsbt(上架NFT)</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在OKX App选择要上架的Fractal NFT，点击【上架】\n        </li>\n        <li>\n          2. 弹出签名面板，点开高级选项，查看\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出上架流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_sendInscription()\">sendInscription(Fractal)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Fractal NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount\n    }\n  },\n  methods: {\n    fractal_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to UniSat!\\n\\nClick to sign in and accept the UniSat Terms of Service (https://unisat.io/terms-of-service.html) and Privacy Policy (https://unisat.io/privacy-policy.html).\\n    \\nThis request will not trigger a blockchain transaction.\\n    \\nYour authentication status will reset after 24 hours.\\n    \\nWallet address:\\nbc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\\n    \\nNonce:\\n162d70e3-8c21-4cfd-9a22-9bf0a4b7be51\\n\"\n      };\n      this.$emit('generateTransactionParams', params, \"fractal_signMessage\")\n    },\n\n    fractal_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_send\")\n    },\n\n    fractal_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_sendBitcoin\")\n    },\n\n    fractal_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"fractal_signPsbt\")\n    },\n\n    fractal_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"fractal_signAndPushPsbt\")\n    },\n\n    fractal_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"fractal_sendInscription\")\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./FractalTransactionPanel.vue?vue&type=template&id=02b5b8a5&scoped=true\"\nimport script from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./FractalTransactionPanel.vue?vue&type=style&index=0&id=02b5b8a5&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-02b5b8a5\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=5d290591&scoped=true\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=5d290591&scoped=true&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-5d290591\"]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport ElementPlus from 'element-plus'\nimport 'element-plus/dist/index.css'\nimport App from './App.vue'\n\nconst app = createApp(App)\n\napp.use(ElementPlus)\napp.mount('#app')","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkokxconnectdemo\"] = self[\"webpackChunkokxconnectdemo\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(13338); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["require","Object","defineProperty","exports","value","AptosUtils","getTransaction","o","transaction","rawTransaction","payload","entryFunction","typeArgs","type_args","typeArguments","Array","forEach","typeTag","push","toString","realArguments","this","getTypeArguments","args","i","arguments","function","module_name","address","data","name","identifier","function_name","type","type_arguments","getArguments","array","j","length","y","values","subArray","dealArrayElements","e","Uint8Array","t","isArray","r","n","assign","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","next","rejected","result","done","then","apply","__importDefault","mod","__esModule","OKXAptosProvider","buffer_1","AptosUtils_1","core_1","tweetnacl_1","constructor","provider","chainsSet","Set","getUniversalProvider","getConnectedNamespace","defaultNetwork","network","requestDefaultChainWithNamespace","NameSpaceKeyAptos","currentChainId","getRealChainId","chainId","size","Error","_a","_b","_c","session","namespaces","chains","chain","add","getAccount","_d","_e","_f","_g","_h","_j","account","accounts","filter","startsWith","logDebug","accountArray","split","console","log","extra","publicKey","undefined","signMessage","realChain","prefix","message","nonce","fullMessage","application","window","location","protocol","hostname","buffer","Buffer","from","hex","bufferToHex","signedMessage","request","successData","slice","signStr","verified","default","sign","detached","verify","signature","error","signTransaction","tx","signAndSubmitTransaction","buf","OKXAptosProvider_1","enumerable","get","OKXSolanaProvider","web3_js_1","bs58_1","map","defaultChainMap","has","caip","includes","Map","set","realMessage","wallet","appName","encode","TextEncoder","decode","PublicKey","serializedMessage","serialize","requireAllSignatures","verifySignatures","getSignedTransaction","signAllTransactions","transactions","VersionedTransaction","response","newTransactions","JSON","parse","s","c","Transaction","deserialize","signAndSendTransaction","method","transactionStr","resultTx","OKXSolanaProvider_1","OKXBtcProvider","_1","getAddressForChainId","ns","checkChainId","OKXConnectError","OKX_CONNECT_ERROR_CODES","UNKNOWN_ERROR","params","ret","errorData","sendBitcoin","toAddress","satoshis","options","to","feeRate","send","txhash","input","checkParameters","signPsbt","psbtHex","signPsbts","psbtResults","results","catch","psbtHexs","signAndPushPsbt","sendInscription","inscriptionId","extension","coinId","protocolId","atomicSuffix","ordinalsSuffix","toLowerCase","endsWith","removeSuffix","scenario","txType","batchBean","coinAmount","nftId","str","suffix","keys","unexistKeys","key","join","namespaceKey","_","OKXCosmosProvider","NameSpaceKeyCosmos","algo","bech32Address","pubKey","hexToUint8Array","signArbitrary","signerAddress","base64Encoded","btoa","signDoc","chain_id","account_number","sequence","fee","gas","amount","msgs","memo","signData","signAmino","signOptions","resData","signed","signDirect","object","bodyBytes","authInfoBytes","accountNumber","res","messageToBuffer","replace","err","arr","output","x","padStart","hexString","arrayBuffer","byteValue","parseInt","substr","isNaN","OKXUniversalProvider","utils_1","eip155_1","sui_1","constants_1","eventemitter3_1","client_1","namespaces_1","solana_1","btc_1","aptos_1","ton_1","cosmos_1","init","opts","initialize","rpcProviders","events","providerOpts","connected","NOT_CONNECTED_ERROR","namespace","requestParam","buildRequestParamFromRequest","getProvider","stringify","validateChain","keyArr","enable","client","connectOpts","connect","requestAccounts","disconnect","called","onRequestSent","disconnectAndEmit","cleanup","engine","connectionManager","emit","topic","aptosChainNameToGeneralId","replaceAptos","aptosNameSpace","realNS","replaceAptosInner","aptos","optionAptosNameSpace","optionalNamespaces","realOptionNS","defaultChain","disconnectInner","getCurrentConnectionReady","ALREADY_CONNECTED_ERROR","sessionConfig","openUniversalUrl","isMobileUserAgent","setNamespaces","onConnect","on","event","listener","once","removeListener","off","setDefaultChain","rpcUrl","test","checkStorage","sessionInfoStr","getFromStore","sessionInfo","restoreconnect","createProviders","setTimeout","url","origin","dappMetaData","setGlobal","SignClient","providersToCreate","parseNamespaceKey","namespacesValue","currentNameSpace","Eip155Provider","opts1","solanaProvider","sonicProvider","svmProvider","optsTon","tonProvider","optsSui","suiProvider","SuiProvider","optsBtc","btcProvider","fbProvider","aptosProvider","cosmosProvider","registerEventListeners","addDisconnectListener","PROVIDER_EVENTS","DEFAULT_CHAIN_CHANGED","caip2ChainId","onChainChanged","UPDATE_NAMESPACES","nameSpaces","nameSpacekey","persist","icon","dappInfo","redirect","isChainNamespaceInSession","chainsArr","defaultNamespace","getDefaultChain","namespaceStr","requestAccountsWithNamespace","caip2Chain","sessionProperties","saveSessionContent","getSessionContent","showRequestModal","__createBinding","create","m","k","k2","desc","getOwnPropertyDescriptor","writable","configurable","__exportStar","p","prototype","hasOwnProperty","call","NameSpaceKeyBtc","NameSpaceKeySui","OKXUniversalProvider_1","OKXBtcProvider_1","OKXCosmosProvider_1","ISignClient","metaData","super","Engine","ConnectionManager","connectRequest","requestAccountItem","requiredNamespaces","nameSpaceToConnectWalletNameSpace","universalConnect","metadata","info","encodeParams","encodeConnectParams","getUniversalLink","getAppWalletDeepLink","fillParamsToSession","isIos","openOKXWallet","requestId","code","onAck","getGlobal","openOKXDeeplinkWithFallback","standardDeeplink","getAccountsChains","isCaipNamespace","NameSpaceKeyEip155","NameSpaceKeySOL","NameSpaceKeyTON","mergeRpcMap","targetRpcMap","sourceRpcMap","mergeNamespaces","target","source","rpcMap","some","GENERIC_SUBPROVIDER_NAME","RPC_URL","STORAGE","CONTEXT","WC_VERSION","PROTOCOL","RELAY_URL","LOGGER","JsonRpcConnection_1","JsonRpcProvider_1","AptosProvider","httpProviders","createHttpProviders","updateNamespace","getAccounts","methods","METHOD_NOT_SUPPORTED","setHttpProvider","http","parsedChainId","getChainId","parsedRpc","getRpcUrl","httpProvider","createHttpProvider","getHttpProvider","rpc","JsonRpcProvider","JsonRpcConnection","BtcProvider","logError","CosmosProvider","isRecord","updateRequestParams","isDic","switchChainId","decimalNumber","selectedChainId","chainNum","paramsChainId","paramsChainString","String","Number","adaptArray","paramsArr","firstParam","messageObj","addressObj","isEqual","chainAddress","messages","typedDataJson","firstObj","secondObj","hexChainId","getHexChainIdFromRequest","isChainApproved","handleSwitchChain","addEthereumChain","resultData","nameSpace","rpcUrls","eip155","cross_fetch_1","core_2","DEFAULT_HTTP_HEADERS","Accept","DEFAULT_HTTP_METHOD","DEFAULT_FETCH_OPTS","headers","disableProviderPing","EventEmitter","isAvailable","registering","isHttpUrl","connecting","open","register","close","onClose","body","safeJsonStringify","json","onPayload","onError","id","jsonrpc","onOpen","parseError","safeJsonParse","formatJsonRpcError","parseConnectionError","types_1","IJSONRpcProvider","connection","hasRegisteredEventListeners","setConnection","context","requestStrict","formatJsonRpcRequest","getBigIntRpcId","isJsonRpcError","isJsonRpcResponse","reason","_error","SolanaProvider","getPubkey","getWalletAddress","components","__rest","indexOf","getOwnPropertySymbols","propertyIsEnumerable","TONProvider","validUntil","newParams","fromAddress","ton_addr","boc","IJSONRpcConnection","opt","globals","projectId","parseChainId","reference","convertChainIdToNumber","mergeArrays","CAIP_DELIMITER","a","b","_createElementBlock","_hoisted_1","_createVNode","_component_el_container","_withCtx","_component_el_header","_cache","_createTextVNode","_component_el_main","_component_el_card","class","header","_createElementVNode","_component_el_row","_component_el_col","span","_toDisplayString","$options","_ctx","currentStatus","_component_el_checkbox","modelValue","withUI","$event","onChange","handleWithUI","style","_component_el_select","modals","placeholder","handleModalsSelect","multiple","_component_el_option","label","returnStrategy","handleReturnStrategySelect","_Fragment","_renderList","returnStrategies","strategy","_createBlock","_component_el_input","deeplink","handleReturnStrategyDeeplink","disabled","_createCommentVNode","language","handleLanguageSelect","locales","locale","theme","handleThemeSelect","THEME","LIGHT","DARK","tonProofValue","gutter","align","availableChains","item","checked","areChainsInit","isOptionalChecked","handleOptionChange","_component_el_button","onClick","connectBtnClicked","connectStatusStr","disconnectAction","walletAddress","disconnectStatusStr","_Teleport","showModal","closeModal","_withModifiers","_component_qrcode_vue","qrValue","level","_component_el_tabs","activeTab","onTabClick","clickActiveTab","_component_el_tab_pane","eth_requestAccounts","eth_chainId","wallet_switchEthereumChain","wallet_addEthereumChain","personal_sign","eth_signTypedData_v4","eth_sendTransaction_transfer","eth_sendTransaction_approve","eth_sendTransaction_mint","wallet_watchAsset","wallet_testRpc","eth_sendTransaction_swap","ton_getAccount","ton_sendTransaction","sol_signMessage","sol_signTransaction","sol_signVersionedTransaction","sol_signAllTransactions","sol_signAllVersionedTransactions","sol_signAndSendTransaction","sol_signAndSendVersionedTransaction","sui_getAccount","sui_signMessage","sui_signPersonalMessage","sui_signTransaction2","sui_signAndExecuteTransaction","sui_requestRpc","sui_signTransaction_pre_execution","sui_signAndExecuteTransaction_pre_execution","sui_signTransaction","sui_signAndExecuteTransaction_stake","_component_BTCPanel","onGenerateTransactionParams","btc_generateTransactionParams","_component_FractalPanel","fractal_generateTransactionParams","aptos_signMessage","aptos_signTransaction","aptos_signAndSubmitTransaction","move_signTransaction","move_signAndSubmitTransaction","cosmos_signArbitrary","cosmos_signAmino","cosmos_signDirect","xs","sm","testTransaction","rows","testboc","sendTransaction","testTransactionStr","btc_signMessage","$setup","sendAmount","clearable","btc_send","sendSatoshisAmount","btc_sendBitcoin","btc_signPsbt_up","btc_signAndPushPsbt_up","receiver","btc_sendInscription","props","msg","setup","ref","$emit","alert","autoFinalized","__exports__","fractal_signMessage","fractal_send","fractal_sendBitcoin","fractal_signPsbt_up","fractal_signAndPushPsbt_up","fractal_sendInscription","VConsole","allChains","optionChains","selectedModals","selectedReturnStrategy","selectedDeepLink","selectedLanguage","selectedTheme","QrcodeVue","BTCPanel","FractalPanel","testTopic","testPublicKey","testProofPayload","pendingDeepLink","logList","connectReady","localPubKey","localSecKey","selectedChain","ProofPayloadVerify","showVerifyRow","localStorage","getItem","isChecked","setItem","reload","delete","computed","selectedChains","initChains","newChains","updatedChains","tab","tabName","Date","now","testTonSdk","blockExplorerUrls","chainName","nativeCurrency","symbol","decimals","dataETH","dataPolygon","types","EIP712Domain","Person","Mail","primaryType","domain","version","verifyingContract","contents","maxPriorityFeePerGas","maxFeePerGas","gasPrice","gasLimit","image","adapter","OKXTONProvider","sendData","SuiAdapter","suiResult","currentSuiMethod","currentSuiTransaction","signAndExecuteTransaction","signPersonalMessage","btcAdapter","btcResult","currentBtcMethod","currentBtcTransaction","hexToBase64","bs64Str","fractalResult","currentFractalMethod","currentFractalTransaction","USER_REJECTS_ERROR","hexStr","bytes","blob","Blob","reader","FileReader","onload","base64Data","onerror","readAsDataURL","hasEip155","hasSolana","hasSui","hasBtc","hasAptos","hasTon","nameSpacesChains","optSpaceChains","solanaChains","hasCosmos","suiChains","btcChains","entries","connectMethod","connectData","requireData","solana","cosmos","tonParams","ton_proof","ton","sui","btc","optData","OKXUniversalConnectUI","openModal","isPC","userAgentInfo","navigator","userAgent","Agents","flag","v","isSafariOrChrome","pubkey","result1","nacl","toBytes","config","AptosConfig","Network","MAINNET","Aptos","build","simple","sender","functionArguments","Connection","getSolConnect","blockhash","getLatestBlockhash","versionedTransactionMessage","TransactionMessage","payerKey","recentBlockhash","instructions","SystemProgram","transfer","fromPubkey","toPubkey","lamports","compileToV0Message","feePayer","uint8Array","recipientAddress","SuiTransaction","coin","splitCoins","transferObjects","transactionBlock","showEffects","deeplinkActionTest","performAsyncTask","txBytes","txSerialize","generateTsBytesAndSerizlize","resultTuple","senderAccounts","getFullnodeUrl","suiClient","SuiClient","setSender","toJSON","uiOptions","actionsConfiguration","uiPreferences","created","mounted","initCall","scriptTag","document","createElement","src","getElementsByTagName","appendChild","title","substring","uri","render","app","createApp","App","use","ElementPlus","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","loaded","__webpack_modules__","amdO","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","every","splice","getter","d","definition","g","globalThis","Function","obj","prop","Symbol","toStringTag","nmd","paths","children","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}