{"version":3,"file":"js/app.54a4f4da.js","mappings":"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","sources":["webpack://okxconnectdemo/./src/App.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue?1b44","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue?e4fb","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue?aa83","webpack://okxconnectdemo/./src/components/StarknetTransactionPanel.vue","webpack://okxconnectdemo/./src/components/StarknetTransactionPanel.vue?1a06","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue?089a","webpack://okxconnectdemo/./src/App.vue?7ccd","webpack://okxconnectdemo/./src/main.js","webpack://okxconnectdemo/webpack/bootstrap","webpack://okxconnectdemo/webpack/runtime/amd options","webpack://okxconnectdemo/webpack/runtime/chunk loaded","webpack://okxconnectdemo/webpack/runtime/compat get default export","webpack://okxconnectdemo/webpack/runtime/create fake namespace object","webpack://okxconnectdemo/webpack/runtime/define property getters","webpack://okxconnectdemo/webpack/runtime/global","webpack://okxconnectdemo/webpack/runtime/hasOwnProperty shorthand","webpack://okxconnectdemo/webpack/runtime/make namespace object","webpack://okxconnectdemo/webpack/runtime/node module decorator","webpack://okxconnectdemo/webpack/runtime/jsonp chunk loading","webpack://okxconnectdemo/webpack/startup"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <el-container>\n      <el-header>OKX Connect</el-header>\n      <el-main>\n        <el-card class=\"wallet-info\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Wallet Info</div>\n          </template>\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Wallet Address:</strong> {{ getWalletAddress }}\n            </el-col>\n          </el-row>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Status :</strong> {{ currentStatus }}\n            </el-col>\n          </el-row>\n\n        </el-card>\n\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Connect Params</div>\n          </template>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"12\">\n              <el-checkbox v-model=\"withUI\" @change=\"handleWithUI\">\n                Show UI\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"12\">\n              <el-checkbox v-model=\"universalToTG\" @change=\"handleUniversalToTG\">\n                Use mini wallet\n              </el-checkbox>\n            </el-col>\n          </el-row>\n\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Modals</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"modals\" placeholder=\"Modals\" @change=\"handleModalsSelect\" multiple>\n                <el-option label=\"Before\" value=\"before\"/>\n                <el-option label=\"Success\" value=\"success\"/>\n                <el-option label=\"Error\" value=\"error\"/>\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center; justify-content: space-between;\">\n            <el-col :span=\"6\" style=\"gap: 2px\">\n              <p style=\"font-size: 11pt; margin: 0px\">Return Strategy</p>\n              <p style=\"font-size: 9pt; margin: 0px\">(Mobile only)</p>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-select\n                  v-model=\"returnStrategy\"\n                  @change=\"handleReturnStrategySelect\"\n                  placeholder=\"Return Strategy\"\n              >\n                <el-option\n                    v-for=\"strategy in returnStrategies\"\n                    :key=\"`return-strategy-select-option-${strategy}`\"\n                    :label=\"strategy\"\n                    :value=\"strategy\"\n                />\n              </el-select>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-input\n                  v-if=\"returnStrategy === 'deeplink'\"\n                  v-model=\"deeplink\"\n                  @change=\"handleReturnStrategyDeeplink\"\n                  placeholder=\"Deeplink\"\n                  :disabled=\"returnStrategy !== 'deeplink'\"\n                  style=\"margin: 0px\"\n              />\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Lang</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"language\" @change=\"handleLanguageSelect\" placeholder=\"Language\">\n                <el-option v-for=\"locale in locales\" :key=\"`language-select-option-${locale}`\" :label=\"locale\"\n                           :value=\"locale\"/>\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Theme</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"theme\" @change=\"handleThemeSelect\" placeholder=\"Theme\">\n                <el-option label=\"LIGHT\" :value=\"THEME.LIGHT\"/>\n                <el-option label=\"DARK\" :value=\"THEME.DARK\"/>\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <!--          <el-row>-->\n          <!--          <el-row style=\"align-items: center\">-->\n          <!--            <el-col :span=\"4\">-->\n          <!--              <p style=\"font-size: 11pt\">Connect</p>-->\n          <!--              <p style=\"font-size: 11pt\">Methods</p>-->\n          <!--            </el-col>-->\n          <!--            <el-col :span=\"20\">-->\n          <!--              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" placeholder=\"Methods\">-->\n          <!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n          <!--                           :value=\"methods\" />-->\n\n          <!--              </el-select>-->\n          <!--            </el-col>-->\n          <!--          </el-row>-->\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Connect</p>\n              <p style=\"font-size: 11pt\">Methods</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" multiple placeholder=\"methods\">\n                <el-option\n                    v-for=\"item in connectMethods\"\n                    :key=\"item\"\n                    :label=\"item\"\n                    :value=\"item\">\n                </el-option>\n              </el-select>\n\n\n              <!--              <el-select v-model=\"selectedMethod\" placeholder=\"Methods\" @change=\"handleConnectMethodsSelect\" multiple>-->\n              <!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n              <!--                           :value=\"methods\" />-->\n              <!--              </el-select>-->\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">ton_proof</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-input v-model=\"tonProofValue\" placeholder=\"input ton_proof\"></el-input>\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" align=\"middle\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Required Chains</div>\n            </el-col>\n            <el-col\n                :span=\"6\"\n                v-for=\"item in Object.keys(availableChains)\"\n                :key=\"item\"\n            >\n              <el-checkbox\n                  v-model=\"availableChains[item].checked\"\n                  :disabled=\"!areChainsInit\"\n              >{{ availableChains[item].name }}\n              </el-checkbox\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" align=\"middle\" style=\"margin-top: 20px\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Optional Chains</div>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(43114)\" @change=\"() => handleOptionChange(43114)\">\n                AVAX\n              </el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(10)\" @change=\"() => handleOptionChange(10)\">OP</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(8453)\" @change=\"() => handleOptionChange(8453)\">\n                BASE\n              </el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(99781165)\"\n                           @change=\"() => handleOptionChange(99781165)\">Nonexist\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp')\"\n                           @change=\"() => handleOptionChange('solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp')\">Solana\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('ton:-239')\" @change=\"() => handleOptionChange('ton:-239')\">Ton\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('btc:mainnet')\"\n                           @change=\"() => handleOptionChange('btc:mainnet')\">btc\n              </el-checkbox>\n            </el-col>\n\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"initBtnClicked\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectInitStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"connectBtnClicked\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectStatusStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"syncAllAddressClick\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ syncAllAddressStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"danger\"\n                  @click=\"disconnectAction\"\n                  icon=\"el-icon-switch-button\"\n                  :disabled=\"!areChainsInit || walletAddress.length == 0\"\n              >{{ disconnectStatusStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <teleport to=\"body\">\n            <div v-if=\"showModal\" class=\"modal-overlay\" @click=\"closeModal\">\n              <div class=\"modal-content\" @click.stop>\n                <button class=\"close-button\" @click=\"closeModal\">\n                  &times;\n                </button>\n                <h2>Scan to connect</h2>\n                <qrcode-vue :value=\"qrValue\" :size=\"350\" level=\"L\"/>\n              </div>\n            </div>\n          </teleport>\n        </el-card>\n\n        <!-- 发送交易 -->\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Transactions</div>\n          </template>\n\n          <el-tabs v-model=\"activeTab\" type=\"border-card\" @tab-click=\"clickActiveTab\">\n            <!-- ETH -->\n            <el-tab-pane label=\"ETH\" name=\"eip155:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to Fuse)\n                  </el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send ETH)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve TONCoin)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(eth mint\n                    nft)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add SPX6900)\n                  </el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"oversized_personal_sign()\">oversized_personal_sign(about 70k, split limit 63k)\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TON\" name=\"ton:-239\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_getAccount\">ton_getAccount</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_sendTransaction\">ton_sendTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- solana -->\n            <el-tab-pane label=\"Sol\" name=\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- Sui-->\n            <el-tab-pane label=\"Sui\" name=\"sui:mainnet\">\n              <SuiPanel @generateTransactionParams=\"sui_generateTransactionParams\"/>\n            </el-tab-pane>\n            <!-- BTC -->\n            <el-tab-pane label=\"BTC\" name=\"btc:mainnet\">\n              <BTCPanel @generateTransactionParams=\"btc_generateTransactionParams\"/>\n            </el-tab-pane>\n\n            <!-- Fractal BTC -->\n            <el-tab-pane label=\"Fractal\" name=\"fractal:mainnet\">\n              <FractalPanel @generateTransactionParams=\"fractal_generateTransactionParams\"/>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Tron\" name=\"tron:mainnet\">\n              <TronTransactionPanel\n                  @generateTransactionParams=\"tron_generateTransactionParams\"\n                  @generateTransactionResult=\"tron_getTransactionResult\"/>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Aptos\" name=\"aptos:mainnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signTransaction\">aptos_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"aptos_signAndSubmitTransaction\">aptos_signAndSubmitTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Cosmos\" name=\"cosmos:cosmoshub-4\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <!-- Polygon-->\n            <el-tab-pane label=\"Polygon\" name=\"eip155:137\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send POL)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve sushi)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(polygon mint\n                    nft)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add LGNS)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_testRpc()\">wallet_testRpc(Polygon)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\"\n                  >eth_sendTransaction(转账FUSE)\n                  </el-button\n                  >\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\"\n                  >eth_sendTransaction(授权USDC)\n                  </el-button\n                  >\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- BSC-->\n            <el-tab-pane label=\"BNB\" name=\"eip155:56\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to BNB)\n                  </el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send BNB)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve POSI)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add FET)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_testRpc()\">wallet_testRpc(check balance on eth)</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Fuse\" name=\"eip155:122\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_swap\">eth_sendTransaction(Swap)</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Sonic testnet\" name=\"svm:70000062\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Movement\" name=\"movement:testnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"move_signTransaction\">move_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"move_signAndSubmitTransaction\">move_signAndSubmitTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n\n            <el-tab-pane label=\"osmos\" name=\"cosmos:osmosis-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"SEI\" name=\"cosmos:pacific-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Starknet\" name=\"starknet:mainnet\">\n              <StarknetPanel ref=\"starknetPanelRef\" @generateTransactionParams=\"starknet_generateTransactionParams\"\n                             @generateTransactionResult=\"starknet_getTransactionResult\"/>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TEST \" name=\"test:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"testBase64UrlSafe\">testBase64UrlSafe</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n          </el-tabs>\n\n          <el-col :xs=\"24\" :sm=\"24\" style=\"margin: 16px 0px;\">\n            <el-row style=\"align-items: center; justify-content: space-between; margin-bottom: 8px;\">\n              <el-col :span=\"4\">\n                <p style=\"font-size: 11pt; margin: 0px; text-align: start\">Redirect param (only for ETH, Polygon, BNB,\n                  Fuse)</p>\n              </el-col>\n              <el-col :span=\"9\">\n                <el-select\n                    v-model=\"redirect\"\n                    @change=\"handleRedirectSelect\"\n                    placeholder=\"Return Strategy\"\n                    :disabled=\"!canChainAddRedirectParam()\"\n                >\n                  <el-option\n                      v-for=\"strategy in returnStrategies\"\n                      :key=\"`return-strategy-select-option-${strategy}`\"\n                      :label=\"strategy\"\n                      :value=\"strategy\"\n                  />\n                </el-select>\n              </el-col>\n              <el-col :span=\"10\">\n                <el-input\n                    v-if=\"redirect === 'deeplink'\"\n                    v-model=\"redirectDeeplink\"\n                    @change=\"handleRedirectDeeplink\"\n                    placeholder=\"Deeplink\"\n                    :disabled=\"!canChainAddRedirectParam() || redirect !== 'deeplink'\"\n                    style=\"margin: 0px\"\n                />\n              </el-col>\n            </el-row>\n            <el-button\n                type=\"primary\" @click=\"addRedirectParam()\"\n                :disabled=\"!canChainAddRedirectParam() || !testTransaction\"\n            >\n              Add redirect param to data\n            </el-button>\n          </el-col>\n\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Data:</div>\n            <el-input v-model=\"testTransaction\" type=\"textarea\" :rows=\"5\" placeholder=\"sendTransactions\"></el-input>\n          </el-col>\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Result :</div>\n            <el-input v-model=\"testboc\" type=\"textarea\" :rows=\"5\" placeholder=\"boc\"></el-input>\n          </el-col>\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button type=\"primary\" :disabled=\"sendBtnDisabled\" @click=\"sendTransaction()\">{{\n                  testTransactionStr\n                }}\n              </el-button>\n            </el-col>\n          </el-row>\n        </el-card>\n      </el-main>\n    </el-container>\n  </div>\n</template>\n\n<style scoped>\n/* 重置全局边距和内边距 */\nbody,\nhtml {\n  margin: 0;\n  padding: 0;\n  height: 100%;\n}\n\n/* 确保 app 容器占满整个视口 */\n#app {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin: 0 auto;\n  /* 居中 */\n  max-width: 600px;\n  /* 设置最大宽度 */\n  padding: 0 20px;\n  /* 添加一些左右内边距 */\n}\n\n/* 调整 el-container 样式 */\n.el-container {\n  min-height: 100vh;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n}\n\n/* 调整 el-header 样式 */\n.el-header {\n  background-color: #333333;\n  color: white;\n  height: 50px;\n  line-height: 50px;\n  font-size: 18px;\n  font-weight: bold;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1000;\n}\n\n/* 调整 el-main 样式 */\n.el-main {\n  padding: 70px 0 20px;\n  /* 增加顶部内边距以避免被固定header遮挡 */\n  flex-grow: 1;\n}\n\n.el-card {\n  margin-bottom: 20px;\n}\n\n.info-row {\n  margin-bottom: 10px;\n}\n\n.input-label {\n  margin-bottom: 5px;\n  text-align: left;\n}\n\n.el-input {\n  margin-bottom: 10px;\n}\n\n/* 通用按钮样式 */\n.wallet-actions .el-button,\n.transaction .el-button,\n.clear-cache .el-button {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 40px;\n}\n\n.wallet-actions .el-button span,\n.transaction .el-button span,\n.clear-cache .el-button span {\n  margin: 0 auto;\n}\n\n/* 按钮行间距 */\n.wallet-actions .button-row,\n.transaction .button-row {\n  margin-bottom: 8px;\n}\n\n.wallet-actions .button-row:last-child,\n.transaction .button-row:last-child {\n  margin-bottom: 0;\n}\n\n/* 调整图标和文字的对齐 */\n.wallet-actions .el-button [class^=\"el-icon-\"],\n.transaction .el-button [class^=\"el-icon-\"],\n.clear-cache .el-button [class^=\"el-icon-\"] {\n  margin-right: 5px;\n  vertical-align: middle;\n}\n\n/* 新增：调整发送交易按钮与输入框的间距 */\n.transaction .el-row:not(:last-child) {\n  margin-bottom: 10px;\n}\n\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.modal-content {\n  background-color: white;\n  padding: 20px;\n  border-radius: 8px;\n  text-align: center;\n  position: relative;\n  max-width: 90%;\n  width: 400px;\n}\n\n.close-button {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  font-size: 24px;\n  border: none;\n  background: none;\n  cursor: pointer;\n}\n\n/* 响应式调整 */\n@media (max-width: 600px) {\n  #app {\n    padding: 0 10px;\n  }\n\n  .el-main {\n    padding: 60px 0 10px;\n  }\n}\n</style>\n<script>\nimport {OKX_CONNECT_ERROR_CODES, safeJsonStringify, getAppWalletDeepLink, getUniversalLink} from \"@okxconnect/core\"\nimport {\n  OKXBtcProvider,\n  OKXUniversalProvider,\n  OKXCosmosProvider,\n  OKXTonProvider,\n  OKXTronProvider,\n  OKXStarknetProvider\n} from \"@okxconnect/universal-provider\"\nimport {OKXSolanaProvider} from \"@okxconnect/solana-provider\";\nimport {\n  Connection,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n  TransactionMessage,\n  VersionedTransaction\n} from '@solana/web3.js';\nimport {OKXSuiProvider as SuiAdapter} from \"@okxconnect/sui-provider\"\nimport QrcodeVue from 'qrcode.vue'\n\nimport {OKXAptosProvider} from \"@okxconnect/aptos-provider\";\nimport {Aptos, AptosConfig, Network} from \"@aptos-labs/ts-sdk\";\n\nimport BTCPanel from \"./components/BtcTransactionPanel.vue\";\nimport FractalPanel from \"./components/FractalTransactionPanel.vue\"\nimport SuiPanel from \"./components/SuiTransactionPanel.vue\";\nimport StarknetPanel from \"./components/StarknetTransactionPanel.vue\";\n\nimport {OKXUniversalConnectUI, THEME} from \"@okxconnect/ui\";\nimport {ethers} from 'ethers';\nimport VConsole from 'vconsole';\nimport nacl from \"tweetnacl\";\n\nconst {verifyADR36Amino} = require('@keplr-wallet/cosmos')\nconst {fromBech32} = require('@cosmjs/encoding')\nimport {verifyPersonalMessageSignature} from '@mysten/sui/verify';\nimport {useShortLink} from \"@okxconnect/core\";\nimport TronTransactionPanel from \"@/components/TronTransactionPanel.vue\";\nimport {TronWeb} from \"tronweb\";\nimport {RpcProvider as StarknetRpcProvider, Account as StarknetAccount} from \"starknet\";\nimport {ref, toRaw} from \"vue\";\n\nnew VConsole();\n\nconst allChains = {\n  1: {name: \"Eth\", checked: false},\n  56: {name: \"BNB\", checked: false},\n  137: {name: \"Polygon\", checked: false},\n  122: {name: \"Fuse\", checked: false},\n  \"ton:-239\": {name: \"TON\", checked: false},\n  \"btc:mainnet\": {name: \"BTC\", checked: false},\n  \"sui:mainnet\": {name: \"Sui\", checked: false},\n  \"aptos:mainnet\": {name: \"Aptos\", checked: false},\n  \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\": {\n    name: \"Solana\",\n    checked: false,\n  },\n  \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\": {\n    name: \"Sol testnet\",\n    checked: false,\n  },\n  \"svm:70000062\": {\n    name: \"Sonic testnet\",\n    checked: false,\n  },\n  \"movement:testnet\": {name: \"Movement\", checked: false},\n  \"fractal:mainnet\": {name: \"Fractal\", checked: false},\n  \"cosmos:osmosis-1\": {name: \"Osmos\", checked: false},\n  \"cosmos:cosmoshub-4\": {name: \"Cosmos\", checked: false},\n  \"cosmos:pacific-1\": {name: \"SEI\", checked: false},\n  \"cosmos:abvdefg\": {name: \"cosmos:abvdefg\", checked: false},\n  \"tron:mainnet\": {name: \"tron\", checked: false},\n  997865: {name: \"Non Exist chain\", checked: false},\n  2020: {name: \"Ronin\", checked: false},\n  1666600000: {name: \"Harmony\", checked: false},\n  \"starknet:mainnet\": {name: \"starknet\", checked: false}\n};\n\nconst chainsThatCanAddRedirectParam = [\n  \"eip\"\n]\n\nvar optionChains = new Set([]);\nvar selectedModals = [\"before\", \"success\", \"error\"];\nvar selectedReturnStrategy = \"none\";\nvar selectedDeepLink = \"tg://resolve\";\nvar selectedLanguage = \"en_US\";\nvar selectedTheme = THEME.LIGHT;\n\n// import QrcodeVue from 'qrcode.vue'\nexport default {\n  name: \"App\",\n  components: {\n    TronTransactionPanel,\n    QrcodeVue,\n    BTCPanel,\n    FractalPanel,\n    SuiPanel,\n    StarknetPanel\n  },\n\n  setup() {\n    const sendBtnDisabled = ref(false)\n\n    return {\n      sendBtnDisabled\n    }\n  },\n  data: () => {\n    return {\n      activeTab: \"eip155:1\",\n      testTopic: \"\",\n      testPublicKey: \"\",\n      testProofPayload: \"\",\n      tonProofValue: \"\",\n      pendingDeepLink: \"-\",\n      logList: [],\n      connectReady: false,\n      connectStatusStr: \"Connect\",\n      syncAllAddressStr: \"syncAllAddress\",\n      connectInitStr: \"init test\",\n      disconnectStatusStr: \"Disconnect\",\n      localPubKey: \"\",\n      localSecKey: \"\",\n      testTransaction: \"\",\n      selectedChain: \"eip155:1\",\n      testTransactionStr: \"Send\",\n      walletAddress: \"\",\n      testboc: \"\",\n      ProofPayloadVerify: \"\",\n      showModal: false,\n      showVerifyRow: false,\n      qrValue: \"https://www.okx.com/download\",\n      currentStatus: \"\",\n      areChainsInit: false,\n      availableChains: allChains,\n      isOptionalChecked: (chainId) => {\n        return optionChains.has(chainId);\n      },\n      withUI: localStorage.getItem(\"autoRefresh\") != \"false\",\n      universalToTG: localStorage.getItem(\"universalToTG\") != \"false\",\n      modals: selectedModals,\n      returnStrategies: [\"none\", \"back\", \"deeplink\"],\n      returnStrategy: selectedReturnStrategy,\n      deeplink: selectedDeepLink,\n      locales: [\n        \"en_US\",\n        \"ru_RU\",\n        \"zh_CN\",\n        \"zh\",\n        \"ar_AE\",\n        \"cs_CZ\",\n        \"de_DE\",\n        \"es_ES\",\n        \"es_LAT\",\n        \"fr_FR\",\n        \"id_ID\",\n        \"it_IT\",\n        \"nl_NL\",\n        \"pl_PL\",\n        \"pt_BR\",\n        \"pt_PT\",\n        \"ro_RO\",\n        \"tr_TR\",\n        \"uk_UA\",\n        \"vi_VN\",\n        \"zh_TW\"\n      ],\n      selectedMethod: [],\n      selectedMethodData: [],\n      connectMethods: [\n        \"wallet_addEthereumChain(ETH)\",\n        \"personal_sign(ETH)\",\n        \"solana_signMessage(Sol mainnet)\",\n        \"sui_signMessage(Sui mainnet)\",\n        \"sui_signPersonalMessage(Sui mainnet)\",\n        \"btc_signMessage(BTC)\",\n        \"aptos_signMessage(aptos mainnet)\",\n        \"cosmos_signArbitrary(cosmoshub)\",\n        \"test_noSupport_eth(ETH)\",\n        \"tron_signMessage\",\n        \"tron_signMessageV2\",\n        \"starknet_signMessage\",\n        \"sync_all_addresses\"\n      ],\n\n      language: selectedLanguage,\n      theme: selectedTheme,\n      THEME: THEME,\n      redirect: selectedReturnStrategy,\n      redirectDeeplink: selectedDeepLink,\n      handleWithUI: (isChecked) => {\n        localStorage.setItem(\"autoRefresh\", `${isChecked}`);\n        location.reload();\n      },\n      handleUniversalToTG: (isChecked) => {\n        localStorage.setItem(\"universalToTG\", `${isChecked}`);\n      },\n      handleOptionChange: (chainId) => {\n        if (optionChains.has(chainId)) {\n          optionChains.delete(chainId);\n        } else {\n          optionChains.add(chainId);\n        }\n      },\n      starknetPanelTypedData: ''\n    };\n  },\n  computed: {\n    getWalletAddress: function () {\n      return this.walletAddress;\n    },\n  },\n  methods: {\n    isChecked(chainId) {\n      return this.selectedChains.has(chainId);\n    },\n\n    initChains(newChains) {\n      if (newChains.length > 0) {\n        const updatedChains = Object.assign({}, this.availableChains);\n        for (const chainId of newChains) {\n          if (updatedChains[chainId]) {\n            updatedChains[chainId].checked = !updatedChains[chainId].checked;\n          }\n        }\n        this.availableChains = updatedChains;\n      }\n\n      this.areChainsInit = true;\n    },\n\n    async clickActiveTab(tab) {\n      const tabName = tab.props ? tab.props.name : tab.name;\n      this.selectedChain = tabName;\n      console.log(`已切换到链 :`, tabName);\n\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      if (tabName == \"starknet:mainnet\") {\n        this.sendBtnDisabled = true\n      } else {\n        this.sendBtnDisabled = false\n      }\n\n      window.provider.setDefaultChain(this.selectedChain);\n    },\n\n    async initBtnClicked() {\n      console.log(\"initBtnClickedddinitBtnClickedddinitBtnClickedddinitBtnClickedddinitBtnClickeddd\")\n      window.okxLogDebug = true\n      var initCall;\n      if (!this.withUI) {\n        initCall = OKXUniversalProvider.init({\n          dappMetaData: {\n            name: \"univer test dapp\",\n            icon: \"https://avatars.githubusercontent.com/u/37784886\",\n          },\n        });\n      } else {\n        initCall = OKXUniversalConnectUI.init({\n          dappMetaData: {\n            icon: \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\",\n            name: \"OKX WalletConnect UI Demo\",\n          },\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: 'all',\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme\n          },\n        });\n      }\n\n      initCall.then((provider) => {\n        window.provider = provider;\n        window.tonProvider = new OKXTonProvider(window.provider);\n        window.tonProvider.onStatusChange((walletInfo) => {\n              console.log('TONConnection onStatusChange:', JSON.stringify(walletInfo));\n            }, (err) => {\n              console.log('TONConnection onStatusChange error:', err);\n            }\n        )\n\n        if (window.provider instanceof OKXUniversalConnectUI) {\n          window.provider.onModalStateChange((state) => {\n            console.log(`onModalStateChange   ${JSON.stringify(state)}`)\n          })\n        }\n\n        console.log(\"init finished:\", provider);\n        console.log(\"init finished session:\", JSON.stringify(provider.session));\n\n        if (provider.session?.namespaces) {\n          const newChains = [];\n          console.log(\"namespaces\", provider.session.namespaces);\n          Object.entries(provider.session.namespaces).forEach(([key, value]) => {\n            if (key === \"eip155\") {\n              value.chains.forEach((chain) => {\n                newChains.push(parseInt(chain.substring(7)));\n              });\n            } else {\n              value.chains.forEach((chain) => {\n                newChains.push(chain);\n              });\n            }\n          });\n\n          console.log(\"existing chains:\", newChains);\n          this.initChains(newChains);\n        } else {\n          this.initChains([]);\n        }\n\n        provider.on(\"display_uri\", (uri) => {\n          if (!useShortLink()) {\n            if (this.isPC()) {\n              if (uri && !this.withUI && !this.universalToTG) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          }\n          console.log(\"通知>>>display_uri  ==> \", uri);\n        });\n\n        provider.on(\"connect_signResponse\", (items) => {\n          console.log(\"通知>>>connect_signResponse  ==> \", JSON.stringify(items));\n          this.verifyMessage(items)\n        })\n\n        provider.on(\"short_display_uri\", (uri) => {\n          if (useShortLink()) {\n            if (this.isPC()) {\n              if (uri && !this.withUI && !this.universalToTG) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          }\n          console.log(\"通知>>>short_display_uri  ==> \", uri);\n        });\n\n\n        provider.on(\"session_connecting\", () => {\n          console.log(\"通知>>>session_connecting  ==> \");\n        });\n\n        provider.on(\"connect\", (session) => {\n          console.log(\"通知>>>get connect session\", session);\n        });\n        provider.on(\"reconnect\", (session) => {\n          console.log(\"通知>>>get reconnect session\", session);\n          this.walletAddress = \"connected\";\n        });\n        provider.on(\"disconnect\", ({topic}) => {\n          console.log(`通知>>>get disconnect  ${topic}`);\n          this.walletAddress = \"disconnecteddddd\";\n        });\n        provider.on(\"session_delete\", ({topic}) => {\n          console.log(`通知>>>get session_delete  ${topic}`);\n        });\n        provider.on(\"session_update\", (session) => {\n          console.log(`通知>>>get session_update `, JSON.stringify(session));\n        });\n      });\n    },\n\n    async connectBtnClicked() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        this.testTonSdk();\n      } else {\n        console.log(`connectBtnClicked provider not finish init`);\n      }\n    },\n\n    async syncAllAddressClick() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        if (window.provider instanceof OKXUniversalProvider) {\n          if (window.provider.connected()) {\n            try {\n              let message = await window.provider.syncAllAddresses()\n              if (typeof message == \"string\") {\n                this.testboc = message\n              } else {\n                this.testboc = JSON.stringify(message)\n              }\n            } catch (e) {\n              this.testboc = JSON.stringify(e)\n            }\n          } else {\n            this.testboc = \"not connected\"\n          }\n        }\n\n      } else {\n        console.log(`syncAllAddress provider not finish init`);\n      }\n    },\n\n    async disconnectAction() {\n      try {\n        console.log(\"get disconnect wallet btn clicked\");\n        // await TON.disconnect();\n        var provider = window.provider;\n        await provider.disconnect();\n        this.walletAddress = \"disconnected\";\n      } catch (error) {\n        console.log(\"Disconnect  error ==>> \", error.message);\n        this.currentStatus = error.message;\n      }\n    },\n\n    async eth_requestAccounts() {\n      var data = {method: \"eth_requestAccounts\"};\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_chainId() {\n      var data = {method: \"eth_chainId\"};\n      this.testTransaction = JSON.stringify(data);\n    },\n    async wallet_switchEthereumChain() {\n      var data = {\n        method: \"wallet_switchEthereumChain\",\n        params: [\n          {\n            chainId: \"0x7a\"\n          }\n        ]\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async wallet_addEthereumChain() {\n      var data = {\n        method: \"wallet_addEthereumChain\",\n        params: {\n          blockExplorerUrls: [\"https://explorer.fuse.io\"],\n          chainId: \"0x7a\",\n          chainName: \"Fuse\",\n          nativeCurrency: {name: \"Fuse\", symbol: \"FUSE\", decimals: 18},\n          rpcUrls: [\"https://rpc.fuse.io\"],\n        },\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    fromAccountToAddress(account) {\n      if (!account) {\n        return \"\"\n      }\n      try {\n        let addressArr = account.split(\":\").slice(2);\n        let address = addressArr.length > 0 ? addressArr.join(\":\") : \"\";\n        return address;\n      } catch (e) {\n        return \"\"\n      }\n\n    },\n\n    requestEVMAccountWithSession(chainId) {\n      console.log(\"requestAccountWithSession >>>\", chainId);\n      if (window.provider && window.provider.session && chainId) {\n        let key = chainId.includes(\":\") ? chainId.split(\":\")[0] : chainId;\n        let namespace = window.provider.session.namespaces\n        if (key === \"eip155\") {\n          let evmNameSpace = namespace[key];\n          if (evmNameSpace && evmNameSpace.accounts) {\n            let accounts = evmNameSpace.accounts;\n            return [\n              ...new Set(\n                  accounts\n                      // get the accounts from the active chain\n                      .filter((account) => account.includes(chainId+\":\"))\n                      // remove namespace & chainId from the string\n                      .map((account) => {\n                        return this.fromAccountToAddress(account);\n                      })\n              ),\n            ];\n\n          }\n\n        }\n      }\n      return undefined\n    },\n\n    async personal_sign() {\n      if (this.selectedChain === \"eip155:1\") {\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0x1ca023f10e157d148deed210f8bee193657a1eaa7f187909e20a9dc3b071dbc364c41fde37960c05093359f410a061ec8a7dca8c0c39fc7c1e24de8a3329775d1b\n\n        var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n        var address = accounts[0];\n        console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n        var dataETH = {\n          method: \"personal_sign\",\n          params: [\n            \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n            address,\n          ],\n        };\n\n        this.testTransaction = JSON.stringify(dataETH);\n      } else if (\n          this.selectedChain === \"eip155:137\" ||\n          this.selectedChain === \"eip155:122\"\n      ) {\n        // method\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0xebda9cfa2af43999058dffa0107031d1ef7fc0252dca85dcbd22ea097af922ca39b64d509ef61ce42b7641c5840b8a80337ffd1411b13e87e2260a3f1b6c151c1b\n\n        var dataPolygon = {\n          method: \"personal_sign\",\n          params: {\n            message:\n                \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n        this.testTransaction = JSON.stringify(dataPolygon);\n      } else if (this.selectedChain === \"eip155:56\") {\n        var data = {\n          method: \"personal_sign\",\n          params: {\n            message:\n                \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n\n        this.testTransaction = JSON.stringify(data);\n      }\n    },\n\n    async eth_sendTransaction_swap() {\n      var data = {\n        method: \"eth_sendTransaction\",\n        chainId: \"eip155:122\",\n        params: {\n          value: \"0x38d7ea4c68000\",\n          gas: \"0x2665f\",\n          to: \"0xf2614A233c7C3e7f08b1F887Ba133a13f1eb2c55\",\n          from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n          data: \"0x2646478b000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee00000000000000000000000000000000000000000000000000038d7ea4c68000000000000000000000000000620fd5fa44be6af63715ef4e65ddfa0387ad13f5000000000000000000000000000000000000000000000000000000000000001b000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000700301ffff0201602352A9Eb5234466Eac23E59e7B99bCaE79C39c0BE9e53fd7EDaC9F859882AfdDa116645287C629040BE9e53fd7EDaC9F859882AfdDa116645287C62900602352A9Eb5234466Eac23E59e7B99bCaE79C39c01f2F3e73be57031114dd1f4E75c1DD87658be7F0E000bb800000000000000000000000000000000\",\n        },\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async oversized_personal_sign() {\n      const payload = ``\n      if (this.selectedChain === \"eip155:1\") {\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0x1ca023f10e157d148deed210f8bee193657a1eaa7f187909e20a9dc3b071dbc364c41fde37960c05093359f410a061ec8a7dca8c0c39fc7c1e24de8a3329775d1b\n\n        var accounts = await window.provider.request(\n          { method: \"eth_requestAccounts\" },\n          \"eip155:1\"\n        );\n        var address = accounts[0];\n        console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n        var dataETH = {\n          method: \"personal_sign\",\n          params: [\n            payload,\n            address,\n          ],\n        };\n\n        this.testTransaction = JSON.stringify(dataETH);\n      } else if (\n        this.selectedChain === \"eip155:137\" ||\n        this.selectedChain === \"eip155:122\"\n      ) {\n        // method\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0xebda9cfa2af43999058dffa0107031d1ef7fc0252dca85dcbd22ea097af922ca39b64d509ef61ce42b7641c5840b8a80337ffd1411b13e87e2260a3f1b6c151c1b\n\n        var dataPolygon = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              payload,\n          },\n        };\n        this.testTransaction = JSON.stringify(dataPolygon);\n      } else if (this.selectedChain === \"eip155:56\") {\n        var data = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              payload,\n          },\n        };\n\n        this.testTransaction = JSON.stringify(data);\n      }\n    },\n\n    async eth_signTypedData_v4() {\n      // method\n      // eth_signTypedData\n      // address\n      // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n      // valid\n      // true\n      // result\n      // 0xa8bb3c6b33a119d2d567c7632195c21988df778006082742125a591f5c633f716107883a37f7de6531a6312a5f69022135bf46fe5ab77905b62c82b3395f985e1b\n      //\n\n      // var data = {\n      //   \"method\": \"eth_signTypedData_v4\",\n      //   \"params\": {\n      //     \"typedDataJson\":\"{\\\"types\\\":{\\\"EIP712Domain\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"version\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"chainId\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"name\\\":\\\"verifyingContract\\\",\\\"type\\\":\\\"address\\\"}],\\\"Person\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"wallet\\\",\\\"type\\\":\\\"address\\\"}],\\\"Mail\\\":[{\\\"name\\\":\\\"from\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"to\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"contents\\\",\\\"type\\\":\\\"string\\\"}]},\\\"primaryType\\\":\\\"Mail\\\",\\\"domain\\\":{\\\"name\\\":\\\"Ether Mail\\\",\\\"version\\\":\\\"1\\\",\\\"chainId\\\":1,\\\"verifyingContract\\\":\\\"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\\\"},\\\"message\\\":{\\\"from\\\":{\\\"name\\\":\\\"Cow\\\",\\\"wallet\\\":\\\"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\\\"},\\\"to\\\":{\\\"name\\\":\\\"Bob\\\",\\\"wallet\\\":\\\"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\\\"},\\\"contents\\\":\\\"Hello, Bob!\\\"}}\"\n      // }}\n\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n      var data = {\n        method: \"eth_signTypedData_v4\",\n        params: [\n          address,\n          {\n            types: {\n              EIP712Domain: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"version\",\n                  type: \"string\",\n                },\n                {\n                  name: \"chainId\",\n                  type: \"uint256\",\n                },\n                {\n                  name: \"verifyingContract\",\n                  type: \"address\",\n                },\n              ],\n              Person: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"wallet\",\n                  type: \"address\",\n                },\n              ],\n              Mail: [\n                {\n                  name: \"from\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"to\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"contents\",\n                  type: \"string\",\n                },\n              ],\n            },\n            primaryType: \"Mail\",\n            domain: {\n              name: \"Ether Mail\",\n              version: \"1\",\n              chainId: 1,\n              verifyingContract: \"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\",\n            },\n            message: {\n              from: {\n                name: \"Cow\",\n                wallet: \"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\",\n              },\n              to: {\n                name: \"Bob\",\n                wallet: \"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\",\n              },\n              contents: \"Hello, Bob!\",\n            },\n          },\n        ],\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_sendTransaction_transfer() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            chainId: \"0x1\",\n            to: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            value: \"0x5af3107a4000\",\n            maxPriorityFeePerGas: \"0x3b9aca00\",\n            gas: \"0x5e56\",\n            maxFeePerGas: \"0x2643b9db8\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gasPrice: \"0x17003f6530\",\n            nonce: \"0x0d30\",\n            data: \"0x\",\n            value: \"0x00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasLimit: \"0x5208\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x5e56\",\n            value: \"0x5af3107a4000\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasPrice: \"0x3b9aca00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            chainId: \"0x38\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:122\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            value: \"0x0\",\n            chainId: \"0x7a\",\n          }\n        }\n      }\n\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"to\"] = address;\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_approve() {\n      var data = {};\n\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000000000000022d473030f116ddee9f6b43ac78ba3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x582d872a1b094fc48f5de31d3b73f2d9be47def1\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000f6f8096ac575b0\",\n            to: \"0x0b3F868E0BE5597D5DB7fEB59E1CADBb0fdDa50a\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            value: \"0x0\",\n            gas: \"0xe117\",\n            gasPrice: \"0xb2d05e00\",\n            data: \"0x095ea7b300000000000000000000000031c2f6fcff4f8759b3bd5bf0e1084a055615c768ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x5CA42204cDaa70d5c773946e69dE942b85CA6706\",\n          },\n        };\n      } else if (this.selectedChain === 'eip155:122') {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000000000000013b3\",\n            to: \"0x620fd5fa44BE6af63715Ef4E65DDFA0387aD13F5\",\n          },\n        };\n      }\n\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_mint() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x4cacb\",\n            data: \"0xa64dfa75000000000000000000000000ed688002f3797599db8b4feacfe8b1dda0df1c8d000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cecb15396825a895ff8da8fc2d2c77a234dccee00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f6261667962656968643737366b6177706e71336f6f6a6635693274787a76617737737164656b34616a776472637472703261366f626b70723773792f7b69647dan            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x30795\",\n            data: \"0xa64dfa75000000000000000000000000341b3687f0309778f08f29336b2c4b9c38b9f110000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f62616679626569686a6279676b68747a71376b68377434336266686e676e793236337668766f6578716a6d6e377161716166366e717a64743777712f7b69647d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002an            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      }\n\n      let str = JSON.stringify(data);\n      console.log(\"-----长度--->\", str.length);\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async wallet_testRpc() {\n      let provider = window.provider;\n      provider.setDefaultChain(\n          `eip155:56`,\n          `https://eth-mainnet.g.alchemy.com/v2/NxUfYJUr-TQtEpLmSXhhD5pXn70GwsyV`\n      );\n      var data = {\n        method: \"eth_getBalance\",\n        params: [\"0x8D97689C9818892B700e27F316cc3E41e17fBeb9\", \"latest\"],\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async wallet_watchAsset() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xe0f63a424a4439cbe457d80e4f4b51ad25b2c56c\",\n              symbol: \"SPX6900\",\n              image:\n                  \"https://assets.coingecko.com/coins/images/31401/standard/sticker_%281%29.jpg?1702371083\",\n              decimals: 8,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xeB51D9A39AD5EEF215dC0Bf39a8821ff804A0F01\",\n              symbol: \"LGNS\",\n              image: \"https://polygonscan.com/token/images/originlgns_32.png\",\n              decimals: 9,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0x031b41e504677879370e9dbcf937283a8691fa7f\",\n              symbol: \"FET\",\n              image: \"https://bscscan.com/token/images/fetch_32.png\",\n              decimals: 18,\n            },\n          },\n        };\n      }\n\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async ton_sendTransaction() {\n      var data = {\n        \"messages\": [{\n          \"address\": \"EQARULUYsmJq1RiZ-YiH-IJLcAZUVkVff-KBPwEmmaQGH6aC\",\n          \"amount\": \"205000000\",\n          \"payload\": \"te6cckEBAgEAhwABbQ+KfqUAAADNgG7tIEATEtAIAO87mQKicbKgHIk4pSPP4k5xhHqutqYgAB7USnesDnCcECwbgQMBAJUlk4VhgBD3JEg1TUr75iTijBghOKm/sxNDXUBl7CD6WMut0Q85x4RafwA/Es89DBXoTxuqxVFxyBbzt9Rav2HBUKl7hmkvLuKHLBCW57aK\"\n        }],\n        \"validUntil\": 1792481054,\n        \"network\": '-239'\n      }\n      this.testTransaction = JSON.stringify(data)\n    },\n    ton_getAccount() {\n      this.testTransaction = \"这里是同步获取 不再需要点击 <<发送交易>>\"\n      let result = window.tonProvider.account()\n      if (result) {\n        this.testboc = JSON.stringify(result);\n      } else {\n        this.testboc = 'null'\n      }\n    },\n\n    async tonUniversalLog() {\n      console.log(\"ton 信息: tonProvider  connected:\", window.tonProvider.connected())\n      console.log(\"ton 信息: tonProvider  account:\", JSON.stringify(window.tonProvider.account()))\n      console.log(\"ton 信息: tonProvider  wallet:\", JSON.stringify(window.tonProvider.wallet()))\n    },\n\n    async sendTransactionAlert() {\n      //\n      const response = await fetch(`https://apitest.fireverse.ai/oauth/okx/getNonce?publicAddress=0x0cecb15396825a895ff8da8fc2d2c77a234dccee`);\n      const data = await response.json();\n      console.log(\"请求数据----\", JSON.stringify(data))\n      await this.personal_sign()\n      if (confirm(\"Are you want to sign message?\")) {\n        this.sendTransaction();\n      }\n\n      // window.open(\"https://www.okx.com/download?deeplink=okx%3A%2F%2Fweb3%2Fwallet%2Fconnect\",'_self')\n    },\n\n    async sendTransaction() {\n      if (this.selectedChain.startsWith(\"aptos\")\n          || this.selectedChain.startsWith(\"movement\")\n          || this.selectedChain.startsWith(\"solana\")\n          || this.selectedChain.startsWith(\"sonic\")\n          || this.selectedChain.startsWith(\"cosmos\")) {\n        return\n      }\n      console.log(\"sendTransaction\", window.provider);\n      console.log(\"sendTransaction内容11------\", this.testTransaction);\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      if (this.testTransaction && window.provider) {\n        // eslint-disable-next-line no-undef\n        const sendData = JSON.parse(this.testTransaction);\n        try {\n          console.log(\"sendTransaction-----22method>>\", sendData.method);\n\n          let chainId = \"eip155:1\";\n          if (this.selectedChain) {\n            chainId = this.selectedChain;\n            console.log(\n                \"sendTransaction-----this.selectedChain>>\",\n                this.selectedChain\n            );\n          }\n          console.log(\"windowOpen[click_1]: \", Date.now());\n          if (chainId == \"sui:mainnet\") {\n            const adapter = new SuiAdapter(window.provider);\n            var suiResult = \"invalid result\";\n            if (this.currentSuiMethod == 'sui_getAccount') {\n              let result = adapter.getAccount()\n              if (typeof result == \"string\") {\n                this.testboc = result\n              } else {\n                this.testboc = JSON.stringify(result)\n              }\n            }\n            if (this.currentSuiMethod == \"sui_signTransaction\") {\n              suiResult = await adapter.signTransaction(\n                  this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signAndExecuteTransaction\") {\n              suiResult = await adapter.signAndExecuteTransaction(\n                  this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signMessage\") {\n              console.log(\"signMessage----\", this.currentSuiTransaction);\n              suiResult = await adapter.signMessage(this.currentSuiTransaction);\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_signPersonalMessage\") {\n              console.log(\n                  \"signPersonalMessage----\",\n                  this.currentSuiTransaction\n              );\n              suiResult = await adapter.signPersonalMessage(\n                  this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_testRpc\") {\n              console.log(\"test rpc----\", this.currentSuiTransaction);\n              console.log(\n                  `请求数据发送 rpc ----->> ${JSON.stringify(sendData)}`\n              );\n              const res = await window.provider.request(sendData, chainId);\n              console.log(`请求数据回调 rpc ----->> ${JSON.stringify(result)}`);\n              if (typeof res == \"string\") {\n                this.testboc = res;\n              } else {\n                this.testboc = JSON.stringify(res);\n              }\n            }\n            console.log(\"windowOpen[click_2]: \", Date.now());\n            return;\n          } else if (chainId === \"ton:-239\") {\n            console.log(\n                `请求数据发送 sendTransaction ---ton-->> ${JSON.stringify(sendData)}`\n            );\n            let result = await window.tonProvider.sendTransaction(sendData)\n            console.log(\n                `请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`\n            );\n            if (typeof result == \"string\") {\n              this.testboc = result;\n            } else {\n              this.testboc = JSON.stringify(result);\n            }\n            return\n          }\n\n          if (chainId == 'btc:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var btcResult = 'invalid result'\n\n            if (this.currentBtcMethod == 'btc_signMessage') {\n              btcResult = await btcAdapter.signMessage(chainId, this.currentBtcTransaction[\"signStr\"])\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_send') {\n              btcResult = await btcAdapter.send(chainId, this.currentBtcTransaction)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signPsbt') {\n              btcResult = await btcAdapter.signPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n\n              this.hexToBase64(btcResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentBtcMethod == 'btc_signPsbts') {\n              btcResult = await btcAdapter.signPsbts(chainId, this.currentBtcTransaction.psbtHexs, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_sendInscription') {\n              btcResult = await btcAdapter.sendInscription(chainId, this.currentBtcTransaction.address, this.currentBtcTransaction.inscriptionId, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signAndPushPsbt') {\n              btcResult = await btcAdapter.signAndPushPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_sendBitcoin') {\n              btcResult = await btcAdapter.sendBitcoin(chainId, this.currentBtcTransaction.toAddress, this.currentBtcTransaction.satoshis, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_getAccount') {\n              btcResult = btcAdapter.getAccount(chainId)\n              this.testboc = JSON.stringify(btcResult)\n            }\n\n            return\n          }\n\n          if (chainId == 'fractal:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var fractalResult = 'invalid result'\n\n            if (this.currentFractalMethod == 'fractal_signMessage') {\n              fractalResult = await btcAdapter.signMessage(chainId, this.currentFractalTransaction['signStr'])\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_send') {\n              fractalResult = await btcAdapter.send(chainId, this.currentFractalTransaction)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signPsbt') {\n              fractalResult = await btcAdapter.signPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.hexToBase64(fractalResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentFractalMethod == 'fractal_signPsbts') {\n              fractalResult = await btcAdapter.signPsbts(chainId, this.currentFractalTransaction.psbtHexs, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_sendInscription') {\n              fractalResult = await btcAdapter.sendInscription(chainId, this.currentFractalTransaction.address, this.currentFractalTransaction.inscriptionId, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signAndPushPsbt') {\n              fractalResult = await btcAdapter.signAndPushPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_sendBitcoin') {\n              fractalResult = await btcAdapter.sendBitcoin(chainId, this.currentFractalTransaction.toAddress, this.currentFractalTransaction.satoshis, this.currentFractalTransaction.options)\n\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_getAccount') {\n              fractalResult = btcAdapter.getAccount(chainId)\n              this.testboc = JSON.stringify(fractalResult)\n            }\n\n            return\n          }\n\n          console.log(`请求数据发送 sendTransaction ----->> ${JSON.stringify(sendData)}`)\n          var result = await window.provider.request(sendData, chainId)\n          console.log(`请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`)\n\n          console.log(\"windowOpen[click_3]: \", Date.now());\n          if (typeof result == \"string\") {\n            this.testboc = result;\n          } else {\n            this.testboc = JSON.stringify(result);\n          }\n          console.log(\"方法数据回调 --this.testboc--\", this.testboc);\n        } catch (error) {\n          console.error(\"方法数据回调失败 --Error--\", error.message);\n\n          if (error.code === OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n            this.testboc = error.message;\n          } else {\n            this.testboc = \"wrong signature！\" + error.message;\n          }\n        }\n      } else {\n        alert(\"Please input transaction data\");\n      }\n    },\n\n    hexToBase64(hexStr) {\n      var bytes = [];\n      for (var i = 0; i < hexStr.length; i += 2) {\n        bytes.push(parseInt(hexStr.substr(i, 2), 16));\n      }\n      const buffer = new Uint8Array(bytes)\n      const blob = new Blob([buffer]);\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = function (e) {\n          var base64Data = e.target.result.split(\",\")[1]\n          resolve(base64Data);\n        };\n        reader.onerror = function (e) {\n          reject(e);\n        };\n        reader.readAsDataURL(blob);\n      });\n    },\n    testBase64UrlSafe() {\n      let datatest = {\n        \"protocolVer\": 1,\n        \"topic\": \"8a7a4c3be73802d0ae2587123ade7bb79f27433b9aa3ca589a2208a2089eecfd\",\n        \"clientId\": \"5f1bbf9eac92160affa7ef04d0a710817ddb6d8c22ebbd6263e86f059930b404\",\n        \"requestId\": \"1731383250054\",\n        \"dAppInfo\": {\n          \"url\": \"connect.oker.vip\",\n          \"origin\": \"https://connect.oker.vip\",\n          \"name\": \"univer test dapp\",\n          \"icon\": \"https://avatars.githubusercontent.com/u/37784886\"\n        },\n        \"requests\": [{\n          \"name\": \"requestAccounts\",\n          \"requiredNamespaces\": [{\"namespace\": \"aptos\", \"chains\": [\"aptos:637\"]}],\n          \"optionalNamespaces\": [],\n          \"connectRequestMethods\": [{\n            \"chainId\": \"aptos:637\",\n            \"method\": \"aptos_signMessage\",\n            \"params\": {\n              \"data\": {\n                \"address\": true,\n                \"application\": true,\n                \"chainId\": true,\n                \"message\": \"123 中文测试!\",\n                \"nonce\": \"1234\"\n              }, \"applicationUrl\": \"https://connect.oker.vip\", \"prefix\": \"APTOS\", \"aptosChainId\": \"1\"\n            }\n          }]\n        }],\n        \"redirect\": \"none\"\n      }\n      let json = JSON.stringify(datatest)\n      const utf8Array = new TextEncoder().encode(json);\n      let binary = '';\n      utf8Array.forEach(byte => {\n        binary += String.fromCharCode(byte);\n      });\n\n      let firstStr = btoa(binary)\n      console.log(\"字符串编码1>>>>\", firstStr)\n      firstStr = firstStr.replace(/\\+/g, '-')  // 替换 '+'\n      console.log(\"字符串编码2>>>>\", firstStr)\n      firstStr = firstStr.replace(/\\//g, '_')  // 替换 '/'\n      console.log(\"字符串编码3>>>>\", firstStr)\n      firstStr = firstStr.replace(/=+$/, '');  // 移除 '=';\n      console.log(\"字符串编码4>>>>\", firstStr)\n\n      let showUrl = getUniversalLink(getAppWalletDeepLink(firstStr))\n      console.log(\"字符串编码5>>>>\", showUrl)\n      this.qrValue = showUrl;\n      this.showModal = true;\n    },\n\n\n    async testTonSdk() {\n      // 1. connect\n      //  create sub providers for each namespace/chain\n      let nameSpacesChains = [];\n      let optSpaceChains = [];\n\n      let solanaChains = [\n        \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n        \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n        \"svm:70000062\",\n      ];\n      let hasEip155, hasSolana, hasSui, hasBtc, hasAptos, hasTon, hasCosmos, hasTron, hasStarknet = false\n\n      let suiChains = [\n        \"sui:mainnet\",\n      ];\n\n      let btcChains = [\n        \"btc:mainnet\",\n        \"fractal:mainnet\"\n      ];\n\n      const chains = Object.entries(this.availableChains)\n          .filter((chain) => chain[1].checked)\n          .map((chain) => chain[0]);\n      console.log(`chains  ===> ${chains.values()}`)\n      chains.forEach(function (chainId) {\n        console.log(`chains.forEach chainId  ===> ${chainId}`)\n\n        if (solanaChains.includes(chainId)) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"ton\")) {\n          nameSpacesChains.push(chainId)\n          hasTon = true\n          return\n        }\n        if (typeof chainId == 'string' && (chainId.startsWith(\"aptos\") || chainId.startsWith(\"movement\"))) {\n          nameSpacesChains.push(chainId)\n          hasAptos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId)\n          hasSolana = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"cosmos\")) {\n          nameSpacesChains.push(chainId)\n          hasCosmos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"tron\")) {\n          nameSpacesChains.push(chainId)\n          hasTron = true\n          return\n        }\n\n        if (typeof chainId == 'string' && chainId.startsWith(\"starknet\")) {\n          nameSpacesChains.push(chainId)\n          hasStarknet = true\n          return\n        }\n\n        if (suiChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`);\n          nameSpacesChains.push(chainId);\n          hasSui = true;\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`)\n          nameSpacesChains.push(chainId)\n          hasBtc = true\n          return\n        }\n\n        hasEip155 = true\n        nameSpacesChains.push(`eip155:${chainId}`)\n      })\n\n\n      optionChains.forEach(function (chainId) {\n        if (solanaChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n        if (typeof chainId == \"string\" && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (suiChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          optSpaceChains.push(chainId)\n          return\n        }\n\n        if (chainId.startsWith('ton')) {\n          optSpaceChains.push(chainId)\n          return\n        }\n\n        optSpaceChains.push(`eip155:${chainId}`)\n      })\n\n      console.log(`namespaceChains  ===> ${JSON.stringify(nameSpacesChains)}`);\n      var connectData = {};\n      if (nameSpacesChains && nameSpacesChains.length > 0) {\n        var requireData = {};\n\n        if (hasEip155) {\n          requireData.eip155 = {\n            chains: nameSpacesChains.filter((item) =>\n                item.startsWith(\"eip155\")\n            ),\n            defaultChain: nameSpacesChains.filter((item) =>\n                item.startsWith(\"eip155\")\n            )[0],\n          };\n        }\n        if (hasSolana) {\n          requireData.solana = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"solana\") ||\n                    item.startsWith(\"sonic\") ||\n                    item.startsWith(\"svm\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"solana\") ||\n                    item.startsWith(\"sonic\") ||\n                    item.startsWith(\"svm\")\n            )[0],\n          };\n        }\n\n        if (hasCosmos) {\n          requireData.cosmos = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            )[0],\n          }\n        }\n        if (hasTron) {\n          requireData.tron = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            )[0],\n          }\n        }\n        if (hasStarknet) {\n          requireData.starknet = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"starknet\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"starknet\")\n            )[0],\n          }\n        }\n        if (hasTon) {\n\n          //\n          let tonParams = {\n            ton_addr: {\n              name: 'ton_addr',\n            }\n          };\n          if (this.tonProofValue) {\n            tonParams = {\n              ton_addr: {\n                name: 'ton_addr',\n              },\n              ton_proof: {\n                name: 'ton_proof',\n                payload: this.tonProofValue,\n              }\n            };\n          }\n\n\n          requireData.ton = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"ton\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"ton\"))[0],\n            params: tonParams\n          };\n        }\n\n        if (hasSui) {\n          requireData.sui = {\n            chains: nameSpacesChains.filter((item) => item.startsWith(\"sui\")),\n            defaultChain: nameSpacesChains.filter((item) =>\n                item.startsWith(\"sui\")\n            )[0],\n            rpcMap: {\n              \"sui:mainnet\": \"https://www.okx.com/fullnode/sui/discover/rpc\"\n            }\n          };\n        }\n        if (hasAptos) {\n          requireData.aptos = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\"))[0]\n          }\n        }\n\n        if (hasBtc) {\n          let btcChains = nameSpacesChains.filter(item => item.startsWith(\"btc\") || item.startsWith(\"fractal\"))\n          requireData.btc = {\n            chains: btcChains,\n            defaultChain: btcChains[0]\n          }\n        }\n        console.log(`requireData  ===> ${JSON.stringify(requireData)}`)\n        connectData['namespaces'] = requireData;\n        console.log(JSON.stringify(connectData))\n      }\n\n      if (optSpaceChains && optSpaceChains.length > 0) {\n        const optData = {};\n\n        const eip155Chains = optSpaceChains.filter((item) => item.startsWith(\"eip155\"));\n        if (eip155Chains.length > 0) {\n          optData[\"eip155\"] = {\n            chains: eip155Chains,\n            defaultChain: eip155Chains[0],\n          };\n        }\n\n        const solanaChains = optSpaceChains.filter((item) => item.startsWith(\"solana\"));\n        if (solanaChains.length > 0) {\n          optData[\"solana\"] = {\n            chains: solanaChains,\n            defaultChain: solanaChains[0],\n          };\n        }\n\n        const tonChains = optSpaceChains.filter((item) => item.startsWith(\"ton\"));\n        if (tonChains.length > 0) {\n\n          let tonParams = {\n            ton_addr: {\n              name: 'ton_addr',\n            }\n          };\n          if (this.tonProofValue) {\n            tonParams = {\n              ton_addr: {\n                name: 'ton_addr',\n              },\n              ton_proof: {\n                name: 'ton_proof',\n                payload: this.tonProofValue,\n              }\n            };\n          }\n\n\n          optData[\"ton\"] = {\n            chains: tonChains,\n            defaultChain: tonChains[0],\n            params: tonParams\n          };\n        }\n\n        const btcChains = optSpaceChains.filter((item) => item.startsWith(\"btc\"));\n        if (btcChains.length > 0) {\n          optData[\"btc\"] = {\n            chains: btcChains,\n            defaultChain: btcChains[0],\n          };\n        }\n\n        connectData[\"optionalNamespaces\"] = optData;\n      }\n\n      if (nameSpacesChains.length === 0 && optSpaceChains.length === 0) {\n        //未选择链\n        alert(\"Please select a chain from above to continue\");\n        return;\n      }\n      console.log(\"=====>connectData \");\n      console.log(connectData);\n\n      var connectMethod;\n      let signMethods = this.getCurrentSelectedMethodData();\n      if (window.provider instanceof OKXUniversalConnectUI) {\n\n        if (signMethods && signMethods.length > 0) {\n          connectMethod = window.provider.openModalAndSign(connectData, JSON.parse(JSON.stringify(signMethods)));\n        } else {\n          connectMethod = window.provider.openModal(connectData);\n        }\n      } else {\n        if (this.universalToTG) {\n          connectData.sessionConfig = {\n            useMini: true,\n            openUniversalUrl: true,\n            tmaReturnUrl: 'back'\n          }\n        } else {\n          connectData.sessionConfig = {\n            redirect: selectedReturnStrategy\n          }\n        }\n        if (signMethods && signMethods.length > 0) {\n          connectMethod = window.provider.connectAndSign(connectData, JSON.parse(JSON.stringify(signMethods)));\n        } else {\n          connectMethod = window.provider.connect(connectData);\n        }\n      }\n\n      await connectMethod\n          .then((result) => {\n            // 2. set defaul chain\n            this.walletAddress = \"connected\";\n            if (this.isPC()) {\n              this.showModal = false;\n            }\n            if (result) {\n              this.testboc = JSON.stringify(result)\n            }\n\n            if (window.provider.session && window.provider.session.namespaces) {\n              let ton = window.provider.session.namespaces[\"ton\"];\n              console.log(\"是否包含ton\", ton)\n              if (ton) {\n                this.tonUniversalLog()\n              }\n            }\n          })\n          .catch((error) => {\n            if (error.code == 301) {\n              setTimeout(() => {\n                alert(error.message)\n              }, 0.5);\n            } else if (error.message) {\n              alert(error.message)\n            }\n            console.error(\"发生了错误：\", error);\n          });\n    },\n\n    getCurrentSelectedMethodData() {// 连接签名\n      var methodList = [];\n      this.selectedMethod.forEach(method => {\n        switch (method) {\n          case \"wallet_addEthereumChain(ETH)\":\n            methodList.push({\n              method: \"wallet_addEthereumChain\",\n              chainId: \"eip155:1\",\n              params: {\n                blockExplorerUrls: [\"https://explorer.fuse.io\"],\n                chainId: \"0x7a\",\n                chainName: \"Fuse\",\n                nativeCurrency: {name: \"Fuse\", symbol: \"FUSE\", decimals: 18},\n                rpcUrls: [\"https://rpc.fuse.io\"],\n              },\n            })\n            break;\n          case \"personal_sign(ETH)\":\n            methodList.push(\n                {\n                  method: \"personal_sign\",\n                  chainId: \"eip155:1\",\n                  params: [\n                    \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n                  ],\n                });\n            break;\n          case \"solana_signMessage(Sol mainnet)\":\n            methodList.push(\n                {\n                  \"chainId\": \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n                  \"method\": \"solana_signMessage\",\n                  \"params\": {\n                    \"message\": \"Hello Solana\",\n                  }\n                }\n            );\n            break;\n          case \"sui_signMessage(Sui mainnet)\":\n          case \"sui_signPersonalMessage(Sui mainnet)\": {\n            let suiData = [\n              76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n              109, 111, 118, 101,\n            ];\n            let uint8Array = new Uint8Array(suiData);\n            let currentMethod = \"sui_signMessage\";\n            this.currentSuiTransaction = {\n              message: uint8Array\n            }\n\n            if (method.startsWith(\"sui_signPersonalMessage\")) {\n              currentMethod = \"sui_signPersonalMessage\";\n            }\n            methodList.push(\n                {\n                  method: currentMethod,\n                  chainId: \"sui:mainnet\",\n                  params: {\n                    message: uint8Array,\n                  }\n                }\n            );\n            break;\n          }\n          case \"btc_signMessage(BTC)\":\n            methodList.push(\n                {\n                  method: \"btc_signMessage\",\n                  chainId: \"btc:mainnet\",\n                  params: {\n                    message: \"Welcome to BTC\"\n                  }\n                }\n            )\n            break;\n          case \"aptos_signMessage(aptos mainnet)\":\n            methodList.push(\n                {\n                  \"chainId\": \"aptos:mainnet\",\n                  \"method\": \"aptos_signMessage\",\n                  \"params\": {\n                    address: true,\n                    application: true,\n                    chainId: true,\n                    message: \"Hello Aptos\",\n                    nonce: \"1234\"\n                  }\n                }\n            )\n            break;\n          case \"cosmos_signArbitrary(cosmoshub)\":\n            methodList.push(\n                {\n                  \"chainId\": \"cosmos:cosmoshub-4\",\n                  \"method\": \"cosmos_signArbitrary\",\n                  \"params\": {\n                    message: \"test cosmos\"\n                  }\n                }\n            )\n\n            break;\n          case \"test_noSupport_eth(ETH)\":\n            methodList.push(\n                {\n                  chainId: \"eip155:1\",\n                  method: \"test_noSupport_eth\",\n                  params: {\n                    message: \"test hello\",\n                  }\n                }\n            )\n            break;\n          case \"sync_all_addresses\":\n            methodList.push(\n                {\n                  method: \"sync_all_addresses\",\n                });\n            break;\n          case \"tron_signMessage\":\n            methodList.push(\n                {\n                  chainId: \"tron:mainnet\",\n                  method: \"tron_signMessage\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n          case \"tron_signMessageV2\":\n            methodList.push(\n                {\n                  chainId: \"tron:mainnet\",\n                  method: \"tron_signMessageV2\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n\n            //\n          case \"starknet_signMessage\": {\n            const signData = {\n              \"domain\": {\n                \"chainId\": \"0x534e5f4d41494e\",\n                \"name\": \"STRKFarm\",\n                \"version\": \"1\"\n              },\n              \"message\": {\n                \"document\": \"app.strkfarm.xyz/tnc/v1\",\n                \"message\": \"Read and Agree T&C\"\n              },\n              \"primaryType\": \"Tnc\",\n              \"types\": {\n                \"StarkNetDomain\": [\n                  {\n                    \"name\": \"name\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"version\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"chainId\",\n                    \"type\": \"felt\"\n                  }\n                ],\n                \"Tnc\": [\n                  {\n                    \"name\": \"message\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"document\",\n                    \"type\": \"felt\"\n                  }\n                ]\n              }\n            }\n            methodList.push({\n              chainId: \"starknet:mainnet\",\n              method: \"starknet_signMessage\",\n              params: {\n                accountAddress: \"\",\n                typedData: signData\n              }\n            })\n          }\n            break\n          default:\n\n            break;\n        }\n      })\n      this.selectedMethodData = methodList\n      return methodList\n\n    },\n\n    closeModal() {\n      this.showModal = false;\n    },\n\n    isPC() {\n      const userAgentInfo = navigator.userAgent;\n      console.log(\"current device ua is ===>\", userAgentInfo);\n\n      const Agents = [\n        \"Android\",\n        \"iPhone\",\n        \"SymbianOS\",\n        \"Windows Phone\",\n        \"iPad\",\n        \"iPod\",\n      ];\n      let flag = true;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = false;\n          break;\n        }\n      }\n      return flag;\n    },\n    isSafariOrChrome() {\n      const userAgentInfo = navigator.userAgent;\n      const Agents = [\"Safari\", \"Chrome\"];\n      let flag = false;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = true;\n          break;\n        }\n      }\n      return flag;\n    },\n\n    /// solana\n    async sol_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      try {\n        let data = {\n          method: \"solana_signMessage\",\n          params: {\n            message: \"Hello Solana\",\n            pubkey: \"\",\n          },\n        };\n        this.testTransaction = JSON.stringify(data);\n        let provider = new OKXSolanaProvider(window.provider);\n\n        let message = await provider.signMessage(\n            \"Hello Solana\",\n            this.selectedChain\n        );\n        console.log(\"solana_signMessage Result:\", JSON.stringify(message))\n        const result1 = nacl.sign.detached.verify(\n            new TextEncoder().encode(\"Hello Solana\"),\n            message.signature,\n            new PublicKey(message.publicKey).toBytes()\n        );\n        console.log(result1)\n\n        if (typeof message == \"string\") {\n          this.testboc = result1;\n        } else {\n          this.testboc = result1;\n        }\n      } catch (e) {\n        console.log(\"solana_signMessage error:\", JSON.stringify(e))\n        this.testboc = e.message\n      }\n\n    },\n\n    async aptos_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      let data = {\n        address: true,\n        application: true,\n        chainId: true,\n        message: \"Hello Aptos\",\n        nonce: \"1234\"\n      }\n\n      let provider = new OKXAptosProvider(window.provider)\n      let message = await provider.signMessage(data, this.selectedChain)\n      this.testTransaction = JSON.stringify(data)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n          functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async move_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async move_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n          functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n        },\n      });\n\n      // let data = {\n      //   \"arguments\": [\"100000\",[\"0\",\"0\",\"10533\"],[\"10\",\"5\",\"5\"],[\"false\",\"false\",\"true\"]],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x3\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\",\"0x73eb84966be67e4697fc5ae75173ca6c35089e802650f75422ab49a8729704ec::coin::DooDoo\",\"0x53a30a6e5936c0a4c5140daed34de39d17ca7fcae08f947c02e979cef98a3719::coin::LSD\",\"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::CurveV1\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x54cb0bb2c18564b86e34539b9f89cfe1186e39d89fce54e1cd007b8e61673a85::bin_steps::X80\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async sol_signVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(\n          provider.getAccount(\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\").address\n      );\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signTransaction(\n          transaction,\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAndSendVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n          transaction,\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllVersionedTransactions() {\n      let provider = new OKXSolanaProvider(window.provider);\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n          [transaction],\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signTransaction() {\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: 1000,\n          })\n      );\n\n      this.testTransaction = safeJsonStringify(transaction)\n      let result = await provider.signTransaction(\n          transaction,\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllTransactions() {\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n          [transaction],\n          this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    getSolConnect() {\n      let rpc = \"https://www.okx.com/fullnode/sol/discover/rpc\"\n      if (this.selectedChain === \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\") {\n        rpc = \"https://www.okx.com//fullnode/sol/discover/rpc\"\n      } else if (this.selectedChain === \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\") {\n        rpc = \"https://www.okx.com/fullnode/soltestnet/discover/rpc\"\n      } else if (this.selectedChain === \"svm:70000062\") {\n        rpc = \"https://www.okx.com/fullnode/sonic/testnet/discover/rpc\"\n      }\n      return rpc\n    },\n\n    async sol_signAndSendTransaction() {\n\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n          transaction,\n          this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async cosmos_signArbitrary() {\n      let provider = new OKXCosmosProvider(window.provider)\n      let message = await provider.signArbitrary(this.selectedChain, provider.getAccount(this.selectedChain).address, \"test cosmos\")\n      if (typeof message == \"string\") {\n        this.testboc = message;\n      } else {\n        let isValid = await this.cosmos_verifySignArbitrary(provider.getAccount(this.selectedChain).address, \"test cosmos\", message.signature, message.pub_key.value)\n        console.log(\"verify\", isValid)\n        this.testboc = \"verify:\" + isValid + JSON.stringify(message);\n      }\n    },\n\n    async cosmos_verifySignArbitrary(signer, data, signature, pubkey) {\n      try {\n        console.log(\"cosmos_verifySignArbitrary signer:\", signer)\n        console.log(\"cosmos_verifySignArbitrary data:\", JSON.stringify(data))\n        console.log(\"cosmos_verifySignArbitrary signature:\", signature)\n        console.log(\"cosmos_verifySignArbitrary pubkey:\", pubkey)\n\n        // 将bech32地址转换为公钥\n        const {prefix: prefixStr} = fromBech32(signer)\n\n        const signatureBuffer = Buffer.from(signature, 'base64');\n\n        const uint8Signature = new Uint8Array(signatureBuffer); // Convert the buffer to an Uint8Array\n\n        const pubKeyValueBuffer = Buffer.from(pubkey, 'base64'); // Decode the base64 encoded value\n\n        const pubKeyUint8Array = new Uint8Array(pubKeyValueBuffer); // Convert the buffer to an Uint8Array\n\n        // 验证签名\n        return await verifyADR36Amino(\n            prefixStr,\n            signer,\n            data,\n            pubKeyUint8Array,\n            uint8Signature\n        )\n      } catch (err) {\n        console.error('Verification failed:', err)\n        return false\n      }\n    },\n\n    async cosmos_signAmino() {\n      let provider = new OKXCosmosProvider(window.provider)\n      // const rpcUrl = 'https://osmosis-rpc.publicnode.com:443';\n      // const client = await StargateClient.connect(rpcUrl);\n      // const height = await client.getHeight();\n      // let address = provider.getAccount(this.selectedChain).address\n      // const sequence = await client.getSequence(address)\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      // let signDoc = makeSignDoc(\n      //     transaction.msgs,\n      //     transaction.fee,\n      //     this.selectedChain.split(\":\")[1],\n      //     transaction.memo,\n      //     transaction.accountNumber,\n      //     transaction.sequence,\n      // )\n      let signDoc = {\n        \"chain_id\": \"osmosis-1\",\n        \"account_number\": \"630104\",\n        \"sequence\": \"480\",\n        \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]},\n        \"msgs\": [{\n          \"type\": \"osmosis/poolmanager/swap-exact-amount-in\",\n          \"value\": {\n            \"sender\": \"osmo1u6lts9ng4etxj0zdaxsada6zgl8dudpgelmuyu\",\n            \"routes\": [{\n              \"pool_id\": \"1096\",\n              \"token_out_denom\": \"ibc/987C17B11ABC2B20019178ACE62929FE9840202CE79498E29FE8E5CB02B7C0A4\"\n            }, {\n              \"pool_id\": \"611\",\n              \"token_out_denom\": \"ibc/27394FB092D2ECCD56123C74F36E4C1F926001CEADA9CA97EA622B25F41E5EB2\"\n            }],\n            \"token_in\": {\"denom\": \"uosmo\", \"amount\": \"100\"},\n            \"token_out_min_amount\": \"8\"\n          }\n        }],\n        \"memo\": \"FE\",\n        \"timeout_height\": \"23603788\",\n        \"signOptions\": {\n          \"useOneClickTrading\": false,\n          \"preferNoSetFee\": true,\n          \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]}\n        }\n      }\n\n\n      // let signOption = {\n      //   memo: true, // optional\n      //   fee: true, // optional\n      //   gasRate: {\n      //     // optional\n      //     average: \"0.2\",\n      //     low: \"0.02\",\n      //     tiny: \"0.002\",\n      //   },\n      // }\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signAmino(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, signDoc)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    messageToBuffer(message) {\n      var buffer = Buffer.from([]);\n      try {\n        if (typeof message === \"string\") {\n          buffer = Buffer.from(message.replace(\"0x\", \"\"), \"hex\");\n        } else {\n          buffer = Buffer.from(message);\n        }\n      } catch (err) {\n        console.log(`messageToBuffer error: ${err}`);\n      }\n      return buffer;\n    },\n\n\n    async cosmos_signDirect() {\n      let provider = new OKXCosmosProvider(window.provider)\n\n      let signDoc = {\n        \"bodyBytes\": this.messageToBuffer(\"0x0ac1010a292f6962632e6170706c69636174696f6e732e7472616e736665722e76312e4d73675472616e736665721293010a087472616e7366657212096368616e6e656c2d301a0d0a05756f736d6f120431303030222b6f736d6f3175366c7473396e67346574786a307a64617873616461367a676c386475647067656c6d7579752a2d636f736d6f733175366c7473396e67346574786a307a64617873616461367a676c386475647067337967766a773207080410ebe3f90a3880b0bcafd18cec8218\"),\n        \"authInfoBytes\": this.messageToBuffer(\"0x0a510a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a2102446e19e94ac0e83ea896d2712507577eb39fbdd2d6ae9f0fc0b9759f1fbaba9012040a02080118e00312140a0e0a05756f736d6f1205323530303010859a11\"),\n        \"chainId\": \"osmosis-1\",\n        \"accountNumber\": \"630104\",\n      }\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signDirect(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, transaction)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    sui_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentSuiTransaction = params\n      this.currentSuiMethod = flag\n    },\n\n    btc_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentBtcTransaction = params\n      this.currentBtcMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n\n    fractal_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentFractalTransaction = params\n      this.currentFractalMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n    tron_getTransactionResult(result) {\n      if (typeof result == \"string\") {\n        this.testboc = result\n      } else {\n        this.testboc = JSON.stringify(result)\n      }\n    },\n    tron_generateTransactionParams(params) {\n      if (typeof params == \"string\") {\n        this.testTransaction = params\n      } else {\n        this.testTransaction = JSON.stringify(params)\n      }\n    },\n\n    starknet_getTransactionResult(result) {\n      if (typeof result == \"string\") {\n        this.testboc = result\n      } else {\n        this.testboc = JSON.stringify(result)\n      }\n    },\n\n    starknet_generateTransactionParams(params) {\n      if (typeof params == \"string\") {\n        this.testTransaction = params\n      } else {\n        this.testTransaction = JSON.stringify(params)\n      }\n    },\n\n    handleModalsSelect(modals) {\n      selectedModals = modals;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: modals.length === 3 ? \"all\" : modals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n\n    handleReturnStrategySelect(returnStrategy) {\n      selectedReturnStrategy = returnStrategy === \"deeplink\" ? this.deeplink : returnStrategy;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      } else {\n        if (window.provider.sessionConfig) {\n          window.provider.sessionConfig.redirect = selectedReturnStrategy;\n        } else {\n          window.provider.sessionConfig = {\n            redirect: selectedReturnStrategy\n          };\n        }\n      }\n    },\n\n    handleReturnStrategyDeeplink(deeplink) {\n      console.log('handleReturnStrategyDeeplink', deeplink)\n      selectedReturnStrategy = deeplink;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: deeplink,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      } else {\n        if (window.provider.sessionConfig) {\n          window.provider.sessionConfig.redirect = deeplink;\n        } else {\n          window.provider.sessionConfig = {\n            redirect: deeplink\n          };\n        }\n      }\n    },\n\n    handleLanguageSelect(language) {\n      selectedLanguage = language;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: language,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n    handleConnectMethodsSelect() {\n      console.log(\"当前的方法 this.selectedMethod>>>>\", this.selectedMethod);\n    },\n\n    eth_verifyMessage(message, signature, ethAddress) {\n      console.log(\"eth_verifyMessage   message>>>\", message)\n      console.log(\"eth_verifyMessage   signature>>>\", signature)\n      console.log(\"eth_verifyMessage   ethAddress>>>\", ethAddress)\n      if (!message || !signature) {\n        return \"\"\n      }\n      let originalMessage = message\n      if (message.startsWith(\"0x\")) {\n        originalMessage = originalMessage.replace(/^0x/, '');\n        let str = '';\n        for (let i = 0; i < originalMessage.length; i += 2) {\n          const byte = originalMessage.slice(i, i + 2);\n          str += String.fromCharCode(parseInt(byte, 16));\n        }\n        originalMessage = str\n      }\n      console.log(\"eth_verifyMessage   originalMessage>>>\", originalMessage)\n\n      // const messageHash = ethers.utils.hashMessage(originalMessage);\n      const recoveredAddress = ethers.utils.verifyMessage(originalMessage, signature);\n      console.log(\"eth_verifyMessage recoveredAddress:\", recoveredAddress);\n      return recoveredAddress.toLowerCase() === ethAddress.toLowerCase();\n    },\n\n    async verifyMessage(list) { //连接验签\n\n      if (window.provider && window.provider.session && list && list.length > 0) {\n        let verifyList = {}\n        for (let methodItem of list) {\n          if (\"result\" in methodItem && \"method\" in methodItem) {\n            let requestItme = this.selectedMethodData.filter(item => item.method === methodItem.method)[0];\n            console.log(\"验证签名 请求>>>:\", JSON.stringify(requestItme));\n            console.log(\"验证签名 结果>>>:\", JSON.stringify(methodItem));\n            if (methodItem.method === \"personal_sign\") {\n              let ethAddress = this.requestEVMAccountWithSession(methodItem.chainId)\n              ethAddress = ethAddress[0];\n              console.log(\"验证eth 钱包地址>>>:\", ethAddress);\n              let ethMessage = requestItme.params[0]\n              console.log(\"验证eth 签名消息体>>:\", JSON.stringify(ethMessage));\n              verifyList[methodItem.method] = this.eth_verifyMessage(ethMessage, methodItem.result, ethAddress)\n            } else if (methodItem.method === \"solana_signMessage\") {\n              let solanaMessage = methodItem.result\n              if (\"signature\" in solanaMessage && \"publicKey\" in solanaMessage) {\n                const verifySol = nacl.sign.detached.verify(\n                    new TextEncoder().encode(\"Hello Solana\"),\n                    solanaMessage.signature,\n                    new PublicKey(solanaMessage.publicKey).toBytes()\n                );\n                verifyList[methodItem.method] = verifySol\n              } else {\n                verifyList[methodItem.method] = false\n              }\n            } else if (methodItem.method === \"sui_signPersonalMessage\" || methodItem.method === \"sui_signMessage\") {\n              let suiResult = this.sui_verifySignature(methodItem.result);\n              verifyList[methodItem.method] = (await suiResult).result\n            } else if (methodItem.method === \"btc_signMessage\") {\n\n              verifyList[methodItem.method] = \"Not verified yet\"\n\n            } else if (methodItem.method === \"aptos_signMessage\") {\n              let aptosMessage = methodItem.result\n              let aptosProvider = new OKXAptosProvider(window.provider)\n              let aptosPublicKey = aptosProvider.getAccount(methodItem.chainId)?.publicKey\n\n              let signStr = aptosMessage.signature\n              if (signStr.startsWith(\"0x\")) {\n                signStr = signStr.slice(2, signStr.length)\n              }\n\n              console.log(\"aptos_signMessage aptosPublicKey And signStr\", aptosPublicKey, signStr)\n              verifyList[methodItem.method] = nacl.sign.detached.verify(\n                  Buffer.from(aptosMessage.fullMessage),\n                  Buffer.from(signStr, 'hex'),\n                  Buffer.from(aptosPublicKey, 'hex'),\n              );\n            } else if (methodItem.method === \"cosmos_signArbitrary\") {\n              let cosmosProvider = new OKXCosmosProvider(window.provider)\n              let cosmosAddress = cosmosProvider.getAccount(methodItem.chainId)?.address\n              let cosmosMessage = methodItem.result\n              let isValid = await this.cosmos_verifySignArbitrary(cosmosAddress, \"test cosmos\", cosmosMessage.signature, cosmosMessage.pub_key.value)\n              verifyList[methodItem.method] = isValid\n\n            } else if (methodItem.method === \"tron_signMessage\") {\n              let tronMessage = methodItem.result\n              let tronWeb = new TronWeb({\n                \"fullHost\": 'https://api.trongrid.io',\n                \"headers\": {},\n                \"privateKey\": ''\n              })\n              let provider = new OKXTronProvider(window.provider)\n              verifyList[methodItem.method] = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), tronMessage, provider.getAccount(\"tron:mainnet\").address)\n            } else if (methodItem.method === \"tron_signMessageV2\") {\n              let tronMessage = methodItem.result\n              let tronWeb = new TronWeb({\n                \"fullHost\": 'https://api.trongrid.io',\n                \"headers\": {},\n                \"privateKey\": ''\n              })\n              const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", tronMessage);\n              let provider = new OKXTronProvider(window.provider)\n\n              verifyList[methodItem.method] = base58Address === provider.getAccount(\"tron:mainnet\").address\n            } else if (methodItem.method === \"starknet_signMessage\") {\n              let res = methodItem.result\n              let signData = this.starknetPanelTypedData\n\n              const rpcProvider = new StarknetRpcProvider({nodeUrl: \"https://free-rpc.nethermind.io/mainnet-juno/v0_7\"});\n\n              let provider = new OKXStarknetProvider(window.provider)\n              let address = provider.getAccount(\"starknet:mainnet\").address\n              let pk = \"0x123\"; /// random pk\n              const account = new StarknetAccount(rpcProvider, address, pk)\n\n              let that = this\n              account.verifyMessage(signData, res).then(function (isValid) {\n                that.testTransaction = `Verifyed result: \\n${isValid}`\n              }).catch(function (error) {\n                that.testTransaction = `Verifyed failed: \\n${error}`\n              })\n              verifyList[methodItem.method] = \"starknet is verifying signature...\"\n            } else {\n              verifyList[methodItem.method] = \"Not verified yet\"\n\n            }\n          } else if (\"method\" in methodItem && \"error\" in methodItem) {\n            verifyList[methodItem.method] = methodItem.error\n          }\n\n        }\n\n        console.log(\"验证签名 最后的结果>>>:\", JSON.stringify(verifyList));\n        this.testTransaction = \"签名验证结果如下: \\n\" + JSON.stringify(verifyList)\n      } else {\n        console.log(\"验证签名 window.provider.session.connectMethodsReply 为空:\");\n\n      }\n\n    },\n\n    handleThemeSelect(theme) {\n      selectedTheme = theme;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: theme,\n          },\n        };\n      }\n    },\n\n    async sui_verifySignature(signatureResult) {\n      let resultObj = signatureResult\n      let result = false\n      let msg = ''\n      try {\n        /// 获取当前account\n        const adapter = new SuiAdapter(window.provider);\n        let account = adapter.getAccount()\n        console.log(`Account中获取的address：${account.address}`)\n\n        /// 验证签名\n        let pubKey = await verifyPersonalMessageSignature(this.currentSuiTransaction.message, resultObj.signature)\n        let address = pubKey.toSuiAddress()\n        console.log(`验签结果计算得到address：${address}`)\n\n        /// 对比pubKey\n        console.log(`account pubkey: ${account.publicKey}`,)\n        console.log(`result pubkey: ${pubKey.toBase64()}`)\n        result = (account.address === address) && (account.publicKey === pubKey.toBase64())\n\n        msg = `address verify: ${account.address === address}\\npublicKey verify: ${account.publicKey === pubKey.toBase64()}`\n        console.log(\"signature verify success: \", pubKey)\n      } catch (e) {\n        console.log(\"signature verify failed: \", e)\n      }\n      return {\n        result,\n        msg\n      }\n    },\n\n\n    handleRedirectSelect(input) {\n      this.redirect = input;\n    },\n\n    handleRedirectDeeplink(input) {\n      this.redirectDeeplink = input;\n    },\n\n    addRedirectParam() {\n      if (this.testTransaction) {\n        const newTransaction = JSON.parse(this.testTransaction);\n        newTransaction.redirect = this.redirect === 'deeplink' ? this.redirectDeeplink : this.redirect;\n        this.testTransaction = JSON.stringify(newTransaction);\n      }\n    },\n\n    canChainAddRedirectParam() {\n      return chainsThatCanAddRedirectParam.some((c) => this.selectedChain.startsWith(c));\n    }\n  },\n  created() {\n    // for (const eventName of Object.values(OKX_TON_CONNECTION_AND_TRANSACTION_EVENT)) {\n    //   console.log(eventName);\n    //   window.addEventListener(eventName, (event) => {\n    //     console.log(eventName,event.detail)\n    //     this.currentStatus = eventName\n    //   });\n    // }\n  },\n\n  mounted() {\n\n    var scriptTag = document.createElement(\"script\");\n    scriptTag.src = \"https://telegram.org/js/telegram-web-app.js\";\n    scriptTag.id = \"tgsdk\";\n    document.getElementsByTagName('head')[0].appendChild(scriptTag);\n\n    this.connectReady = true;\n    document.title = \"OKX Connect\";\n    this.initBtnClicked()\n    this.initBtnClicked()\n\n    console.log(\"挂载成功:\")\n    if (this.$refs.starknetPanelRef) {\n      this.starknetPanelTypedData = toRaw(this.$refs.starknetPanelRef.signData)\n      console.log(\"111: \", this.starknetPanelTypedData)\n    } else {\n      console.log(\"222\")\n    }\n  },\n};\n</script>\n","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_getAccount()\">getAccount(BTC)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signMessage()\">signMessage(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_send()\">send(BTC)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendBitcoin()\">sendBitcoin(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signPsbt_up()\">signPsbt(上架NFT)</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"btc_signAndPushPsbt_up()\">signAndPushPsbt(上架NFT)</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在OKX App选择要上架的Btc NFT，点击【上架】\n        </li>\n        <li>\n          2. 弹出签名面板，点开高级选项，查看\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出上架流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendInscription()\">sendInscription(BTC)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Btc NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount\n    }\n  },\n  methods: {\n\n    btc_getAccount() {\n      this.$emit('generateTransactionParams', {}, \"btc_getAccount\")\n    },\n\n    btc_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to BTC\"\n      };\n      this.$emit('generateTransactionParams', params, \"btc_signMessage\")\n    },\n\n    btc_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"btc_send\")\n    },\n\n    btc_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"btc_sendBitcoin\")\n    },\n\n    btc_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"btc_signPsbt\")\n    },\n\n    btc_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"btc_signAndPushPsbt\")\n    },\n\n    btc_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"btc_sendInscription\")\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./BtcTransactionPanel.vue?vue&type=template&id=376d03bc&scoped=true\"\nimport script from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./BtcTransactionPanel.vue?vue&type=style&index=0&id=376d03bc&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-376d03bc\"]])\n\nexport default __exports__","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_getAccount()\">getAccount(Fractal)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signMessage()\">signMessage(Fractal)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_send()\">send(Fractal)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_sendBitcoin()\">sendBitcoin(Fractal)</el-button>\n\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signPsbt_up()\">signPsbt(上架NFT)</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_signAndPushPsbt_up()\">signAndPushPsbt(上架NFT)</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在OKX App选择要上架的Fractal NFT，点击【上架】\n        </li>\n        <li>\n          2. 弹出签名面板，点开高级选项，查看\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出上架流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_sendInscription()\">sendInscription(Fractal)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Fractal NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount\n    }\n  },\n  methods: {\n\n    fractal_getAccount() {\n      this.$emit('generateTransactionParams', {}, \"fractal_getAccount\")\n    },\n\n    fractal_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to UniSat!\\n\\nClick to sign in and accept the UniSat Terms of Service (https://unisat.io/terms-of-service.html) and Privacy Policy (https://unisat.io/privacy-policy.html).\\n    \\nThis request will not trigger a blockchain transaction.\\n    \\nYour authentication status will reset after 24 hours.\\n    \\nWallet address:\\nbc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\\n    \\nNonce:\\n162d70e3-8c21-4cfd-9a22-9bf0a4b7be51\\n\"\n      };\n      this.$emit('generateTransactionParams', params, \"fractal_signMessage\")\n    },\n\n    fractal_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_send\")\n    },\n\n    fractal_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_sendBitcoin\")\n    },\n\n    fractal_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"fractal_signPsbt\")\n    },\n\n    fractal_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"fractal_signAndPushPsbt\")\n    },\n\n    fractal_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"fractal_sendInscription\")\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./FractalTransactionPanel.vue?vue&type=template&id=fb2f7e38&scoped=true\"\nimport script from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./FractalTransactionPanel.vue?vue&type=style&index=0&id=fb2f7e38&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-fb2f7e38\"]])\n\nexport default __exports__","<script>\n\nimport {getFullnodeUrl, SuiClient} from \"@mysten/sui/client\";\nimport {Transaction as SuiTransaction} from '@mysten/sui/transactions';\n\nexport default {\n  name: \"SuiTransactionPanel\",\n  methods: {\n    sui_getAccount() {\n      this.$emit('generateTransactionParams', '', \"sui_getAccount\")\n    },\n\n    //对单个交易签名（不发送)\n    async sui_signMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signMessage\")\n    },\n\n    async sui_signPersonalMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signPersonalMessage\")\n    },\n\n    sui_signTransaction2() {\n      // 定义要转移的金额和目标地址\n      const amount = 109; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    async sui_requestRpc() {\n      let provider = window.provider;\n      provider.setDefaultChain(\n          `sui:mainnet`,\n          `https://fullnode.mainnet.sui.io:443`\n      );\n      var data = {\n        method: \"suix_getBalance\",\n        params: [\n          \"0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae\",\n          \"0x168da5bf1f48dafc111b0a488fa454aca95e0b5e::usdc::USDC\",\n        ],\n      };\n\n      this.$emit(\"generateTransactionParams\", data, \"sui_testRpc\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 102; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signAndExecuteTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n      this.$emit(\"generateTransactionParams\", input, \"sui_signAndExecuteTransaction\")\n    },\n\n    /// generate txBytes and txSerialize\n    async generateTsBytesAndSerizlize(input) {\n      /// txBytes and txSerialize may be constructed in advance by the dapp side\n      let resultTuple = [\"\", \"\"];\n      if (\n          \"txBytes\" in input &&\n          input.txBytes.length > 0 &&\n          \"txSerialize\" in input &&\n          input.txSerialize.length > 0\n      ) {\n        resultTuple = [input.txBytes, input.txSerialize];\n      }\n\n      /// Otherwise, a transactionBlock parameter is required.\n      if (!(\"transactionBlock\" in input)) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      // if (this.walletAddress != \"connected\") {\n      //   alert(\"请先连接钱包\");\n      //   return new Promise((resolve) => {\n      //     resolve(resultTuple);\n      //   });\n      // }\n\n      let senderAccounts = window.provider.requestAccountsWithNamespace(\"sui\");\n      if (senderAccounts.length == 0) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      try {\n        let rpcUrl = getFullnodeUrl(\"mainnet\");\n        rpcUrl = \"https://www.okx.com/fullnode/sui/discover/rpc\"\n        const suiClient = new SuiClient({ url: rpcUrl });\n\n        /// sender is required\n        input.transactionBlock.setSender(senderAccounts[0]);\n        const result = await input.transactionBlock.build({\n          client: suiClient,\n        });\n        const txBytes = Buffer(result).toString(\"base64\");\n        const txSerialize = await SuiTransaction.from(txBytes).toJSON();\n        resultTuple = [txBytes, txSerialize];\n      } catch (error) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      return new Promise((resolve) => {\n        resolve(resultTuple)\n      })\n    },\n\n    //签名并发送交易\n    sui_signAndExecuteTransaction() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n        \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.testTransaction = JSON.stringify(input);\n      this.currentSuiTransaction = input;\n      this.currentSuiMethod = \"sui_signAndExecuteTransaction\";\n    },\n  },\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_getAccount()\">getAccount(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signMessage()\">signMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signPersonalMessage()\">signPersonalMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signTransaction2()\">signTransaction(Sui)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signAndExecuteTransaction()\">sendTransaction(Sui)</el-button>\n      <div style=\"font-size: 12px; color: gray;\">(send to Rally Tiger account)</div>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_requestRpc()\">RPC_getBalance</el-button>\n      <div style=\"font-size: 12px; color: gray;\">get USDC balance of address:</div>\n      <div style=\"font-size: 12px; color: gray\">0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae</div>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signTransaction_pre_execution()\">signTransaction(prepared data)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signAndExecuteTransaction_pre_execution()\">sendTransaction(prepared data)</el-button>\n    </el-col>\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./SuiTransactionPanel.vue?vue&type=template&id=56a8eddf&scoped=true\"\nimport script from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./SuiTransactionPanel.vue?vue&type=style&index=0&id=56a8eddf&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-56a8eddf\"]])\n\nexport default __exports__","<script>\nimport { OKXStarknetProvider } from \"@okxconnect/universal-provider\";\nimport { CallData, uint256, RpcProvider, Account } from \"starknet\";\n\nexport default {\n  name: \"StarknetTransactionPanel\",\n  methods: {\n    async starknet_signMessage() {\n      this.address = this.getCurrentAddress()\n      if (this.address === \"\") {\n        alert(\"address can't be ''\");\n        return\n      }\n\n      let signData = this.signData\n      this.$emit(\"generateTransactionParams\", JSON.stringify(signData))\n      let provider = new OKXStarknetProvider(window.provider)\n      let res = await provider.signMessage(this.address, signData, \"starknet:mainnet\")\n      if (res.code) {\n        if (res.code == 301) {\n          let msg = \"Wallet address is registering, please try again later!\"\n          alert(msg)\n          this.$emit(\"generateTransactionResult\", msg, \"starknet_signMessage\")\n        }\n        this.$emit(\"generateTransactionResult\", res, \"starknet_signMessage\")\n        return\n      }\n      console.log(res)\n\n      const rpcProvider = new RpcProvider({ nodeUrl: \"https://free-rpc.nethermind.io/mainnet-juno/v0_7\" });\n      let pk = \"0x123\"; /// random pk\n      const account = new Account(rpcProvider, this.address, pk)\n      let that = this\n      account.verifyMessage(signData, res).then(function (isValid) {\n        that.$emit(\"generateTransactionResult\", \"verify:\" + isValid + \"\\n\" + res, \"starknet_signMessage\")\n      }).catch(function (error) {\n        that.$emit(\"generateTransactionResult\", \"failed:\" + error + \"\\n\" + res, \"starknet_signMessage\")\n      })\n    },\n\n    async starknet_sendTransaction() {\n      this.address = this.getCurrentAddress()\n      if (this.address === \"\") {\n        alert(\"address can't be ''\");\n        return\n      }\n\n      let val = uint256.bnToUint256(120000000000000000)\n      const transferCalldata = CallData.compile({\n        to: \"0x00b909cefa36ab6bc26f5887a867e46ef162238f0a171b1c2974b665afd4237f\",\n        value: val\n      })\n\n      // const ETHTokenAddress = \"0x049d36570d4e46f48e99674bd3fcc84644ddd6b96f7c741b1562b82f9e004dc7\"\n      // const STARKTokenAddress = \"0x04718f5a0fc34cc1af16a1cdee98ffb20c31f5cd61d6ab07201858f4287c938d\"\n      const DAITokenAddress = \"0x00da114221cb83fa859dbdb4c44beeaa0bb37c7537ad5ae66fe5e0efd20e6eb3\"\n\n      const invokeParams = {\n        calls: [\n          {\n            contract_address: DAITokenAddress,\n            entry_point: \"transfer\",\n            calldata: transferCalldata\n          }\n        ],\n      }\n\n      this.$emit(\"generateTransactionParams\", JSON.stringify(invokeParams))\n      let provider = new OKXStarknetProvider(window.provider)\n\n      let that = this\n      provider.sendTransaction(this.address, invokeParams, \"starknet:mainnet\").then(function(res){\n        console.log(\"starknet_sendTransaction result \", res)\n        that.$emit(\"generateTransactionResult\", res, \"starknet_sendTransaction\")\n      }).catch(function(error) {\n        if (error.code == 301) {\n          let msg = \"Wallet address is registering, please try again later!\"\n          alert(msg)\n          that.$emit(\"generateTransactionResult\", msg, \"starknet_sendTransaction\")\n        }else {\n          that.$emit(\"generateTransactionResult\", error, \"starknet_sendTransaction\")\n        }\n      });\n    },\n\n    getCurrentAddress() {\n      let provider = new OKXStarknetProvider(window.provider)\n      const address = provider.getAccount(\"starknet:mainnet\")?.address\n      return address\n    },\n\n    getPublicKey() {\n      let provider = new OKXStarknetProvider(window.provider)\n      const account = provider.getAccount(\"starknet:mainnet\")\n      console.log(\"获取到的account是：\")\n      console.log(account)\n      return \"05d8e5e9c1dd686246716c888159271d2f13986cb4acee46164e2c4e034629c0\"\n    }\n  },\n\n  data() {\n    const signData = {\n        \"domain\": {\n          \"chainId\": \"0x534e5f4d41494e\",\n          \"name\": \"STRKFarm\",\n          \"version\": \"1\"\n        },\n        \"message\": {\n          \"document\": \"app.strkfarm.xyz/tnc/v1\",\n          \"message\": \"Read and Agree T&C\"\n        },\n        \"primaryType\": \"Tnc\",\n        \"types\": {\n          \"StarkNetDomain\": [\n            {\n              \"name\": \"name\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"version\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"chainId\",\n              \"type\": \"felt\"\n            }\n          ],\n          \"Tnc\": [\n            {\n              \"name\": \"message\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"document\",\n              \"type\": \"felt\"\n            }\n          ]\n        }\n    }\n\n    return {\n      signData\n    }\n  }\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"starknet_signMessage()\">signMessage</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 验签不成功的话，请尝试连接VPN\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"starknet_sendTransaction(true)\">\n        sendTransaction\n      </el-button>\n\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 发送0.12个DAI到0x00b9...4237f的地址\n        </li>\n        <li>\n          2. 请保证你的钱包有足够的DAI\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./StarknetTransactionPanel.vue?vue&type=template&id=082fda2b&scoped=true\"\nimport script from \"./StarknetTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./StarknetTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./StarknetTransactionPanel.vue?vue&type=style&index=0&id=082fda2b&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-082fda2b\"]])\n\nexport default __exports__","<script>\n\n\nimport {OKXTronProvider} from \"@okxconnect/universal-provider\";\nimport {TronWeb} from \"tronweb\";\n\nexport default {\n  name: \"TronTransactionPanel\",\n  methods: {\n\n    async tron_signMessage() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessage(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n\n      const verify = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), res, provider.getAccount(\"tron:mainnet\").address)\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" + res, \"tron_signMessage\")\n    },\n\n    async tron_signMessageV2() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessageV2(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", res);\n      console.log(\"tron_signMessageV2_base58Address\", base58Address)\n      console.log(\"tron_signMessageV2_address\", provider.getAccount(\"tron:mainnet\").address)\n      const verify = base58Address === provider.getAccount(\"tron:mainnet\").address\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" +  res, \"tron_signMessage\")\n    },\n\n    async tron_signTransaction(isOnlySign) {\n      let provider = new OKXTronProvider(window.provider)\n        let tronWeb = new TronWeb({\n          \"fullHost\": 'https://api.trongrid.io',\n          \"headers\": {},\n          \"privateKey\": ''\n        })\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const transaction = await tronWeb.transactionBuilder.sendTrx(\"TGBcVLMnVtvJzjPWZpPiYBgwwb7th1w3BF\", 1000, address);\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let res = await provider.signTransaction( transaction, \"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", res, \"tron_signTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async getContract() {\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41b4a428ab7092c2f1395f376ce297033b3bb446c1\"\n      \n      try {\n        const contract = await tronWeb.trx.getContract(contractAddress)\n        const abi = contract.abi.entrys;\n        console.log(\"获取到的合约：\")\n        console.log(abi)\n      } catch (error) {\n        console.log(\"Error getting contract ABI:\", error);\n      }\n    },\n    \n    async tron_signAndSendTransactionContract(isOnlySign) {\n      // this.getContract()\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41e95812d8d5b5412d2b9f3a4d5a87ca15c5c51f33\"\n      let provider = new OKXTronProvider(window.provider)\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const parameter = [\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n      ]\n      const ret = await tronWeb.transactionBuilder.triggerSmartContract(contractAddress, \"quote(uint256,uint256,uint256)\", {}, parameter, address);\n      console.log(\"=====>transaction: \")\n      console.log(ret);\n      this.$emit(\"generateTransactionParams\", ret.transaction)\n      if (isOnlySign) {\n        let tx = await provider.signTransaction( ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async tron_signAndSendTransactionApprove(isOnlySign) {\n      let contractAddress = \"41b4a428ab7092c2f1395f376ce297033b3bb446c1\"\n      let provider = new OKXTronProvider(window.provider)\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const parameter = [\n        {type: 'address', value: contractAddress},\n        {type: 'uint256', value: 1000},\n      ]\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      const ret = await tronWeb.transactionBuilder.triggerSmartContract(contractAddress, \"approve(address,uint256)\", {}, parameter, address);\n\n      let transaction = ret.transaction\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let tx = await provider.signTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n\n    }\n\n  }\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessage()\">tron_signMessage</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessageV2()\">tron_signMessageV2</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(true)\">\n        tron_signTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(true)\">\n        tron_signTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(true)\">\n        tron_signTransaction(Approve)\n      </el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(false)\">\n        tron_signAndSendTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(false)\">\n        tron_signAndSendTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(false)\">\n        tron_signAndSendTransaction(approve)\n      </el-button>\n    </el-col>\n\n\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./TronTransactionPanel.vue?vue&type=template&id=55a13ab0&scoped=true\"\nimport script from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./TronTransactionPanel.vue?vue&type=style&index=0&id=55a13ab0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-55a13ab0\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=74989896&scoped=true\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=74989896&scoped=true&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-74989896\"]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport ElementPlus from 'element-plus'\nimport 'element-plus/dist/index.css'\nimport App from './App.vue'\n\nconst app = createApp(App)\n\napp.use(ElementPlus)\napp.mount('#app')","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? function(obj) { return Object.getPrototypeOf(obj); } : function(obj) { return obj.__proto__; };\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(function(key) { def[key] = function() { return value[key]; }; });\n\t}\n\tdef['default'] = function() { return value; };\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkokxconnectdemo\"] = self[\"webpackChunkokxconnectdemo\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(47657); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["id","_createElementBlock","_hoisted_1","_createVNode","_component_el_container","default","_withCtx","_component_el_header","_cache","_createTextVNode","_","_component_el_main","_component_el_card","class","header","_createElementVNode","style","_component_el_row","_component_el_col","span","_toDisplayString","$options","getWalletAddress","_ctx","currentStatus","_component_el_checkbox","modelValue","withUI","$event","onChange","handleWithUI","universalToTG","handleUniversalToTG","_component_el_select","modals","placeholder","handleModalsSelect","multiple","_component_el_option","label","value","returnStrategy","handleReturnStrategySelect","_Fragment","_renderList","returnStrategies","strategy","_createBlock","key","_component_el_input","deeplink","handleReturnStrategyDeeplink","disabled","_createCommentVNode","language","handleLanguageSelect","locales","locale","theme","handleThemeSelect","THEME","LIGHT","DARK","selectedMethod","handleConnectMethodsSelect","connectMethods","item","tonProofValue","gutter","align","Object","keys","availableChains","checked","areChainsInit","name","isOptionalChecked","handleOptionChange","_component_el_button","type","onClick","initBtnClicked","icon","connectInitStr","connectBtnClicked","connectStatusStr","syncAllAddressClick","syncAllAddressStr","disconnectAction","walletAddress","length","disconnectStatusStr","_Teleport","to","showModal","args","closeModal","_withModifiers","_component_qrcode_vue","qrValue","size","level","_component_el_tabs","activeTab","onTabClick","clickActiveTab","_component_el_tab_pane","eth_requestAccounts","eth_chainId","wallet_switchEthereumChain","wallet_addEthereumChain","personal_sign","eth_signTypedData_v4","eth_sendTransaction_transfer","eth_sendTransaction_approve","eth_sendTransaction_mint","wallet_watchAsset","oversized_personal_sign","ton_getAccount","ton_sendTransaction","sol_signMessage","sol_signTransaction","sol_signVersionedTransaction","sol_signAllTransactions","sol_signAllVersionedTransactions","sol_signAndSendTransaction","sol_signAndSendVersionedTransaction","_component_SuiPanel","onGenerateTransactionParams","sui_generateTransactionParams","_component_BTCPanel","btc_generateTransactionParams","_component_FractalPanel","fractal_generateTransactionParams","_component_TronTransactionPanel","tron_generateTransactionParams","onGenerateTransactionResult","tron_getTransactionResult","aptos_signMessage","aptos_signTransaction","aptos_signAndSubmitTransaction","cosmos_signArbitrary","cosmos_signAmino","cosmos_signDirect","wallet_testRpc","eth_sendTransaction_swap","move_signTransaction","move_signAndSubmitTransaction","_component_StarknetPanel","ref","starknet_generateTransactionParams","starknet_getTransactionResult","testBase64UrlSafe","xs","sm","redirect","handleRedirectSelect","canChainAddRedirectParam","redirectDeeplink","handleRedirectDeeplink","addRedirectParam","testTransaction","rows","testboc","$setup","sendBtnDisabled","sendTransaction","testTransactionStr","btc_getAccount","btc_signMessage","sendAmount","clearable","btc_send","sendSatoshisAmount","btc_sendBitcoin","psbtHex","btc_signPsbt_up","btc_signAndPushPsbt_up","nftId","receiver","btc_sendInscription","props","msg","String","setup","methods","this","$emit","params","from","signStr","alert","toAddress","satoshis","options","feeRate","autoFinalized","address","inscriptionId","__exports__","fractal_getAccount","fractal_signMessage","fractal_send","fractal_sendBitcoin","fractal_signPsbt_up","fractal_signAndPushPsbt_up","fractal_sendInscription","sui_getAccount","sui_signMessage","sui_signPersonalMessage","sui_signTransaction2","sui_signAndExecuteTransaction","sui_requestRpc","sui_signTransaction_pre_execution","sui_signAndExecuteTransaction_pre_execution","data","uint8Array","Uint8Array","input","message","amount","recipientAddress","tx","SuiTransaction","coin","splitCoins","gas","transferObjects","transactionBlock","account","chain","showEffects","provider","window","setDefaultChain","method","txBytes","txSerialize","generateTsBytesAndSerizlize","resultTuple","Promise","resolve","senderAccounts","requestAccountsWithNamespace","rpcUrl","getFullnodeUrl","suiClient","SuiClient","url","setSender","result","build","client","Buffer","toString","toJSON","error","JSON","stringify","currentSuiTransaction","currentSuiMethod","starknet_signMessage","starknet_sendTransaction","getCurrentAddress","signData","OKXStarknetProvider","res","signMessage","code","console","log","rpcProvider","RpcProvider","nodeUrl","pk","Account","that","verifyMessage","then","isValid","catch","val","uint256","bnToUint256","transferCalldata","CallData","compile","DAITokenAddress","invokeParams","calls","contract_address","entry_point","calldata","getAccount","getPublicKey","tron_signMessage","tron_signMessageV2","tron_signTransaction","tron_signAndSendTransactionContract","tron_signAndSendTransactionApprove","OKXTronProvider","tronWeb","TronWeb","verify","trx","signMessageV2","base58Address","verifyMessageV2","isOnlySign","transaction","transactionBuilder","sendTrx","signTransaction","signAndSendTransaction","getContract","contractAddress","contract","abi","entrys","parameter","ret","triggerSmartContract","verifyADR36Amino","require","fromBech32","VConsole","allChains","chainsThatCanAddRedirectParam","optionChains","Set","selectedModals","selectedReturnStrategy","selectedDeepLink","selectedLanguage","selectedTheme","components","TronTransactionPanel","QrcodeVue","BTCPanel","FractalPanel","SuiPanel","StarknetPanel","testTopic","testPublicKey","testProofPayload","pendingDeepLink","logList","connectReady","localPubKey","localSecKey","selectedChain","ProofPayloadVerify","showVerifyRow","chainId","has","localStorage","getItem","selectedMethodData","isChecked","setItem","location","reload","delete","add","starknetPanelTypedData","computed","selectedChains","initChains","newChains","updatedChains","assign","tab","tabName","initCall","okxLogDebug","OKXUniversalConnectUI","init","dappMetaData","actionsConfiguration","uiPreferences","OKXUniversalProvider","tonProvider","OKXTonProvider","onStatusChange","walletInfo","err","onModalStateChange","state","session","namespaces","entries","forEach","chains","push","parseInt","substring","on","uri","useShortLink","isPC","items","topic","Date","now","testTonSdk","connected","syncAllAddresses","e","disconnect","blockExplorerUrls","chainName","nativeCurrency","symbol","decimals","rpcUrls","fromAccountToAddress","addressArr","split","slice","join","requestEVMAccountWithSession","includes","namespace","evmNameSpace","accounts","filter","map","dataETH","dataPolygon","payload","request","types","EIP712Domain","Person","Mail","primaryType","domain","version","verifyingContract","wallet","contents","maxPriorityFeePerGas","maxFeePerGas","gasPrice","nonce","gasLimit","str","image","tonUniversalLog","sendTransactionAlert","response","fetch","json","confirm","startsWith","sendData","parse","adapter","SuiAdapter","suiResult","signAndExecuteTransaction","sui_verifySignature","signPersonalMessage","btcAdapter","OKXBtcProvider","btcResult","currentBtcMethod","currentBtcTransaction","send","signPsbt","hexToBase64","bs64Str","signPsbts","psbtHexs","sendInscription","signAndPushPsbt","sendBitcoin","fractalResult","currentFractalMethod","currentFractalTransaction","OKX_CONNECT_ERROR_CODES","USER_REJECTS_ERROR","hexStr","bytes","i","substr","buffer","blob","Blob","reject","reader","FileReader","onload","base64Data","target","onerror","readAsDataURL","datatest","utf8Array","TextEncoder","encode","binary","byte","fromCharCode","firstStr","btoa","replace","showUrl","getUniversalLink","getAppWalletDeepLink","hasEip155","hasSolana","hasSui","hasBtc","hasAptos","hasTon","hasCosmos","hasTron","nameSpacesChains","optSpaceChains","solanaChains","hasStarknet","suiChains","btcChains","values","connectMethod","connectData","requireData","eip155","defaultChain","solana","cosmos","tron","starknet","tonParams","ton_addr","ton_proof","ton","sui","rpcMap","aptos","btc","optData","eip155Chains","tonChains","signMethods","getCurrentSelectedMethodData","openModalAndSign","openModal","sessionConfig","useMini","openUniversalUrl","tmaReturnUrl","connectAndSign","connect","setTimeout","methodList","suiData","currentMethod","application","accountAddress","typedData","userAgentInfo","navigator","userAgent","Agents","flag","v","indexOf","isSafariOrChrome","pubkey","OKXSolanaProvider","result1","nacl","detached","signature","PublicKey","publicKey","toBytes","OKXAptosProvider","config","AptosConfig","network","Network","MAINNET","Aptos","simple","sender","function","typeArguments","functionArguments","safeJsonStringify","signAndSubmitTransaction","connection","Connection","getSolConnect","blockhash","getLatestBlockhash","versionedTransactionMessage","TransactionMessage","payerKey","recentBlockhash","instructions","SystemProgram","transfer","fromPubkey","toPubkey","lamports","compileToV0Message","VersionedTransaction","signAllTransactions","Transaction","feePayer","rpc","OKXCosmosProvider","signArbitrary","cosmos_verifySignArbitrary","pub_key","signer","prefix","prefixStr","signatureBuffer","uint8Signature","pubKeyValueBuffer","pubKeyUint8Array","signDoc","signAmino","messageToBuffer","signDirect","uiOptions","eth_verifyMessage","ethAddress","originalMessage","recoveredAddress","ethers","toLowerCase","list","verifyList","methodItem","requestItme","ethMessage","solanaMessage","verifySol","aptosMessage","aptosProvider","aptosPublicKey","fullMessage","cosmosProvider","cosmosAddress","cosmosMessage","tronMessage","StarknetRpcProvider","StarknetAccount","signatureResult","resultObj","pubKey","verifyPersonalMessageSignature","toSuiAddress","toBase64","newTransaction","some","c","created","mounted","scriptTag","document","createElement","src","getElementsByTagName","appendChild","title","$refs","starknetPanelRef","toRaw","render","app","createApp","App","use","ElementPlus","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","loaded","__webpack_modules__","call","m","amdO","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","splice","r","n","getter","__esModule","d","a","leafPrototypes","getProto","getPrototypeOf","obj","__proto__","t","mode","ns","create","def","current","getOwnPropertyNames","definition","o","defineProperty","enumerable","get","g","globalThis","Function","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","children","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}