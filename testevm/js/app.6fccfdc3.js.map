{"version":3,"file":"js/app.6fccfdc3.js","mappings":"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","sources":["webpack://okxconnectdemo/./src/App.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue?1b44","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue?e4fb","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue?aa83","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue?089a","webpack://okxconnectdemo/./src/App.vue?7ccd","webpack://okxconnectdemo/./src/main.js","webpack://okxconnectdemo/webpack/bootstrap","webpack://okxconnectdemo/webpack/runtime/amd options","webpack://okxconnectdemo/webpack/runtime/chunk loaded","webpack://okxconnectdemo/webpack/runtime/compat get default export","webpack://okxconnectdemo/webpack/runtime/define property getters","webpack://okxconnectdemo/webpack/runtime/global","webpack://okxconnectdemo/webpack/runtime/hasOwnProperty shorthand","webpack://okxconnectdemo/webpack/runtime/make namespace object","webpack://okxconnectdemo/webpack/runtime/node module decorator","webpack://okxconnectdemo/webpack/runtime/jsonp chunk loading","webpack://okxconnectdemo/webpack/startup"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <el-container>\n      <el-header>OKX Connect</el-header>\n      <el-main>\n        <el-card class=\"wallet-info\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Wallet Info</div>\n          </template>\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Wallet Address:</strong> {{ getWalletAddress }}\n            </el-col>\n          </el-row>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Status :</strong> {{ currentStatus }}\n            </el-col>\n          </el-row>\n\n        </el-card>\n\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Connect Params</div>\n          </template>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"12\">\n              <el-checkbox v-model=\"withUI\" @change=\"handleWithUI\">\n                Show UI</el-checkbox>\n            </el-col>\n\n            <el-col :span=\"12\">\n              <el-checkbox v-model=\"universalToTG\" @change=\"handleUniversalToTG\">\n                Use mini wallet</el-checkbox>\n            </el-col>\n          </el-row>\n\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Modals</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"modals\" placeholder=\"Modals\" @change=\"handleModalsSelect\" multiple>\n                <el-option label=\"Before\" value=\"before\" />\n                <el-option label=\"Success\" value=\"success\" />\n                <el-option label=\"Error\" value=\"error\" />\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center; justify-content: space-between;\">\n            <el-col :span=\"6\" style=\"gap: 2px\">\n              <p style=\"font-size: 11pt; margin: 0px\">Return Strategy</p>\n              <p style=\"font-size: 9pt; margin: 0px\">(Mobile only)</p>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-select\n                v-model=\"returnStrategy\"\n                @change=\"handleReturnStrategySelect\"\n                placeholder=\"Return Strategy\"\n              >\n                <el-option\n                  v-for=\"strategy in returnStrategies\"\n                  :key=\"`return-strategy-select-option-${strategy}`\"\n                  :label=\"strategy\"\n                  :value=\"strategy\"\n                />\n              </el-select>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-input\n                v-if=\"returnStrategy === 'deeplink'\"\n                v-model=\"deeplink\"\n                @change=\"handleReturnStrategyDeeplink\"\n                placeholder=\"Deeplink\"\n                :disabled=\"returnStrategy !== 'deeplink'\"\n                style=\"margin: 0px\"\n              />\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Lang</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"language\" @change=\"handleLanguageSelect\" placeholder=\"Language\">\n                <el-option v-for=\"locale in locales\" :key=\"`language-select-option-${locale}`\" :label=\"locale\"\n                  :value=\"locale\" />\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Theme</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"theme\" @change=\"handleThemeSelect\" placeholder=\"Theme\">\n                <el-option label=\"LIGHT\" :value=\"THEME.LIGHT\" />\n                <el-option label=\"DARK\" :value=\"THEME.DARK\" />\n              </el-select>\n            </el-col>\n          </el-row>\n\n<!--          <el-row>-->\n<!--          <el-row style=\"align-items: center\">-->\n<!--            <el-col :span=\"4\">-->\n<!--              <p style=\"font-size: 11pt\">Connect</p>-->\n<!--              <p style=\"font-size: 11pt\">Methods</p>-->\n<!--            </el-col>-->\n<!--            <el-col :span=\"20\">-->\n<!--              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" placeholder=\"Methods\">-->\n<!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n<!--                           :value=\"methods\" />-->\n\n<!--              </el-select>-->\n<!--            </el-col>-->\n<!--          </el-row>-->\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Connect</p>\n              <p style=\"font-size: 11pt\">Methods</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" multiple placeholder=\"methods\">\n                <el-option\n                    v-for=\"item in connectMethods\"\n                    :key=\"item\"\n                    :label=\"item\"\n                    :value=\"item\">\n                </el-option>\n              </el-select>\n\n\n<!--              <el-select v-model=\"selectedMethod\" placeholder=\"Methods\" @change=\"handleConnectMethodsSelect\" multiple>-->\n<!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n<!--                           :value=\"methods\" />-->\n<!--              </el-select>-->\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">ton_proof</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-input v-model=\"tonProofValue\"  placeholder=\"input ton_proof\"></el-input>\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" align=\"middle\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Required Chains</div>\n            </el-col>\n            <el-col\n              :span=\"6\"\n              v-for=\"item in Object.keys(availableChains)\"\n              :key=\"item\"\n            >\n              <el-checkbox\n                v-model=\"availableChains[item].checked\"\n                :disabled=\"!areChainsInit\"\n                >{{ availableChains[item].name }}</el-checkbox\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" align=\"middle\" style=\"margin-top: 20px\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Optional Chains</div>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(43114)\" @change=\"() => handleOptionChange(43114)\">\n                AVAX</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(10)\" @change=\"() => handleOptionChange(10)\">OP</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(8453)\" @change=\"() => handleOptionChange(8453)\">\n                BASE</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(99781165)\"\n                @change=\"() => handleOptionChange(99781165)\">Nonexist</el-checkbox>\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"initBtnClicked\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectInitStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                type=\"primary\"\n                @click=\"connectBtnClicked\"\n                icon=\"el-icon-connection\"\n                :disabled=\"!areChainsInit\"\n                >{{ connectStatusStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"syncAllAddressClick\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ syncAllAddressStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                type=\"danger\"\n                @click=\"disconnectAction\"\n                icon=\"el-icon-switch-button\"\n                :disabled=\"!areChainsInit || walletAddress.length == 0\"\n                >{{ disconnectStatusStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n          <teleport to=\"body\">\n            <div v-if=\"showModal\" class=\"modal-overlay\" @click=\"closeModal\">\n              <div class=\"modal-content\" @click.stop>\n                <button class=\"close-button\" @click=\"closeModal\">\n                  &times;\n                </button>\n                <h2>Scan to connect</h2>\n                <qrcode-vue :value=\"qrValue\" :size=\"350\" level=\"L\" />\n              </div>\n            </div>\n          </teleport>\n        </el-card>\n\n        <!-- 发送交易 -->\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Transactions</div>\n          </template>\n\n          <el-tabs v-model=\"activeTab\" type=\"border-card\" @tab-click=\"clickActiveTab\">\n            <!-- ETH -->\n            <el-tab-pane label=\"ETH\" name=\"eip155:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to ETH)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve TONCoin)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(eth mint\n                    nft)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add SPX6900)\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TON\" name=\"ton:-239\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_getAccount\">ton_getAccount</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_sendTransaction\">ton_sendTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- solana -->\n            <el-tab-pane label=\"Sol\" name=\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- Sui-->\n            <el-tab-pane label=\"Sui\" name=\"sui:mainnet\">\n              <SuiPanel @generateTransactionParams=\"sui_generateTransactionParams\" />\n            </el-tab-pane>\n            <!-- BTC -->\n            <el-tab-pane label=\"BTC\" name=\"btc:mainnet\">\n              <BTCPanel @generateTransactionParams=\"btc_generateTransactionParams\" />\n            </el-tab-pane>\n\n            <!-- Fractal BTC -->\n            <el-tab-pane label=\"Fractal\" name=\"fractal:mainnet\">\n              <FractalPanel @generateTransactionParams=\"fractal_generateTransactionParams\" />\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Tron\" name=\"tron:mainnet\">\n              <TronTransactionPanel\n                  @generateTransactionParams=\"tron_generateTransactionParams\"\n                  @generateTransactionResult=\"tron_getTransactionResult\" />\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Aptos\" name=\"aptos:mainnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signTransaction\">aptos_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"aptos_signAndSubmitTransaction\">aptos_signAndSubmitTransaction</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Cosmos\" name=\"cosmos:cosmoshub-4\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <!-- Polygon-->\n            <el-tab-pane label=\"Polygon\" name=\"eip155:137\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send POL)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve sushi)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(polygon mint\n                    nft)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add LGNS)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_testRpc()\">wallet_testRpc(Polygon)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\"\n                  >eth_sendTransaction(转账FUSE)</el-button\n                  >\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\"\n                  >eth_sendTransaction(授权USDC)</el-button\n                  >\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- BSC-->\n            <el-tab-pane label=\"BNB\" name=\"eip155:56\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to BNB)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve POSI)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add FET)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_testRpc()\">wallet_testRpc(check balance on eth)</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Fuse\" name=\"eip155:122\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_swap\">eth_sendTransaction(Swap)</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Sonic testnet\" name=\"svm:70000062\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Movement\" name=\"movement:testnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"move_signTransaction\">move_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"move_signAndSubmitTransaction\">move_signAndSubmitTransaction</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n\n            <el-tab-pane label=\"osmos\" name=\"cosmos:osmosis-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"SEI\" name=\"cosmos:pacific-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TEST \" name=\"test:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"testBase64UrlSafe\">testBase64UrlSafe</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n          </el-tabs>\n\n          <el-col :xs=\"24\" :sm=\"24\" style=\"margin: 16px 0px;\">\n            <el-row style=\"align-items: center; justify-content: space-between; margin-bottom: 8px;\">\n              <el-col :span=\"4\">\n                <p style=\"font-size: 11pt; margin: 0px; text-align: start\">Redirect param (only for ETH, Polygon, BNB, Fuse)</p>\n              </el-col>\n              <el-col :span=\"9\">\n                <el-select\n                  v-model=\"redirect\"\n                  @change=\"handleRedirectSelect\"\n                  placeholder=\"Return Strategy\"\n                  :disabled=\"!canChainAddRedirectParam()\"\n                  >\n                  <el-option\n                    v-for=\"strategy in returnStrategies\"\n                    :key=\"`return-strategy-select-option-${strategy}`\"\n                    :label=\"strategy\"\n                    :value=\"strategy\"\n                  />\n                </el-select>\n              </el-col>\n              <el-col :span=\"10\">\n                <el-input\n                  v-if=\"redirect === 'deeplink'\"\n                  v-model=\"redirectDeeplink\"\n                  @change=\"handleRedirectDeeplink\"\n                  placeholder=\"Deeplink\"\n                  :disabled=\"!canChainAddRedirectParam() || redirect !== 'deeplink'\"\n                  style=\"margin: 0px\"\n                />\n              </el-col>\n            </el-row>\n            <el-button\n              type=\"primary\" @click=\"addRedirectParam()\"\n              :disabled=\"!canChainAddRedirectParam() || !testTransaction\"\n            >\n              Add redirect param to data\n            </el-button>\n          </el-col>\n\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Data:</div>\n            <el-input v-model=\"testTransaction\" type=\"textarea\" :rows=\"5\" placeholder=\"sendTransactions\"></el-input>\n          </el-col>\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Result :</div>\n            <el-input v-model=\"testboc\" type=\"textarea\" :rows=\"5\" placeholder=\"boc\"></el-input>\n          </el-col>\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button type=\"primary\" @click=\"sendTransaction()\">{{\n                testTransactionStr\n                }}</el-button>\n            </el-col>\n          </el-row>\n        </el-card>\n      </el-main>\n    </el-container>\n  </div>\n</template>\n\n<style scoped>\n/* 重置全局边距和内边距 */\nbody,\nhtml {\n  margin: 0;\n  padding: 0;\n  height: 100%;\n}\n\n/* 确保 app 容器占满整个视口 */\n#app {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin: 0 auto;\n  /* 居中 */\n  max-width: 600px;\n  /* 设置最大宽度 */\n  padding: 0 20px;\n  /* 添加一些左右内边距 */\n}\n\n/* 调整 el-container 样式 */\n.el-container {\n  min-height: 100vh;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n}\n\n/* 调整 el-header 样式 */\n.el-header {\n  background-color: #333333;\n  color: white;\n  height: 50px;\n  line-height: 50px;\n  font-size: 18px;\n  font-weight: bold;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1000;\n}\n\n/* 调整 el-main 样式 */\n.el-main {\n  padding: 70px 0 20px;\n  /* 增加顶部内边距以避免被固定header遮挡 */\n  flex-grow: 1;\n}\n\n.el-card {\n  margin-bottom: 20px;\n}\n\n.info-row {\n  margin-bottom: 10px;\n}\n\n.input-label {\n  margin-bottom: 5px;\n  text-align: left;\n}\n\n.el-input {\n  margin-bottom: 10px;\n}\n\n/* 通用按钮样式 */\n.wallet-actions .el-button,\n.transaction .el-button,\n.clear-cache .el-button {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 40px;\n}\n\n.wallet-actions .el-button span,\n.transaction .el-button span,\n.clear-cache .el-button span {\n  margin: 0 auto;\n}\n\n/* 按钮行间距 */\n.wallet-actions .button-row,\n.transaction .button-row {\n  margin-bottom: 8px;\n}\n\n.wallet-actions .button-row:last-child,\n.transaction .button-row:last-child {\n  margin-bottom: 0;\n}\n\n/* 调整图标和文字的对齐 */\n.wallet-actions .el-button [class^=\"el-icon-\"],\n.transaction .el-button [class^=\"el-icon-\"],\n.clear-cache .el-button [class^=\"el-icon-\"] {\n  margin-right: 5px;\n  vertical-align: middle;\n}\n\n/* 新增：调整发送交易按钮与输入框的间距 */\n.transaction .el-row:not(:last-child) {\n  margin-bottom: 10px;\n}\n\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.modal-content {\n  background-color: white;\n  padding: 20px;\n  border-radius: 8px;\n  text-align: center;\n  position: relative;\n  max-width: 90%;\n  width: 400px;\n}\n\n.close-button {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  font-size: 24px;\n  border: none;\n  background: none;\n  cursor: pointer;\n}\n\n/* 响应式调整 */\n@media (max-width: 600px) {\n  #app {\n    padding: 0 10px;\n  }\n\n  .el-main {\n    padding: 60px 0 10px;\n  }\n}\n</style>\n<script>\nimport {OKX_CONNECT_ERROR_CODES, safeJsonStringify,getAppWalletDeepLink,getUniversalLink} from \"@okxconnect/core\"\nimport {\n  OKXBtcProvider,\n  OKXUniversalProvider,\n  OKXCosmosProvider,\n  OKXTonProvider,\n  OKXTronProvider\n} from \"@okxconnect/universal-provider\"\nimport {OKXSolanaProvider} from \"@okxconnect/solana-provider\";\nimport {\n  Connection,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n  TransactionMessage,\n  VersionedTransaction\n} from '@solana/web3.js';\nimport {OKXSuiProvider as SuiAdapter} from \"@okxconnect/sui-provider\"\nimport QrcodeVue from 'qrcode.vue'\n\nimport {OKXAptosProvider} from \"@okxconnect/aptos-provider\";\nimport {Aptos, AptosConfig, Network} from \"@aptos-labs/ts-sdk\";\n\nimport BTCPanel from \"./components/BtcTransactionPanel.vue\";\nimport FractalPanel from \"./components/FractalTransactionPanel.vue\"\nimport SuiPanel from \"./components/SuiTransactionPanel.vue\";\n\nimport {OKXUniversalConnectUI, THEME} from \"@okxconnect/ui\";\nimport { ethers } from 'ethers';\nimport VConsole from 'vconsole';\nimport nacl from \"tweetnacl\";\nconst { verifyADR36Amino } = require('@keplr-wallet/cosmos')\nconst { fromBech32 } = require('@cosmjs/encoding')\nimport { verifyPersonalMessageSignature } from '@mysten/sui/verify';\nimport {useShortLink} from \"@okxconnect/core\";\nimport TronTransactionPanel from \"@/components/TronTransactionPanel.vue\";\nimport {TronWeb} from \"tronweb\";\nnew VConsole();\n\nconst allChains = {\n  1: { name: \"Eth\", checked: false },\n  56: { name: \"BNB\", checked: false },\n  137: { name: \"Polygon\", checked: false },\n  122: { name: \"Fuse\", checked: false },\n  \"ton:-239\":{name: \"TON\",checked: false},\n  \"btc:mainnet\": { name: \"BTC\", checked: false },\n  \"sui:mainnet\": { name: \"Sui\", checked: false },\n  \"aptos:mainnet\": { name: \"Aptos\", checked: false },\n  \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\": {\n    name: \"Solana\",\n    checked: false,\n  },\n  \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\": {\n    name: \"Sol testnet\",\n    checked: false,\n  },\n  \"svm:70000062\": {\n    name: \"Sonic testnet\",\n    checked: false,\n  },\n  \"movement:testnet\": { name: \"Movement\", checked: false },\n  \"fractal:mainnet\": { name: \"Fractal\", checked: false },\n  \"cosmos:osmosis-1\": {name: \"Osmos\", checked: false},\n  \"cosmos:cosmoshub-4\": {name: \"Cosmos\", checked: false},\n  \"cosmos:pacific-1\": {name: \"SEI\", checked: false},\n  \"cosmos:abvdefg\": {name: \"cosmos:abvdefg\", checked: false},\n  \"tron:mainnet\": {name: \"tron\", checked: false},\n  997865: { name: \"Non Exist chain\", checked: false },\n  2020: { name: \"Ronin\", checked: false },\n  1666600000: { name: \"Harmony\", checked: false },\n};\n\nconst chainsThatCanAddRedirectParam = [\n  \"eip\"\n]\n\nvar optionChains = new Set([]);\nvar selectedModals = [\"before\", \"success\", \"error\"];\nvar selectedReturnStrategy = \"none\";\nvar selectedDeepLink = \"tg://resolve\";\nvar selectedLanguage = \"en_US\";\nvar selectedTheme = THEME.LIGHT;\n\n// import QrcodeVue from 'qrcode.vue'\nexport default {\n  name: \"App\",\n  components: {\n    TronTransactionPanel,\n    QrcodeVue,\n    BTCPanel,\n    FractalPanel,\n    SuiPanel\n  },\n\n  data: () => {\n    return {\n      activeTab: \"eip155:1\",\n      testTopic: \"\",\n      testPublicKey: \"\",\n      testProofPayload: \"\",\n      tonProofValue:\"\",\n      pendingDeepLink: \"-\",\n      logList: [],\n      connectReady: false,\n      connectStatusStr: \"Connect\",\n      syncAllAddressStr: \"syncAllAddress\",\n      connectInitStr: \"init test\",\n      disconnectStatusStr: \"Disconnect\",\n      localPubKey: \"\",\n      localSecKey: \"\",\n      testTransaction: \"\",\n      selectedChain: \"eip155:1\",\n      testTransactionStr: \"Send\",\n      walletAddress: \"\",\n      testboc: \"\",\n      ProofPayloadVerify: \"\",\n      showModal: false,\n      showVerifyRow: false,\n      qrValue: \"https://www.okx.com/download\",\n      currentStatus: \"\",\n      areChainsInit: false,\n      availableChains: allChains,\n      isOptionalChecked: (chainId) => {\n        return optionChains.has(chainId);\n      },\n      withUI: localStorage.getItem(\"autoRefresh\") != \"false\",\n      universalToTG: localStorage.getItem(\"universalToTG\") != \"false\",\n      modals: selectedModals,\n      returnStrategies: [\"none\", \"back\", \"deeplink\"],\n      returnStrategy: selectedReturnStrategy,\n      deeplink: selectedDeepLink,\n      locales: [\n        \"en_US\",\n        \"ru_RU\",\n        \"zh_CN\",\n        \"zh\",\n        \"ar_AE\",\n        \"cs_CZ\",\n        \"de_DE\",\n        \"es_ES\",\n        \"es_LAT\",\n        \"fr_FR\",\n        \"id_ID\",\n        \"it_IT\",\n        \"nl_NL\",\n        \"pl_PL\",\n        \"pt_BR\",\n        \"pt_PT\",\n        \"ro_RO\",\n        \"tr_TR\",\n        \"uk_UA\",\n        \"vi_VN\",\n        \"zh_TW\"\n      ],\n      selectedMethod:[],\n      selectedMethodData:[],\n      connectMethods:[\n        \"wallet_addEthereumChain(ETH)\",\n        \"personal_sign(ETH)\",\n        \"solana_signMessage(Sol mainnet)\",\n        \"sui_signMessage(Sui mainnet)\",\n        \"sui_signPersonalMessage(Sui mainnet)\",\n        \"btc_signMessage(BTC)\",\n        \"aptos_signMessage(aptos mainnet)\",\n        \"cosmos_signArbitrary(cosmoshub)\",\n        \"test_noSupport_eth(ETH)\",\n        \"tron_signMessage\",\n        \"tron_signMessageV2\",\n        \"sync_all_addresses\"\n      ],\n\n      language: selectedLanguage,\n      theme: selectedTheme,\n      THEME: THEME,\n      redirect: selectedReturnStrategy,\n      redirectDeeplink: selectedDeepLink,\n      handleWithUI: (isChecked) => {\n        localStorage.setItem(\"autoRefresh\", `${isChecked}`);\n        location.reload();\n      },\n      handleUniversalToTG: (isChecked) => {\n        localStorage.setItem(\"universalToTG\", `${isChecked}`);\n      },\n      handleOptionChange: (chainId) => {\n        if (optionChains.has(chainId)) {\n          optionChains.delete(chainId);\n        } else {\n          optionChains.add(chainId);\n        }\n      },\n    };\n  },\n  computed: {\n    getWalletAddress: function () {\n      return this.walletAddress;\n    },\n  },\n  methods: {\n    isChecked(chainId) {\n      return this.selectedChains.has(chainId);\n    },\n\n    initChains(newChains) {\n      if (newChains.length > 0) {\n        const updatedChains = Object.assign({}, this.availableChains);\n        for (const chainId of newChains) {\n          if (updatedChains[chainId]){\n            updatedChains[chainId].checked = !updatedChains[chainId].checked;\n          }\n        }\n        this.availableChains = updatedChains;\n      }\n\n      this.areChainsInit = true;\n    },\n\n    async clickActiveTab(tab) {\n      const tabName = tab.props ? tab.props.name : tab.name;\n      this.selectedChain = tabName;\n      console.log(`已切换到链 :`, tabName);\n\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      window.provider.setDefaultChain(this.selectedChain);\n    },\n\n    async initBtnClicked() {\n      var initCall;\n      if (!this.withUI) {\n        initCall = OKXUniversalProvider.init({\n          dappMetaData: {\n            name: \"univer test dapp\",\n            icon: \"https://avatars.githubusercontent.com/u/37784886\",\n          },\n        });\n      } else {\n        initCall = OKXUniversalConnectUI.init({\n          dappMetaData: {\n            icon: \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\",\n            name: \"OKX WalletConnect UI Demo\",\n          },\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: \"all\",\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme\n          },\n        });\n      }\n\n      initCall.then((provider) => {\n        window.provider = provider;\n        window.tonProvider = new OKXTonProvider(window.provider);\n        window.tonProvider.onStatusChange((walletInfo) => {\n              console.log('TONConnection onStatusChange:', JSON.stringify(walletInfo));\n            }, (err) => {\n              console.log('TONConnection onStatusChange error:', err);\n            }\n        )\n\n        if (window.provider instanceof OKXUniversalConnectUI) {\n          window.provider.onModalStateChange((state)=>{\n            console.log(`onModalStateChange   ${JSON.stringify(state)}`)\n          })\n        }\n\n        console.log(\"init finished:\", provider);\n        console.log(\"init finished session:\", JSON.stringify(provider.session));\n\n        if (provider.session?.namespaces) {\n          const newChains = [];\n          console.log(\"namespaces\", provider.session.namespaces);\n          Object.entries(provider.session.namespaces).forEach(([key, value]) => {\n            if (key === \"eip155\") {\n              value.chains.forEach((chain) => {\n                newChains.push(parseInt(chain.substring(7)));\n              });\n            }\n            else {\n              value.chains.forEach((chain) => {\n                newChains.push(chain);\n              });\n            }\n          });\n\n          console.log(\"existing chains:\", newChains);\n          this.initChains(newChains);\n        } else {\n          this.initChains([]);\n        }\n\n        provider.on(\"display_uri\", (uri) => {\n          if (!useShortLink()){\n            if (this.isPC()) {\n              if (uri && !this.withUI && !this.universalToTG) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          }\n          console.log(\"通知>>>display_uri  ==> \", uri);\n        });\n\n        provider.on(\"connect_signResponse\", (items) => {\n          console.log(\"通知>>>connect_signResponse  ==> \", JSON.stringify(items));\n          this.verifyMessage(items)\n        })\n\n        provider.on(\"short_display_uri\", (uri) => {\n          if (useShortLink()){\n            if (this.isPC()) {\n              if (uri && !this.withUI && !this.universalToTG) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          }\n          console.log(\"通知>>>short_display_uri  ==> \", uri);\n        });\n\n\n        provider.on(\"session_connecting\", () => {\n          if (useShortLink()){\n            alert(\"session_connecting\")\n          }\n          console.log(\"通知>>>session_connecting  ==> \");\n        });\n\n        provider.on(\"connect\", (session) => {\n          console.log(\"通知>>>get connect session\", session);\n        });\n        provider.on(\"reconnect\", (session) => {\n          console.log(\"通知>>>get reconnect session\", session);\n          this.walletAddress = \"connected\";\n        });\n        provider.on(\"disconnect\", ({ topic }) => {\n          console.log(`通知>>>get disconnect  ${topic}`);\n          this.walletAddress = \"disconnecteddddd\";\n        });\n        provider.on(\"session_delete\", ({ topic }) => {\n          console.log(`通知>>>get session_delete  ${topic}`);\n        });\n        provider.on(\"session_update\", (session) => {\n          console.log(`通知>>>get session_update `, JSON.stringify(session));\n        });\n      });\n    },\n\n    async connectBtnClicked() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        this.testTonSdk();\n      } else {\n        console.log(`connectBtnClicked provider not finish init`);\n      }\n    },\n\n    async syncAllAddressClick() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        if (window.provider instanceof OKXUniversalProvider){\n          if (window.provider.connected()){\n            try {\n              let message = await window.provider.syncAllAddresses()\n              if (typeof message == \"string\") {\n                this.testboc = message\n              } else {\n                this.testboc = JSON.stringify(message)\n              }\n            }catch (e) {\n              this.testboc = JSON.stringify(e)\n            }\n          }else{\n            this.testboc = \"not connected\"\n          }\n        }\n\n      } else {\n        console.log(`syncAllAddress provider not finish init`);\n      }\n    },\n\n    async disconnectAction() {\n      try {\n        console.log(\"get disconnect wallet btn clicked\");\n        // await TON.disconnect();\n        var provider = window.provider;\n        await provider.disconnect();\n        this.walletAddress = \"disconnected\";\n      } catch (error) {\n        console.log(\"Disconnect  error ==>> \", error.message);\n        this.currentStatus = error.message;\n      }\n    },\n\n    async eth_requestAccounts() {\n      var data = { method: \"eth_requestAccounts\" };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_chainId() {\n      var data = { method: \"eth_chainId\" };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async wallet_switchEthereumChain() {\n      var data = { method: \"wallet_switchEthereumChain\" };\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async wallet_addEthereumChain() {\n      var data = {\n        method: \"wallet_addEthereumChain\",\n        params: {\n          blockExplorerUrls: [\"https://explorer.fuse.io\"],\n          chainId: \"0x7a\",\n          chainName: \"Fuse\",\n          nativeCurrency: { name: \"Fuse\", symbol: \"FUSE\", decimals: 18 },\n          rpcUrls: [\"https://rpc.fuse.io\"],\n        },\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n    async personal_sign() {\n      if (this.selectedChain === \"eip155:1\") {\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0x1ca023f10e157d148deed210f8bee193657a1eaa7f187909e20a9dc3b071dbc364c41fde37960c05093359f410a061ec8a7dca8c0c39fc7c1e24de8a3329775d1b\n\n        var accounts = await window.provider.request(\n          { method: \"eth_requestAccounts\" },\n          \"eip155:1\"\n        );\n        var address = accounts[0];\n        console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n        var dataETH = {\n          method: \"personal_sign\",\n          params: [\n            \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n            address,\n          ],\n        };\n\n        this.testTransaction = JSON.stringify(dataETH);\n      } else if (\n        this.selectedChain === \"eip155:137\" ||\n        this.selectedChain === \"eip155:122\"\n      ) {\n        // method\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0xebda9cfa2af43999058dffa0107031d1ef7fc0252dca85dcbd22ea097af922ca39b64d509ef61ce42b7641c5840b8a80337ffd1411b13e87e2260a3f1b6c151c1b\n\n        var dataPolygon = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n        this.testTransaction = JSON.stringify(dataPolygon);\n      } else if (this.selectedChain === \"eip155:56\") {\n        var data = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n\n        this.testTransaction = JSON.stringify(data);\n      }\n    },\n\n    async eth_sendTransaction_swap() {\n      var data = {\n        method: \"eth_sendTransaction\",\n        chainId: \"eip155:122\",\n        params: {\n          value: \"0x38d7ea4c68000\",\n          gas: \"0x2665f\",\n          to: \"0xf2614A233c7C3e7f08b1F887Ba133a13f1eb2c55\",\n          from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n          data: \"0x2646478b000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee00000000000000000000000000000000000000000000000000038d7ea4c68000000000000000000000000000620fd5fa44be6af63715ef4e65ddfa0387ad13f5000000000000000000000000000000000000000000000000000000000000001b000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000700301ffff0201602352A9Eb5234466Eac23E59e7B99bCaE79C39c0BE9e53fd7EDaC9F859882AfdDa116645287C629040BE9e53fd7EDaC9F859882AfdDa116645287C62900602352A9Eb5234466Eac23E59e7B99bCaE79C39c01f2F3e73be57031114dd1f4E75c1DD87658be7F0E000bb800000000000000000000000000000000\",\n        },\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_signTypedData_v4() {\n      // method\n      // eth_signTypedData\n      // address\n      // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n      // valid\n      // true\n      // result\n      // 0xa8bb3c6b33a119d2d567c7632195c21988df778006082742125a591f5c633f716107883a37f7de6531a6312a5f69022135bf46fe5ab77905b62c82b3395f985e1b\n      //\n\n      // var data = {\n      //   \"method\": \"eth_signTypedData_v4\",\n      //   \"params\": {\n      //     \"typedDataJson\":\"{\\\"types\\\":{\\\"EIP712Domain\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"version\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"chainId\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"name\\\":\\\"verifyingContract\\\",\\\"type\\\":\\\"address\\\"}],\\\"Person\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"wallet\\\",\\\"type\\\":\\\"address\\\"}],\\\"Mail\\\":[{\\\"name\\\":\\\"from\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"to\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"contents\\\",\\\"type\\\":\\\"string\\\"}]},\\\"primaryType\\\":\\\"Mail\\\",\\\"domain\\\":{\\\"name\\\":\\\"Ether Mail\\\",\\\"version\\\":\\\"1\\\",\\\"chainId\\\":1,\\\"verifyingContract\\\":\\\"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\\\"},\\\"message\\\":{\\\"from\\\":{\\\"name\\\":\\\"Cow\\\",\\\"wallet\\\":\\\"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\\\"},\\\"to\\\":{\\\"name\\\":\\\"Bob\\\",\\\"wallet\\\":\\\"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\\\"},\\\"contents\\\":\\\"Hello, Bob!\\\"}}\"\n      // }}\n\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n        this.selectedChain\n      );\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n      var data = {\n        method: \"eth_signTypedData_v4\",\n        params: [\n          address,\n          {\n            types: {\n              EIP712Domain: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"version\",\n                  type: \"string\",\n                },\n                {\n                  name: \"chainId\",\n                  type: \"uint256\",\n                },\n                {\n                  name: \"verifyingContract\",\n                  type: \"address\",\n                },\n              ],\n              Person: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"wallet\",\n                  type: \"address\",\n                },\n              ],\n              Mail: [\n                {\n                  name: \"from\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"to\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"contents\",\n                  type: \"string\",\n                },\n              ],\n            },\n            primaryType: \"Mail\",\n            domain: {\n              name: \"Ether Mail\",\n              version: \"1\",\n              chainId: 1,\n              verifyingContract: \"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\",\n            },\n            message: {\n              from: {\n                name: \"Cow\",\n                wallet: \"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\",\n              },\n              to: {\n                name: \"Bob\",\n                wallet: \"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\",\n              },\n              contents: \"Hello, Bob!\",\n            },\n          },\n        ],\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_sendTransaction_transfer() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            chainId: \"0x1\",\n            to: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            value: \"0x5af3107a4000\",\n            maxPriorityFeePerGas: \"0x3b9aca00\",\n            gas: \"0x5e56\",\n            maxFeePerGas: \"0x2643b9db8\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gasPrice: \"0x17003f6530\",\n            nonce: \"0x0d30\",\n            data: \"0x\",\n            value: \"0x00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasLimit: \"0x5208\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x5e56\",\n            value: \"0x5af3107a4000\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasPrice: \"0x3b9aca00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            chainId: \"0x38\",\n          },\n        };\n      }else if(this.selectedChain === \"eip155:122\"){\n         data =   {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            value: \"0x0\",\n            chainId: \"0x7a\",\n          }\n        }\n      }\n\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n        this.selectedChain\n      );\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"to\"] = address;\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_approve() {\n      var data = {};\n\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000000000000022d473030f116ddee9f6b43ac78ba3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x582d872a1b094fc48f5de31d3b73f2d9be47def1\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000f6f8096ac575b0\",\n            to: \"0x0b3F868E0BE5597D5DB7fEB59E1CADBb0fdDa50a\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            value: \"0x0\",\n            gas: \"0xe117\",\n            gasPrice: \"0xb2d05e00\",\n            data: \"0x095ea7b300000000000000000000000031c2f6fcff4f8759b3bd5bf0e1084a055615c768ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x5CA42204cDaa70d5c773946e69dE942b85CA6706\",\n          },\n        };\n      }else if (this.selectedChain === 'eip155:122'){\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000000000000013b3\",\n            to: \"0x620fd5fa44BE6af63715Ef4E65DDFA0387aD13F5\",\n          },\n        };\n      }\n\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n        this.selectedChain\n      );\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_mint() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x4cacb\",\n            data: \"0xa64dfa75000000000000000000000000ed688002f3797599db8b4feacfe8b1dda0df1c8d000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cecb15396825a895ff8da8fc2d2c77a234dccee00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f6261667962656968643737366b6177706e71336f6f6a6635693274787a76617737737164656b34616a776472637472703261366f626b70723773792f7b69647dan            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x30795\",\n            data: \"0xa64dfa75000000000000000000000000341b3687f0309778f08f29336b2c4b9c38b9f110000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f62616679626569686a6279676b68747a71376b68377434336266686e676e793236337668766f6578716a6d6e377161716166366e717a64743777712f7b69647da3078303030303030303030303030303030303030303030303030303030303030303030303030303030300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001\",\n            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      }\n\n      let str = JSON.stringify(data);\n      console.log(\"-----长度--->\", str.length);\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n          this.selectedChain\n      );\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async wallet_testRpc() {\n      let provider = window.provider;\n      provider.setDefaultChain(\n        `eip155:56`,\n        `https://eth-mainnet.g.alchemy.com/v2/NxUfYJUr-TQtEpLmSXhhD5pXn70GwsyV`\n      );\n      var data = {\n        method: \"eth_getBalance\",\n        params: [\"0x8D97689C9818892B700e27F316cc3E41e17fBeb9\", \"latest\"],\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async wallet_watchAsset() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xe0f63a424a4439cbe457d80e4f4b51ad25b2c56c\",\n              symbol: \"SPX6900\",\n              image:\n                \"https://assets.coingecko.com/coins/images/31401/standard/sticker_%281%29.jpg?1702371083\",\n              decimals: 8,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xeB51D9A39AD5EEF215dC0Bf39a8821ff804A0F01\",\n              symbol: \"LGNS\",\n              image: \"https://polygonscan.com/token/images/originlgns_32.png\",\n              decimals: 9,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0x031b41e504677879370e9dbcf937283a8691fa7f\",\n              symbol: \"FET\",\n              image: \"https://bscscan.com/token/images/fetch_32.png\",\n              decimals: 18,\n            },\n          },\n        };\n      }\n\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async ton_sendTransaction() {\n      var data  = {\n        \"messages\":[{\"address\":\"EQARULUYsmJq1RiZ-YiH-IJLcAZUVkVff-KBPwEmmaQGH6aC\",\"amount\":\"205000000\",\"payload\":\"te6cckEBAgEAhwABbQ+KfqUAAADNgG7tIEATEtAIAO87mQKicbKgHIk4pSPP4k5xhHqutqYgAB7USnesDnCcECwbgQMBAJUlk4VhgBD3JEg1TUr75iTijBghOKm/sxNDXUBl7CD6WMut0Q85x4RafwA/Es89DBXoTxuqxVFxyBbzt9Rav2HBUKl7hmkvLuKHLBCW57aK\"}],\n        \"validUntil\":1792481054,\n        \"network\":'-239'}\n      this.testTransaction = JSON.stringify(data)\n    },\n    ton_getAccount() {\n      this.testTransaction = \"这里是同步获取 不再需要点击 <<发送交易>>\"\n      let result =   window.tonProvider.account()\n      if (result) {\n        this.testboc = JSON.stringify(result);\n      } else {\n        this.testboc = 'null'\n      }\n    },\n\n    async tonUniversalLog() {\n      console.log(\"ton 信息: tonProvider  connected:\",window.tonProvider.connected())\n      console.log(\"ton 信息: tonProvider  account:\",JSON.stringify(window.tonProvider.account()))\n      console.log(\"ton 信息: tonProvider  wallet:\",JSON.stringify(window.tonProvider.wallet()))\n    },\n\n    async sendTransactionAlert() {\n      //\n      const response = await fetch(`https://apitest.fireverse.ai/oauth/okx/getNonce?publicAddress=0x0cecb15396825a895ff8da8fc2d2c77a234dccee`);\n      const data = await response.json();\n      console.log(\"请求数据----\",JSON.stringify(data))\n      await this.personal_sign()\n      if (confirm(\"Are you want to sign message?\")) {\n        this.sendTransaction();\n      }\n\n      // window.open(\"https://www.okx.com/download?deeplink=okx%3A%2F%2Fweb3%2Fwallet%2Fconnect\",'_self')\n    },\n\n    async sendTransaction() {\n      if (this.selectedChain.startsWith(\"aptos\")\n          || this.selectedChain.startsWith(\"movement\")\n          || this.selectedChain.startsWith(\"solana\")\n          || this.selectedChain.startsWith(\"sonic\")\n          || this.selectedChain.startsWith(\"cosmos\")) {\n        return\n      }\n      console.log(\"sendTransaction\", window.provider);\n      console.log(\"sendTransaction内容11------\", this.testTransaction);\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      if (this.testTransaction && window.provider) {\n        // eslint-disable-next-line no-undef\n        const sendData = JSON.parse(this.testTransaction);\n        try {\n          console.log(\"sendTransaction-----22method>>\", sendData.method);\n\n          let chainId = \"eip155:1\";\n          if (this.selectedChain) {\n            chainId = this.selectedChain;\n            console.log(\n              \"sendTransaction-----this.selectedChain>>\",\n              this.selectedChain\n            );\n          }\n          console.log(\"windowOpen[click_1]: \", Date.now());\n          if (chainId == \"sui:mainnet\") {\n            const adapter = new SuiAdapter(window.provider);\n            var suiResult = \"invalid result\";\n            if (this.currentSuiMethod == 'sui_getAccount') {\n              let result = adapter.getAccount()\n              if (typeof result == \"string\") {\n                this.testboc = result\n              } else {\n                this.testboc = JSON.stringify(result)\n              }\n            }\n            if (this.currentSuiMethod == \"sui_signTransaction\") {\n              suiResult = await adapter.signTransaction(\n                this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signAndExecuteTransaction\") {\n              suiResult = await adapter.signAndExecuteTransaction(\n                this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signMessage\") {\n              console.log(\"signMessage----\", this.currentSuiTransaction);\n              suiResult = await adapter.signMessage(this.currentSuiTransaction);\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_signPersonalMessage\") {\n              console.log(\n                \"signPersonalMessage----\",\n                this.currentSuiTransaction\n              );\n              suiResult = await adapter.signPersonalMessage(\n                this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_testRpc\") {\n              console.log(\"test rpc----\", this.currentSuiTransaction);\n              console.log(\n                `请求数据发送 rpc ----->> ${JSON.stringify(sendData)}`\n              );\n              const res = await window.provider.request(sendData, chainId);\n              console.log(`请求数据回调 rpc ----->> ${JSON.stringify(result)}`);\n              if (typeof res == \"string\") {\n                this.testboc = res;\n              } else {\n                this.testboc = JSON.stringify(res);\n              }\n            }\n            console.log(\"windowOpen[click_2]: \", Date.now());\n            return;\n          }else if(chainId === \"ton:-239\"){\n            console.log(\n                `请求数据发送 sendTransaction ---ton-->> ${JSON.stringify(sendData)}`\n            );\n            let result =  await window.tonProvider.sendTransaction(sendData)\n            console.log(\n                `请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`\n            );\n            if (typeof result == \"string\") {\n              this.testboc = result;\n            } else {\n              this.testboc = JSON.stringify(result);\n            }\n            return\n          }\n\n          if (chainId == 'btc:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var btcResult = 'invalid result'\n\n            if (this.currentBtcMethod == 'btc_signMessage') {\n              btcResult = await btcAdapter.signMessage(chainId, this.currentBtcTransaction[\"signStr\"])\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_send') {\n              btcResult = await btcAdapter.send(chainId, this.currentBtcTransaction)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signPsbt') {\n              btcResult = await btcAdapter.signPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n\n              this.hexToBase64(btcResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentBtcMethod == 'btc_signPsbts') {\n              btcResult = await btcAdapter.signPsbts(chainId, this.currentBtcTransaction.psbtHexs, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_sendInscription') {\n              btcResult = await btcAdapter.sendInscription(chainId, this.currentBtcTransaction.address, this.currentBtcTransaction.inscriptionId, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signAndPushPsbt') {\n              btcResult = await btcAdapter.signAndPushPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            }else if (this.currentBtcMethod == 'btc_sendBitcoin') {\n              btcResult = await btcAdapter.sendBitcoin(chainId, this.currentBtcTransaction.toAddress, this.currentBtcTransaction.satoshis, this.currentBtcTransaction.options)\n\n              this.testboc = JSON.stringify(btcResult)\n            }\n            return\n          }\n\n          if (chainId == 'fractal:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var fractalResult = 'invalid result'\n\n            if (this.currentFractalMethod == 'fractal_signMessage') {\n              fractalResult = await btcAdapter.signMessage(chainId, this.currentFractalTransaction['signStr'])\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_send') {\n              fractalResult = await btcAdapter.send(chainId, this.currentFractalTransaction)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signPsbt') {\n              fractalResult = await btcAdapter.signPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.hexToBase64(fractalResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentFractalMethod == 'fractal_signPsbts') {\n              fractalResult = await btcAdapter.signPsbts(chainId, this.currentFractalTransaction.psbtHexs, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_sendInscription') {\n              fractalResult = await btcAdapter.sendInscription(chainId, this.currentFractalTransaction.address, this.currentFractalTransaction.inscriptionId, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signAndPushPsbt') {\n              fractalResult = await btcAdapter.signAndPushPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            }else if (this.currentFractalMethod == 'fractal_sendBitcoin') {\n              fractalResult = await btcAdapter.sendBitcoin(chainId, this.currentFractalTransaction.toAddress, this.currentFractalTransaction.satoshis, this.currentFractalTransaction.options)\n\n              this.testboc = JSON.stringify(fractalResult)\n            }\n\n            return\n          }\n\n          console.log(`请求数据发送 sendTransaction ----->> ${JSON.stringify(sendData)}`)\n          var result = await window.provider.request(sendData, chainId)\n          console.log(`请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`)\n\n          console.log(\"windowOpen[click_3]: \", Date.now());\n          if (typeof result == \"string\") {\n            this.testboc = result;\n          } else {\n            this.testboc = JSON.stringify(result);\n          }\n          console.log(\"方法数据回调 --this.testboc--\", this.testboc);\n        } catch (error) {\n          console.error(\"方法数据回调失败 --Error--\", error.message);\n\n          if (error.code === OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n            this.testboc = error.message;\n          } else {\n            this.testboc = \"wrong signature！\" + error.message;\n          }\n        }\n      } else {\n        alert(\"Please input transaction data\");\n      }\n    },\n\n    hexToBase64(hexStr) {\n      var bytes = [];\n      for (var i = 0; i < hexStr.length; i += 2) {\n        bytes.push(parseInt(hexStr.substr(i, 2), 16));\n      }\n      const buffer = new Uint8Array(bytes)\n      const blob = new Blob([buffer]);\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = function (e) {\n          var base64Data = e.target.result.split(\",\")[1]\n          resolve(base64Data);\n        };\n        reader.onerror = function (e) {\n          reject(e);\n        };\n        reader.readAsDataURL(blob);\n      });\n    },\n    testBase64UrlSafe(){\n      let datatest = {\"protocolVer\":1,\"topic\":\"8a7a4c3be73802d0ae2587123ade7bb79f27433b9aa3ca589a2208a2089eecfd\",\"clientId\":\"5f1bbf9eac92160affa7ef04d0a710817ddb6d8c22ebbd6263e86f059930b404\",\"requestId\":\"1731383250054\",\"dAppInfo\":{\"url\":\"connect.oker.vip\",\"origin\":\"https://connect.oker.vip\",\"name\":\"univer test dapp\",\"icon\":\"https://avatars.githubusercontent.com/u/37784886\"},\"requests\":[{\"name\":\"requestAccounts\",\"requiredNamespaces\":[{\"namespace\":\"aptos\",\"chains\":[\"aptos:637\"]}],\"optionalNamespaces\":[],\"connectRequestMethods\":[{\"chainId\":\"aptos:637\",\"method\":\"aptos_signMessage\",\"params\":{\"data\":{\"address\":true,\"application\":true,\"chainId\":true,\"message\":\"123 中文测试!\",\"nonce\":\"1234\"},\"applicationUrl\":\"https://connect.oker.vip\",\"prefix\":\"APTOS\",\"aptosChainId\":\"1\"}}]}],\"redirect\":\"none\"}\n      let json = JSON.stringify(datatest)\n      const utf8Array = new TextEncoder().encode(json);\n      let binary = '';\n      utf8Array.forEach(byte => {\n        binary += String.fromCharCode(byte);\n      });\n\n      let firstStr =  btoa(binary)\n      console.log(\"字符串编码1>>>>\",firstStr)\n      firstStr = firstStr.replace(/\\+/g, '-')  // 替换 '+'\n      console.log(\"字符串编码2>>>>\",firstStr)\n      firstStr = firstStr.replace(/\\//g, '_')  // 替换 '/'\n      console.log(\"字符串编码3>>>>\",firstStr)\n      firstStr = firstStr.replace(/=+$/, '');  // 移除 '=';\n      console.log(\"字符串编码4>>>>\",firstStr)\n\n      let showUrl =  getUniversalLink(getAppWalletDeepLink(firstStr))\n      console.log(\"字符串编码5>>>>\",showUrl)\n      this.qrValue = showUrl;\n      this.showModal = true;\n    },\n\n\n    async testTonSdk() {\n      // 1. connect\n      //  create sub providers for each namespace/chain\n      let nameSpacesChains = [];\n      let optSpaceChains = [];\n\n      let solanaChains = [\n        \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n        \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n        \"svm:70000062\",\n      ];\n      let hasEip155, hasSolana, hasSui, hasBtc, hasAptos, hasTon, hasCosmos, hasTron = false\n\n      let suiChains = [\n        \"sui:mainnet\",\n      ];\n\n      let btcChains = [\n        \"btc:mainnet\",\n        \"fractal:mainnet\"\n      ];\n\n      const chains = Object.entries(this.availableChains)\n          .filter((chain) => chain[1].checked)\n          .map((chain) => chain[0]);\n      console.log(`chains  ===> ${chains.values()}`)\n      chains.forEach(function (chainId) {\n        console.log(`chains.forEach chainId  ===> ${chainId}`)\n\n        if (solanaChains.includes(chainId)) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"ton\")) {\n          nameSpacesChains.push(chainId)\n          hasTon = true\n          return\n        }\n        if (typeof chainId == 'string' && (chainId.startsWith(\"aptos\") || chainId.startsWith(\"movement\"))) {\n          nameSpacesChains.push(chainId)\n          hasAptos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId)\n          hasSolana = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"cosmos\")) {\n          nameSpacesChains.push(chainId)\n          hasCosmos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"tron\")) {\n          nameSpacesChains.push(chainId)\n          hasTron = true\n          return\n        }\n\n        if (suiChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`);\n          nameSpacesChains.push(chainId);\n          hasSui = true;\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`)\n          nameSpacesChains.push(chainId)\n          hasBtc = true\n          return\n        }\n\n        hasEip155 = true\n        nameSpacesChains.push(`eip155:${chainId}`)\n      })\n\n\n      optionChains.forEach(function (chainId) {\n        if (solanaChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n        if (typeof chainId == \"string\" && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (suiChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          optSpaceChains.push(chainId)\n          return\n        }\n\n        optSpaceChains.push(`eip155:${chainId}`)\n      })\n\n      console.log(`namespaceChains  ===> ${JSON.stringify(nameSpacesChains)}`);\n      var connectData = {};\n      if (nameSpacesChains && nameSpacesChains.length > 0) {\n        var requireData = {};\n\n        if (hasEip155) {\n          requireData.eip155 = {\n            chains: nameSpacesChains.filter((item) =>\n              item.startsWith(\"eip155\")\n            ),\n            defaultChain: nameSpacesChains.filter((item) =>\n              item.startsWith(\"eip155\")\n            )[0],\n          };\n        }\n        if (hasSolana) {\n          requireData.solana = {\n            chains: nameSpacesChains.filter(\n              (item) =>\n                item.startsWith(\"solana\") ||\n                item.startsWith(\"sonic\") ||\n                item.startsWith(\"svm\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n              (item) =>\n                item.startsWith(\"solana\") ||\n                item.startsWith(\"sonic\") ||\n                item.startsWith(\"svm\")\n            )[0],\n          };\n        }\n\n        if (hasCosmos) {\n          requireData.cosmos = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            )[0],\n          }\n        }\n        if (hasTron) {\n          requireData.tron = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            )[0],\n          }\n        }\n        if (hasTon) {\n\n          //\n          let tonParams = {\n            ton_addr:{\n              name: 'ton_addr',\n            }\n          };\n          if (this.tonProofValue){\n            tonParams = {\n              ton_addr:{\n                name: 'ton_addr',\n              },\n              ton_proof:{\n                name: 'ton_proof',\n                payload: this.tonProofValue,\n              }\n            };\n          }\n\n\n          requireData.ton = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"ton\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"ton\"))[0],\n            params:tonParams\n          };\n        }\n\n        if (hasSui) {\n          requireData.sui = {\n            chains: nameSpacesChains.filter((item) => item.startsWith(\"sui\")),\n            defaultChain: nameSpacesChains.filter((item) =>\n              item.startsWith(\"sui\")\n            )[0],\n            rpcMap: {\n              \"sui:mainnet\": \"https://www.okx.com/fullnode/sui/discover/rpc\"\n            }\n          };\n        }\n        if (hasAptos) {\n          requireData.aptos = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\"))[0]\n          }\n        }\n\n        if (hasBtc) {\n          let btcChains = nameSpacesChains.filter(item => item.startsWith(\"btc\") || item.startsWith(\"fractal\"))\n          requireData.btc = {\n            chains: btcChains,\n            defaultChain: btcChains[0]\n          }\n        }\n        console.log(`requireData  ===> ${JSON.stringify(requireData)}`)\n        connectData['namespaces'] = requireData;\n        console.log(JSON.stringify(connectData))\n      }\n\n      if (optSpaceChains && optSpaceChains.length > 0) {\n        var optData = {\n          eip155: {\n            chains: optSpaceChains.filter((item) => item.startsWith(\"eip155\")),\n            defaultChain: optSpaceChains.filter((item) =>\n              item.startsWith(\"eip155\")\n            )[0],\n          },\n        };\n        connectData[\"optionalNamespaces\"] = optData;\n      }\n\n      if (nameSpacesChains.length === 0 && optSpaceChains.length === 0) {\n        //未选择链\n        alert(\"Please select a chain from above to continue\");\n        return;\n      }\n      console.log(\"=====>connectData \");\n      console.log(connectData);\n\n      var connectMethod;\n      let signMethods = this.getCurrentSelectedMethodData();\n      if (window.provider instanceof OKXUniversalConnectUI) {\n        if (signMethods && signMethods.length>0){\n          connectMethod = window.provider.openModalAndSign(connectData,JSON.parse(JSON.stringify(signMethods)));\n        }else {\n          connectMethod = window.provider.openModal(connectData);\n        }\n      } else {\n        if (this.universalToTG){\n          connectData.sessionConfig = {\n            useMini:true,\n            openUniversalUrl:true,\n            tmaReturnUrl:'back'\n          }\n        }else{\n          connectData.sessionConfig = {\n            redirect: selectedReturnStrategy\n          }\n        }\n        if (signMethods && signMethods.length>0){\n          connectMethod = window.provider.connectAndSign(connectData,JSON.parse(JSON.stringify(signMethods)));\n        }else {\n          connectMethod = window.provider.connect(connectData);\n        }\n      }\n\n      await connectMethod\n        .then((result) => {\n          // 2. set defaul chain\n          this.walletAddress = \"connected\";\n          if (this.isPC()) {\n            this.showModal = false;\n          }\n          if (result){\n            this.testboc = JSON.stringify(result)\n          }\n\n          if (window.provider.session && window.provider.session.namespaces){\n            let ton = window.provider.session.namespaces[\"ton\"];\n          console.log(\"是否包含ton\",ton)\n            if (ton){\n              this.tonUniversalLog()\n            }\n          }\n\n\n\n        })\n        .catch((error) => {\n          if (error.message){\n            alert(error.message)\n          }\n\n          console.error(\"发生了错误：\", error);\n        });\n    },\n\n    getCurrentSelectedMethodData(){// 连接签名\n      var methodList = [];\n      this.selectedMethod.forEach(method =>{\n        switch (method) {\n          case \"wallet_addEthereumChain(ETH)\":\n            methodList.push({\n              method: \"wallet_addEthereumChain\",\n              chainId:\"eip155:1\",\n              params: {\n                blockExplorerUrls: [\"https://explorer.fuse.io\"],\n                chainId: \"0x7a\",\n                chainName: \"Fuse\",\n                nativeCurrency: { name: \"Fuse\", symbol: \"FUSE\", decimals: 18 },\n                rpcUrls: [\"https://rpc.fuse.io\"],\n              },\n            })\n            break;\n          case \"personal_sign(ETH)\":\n            methodList.push(\n              {\n                method: \"personal_sign\",\n                chainId: \"eip155:1\",\n                params: [\n                  \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n                ],\n              });\n            break;\n          case \"solana_signMessage(Sol mainnet)\":\n            methodList.push(\n              {\n                \"chainId\": \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n                \"method\": \"solana_signMessage\",\n                \"params\": {\n                  \"message\": \"Hello Solana\",\n                }\n              }\n            );\n            break;\n          case \"sui_signMessage(Sui mainnet)\":\n          case \"sui_signPersonalMessage(Sui mainnet)\": {\n            let suiData = [\n              76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n              109, 111, 118, 101,\n            ];\n            let uint8Array = new Uint8Array(suiData);\n            let currentMethod = \"sui_signMessage\";\n            this.currentSuiTransaction = {\n              message:uint8Array\n            }\n\n            if(method.startsWith(\"sui_signPersonalMessage\")){\n              currentMethod = \"sui_signPersonalMessage\";\n            }\n            methodList.push(\n                {\n                  method: currentMethod,\n                  chainId: \"sui:mainnet\",\n                  params: {\n                    message: uint8Array,\n                  }\n                }\n            );\n            break;\n          }\n          case \"btc_signMessage(BTC)\":\n            methodList.push(\n              {\n                method: \"btc_signMessage\",\n                chainId: \"btc:mainnet\",\n                params: {\n                  message: \"Welcome to BTC\"\n                }\n              }\n            )\n            break;\n          case \"aptos_signMessage(aptos mainnet)\":\n            methodList.push(\n              {\n                \"chainId\": \"aptos:mainnet\",\n                \"method\": \"aptos_signMessage\",\n                \"params\": {\n                  address: true,\n                  application: true,\n                  chainId: true,\n                  message: \"Hello Aptos\",\n                  nonce: \"1234\"\n                }\n              }\n            )\n            break;\n          case \"cosmos_signArbitrary(cosmoshub)\":\n            methodList.push(\n                {\n                  \"chainId\": \"cosmos:cosmoshub-4\",\n                  \"method\": \"cosmos_signArbitrary\",\n                  \"params\": {\n                    message: \"test cosmos\"\n                  }\n                }\n            )\n\n            break;\n          case \"test_noSupport_eth(ETH)\":\n            methodList.push(\n                {\n                  chainId: \"eip155:1\",\n                  method: \"test_noSupport_eth\",\n                  params: {\n                    message: \"test hello\",\n                  }\n                }\n            )\n            break;\n          case \"sync_all_addresses\":\n            methodList.push(\n                {\n                  method: \"sync_all_addresses\",\n                });\n            break;\n          case \"tron_signMessage\":\n            methodList.push(\n                {\n                  chainId:\"tron:mainnet\",\n                  method: \"tron_signMessage\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n          case \"tron_signMessageV2\":\n            methodList.push(\n                {\n                  chainId:\"tron:mainnet\",\n                  method: \"tron_signMessageV2\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n            //\n          default:\n\n            break;\n        }\n      })\n      this.selectedMethodData = methodList\n      return methodList\n\n    },\n\n\n    closeModal() {\n      this.showModal = false;\n    },\n\n    isPC() {\n      const userAgentInfo = navigator.userAgent;\n      console.log(\"current device ua is ===>\", userAgentInfo);\n\n      const Agents = [\n        \"Android\",\n        \"iPhone\",\n        \"SymbianOS\",\n        \"Windows Phone\",\n        \"iPad\",\n        \"iPod\",\n      ];\n      let flag = true;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = false;\n          break;\n        }\n      }\n      return flag;\n    },\n    isSafariOrChrome() {\n      const userAgentInfo = navigator.userAgent;\n      const Agents = [\"Safari\", \"Chrome\"];\n      let flag = false;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = true;\n          break;\n        }\n      }\n      return flag;\n    },\n\n    /// solana\n    async sol_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      let data = {\n        method: \"solana_signMessage\",\n        params: {\n          message: \"Hello Solana\",\n          pubkey: \"\",\n        },\n      };\n      this.testTransaction = JSON.stringify(data);\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let message = await provider.signMessage(\n          \"Hello Solana\",\n          this.selectedChain\n      );\n      console.log(\"solana_signMessage Result:\",JSON.stringify(message))\n      const result1 = nacl.sign.detached.verify(\n          new TextEncoder().encode(\"Hello Solana\"),\n          message.signature,\n          new PublicKey(message.publicKey).toBytes()\n      );\n      console.log(result1)\n\n      if (typeof message == \"string\") {\n        this.testboc = result1;\n      } else {\n        this.testboc = result1;\n      }\n    },\n\n    async aptos_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      let data = {\n        address: true,\n        application: true,\n        chainId: true,\n        message: \"Hello Aptos\",\n        nonce: \"1234\"\n      }\n\n      let provider = new OKXAptosProvider(window.provider)\n      let message = await provider.signMessage(data, this.selectedChain)\n      this.testTransaction = JSON.stringify(data)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n          functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async move_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async move_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n          functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n        },\n      });\n\n      // let data = {\n      //   \"arguments\": [\"100000\",[\"0\",\"0\",\"10533\"],[\"10\",\"5\",\"5\"],[\"false\",\"false\",\"true\"]],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x3\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\",\"0x73eb84966be67e4697fc5ae75173ca6c35089e802650f75422ab49a8729704ec::coin::DooDoo\",\"0x53a30a6e5936c0a4c5140daed34de39d17ca7fcae08f947c02e979cef98a3719::coin::LSD\",\"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::CurveV1\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x54cb0bb2c18564b86e34539b9f89cfe1186e39d89fce54e1cd007b8e61673a85::bin_steps::X80\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async sol_signVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(\n        provider.getAccount(\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\").address\n      );\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n         recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signTransaction(\n        transaction,\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAndSendVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n        transaction,\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllVersionedTransactions() {\n      let provider = new OKXSolanaProvider(window.provider);\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n        [transaction],\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signTransaction() {\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n         recentBlockhash: blockhash,\n      }).add(\n        SystemProgram.transfer({\n          fromPubkey: new PublicKey(provider.getAccount().address),\n          toPubkey: new PublicKey(provider.getAccount().address),\n          lamports: 1000,\n        })\n      );\n\n      this.testTransaction = safeJsonStringify(transaction)\n      let result = await provider.signTransaction(\n        transaction,\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllTransactions() {\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n        SystemProgram.transfer({\n          fromPubkey: new PublicKey(provider.getAccount().address),\n          toPubkey: new PublicKey(provider.getAccount().address),\n          lamports: \"100\",\n        })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n        [transaction],\n        this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    getSolConnect() {\n      let rpc = \"https://www.okx.com/fullnode/sol/discover/rpc\"\n      if (this.selectedChain === \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\") {\n        rpc = \"https://www.okx.com//fullnode/sol/discover/rpc\"\n      } else if (this.selectedChain === \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\"){\n        rpc = \"https://www.okx.com/fullnode/soltestnet/discover/rpc\"\n      } else if (this.selectedChain === \"svm:70000062\") {\n        rpc = \"https://www.okx.com/fullnode/sonic/testnet/discover/rpc\"\n      }\n      return rpc\n    },\n\n    async sol_signAndSendTransaction() {\n\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n        SystemProgram.transfer({\n          fromPubkey: new PublicKey(provider.getAccount().address),\n          toPubkey: new PublicKey(provider.getAccount().address),\n          lamports: \"100\",\n        })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n        transaction,\n        this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async cosmos_signArbitrary() {\n      let provider = new OKXCosmosProvider(window.provider)\n      let message = await provider.signArbitrary(this.selectedChain, provider.getAccount(this.selectedChain).address, \"test cosmos\")\n      if (typeof message == \"string\") {\n        this.testboc = message;\n      } else {\n        let isValid =  await this.cosmos_verifySignArbitrary(provider.getAccount(this.selectedChain).address,\"test cosmos\",message.signature, message.pub_key.value)\n        console.log(\"verify\",isValid)\n        this.testboc = \"verify:\" + isValid + JSON.stringify(message);\n      }\n    },\n\n    async cosmos_verifySignArbitrary(signer, data, signature, pubkey) {\n      try {\n        console.log(\"cosmos_verifySignArbitrary signer:\",signer)\n        console.log(\"cosmos_verifySignArbitrary data:\",JSON.stringify(data))\n        console.log(\"cosmos_verifySignArbitrary signature:\",signature)\n        console.log(\"cosmos_verifySignArbitrary pubkey:\",pubkey)\n\n        // 将bech32地址转换为公钥\n        const {prefix: prefixStr} = fromBech32(signer)\n\n        const signatureBuffer = Buffer.from(signature, 'base64');\n\n        const uint8Signature = new Uint8Array(signatureBuffer); // Convert the buffer to an Uint8Array\n\n        const pubKeyValueBuffer = Buffer.from(pubkey, 'base64'); // Decode the base64 encoded value\n\n        const pubKeyUint8Array = new Uint8Array(pubKeyValueBuffer); // Convert the buffer to an Uint8Array\n\n        // 验证签名\n        return await verifyADR36Amino(\n            prefixStr,\n            signer,\n            data,\n            pubKeyUint8Array,\n            uint8Signature\n        )\n      } catch (err) {\n        console.error('Verification failed:', err)\n        return false\n      }\n    },\n\n    async cosmos_signAmino(){\n      let provider = new OKXCosmosProvider(window.provider)\n      // const rpcUrl = 'https://osmosis-rpc.publicnode.com:443';\n      // const client = await StargateClient.connect(rpcUrl);\n      // const height = await client.getHeight();\n      // let address = provider.getAccount(this.selectedChain).address\n      // const sequence = await client.getSequence(address)\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      // let signDoc = makeSignDoc(\n      //     transaction.msgs,\n      //     transaction.fee,\n      //     this.selectedChain.split(\":\")[1],\n      //     transaction.memo,\n      //     transaction.accountNumber,\n      //     transaction.sequence,\n      // )\n      let signDoc = {\n        \"chain_id\": \"osmosis-1\",\n        \"account_number\": \"630104\",\n        \"sequence\": \"480\",\n        \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]},\n        \"msgs\": [{\n          \"type\": \"osmosis/poolmanager/swap-exact-amount-in\",\n          \"value\": {\n            \"sender\": \"osmo1u6lts9ng4etxj0zdaxsada6zgl8dudpgelmuyu\",\n            \"routes\": [{\n              \"pool_id\": \"1096\",\n              \"token_out_denom\": \"ibc/987C17B11ABC2B20019178ACE62929FE9840202CE79498E29FE8E5CB02B7C0A4\"\n            }, {\n              \"pool_id\": \"611\",\n              \"token_out_denom\": \"ibc/27394FB092D2ECCD56123C74F36E4C1F926001CEADA9CA97EA622B25F41E5EB2\"\n            }],\n            \"token_in\": {\"denom\": \"uosmo\", \"amount\": \"100\"},\n            \"token_out_min_amount\": \"8\"\n          }\n        }],\n        \"memo\": \"FE\",\n        \"timeout_height\": \"23603788\",\n        \"signOptions\": {\n          \"useOneClickTrading\": false,\n          \"preferNoSetFee\": true,\n          \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]}\n        }\n      }\n\n\n\n\n\n\n\n      // let signOption = {\n      //   memo: true, // optional\n      //   fee: true, // optional\n      //   gasRate: {\n      //     // optional\n      //     average: \"0.2\",\n      //     low: \"0.02\",\n      //     tiny: \"0.002\",\n      //   },\n      // }\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signAmino(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, signDoc)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    messageToBuffer(message) {\n      var buffer = Buffer.from([]);\n      try {\n        if (typeof message === \"string\") {\n          buffer = Buffer.from(message.replace(\"0x\", \"\"), \"hex\");\n        } else {\n          buffer = Buffer.from(message);\n        }\n      } catch (err) {\n        console.log(`messageToBuffer error: ${err}`);\n      }\n      return buffer;\n    },\n\n\n\n    async cosmos_signDirect() {\n      let provider = new OKXCosmosProvider(window.provider)\n\n      let signDoc = {\n        \"bodyBytes\": this.messageToBuffer(\"0x0ac1010a292f6962632e6170706c69636174696f6e732e7472616e736665722e76312e4d73675472616e736665721293010a087472616e7366657212096368616e6e656c2d301a0d0a05756f736d6f120431303030222b6f736d6f3175366c7473396e67346574786a307a64617873616461367a676c386475647067656c6d7579752a2d636f736d6f733175366c7473396e67346574786a307a64617873616461367a676c386475647067337967766a773207080410ebe3f90a3880b0bcafd18cec8218\"),\n        \"authInfoBytes\": this.messageToBuffer(\"0x0a510a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a2102446e19e94ac0e83ea896d2712507577eb39fbdd2d6ae9f0fc0b9759f1fbaba9012040a02080118e00312140a0e0a05756f736d6f1205323530303010859a11\"),\n        \"chainId\": \"osmosis-1\",\n        \"accountNumber\": \"630104\",\n      }\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signDirect(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, transaction)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    sui_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentSuiTransaction = params\n      this.currentSuiMethod = flag\n    },\n\n    btc_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentBtcTransaction = params\n      this.currentBtcMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n\n    fractal_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentFractalTransaction = params\n      this.currentFractalMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n    tron_getTransactionResult(result) {\n      if (typeof result == \"string\") {\n        this.testboc = result\n      } else {\n        this.testboc = JSON.stringify(result)\n      }\n    },\n    tron_generateTransactionParams(params){\n      if (typeof params == \"string\") {\n        this.testTransaction = params\n      } else {\n        this.testTransaction = JSON.stringify(params)\n      }\n    },\n    handleModalsSelect(modals) {\n      selectedModals = modals;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: modals.length === 3 ? \"all\" : modals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n\n    handleReturnStrategySelect(returnStrategy) {\n      selectedReturnStrategy = returnStrategy === \"deeplink\" ? this.deeplink : returnStrategy;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      } else {\n        if (window.provider.sessionConfig) {\n          window.provider.sessionConfig.redirect = selectedReturnStrategy;\n        } else {\n          window.provider.sessionConfig = {\n            redirect: selectedReturnStrategy\n          };\n        }\n      }\n    },\n\n    handleReturnStrategyDeeplink(deeplink) {\n      console.log('handleReturnStrategyDeeplink', deeplink)\n      selectedReturnStrategy = deeplink;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: deeplink,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      } else {\n        if (window.provider.sessionConfig) {\n          window.provider.sessionConfig.redirect = deeplink;\n        } else {\n          window.provider.sessionConfig = {\n            redirect: deeplink\n          };\n        }\n      }\n    },\n\n    handleLanguageSelect(language) {\n      selectedLanguage = language;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: language,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n    handleConnectMethodsSelect() {\n      console.log(\"当前的方法 this.selectedMethod>>>>\",this.selectedMethod);\n    },\n\n    eth_verifyMessage(message, signature,ethAddress) {\n      console.log(\"eth_verifyMessage   message>>>\",message)\n      console.log(\"eth_verifyMessage   signature>>>\",signature)\n      console.log(\"eth_verifyMessage   ethAddress>>>\",ethAddress)\n      if (!message || !signature){\n        return \"\"\n      }\n      let originalMessage = message\n      if (message.startsWith(\"0x\")){\n        originalMessage = originalMessage.replace(/^0x/, '');\n        let str = '';\n        for (let i = 0; i < originalMessage.length; i += 2) {\n          const byte = originalMessage.slice(i, i + 2);\n          str += String.fromCharCode(parseInt(byte, 16));\n        }\n        originalMessage = str\n      }\n      console.log(\"eth_verifyMessage   originalMessage>>>\",originalMessage)\n\n      // const messageHash = ethers.utils.hashMessage(originalMessage);\n      const recoveredAddress = ethers.utils.verifyMessage(originalMessage, signature);\n      console.log(\"eth_verifyMessage recoveredAddress:\", recoveredAddress);\n      return recoveredAddress.toLowerCase() === ethAddress.toLowerCase();\n    },\n\n    async verifyMessage(list){ //连接验签\n\n        if (window.provider && window.provider.session && list && list.length>0){\n          let verifyList = {}\n          for (let methodItem of list){\n            if (\"result\" in methodItem && \"method\" in methodItem){\n              let requestItme = this.selectedMethodData.filter(item => item.method === methodItem.method)[0];\n              console.log(\"验证签名 请求>>>:\", JSON.stringify(requestItme));\n              console.log(\"验证签名 结果>>>:\", JSON.stringify(methodItem));\n              if (methodItem.method === \"personal_sign\"){\n                let ethAddress = await window.provider.request({ method: \"eth_requestAccounts\" },methodItem.chainId)\n                ethAddress = ethAddress[0];\n                console.log(\"验证eth 钱包地址>>>:\", ethAddress);\n                let ethMessage = requestItme.params[0]\n                console.log(\"验证eth 签名消息体>>:\", JSON.stringify(ethMessage));\n                verifyList[methodItem.method] = this.eth_verifyMessage(ethMessage,methodItem.result,ethAddress)\n              }else if(methodItem.method === \"solana_signMessage\"){\n                let solanaMessage = methodItem.result\n                if (\"signature\" in solanaMessage && \"publicKey\" in solanaMessage){\n                  const verifySol = nacl.sign.detached.verify(\n                      new TextEncoder().encode(\"Hello Solana\"),\n                      solanaMessage.signature,\n                      new PublicKey(solanaMessage.publicKey).toBytes()\n                  );\n                  verifyList[methodItem.method] = verifySol\n                }else {\n                  verifyList[methodItem.method] = false\n                }\n              }else if(methodItem.method === \"sui_signPersonalMessage\" || methodItem.method === \"sui_signMessage\"){\n                let suiResult =  this.sui_verifySignature(methodItem.result);\n                  verifyList[methodItem.method] = (await suiResult).result\n              }else if(methodItem.method === \"btc_signMessage\"){\n\n                verifyList[methodItem.method] = \"Not verified yet\"\n\n              }else if(methodItem.method === \"aptos_signMessage\"){\n                let aptosMessage = methodItem.result\n                let aptosProvider = new OKXAptosProvider(window.provider)\n                let  aptosPublicKey  = aptosProvider.getAccount(methodItem.chainId)?.publicKey\n\n                let signStr = aptosMessage.signature\n                if (signStr.startsWith(\"0x\")) {\n                  signStr = signStr.slice(2, signStr.length)\n                }\n\n                console.log(\"aptos_signMessage aptosPublicKey And signStr\",aptosPublicKey,signStr)\n                verifyList[methodItem.method] = nacl.sign.detached.verify(\n                    Buffer.from(aptosMessage.fullMessage),\n                    Buffer.from(signStr, 'hex'),\n                    Buffer.from(aptosPublicKey, 'hex'),\n                );\n              }else if(methodItem.method === \"cosmos_signArbitrary\"){\n                let cosmosProvider = new OKXCosmosProvider(window.provider)\n                let cosmosAddress = cosmosProvider.getAccount(methodItem.chainId)?.address\n                let cosmosMessage = methodItem.result\n                let isValid =  await this.cosmos_verifySignArbitrary(cosmosAddress,\"test cosmos\",cosmosMessage.signature, cosmosMessage.pub_key.value)\n                verifyList[methodItem.method] = isValid\n\n              }else if (methodItem.method === \"tron_signMessage\") {\n                let tronMessage = methodItem.result\n                let tronWeb = new TronWeb({\n                  \"fullHost\": 'https://api.trongrid.io',\n                  \"headers\": {},\n                  \"privateKey\": ''\n                })\n                let provider = new OKXTronProvider(window.provider)\n                verifyList[methodItem.method] = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), tronMessage, provider.getAccount(\"tron:mainnet\").address)\n              } else if (methodItem.method === \"tron_signMessageV2\") {\n                let tronMessage = methodItem.result\n                let tronWeb = new TronWeb({\n                  \"fullHost\": 'https://api.trongrid.io',\n                  \"headers\": {},\n                  \"privateKey\": ''\n                })\n                const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", tronMessage);\n                let provider = new OKXTronProvider(window.provider)\n\n                verifyList[methodItem.method] = base58Address === provider.getAccount(\"tron:mainnet\").address\n              }\n              else {\n                verifyList[methodItem.method] = \"Not verified yet\"\n\n              }\n            }else if(\"method\" in methodItem && \"error\" in methodItem) {\n              verifyList[methodItem.method] = methodItem.error\n            }\n\n          }\n\n          console.log(\"验证签名 最后的结果>>>:\", JSON.stringify(verifyList));\n          this.testTransaction = \"签名验证结果如下: \\n\" + JSON.stringify(verifyList)\n        }else {\n          console.log(\"验证签名 window.provider.session.connectMethodsReply 为空:\");\n\n        }\n\n    },\n\n    handleThemeSelect(theme) {\n      selectedTheme = theme;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: theme,\n          },\n        };\n      }\n    },\n\n    async sui_verifySignature(signatureResult) {\n      let resultObj = signatureResult\n      let result = false\n      let msg = ''\n      try {\n        /// 获取当前account\n        const adapter = new SuiAdapter(window.provider);\n        let account = adapter.getAccount()\n        console.log(`Account中获取的address：${account.address}`)\n\n        /// 验证签名\n        let pubKey = await verifyPersonalMessageSignature(this.currentSuiTransaction.message, resultObj.signature)\n        let address = pubKey.toSuiAddress()\n        console.log(`验签结果计算得到address：${address}`)\n\n        /// 对比pubKey\n        console.log(`account pubkey: ${account.publicKey}`,)\n        console.log(`result pubkey: ${pubKey.toBase64()}`)\n        result = (account.address === address) && (account.publicKey === pubKey.toBase64())\n\n        msg = `address verify: ${account.address === address}\\npublicKey verify: ${account.publicKey === pubKey.toBase64()}`\n        console.log(\"signature verify success: \", pubKey)\n      } catch (e) {\n        console.log(\"signature verify failed: \", e)\n      }\n      return {\n        result,\n        msg\n      }\n    },\n\n\n    handleRedirectSelect(input) {\n      this.redirect = input;\n    },\n\n    handleRedirectDeeplink(input) {\n      this.redirectDeeplink = input;\n    },\n\n    addRedirectParam() {\n      if (this.testTransaction) {\n        const newTransaction = JSON.parse(this.testTransaction);\n        newTransaction.redirect = this.redirect === 'deeplink' ? this.redirectDeeplink : this.redirect;\n        this.testTransaction = JSON.stringify(newTransaction);\n      }\n    },\n\n    canChainAddRedirectParam() {\n      return chainsThatCanAddRedirectParam.some((c) => this.selectedChain.startsWith(c));\n    }\n  },\n  created() {\n    // for (const eventName of Object.values(OKX_TON_CONNECTION_AND_TRANSACTION_EVENT)) {\n    //   console.log(eventName);\n    //   window.addEventListener(eventName, (event) => {\n    //     console.log(eventName,event.detail)\n    //     this.currentStatus = eventName\n    //   });\n    // }\n  },\n\n  mounted() {\n\n    var scriptTag = document.createElement(\"script\");\n    scriptTag.src = \"https://telegram.org/js/telegram-web-app.js\";\n    scriptTag.id = \"tgsdk\";\n    document.getElementsByTagName('head')[0].appendChild(scriptTag);\n\n    this.connectReady = true;\n    document.title = \"OKX Connect\";\n    this.initBtnClicked()\n  },\n};\n</script>\n","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signMessage()\">signMessage(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_send()\">send(BTC)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendBitcoin()\">sendBitcoin(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signPsbt_up()\">signPsbt(上架NFT)</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"btc_signAndPushPsbt_up()\">signAndPushPsbt(上架NFT)</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在OKX App选择要上架的Btc NFT，点击【上架】\n        </li>\n        <li>\n          2. 弹出签名面板，点开高级选项，查看\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出上架流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendInscription()\">sendInscription(BTC)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Btc NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount\n    }\n  },\n  methods: {\n    btc_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to BTC\"\n      };\n      this.$emit('generateTransactionParams', params, \"btc_signMessage\")\n    },\n\n    btc_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"btc_send\")\n    },\n\n    btc_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"btc_sendBitcoin\")\n    },\n\n    btc_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"btc_signPsbt\")\n    },\n\n    btc_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"btc_signAndPushPsbt\")\n    },\n\n    btc_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"btc_sendInscription\")\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./BtcTransactionPanel.vue?vue&type=template&id=b2c51436&scoped=true\"\nimport script from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./BtcTransactionPanel.vue?vue&type=style&index=0&id=b2c51436&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-b2c51436\"]])\n\nexport default __exports__","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signMessage()\">signMessage(Fractal)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_send()\">send(Fractal)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_sendBitcoin()\">sendBitcoin(Fractal)</el-button>\n\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signPsbt_up()\">signPsbt(上架NFT)</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_signAndPushPsbt_up()\">signAndPushPsbt(上架NFT)</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在OKX App选择要上架的Fractal NFT，点击【上架】\n        </li>\n        <li>\n          2. 弹出签名面板，点开高级选项，查看\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出上架流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_sendInscription()\">sendInscription(Fractal)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Fractal NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount\n    }\n  },\n  methods: {\n    fractal_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to UniSat!\\n\\nClick to sign in and accept the UniSat Terms of Service (https://unisat.io/terms-of-service.html) and Privacy Policy (https://unisat.io/privacy-policy.html).\\n    \\nThis request will not trigger a blockchain transaction.\\n    \\nYour authentication status will reset after 24 hours.\\n    \\nWallet address:\\nbc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\\n    \\nNonce:\\n162d70e3-8c21-4cfd-9a22-9bf0a4b7be51\\n\"\n      };\n      this.$emit('generateTransactionParams', params, \"fractal_signMessage\")\n    },\n\n    fractal_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_send\")\n    },\n\n    fractal_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_sendBitcoin\")\n    },\n\n    fractal_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"fractal_signPsbt\")\n    },\n\n    fractal_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"fractal_signAndPushPsbt\")\n    },\n\n    fractal_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"fractal_sendInscription\")\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./FractalTransactionPanel.vue?vue&type=template&id=02b5b8a5&scoped=true\"\nimport script from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./FractalTransactionPanel.vue?vue&type=style&index=0&id=02b5b8a5&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-02b5b8a5\"]])\n\nexport default __exports__","<script>\n\nimport {getFullnodeUrl, SuiClient} from \"@mysten/sui/client\";\nimport {Transaction as SuiTransaction} from '@mysten/sui/transactions';\n\nexport default {\n  name: \"SuiTransactionPanel\",\n  methods: {\n    sui_getAccount() {\n      this.$emit('generateTransactionParams', '', \"sui_getAccount\")\n    },\n\n    //对单个交易签名（不发送)\n    async sui_signMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signMessage\")\n    },\n\n    async sui_signPersonalMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signPersonalMessage\")\n    },\n\n    sui_signTransaction2() {\n      // 定义要转移的金额和目标地址\n      const amount = 109; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    async sui_requestRpc() {\n      let provider = window.provider;\n      provider.setDefaultChain(\n          `sui:mainnet`,\n          `https://fullnode.mainnet.sui.io:443`\n      );\n      var data = {\n        method: \"suix_getBalance\",\n        params: [\n          \"0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae\",\n          \"0x168da5bf1f48dafc111b0a488fa454aca95e0b5e::usdc::USDC\",\n        ],\n      };\n\n      this.$emit(\"generateTransactionParams\", data, \"sui_testRpc\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 102; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signAndExecuteTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n      this.$emit(\"generateTransactionParams\", input, \"sui_signAndExecuteTransaction\")\n    },\n\n    /// generate txBytes and txSerialize\n    async generateTsBytesAndSerizlize(input) {\n      /// txBytes and txSerialize may be constructed in advance by the dapp side\n      let resultTuple = [\"\", \"\"];\n      if (\n          \"txBytes\" in input &&\n          input.txBytes.length > 0 &&\n          \"txSerialize\" in input &&\n          input.txSerialize.length > 0\n      ) {\n        resultTuple = [input.txBytes, input.txSerialize];\n      }\n\n      /// Otherwise, a transactionBlock parameter is required.\n      if (!(\"transactionBlock\" in input)) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      // if (this.walletAddress != \"connected\") {\n      //   alert(\"请先连接钱包\");\n      //   return new Promise((resolve) => {\n      //     resolve(resultTuple);\n      //   });\n      // }\n\n      let senderAccounts = window.provider.requestAccountsWithNamespace(\"sui\");\n      if (senderAccounts.length == 0) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      try {\n        let rpcUrl = getFullnodeUrl(\"mainnet\");\n        rpcUrl = \"https://www.okx.com/fullnode/sui/discover/rpc\"\n        const suiClient = new SuiClient({ url: rpcUrl });\n\n        /// sender is required\n        input.transactionBlock.setSender(senderAccounts[0]);\n        const result = await input.transactionBlock.build({\n          client: suiClient,\n        });\n        const txBytes = Buffer(result).toString(\"base64\");\n        const txSerialize = await SuiTransaction.from(txBytes).toJSON();\n        resultTuple = [txBytes, txSerialize];\n      } catch (error) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      return new Promise((resolve) => {\n        resolve(resultTuple)\n      })\n    },\n\n    //签名并发送交易\n    sui_signAndExecuteTransaction() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n        \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.testTransaction = JSON.stringify(input);\n      this.currentSuiTransaction = input;\n      this.currentSuiMethod = \"sui_signAndExecuteTransaction\";\n    },\n  },\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_getAccount()\">getAccount(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signMessage()\">signMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signPersonalMessage()\">signPersonalMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signTransaction2()\">signTransaction(Sui)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signAndExecuteTransaction()\">sendTransaction(Sui)</el-button>\n      <div style=\"font-size: 12px; color: gray;\">(send to Rally Tiger account)</div>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_requestRpc()\">RPC_getBalance</el-button>\n      <div style=\"font-size: 12px; color: gray;\">get USDC balance of address:</div>\n      <div style=\"font-size: 12px; color: gray\">0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae</div>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signTransaction_pre_execution()\">signTransaction(prepared data)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signAndExecuteTransaction_pre_execution()\">sendTransaction(prepared data)</el-button>\n    </el-col>\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./SuiTransactionPanel.vue?vue&type=template&id=56a8eddf&scoped=true\"\nimport script from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./SuiTransactionPanel.vue?vue&type=style&index=0&id=56a8eddf&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-56a8eddf\"]])\n\nexport default __exports__","<script>\n\n\nimport {OKXTronProvider} from \"@okxconnect/universal-provider\";\nimport {TronWeb} from \"tronweb\";\n\nexport default {\n  name: \"TronTransactionPanel\",\n  methods: {\n\n    async tron_signMessage() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessage(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n\n      const verify = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), res, provider.getAccount(\"tron:mainnet\").address)\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" + res, \"tron_signMessage\")\n    },\n\n    async tron_signMessageV2() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessageV2(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", res);\n      console.log(\"tron_signMessageV2_base58Address\", base58Address)\n      console.log(\"tron_signMessageV2_address\", provider.getAccount(\"tron:mainnet\").address)\n      const verify = base58Address === provider.getAccount(\"tron:mainnet\").address\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" +  res, \"tron_signMessage\")\n    },\n\n    async tron_signTransaction(isOnlySign) {\n      let provider = new OKXTronProvider(window.provider)\n        let tronWeb = new TronWeb({\n          \"fullHost\": 'https://api.trongrid.io',\n          \"headers\": {},\n          \"privateKey\": ''\n        })\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const transaction = await tronWeb.transactionBuilder.sendTrx(\"TGBcVLMnVtvJzjPWZpPiYBgwwb7th1w3BF\", 1000, address);\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let res = await provider.signTransaction( transaction, \"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", res, \"tron_signTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async getContract() {\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41e95812d8d5b5412d2b9f3a4d5a87ca15c5c51f33\"\n      \n      try {\n        const contract = await tronWeb.trx.getContract(contractAddress)\n        const abi = contract.abi.entrys;\n        console.log(\"获取到的合约：\")\n        console.log(abi)\n      } catch (error) {\n        console.log(\"Error getting contract ABI:\", error);\n      }\n    },\n    \n    async tron_signAndSendTransactionContract(isOnlySign) {\n      // this.getContract()\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41e95812d8d5b5412d2b9f3a4d5a87ca15c5c51f33\"\n      let provider = new OKXTronProvider(window.provider)\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const parameter = [\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n      ]\n      const ret = await tronWeb.transactionBuilder.triggerSmartContract(contractAddress, \"quote(uint256,uint256,uint256)\", {}, parameter, address);\n      console.log(\"=====>transaction: \")\n      console.log(ret);\n      this.$emit(\"generateTransactionParams\", ret.transaction)\n      if (isOnlySign) {\n        let tx = await provider.signTransaction( ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async tron_signAndSendTransactionApprove(isOnlySign) {\n      let provider = new OKXTronProvider(window.provider)\n\n      let transaction = {\n        \"visible\": false,\n        \"txID\": \"d1ed31b6abd2c37e248254681d3ee61b2e628fbd776def753b5592712ebd98c5\",\n        \"raw_data\": {\n          \"contract\": [{\n            \"parameter\": {\n              \"value\": {\n                \"data\": \"095ea7b3000000000000000000000000e95812d8d5b5412d2b9f3a4d5a87ca15c5c51f33ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n                \"owner_address\": \"4157c140be01fa2bbabf7f055ab879d0c05725293c\",\n                \"contract_address\": \"41b4a428ab7092c2f1395f376ce297033b3bb446c1\"\n              },\n              \"type_url\": \"type.googleapis.com/protocol.TriggerSmartContract\"\n            },\n            \"type\": \"TriggerSmartContract\"\n          }],\n          \"ref_block_bytes\": \"1bde\",\n          \"ref_block_hash\": \"af71fa1aa01b5bd1\",\n          \"expiration\": Date.now() + 60000,\n          \"fee_limit\": 250000000,\n          \"timestamp\": Date.now()\n        },\n        \"raw_data_hex\": \"0a021bde2208af71fa1aa01b5bd140f8b1fa98b4325aae01081f12a9010a31747970652e676f6f676c65617069732e636f6d2f70726f746f636f6c2e54726967676572536d617274436f6e747261637412740a154157c140be01fa2bbabf7f055ab879d0c05725293c121541b4a428ab7092c2f1395f376ce297033b3bb446c12244095ea7b3000000000000000000000000e95812d8d5b5412d2b9f3a4d5a87ca15c5c51f33ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff70f1e6f698b432900180e59a77\"\n      }\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let tx = await provider.signTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n\n    }\n\n  }\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessage()\">tron_signMessage</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessageV2()\">tron_signMessageV2</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(true)\">\n        tron_signTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(true)\">\n        tron_signTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(true)\">\n        tron_signTransaction(Approve)\n      </el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(false)\">\n        tron_signAndSendTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(false)\">\n        tron_signAndSendTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(false)\">\n        tron_signAndSendTransaction(approve)\n      </el-button>\n    </el-col>\n\n\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./TronTransactionPanel.vue?vue&type=template&id=eaaccc08&scoped=true\"\nimport script from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./TronTransactionPanel.vue?vue&type=style&index=0&id=eaaccc08&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-eaaccc08\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=b2407636&scoped=true\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=b2407636&scoped=true&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-b2407636\"]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport ElementPlus from 'element-plus'\nimport 'element-plus/dist/index.css'\nimport App from './App.vue'\n\nconst app = createApp(App)\n\napp.use(ElementPlus)\napp.mount('#app')","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkokxconnectdemo\"] = self[\"webpackChunkokxconnectdemo\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(81765); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["id","_createElementBlock","_hoisted_1","_createVNode","_component_el_container","default","_withCtx","_component_el_header","_cache","_createTextVNode","_","_component_el_main","_component_el_card","class","header","_createElementVNode","style","_component_el_row","_component_el_col","span","_toDisplayString","$options","getWalletAddress","_ctx","currentStatus","_component_el_checkbox","modelValue","withUI","$event","onChange","handleWithUI","universalToTG","handleUniversalToTG","_component_el_select","modals","placeholder","handleModalsSelect","multiple","_component_el_option","label","value","returnStrategy","handleReturnStrategySelect","_Fragment","_renderList","returnStrategies","strategy","_createBlock","key","_component_el_input","deeplink","handleReturnStrategyDeeplink","disabled","_createCommentVNode","language","handleLanguageSelect","locales","locale","theme","handleThemeSelect","THEME","LIGHT","DARK","selectedMethod","handleConnectMethodsSelect","connectMethods","item","tonProofValue","gutter","align","Object","keys","availableChains","checked","areChainsInit","name","isOptionalChecked","handleOptionChange","_component_el_button","type","onClick","initBtnClicked","icon","connectInitStr","connectBtnClicked","connectStatusStr","syncAllAddressClick","syncAllAddressStr","disconnectAction","walletAddress","length","disconnectStatusStr","_Teleport","to","showModal","args","closeModal","_withModifiers","_component_qrcode_vue","qrValue","size","level","_component_el_tabs","activeTab","onTabClick","clickActiveTab","_component_el_tab_pane","eth_requestAccounts","eth_chainId","wallet_switchEthereumChain","wallet_addEthereumChain","personal_sign","eth_signTypedData_v4","eth_sendTransaction_transfer","eth_sendTransaction_approve","eth_sendTransaction_mint","wallet_watchAsset","ton_getAccount","ton_sendTransaction","sol_signMessage","sol_signTransaction","sol_signVersionedTransaction","sol_signAllTransactions","sol_signAllVersionedTransactions","sol_signAndSendTransaction","sol_signAndSendVersionedTransaction","_component_SuiPanel","onGenerateTransactionParams","sui_generateTransactionParams","_component_BTCPanel","btc_generateTransactionParams","_component_FractalPanel","fractal_generateTransactionParams","_component_TronTransactionPanel","tron_generateTransactionParams","onGenerateTransactionResult","tron_getTransactionResult","aptos_signMessage","aptos_signTransaction","aptos_signAndSubmitTransaction","cosmos_signArbitrary","cosmos_signAmino","cosmos_signDirect","wallet_testRpc","eth_sendTransaction_swap","move_signTransaction","move_signAndSubmitTransaction","testBase64UrlSafe","xs","sm","redirect","handleRedirectSelect","canChainAddRedirectParam","redirectDeeplink","handleRedirectDeeplink","addRedirectParam","testTransaction","rows","testboc","sendTransaction","testTransactionStr","btc_signMessage","$setup","sendAmount","clearable","btc_send","sendSatoshisAmount","btc_sendBitcoin","psbtHex","btc_signPsbt_up","btc_signAndPushPsbt_up","nftId","receiver","btc_sendInscription","props","msg","String","setup","ref","methods","params","from","signStr","this","$emit","alert","toAddress","satoshis","options","feeRate","autoFinalized","address","inscriptionId","__exports__","fractal_signMessage","fractal_send","fractal_sendBitcoin","fractal_signPsbt_up","fractal_signAndPushPsbt_up","fractal_sendInscription","sui_getAccount","sui_signMessage","sui_signPersonalMessage","sui_signTransaction2","sui_signAndExecuteTransaction","sui_requestRpc","sui_signTransaction_pre_execution","sui_signAndExecuteTransaction_pre_execution","data","uint8Array","Uint8Array","input","message","amount","recipientAddress","tx","SuiTransaction","coin","splitCoins","gas","transferObjects","transactionBlock","account","chain","showEffects","provider","window","setDefaultChain","method","txBytes","txSerialize","generateTsBytesAndSerizlize","resultTuple","Promise","resolve","senderAccounts","requestAccountsWithNamespace","rpcUrl","getFullnodeUrl","suiClient","SuiClient","url","setSender","result","build","client","Buffer","toString","toJSON","error","JSON","stringify","currentSuiTransaction","currentSuiMethod","tron_signMessage","tron_signMessageV2","tron_signTransaction","tron_signAndSendTransactionContract","tron_signAndSendTransactionApprove","OKXTronProvider","res","signMessage","code","tronWeb","TronWeb","verify","trx","verifyMessage","getAccount","signMessageV2","base58Address","verifyMessageV2","console","log","isOnlySign","transaction","transactionBuilder","sendTrx","signTransaction","signAndSendTransaction","getContract","contractAddress","contract","abi","entrys","parameter","ret","triggerSmartContract","Date","now","verifyADR36Amino","require","fromBech32","VConsole","allChains","chainsThatCanAddRedirectParam","optionChains","Set","selectedModals","selectedReturnStrategy","selectedDeepLink","selectedLanguage","selectedTheme","components","TronTransactionPanel","QrcodeVue","BTCPanel","FractalPanel","SuiPanel","testTopic","testPublicKey","testProofPayload","pendingDeepLink","logList","connectReady","localPubKey","localSecKey","selectedChain","ProofPayloadVerify","showVerifyRow","chainId","has","localStorage","getItem","selectedMethodData","isChecked","setItem","location","reload","delete","add","computed","selectedChains","initChains","newChains","updatedChains","assign","tab","tabName","initCall","OKXUniversalConnectUI","init","dappMetaData","actionsConfiguration","uiPreferences","OKXUniversalProvider","then","tonProvider","OKXTonProvider","onStatusChange","walletInfo","err","onModalStateChange","state","session","namespaces","entries","forEach","chains","push","parseInt","substring","on","uri","useShortLink","isPC","items","topic","testTonSdk","connected","syncAllAddresses","e","disconnect","blockExplorerUrls","chainName","nativeCurrency","symbol","decimals","rpcUrls","accounts","request","dataETH","dataPolygon","types","EIP712Domain","Person","Mail","primaryType","domain","version","verifyingContract","wallet","contents","maxPriorityFeePerGas","maxFeePerGas","gasPrice","nonce","gasLimit","str","image","tonUniversalLog","sendTransactionAlert","response","fetch","json","confirm","startsWith","sendData","parse","adapter","SuiAdapter","suiResult","signAndExecuteTransaction","sui_verifySignature","signPersonalMessage","btcAdapter","OKXBtcProvider","btcResult","currentBtcMethod","currentBtcTransaction","send","signPsbt","hexToBase64","bs64Str","catch","signPsbts","psbtHexs","sendInscription","signAndPushPsbt","sendBitcoin","fractalResult","currentFractalMethod","currentFractalTransaction","OKX_CONNECT_ERROR_CODES","USER_REJECTS_ERROR","hexStr","bytes","i","substr","buffer","blob","Blob","reject","reader","FileReader","onload","base64Data","target","split","onerror","readAsDataURL","datatest","utf8Array","TextEncoder","encode","binary","byte","fromCharCode","firstStr","btoa","replace","showUrl","getUniversalLink","getAppWalletDeepLink","hasEip155","hasSolana","hasSui","hasBtc","hasAptos","hasTon","hasCosmos","nameSpacesChains","optSpaceChains","solanaChains","hasTron","suiChains","btcChains","filter","map","values","includes","connectMethod","connectData","requireData","eip155","defaultChain","solana","cosmos","tron","tonParams","ton_addr","ton_proof","payload","ton","sui","rpcMap","aptos","btc","optData","signMethods","getCurrentSelectedMethodData","openModalAndSign","openModal","sessionConfig","useMini","openUniversalUrl","tmaReturnUrl","connectAndSign","connect","methodList","suiData","currentMethod","application","userAgentInfo","navigator","userAgent","Agents","flag","v","indexOf","isSafariOrChrome","pubkey","OKXSolanaProvider","result1","nacl","detached","signature","PublicKey","publicKey","toBytes","OKXAptosProvider","config","AptosConfig","network","Network","MAINNET","Aptos","simple","sender","function","typeArguments","functionArguments","safeJsonStringify","signAndSubmitTransaction","connection","Connection","getSolConnect","blockhash","getLatestBlockhash","versionedTransactionMessage","TransactionMessage","payerKey","recentBlockhash","instructions","SystemProgram","transfer","fromPubkey","toPubkey","lamports","compileToV0Message","VersionedTransaction","signAllTransactions","Transaction","feePayer","rpc","OKXCosmosProvider","signArbitrary","isValid","cosmos_verifySignArbitrary","pub_key","signer","prefix","prefixStr","signatureBuffer","uint8Signature","pubKeyValueBuffer","pubKeyUint8Array","signDoc","signAmino","messageToBuffer","signDirect","uiOptions","eth_verifyMessage","ethAddress","originalMessage","slice","recoveredAddress","ethers","toLowerCase","list","verifyList","methodItem","requestItme","ethMessage","solanaMessage","verifySol","aptosMessage","aptosProvider","aptosPublicKey","fullMessage","cosmosProvider","cosmosAddress","cosmosMessage","tronMessage","signatureResult","resultObj","pubKey","verifyPersonalMessageSignature","toSuiAddress","toBase64","newTransaction","some","c","created","mounted","scriptTag","document","createElement","src","getElementsByTagName","appendChild","title","render","app","createApp","App","use","ElementPlus","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","loaded","__webpack_modules__","call","m","amdO","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","Function","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","children","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}