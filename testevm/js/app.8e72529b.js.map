{"version":3,"file":"js/app.8e72529b.js","mappings":"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","sources":["webpack://okxconnectdemo/../packages/core/src/connect/commands.js","webpack://okxconnectdemo/../packages/core/src/connect/connect.js","webpack://okxconnectdemo/../packages/core/src/connect/connectionManager.js","webpack://okxconnectdemo/../packages/core/src/connect/constants.js","webpack://okxconnectdemo/../packages/core/src/connect/engine.js","webpack://okxconnectdemo/../packages/core/src/connect/index.js","webpack://okxconnectdemo/../packages/core/src/connect/jwt.js","webpack://okxconnectdemo/../packages/core/src/connect/jwtconstants.js","webpack://okxconnectdemo/../packages/core/src/connect/sessionUtils.js","webpack://okxconnectdemo/../packages/core/src/connect/storage.js","webpack://okxconnectdemo/../packages/core/src/connect/storageconstants.js","webpack://okxconnectdemo/../packages/core/src/connect/walletConnectionConstants.js","webpack://okxconnectdemo/../packages/core/src/connect/walletConnectionManager.js","webpack://okxconnectdemo/../packages/core/src/crypto/crypto.js","webpack://okxconnectdemo/../packages/core/src/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/engine.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/json-rpc.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/connect-event.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/connect-wallet.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/wallet-info.js","webpack://okxconnectdemo/../packages/core/src/protocol/constants.js","webpack://okxconnectdemo/../packages/core/src/protocol/error/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/error/okx-connect.error.js","webpack://okxconnectdemo/../packages/core/src/protocol/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/misc.js","webpack://okxconnectdemo/../packages/core/src/utils/call-for-success.js","webpack://okxconnectdemo/../packages/core/src/utils/index.js","webpack://okxconnectdemo/../packages/core/src/utils/log.js","webpack://okxconnectdemo/../packages/core/src/utils/safejson.js","webpack://okxconnectdemo/../packages/core/src/utils/stringUtils.js","webpack://okxconnectdemo/../packages/core/src/utils/tma-api.js","webpack://okxconnectdemo/../packages/core/src/utils/url.js","webpack://okxconnectdemo/../packages/core/src/utils/utils.js","webpack://okxconnectdemo/../packages/core/src/utils/web-api.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXBtcProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXCosmosProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXStarknetProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXTonProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXTronProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXUniversalProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/sign-client/client.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/ConnectMethodUtils.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/namespaces.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/events.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/values.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/aptos.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/btc.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/cosmos.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/eip155.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcConnection.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/solana.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/starknet.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/sui.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/ton.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/tron.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/misc.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/providers.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/globals.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/misc.js","webpack://okxconnectdemo/./src/App.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue?1b44","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue?e4fb","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue?aa83","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue?089a","webpack://okxconnectdemo/./src/App.vue?7ccd","webpack://okxconnectdemo/./src/main.js","webpack://okxconnectdemo/webpack/bootstrap","webpack://okxconnectdemo/webpack/runtime/amd options","webpack://okxconnectdemo/webpack/runtime/chunk loaded","webpack://okxconnectdemo/webpack/runtime/compat get default export","webpack://okxconnectdemo/webpack/runtime/define property getters","webpack://okxconnectdemo/webpack/runtime/global","webpack://okxconnectdemo/webpack/runtime/hasOwnProperty shorthand","webpack://okxconnectdemo/webpack/runtime/make namespace object","webpack://okxconnectdemo/webpack/runtime/node module decorator","webpack://okxconnectdemo/webpack/runtime/jsonp chunk loading","webpack://okxconnectdemo/webpack/startup"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_METHOD_BATCH_FETCHMSG = exports.CONNECT_METHOD_FETCHMSG = exports.CONNECT_METHOD_RECEIVE = exports.CONNECT_METHOD_UNSUB = exports.CONNECT_METHOD_SUB = exports.CONNECT_METHOD_PUBLISH = exports.CONNECT_METHOD_LOGIN = exports.CONNECT_METHOD_PUSH = void 0;\n// --------------- ws methods -------------\nexports.CONNECT_METHOD_PUSH = \"push\";\nexports.CONNECT_METHOD_LOGIN = \"login\";\nexports.CONNECT_METHOD_PUBLISH = \"publish\";\nexports.CONNECT_METHOD_SUB = \"subscribe\";\nexports.CONNECT_METHOD_UNSUB = \"unsubscribe\";\nexports.CONNECT_METHOD_RECEIVE = \"receive\";\nexports.CONNECT_METHOD_FETCHMSG = \"fetchMessages\";\nexports.CONNECT_METHOD_BATCH_FETCHMSG = \"batchFetchMessages\";\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXWalletConnector = void 0;\nconst constants_1 = require(\"./constants\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils\");\nconst utils_2 = require(\"../utils/utils\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst log = __importStar(require(\"../utils/log\"));\nconst protocol_1 = require(\"../protocol\");\nconst WS = (0, utils_2.resolveWebSocketImplementation)();\nclass OKXWalletConnector {\n    constructor(url) {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.state = constants_1.ConnectorState.InitState;\n        this.selectedUrlIndex = 0;\n        // reconnect\n        this.retryCount = 0;\n        // default timeout limit: 8 sec\n        this.timeOutLimit = 8000;\n        if (!(0, utils_2.checkWSUrl)(url)) {\n            throw new Error(`CONNECTOR: invalid url ${url}`);\n        }\n        this.url = url;\n        this.heartbeatTimer = null;\n        this.connectionTimeoutTimer = null;\n        this.connectURLStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY + storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n    }\n    get connecting() {\n        return this.state == constants_1.ConnectorState.Connecting;\n    }\n    // ------------------------------------------------------\n    onPayload(e) {\n        if (typeof e.data === \"undefined\")\n            return;\n        log.logDebug('get received data');\n        log.logDebug(e);\n        if (typeof e.data === \"string\") {\n            let rsp = e.data;\n            if (rsp === \"pong\") {\n                log.logDebug(`CONNECT: receive pong ${Date.now().toString()}`);\n                return;\n            }\n        }\n        this.events.emit(\"payload\", e.data);\n    }\n    onClose(event) {\n        var _a;\n        log.logDebug('socket get closed: ', (_a = this.socket) === null || _a === void 0 ? void 0 : _a.url, event.code);\n        this.socket = undefined;\n        this.events.emit(\"close\", event);\n    }\n    onError(id, e) {\n        const payload = { id: id, msg: e.toString() };\n        this.events.emit(\"payload\", payload);\n    }\n    onopen(socket) {\n        socket.onmessage = (event) => this.onPayload(event);\n        socket.onclose = (event) => this.onClose(event);\n        this.socket = socket;\n        this.state = constants_1.ConnectorState.Connected;\n        this.events.emit(\"open\");\n    }\n    // ------------------------------------------------------\n    emitError(errorEvent) {\n        this.events.emit(\"fail\", errorEvent);\n    }\n    // ------------------------------------------------------\n    heartbeat() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.heartbeatTimer) {\n                clearTimeout(this.heartbeatTimer);\n            }\n            if (this.state != constants_1.ConnectorState.Connected && this.state != constants_1.ConnectorState.OnError) {\n                log.logDebug('heart beat close');\n                return;\n            }\n            if (!this.socket) {\n                log.logDebug('socket not exist');\n                if (this.state == constants_1.ConnectorState.Connected || this.state == constants_1.ConnectorState.OnError) {\n                    log.logDebug('socket reconnect by heartbeat');\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                        this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n                    }\n                }\n                return;\n            }\n            if (this.socket.readyState !== WebSocket.OPEN) {\n                log.logDebug('socket not ready');\n                if (this.state == constants_1.ConnectorState.Connected || this.state == constants_1.ConnectorState.OnError) {\n                    log.logDebug('socket reconnect by heartbeat with state', this.state, this.socket.readyState);\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                        this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n                    }\n                }\n                return;\n            }\n            log.logDebug(`send ping heart beat: ${Date.now().toString()}, ${this.socket}`);\n            this.socket.send(\"ping\");\n            this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n        });\n    }\n    registOpen(url = this.url, inRetry = false) {\n        if (!(0, utils_2.checkWSUrl)(url)) {\n            throw new Error(`CONNECTOR: invalid url ${url}`);\n        }\n        this.url = url;\n        if (!inRetry) {\n            log.logDebug('Connection connect:', this.url, new Date().toUTCString());\n        }\n        this.state = constants_1.ConnectorState.Connecting;\n        const origin = new URLSearchParams(url).get(\"origin\");\n        return new Promise((resolve, reject) => {\n            const socket = new WS(url, []);\n            log.logDebug('Connection connect Begin:', this.url, new Date().toUTCString());\n            this.startTimeOutTimer(socket);\n            if ((0, utils_2.hasBuiltInWebSocket)()) {\n                log.logDebug('Add socket error handler');\n                socket.onerror = () => {\n                    reject(new Error('socket error'));\n                    socket.close();\n                };\n            }\n            else {\n                log.logDebug('Add socket error handler');\n                socket.on(\"error\", () => {\n                    reject(new Error('socket error'));\n                    socket.close();\n                });\n            }\n            socket.onopen = () => {\n                log.logDebug('socket opened');\n                this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.FINISHED);\n                this.onopen(socket);\n                this.heartbeat();\n                resolve(socket);\n            };\n        });\n    }\n    checkMaxRetry() {\n        log.logDebug('current retry count:', this.retryCount, 'of', constants_1.OKXCONNECTOR_WS_URL_LIST.length);\n        return this.retryCount > constants_1.OKXCONNECTOR_WS_URL_LIST.length;\n    }\n    connectionTryNext() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.checkMaxRetry()) {\n                //TODO: mark descent\n                this.retryCount += 1;\n                let nextUrl = this.getNextSelectUrl();\n                log.logDebug('Connection retry:', nextUrl, new Date().toUTCString());\n                return this.registOpen(nextUrl, true);\n            }\n            else {\n                log.logDebug('Max Connection retry ', this.retryCount, new Date().toUTCString());\n            }\n        });\n    }\n    startTimeOutTimer(socket) {\n        if (this.connectionTimeoutTimer) {\n            this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.CANCELED);\n        }\n        this.pendingSocket = socket;\n        this.connectionTimeoutTimer = setTimeout(() => {\n            if (this.pendingSocket) {\n                this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.TIME_OUT);\n            }\n        }, this.timeOutLimit);\n    }\n    resetTimeOutTimer(code) {\n        var _a;\n        // 1. cancel connecting pending sockets\n        if (code != constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.FINISHED) {\n            (_a = this.pendingSocket) === null || _a === void 0 ? void 0 : _a.close(code);\n        }\n        this.pendingSocket = undefined;\n        // 2. remove timer\n        clearTimeout(this.connectionTimeoutTimer);\n    }\n    cacheSuccessUrlSelect() {\n        this.connectURLStorage.saveContent(this.selectedUrlIndex.toString(), storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n    }\n    getSuccessUrlSelect() {\n        var _a;\n        let selectIndex = (_a = this.connectURLStorage.getItem(storageconstants_1.OKXCONNECTOR_CACHE_KEY)) === null || _a === void 0 ? void 0 : _a.content;\n        let index = 0;\n        if (selectIndex) {\n            index = Number(selectIndex);\n        }\n        this.selectedUrlIndex = index;\n        return constants_1.OKXCONNECTOR_WS_URL_LIST[index];\n    }\n    getNextSelectUrl() {\n        this.selectedUrlIndex += 1;\n        this.selectedUrlIndex = this.selectedUrlIndex % constants_1.OKXCONNECTOR_WS_URL_LIST.length;\n        return constants_1.OKXCONNECTOR_WS_URL_LIST[this.selectedUrlIndex];\n    }\n    // ------------------------------------------------------\n    onVisibleChanged() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (document.visibilityState === 'visible') {\n                // check and restore\n                log.logDebug(`get changed ${this.state}, ${this.socket}`);\n                if (this.state == constants_1.ConnectorState.Connected && typeof this.socket === \"undefined\") {\n                    log.logDebug('CONNECTION need reopen');\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                    }\n                    return;\n                }\n            }\n        });\n    }\n    tryRegistOpen() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            if (this.connecting) {\n                log.logDebug('tryRegistOpen => connecting state');\n                return new Promise((resolve, reject) => {\n                    this.events.once('fail', (e) => {\n                        log.logDebug('tryRegistOpen => connecting fail listener', e);\n                        return reject(e);\n                    });\n                    this.events.once(\"open\", () => {\n                        if (typeof this.socket == \"undefined\") {\n                            return reject(new Error(\"Connect lost\"));\n                        }\n                        return resolve(this.socket);\n                    });\n                });\n            }\n            log.logDebug('tryRegistOpen => try registOpen until retry limit is hit');\n            let inRetry = false;\n            while (!this.checkMaxRetry() && !this.socket) {\n                try {\n                    log.logDebug('tryRegistOpen => call registOpen, try count:', this.retryCount, inRetry);\n                    yield this.registOpen(url, inRetry);\n                }\n                catch (err) {\n                    log.logDebug('tryRegistOpen => registOpen failed', err);\n                    this.retryCount += 1;\n                    url = this.getNextSelectUrl();\n                    inRetry = true;\n                }\n            }\n            log.logDebug('tryRegistOpen => exit while loop', this.retryCount, this.socket);\n            if (!this.socket && this.checkMaxRetry()) {\n                log.logDebug('tryRegistOpen => failed to open a socket', this.retryCount, this.socket);\n                this.retryCount = 0;\n                this.state = constants_1.ConnectorState.OnError;\n                this.emitError(new Error('tryRegistOpen failed'));\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CONNECTION_ERROR, \"Failed to connect\");\n            }\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this.tryRegistOpen();\n                // listener for reconnect\n                document.removeEventListener('visibilitychange', this.onVisibleChanged.bind(this));\n                document.addEventListener('visibilitychange', this.onVisibleChanged.bind(this));\n            }\n            catch (e) {\n                log.logDebug('connect => failed to connect', e);\n                throw e;\n            }\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.state = constants_1.ConnectorState.Disconnected;\n            return new Promise((resolve, reject) => {\n                if (typeof this.socket === \"undefined\") {\n                    // reject(new Error(\"CONNECTION closed\"))\n                    resolve();\n                    return;\n                }\n                this.socket.onclose = (event) => {\n                    this.onClose(event);\n                    resolve();\n                };\n                this.socket.close();\n                if (this.heartbeatTimer) {\n                    clearTimeout(this.heartbeatTimer);\n                }\n            });\n        });\n    }\n    currentStatus() {\n        return {\n            state: this.state,\n            url: this.url\n        };\n    }\n    // event will be jsonstr\n    /// @params Promise\n    /// @params success/failed callback\n    addListener(event, decrypt, success, failed) {\n        if (this.listenPayloadHandler) {\n            this.events.removeListener(\"payload\", this.listenPayloadHandler);\n        }\n        this.listenPayloadHandler = (e) => {\n            var _a;\n            log.logDebug(`<<< get payload ${e}`);\n            let parsedEvent = (0, utils_1.safeJsonParse)(e);\n            // parse the data to chose success or failed\n            if (parsedEvent.params && parsedEvent.params.data) {\n                let rawMsg = (_a = parsedEvent.params.data) === null || _a === void 0 ? void 0 : _a.message;\n                if (rawMsg) {\n                    try {\n                        let msg = decrypt(rawMsg);\n                        if (msg === undefined) {\n                            log.logDebug(`CONNECT: decrypt undefined`);\n                            failed(event, 'Decrypt undefined');\n                        }\n                        else {\n                            success(event, msg);\n                        }\n                    }\n                    catch (e) {\n                        log.logDebug(`CONNECT: decrypt failed: ${e}`);\n                        failed(event, e.message);\n                    }\n                }\n            }\n        };\n        this.events.on(\"payload\", this.listenPayloadHandler);\n        if (this.failHandler) {\n            this.events.removeListener(\"fail\", this.failHandler);\n        }\n        this.failHandler = (e) => {\n            if (e) {\n                log.logDebug(`CONNECT failed: ${e}`);\n                failed(event, e.message);\n            }\n            else {\n                failed(event, \"Unkonow error\");\n            }\n        };\n        this.events.on(\"fail\", this.failHandler);\n    }\n    addPackageParse(callback) {\n        if (this.payloadHandler) {\n            this.events.removeListener(\"payload\", this.payloadHandler);\n        }\n        this.payloadHandler = (e) => __awaiter(this, void 0, void 0, function* () {\n            // parse the data to chose success or failed\n            log.logDebug(`CONNECTION @[${new Date().toUTCString()}] <<<< received e:${e}`);\n            let param = (0, utils_1.safeJsonParse)(e);\n            yield callback(param);\n        });\n        this.events.on(\"payload\", this.payloadHandler);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    send(doLogin, payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (typeof this.socket === \"undefined\") {\n                    log.logDebug(`>>> send payload undefined ${payload}`);\n                    // this.socket = await this.registOpen();\n                    yield doLogin();\n                }\n                log.logDebug(`CONNECTION @[${new Date().toUTCString()}]>>> send payload ${(0, utils_1.safeJsonStringify)(payload)}`);\n                if (this.socket) {\n                    this.socket.send((0, utils_1.safeJsonStringify)(payload));\n                }\n            }\n            catch (e) {\n                this.onError(payload.id, e);\n            }\n        });\n    }\n    getMsgPayloadFromHistory(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof msg === \"undefined\")\n                return;\n            let tmpMsg = {\n                params: {\n                    data: msg\n                }\n            };\n            let jsonstr = (0, utils_1.safeJsonStringify)(msg);\n            log.logDebug('get received data from history');\n            log.logDebug(jsonstr);\n            jsonstr = (0, utils_1.safeJsonStringify)(tmpMsg);\n            this.events.emit(\"payload\", jsonstr);\n        });\n    }\n    onOpen(callback) {\n        if (this.openHandler) {\n            this.events.removeListener(\"open\", this.openHandler);\n        }\n        this.openHandler = () => __awaiter(this, void 0, void 0, function* () {\n            log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> ws opened: `);\n            yield callback();\n        });\n        this.events.on(\"open\", this.openHandler);\n        this.cacheSuccessUrlSelect();\n    }\n}\nexports.OKXWalletConnector = OKXWalletConnector;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionManager = void 0;\nconst connect_1 = require(\"./connect\");\nconst commands_1 = require(\"./commands\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst jwtconstants_1 = require(\"./jwtconstants\");\nconst constants_1 = require(\"./constants\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils/utils\");\nconst crypto_1 = require(\"../crypto/crypto\");\nconst jwt_1 = require(\"./jwt\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst url_1 = require(\"../utils/url\");\nclass ConnectionManager {\n    constructor() {\n        this.events = new eventemitter3_1.EventEmitter();\n        // local storage\n        this.connectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY_DAPP);\n        this.crypto = new crypto_1.SessionCrypto();\n        let inTMA = (0, url_1.isInTMA)();\n        (0, log_1.logDebug)('do init:', inTMA);\n        if (inTMA) {\n            // recovery from cache\n            const keyPairInfo = this.getCachedCryptoKeyPair();\n            (0, log_1.logDebug)('use same pk:', keyPairInfo);\n            this.crypto = new crypto_1.SessionCrypto(keyPairInfo);\n        }\n        this.jwtKeyPair = this.getCachedJWTKeyPair();\n        this.saveJWTKeyPair(this.jwtKeyPair);\n        // wss connection\n        this.connector = new connect_1.OKXWalletConnector(constants_1.OKXCONNECTOR_WS_URL_1);\n        this.packageId = Date.now();\n        // connection state\n        this.connectedWalletPK = '';\n        this.currentTopic = '';\n        log.logDebug(`this.connectedWalletPK  constructor   ${this.connectedWalletPK}`);\n    }\n    refreshPackageId() {\n        this.packageId = Date.now();\n    }\n    saveCryptoKeyPair(keyPair) {\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(keyPair);\n        // encrypt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_CRYPTO_KEY);\n    }\n    getCachedCryptoKeyPair() {\n        // decrypt kp\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_CRYPTO_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            log.logDebug('get cached crypto key:');\n            log.logDebug(content);\n            let keyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            return keyPairInfo;\n        }\n        else {\n            this.connectStorage.clearCache();\n        }\n        return null;\n    }\n    saveJWTKeyPair(keyPair) {\n        var strkeyPair = {\n            publicKey: (0, utils_1.toHexString)(keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(keyPair.secretKey)\n        };\n        log.logDebug('save jwt kp');\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(strkeyPair);\n        log.logDebug(cacheInfo);\n        // encrypt jwt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_JWT_KEY);\n    }\n    getCachedJWTKeyPair() {\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            // TODO: decrypt jwt kp\n            log.logDebug('get cached jwt kp:');\n            log.logDebug(content);\n            let strKeyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            log.logDebug('save jwt kp');\n            log.logDebug(strKeyPairInfo);\n            var keyPair = {\n                publicKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.publicKey),\n                secretKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.secretKey)\n            };\n            return keyPair;\n        }\n        else {\n            return (0, jwt_1.generateKeyPair)();\n        }\n    }\n    isWalletPKReady() {\n        log.logDebug(`isWalletPKReady  ===> ${this.connectedWalletPK}`);\n        return this.connectedWalletPK.length > 0;\n    }\n    makeJWT(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, jwt_1.signJWT)(topic, jwtconstants_1.OKXCONNECTOR_JWT_SIDE, jwtconstants_1.OKXCONNECTOR_JWT_TTL, // 24h\n            this.jwtKeyPair);\n        });\n    }\n    parsePackage(input_1) {\n        return __awaiter(this, arguments, void 0, function* (input, ignoreACK = false) {\n            var _a, _b, _c, _d, _e;\n            this.events.emit(input.id, input);\n            // send back ACK\n            if (!ignoreACK) {\n                yield this.sendACK(input.id, true);\n                let topic = (_a = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE)) === null || _a === void 0 ? void 0 : _a.content;\n                if (topic) {\n                    let inputObj = input;\n                    if ((_c = (_b = inputObj.params) === null || _b === void 0 ? void 0 : _b.data) === null || _c === void 0 ? void 0 : _c.messageId) {\n                        this.refreshPackageId();\n                        yield this.sendReceive(this.packageId.toString(), (_e = (_d = inputObj.params) === null || _d === void 0 ? void 0 : _d.data) === null || _e === void 0 ? void 0 : _e.messageId, topic);\n                    }\n                }\n            }\n        });\n    }\n    restoreConnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.logDebug(`connectionManager  restoreConenct   ${topic}`);\n            if ((typeof topic !== 'string') || topic.length === 0) {\n                throw new Error('CONNECTION: invalid topic');\n            }\n            log.logDebug(`connectionManager  restoreConenct   disconnect`);\n            yield this.disconnect(true);\n            this.connectStorage.saveContent(topic, storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`connectionManager  restoreConenct   conect`);\n            yield this.connect(true);\n        });\n    }\n    getConnectInfo() {\n        var topic = (0, utils_1.generateTopic)();\n        log.logDebug(`generate topic token: ${topic}`);\n        this.currentTopic = topic;\n        const info = {\n            channelId: topic,\n            clientId: this.crypto.stringifyKeypair().publicKey,\n        };\n        return info;\n    }\n    connect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            this.timeLog = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---enter->\", this.timeLog);\n            let lastConnectId = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            //1. generate topic & jwt\n            var topic = this.currentTopic;\n            log.logDebug(`generate topic token: ${topic}`);\n            // crypto keypair\n            if (fromRestore) {\n                if (typeof lastConnectId !== 'undefined' && lastConnectId !== null) {\n                    log.logDebug(`read last connect id: ${lastConnectId}`);\n                    topic = lastConnectId.content;\n                }\n                var cachedSenderPublicKey = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                if (cachedSenderPublicKey) {\n                    this.connectedWalletPK = cachedSenderPublicKey.content;\n                    (0, log_1.logDebug)(`connectionManager connect() this.connectedWalletPK : ${this.connectedWalletPK}`);\n                }\n            }\n            if (fromRestore) {\n                // recovery from cache\n                const keyPairInfo = this.getCachedCryptoKeyPair();\n                if (keyPairInfo) {\n                    this.crypto = new crypto_1.SessionCrypto(keyPairInfo);\n                }\n            }\n            log.logDebug(`use crypto client id: ${this.crypto.stringifyKeypair().publicKey}`);\n            // cache topic\n            this.connectStorage.saveContent(topic, storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            var jwtToken = yield this.makeJWT(topic);\n            log.logDebug(`generate jwt token: ${jwtToken}`);\n            this.connectStorage.saveContent(jwtToken, 'jwt');\n            return new Promise((resolve, reject) => {\n                // 1. when websocket opened\n                this.connector.onOpen(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug(`1. connector on open`);\n                    const timeOne = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---open->\", timeOne - this.timeLog);\n                    //2. send jwt to login\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when login');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // throw error\n                            reject(error);\n                        }\n                        //3. send subscribe\n                        this.refreshPackageId();\n                        this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                            // ack\n                            if (rsp && rsp.error) {\n                                log.logError('failed when subscribe');\n                                yield this.connector.disconnect();\n                                var error = new Error();\n                                error.message = rsp.error.message;\n                                error.name = rsp.error.code.toString();\n                                // throw error\n                                reject(error);\n                            }\n                            this.refreshPackageId();\n                            log.logDebug(`4. subscribe callback then send fetch: ${this.packageId}`);\n                            const timeF = new Date().getTime();\n                            (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n                            // 4. fetch messages\n                            yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                            resolve();\n                        }));\n                        log.logDebug(`3. login callback then send subscribe: ${this.packageId}`);\n                        const timeTh = new Date().getTime();\n                        (0, log_1.logDebug)(\"ConnectTime---login callback->\", timeTh - this.timeLog);\n                        yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                            log.logDebug('CONNECT: reconnect before send');\n                            yield this.connector.connect()\n                                .catch((err) => {\n                                (0, log_1.logDebug)('ConnectionManager connect error', err);\n                                reject(err);\n                            });\n                        }), {\n                            id: this.packageId.toString(),\n                            jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                            method: commands_1.CONNECT_METHOD_SUB,\n                            params: {\n                                topic: topic\n                            }\n                        });\n                    }));\n                    log.logDebug(`2. login called`);\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        yield this.connector.connect()\n                            .catch((err) => {\n                            (0, log_1.logDebug)('ConnectionManager connect error', err);\n                            reject(err);\n                        });\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_LOGIN,\n                        params: {\n                            token: jwtToken\n                        }\n                    });\n                    // 4. listen when dapp back to front, receive wallet public key\n                    this.connector.addPackageParse((event) => {\n                        var _a;\n                        log.logDebug(`connect: parse package`);\n                        log.logDebug(event);\n                        if (!(\"params\" in event) || !(\"data\" in event[\"params\"])) {\n                            this.parsePackage(event, true);\n                            return;\n                        }\n                        let rawMsg = (_a = event.params.data) === null || _a === void 0 ? void 0 : _a.message;\n                        if (typeof rawMsg !== 'undefined') {\n                            rawMsg = rawMsg.replace(/'/g, '\"');\n                            let parsedMessage = (0, safejson_1.safeJsonParse)(rawMsg);\n                            if (typeof parsedMessage !== 'string' && \"clientId\" in parsedMessage && parsedMessage.clientId && parsedMessage.clientId.length > 0) {\n                                this.connectedWalletPK = parsedMessage.clientId;\n                                log.logDebug(`this.connectedWalletPK  addPackageParse   ${this.connectedWalletPK}`);\n                                // exchange sender public key\n                                // cache wallet public key\n                                this.connectStorage.saveContent(this.connectedWalletPK, storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                                // cache crypto keypair\n                                this.saveCryptoKeyPair(this.crypto.stringifyKeypair());\n                            }\n                        }\n                        // ignore receive echo\n                        this.parsePackage(event, event.method === commands_1.CONNECT_METHOD_RECEIVE);\n                    });\n                }));\n                this.connector.connect().catch((err) => {\n                    (0, log_1.logDebug)('ConnectionManager connect error', err);\n                    reject(err);\n                });\n            });\n        });\n    }\n    disconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            yield this.connector.disconnect();\n            //clean cached topic\n            //如果是恢复连接，就不清理解密public key\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            if (!fromRestore) {\n                this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                this.connectedWalletPK = '';\n                (0, log_1.logDebug)(`connectionManager disconnect() this.connectedWalletPK : ${this.connectedWalletPK}`);\n            }\n        });\n    }\n    addListener(event, success, fail) {\n        this.connector.addListener((0, safejson_1.safeJsonStringify)(event), (rawMsg) => {\n            rawMsg = rawMsg.replace(/'/g, '\"');\n            log.logDebug(`addListener ===> ${rawMsg}`);\n            if (typeof rawMsg !== 'undefined') {\n                var msgObj = (0, safejson_1.safeJsonParse)(rawMsg);\n                var msg = msgObj.message;\n                if (msgObj.clientId && msgObj.clientId.length > 0) {\n                    this.connectedWalletPK = msgObj.clientId;\n                    this.connectStorage.saveContent(this.connectedWalletPK, storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                    log.logDebug(`this.connectedWalletPK  addListener   ${this.connectedWalletPK}`);\n                    log.logDebug(`this.cryptoKey  addListener   ${(0, utils_1.toHexString)(this.crypto.keyPair.publicKey)}`);\n                    // cache crypto keypair\n                    this.saveCryptoKeyPair(this.crypto.stringifyKeypair());\n                }\n                var result = this.crypto.decrypt(msg, this.connectedWalletPK);\n                log.logDebug(`addListener ===> ${result}`);\n                return result;\n            }\n            return undefined;\n        }, success, fail);\n    }\n    sendRaw(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.logDebug(`message send =====> ${msg}`);\n            let message = msg;\n            log.logDebug(`message send =====encrypt message.length>>>> ${message.length}`);\n            // only one topic\n            let topic = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`message send =====topic>>>> ${topic === null || topic === void 0 ? void 0 : topic.content}`);\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                method: commands_1.CONNECT_METHOD_PUBLISH,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                params: {\n                    message: {\n                        topic: topic === null || topic === void 0 ? void 0 : topic.content,\n                        message: message,\n                        ttl: constants_1.OKXCONNECTOR_MESSAGE_TTL\n                    }\n                } // crypted\n            };\n            this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                // ack\n                if (rsp && rsp.error) {\n                    log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                }\n                else if (rsp && !rsp.error) {\n                    log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                }\n            }));\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n            return this.packageId;\n        });\n    }\n    send(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // make send msg payload\n            log.logDebug(`message send =====> ${msg}`);\n            if (!this.isWalletPKReady()) {\n                // channel not ready\n                throw new Error('connection not finish');\n            }\n            let message = this.crypto.encrypt(msg, this.connectedWalletPK);\n            log.logDebug(`message send =====encrypt message.length>>>> ${message.length}`);\n            // only one topic\n            let topic = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`message send =====topic>>>> ${topic === null || topic === void 0 ? void 0 : topic.content}`);\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                method: commands_1.CONNECT_METHOD_PUBLISH,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                params: {\n                    message: {\n                        topic: topic === null || topic === void 0 ? void 0 : topic.content,\n                        message: message,\n                        ttl: constants_1.OKXCONNECTOR_MESSAGE_TTL\n                    }\n                } // crypted\n            };\n            this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                // ack\n                if (rsp && rsp.error) {\n                    log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                }\n                else if (rsp && !rsp.error) {\n                    log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                }\n            }));\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n            return this.packageId;\n        });\n    }\n    sendACK(msgId_1, success_1) {\n        return __awaiter(this, arguments, void 0, function* (msgId, success, reason = undefined) {\n            if (success === true) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    result: true\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n            else if (reason) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    error: {\n                        code: reason.code, //int\n                        message: reason.message\n                    }\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    // send receive\n    sendReceive(msgId, messageId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECEIVE,\n                params: {\n                    data: {\n                        messageId: messageId,\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendConnectSessionInfo(msgId, messageId, topic, params) {\n        return __awaiter(this, void 0, void 0, function* () {\n        });\n    }\n    // send receive\n    // 1. fetch all \n    // 2. send back receive\n    // 3. check has more, if so, repeat from 1st step\n    sendFetchAndConsumeMessages(msgId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(msgId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic == topic) {\n                                let messageId = msg.messageId;\n                                yield this.connector.getMsgPayloadFromHistory(msg);\n                                // send receive command to relay server\n                                this.refreshPackageId();\n                                yield this.sendReceive(this.packageId.toString(), messageId, topic);\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_FETCHMSG,\n                params: {\n                    data: {\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    cleanCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.connectStorage.clearCache();\n        });\n    }\n    saveSessionContent(key, data) {\n        if (!data) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(data);\n        this.connectStorage.encryptStoreMsg(jsonData, storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n    }\n    getSessionContent(key) {\n        let jsonStr = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        if (jsonStr) {\n            let object = (0, safejson_1.safeJsonParse)(jsonStr);\n            return object;\n        }\n        return undefined;\n    }\n    getCurrentConnectionReady() {\n        return this.isWalletPKReady();\n    }\n}\nexports.ConnectionManager = ConnectionManager;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectorState = exports.CONNECT_JSONRPC_VER = exports.OKXCONNECTOR_MESSAGE_TTL = exports.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE = exports.OKXCONNECTOR_WS_URL_LIST = exports.OKXCONNECTOR_WS_URL_IDX_KEY = exports.OKXCONNECTOR_WS_URL_2 = exports.OKXCONNECTOR_WS_URL_1 = exports.EVENT_EMITTER_MAX_LISTENERS = void 0;\nexports.EVENT_EMITTER_MAX_LISTENERS = 10;\nexports.OKXCONNECTOR_WS_URL_1 = \"wss://wsdexpri.okx.com/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_2 = \"wss://wsdexpri.coinall.ltd/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_IDX_KEY = \"wuik\";\nexports.OKXCONNECTOR_WS_URL_LIST = [\n    exports.OKXCONNECTOR_WS_URL_1,\n    exports.OKXCONNECTOR_WS_URL_2,\n];\nexports.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE = {\n    TIME_OUT: 3990,\n    CANCELED: 3991,\n    FINISHED: 3992,\n};\nexports.OKXCONNECTOR_MESSAGE_TTL = 300000;\n// --------------- JSON RPC ---------------\nexports.CONNECT_JSONRPC_VER = \"2.0\";\nexports.ConnectorState = {\n    InitState: 0,\n    Connecting: 1,\n    Connected: 2,\n    Disconnected: 3,\n    OnError: 4,\n};\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Engine = void 0;\nconst safejson_1 = require(\"../utils/safejson\");\nconst log_1 = require(\"../utils/log\");\nconst protocol_1 = require(\"../protocol\");\n// import {standardDeeplink, tonConnectSdkVersion} from \"../../ton/tonsdk/constants/version\";\nconst utils_1 = require(\"../utils\");\nconst utils_2 = require(\"../utils\");\nconst sessionUtils_1 = require(\"./sessionUtils\");\nconst url_1 = require(\"../utils/url\");\nclass Engine {\n    constructor(connectionManager) {\n        this.pendingRequests = new Map();\n        this.disconnectListener = [];\n        this.connectionManager = connectionManager;\n        this.connectionManager.addListener(\"sdk_response\", (event, msg) => {\n            var jsonResponse = (0, safejson_1.safeJsonParse)(msg);\n            (0, log_1.logDebug)(`Engine ==>> addListener ==> success ==> ${jsonResponse}`);\n            this.handleResponse(event, jsonResponse);\n        }, function () {\n        });\n    }\n    addDisconnectListener(disconnecter) {\n        this.disconnectListener.push(disconnecter);\n    }\n    disconnect() {\n        (0, log_1.logDebug)('Engine ==>> disconnect');\n        this.pendingRequests.clear();\n    }\n    getRequestId() {\n        const requestId = Date.now().toString();\n        (0, log_1.logDebug)('Engine ==>> getRequestId ==>', requestId);\n        return requestId;\n    }\n    bindRequestForPromise(requestId, resolve) {\n        this.pendingRequests.set(requestId, resolve);\n    }\n    send(request, requestAnswer, option) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('Engine ==>> send  request==>', JSON.stringify(request));\n            const requestId = this.getRequestId();\n            try {\n                let packageId = yield this.connectionManager.send(JSON.stringify(Object.assign(Object.assign({}, request), { requestId: requestId })));\n                this.connectionManager.events.once(packageId.toString(), (event) => {\n                    var _a;\n                    (0, log_1.logDebug)(`Engine ==> send => onAck => ${(0, safejson_1.safeJsonStringify)(event)}`);\n                    if (event && event.result) {\n                        (_a = requestAnswer.onAck) === null || _a === void 0 ? void 0 : _a.call(requestAnswer);\n                    }\n                });\n                if (requestAnswer.resolve) {\n                    this.bindRequestForPromise(requestId, requestAnswer.resolve);\n                }\n            }\n            catch (e) {\n                return Promise.reject(e);\n            }\n        });\n    }\n    sendSession(sessionInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('[Connect] sendSession called:', sessionInfo);\n            const requestId = this.getRequestId();\n            let request = {\n                method: 'session_info',\n                params: { sessionInfo: sessionInfo }\n            };\n            yield this.connectionManager.sendRaw(JSON.stringify(Object.assign(Object.assign({}, request), { requestId: requestId })));\n            // try {\n            //     let packageId = await callForSuccess(() =>\n            //         , option)\n            //     this.connectionManager.events.once(packageId.toString(),(event)=>{\n            //         logDebug(`Engine ==> send => onAck => ${safeJsonStringify(event)}`)\n            //         if (event && event.result){\n            //             requestAnswer.onAck?.()\n            //         }\n            //     })\n            //     if (requestAnswer.resolve){\n            //         this.bindRequestForPromise(requestId, requestAnswer.resolve)\n            //     }\n            // }catch (e) {\n            //     return Promise.reject(e)\n            // }\n        });\n    }\n    handleResponse(event, response) {\n        (0, log_1.logDebug)(`Engine ==>> handleResponse_1  ======>response: ${(0, safejson_1.safeJsonStringify)(response)}`, event);\n        if (\"requestId\" in response) {\n            (0, log_1.logDebug)(\"Engine ==>> handleResponse_2  ===> in response\");\n            let requestId = response.requestId;\n            const resolve = this.pendingRequests.get(requestId);\n            if (resolve) {\n                (0, log_1.logDebug)(\"Engine ==>> handleResponse_3  ===> find resolve:\", resolve);\n                resolve(response);\n                // 从pendingRequests中删除这个Promise\n                this.pendingRequests.delete(requestId);\n            }\n            else {\n                (0, log_1.logDebug)(\"Engine ==>> handleResponse_3  ===> not find resolve:\");\n                if (response.method === \"disconnect\") {\n                    this.disconnectListener.forEach(listener => listener());\n                    this.disconnectListener = [];\n                    this.disconnect();\n                }\n            }\n        }\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.restoreConnect(sessionInfo.topic));\n            onConnectResult(sessionInfo);\n        });\n    }\n    conect(request, sessionConfig, onConnectResult) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b;\n            const connectInfo = this.connectionManager.getConnectInfo();\n            const requestId = this.getRequestId();\n            let openUniversalLink = (_a = sessionConfig.openUniversalUrl) !== null && _a !== void 0 ? _a : false;\n            const connectRequest = {\n                protocolVer: Number(protocol_1.tonConnectSdkVersion),\n                topic: connectInfo.channelId,\n                clientId: connectInfo.clientId,\n                requestId: requestId,\n                dAppInfo: sessionConfig.dappInfo,\n                requests: request,\n            };\n            const connectRequestStr = JSON.stringify(connectRequest);\n            const utf8Array = new TextEncoder().encode(connectRequestStr);\n            const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n            const deeplinkUrl = `${protocol_1.standardDeeplink}?param=${base64Encoded}`;\n            (0, log_1.logDebug)('engine ==>> connect ==>>deeplinkUrl:', deeplinkUrl);\n            const isIOS = (0, utils_2.isIos)();\n            (0, log_1.logDebug)(`engine ==>> connect ==>>isIOS: ${isIOS}   openUniversalLink: ${openUniversalLink}`);\n            if (isIOS && openUniversalLink) {\n                (0, log_1.logDebug)('bridge-provider ==>> connect_3');\n                (0, utils_1.openOKXDeeplinkWithFallback)(deeplinkUrl);\n            }\n            yield ((_b = this.connectionManager) === null || _b === void 0 ? void 0 : _b.disconnect(false));\n            this.bindRequestForPromise(requestId, (response) => {\n                let session = this.onConnect(response, sessionConfig, connectInfo.channelId);\n                onConnectResult(session, response);\n            });\n            try {\n                yield this.connectionManager.connect();\n            }\n            catch (e) {\n                (0, log_1.logDebug)('Engine conect error', e);\n                throw e;\n            }\n            if (!isIOS && openUniversalLink) {\n                (0, log_1.logDebug)('bridge-provider ==>> connect_4');\n                (0, utils_1.openOKXDeeplinkWithFallback)(deeplinkUrl);\n            }\n            return {\n                connectInfo: connectInfo,\n                deeplinkUrl: (0, utils_1.getUniversalLink)(deeplinkUrl)\n            };\n        });\n    }\n    onConnect(connectResponse, sessionConfig, topic) {\n        if (connectResponse.method == \"connect\") {\n            let namespaces = (0, sessionUtils_1.buildNameSpacesByConnectResponse)(connectResponse);\n            if (namespaces) {\n                let session = {\n                    topic: topic,\n                    sessionConfig: sessionConfig,\n                    namespaces: namespaces\n                };\n                return session;\n            }\n        }\n        return null;\n    }\n    universalConnect(request, sessionConfig, connectInfoAndUrl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b, _c, _d;\n                try {\n                    (0, log_1.logDebug)(\"engine universalConnect request :\", JSON.stringify(request));\n                    (0, log_1.logDebug)(\"engine universalConnect sessionConfig :\", JSON.stringify(sessionConfig));\n                    let tonRequest = [];\n                    let universalRequest = [];\n                    request.forEach((item) => {\n                        let name = item.name;\n                        if (name.startsWith(\"requestAccounts\")) {\n                            universalRequest.push(item);\n                        }\n                        else if (name.startsWith(\"ton\")) {\n                            tonRequest.push(item);\n                        }\n                    });\n                    (0, log_1.logDebug)(\"engine universalConnect tonRequest :\", JSON.stringify(tonRequest));\n                    (0, log_1.logDebug)(\"engine universalConnect universalRequest :\", JSON.stringify(universalRequest));\n                    const connectInfo = this.connectionManager.getConnectInfo();\n                    const requestId = this.getRequestId();\n                    let openUniversalLink = (_a = sessionConfig.openUniversalUrl) !== null && _a !== void 0 ? _a : false;\n                    const universalConnectRequest = {\n                        protocolVer: Number(protocol_1.tonConnectSdkVersion),\n                        topic: connectInfo.channelId,\n                        clientId: connectInfo.clientId,\n                        requestId: requestId,\n                        dAppInfo: sessionConfig.dappInfo,\n                        requests: universalRequest,\n                    };\n                    const base64Encoded = (0, url_1.encodeConnectParams)(universalConnectRequest);\n                    universalConnectRequest.redirect = (_b = sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect) !== null && _b !== void 0 ? _b : \"none\";\n                    const tonConnectRequest = {\n                        protocolVer: Number(protocol_1.tonConnectSdkVersion),\n                        topic: connectInfo.channelId,\n                        clientId: connectInfo.clientId,\n                        requestId: requestId,\n                        dAppInfo: sessionConfig.dappInfo,\n                        requests: tonRequest,\n                        redirect: (_c = sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect) !== null && _c !== void 0 ? _c : \"none\"\n                    };\n                    let isFromTonSDK = false;\n                    if (tonRequest.length > 0) { //from tonsdk\n                        isFromTonSDK = true;\n                    }\n                    let defaultConnectRequest = isFromTonSDK ? tonConnectRequest : universalConnectRequest;\n                    (0, log_1.logDebug)('engine universalConnect ==>>defaultConnectRequest:', isFromTonSDK, JSON.stringify(defaultConnectRequest));\n                    var deeplinkUrl = \"\";\n                    // open app wallet\n                    if (openUniversalLink) {\n                        const base64Encoded = (0, url_1.encodeConnectParams)(defaultConnectRequest);\n                        deeplinkUrl = `${protocol_1.standardDeeplink}?param=${base64Encoded}`;\n                    }\n                    (0, log_1.logDebug)('engine universalConnect ==>>deeplinkUrl:', deeplinkUrl);\n                    const isIOS = (0, utils_2.isIos)();\n                    if (isIOS && openUniversalLink) {\n                        (0, log_1.logDebug)(`engine universalConnect ==>>isIOS: ${isIOS}   openUniversalLink: ${openUniversalLink}`);\n                        (0, utils_1.openOKXDeeplinkWithFallback)(deeplinkUrl);\n                    }\n                    yield ((_d = this.connectionManager) === null || _d === void 0 ? void 0 : _d.disconnect(false));\n                    this.bindRequestForPromise(requestId, (response) => {\n                        var _a, _b;\n                        try {\n                            let connectResponse = response;\n                            if (connectResponse.method == \"connect\") {\n                                (0, log_1.logDebug)(\"engin  universalConnect success connectResponse:>>>\", JSON.stringify(connectResponse));\n                                let namespaces = (0, sessionUtils_1.buildNameSpacesByConnectResponse)(connectResponse);\n                                if (namespaces) {\n                                    let session = {\n                                        topic: connectInfo.channelId,\n                                        sessionConfig: sessionConfig,\n                                        namespaces: namespaces,\n                                        wallet: Object.assign({}, (_a = connectResponse.payload) === null || _a === void 0 ? void 0 : _a.wallet),\n                                    };\n                                    let methodsResponse = connectResponse.payload.responses.find(item => item.name === 'requestAccounts');\n                                    if (methodsResponse && methodsResponse.connectRequestMethods) {\n                                        session.connectMethodsReply = methodsResponse.connectRequestMethods;\n                                    }\n                                    (0, log_1.logDebug)(\"engin  universalConnect success session:>>>\", JSON.stringify(session));\n                                    resolve(session);\n                                }\n                                else {\n                                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n                                }\n                            }\n                            else if (connectResponse.method == \"connect_error\" && ((_b = connectResponse.payload) === null || _b === void 0 ? void 0 : _b.code)) {\n                                throw new protocol_1.OKXConnectError(connectResponse.payload.code);\n                            }\n                        }\n                        catch (e) {\n                            reject(e);\n                        }\n                    });\n                    try {\n                        yield this.connectionManager.connect();\n                    }\n                    catch (e) {\n                        (0, log_1.logDebug)('Engine universalConnect error', e);\n                        throw e;\n                    }\n                    if (!isIOS && openUniversalLink) {\n                        (0, utils_1.openOKXDeeplinkWithFallback)(deeplinkUrl);\n                    }\n                    (0, log_1.logDebug)('engin  universalConnect ==>> connectInfoAndUrl:', connectInfoAndUrl);\n                    this.sendSession(base64Encoded);\n                    if (connectInfoAndUrl) {\n                        const info = {\n                            connectRequest: universalConnectRequest,\n                            redirect: sessionConfig.redirect,\n                            tmaReturnUrl: sessionConfig.tmaReturnUrl,\n                        };\n                        if (isFromTonSDK) {\n                            info.tonConnectRequest = tonConnectRequest;\n                        }\n                        (0, log_1.logDebug)(\"universalConnect connectInfoAndUrl info :\", JSON.stringify(info));\n                        connectInfoAndUrl(info);\n                    }\n                }\n                catch (error) {\n                    (0, log_1.logDebug)(\"Engine universalConnect catch error\", error);\n                    reject(error);\n                }\n            }));\n        });\n    }\n}\nexports.Engine = Engine;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Storage = exports.Engine = exports.WalletConnectionManager = exports.ConnectionManager = exports.OKXWalletConnector = void 0;\nvar connect_1 = require(\"./connect\");\nObject.defineProperty(exports, \"OKXWalletConnector\", { enumerable: true, get: function () { return connect_1.OKXWalletConnector; } });\nvar connectionManager_1 = require(\"./connectionManager\");\nObject.defineProperty(exports, \"ConnectionManager\", { enumerable: true, get: function () { return connectionManager_1.ConnectionManager; } });\nvar walletConnectionManager_1 = require(\"./walletConnectionManager\");\nObject.defineProperty(exports, \"WalletConnectionManager\", { enumerable: true, get: function () { return walletConnectionManager_1.WalletConnectionManager; } });\nvar engine_1 = require(\"./engine\");\nObject.defineProperty(exports, \"Engine\", { enumerable: true, get: function () { return engine_1.Engine; } });\nvar storage_1 = require(\"./storage\");\nObject.defineProperty(exports, \"Storage\", { enumerable: true, get: function () { return storage_1.Storage; } });\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MULTICODEC_ED25519_LENGTH = exports.MULTICODEC_ED25519_HEADER = exports.MULTICODEC_ED25519_BASE = exports.MULTICODEC_ED25519_ENCODING = exports.DID_METHOD = exports.DID_PREFIX = exports.DID_DELIMITER = exports.KEY_PAIR_SEED_LENGTH = exports.DATA_ENCODING = exports.JSON_ENCODING = exports.JWT_ENCODING = exports.JWT_DELIMITER = exports.JWT_IRIDIUM_TYP = exports.JWT_IRIDIUM_ALG = exports.JWTHeaderType = void 0;\nexports.generateKeyPair = generateKeyPair;\nexports.decodeJSON = decodeJSON;\nexports.encodeJSON = encodeJSON;\nexports.encodeIss = encodeIss;\nexports.decodeIss = decodeIss;\nexports.encodeSig = encodeSig;\nexports.decodeSig = decodeSig;\nexports.encodeData = encodeData;\nexports.decodeData = decodeData;\nexports.encodeJWT = encodeJWT;\nexports.decodeJWT = decodeJWT;\nexports.signJWT = signJWT;\nexports.verifyJWT = verifyJWT;\nconst ed25519 = __importStar(require(\"@stablelib/ed25519\"));\nconst safejson_1 = require(\"../utils/safejson\");\nconst utils_1 = require(\"../utils/utils\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst log = __importStar(require(\"../utils/log\"));\nconst stringUtils_1 = require(\"../utils/stringUtils\");\nexports.JWTHeaderType = \"dapp\";\nexports.JWT_IRIDIUM_ALG = \"EdDSA\";\nexports.JWT_IRIDIUM_TYP = \"JWT\";\nexports.JWT_DELIMITER = \".\";\nexports.JWT_ENCODING = \"base64url\";\nexports.JSON_ENCODING = \"utf8\";\nexports.DATA_ENCODING = \"utf8\";\nexports.KEY_PAIR_SEED_LENGTH = 32;\nexports.DID_DELIMITER = \":\";\nexports.DID_PREFIX = \"did\";\nexports.DID_METHOD = \"key\";\nexports.MULTICODEC_ED25519_ENCODING = \"base58btc\";\nexports.MULTICODEC_ED25519_BASE = \"z\";\nexports.MULTICODEC_ED25519_HEADER = \"K36\";\nexports.MULTICODEC_ED25519_LENGTH = 32;\nfunction generateKeyPair() {\n    // let local_seed = randomBytes(KEY_PAIR_SEED_LENGTH)\n    // return ed25519.generateKeyPairFromSeed(local_seed);\n    return tweetnacl_1.default.sign.keyPair();\n}\nfunction decodeJSON(str) {\n    return (0, safejson_1.safeJsonParse)((0, stringUtils_1.okxtoString)((0, stringUtils_1.okxfromString)(str, exports.JWT_ENCODING), exports.JSON_ENCODING));\n}\nfunction encodeJSON(val) {\n    return (0, stringUtils_1.okxtoString)((0, stringUtils_1.okxfromString)((0, safejson_1.safeJsonStringify)(val), exports.JSON_ENCODING), exports.JWT_ENCODING);\n}\nfunction encodeIss(publicKey) {\n    log.logDebug(`publicKey: ${(0, utils_1.toHexString)(publicKey)}`);\n    var publicKeyStr = (0, stringUtils_1.okxtoString)(publicKey, exports.MULTICODEC_ED25519_ENCODING);\n    return [exports.DID_PREFIX, exports.DID_METHOD, publicKeyStr].join(exports.DID_DELIMITER);\n}\nfunction decodeIss(issuer) {\n    const [prefix, method, multicodec] = issuer.split(exports.DID_DELIMITER);\n    if (prefix !== exports.DID_PREFIX || method !== exports.DID_METHOD) {\n        throw new Error(`Issuer must be a DID with method \"key\"`);\n    }\n    if (multicodec === undefined) {\n        throw new Error('multicodec is undefined');\n    }\n    const publicKey = (0, stringUtils_1.okxfromString)(multicodec, exports.MULTICODEC_ED25519_ENCODING);\n    if (publicKey === undefined || publicKey.length !== exports.MULTICODEC_ED25519_LENGTH) {\n        throw new Error(`Issuer must be a public key with length 32 bytes`);\n    }\n    return publicKey;\n}\n// ---------- Signature ----------------------------------------------- //\nfunction encodeSig(bytes) {\n    return (0, stringUtils_1.okxtoString)(bytes, exports.JWT_ENCODING);\n}\nfunction decodeSig(encoded) {\n    return (0, stringUtils_1.okxfromString)(encoded, exports.JWT_ENCODING);\n}\n// ---------- Data ----------------------------------------------- //\nfunction encodeData(params) {\n    return (0, stringUtils_1.okxfromString)([encodeJSON(params.header), encodeJSON(params.payload)].join(exports.JWT_DELIMITER), exports.DATA_ENCODING);\n}\nfunction decodeData(data) {\n    var _a, _b;\n    const params = (0, stringUtils_1.okxtoString)(data, exports.DATA_ENCODING).split(exports.JWT_DELIMITER);\n    const header = decodeJSON((_a = params[0]) !== null && _a !== void 0 ? _a : '{}');\n    const payload = decodeJSON((_b = params[1]) !== null && _b !== void 0 ? _b : '{}');\n    return { header, payload };\n}\n// ---------- JWT ----------------------------------------------- //\nfunction encodeJWT(params) {\n    return [encodeJSON(params.header), encodeJSON(params.payload), encodeSig(params.signature)].join(exports.JWT_DELIMITER);\n}\nfunction decodeJWT(jwt) {\n    var _a, _b, _c;\n    const params = jwt.split(exports.JWT_DELIMITER);\n    const header = decodeJSON((_a = params[0]) !== null && _a !== void 0 ? _a : '{}');\n    const payload = decodeJSON((_b = params[1]) !== null && _b !== void 0 ? _b : '{}');\n    const signature = decodeSig((_c = params[2]) !== null && _c !== void 0 ? _c : '{}');\n    const data = (0, stringUtils_1.okxfromString)(params.slice(0, 2).join(exports.JWT_DELIMITER), exports.DATA_ENCODING);\n    return { header, payload, signature, data };\n}\nfunction signJWT(sub_1, aud_1, ttl_1, keyPair_1) {\n    return __awaiter(this, arguments, void 0, function* (sub, aud, ttl, keyPair, iat = Math.floor(Date.now())) {\n        const header = { alg: exports.JWT_IRIDIUM_ALG, typ: exports.JWT_IRIDIUM_TYP };\n        const iss = encodeIss(keyPair.publicKey);\n        const exp = iat + ttl;\n        const act = \"authenticate user\";\n        const payload = { iss, sub, aud, act, iat, exp };\n        const data = encodeData({ header, payload });\n        // const signature = ed25519.sign(keyPair.secretKey, data);\n        log.logDebug(`get sec kp: ${keyPair.secretKey} {${keyPair.secretKey.length}}`);\n        const signature = tweetnacl_1.default.sign.detached(data, keyPair.secretKey);\n        return encodeJWT({ header, payload, signature });\n    });\n}\nfunction verifyJWT(jwt) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { header, payload, data, signature } = decodeJWT(jwt);\n        if (header.alg !== exports.JWT_IRIDIUM_ALG || header.typ !== exports.JWT_IRIDIUM_TYP) {\n            throw new Error(\"JWT must use EdDSA algorithm\");\n        }\n        const publicKey = decodeIss(payload.iss);\n        return ed25519.verify(publicKey, data, signature);\n    });\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCONNECTOR_JWT_TTL = exports.OKXCONNECTOR_JWT_WALLET_SIDE = exports.OKXCONNECTOR_JWT_SIDE = void 0;\nexports.OKXCONNECTOR_JWT_SIDE = \"wallet\";\nexports.OKXCONNECTOR_JWT_WALLET_SIDE = \"dapp\";\nexports.OKXCONNECTOR_JWT_TTL = 86400000;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.buildNameSpacesByConnectResponse = buildNameSpacesByConnectResponse;\nexports.buildRequestAccountNameSpacesByConnectResponse = buildRequestAccountNameSpacesByConnectResponse;\nconst log_1 = require(\"../utils/log\");\nfunction buildNameSpacesByConnectResponse(connectResponse) {\n    let requestAccountNameSpaces = buildRequestAccountNameSpacesByConnectResponse(connectResponse);\n    return requestAccountNameSpaces;\n}\nfunction buildRequestAccountNameSpacesByConnectResponse(connectResponse) {\n    let result = {};\n    (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start connectResponse>>', JSON.stringify(connectResponse));\n    let universalResponse = connectResponse.payload.responses.find(item => item.name === 'requestAccounts');\n    const tonAddress = connectResponse.payload.responses.find(item => item.name === 'ton_addr');\n    const tonProof = connectResponse.payload.responses.find(item => item.name === 'ton_proof');\n    if (tonAddress && !universalResponse) { //adapt tonsdk\n        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse adapt ton data >>');\n        let address = tonAddress.address;\n        address = 'ton:' + tonAddress.network + \":\" + address;\n        let data = {\n            ton_addr: tonAddress\n        };\n        if (tonProof) {\n            data.ton_proof = tonProof;\n        }\n        universalResponse = {\n            name: \"requestAccounts\",\n            accounts: [{\n                    namespace: 'ton',\n                    addresses: [address],\n                    methods: ['ton_sendTransaction'],\n                    extra: {},\n                    data: data,\n                }]\n        };\n    }\n    (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse end universalResponse>>>', JSON.stringify(universalResponse));\n    universalResponse.accounts.forEach(item => {\n        var chains = [];\n        var accounts = [];\n        item.addresses.forEach(addressItem => {\n            var addressArr = addressItem.split(\":\");\n            (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse addressArr>>', addressArr.length);\n            if (addressArr.length >= 3) {\n                let chain = addressArr.slice(0, 2).join(\":\");\n                chains.push(chain);\n                accounts.push(addressItem);\n                (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse chain:>>', chain, \"addressItem:\", addressItem);\n            }\n        });\n        if (item.data && item.data.ton_addr) {\n            item.data.ton_addr.name = 'ton_addr';\n        }\n        if (item.data && item.data.ton_proof) {\n            item.data.ton_proof.name = 'ton_proof';\n        }\n        result[item.namespace] = {\n            chains: chains,\n            accounts: accounts,\n            methods: item.methods,\n            extra: item.extra,\n            payload: item.data\n        };\n        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse result>>', JSON.stringify(result));\n    });\n    return result;\n}\n/*export function buildTonNameSpaceByConnectResponse(connectResponse: ConnectResponseSuccess): Namespaces | undefined {\n    const tonAddrItem: TonAddressItemReply = connectResponse.payload.responses.find(\n        item => item.name === 'ton_addr'\n    ) as TonAddressItemReply;\n\n    const tonProfItem: TonProofItemReply = connectResponse.payload.responses.find(\n        item => item.name === 'ton_proof'\n    ) as TonProofItemReply;\n\n    if (!tonAddrItem) {\n        return undefined\n    }\n\n    return {\n        NameSpaceKeyTON: {\n            chains: [tonAddrItem.network],\n            accounts: [],\n            methods: connectResponse.payload.wallet.features?.ton,\n            payload: {\n                tonAccount: {\n                    address: tonAddrItem.address,\n                    chain: tonAddrItem.network,\n                    walletStateInit: tonAddrItem.walletStateInit,\n                    publicKey: tonAddrItem.publicKey\n                },\n                tonProof: tonProfItem\n            }\n        }\n    }\n}*/\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Storage = void 0;\nconst storageconstants_1 = require(\"./storageconstants\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst utils_1 = require(\"../utils/utils\");\nconst utils_2 = require(\"../utils\");\nconst log = __importStar(require(\"../utils/log\"));\nconst utils_3 = require(\"../utils\");\nconst crypto_js_1 = require(\"crypto-js\");\nclass Storage {\n    constructor(subKey) {\n        // 1. load data from local storage\n        const localStorage = (0, utils_1.resolveLocalStorage)();\n        this.storeKey = '';\n        this.cipherIV = '';\n        this.subKey = subKey;\n        log.logDebug('--------get current local storage --------');\n        log.logDebug(localStorage);\n        const cacheStr = localStorage.getItem(Storage.cacheKey + subKey);\n        if (typeof cacheStr === \"undefined\" || cacheStr === null) {\n            log.logDebug(\"with no cache\");\n            this.cache = {};\n            return;\n        }\n        log.logDebug(cacheStr);\n        if ((cacheStr === null || cacheStr === void 0 ? void 0 : cacheStr.length) > 0) {\n            var cacheObj = (0, utils_2.safeJsonParse)(cacheStr);\n            this.cache = cacheObj;\n        }\n        log.logDebug(`get cache obj: ${this.cache}`);\n        if (typeof this.cache === 'undefined' || this.cache == null) {\n            this.cache = {};\n        }\n    }\n    saveContent(content, key, id = '-') {\n        let item = {\n            id: id,\n            timestamp: Date.now().toString(),\n            content: content\n        };\n        this.saveItem(item, key);\n    }\n    saveItem(item, key) {\n        let localKey = Storage.cacheKey + this.subKey;\n        const localStorage = (0, utils_1.resolveLocalStorage)();\n        log.logDebug(this.cache);\n        log.logDebug(`get cache obj: ${this.cache}, ${key}, ${item}`);\n        this.cache[key] = item;\n        let totalCacheStr = (0, utils_2.safeJsonStringify)(this.cache);\n        log.logDebug(`STORAGE: ${key} @ ${this.cache}`);\n        localStorage.setItem(localKey, totalCacheStr);\n    }\n    getItem(key) {\n        log.logDebug(`STORAGE >> getItem: ${key} @ ${this.cache}`);\n        return this.cache[key];\n    }\n    getCachedPBKDF2InfoKey() {\n        var _a, _b, _c, _d;\n        const pwLen = 32;\n        const saltLen = 24;\n        if (this.storeKey.length > 0 && ((_a = this.cipherIV) === null || _a === void 0 ? void 0 : _a.length) > 0) {\n            return {\n                pw: this.storeKey,\n                iv: this.cipherIV\n            };\n        }\n        let salt = (_b = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGER_CRYPTO_SALT)) === null || _b === void 0 ? void 0 : _b.content;\n        if (!salt) {\n            salt = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(saltLen));\n            this.saveContent(salt, storageconstants_1.OKXCONNECTOR_STORAGER_CRYPTO_SALT);\n        }\n        let pw = (_c = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD)) === null || _c === void 0 ? void 0 : _c.content;\n        if (!pw) {\n            pw = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(pwLen));\n            this.saveContent(pw, storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD);\n        }\n        let cipherIV = (_d = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV)) === null || _d === void 0 ? void 0 : _d.content;\n        if (!cipherIV) {\n            // let ivBuffer = Buffer.from(nacl.randomBytes(16))\n            let ivBuffer = tweetnacl_1.default.randomBytes(16);\n            cipherIV = (0, utils_1.toHexString)(ivBuffer);\n            this.saveContent(cipherIV, storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV);\n        }\n        this.cipherIV = cipherIV;\n        this.storeKey = (0, crypto_js_1.PBKDF2)(pw, salt, { iterations: 10 }).toString();\n        return {\n            pw: this.storeKey,\n            iv: this.cipherIV\n        };\n    }\n    encryptStoreMsg(msg, key) {\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg start ${Date.now()}`);\n        let storeInfo = this.getCachedPBKDF2InfoKey();\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg mid ${Date.now()}`);\n        var result = crypto_js_1.AES.encrypt(msg, storeInfo.pw).toString();\n        this.saveContent(result, key);\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg end ${Date.now()}`);\n    }\n    getAndDecrypt(key) {\n        (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt start ${Date.now()}`);\n        let item = this.getItem(key);\n        if (item && item.content) {\n            let storeInfo = this.getCachedPBKDF2InfoKey();\n            (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt mid ${Date.now()}`);\n            let result = crypto_js_1.AES.decrypt(item.content, storeInfo.pw).toString(crypto_js_1.enc.Utf8);\n            (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt end ${Date.now()}`);\n            return result;\n        }\n        return null;\n    }\n    clearCache(key = undefined) {\n        if (key === undefined) {\n            // clean all\n            this.cache = {};\n            let localKey = Storage.cacheKey + this.subKey;\n            localStorage.setItem(localKey, '');\n        }\n        else {\n            let localKey = Storage.cacheKey + this.subKey;\n            const localStorage = (0, utils_1.resolveLocalStorage)();\n            log.logDebug(this.cache);\n            this.cache[key] = null;\n            let totalCacheStr = (0, utils_2.safeJsonStringify)(this.cache);\n            log.logDebug(`STORAGE: clean key ${key} @ ${this.cache}`);\n            localStorage.setItem(localKey, totalCacheStr);\n        }\n    }\n}\nexports.Storage = Storage;\nStorage.cacheKey = 'OKXStorageKey';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCONNECTOR_STORAGE_CIPHER_METHOD = exports.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV = exports.OKXCONNECTOR_STORAGER_CRYPTO_SALT = exports.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD = exports.OKXCONNECTOR_TON_KEY = exports.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE = exports.OKXCONNECTOR_TOKEN_CACHE = exports.OKXCONNECTOR_JWT_KEY = exports.OKXCONNECTOR_SESSION_PREFIX_KEY = exports.OKXCONNECTOR_CRYPTO_KEY = exports.OKXCONNECTOR_CACHE_KEY_DAPP = exports.OKXCONNECTOR_CACHE_KEY = void 0;\nexports.OKXCONNECTOR_CACHE_KEY = \"ck\";\nexports.OKXCONNECTOR_CACHE_KEY_DAPP = \"ck_dapp\";\nexports.OKXCONNECTOR_CRYPTO_KEY = \"cck_k\";\nexports.OKXCONNECTOR_SESSION_PREFIX_KEY = \"cspk_\";\nexports.OKXCONNECTOR_JWT_KEY = \"cjk_k\";\nexports.OKXCONNECTOR_TOKEN_CACHE = \"ct\";\nexports.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE = \"csp\";\nexports.OKXCONNECTOR_TON_KEY = \"OKXStorage_ctc\";\nexports.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD = \"scp\";\nexports.OKXCONNECTOR_STORAGER_CRYPTO_SALT = \"scs\";\nexports.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV = \"scpc\";\nexports.OKXCONNECTOR_STORAGE_CIPHER_METHOD = \"aes-256-cbc\";\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletConnectionManagerEvent = exports.WalletConnectionManagerTopicInfoCacheKey = void 0;\nexports.WalletConnectionManagerTopicInfoCacheKey = \"wcmtic\";\nexports.WalletConnectionManagerEvent = {\n    RECEIVE_REQUEST: \"payload\"\n};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletConnectionManager = void 0;\nconst connect_1 = require(\"./connect\");\nconst commands_1 = require(\"./commands\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst jwtconstants_1 = require(\"./jwtconstants\");\nconst constants_1 = require(\"./constants\");\nconst walletConnectionConstants_1 = require(\"./walletConnectionConstants\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils/utils\");\nconst crypto_1 = require(\"../crypto/crypto\");\nconst jwt_1 = require(\"./jwt\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst utils_2 = require(\"../utils\");\nclass WalletConnectionManager {\n    constructor() {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.communicateEvents = new eventemitter3_1.EventEmitter();\n        log.logDebug('connect manager construct');\n        // local storage\n        this.connectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n        // this.crypto = new SessionCrypto()\n        this.jwtKeyPair = this.getCachedJWTKeyPair();\n        this.saveJWTKeyPair(this.jwtKeyPair);\n        // wss connection\n        this.connector = new connect_1.OKXWalletConnector(constants_1.OKXCONNECTOR_WS_URL_1);\n        this.packageId = Date.now();\n        // connection state\n        this.sessionCryptoInfoMap = new Map();\n        // log.logDebug(`this.connectedWalletPK  constructor   ${this.connectedWalletPK}`)\n        this.inLogin = false;\n        this.isLogined = false;\n    }\n    refreshPackageId(offset = 0) {\n        this.packageId = Date.now() + offset;\n    }\n    saveCryptoKeyPair(topicId, keyPair) {\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(keyPair);\n        // encrypt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_CRYPTO_KEY + topicId);\n    }\n    getCachedCryptoKeyPair(topicId) {\n        // decrypt kp\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_CRYPTO_KEY + topicId);\n        const content = kp;\n        if (typeof content == 'string') {\n            log.logDebug('get cached crypto key:');\n            log.logDebug(content);\n            let keyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            return keyPairInfo;\n        }\n        else {\n            this.connectStorage.clearCache();\n        }\n        return null;\n    }\n    saveJWTKeyPair(keyPair) {\n        var strkeyPair = {\n            publicKey: (0, utils_1.toHexString)(keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(keyPair.secretKey)\n        };\n        log.logDebug('save jwt kp');\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(strkeyPair);\n        log.logDebug(cacheInfo);\n        // encrypt jwt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        log.logDebug('after save jwt kp');\n    }\n    getCachedJWTKeyPair() {\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            // TODO: decrypt jwt kp\n            log.logDebug('get cached jwt kp:');\n            log.logDebug(content);\n            let strKeyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            log.logDebug('save jwt kp');\n            log.logDebug(strKeyPairInfo);\n            var keyPair = {\n                publicKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.publicKey),\n                secretKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.secretKey)\n            };\n            return keyPair;\n        }\n        else {\n            return (0, jwt_1.generateKeyPair)();\n        }\n    }\n    isTopicPublicKeyExist(topicId) {\n        log.logDebug(`isTopicPublicKeyExist  ===> ${topicId}`);\n        return this.sessionCryptoInfoMap.get(topicId);\n    }\n    makeJWT(timestampStr) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, jwt_1.signJWT)(timestampStr, jwtconstants_1.OKXCONNECTOR_JWT_WALLET_SIDE, jwtconstants_1.OKXCONNECTOR_JWT_TTL, // 24h\n            this.jwtKeyPair);\n        });\n    }\n    parseInternalMsg(internalMsg) {\n        try {\n            let internalObj = (0, safejson_1.safeJsonParse)(internalMsg);\n            let origin = internalObj['ivur-igbfft-ptjip'];\n            if (origin && origin.length > 0) {\n                let originContent = (0, utils_2.base64decode)(origin, true);\n                return originContent.toString();\n            }\n        }\n        catch (error) {\n            log.logError('parse internal msg', error);\n        }\n    }\n    parsePackage(topic_1, input_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, input, ignoreACK = false) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;\n            this.events.emit(input.id, input);\n            // emit event\n            let sessionInfo = this.sessionCryptoInfoMap.get(topic);\n            log.logDebug('get sessionInfo for decrypt topic:', topic);\n            log.logDebug('get sessionInfo for decrypt:', input.id, topic, sessionInfo, this.sessionCryptoInfoMap);\n            if (sessionInfo && input.params.data) {\n                if ((_a = input.params.data) === null || _a === void 0 ? void 0 : _a.message) {\n                    // try parse internal message\n                    if ((_b = input.params.data) === null || _b === void 0 ? void 0 : _b.isInternalData) {\n                        let inner_message = (_c = input.params.data) === null || _c === void 0 ? void 0 : _c.message;\n                        let inner_topic = (_d = input.params.data) === null || _d === void 0 ? void 0 : _d.topic;\n                        let originContent = this.parseInternalMsg(inner_message);\n                        (0, log_1.logDebug)('parse internal origin: ', originContent);\n                        if (originContent && originContent.length > 0) {\n                            this.communicateEvents.emit(\"origin\", originContent, inner_topic);\n                        }\n                    }\n                    else {\n                        // try parse message base64\n                        try {\n                            let message = (_e = input.params.data) === null || _e === void 0 ? void 0 : _e.message;\n                            if (message.trimStart().startsWith('{')) {\n                                let messageObj = (0, safejson_1.safeJsonParse)(message);\n                                if (messageObj.method) {\n                                    (0, log_1.logDebug)('<<< parse raw msg:', topic, messageObj);\n                                    this.communicateEvents.emit(topic, message);\n                                }\n                            }\n                            else {\n                                let message = sessionInfo.crypto.decryptWallet((_f = input.params.data) === null || _f === void 0 ? void 0 : _f.message, sessionInfo.dappPublicKey);\n                                (0, log_1.logDebug)('<<< receive msg:', topic, message);\n                                this.communicateEvents.emit(topic, message);\n                            }\n                        }\n                        catch (error) {\n                            let message = sessionInfo.crypto.decryptWallet((_g = input.params.data) === null || _g === void 0 ? void 0 : _g.message, sessionInfo.dappPublicKey);\n                            (0, log_1.logDebug)('<<< receive msg:', topic, message);\n                            this.communicateEvents.emit(topic, message);\n                        }\n                    }\n                }\n                else {\n                }\n            }\n            // send back ACK\n            if (!ignoreACK) {\n                yield this.sendACK(input.id, true);\n                if (topic) {\n                    let inputObj = input;\n                    if ((_j = (_h = inputObj.params) === null || _h === void 0 ? void 0 : _h.data) === null || _j === void 0 ? void 0 : _j.messageId) {\n                        this.refreshPackageId();\n                        yield this.sendReceive(this.packageId.toString(), (_l = (_k = inputObj.params) === null || _k === void 0 ? void 0 : _k.data) === null || _l === void 0 ? void 0 : _l.messageId, topic);\n                    }\n                }\n            }\n        });\n    }\n    recovrySessionInfoFromCache() {\n        // get topic ids and keys from session\n        // WalletConnectionCryptoCacheMap\n        // {[topicId]: {cryptoKeypair: {publicKey:string, secretKey:string}, dappPublicKey:clientId}}\n        let jsonStr = this.connectStorage.getAndDecrypt(walletConnectionConstants_1.WalletConnectionManagerTopicInfoCacheKey);\n        log.logDebug('get cached sessionInfos:', jsonStr);\n        if (jsonStr) {\n            let cacheMap = (0, safejson_1.safeJsonParse)(jsonStr);\n            for (let topicId in cacheMap) {\n                let topicItem = cacheMap[topicId];\n                log.logDebug('make topicItem:', topicItem);\n                let cryptoItem = {\n                    topic: topicId,\n                    crypto: new crypto_1.SessionCrypto({\n                        publicKey: topicItem.cryptoKeyPair.publicKey,\n                        secretKey: topicItem.cryptoKeyPair.secretKey\n                    }),\n                    dappPublicKey: topicItem.dappPublicKey\n                };\n                this.sessionCryptoInfoMap.set(topicId, cryptoItem);\n            }\n        }\n        log.logDebug('get cached sessionInfos map:', this.sessionCryptoInfoMap);\n    }\n    syncCacheSessionInfo() {\n        let cacheMap = {};\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            log.logDebug('for each Keys', topicId);\n            if (cryptoItem) {\n                cacheMap[topicId] = {\n                    cryptoKeyPair: cryptoItem.crypto.stringifyKeypair(),\n                    dappPublicKey: cryptoItem.dappPublicKey\n                };\n            }\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(cacheMap);\n        log.logDebug('sync cache sessionInfos:', jsonData);\n        this.connectStorage.encryptStoreMsg(jsonData, walletConnectionConstants_1.WalletConnectionManagerTopicInfoCacheKey);\n    }\n    cacheSessionInfo(topic, sessionInfo, sync = true) {\n        let dappPublicKey = sessionInfo.dappPublicKey;\n        // 1. search dapp public related topic ids\n        let duplicatedTopics = [];\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            log.logDebug('for each Keys', topicId);\n            if (cryptoItem.dappPublicKey == dappPublicKey) {\n                log.logDebug('duplicated dapp public key:', topicId, dappPublicKey);\n                duplicatedTopics.push(topicId);\n            }\n        }\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            if (duplicatedTopics.includes(topicId)) {\n                this.sessionCryptoInfoMap.delete(topicId);\n            }\n        }\n        // discard useless topics\n        log.logDebug('cleaned connect session cache:', this.sessionCryptoInfoMap);\n        // 2. remove previous connected topic ids\n        // 3. write in current topic\n        this.sessionCryptoInfoMap.set(topic, sessionInfo);\n        // TODO: search domain info and then delete \n        log.logDebug('cache sessionInfo:', topic, sessionInfo, this.sessionCryptoInfoMap);\n        if (sync) {\n            this.syncCacheSessionInfo();\n        }\n        return duplicatedTopics;\n    }\n    // add and subscribe topic\n    appendTopic(topic, sessionPublicKey) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('4.1. get append Topic:', topic);\n            // 1. check if connected\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                if (!this.isLogined) {\n                    var error = new Error();\n                    error.message = \"connection is not logined\";\n                    error.name = \"append error\";\n                    // throw error\n                    reject(error);\n                    return;\n                }\n                // 2. subscribe topic and session public key\n                let cryptoItem = {\n                    topic: topic,\n                    crypto: new crypto_1.SessionCrypto(),\n                    dappPublicKey: sessionPublicKey\n                };\n                let duplicatedTopics = this.cacheSessionInfo(topic, cryptoItem, false);\n                // make sure cache session info before subscribe\n                yield this.subscribeTopics(Array.from([topic]));\n                this.refreshPackageId();\n                log.logDebug(`5. subscribe callback then fetch append message: ${this.packageId}, ${topic}`);\n                const timeF = new Date().getTime();\n                (0, log_1.logDebug)(\"Append --subscribe callback->\", timeF - this.timeLog);\n                resolve(duplicatedTopics);\n            }));\n        });\n    }\n    confirmAppendingTopics() {\n        this.syncCacheSessionInfo();\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.timeLog = new Date().getTime();\n            (0, log_1.logDebug)(\"[Wallet] ConnectTime---enter->\", this.timeLog);\n            // 0. get cached topics and infos\n            let timestampStr = Date.now().toString();\n            var jwtToken = yield this.makeJWT(timestampStr);\n            log.logDebug(`generate jwt token: ${jwtToken}`);\n            this.connectStorage.saveContent(jwtToken, 'jwt');\n            this.recovrySessionInfoFromCache();\n            // 1.\n            return new Promise((resolve, reject) => {\n                // 1. when websocket opened\n                this.inLogin = true;\n                this.connector.onOpen(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug(`1. connector on open`);\n                    const timeOne = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---open->\", timeOne - this.timeLog);\n                    //2. send jwt to login\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when login');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // throw error\n                            reject(error);\n                        }\n                        else {\n                            this.isLogined = true;\n                            resolve();\n                            // 3. subscribe cached topics\n                            log.logDebug('3. subscribe cached topics', this.sessionCryptoInfoMap);\n                            if (this.sessionCryptoInfoMap.size > 0) {\n                                yield this.subscribeTopics(Array.from(this.sessionCryptoInfoMap.keys()));\n                            }\n                        }\n                    }));\n                    log.logDebug(`2. login called`);\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        return yield this.connector.connect();\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_LOGIN,\n                        params: {\n                            token: jwtToken\n                        }\n                    });\n                }));\n                this.connector.connect().catch((err) => {\n                    (0, log_1.logDebug)('WalletConnectionManager connect error', err);\n                    reject(err);\n                });\n                // add callback\n                this.connector.addPackageParse((event) => {\n                    var _a, _b;\n                    log.logDebug(`connect: parse package`);\n                    log.logDebug(event);\n                    if (!(\"params\" in event) || !(\"data\" in event[\"params\"])) {\n                        this.parsePackage(\"\", event, true);\n                        return;\n                    }\n                    // ignore receive echo\n                    if ((_a = event.params.data) === null || _a === void 0 ? void 0 : _a.topic) {\n                        this.parsePackage((_b = event.params.data) === null || _b === void 0 ? void 0 : _b.topic, event, event.method === commands_1.CONNECT_METHOD_RECEIVE);\n                    }\n                });\n                // this.connector.addListener(safeJsonStringify(event), (rawMsg: string)=> {\n                //    rawMsg = rawMsg.replace(/'/g, '\"')\n                //    log.logDebug(`addListener ===> ${rawMsg}`)\n                //    if (typeof rawMsg !== 'undefined') {\n                //       var msgObj = safeJsonParse(rawMsg)\n                //       var msg = msgObj.message\n                //       let crypto = \n                //       var result = this.crypto.decrypt(msg, this.connectedWalletPK)\n                //       log.logDebug(`addListener ===> ${result}`)\n                //       return result\n                //    }\n                //    return undefined\n                // }, ()=>{\n                //    // emit success\n                // }, ()=>{\n                //    // emit fail\n                // })\n            });\n        });\n    }\n    // 获取对应topic session下的钱包公钥\n    // 在返回approve时需要填充到clientId字段中\n    getSessionPublicKey(topicId) {\n        if (this.isTopicPublicKeyExist(topicId)) {\n            let item = this.sessionCryptoInfoMap.get(topicId);\n            if (item) {\n                return (0, utils_1.toHexString)(item.crypto.keyPair.publicKey);\n            }\n        }\n        return undefined;\n    }\n    getCurrentCachedTopicIdList() {\n        return Array.from(this.sessionCryptoInfoMap.keys());\n    }\n    disconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            yield this.connector.disconnect();\n            //clean cached topic\n            //如果是恢复连接，就不清理解密public key\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            if (!fromRestore) {\n                this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n            }\n        });\n    }\n    send(topic_1, msg_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, msg, needPublicKey = false) {\n            var _a, _b;\n            // make send msg payload\n            log.logDebug(`message send =====> ${msg}`);\n            if (!this.isTopicPublicKeyExist(topic)) {\n                // channel not ready\n                throw new Error('connection not finish');\n            }\n            let connectedDappPK = (_a = this.sessionCryptoInfoMap.get(topic)) === null || _a === void 0 ? void 0 : _a.dappPublicKey;\n            let cryptoObject = (_b = this.sessionCryptoInfoMap.get(topic)) === null || _b === void 0 ? void 0 : _b.crypto;\n            if (cryptoObject && connectedDappPK) {\n                let message = cryptoObject.encryptWallet(msg, connectedDappPK);\n                let messageObj = {\n                    message: message,\n                };\n                if (needPublicKey) {\n                    messageObj.clientId = (0, utils_1.toHexString)(cryptoObject.keyPair.publicKey);\n                    // let privateKey = toHexString(cryptoObject.keyPair.secretKey)\n                    // log.logDebug(`message send use dapp publicKey =====> ${connectedDappPK}`)\n                    // log.logDebug(`message send use publicKey =====> ${messageObj.clientId}`)\n                    // log.logDebug(`message send use secretKey =====> ${privateKey}`)\n                }\n                this.refreshPackageId();\n                const payload = {\n                    id: this.packageId.toString(),\n                    method: commands_1.CONNECT_METHOD_PUBLISH,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    params: {\n                        message: {\n                            topic: topic,\n                            message: (0, safejson_1.safeJsonStringify)(messageObj),\n                            ttl: constants_1.OKXCONNECTOR_MESSAGE_TTL\n                        }\n                    } // crypted\n                };\n                this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                    // ack\n                    if (rsp && rsp.error) {\n                        log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                    }\n                    else if (rsp && !rsp.error) {\n                        log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                    }\n                }));\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n                return this.packageId;\n            }\n        });\n    }\n    sendACK(msgId_1, success_1) {\n        return __awaiter(this, arguments, void 0, function* (msgId, success, reason = undefined) {\n            if (success === true) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    result: true\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n            else if (reason) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    error: {\n                        code: reason.code, //int\n                        message: reason.message\n                    }\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    // send receive\n    sendReceive(msgId, messageId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECEIVE,\n                params: {\n                    data: {\n                        messageId: messageId,\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendUnsubscribe(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO: make disconnect payload\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), {\n                id: this.packageId.toString(),\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_UNSUB,\n                params: {\n                    topic: topic\n                }\n            });\n            // remove topicId\n            this.sessionCryptoInfoMap.delete(topic);\n            this.syncCacheSessionInfo();\n        });\n    }\n    // send receive\n    // 1. fetch all \n    // 2. send back receive\n    // 3. check has more, if so, repeat from 1st step\n    sendFetchAndConsumeMessages(msgId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(msgId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic == topic) {\n                                let messageId = msg.messageId;\n                                yield this.connector.getMsgPayloadFromHistory(msg);\n                                // send receive command to relay server\n                                this.refreshPackageId();\n                                yield this.sendReceive(this.packageId.toString(), messageId, topic);\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_FETCHMSG,\n                params: {\n                    data: {\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendBatchFetchAndConsumeMessages(packageId, topicIdList) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(packageId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic) {\n                                let messageId = msg.messageId;\n                                yield this.connector.getMsgPayloadFromHistory(msg);\n                                // send receive command to relay server\n                                this.refreshPackageId(i);\n                                yield this.sendReceive(this.packageId.toString(), messageId, msg.topic);\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendBatchFetchAndConsumeMessages(this.packageId.toString(), topicIdList);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: packageId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_BATCH_FETCHMSG,\n                params: {\n                    topics: topicIdList,\n                    withInternalData: true\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                yield this.connector.connect();\n            }), payload);\n        });\n    }\n    cleanCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.connectStorage.clearCache();\n        });\n    }\n    saveSessionContent(key, data) {\n        if (!data) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(data);\n        this.connectStorage.encryptStoreMsg(jsonData, storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n    }\n    getSessionContent(key) {\n        let jsonStr = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        if (jsonStr) {\n            let object = (0, safejson_1.safeJsonParse)(jsonStr);\n            return object;\n        }\n        return undefined;\n    }\n    // subscribe then fetch messages for each topics\n    subscribeTopics(topicIdList) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)(\"4. topicid list\", topicIdList);\n            this.refreshPackageId();\n            const timeF = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let finishCount = 0;\n                //3. send subscribe\n                for (let idx = 0; idx < topicIdList.length; ++idx) {\n                    let topicId = topicIdList[idx];\n                    this.refreshPackageId(idx);\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when subscribe');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // reject(error)\n                            finishCount += 1;\n                            if (finishCount == topicIdList.length) {\n                                resolve();\n                            }\n                        }\n                        this.refreshPackageId(idx);\n                        const timeF = new Date().getTime();\n                        (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n                        finishCount += 1;\n                        if (finishCount == topicIdList.length) {\n                            // 4. fetch messages\n                            log.logDebug(`5. send fetch msg: ${this.packageId}, ${topicId}`);\n                            yield this.sendBatchFetchAndConsumeMessages(this.packageId.toString(), topicIdList);\n                            resolve();\n                        }\n                    }));\n                    log.logDebug(`3. login callback then send subscribe: ${this.packageId}, ${topicId}`);\n                    const timeTh = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---login callback->\", timeTh - this.timeLog);\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        return yield this.connector.connect();\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_SUB,\n                        params: {\n                            topic: topicId\n                        }\n                    });\n                }\n            }));\n        });\n    }\n}\nexports.WalletConnectionManager = WalletConnectionManager;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SessionCrypto = void 0;\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst utils_1 = require(\"../utils/utils\");\nclass SessionCrypto {\n    constructor(keyPair = undefined) {\n        this.nonceLength = 24;\n        this.sessionKeyPair = keyPair ? this.createKeypairFromString(keyPair) : this.createKeypair();\n    }\n    createKeypair() {\n        return tweetnacl_1.default.box.keyPair();\n    }\n    createKeypairFromString(keyPair) {\n        return {\n            publicKey: (0, utils_1.hexToByteArray)(keyPair.publicKey),\n            secretKey: (0, utils_1.hexToByteArray)(keyPair.secretKey),\n        };\n    }\n    createNonce() {\n        return tweetnacl_1.default.randomBytes(this.nonceLength);\n    }\n    get keyPair() {\n        return this.sessionKeyPair;\n    }\n    // dapp 加密:\n    // base64(hex（nonce+加密内容）)\n    encrypt(message, receiverPublicKey) {\n        const encodedMessage = new TextEncoder().encode(message);\n        const nonce = this.createNonce();\n        const encrypted = tweetnacl_1.default.box(encodedMessage, nonce, (0, utils_1.hexToByteArray)(receiverPublicKey), this.keyPair.secretKey);\n        let concatInfo = (0, utils_1.concatUint8Arrays)(nonce, encrypted);\n        var hexResult = (0, utils_1.toHexString)(concatInfo);\n        var encodedResult = new TextEncoder().encode(hexResult);\n        return (0, utils_1.base64encode)(encodedResult, false);\n    }\n    // 钱包加密内容\n    // 注意：没有中间hex的环节\n    // base64（nonce+加密内容)\n    encryptWallet(message, receiverPublicKey) {\n        const encodedMessage = new TextEncoder().encode(message);\n        const nonce = this.createNonce();\n        const encrypted = tweetnacl_1.default.box(encodedMessage, nonce, (0, utils_1.hexToByteArray)(receiverPublicKey), this.keyPair.secretKey);\n        let concatInfo = (0, utils_1.concatUint8Arrays)(nonce, encrypted);\n        return (0, utils_1.base64encode)(concatInfo, false);\n    }\n    // dapp 解密\n    // base64(split(nonce+加密内容))\n    decrypt(message, senderPublicKey) {\n        let base64Content = (0, utils_1.base64decode)(message, true);\n        let messageByteArray = base64Content.toUint8Array();\n        const [nonce, internalMessage] = (0, utils_1.splitToUint8Arrays)(messageByteArray, this.nonceLength);\n        const decrypted = tweetnacl_1.default.box.open(internalMessage, nonce, (0, utils_1.hexToByteArray)(senderPublicKey), this.keyPair.secretKey);\n        if (!decrypted) {\n            throw new Error(`Decryption error: \\n message: ${message.toString()} \\n sender pubkey: ${senderPublicKey.toString()} \\n keypair pubkey: ${(0, utils_1.toHexString)(this.keyPair.publicKey)} \\n keypair secretkey: ${(0, utils_1.toHexString)(this.keyPair.secretKey)}`);\n        }\n        return new TextDecoder().decode(decrypted);\n    }\n    // dapp 解密\n    // base64(hextoByte(split(nonce+加密内容)))\n    decryptWallet(message, senderPublicKey) {\n        let base64Content = (0, utils_1.base64decode)(message, true);\n        let messageByteArray = (0, utils_1.hexToByteArray)(base64Content.toString());\n        const [nonce, internalMessage] = (0, utils_1.splitToUint8Arrays)(messageByteArray, this.nonceLength);\n        const decrypted = tweetnacl_1.default.box.open(internalMessage, nonce, (0, utils_1.hexToByteArray)(senderPublicKey), this.keyPair.secretKey);\n        if (!decrypted) {\n            throw new Error(`Decryption error: \\n message: ${message.toString()} \\n sender pubkey: ${senderPublicKey.toString()} \\n keypair pubkey: ${(0, utils_1.toHexString)(this.keyPair.publicKey)} \\n keypair secretkey: ${(0, utils_1.toHexString)(this.keyPair.secretKey)}`);\n        }\n        return new TextDecoder().decode(decrypted);\n    }\n    stringifyKeypair() {\n        return {\n            publicKey: (0, utils_1.toHexString)(this.keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(this.keyPair.secretKey)\n        };\n    }\n}\nexports.SessionCrypto = SessionCrypto;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./connect\"), exports);\n__exportStar(require(\"./protocol\"), exports);\n__exportStar(require(\"./utils\"), exports);\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IEngine = exports.ISignClient = exports.ISignClientEvents = exports.IEngineEvents = void 0;\nconst eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\nclass IEngineEvents extends eventemitter3_1.default {\n    constructor() {\n        super();\n    }\n}\nexports.IEngineEvents = IEngineEvents;\nclass ISignClientEvents extends eventemitter3_1.default {\n    constructor() {\n        super();\n    }\n}\nexports.ISignClientEvents = ISignClientEvents;\nclass ISignClient {\n    constructor(data) {\n        this.data = data;\n    }\n}\nexports.ISignClient = ISignClient;\nclass IEngine {\n    constructor(client) {\n        this.client = client;\n    }\n}\nexports.IEngine = IEngine;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.creatOKXMiniAppWalletInfo = exports.creatOKXWalletInfo = exports.ISignClientEvents = exports.IEngine = exports.IEngineEvents = exports.ISignClient = exports.getBigIntRpcId = exports.formatJsonRpcRequest = exports.isJsonRpcError = exports.isJsonRpcResponse = exports.parseConnectionError = exports.isHttpUrl = exports.formatJsonRpcError = void 0;\nvar json_rpc_1 = require(\"./json-rpc\");\nObject.defineProperty(exports, \"formatJsonRpcError\", { enumerable: true, get: function () { return json_rpc_1.formatJsonRpcError; } });\nObject.defineProperty(exports, \"isHttpUrl\", { enumerable: true, get: function () { return json_rpc_1.isHttpUrl; } });\nObject.defineProperty(exports, \"parseConnectionError\", { enumerable: true, get: function () { return json_rpc_1.parseConnectionError; } });\nObject.defineProperty(exports, \"isJsonRpcResponse\", { enumerable: true, get: function () { return json_rpc_1.isJsonRpcResponse; } });\nObject.defineProperty(exports, \"isJsonRpcError\", { enumerable: true, get: function () { return json_rpc_1.isJsonRpcError; } });\nObject.defineProperty(exports, \"formatJsonRpcRequest\", { enumerable: true, get: function () { return json_rpc_1.formatJsonRpcRequest; } });\nObject.defineProperty(exports, \"getBigIntRpcId\", { enumerable: true, get: function () { return json_rpc_1.getBigIntRpcId; } });\nvar engine_1 = require(\"./engine\");\nObject.defineProperty(exports, \"ISignClient\", { enumerable: true, get: function () { return engine_1.ISignClient; } });\nObject.defineProperty(exports, \"IEngineEvents\", { enumerable: true, get: function () { return engine_1.IEngineEvents; } });\nObject.defineProperty(exports, \"IEngine\", { enumerable: true, get: function () { return engine_1.IEngine; } });\nObject.defineProperty(exports, \"ISignClientEvents\", { enumerable: true, get: function () { return engine_1.ISignClientEvents; } });\n__exportStar(require(\"./ton\"), exports);\nvar wallet_info_1 = require(\"./wallet-info\");\nObject.defineProperty(exports, \"creatOKXWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXWalletInfo; } });\nObject.defineProperty(exports, \"creatOKXMiniAppWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXMiniAppWalletInfo; } });\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isJsonRpcPayload = isJsonRpcPayload;\nexports.isJsonRpcRequest = isJsonRpcRequest;\nexports.isJsonRpcResponse = isJsonRpcResponse;\nexports.isJsonRpcResult = isJsonRpcResult;\nexports.isJsonRpcError = isJsonRpcError;\nexports.payloadId = payloadId;\nexports.getBigIntRpcId = getBigIntRpcId;\nexports.formatJsonRpcRequest = formatJsonRpcRequest;\nexports.formatJsonRpcResult = formatJsonRpcResult;\nexports.formatJsonRpcError = formatJsonRpcError;\nexports.isReservedErrorCode = isReservedErrorCode;\nexports.getError = getError;\nexports.getErrorByCode = getErrorByCode;\nexports.formatErrorMessage = formatErrorMessage;\nexports.isHttpUrl = isHttpUrl;\nexports.isWsUrl = isWsUrl;\nexports.parseConnectionError = parseConnectionError;\nfunction isJsonRpcPayload(payload) {\n    return (typeof payload === \"object\" &&\n        \"id\" in payload &&\n        \"jsonrpc\" in payload &&\n        payload.jsonrpc === \"2.0\");\n}\nfunction isJsonRpcRequest(payload) {\n    return isJsonRpcPayload(payload) && \"method\" in payload;\n}\nfunction isJsonRpcResponse(payload) {\n    return isJsonRpcPayload(payload) && (isJsonRpcResult(payload) || isJsonRpcError(payload));\n}\nfunction isJsonRpcResult(payload) {\n    return \"result\" in payload;\n}\nfunction isJsonRpcError(payload) {\n    return \"error\" in payload;\n}\nconst okx_connect_error_1 = require(\"../error/okx-connect.error\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nclass IncrementalRandomGenerator {\n    constructor(bits) {\n        this.i = 1;\n        const typedArray = bits === 8 ? new Uint8Array(1) : bits === 16 ? new Uint16Array(1) : new Uint32Array(1);\n        this.initialValue = tweetnacl_1.default.randomBytes(bits / 8)[0];\n    }\n    getNextValue() {\n        return this.initialValue + this.i++;\n    }\n}\nconst uint8Generator = new IncrementalRandomGenerator(8);\nconst uint16Generator = new IncrementalRandomGenerator(16);\nfunction payloadId() {\n    const date = Date.now() * 1000;\n    const extra = uint8Generator.getNextValue();\n    return date + extra;\n}\nfunction getBigIntRpcId() {\n    const date = BigInt(Date.now()) * BigInt(1000000);\n    const extra = BigInt(uint16Generator.getNextValue());\n    return date + extra;\n}\nfunction formatJsonRpcRequest(method, params, id) {\n    return {\n        id: id || payloadId(),\n        jsonrpc: \"2.0\",\n        method,\n        params,\n    };\n}\nfunction formatJsonRpcResult(id, result) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        result,\n    };\n}\nfunction formatJsonRpcError(id, error, data) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        error: formatErrorMessage(error, data),\n    };\n}\nfunction isReservedErrorCode(code) {\n    return okx_connect_error_1.RESERVED_ERROR_CODES.includes(code);\n}\nfunction getError(type) {\n    if (!Object.keys(okx_connect_error_1.STANDARD_ERROR_MAP).includes(type)) {\n        return okx_connect_error_1.STANDARD_ERROR_MAP[okx_connect_error_1.DEFAULT_ERROR];\n    }\n    return okx_connect_error_1.STANDARD_ERROR_MAP[type];\n}\nfunction getErrorByCode(code) {\n    const match = Object.values(okx_connect_error_1.STANDARD_ERROR_MAP).find((e) => e.code === code);\n    if (!match) {\n        return okx_connect_error_1.STANDARD_ERROR_MAP[okx_connect_error_1.DEFAULT_ERROR];\n    }\n    return match;\n}\nfunction formatErrorMessage(error, data) {\n    if (typeof error === \"undefined\") {\n        return getError(okx_connect_error_1.INTERNAL_ERROR);\n    }\n    if (typeof error === \"string\") {\n        error = Object.assign(Object.assign({}, getError(okx_connect_error_1.SERVER_ERROR)), { message: error });\n    }\n    if (typeof data !== \"undefined\") {\n        error.data = data;\n    }\n    if (isReservedErrorCode(error.code)) {\n        error = getErrorByCode(error.code);\n    }\n    return error;\n}\nfunction getUrlProtocol(url) {\n    const matches = url.match(new RegExp(/^\\w+:/, \"gi\"));\n    if (!matches || !matches.length)\n        return;\n    return matches[0];\n}\nfunction matchRegexProtocol(url, regex) {\n    const protocol = getUrlProtocol(url);\n    if (typeof protocol === \"undefined\")\n        return false;\n    return new RegExp(regex).test(protocol);\n}\nfunction isHttpUrl(url) {\n    return matchRegexProtocol(url, \"^https?:\");\n}\nfunction isWsUrl(url) {\n    return matchRegexProtocol(url, \"^wss?:\");\n}\nfunction parseConnectionError(e, url, type) {\n    return e.message.includes(\"getaddrinfo ENOTFOUND\") || e.message.includes(\"connect ECONNREFUSED\")\n        ? new Error(`Unavailable ${type} RPC url at ${url}`)\n        : e;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_ITEM_ERROR_CODES = void 0;\nvar CONNECT_ITEM_ERROR_CODES;\n(function (CONNECT_ITEM_ERROR_CODES) {\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n})(CONNECT_ITEM_ERROR_CODES || (exports.CONNECT_ITEM_ERROR_CODES = CONNECT_ITEM_ERROR_CODES = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TONCHAIN = void 0;\nvar TONCHAIN;\n(function (TONCHAIN) {\n    TONCHAIN[\"MAINNET\"] = \"-239\";\n})(TONCHAIN || (exports.TONCHAIN = TONCHAIN = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_ITEM_ERROR_CODES = exports.TONCHAIN = void 0;\nvar connect_wallet_1 = require(\"./connect-wallet\");\nObject.defineProperty(exports, \"TONCHAIN\", { enumerable: true, get: function () { return connect_wallet_1.TONCHAIN; } });\nvar connect_event_1 = require(\"./connect-event\");\nObject.defineProperty(exports, \"CONNECT_ITEM_ERROR_CODES\", { enumerable: true, get: function () { return connect_event_1.CONNECT_ITEM_ERROR_CODES; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.creatOKXWalletInfo = creatOKXWalletInfo;\nexports.creatOKXMiniAppWalletInfo = creatOKXMiniAppWalletInfo;\nconst constants_1 = require(\"../constants\");\nfunction creatOKXWalletInfo() {\n    return {\n        \"appName\": \"okxAppWallet\",\n        \"name\": \"OKX Wallet\",\n        \"imageUrl\": \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\",\n        \"aboutUrl\": \"https://www.okx.com/web3\",\n        \"universalLink\": constants_1.standardUniversalLink,\n        \"deepLink\": constants_1.standardDeeplink,\n        \"platforms\": [\"ios\", \"android\"]\n    };\n}\nfunction creatOKXMiniAppWalletInfo() {\n    return {\n        \"appName\": \"okxMiniApp\",\n        \"name\": \"OKX Mini Wallet\",\n        \"imageUrl\": \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\",\n        \"aboutUrl\": \"https://www.okx.com/web3\",\n        \"universalLink\": `https://t.me/${constants_1.tgwalletName}/start`,\n        \"deepLink\": \"\",\n        \"platforms\": [\"ios\", \"android\", 'macos', 'windows']\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.tgwalletName = exports.tonConnectSdkVersion = exports.standardDeeplink = exports.standardUniversalLink = exports.okxDeeplink = void 0;\nexports.okxDeeplink = 'okx://web3';\nexports.standardUniversalLink = 'https://www.okx.com/download';\n// export const standardUniversalLink = 'http://localhost:5173';\nexports.standardDeeplink = `${exports.okxDeeplink}/wallet/connect`;\n// export const standardDeeplink = 'http://localhost:5173';\nexports.tonConnectSdkVersion = '1';\n// export const tgwalletName: string = \"TCTestqdqwdqwdqBot\"\nexports.tgwalletName = \"OKX_WALLET_BOT\";\n// https://t.me/OKX_WALLET_BOT/start\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_CONNECT_ERROR_CODES = exports.OKXConnectError = void 0;\nvar okx_connect_error_1 = require(\"./okx-connect.error\");\nObject.defineProperty(exports, \"OKXConnectError\", { enumerable: true, get: function () { return okx_connect_error_1.OKXConnectError; } });\nObject.defineProperty(exports, \"OKX_CONNECT_ERROR_CODES\", { enumerable: true, get: function () { return okx_connect_error_1.OKX_CONNECT_ERROR_CODES; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEFAULT_ERROR = exports.STANDARD_ERROR_MAP = exports.SERVER_ERROR_CODE_RANGE = exports.RESERVED_ERROR_CODES = exports.SERVER_ERROR = exports.INTERNAL_ERROR = exports.INVALID_PARAMS = exports.METHOD_NOT_FOUND = exports.INVALID_REQUEST = exports.PARSE_ERROR = exports.OKX_CONNECT_ERROR_CODES = exports.OKXConnectError = void 0;\nclass OKXConnectError extends Error {\n    constructor(code, message) {\n        if (message == undefined) {\n            message = getDefaultMessageByCode(code);\n        }\n        super(message);\n        this.code = code;\n        this.message = `${OKXConnectError.prefix} ${message ? '\\n' + message : ''}`;\n        Object.setPrototypeOf(this, OKXConnectError.prototype);\n    }\n    toJSON() {\n        return {\n            message: this.message,\n            code: this.code\n        };\n    }\n}\nexports.OKXConnectError = OKXConnectError;\nOKXConnectError.prefix = '[OKX_CONNECT_SDK_ERROR]';\nfunction getDefaultMessageByCode(code) {\n    if (code == OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR) {\n        return \"unknown error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR) {\n        return \"bad request error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.ALREADY_CONNECTED_ERROR) {\n        return \"already connected error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR) {\n        return \"not connected error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.UNKNOWN_APP_ERROR) {\n        return \"unknown app error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n        return \"user rejects error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED) {\n        return \"method not supported\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.CONNECTION_ERROR) {\n        return \"connect error\";\n    }\n    return \"unknown error\";\n}\nvar OKX_CONNECT_ERROR_CODES;\n(function (OKX_CONNECT_ERROR_CODES) {\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"BAD_REQUEST_ERROR\"] = 1] = \"BAD_REQUEST_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"ALREADY_CONNECTED_ERROR\"] = 11] = \"ALREADY_CONNECTED_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"NOT_CONNECTED_ERROR\"] = 12] = \"NOT_CONNECTED_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"UNKNOWN_APP_ERROR\"] = 100] = \"UNKNOWN_APP_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"USER_REJECTS_ERROR\"] = 300] = \"USER_REJECTS_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"CHAIN_NOT_SUPPORTED\"] = 500] = \"CHAIN_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"WALLET_NOT_SUPPORTED\"] = 600] = \"WALLET_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"CONNECTION_ERROR\"] = 700] = \"CONNECTION_ERROR\";\n})(OKX_CONNECT_ERROR_CODES || (exports.OKX_CONNECT_ERROR_CODES = OKX_CONNECT_ERROR_CODES = {}));\nexports.PARSE_ERROR = \"PARSE_ERROR\";\nexports.INVALID_REQUEST = \"INVALID_REQUEST\";\nexports.METHOD_NOT_FOUND = \"METHOD_NOT_FOUND\";\nexports.INVALID_PARAMS = \"INVALID_PARAMS\";\nexports.INTERNAL_ERROR = \"INTERNAL_ERROR\";\nexports.SERVER_ERROR = \"SERVER_ERROR\";\nexports.RESERVED_ERROR_CODES = [-32700, -32600, -32601, -32602, -32603];\nexports.SERVER_ERROR_CODE_RANGE = [-32000, -32099];\nexports.STANDARD_ERROR_MAP = {\n    [exports.PARSE_ERROR]: { code: -32700, message: \"Parse error\" },\n    [exports.INVALID_REQUEST]: { code: -32600, message: \"Invalid Request\" },\n    [exports.METHOD_NOT_FOUND]: { code: -32601, message: \"Method not found\" },\n    [exports.INVALID_PARAMS]: { code: -32602, message: \"Invalid params\" },\n    [exports.INTERNAL_ERROR]: { code: -32603, message: \"Internal error\" },\n    [exports.SERVER_ERROR]: { code: -32000, message: \"Server error\" },\n};\nexports.DEFAULT_ERROR = exports.SERVER_ERROR;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.okxDeeplink = exports.tonConnectSdkVersion = exports.standardDeeplink = exports.standardUniversalLink = exports.NameSpaceKeyStarknet = exports.NameSpaceKeyTron = exports.NameSpaceKeyCosmos = exports.NameSpaceKeyAptos = exports.NameSpaceKeyBtc = exports.NameSpaceKeySui = exports.NameSpaceKeyTON = exports.NameSpaceKeySOL = exports.NameSpaceKeyEip155 = void 0;\n__exportStar(require(\"./error\"), exports);\nvar misc_1 = require(\"./misc\");\nObject.defineProperty(exports, \"NameSpaceKeyEip155\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyEip155; } });\nObject.defineProperty(exports, \"NameSpaceKeySOL\", { enumerable: true, get: function () { return misc_1.NameSpaceKeySOL; } });\nObject.defineProperty(exports, \"NameSpaceKeyTON\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyTON; } });\nObject.defineProperty(exports, \"NameSpaceKeySui\", { enumerable: true, get: function () { return misc_1.NameSpaceKeySui; } });\nObject.defineProperty(exports, \"NameSpaceKeyBtc\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyBtc; } });\nObject.defineProperty(exports, \"NameSpaceKeyAptos\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyAptos; } });\nObject.defineProperty(exports, \"NameSpaceKeyCosmos\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyCosmos; } });\nObject.defineProperty(exports, \"NameSpaceKeyTron\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyTron; } });\nObject.defineProperty(exports, \"NameSpaceKeyStarknet\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyStarknet; } });\nvar constants_1 = require(\"./constants\");\nObject.defineProperty(exports, \"standardUniversalLink\", { enumerable: true, get: function () { return constants_1.standardUniversalLink; } });\nObject.defineProperty(exports, \"standardDeeplink\", { enumerable: true, get: function () { return constants_1.standardDeeplink; } });\nObject.defineProperty(exports, \"tonConnectSdkVersion\", { enumerable: true, get: function () { return constants_1.tonConnectSdkVersion; } });\nObject.defineProperty(exports, \"okxDeeplink\", { enumerable: true, get: function () { return constants_1.okxDeeplink; } });\n__exportStar(require(\"./connect\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NameSpaceKeyStarknet = exports.NameSpaceKeyTron = exports.NameSpaceKeyCosmos = exports.NameSpaceKeyAptos = exports.NameSpaceKeyBtc = exports.NameSpaceKeySui = exports.NameSpaceKeyTON = exports.NameSpaceKeySOL = exports.NameSpaceKeyEip155 = void 0;\nexports.NameSpaceKeyEip155 = \"eip155\";\nexports.NameSpaceKeySOL = \"solana\";\nexports.NameSpaceKeyTON = \"ton\";\nexports.NameSpaceKeySui = \"sui\";\nexports.NameSpaceKeyBtc = \"btc\";\nexports.NameSpaceKeyAptos = \"aptos\";\nexports.NameSpaceKeyCosmos = \"cosmos\";\nexports.NameSpaceKeyTron = \"tron\";\nexports.NameSpaceKeyStarknet = \"starknet\";\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.callForSuccess = callForSuccess;\nexports.delay = delay;\n/**\n * Function to call ton api until we get response.\n * Because ton network is pretty unstable we need to make sure response is final.\n * @param {T} fn - function to call\n * @param {CallForSuccessOptions} [options] - optional configuration options\n */\nfunction callForSuccess(fn, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b;\n        const attempts = (_a = options === null || options === void 0 ? void 0 : options.attempts) !== null && _a !== void 0 ? _a : 3;\n        const delayMs = (_b = options === null || options === void 0 ? void 0 : options.delayMs) !== null && _b !== void 0 ? _b : 800;\n        if (typeof fn !== 'function') {\n            throw new Error(`Expected a function, got ${typeof fn}`);\n        }\n        let i = 0;\n        let lastError;\n        while (i < attempts) {\n            try {\n                return yield fn();\n            }\n            catch (err) {\n                lastError = err;\n                i++;\n                if (i < attempts) {\n                    yield delay(delayMs);\n                }\n            }\n        }\n        throw lastError;\n    });\n}\n/**\n * Delays the execution of code for a specified number of milliseconds.\n * @param {number} timeout - The number of milliseconds to delay the execution.\n * @param {DelayOptions} [options] - Optional configuration options for the delay.\n * @return {Promise<void>} - A promise that resolves after the specified delay, or rejects if the delay is aborted.\n */\nfunction delay(timeout, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            var _a, _b;\n            if ((_a = options === null || options === void 0 ? void 0 : options.signal) === null || _a === void 0 ? void 0 : _a.aborted) {\n                reject(new Error('Delay aborted'));\n                return;\n            }\n            const timeoutId = setTimeout(() => resolve(), timeout);\n            (_b = options === null || options === void 0 ? void 0 : options.signal) === null || _b === void 0 ? void 0 : _b.addEventListener('abort', () => {\n                clearTimeout(timeoutId);\n                reject(new Error('Delay aborted'));\n            });\n        });\n    });\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isMobileUserAgent = exports.openLinkBlank = exports.openLink = exports.isValidObject = exports.isIos = exports.base64decode = exports.base64encode = exports.splitToUint8Arrays = exports.concatUint8Arrays = exports.toHexString = exports.hexToByteArray = exports.encodeTWAConnectURLParams = exports.encodeConnectParams = exports.openOKXTMAWalletlinkWithFallback = exports.getTelegramWalletTWAUrl = exports.getAppWalletDeepLink = exports.encodeTelegramUrlParameters = exports.isTelegramUrl = exports.openOKXDeeplinkWithFallback = exports.openOKXDeeplink = exports.getUniversalLink = exports.safeJsonStringify = exports.safeJsonParse = exports.logWarning = exports.logError = exports.logDebug = exports.callForSuccess = void 0;\nvar call_for_success_1 = require(\"./call-for-success\");\nObject.defineProperty(exports, \"callForSuccess\", { enumerable: true, get: function () { return call_for_success_1.callForSuccess; } });\nvar log_1 = require(\"./log\");\nObject.defineProperty(exports, \"logDebug\", { enumerable: true, get: function () { return log_1.logDebug; } });\nObject.defineProperty(exports, \"logError\", { enumerable: true, get: function () { return log_1.logError; } });\nObject.defineProperty(exports, \"logWarning\", { enumerable: true, get: function () { return log_1.logWarning; } });\nvar safejson_1 = require(\"./safejson\");\nObject.defineProperty(exports, \"safeJsonParse\", { enumerable: true, get: function () { return safejson_1.safeJsonParse; } });\nObject.defineProperty(exports, \"safeJsonStringify\", { enumerable: true, get: function () { return safejson_1.safeJsonStringify; } });\nvar url_1 = require(\"./url\");\nObject.defineProperty(exports, \"getUniversalLink\", { enumerable: true, get: function () { return url_1.getUniversalLink; } });\nObject.defineProperty(exports, \"openOKXDeeplink\", { enumerable: true, get: function () { return url_1.openOKXDeeplink; } });\nObject.defineProperty(exports, \"openOKXDeeplinkWithFallback\", { enumerable: true, get: function () { return url_1.openOKXDeeplinkWithFallback; } });\nObject.defineProperty(exports, \"isTelegramUrl\", { enumerable: true, get: function () { return url_1.isTelegramUrl; } });\nObject.defineProperty(exports, \"encodeTelegramUrlParameters\", { enumerable: true, get: function () { return url_1.encodeTelegramUrlParameters; } });\nObject.defineProperty(exports, \"getAppWalletDeepLink\", { enumerable: true, get: function () { return url_1.getAppWalletDeepLink; } });\nObject.defineProperty(exports, \"getTelegramWalletTWAUrl\", { enumerable: true, get: function () { return url_1.getTelegramWalletTWAUrl; } });\nObject.defineProperty(exports, \"openOKXTMAWalletlinkWithFallback\", { enumerable: true, get: function () { return url_1.openOKXTMAWalletlinkWithFallback; } });\nObject.defineProperty(exports, \"encodeConnectParams\", { enumerable: true, get: function () { return url_1.encodeConnectParams; } });\nObject.defineProperty(exports, \"encodeTWAConnectURLParams\", { enumerable: true, get: function () { return url_1.encodeTWAConnectURLParams; } });\nvar utils_1 = require(\"./utils\");\nObject.defineProperty(exports, \"hexToByteArray\", { enumerable: true, get: function () { return utils_1.hexToByteArray; } });\nObject.defineProperty(exports, \"toHexString\", { enumerable: true, get: function () { return utils_1.toHexString; } });\nObject.defineProperty(exports, \"concatUint8Arrays\", { enumerable: true, get: function () { return utils_1.concatUint8Arrays; } });\nObject.defineProperty(exports, \"splitToUint8Arrays\", { enumerable: true, get: function () { return utils_1.splitToUint8Arrays; } });\nObject.defineProperty(exports, \"base64encode\", { enumerable: true, get: function () { return utils_1.base64encode; } });\nObject.defineProperty(exports, \"base64decode\", { enumerable: true, get: function () { return utils_1.base64decode; } });\nObject.defineProperty(exports, \"isIos\", { enumerable: true, get: function () { return utils_1.isIos; } });\nObject.defineProperty(exports, \"isValidObject\", { enumerable: true, get: function () { return utils_1.isValidObject; } });\nvar web_api_1 = require(\"./web-api\");\nObject.defineProperty(exports, \"openLink\", { enumerable: true, get: function () { return web_api_1.openLink; } });\nObject.defineProperty(exports, \"openLinkBlank\", { enumerable: true, get: function () { return web_api_1.openLinkBlank; } });\nObject.defineProperty(exports, \"isMobileUserAgent\", { enumerable: true, get: function () { return web_api_1.isMobileUserAgent; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.logDebug = logDebug;\nexports.logError = logError;\nexports.logWarning = logWarning;\nconst debug = false;\nfunction logDebug(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.log('[OKX_CONNECT_SDK]', ...args);\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction logError(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.error('[OKX_CONNECT_SDK]', ...args);\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction logWarning(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.warn('[OKX_CONNECT_SDK]', ...args);\n            }\n        }\n        catch (_a) { }\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.safeJsonParse = safeJsonParse;\nexports.safeJsonStringify = safeJsonStringify;\nconst log_1 = require(\"./log\");\nconst JSONStringify = (data) => JSON.stringify(data, (_, value) => (typeof value === \"bigint\" ? value.toString() + \"n\" : value));\n/*\n  Function to parse JSON.\n  If JSON has values in our custom format BigInt (strings with \"n\" character at the end), we just parse them to BigInt values.\n  If JSON has big number values, but not in our custom format, we copy it, and in a copy we convert those values to our custom format,\n  then parse them to BigInt values.\n  Other values (not big numbers and not our custom format BigInt values) are not affected and parsed as native JSON.parse() would parse them.\n*/\nconst JSONParse = (json) => {\n    /*\n      Big numbers are found and marked using Regex with this condition:\n      Number's length is bigger than 16 || Number's length is 16 and any numerical digit of the number is greater than that of the Number.MAX_SAFE_INTEGER\n      Additionally, it skips values that are strings (between double quotes).\n      */\n    // prettier-ignore\n    // eslint-disable-next-line no-useless-escape\n    const numbersBiggerThanMaxInt = /:(\\b\\d{17,}|\\b(?:[9](?:[1-9]07199254740991|0[1-9]7199254740991|00[8-9]199254740991|007[2-9]99254740991|007199[3-9]54740991|0071992[6-9]4740991|00719925[5-9]740991|007199254[8-9]40991|0071992547[5-9]0991|00719925474[1-9]991|00719925474099[2-9])))(?=[,\\}\\]]|$)/g;\n    const serializedData = json.replace(numbersBiggerThanMaxInt, (match) => `\"${match}n\"`);\n    return JSON.parse(serializedData, (_, value) => {\n        const isCustomFormatBigInt = typeof value === \"string\" && value.match(/^\\d+n$/);\n        if (isCustomFormatBigInt)\n            return BigInt(value.substring(0, value.length - 1));\n        return value;\n    });\n};\nfunction safeJsonParse(value) {\n    if (typeof value !== \"string\") {\n        (0, log_1.logDebug)(value);\n        throw new Error(`Cannot safe json parse value of type ${typeof value}`);\n    }\n    try {\n        return JSONParse(value);\n    }\n    catch (e) {\n        // eslint-disable-next-line no-console\n        console.error(\"safeJsonParse error:\", e);\n        return value;\n    }\n}\nfunction safeJsonStringify(value) {\n    return typeof value === \"string\" ? value : JSONStringify(value) || \"\";\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.okxfromString = okxfromString;\nexports.okxtoString = okxtoString;\nexports.alloc = alloc;\nexports.allocUnsafe = allocUnsafe;\nconst basics_1 = require(\"multiformats/basics\");\nconst log_1 = require(\"../utils/log\");\nfunction okxfromString(string, encoding = 'utf8') {\n    const base = BASES[encoding];\n    (0, log_1.logDebug)(\"okxfromstring ====> \");\n    if (!base) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    return base.decoder.decode(`${base.prefix}${string}`);\n}\nfunction okxtoString(array, encoding = 'utf8') {\n    const base = BASES[encoding];\n    (0, log_1.logDebug)(\"okxtoString ====> \");\n    if (!base) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    return base.encoder.encode(array).substring(1);\n}\nfunction alloc(size = 0) {\n    return new Uint8Array(size);\n}\nfunction allocUnsafe(size = 0) {\n    return new Uint8Array(size);\n}\nfunction createCodec(name, prefix, encode, decode) {\n    return {\n        name,\n        prefix,\n        encoder: {\n            name,\n            prefix,\n            encode\n        },\n        decoder: { decode }\n    };\n}\nconst string = createCodec('utf8', 'u', buf => {\n    const decoder = new TextDecoder('utf8');\n    return 'u' + decoder.decode(buf);\n}, str => {\n    const encoder = new TextEncoder();\n    return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', buf => {\n    let result = 'a';\n    for (let i = 0; i < buf.length; i++) {\n        result += String.fromCharCode(buf[i]);\n    }\n    return result;\n}, str => {\n    str = str.substring(1);\n    const buf = allocUnsafe(str.length);\n    for (let i = 0; i < str.length; i++) {\n        buf[i] = str.charCodeAt(i);\n    }\n    return buf;\n});\nconst BASES = Object.assign({ utf8: string, 'utf-8': string, hex: basics_1.bases.base16, latin1: ascii, ascii: ascii, binary: ascii }, basics_1.bases);\n","\"use strict\";\nvar _a, _b, _c, _d, _e, _f, _g;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isTmaPlatform = isTmaPlatform;\nexports.isInTMA = isInTMA;\nexports.isInTelegramBrowser = isInTelegramBrowser;\nexports.sendExpand = sendExpand;\nexports.sendOpenTelegramLink = sendOpenTelegramLink;\nexports.versionCompare = versionCompare;\nconst url_1 = require(\"./url\");\nconst log_1 = require(\"./log\");\nconst protocol_1 = require(\"../protocol\");\nconst web_api_1 = require(\"./web-api\");\nlet initParams = {};\ntry {\n    let locationHash = location.hash.toString();\n    initParams = urlParseHashParams(locationHash);\n}\ncatch (e) { }\nlet tmaPlatform = 'unknown';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppPlatform) {\n    tmaPlatform = (_a = initParams.tgWebAppPlatform) !== null && _a !== void 0 ? _a : 'unknown';\n}\nif (tmaPlatform === 'unknown') {\n    const window = (0, url_1.getWindow)();\n    tmaPlatform = (_d = (_c = (_b = window === null || window === void 0 ? void 0 : window.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) === null || _c === void 0 ? void 0 : _c.platform) !== null && _d !== void 0 ? _d : 'unknown';\n}\nlet webAppVersion = '6.0';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppVersion) {\n    webAppVersion = initParams.tgWebAppVersion;\n}\nif (!webAppVersion) {\n    const window = (0, url_1.getWindow)();\n    webAppVersion = (_g = (_f = (_e = window === null || window === void 0 ? void 0 : window.Telegram) === null || _e === void 0 ? void 0 : _e.WebApp) === null || _f === void 0 ? void 0 : _f.version) !== null && _g !== void 0 ? _g : '6.0';\n}\n/**\n * Returns true if the app is running in TMA on the specified platform.\n * @param platforms\n */\nfunction isTmaPlatform(...platforms) {\n    return platforms.includes(tmaPlatform);\n}\n/**\n * Returns true if the app is running in TMA.\n */\nfunction isInTMA() {\n    var _a;\n    return tmaPlatform !== 'unknown' || !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n}\n/**\n * Returns true if the app is running in the Telegram browser.\n */\nfunction isInTelegramBrowser() {\n    var _a;\n    const isTelegramWebview = !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebview);\n    return (isInTMA() || isTelegramWebview) && tmaPlatform === 'unknown';\n}\n/**\n * Expand the app window.\n */\nfunction sendExpand() {\n    postEvent('web_app_expand', {});\n}\n/**\n * Opens link in TMA or in new tab and returns a function that closes the tab.\n * @param link The link to open.\n * @param fallback The function to call if the link can't be opened in TMA.\n */\nfunction sendOpenTelegramLink(link, fallback) {\n    const url = new URL(link);\n    if (url.protocol !== 'http:' && url.protocol !== 'https:') {\n        if (fallback) {\n            return fallback();\n        }\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Url protocol is not supported: ${url}`);\n    }\n    if (url.hostname !== 't.me') {\n        if (fallback) {\n            return fallback();\n        }\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Url host is not supported: ${url}`);\n    }\n    const pathFull = url.pathname + url.search;\n    if (isIframe() || versionAtLeast('6.1')) {\n        postEvent('web_app_open_tg_link', { path_full: pathFull });\n    }\n    else {\n        (0, web_api_1.openLinkBlank)('https://t.me' + pathFull);\n    }\n}\nfunction isIframe() {\n    try {\n        const window = (0, url_1.getWindow)();\n        if (!window) {\n            return false;\n        }\n        return window.parent != null && window !== window.parent;\n    }\n    catch (e) {\n        return false;\n    }\n}\nfunction postEvent(eventType, eventData) {\n    try {\n        const window = (0, url_1.getWindow)();\n        if (!window) {\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Can't post event to parent window: window is not defined`);\n        }\n        if (window.TelegramWebviewProxy !== undefined) {\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.TelegramWebviewProxy.postEvent(eventType, JSON.stringify(eventData));\n        }\n        else if (window.external && 'notify' in window.external) {\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.external.notify(JSON.stringify({ eventType: eventType, eventData: eventData }));\n        }\n        else if (isIframe()) {\n            const trustedTarget = '*';\n            const message = JSON.stringify({ eventType: eventType, eventData: eventData });\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.parent.postMessage(message, trustedTarget);\n        }\n        else {\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Can't post event to TMA`);\n        }\n    }\n    catch (e) {\n        (0, log_1.logError)(`Can't post event to parent window: ${e}`);\n    }\n}\nfunction urlParseHashParams(locationHash) {\n    locationHash = locationHash.replace(/^#/, '');\n    let params = {};\n    if (!locationHash.length) {\n        return params;\n    }\n    if (locationHash.indexOf('=') < 0 && locationHash.indexOf('?') < 0) {\n        params._path = urlSafeDecode(locationHash);\n        return params;\n    }\n    let qIndex = locationHash.indexOf('?');\n    if (qIndex >= 0) {\n        let pathParam = locationHash.substr(0, qIndex);\n        params._path = urlSafeDecode(pathParam);\n        locationHash = locationHash.substr(qIndex + 1);\n    }\n    let query_params = urlParseQueryString(locationHash);\n    for (let k in query_params) {\n        params[k] = query_params[k];\n    }\n    return params;\n}\nfunction urlSafeDecode(urlencoded) {\n    try {\n        urlencoded = urlencoded.replace(/\\+/g, '%20');\n        return decodeURIComponent(urlencoded);\n    }\n    catch (e) {\n        return urlencoded;\n    }\n}\nfunction urlParseQueryString(queryString) {\n    let params = {};\n    if (!queryString.length) {\n        return params;\n    }\n    let queryStringParams = queryString.split('&');\n    let i, param, paramName, paramValue;\n    for (i = 0; i < queryStringParams.length; i++) {\n        param = queryStringParams[i].split('=');\n        paramName = urlSafeDecode(param[0]);\n        paramValue = param[1] == null ? null : urlSafeDecode(param[1]);\n        params[paramName] = paramValue;\n    }\n    return params;\n}\nfunction versionCompare(v1, v2) {\n    if (typeof v1 !== 'string')\n        v1 = '';\n    if (typeof v2 !== 'string')\n        v2 = '';\n    let v1List = v1.replace(/^\\s+|\\s+$/g, '').split('.');\n    let v2List = v2.replace(/^\\s+|\\s+$/g, '').split('.');\n    let a, i, p1, p2;\n    a = Math.max(v1List.length, v2List.length);\n    for (i = 0; i < a; i++) {\n        p1 = parseInt(v1List[i]) || 0;\n        p2 = parseInt(v2List[i]) || 0;\n        if (p1 === p2)\n            continue;\n        if (p1 > p2)\n            return 1;\n        return -1;\n    }\n    return 0;\n}\nfunction versionAtLeast(ver) {\n    return versionCompare(webAppVersion, ver) >= 0;\n}\n","\"use strict\";\nvar _a, _b, _c, _d;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.removeUrlLastSlash = removeUrlLastSlash;\nexports.addPathToUrl = addPathToUrl;\nexports.getUniversalLink = getUniversalLink;\nexports.openOKXDeeplink = openOKXDeeplink;\nexports.openOKXDeeplinkWithFallback = openOKXDeeplinkWithFallback;\nexports.getWindow = getWindow;\nexports.isTelegramUrl = isTelegramUrl;\nexports.encodeTelegramUrlParameters = encodeTelegramUrlParameters;\nexports.encodeConnectParams = encodeConnectParams;\nexports.encodeTWAConnectURLParams = encodeTWAConnectURLParams;\nexports.getAppWalletDeepLink = getAppWalletDeepLink;\nexports.getTelegramWalletTWAUrl = getTelegramWalletTWAUrl;\nexports.openOKXTMAWalletlinkWithFallback = openOKXTMAWalletlinkWithFallback;\nexports.isInTMA = isInTMA;\nexports.isInTelegramBrowser = isInTelegramBrowser;\nconst protocol_1 = require(\"../protocol\");\nconst log_1 = require(\"./log\");\nconst constants_1 = require(\"../protocol/constants\");\nconst utils_1 = require(\"./utils\");\nconst tma_api_1 = require(\"./tma-api\");\nfunction removeUrlLastSlash(url) {\n    if (url.slice(-1) === '/') {\n        return url.slice(0, -1);\n    }\n    return url;\n}\nfunction addPathToUrl(url, path) {\n    return removeUrlLastSlash(url) + '/' + path;\n}\nfunction getUniversalLink(deeplinkUrl) {\n    const deeplinkEncodeUrl = encodeURIComponent(deeplinkUrl);\n    return `${protocol_1.standardUniversalLink}?deeplink=${deeplinkEncodeUrl}`;\n}\nfunction openOKXDeeplink(deeplinkUrl) {\n    var _a;\n    const fullUrl = getUniversalLink(deeplinkUrl);\n    const isTelegram = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n    console.log(\"openOKXDeeplink fullUrl:\", fullUrl);\n    if (!(0, utils_1.isIos)()) {\n        let newWindow = null;\n        if (isTelegram) {\n            newWindow = window.open(deeplinkUrl, '_blank');\n        }\n        else {\n            window.location.href = deeplinkUrl;\n        }\n    }\n    else {\n        if (isTelegram) {\n            window.open(fullUrl, '_blank');\n        }\n        else {\n            console.log(\"windowOpen[before]: \", Date.now());\n            if (window === null || window === void 0 ? void 0 : window.okxLogDebug) {\n                window.open(fullUrl, '_blank');\n            }\n            else {\n                window.open(fullUrl, '_self');\n            }\n            console.log(\"windowOpen[after]: \", Date.now());\n        }\n    }\n}\nfunction openOKXDeeplinkWithFallback(deeplinkUrl) {\n    var _a;\n    const fullUrl = getUniversalLink(deeplinkUrl);\n    const isTelegram = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n    console.log(\"openOKXDeeplinkWithFallback fullUrl:\", fullUrl);\n    let deepLinkOpened = false;\n    const timeoutDuration = 3000; // 1.5秒的等待时间\n    const downloadUrl = protocol_1.standardUniversalLink;\n    if (!(0, utils_1.isIos)()) {\n        let newWindow = null;\n        var fallbackToDownloadPage = () => {\n            if (!deepLinkOpened) {\n                if (newWindow) {\n                    newWindow.open(downloadUrl, '_self');\n                }\n                else {\n                    window.open(downloadUrl, '_blank');\n                }\n            }\n        };\n        if (isTelegram) {\n            newWindow = window.open(deeplinkUrl, '_blank');\n        }\n        else {\n            window.location.href = deeplinkUrl;\n        }\n        setTimeout(fallbackToDownloadPage, timeoutDuration);\n        window.addEventListener('blur', () => {\n            deepLinkOpened = true;\n        }, { once: true });\n        document.addEventListener('visibilitychange', () => {\n            if (document.visibilityState === 'hidden') {\n                deepLinkOpened = true;\n            }\n        });\n    }\n    else {\n        if (isTelegram) {\n            window.open(fullUrl, '_blank');\n        }\n        else {\n            console.log(\"windowOpen[before]: \", Date.now());\n            if (window === null || window === void 0 ? void 0 : window.okxLogDebug) {\n                window.open(fullUrl, '_blank');\n            }\n            else {\n                window.open(fullUrl, '_self');\n            }\n            console.log(\"windowOpen[after]: \", Date.now());\n        }\n    }\n}\nfunction getWindow() {\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    return undefined;\n}\nfunction isTelegramUrl(link) {\n    if (!link) {\n        return false;\n    }\n    const url = new URL(link);\n    return url.protocol === 'tg:' || url.hostname === 't.me';\n}\nfunction encodeTelegramUrlParameters(parameters) {\n    let encodedParameters = parameters;\n    encodedParameters = encodedParameters.replace(/\\./g, '%2E');\n    encodedParameters = encodedParameters.replace(/-/g, '%2D');\n    encodedParameters = encodedParameters.replace(/_/g, '%5F');\n    encodedParameters = encodedParameters.replace(/&/g, '-');\n    encodedParameters = encodedParameters.replace(/=/g, '__');\n    encodedParameters = encodedParameters.replace(/%/g, '--');\n    return encodedParameters;\n}\nfunction encodeConnectParams(connectRequest) {\n    const connectRequestStr = JSON.stringify(connectRequest);\n    (0, log_1.logDebug)(\"url encodeConnectParams connectRequestStr \", connectRequestStr);\n    const utf8Array = new TextEncoder().encode(connectRequestStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    // .replace(/\\+/g, '-')\n    // .replace(/\\//g, '_')\n    // .replace(/=+$/, ''); //Compatible with older versions of iOS. Cannot be added directly  (Base64 URL Safe)\n    (0, log_1.logDebug)(\"url encodeConnectParams base64Encoded \", base64Encoded);\n    return base64Encoded;\n}\nfunction encodeTWAConnectURLParams(connectRequest) {\n    const connectRequestStr = JSON.stringify({ topic: connectRequest.topic, clientId: connectRequest.clientId });\n    (0, log_1.logDebug)(\"url encodeConnectParams connectRequestStr\", connectRequestStr);\n    const utf8Array = new TextEncoder().encode(connectRequestStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    return base64Encoded;\n}\nfunction getAppWalletDeepLink(connectParam) {\n    return `${protocol_1.standardDeeplink}?param=${connectParam}`;\n}\n//  make telegram okx wallet TWA url\nfunction getTelegramWalletTWAUrl(connectParam, redirectStr, browserDebug = false) {\n    let base64Content = { okxconnect: \"\", redirect: \"\", extraparams: \"\" };\n    if (connectParam) {\n        base64Content.okxconnect = connectParam;\n    }\n    if (redirectStr) {\n        base64Content.redirect = redirectStr;\n    }\n    let base64ContentStr = JSON.stringify(base64Content);\n    const utf8Array = new TextEncoder().encode(base64ContentStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    (0, log_1.logDebug)('[TWA] open link:', base64Content, base64Encoded);\n    if (connectParam || redirectStr) {\n        if (browserDebug) {\n            return `http://localhost:5173?tgWebAppStartParam=${base64Encoded}`;\n        }\n        else {\n            return `https://t.me/${constants_1.tgwalletName}/start?startapp=${base64Encoded}`;\n        }\n    }\n    if (browserDebug) {\n        return \"http://localhost:5173\";\n    }\n    else {\n        return `https://t.me/${constants_1.tgwalletName}/start`;\n    }\n}\n//  open TWA url in telegram\nfunction openOKXTMAWalletlinkWithFallback(twaDeepLink, browserDebug = false) {\n    var _a, _b, _c, _d, _e;\n    (0, log_1.logDebug)('[TWA] open link:', twaDeepLink, \"browserDebug ==> \", browserDebug);\n    if (browserDebug) {\n        window.open(twaDeepLink, '_blank');\n    }\n    else {\n        if ((_b = (_a = getWindow()) === null || _a === void 0 ? void 0 : _a.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) {\n            (_e = (_d = (_c = getWindow()) === null || _c === void 0 ? void 0 : _c.Telegram) === null || _d === void 0 ? void 0 : _d.WebApp) === null || _e === void 0 ? void 0 : _e.openTelegramLink(twaDeepLink);\n        }\n        else {\n            (0, tma_api_1.sendOpenTelegramLink)(twaDeepLink);\n        }\n    }\n}\n/**\n * Returns true if the app is running in TMA.\n */\nfunction urlSafeDecode(urlencoded) {\n    try {\n        urlencoded = urlencoded.replace(/\\+/g, '%20');\n        return decodeURIComponent(urlencoded);\n    }\n    catch (e) {\n        return urlencoded;\n    }\n}\nfunction urlParseQueryString(queryString) {\n    let params = {};\n    if (!queryString.length) {\n        return params;\n    }\n    let queryStringParams = queryString.split('&');\n    let i, param, paramName, paramValue;\n    for (i = 0; i < queryStringParams.length; i++) {\n        param = queryStringParams[i].split('=');\n        paramName = urlSafeDecode(param[0]);\n        paramValue = param[1] == null ? null : urlSafeDecode(param[1]);\n        params[paramName] = paramValue;\n    }\n    return params;\n}\nfunction urlParseHashParams(locationHash) {\n    locationHash = locationHash.replace(/^#/, '');\n    let params = {};\n    if (!locationHash.length) {\n        return params;\n    }\n    if (locationHash.indexOf('=') < 0 && locationHash.indexOf('?') < 0) {\n        params._path = urlSafeDecode(locationHash);\n        return params;\n    }\n    let qIndex = locationHash.indexOf('?');\n    if (qIndex >= 0) {\n        let pathParam = locationHash.substr(0, qIndex);\n        params._path = urlSafeDecode(pathParam);\n        locationHash = locationHash.substr(qIndex + 1);\n    }\n    let query_params = urlParseQueryString(locationHash);\n    for (let k in query_params) {\n        params[k] = query_params[k];\n    }\n    return params;\n}\nlet initParams = {};\ntry {\n    let locationHash = location.hash.toString();\n    initParams = urlParseHashParams(locationHash);\n}\ncatch (e) { }\nlet tmaPlatform = 'unknown';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppPlatform) {\n    tmaPlatform = (_a = initParams.tgWebAppPlatform) !== null && _a !== void 0 ? _a : 'unknown';\n}\nif (tmaPlatform === 'unknown') {\n    const window = getWindow();\n    tmaPlatform = (_d = (_c = (_b = window === null || window === void 0 ? void 0 : window.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) === null || _c === void 0 ? void 0 : _c.platform) !== null && _d !== void 0 ? _d : 'unknown';\n}\nfunction isInTMA() {\n    var _a;\n    return tmaPlatform !== 'unknown' || !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n}\n/**\n * Returns true if the app is running in the Telegram browser.\n */\nfunction isInTelegramBrowser() {\n    var _a;\n    const isTelegramWebview = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebview);\n    return (isInTMA() || isTelegramWebview) && tmaPlatform === 'unknown';\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isValidObject = exports.RANDOM_LENGTH = exports.isBrowser = exports.resolveLocalStorage = exports.hasLocalStorage = exports.hasBuiltInWebSocket = exports.resolveWebSocketImplementation = void 0;\nexports.hexToByteArray = hexToByteArray;\nexports.toHexString = toHexString;\nexports.concatUint8Arrays = concatUint8Arrays;\nexports.splitToUint8Arrays = splitToUint8Arrays;\nexports.base64encode = base64encode;\nexports.base64decode = base64decode;\nexports.checkWSUrl = checkWSUrl;\nexports.hashKey = hashKey;\nexports.generateRandomBytes32 = generateRandomBytes32;\nexports.generateTopic = generateTopic;\nexports.isIos = isIos;\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst tweetnacl_util_1 = __importDefault(require(\"tweetnacl-util\"));\nconst to_string_1 = require(\"uint8arrays/to-string\");\nconst sha256_1 = require(\"@stablelib/sha256\");\nconst safejson_1 = require(\"./safejson\");\nconst log_1 = require(\"./log\");\nconst stringUtils_1 = require(\"../utils/stringUtils\");\nconst BASE16 = \"base16\";\nfunction hexToByteArray(hexString) {\n    if (hexString.length % 2 !== 0) {\n        throw new Error(`Cannot convert ${hexString} to bytesArray`);\n    }\n    const result = new Uint8Array(hexString.length / 2);\n    for (let i = 0; i < hexString.length; i += 2) {\n        result[i / 2] = parseInt(hexString.slice(i, i + 2), 16);\n    }\n    return result;\n}\nfunction toHexString(byteArray) {\n    let hexString = '';\n    byteArray.forEach(byte => {\n        hexString += ('0' + (byte & 0xff).toString(16)).slice(-2);\n    });\n    return hexString;\n}\nfunction concatUint8Arrays(buffer1, buffer2) {\n    const mergedArray = new Uint8Array(buffer1.length + buffer2.length);\n    mergedArray.set(buffer1);\n    mergedArray.set(buffer2, buffer1.length);\n    return mergedArray;\n}\nfunction splitToUint8Arrays(array, index) {\n    if (index >= array.length) {\n        throw new Error('Index is out of buffer');\n    }\n    const subArray1 = array.slice(0, index);\n    const subArray2 = array.slice(index);\n    return [subArray1, subArray2];\n}\nfunction encodeUint8Array(value, urlSafe) {\n    const encoded = tweetnacl_util_1.default.encodeBase64(value);\n    if (!urlSafe) {\n        return encoded;\n    }\n    return encodeURIComponent(encoded);\n}\nfunction decodeToUint8Array(value, urlSafe) {\n    if (urlSafe) {\n        value = decodeURIComponent(value);\n    }\n    return tweetnacl_util_1.default.decodeBase64(value);\n}\nfunction base64encode(value, urlSafe) {\n    let uint8Array;\n    if (value instanceof Uint8Array) {\n        uint8Array = value;\n    }\n    else {\n        if (typeof value !== 'string') {\n            value = (0, safejson_1.safeJsonStringify)(value);\n        }\n        uint8Array = tweetnacl_util_1.default.decodeUTF8(value);\n    }\n    return encodeUint8Array(uint8Array, urlSafe);\n}\nfunction base64decode(value, urlSafe) {\n    const decodedUint8Array = decodeToUint8Array(value, urlSafe);\n    return {\n        toString() {\n            return tweetnacl_util_1.default.encodeUTF8(decodedUint8Array);\n        },\n        toObject() {\n            try {\n                return (0, safejson_1.safeJsonParse)(tweetnacl_util_1.default.encodeUTF8(decodedUint8Array));\n            }\n            catch (e) {\n                return null;\n            }\n        },\n        toUint8Array() {\n            return decodedUint8Array;\n        }\n    };\n}\nfunction checkWSUrl(url) {\n    const match = url.match(new RegExp(/^\\w+:/, \"gi\"));\n    if (!match || !match.length) {\n        return false;\n    }\n    let scheme = match[0];\n    if (scheme === undefined) {\n        return false;\n    }\n    return new RegExp(\"^wss?:\").test(scheme);\n}\nconst resolveWebSocketImplementation = () => {\n    if (typeof WebSocket !== \"undefined\") {\n        return WebSocket;\n    }\n    else if (typeof global !== \"undefined\" && typeof global.WebSocket !== \"undefined\") {\n        return global.WebSocket;\n    }\n    else if (typeof window !== \"undefined\" && typeof window.WebSocket !== \"undefined\") {\n        return window.WebSocket;\n    }\n    else if (typeof self !== \"undefined\" && typeof self.WebSocket !== \"undefined\") {\n        return self.WebSocket;\n    }\n    return WebSocket;\n    //\n    // return require(\"ws\");\n};\nexports.resolveWebSocketImplementation = resolveWebSocketImplementation;\nconst hasBuiltInWebSocket = () => typeof WebSocket !== \"undefined\" ||\n    (typeof global !== \"undefined\" && typeof global.WebSocket !== \"undefined\") ||\n    (typeof window !== \"undefined\" && typeof window.WebSocket !== \"undefined\") ||\n    (typeof self !== \"undefined\" && typeof self.WebSocket !== \"undefined\");\nexports.hasBuiltInWebSocket = hasBuiltInWebSocket;\nconst hasLocalStorage = () => (typeof global !== \"undefined\" && (typeof global.localStorage !== \"undefined\")) ||\n    (typeof window !== \"undefined\" && typeof window.localStorage !== \"undefined\");\nexports.hasLocalStorage = hasLocalStorage;\nconst resolveLocalStorage = () => {\n    if (typeof global !== \"undefined\" && typeof global.localStorage !== \"undefined\") {\n        return global.localStorage;\n    }\n    else if (typeof window !== \"undefined\" && typeof window.localStorage !== \"undefined\") {\n        return window.localStorage;\n    }\n    return localStorage;\n};\nexports.resolveLocalStorage = resolveLocalStorage;\nconst isBrowser = () => typeof window !== \"undefined\";\nexports.isBrowser = isBrowser;\nexports.RANDOM_LENGTH = 32;\nfunction hashKey(key, encode = BASE16) {\n    (0, log_1.logDebug)(`hash key called ${key}`);\n    const result = (0, sha256_1.hash)((0, stringUtils_1.okxfromString)(key, encode));\n    return (0, to_string_1.toString)(result, encode);\n}\nfunction generateRandomBytes32() {\n    return tweetnacl_1.default.randomBytes(exports.RANDOM_LENGTH);\n}\nfunction generateTopic() {\n    let randomBytes32 = generateRandomBytes32();\n    (0, log_1.logDebug)(`generate topic called ${randomBytes32}`);\n    return hashKey((0, to_string_1.toString)(randomBytes32, BASE16));\n}\nconst isValidObject = (obj) => Object.getPrototypeOf(obj) === Object.prototype && Object.keys(obj).length;\nexports.isValidObject = isValidObject;\nfunction isIos() {\n    const userAgent = navigator.userAgent;\n    const maxTouchPoints = navigator.maxTouchPoints || 0;\n    // 检测 iPhone、iPod 和传统的 iPad\n    const isIOSDevice = /iPad|iPhone|iPod/.test(userAgent) && !window.MSStream;\n    // 针对 iPadOS 13 及以上的设备进行额外判断\n    const isIPadOS = (userAgent.includes('Mac') && maxTouchPoints > 1);\n    (0, log_1.logDebug)(`utils isIos >>>isIOSDevice: ${isIOSDevice}    >> isIPadOS: ${isIPadOS}`);\n    // 如果是 iOS 设备或者是 iPadOS 设备，返回 true\n    return isIOSDevice || isIPadOS;\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.openLink = openLink;\nexports.openLinkBlank = openLinkBlank;\nexports.openDeeplinkWithFallback = openDeeplinkWithFallback;\nexports.isMobileUserAgent = isMobileUserAgent;\nexports.getUserAgent = getUserAgent;\nexports.isOS = isOS;\nexports.isBrowser = isBrowser;\nconst ua_parser_js_1 = __importDefault(require(\"ua-parser-js\"));\nconst log_1 = require(\"./log\");\nfunction openLink(href, target = '_self') {\n    (0, log_1.logDebug)('openLink', href, target);\n    window.open(href, target, 'noopener noreferrer');\n}\nfunction openLinkBlank(href) {\n    openLink(href, '_blank');\n}\nfunction openDeeplinkWithFallback(href, fallback) {\n    const doFallback = () => {\n        if (isBrowser('safari') || (isOS('android') && isBrowser('firefox'))) {\n            // Safari does not support fallback to direct link.\n            return;\n        }\n        fallback();\n    };\n    const fallbackTimeout = setTimeout(() => doFallback(), 500);\n    window.addEventListener('blur', () => clearTimeout(fallbackTimeout), { once: true });\n    openLink(href, '_self');\n}\nfunction isMobileUserAgent() {\n    let check = false;\n    (function (a) {\n        if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) ||\n            /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.slice(0, 4)))\n            check = true;\n    })(navigator.userAgent ||\n        navigator.vendor ||\n        window.opera);\n    return check;\n}\nfunction getUserAgent() {\n    var _a, _b, _c;\n    const results = new ua_parser_js_1.default().getResult();\n    const osName = (_a = results.os.name) === null || _a === void 0 ? void 0 : _a.toLowerCase();\n    const deviceModel = (_b = results.device.model) === null || _b === void 0 ? void 0 : _b.toLowerCase();\n    let os;\n    switch (true) {\n        case deviceModel === 'ipad':\n            os = 'ipad';\n            break;\n        case osName === 'ios':\n            os = 'ios';\n            break;\n        case osName === 'android':\n            os = 'android';\n            break;\n        case osName === 'mac os':\n            os = 'macos';\n            break;\n        case osName === 'linux':\n            os = 'linux';\n            break;\n        case osName === null || osName === void 0 ? void 0 : osName.includes('windows'):\n            os = 'windows';\n            break;\n    }\n    const browserName = (_c = results.browser.name) === null || _c === void 0 ? void 0 : _c.toLowerCase();\n    let browser;\n    switch (true) {\n        case browserName === 'chrome':\n            browser = 'chrome';\n            break;\n        case browserName === 'firefox':\n            browser = 'firefox';\n            break;\n        case browserName === null || browserName === void 0 ? void 0 : browserName.includes('safari'):\n            browser = 'safari';\n            break;\n        case browserName === null || browserName === void 0 ? void 0 : browserName.includes('opera'):\n            browser = 'opera';\n            break;\n    }\n    return {\n        os,\n        browser\n    };\n}\nfunction isOS(...os) {\n    return os.includes(getUserAgent().os);\n}\nfunction isBrowser(...browser) {\n    return browser.includes(getUserAgent().browser);\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXBtcProvider = void 0;\nconst _1 = require(\"./\");\nclass OKXBtcProvider {\n    constructor(generator) {\n        this.caip = [\n            \"btc:mainnet\",\n            \"fractal:mainnet\"\n        ];\n        this.provider = generator.getUniversalProvider();\n    }\n    getAddressForChainId(chainId) {\n        var _a, _b;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let accounts = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['btc']) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        });\n        if (accounts == undefined || accounts.length < 0) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `no connected account`);\n        }\n        let account = accounts[0];\n        const address = account.split(':')[2];\n        return address;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let extra = (_c = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[ns]) === null || _b === void 0 ? void 0 : _b.extra) === null || _c === void 0 ? void 0 : _c[chainId];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n        }\n        return {\n            address: this.getAddressForChainId(chainId),\n            publicKey: publicKey\n        };\n    }\n    /**\n     *\n     * @param signStr\n     * @param chainId\n     * @param type\n     * @returns\n     */\n    signMessage(chainId, signStr, type) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (signStr === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signMessage parmas error`);\n            }\n            let params = {\n                signStr: signStr,\n                from: this.getAddressForChainId(chainId)\n            };\n            if (type) {\n                params.type = type;\n            }\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signMessage\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param toAddress\n     * @param satoshis\n     * @param options { feeRate: 0 }\n     * @returns\n     */\n    sendBitcoin(chainId, toAddress, satoshis, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            let params = {\n                from: this.getAddressForChainId(chainId),\n                to: toAddress,\n                value: (satoshis / 100000000).toString(),\n            };\n            if (options === null || options === void 0 ? void 0 : options.feeRate) {\n                params[\"satBytes\"] = options.feeRate.toString();\n            }\n            let result = yield this.send(chainId, params);\n            if (result !== undefined && ('txhash' in result)) {\n                // return txhash directly\n                return result.txhash;\n            }\n            // or return unexpected result\n            return result;\n        });\n    }\n    //  from - string：当前连接的钱包的 BTC 地址\n    //  to - string：接受 BTC 的地址\n    //  value - string：发送 BTC 的数量\n    //  satBytes - string： (可选) 自定义费率\n    //  memo - string： (可选) 指定 outputs OP_RETURN 内容 示例\n    //  memoPos - number： (可选) 指定 outputs OP_RETURN 输出位置，如果传了 memo 则必须传入 memoPos 指定位置，否则 memo 不生效\n    send(chainId, input) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (!this.checkParameters(input, 'to', 'value')) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send parmas  error`);\n            }\n            input[\"from\"] = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: 'btc_send',\n                    params: input\n                }, chainId);\n                if ('result' in ret) {\n                    return {\n                        txhash: ret.result\n                    };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param psbtHex string 要签名的 psbt 的十六进制字符串\n     * @param options object { autoFinalized: 0 }\n     */\n    signPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.signPsbts(chainId, [psbtHex], [options]).then(psbtResults => {\n                    let results = JSON.parse(psbtResults);\n                    resolve(results[0]);\n                }).catch(error => {\n                    reject(error);\n                });\n            });\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHexs Array\n     * @param options Array [{ autoFinalized: 0 }]\n     * @returns\n     */\n    signPsbts(chainId, psbtHexs, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHexs === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHexs: psbtHexs,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signPsbts\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHex string\n     * @param options object\n     * @returns\n     */\n    signAndPushPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHex === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHex: psbtHex,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signAndPushPsbt\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return JSON.parse(ret.result);\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param address string, receiver address\n     * @param inscriptionId string, 铭文 ID + 协议，没有传协议则默认是 Ordinals NFT ，目前仅支持 Ordinals 及 Atomicals 协议\n     * @param options object, { feeRate: number } custom rates\n     */\n    sendInscription(chainId, address, inscriptionId, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let extension = {\n                address: address,\n                inscriptionId: inscriptionId,\n                options: options\n            };\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (address === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method sendInscription params error`);\n            }\n            var feeRate = 0;\n            if (options && ('feeRate' in options)) {\n                feeRate = options.feeRate;\n            }\n            let coinId = '';\n            let from = this.getAddressForChainId(chainId);\n            var protocolId = 7; //ProtocolIdBRCNFT\n            if (inscriptionId !== 'undefined') {\n                let atomicSuffix = \"-Atomicals\";\n                let ordinalsSuffix = \"-Ordinals\";\n                if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(atomicSuffix.toLowerCase())) {\n                    protocolId = 8; //WXRCProtocolIdARCNFT\n                    inscriptionId = this.removeSuffix(inscriptionId, atomicSuffix);\n                }\n                else if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(ordinalsSuffix.toLowerCase())) {\n                    inscriptionId = this.removeSuffix(inscriptionId, ordinalsSuffix);\n                }\n            }\n            let params = {\n                scenario: 5,\n                feeRate: feeRate,\n                txType: \"20\",\n                to: address,\n                batchBean: [\n                    {\n                        coinAmount: \"1\",\n                        nftId: inscriptionId,\n                        protocolId: protocolId,\n                        coinId: coinId,\n                        inscriptionId: \"\",\n                        from: from\n                    }\n                ],\n                extension: extension\n            };\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_sendInscription\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    removeSuffix(str, suffix) {\n        if (str.endsWith(suffix)) {\n            return str.slice(0, str.length - suffix.length);\n        }\n        return str;\n    }\n    checkParameters(params, ...keys) {\n        var unexistKeys = [];\n        keys.forEach(key => {\n            if (!(`${key}` in params)) {\n                unexistKeys.push(key);\n            }\n        });\n        if (unexistKeys.length > 0) {\n            console.log('not find key: ', unexistKeys.join(\",\"));\n            return false;\n        }\n        return true;\n    }\n    /**\n     *\n     * @param chainId eg. btc:mainnet\n     * @returns eg. btc\n     */\n    checkChainId(chainId) {\n        if (this.caip.includes(chainId)) {\n            let [namespaceKey, _] = chainId.split(\":\");\n            return namespaceKey;\n        }\n        return undefined;\n    }\n}\nexports.OKXBtcProvider = OKXBtcProvider;\nexports.default = OKXBtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCosmosProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXCosmosProvider {\n    constructor(provider) {\n        this.provider = provider.getUniversalProvider();\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e;\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[core_1.NameSpaceKeyCosmos]) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        let extra = (_e = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces[core_1.NameSpaceKeyCosmos]) === null || _d === void 0 ? void 0 : _d.extra) === null || _e === void 0 ? void 0 : _e[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n            console.log(\"aptos_publicKey\", publicKey);\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            algo: \"secp256k1\",\n            address: address,\n            bech32Address: address,\n            pubKey: this.hexToUint8Array(publicKey),\n        };\n    }\n    signArbitrary(chainId, signerAddress, data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const base64Encoded = window.btoa(data);\n            const signDoc = {\n                chain_id: \"\",\n                account_number: \"0\",\n                sequence: \"0\",\n                fee: {\n                    gas: \"0\",\n                    amount: []\n                },\n                msgs: [{\n                        \"type\": \"sign/MsgSignData\",\n                        \"value\": {\n                            \"signer\": signerAddress,\n                            \"data\": base64Encoded\n                        }\n                    }],\n                memo: \"\"\n            };\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signArbitrary\",\n                \"params\": {\n                    \"signer\": signerAddress,\n                    \"chain_id\": chainId.split(\":\")[1],\n                    \"data\": signDoc\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    if (typeof ret.result == \"string\") {\n                        return JSON.parse(ret.result);\n                    }\n                    else {\n                        return ret.result;\n                    }\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signAmino(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (signDoc.msgs[0].type == \"sign/MsgSignData\") {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signArbitrary\",\n                    \"params\": {\n                        \"signer\": signerAddress,\n                        \"chain_id\": chainId.split(\":\")[1],\n                        \"data\": signDoc\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        return ret.result;\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    return error;\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                }\n            }\n            else {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signAmino\",\n                    \"params\": {\n                        \"signer\": signerAddress,\n                        \"chainId\": chainId.split(\":\")[1],\n                        \"sign_doc\": signDoc,\n                        \"signOptions\": signOptions\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        const resData = JSON.parse(ret.result);\n                        console.log(\"signdoc\", signDoc, resData.signDoc);\n                        signDoc.fee = resData.signDoc.fee;\n                        return { signed: signDoc, signature: resData.signature };\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                    return error;\n                }\n            }\n        });\n    }\n    signDirect(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const object = {\n                bodyBytes: this.bufferToHex(signDoc.bodyBytes),\n                authInfoBytes: this.bufferToHex(signDoc.authInfoBytes),\n                chainId: signDoc.chainId,\n                accountNumber: signDoc.accountNumber ? signDoc.accountNumber.toString() : null,\n                signOptions: signOptions ? signOptions : null\n            };\n            let data = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signDirect\",\n                \"params\": {\n                    \"signer\": signerAddress,\n                    \"chainId\": chainId.split(\":\")[1],\n                    \"sign_doc\": object,\n                }\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    const res = JSON.parse(ret.result);\n                    console.log(\"signdirect result\", res);\n                    signDoc.authInfoBytes = this.messageToBuffer(res.signDoc.authInfoBytes);\n                    return { signed: signDoc, signature: res.signature };\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    messageToBuffer(message) {\n        var buffer = Uint8Array.from([]);\n        try {\n            if (typeof message === \"string\") {\n                buffer = this.hexToUint8Array(message.replace(\"0x\", \"\"));\n            }\n            else {\n                buffer = Uint8Array.from(message);\n            }\n        }\n        catch (err) {\n            console.log(`messageToBuffer error: ${err}`);\n        }\n        return buffer;\n    }\n    bufferToHex(arr) {\n        let output = [...new Uint8Array(arr)]\n            .map(x => x.toString(16).padStart(2, '0'))\n            .join('');\n        return '0x' + output;\n    }\n    hexToUint8Array(hexString) {\n        if (hexString.length % 2 !== 0) {\n            throw \"Invalid hexString\";\n        }\n        var arrayBuffer = new Uint8Array(hexString.length / 2);\n        for (var i = 0; i < hexString.length; i += 2) {\n            var byteValue = parseInt(hexString.substr(i, 2), 16);\n            if (isNaN(byteValue)) {\n                throw \"Invalid hexString\";\n            }\n            arrayBuffer[i / 2] = byteValue;\n        }\n        return arrayBuffer;\n    }\n}\nexports.OKXCosmosProvider = OKXCosmosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXStarknetProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXStarknetProvider {\n    constructor(provider) {\n        this.provider = provider.getUniversalProvider();\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e;\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[core_1.NameSpaceKeyStarknet]) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        let extra = (_e = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces[core_1.NameSpaceKeyStarknet]) === null || _d === void 0 ? void 0 : _d.extra) === null || _e === void 0 ? void 0 : _e[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address,\n            pubKey: publicKey\n        };\n    }\n    /**\n     *\n     * @param chainId\n     * @param signerAddress\n     * @param data: { types, primaryType, domain, message } as TypedData\n     * @returns [signedDataR, signedDataS]\n     */\n    signMessage(chainId, signerAddress, typedData) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (signerAddress.length == 0) {\n                signerAddress = this.getAccount(chainId)[\"address\"];\n            }\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"starknet_signMessage\",\n                \"params\": {\n                    \"accountAddress\": signerAddress,\n                    \"typedData\": typedData\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    console.log(\"=====> 签名结果result的类型：\", typeof ret.result);\n                    console.log(ret);\n                    let results = ret.result;\n                    if (typeof results == 'string') {\n                        results = JSON.parse(results);\n                    }\n                    console.log(ret);\n                    return [results[\"signedDataR\"], results[\"signedDataS\"]];\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     * sendTransaction\n     * @param chainId\n     * @param signerAddress\n     * @param transaction\n     * @returns { transaction_hash }\n     */\n    sendTransaction(chainId, signerAddress, transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let transactionData = {\n                \"accountAddress\": signerAddress,\n                \"executionRequest\": transaction\n            };\n            let data = {\n                \"method\": \"starknet_sendTransaction\",\n                \"params\": {\n                    \"data\": JSON.stringify(transactionData),\n                    \"from\": signerAddress\n                }\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return { transaction_hash: ret.result };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     *\n     * signMessage老API\n     * @param chainId\n     * @param payload\n     * @returns {transaction_hash, class_hash}\n     */\n    signMessageDeclareContractPayload(chainId, payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let data = {\n                    \"method\": \"starknet_signMessage\",\n                    \"params\": payload\n                };\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    console.log(\"=====> (旧API)签名结果result的类型：\", typeof ret.result);\n                    console.log(ret);\n                    return {\n                        \"transaction_hash\": ret.result[\"txHash\"],\n                        \"class_hash\": ret.result[\"classHash\"]\n                    };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     * sendTransaction老API\n     * @param chainId\n     * @param signerAddress\n     * @param calls\n     * @param abis\n     * @param transactionsDetail\n     * @returns { transaction_hash }\n     */\n    /// todo： \n    /// 修改方法名\n    /// chainId 放后面\n    sendMessageExecuteTransactionDetail(chainId, signerAddress, calls, abis, transactionsDetail) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const transactions = Array.isArray(calls) ? calls : [calls];\n            const executionRequest = {\n                \"calls\": transactions,\n                \"abis\": abis,\n                \"transactionsDetail\": {\n                    \"nonce\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.nonce,\n                    \"maxFee\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.nonce,\n                    \"version\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.version,\n                }\n            };\n            return this.sendTransaction(chainId, signerAddress, executionRequest);\n        });\n    }\n}\nexports.OKXStarknetProvider = OKXStarknetProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTonProvider = void 0;\nconst _1 = require(\"./\");\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXTonProvider {\n    constructor(generator) {\n        this.statusChangeSubscriptions = [];\n        this.statusChangeErrorSubscriptions = [];\n        this.provider = generator.getUniversalProvider();\n        this.provider.on(\"connect\", () => {\n            let tonWallet = this.wallet();\n            (0, core_1.logDebug)(\"OKXTONProvider event connect:\", JSON.stringify(tonWallet));\n            this.statusChangeSubscriptions.forEach(callback => callback(tonWallet));\n        });\n        this.provider.on(\"reconnect\", () => {\n            let tonWallet = this.wallet();\n            (0, core_1.logDebug)(\"OKXTONProvider event reconnect:\", JSON.stringify(tonWallet));\n            this.statusChangeSubscriptions.forEach(callback => callback(tonWallet));\n        });\n        this.provider.on(\"disconnect\", () => {\n            (0, core_1.logDebug)(\"OKXTONProvider event disconnect:\");\n            this.statusChangeSubscriptions.forEach(callback => callback(null));\n        });\n        this.provider.on(\"connect_error\", (error) => {\n            (0, core_1.logDebug)(\"OKXTONProvider event connect_error:\", JSON.stringify(error));\n            this.statusChangeErrorSubscriptions.forEach(errorsHandler => errorsHandler(error));\n        });\n    }\n    connected() {\n        if (this.provider.connected()) {\n            return !!this.provider.session.namespaces[\"ton\"];\n        }\n        return false;\n    }\n    account() {\n        try {\n            if (!this.provider.session) {\n                return null;\n            }\n            let tonNameSpace = this.provider.session.namespaces['ton'];\n            if (!tonNameSpace || !tonNameSpace.payload || !tonNameSpace.payload.ton_addr) {\n                return null;\n            }\n            let ton_addr = tonNameSpace.payload.ton_addr;\n            return {\n                address: ton_addr.address,\n                chain: ton_addr.network,\n                walletStateInit: ton_addr.walletStateInit,\n                publicKey: ton_addr.publicKey,\n            };\n        }\n        catch (e) {\n            (0, core_1.logDebug)(\"OKXTONProvider account  error:\", JSON.stringify(e));\n            return null;\n        }\n    }\n    wallet() {\n        if (this.connected()) {\n            try {\n                let sessionWallet = this.provider.session.wallet;\n                let tonDeviceInfo = {\n                    platform: sessionWallet.platform,\n                    appName: sessionWallet.appName,\n                    appVersion: sessionWallet.appVersion,\n                    maxProtocolVersion: sessionWallet.maxProtocolVersion,\n                    features: ['ton_sendTransaction'],\n                };\n                const wallet = {\n                    device: tonDeviceInfo,\n                    provider: \"http\",\n                    account: this.account()\n                };\n                let tonNameSpace = this.provider.session.namespaces['ton'];\n                if (tonNameSpace && tonNameSpace.payload && tonNameSpace.payload.ton_proof) {\n                    wallet.connectItems = {\n                        tonProof: tonNameSpace.payload.ton_proof\n                    };\n                }\n                (0, core_1.logDebug)(\"OKXTONProvider wallet :\", JSON.stringify(wallet));\n                return wallet;\n            }\n            catch (e) {\n                (0, core_1.logDebug)(\"OKXTONProvider wallet  error:\", JSON.stringify(e));\n                return null;\n            }\n        }\n        return null;\n    }\n    onStatusChange(callback, errorsHandler) {\n        this.statusChangeSubscriptions.push(callback);\n        if (errorsHandler) {\n            this.statusChangeErrorSubscriptions.push(errorsHandler);\n        }\n        return () => {\n            this.statusChangeSubscriptions = this.statusChangeSubscriptions.filter(item => item !== callback);\n            if (errorsHandler) {\n                this.statusChangeErrorSubscriptions = this.statusChangeErrorSubscriptions.filter(item => item !== errorsHandler);\n            }\n        };\n    }\n    sendTransaction(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (transaction.network && transaction.network !== core_1.TONCHAIN.MAINNET) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, 'OKXTONProvider sendTransaction network error');\n            }\n            if (!transaction.network) {\n                transaction.network = core_1.TONCHAIN.MAINNET;\n            }\n            if (this.provider.session) {\n                if (!transaction.from) {\n                    const accounts = this.provider.requestAccountsWithNamespace('ton');\n                    transaction.from = accounts[0];\n                }\n            }\n            const requestParams = {\n                method: \"ton_sendTransaction\",\n                params: transaction,\n            };\n            let chain = 'ton:' + core_1.TONCHAIN.MAINNET;\n            (0, core_1.logDebug)(\"OKXTONProvider sendTransaction transaction----:\", chain, JSON.stringify(requestParams));\n            return this.provider.request(requestParams, chain);\n        });\n    }\n}\nexports.OKXTonProvider = OKXTonProvider;\nexports.default = OKXTonProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTronProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXTronProvider {\n    constructor(provider) {\n        this.provider = provider.getUniversalProvider();\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e;\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[core_1.NameSpaceKeyTron]) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        let extra = (_e = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces[core_1.NameSpaceKeyTron]) === null || _d === void 0 ? void 0 : _d.extra) === null || _e === void 0 ? void 0 : _e[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address\n        };\n    }\n    stringToHex(str) {\n        let hex = '';\n        for (let i = 0; i < str.length; i++) {\n            hex += str.charCodeAt(i).toString(16).padStart(2, '0');\n        }\n        return hex;\n    }\n    signMessage(chainId, data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"tron_signMessage\",\n                \"params\": {\n                    \"message\": this.stringToHex(data)\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signMessageV2(chainId, data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"tron_signMessageV2\",\n                \"params\": {\n                    \"message\": data\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signTransaction(chainId, transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let data = {\n                \"method\": \"tron_signTransaction\",\n                \"params\": transaction\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    let signedTx;\n                    if (typeof ret.result == \"string\") {\n                        signedTx = JSON.parse(ret.result);\n                    }\n                    else {\n                        signedTx = ret.result;\n                    }\n                    let realSignTx = {};\n                    realSignTx.visible = signedTx.visible;\n                    realSignTx.txID = signedTx.txID;\n                    let rawData = {};\n                    rawData.contract = signedTx.raw_data.contract;\n                    rawData.expiration = signedTx.raw_data.expiration;\n                    rawData.ref_block_bytes = signedTx.raw_data.ref_block_bytes;\n                    rawData.ref_block_hash = signedTx.raw_data.ref_block_hash;\n                    rawData.timestamp = signedTx.raw_data.timestamp;\n                    realSignTx.raw_data = rawData;\n                    realSignTx.raw_data_hex = signedTx.raw_data_hex;\n                    realSignTx.signature = signedTx.signature;\n                    return realSignTx;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signAndSendTransaction(chainId, transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let data = {\n                \"method\": \"tron_signAndSendTransaction\",\n                \"params\": transaction\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n}\nexports.OKXTronProvider = OKXTronProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXUniversalProvider = void 0;\nconst eip155_1 = require(\"./provider/providers/eip155\");\nconst sui_1 = require(\"./provider/providers/sui\");\nconst constants_1 = require(\"./provider/constants\");\nconst eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\nconst client_1 = require(\"./packages/sign-client/client\");\nconst core_1 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"./packages/utils/namespaces\");\nconst solana_1 = __importDefault(require(\"./provider/providers/solana\"));\nconst btc_1 = __importDefault(require(\"./provider/providers/btc\"));\nconst aptos_1 = __importDefault(require(\"./provider/providers/aptos\"));\nconst ton_1 = __importDefault(require(\"./provider/providers/ton\"));\nconst cosmos_1 = __importDefault(require(\"./provider/providers/cosmos\"));\nconst tron_1 = __importDefault(require(\"./provider/providers/tron\"));\nconst starknet_1 = __importDefault(require(\"./provider/providers/starknet\"));\nclass OKXUniversalProvider {\n    static init(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider init() called');\n            let provider;\n            if (window && window.okxConnectUniversalinwindow && window.okxConnectUniversalinwindow instanceof OKXUniversalProvider) {\n                (0, core_1.logDebug)('OKXUniversalConnect init() old called');\n                provider = window.okxConnectUniversalinwindow;\n            }\n            else {\n                (0, core_1.logDebug)('OKXUniversalConnect init() new called');\n                provider = new OKXUniversalProvider(opts);\n                yield provider.initialize();\n                if (window) {\n                    window.okxConnectUniversalinwindow = provider;\n                }\n            }\n            return provider;\n        });\n    }\n    getUniversalProvider() {\n        return this;\n    }\n    constructor(opts) {\n        this.rpcProviders = {};\n        this.events = new eventemitter3_1.default();\n        this.providerOpts = opts;\n    }\n    request(args, chain) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider request() called');\n            if (!this.connected()) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return yield this.getProvider(namespace).request(requestParam);\n        });\n    }\n    buildRequestParamFromRequest(args, chain) {\n        (0, core_1.logDebug)(\"UniversalProvider request args >>>: \", chain, JSON.stringify(args));\n        let [namespace, chainId] = this.validateChain(chain);\n        if (!this.session) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Please call connect() before request()\");\n        }\n        let keyArr = Object.keys(this.session.namespaces);\n        if (!chain && keyArr && keyArr.length > 1) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Multiple chains have been linked, the request method requires chain`);\n        }\n        (0, core_1.logDebug)(\"UniversalProvider request >>args>>>: \", args);\n        if (namespace == \"aptos\" && chainId == \"mainnet\") {\n            namespace = \"aptos\";\n            chainId = \"637\";\n        }\n        if (namespace == \"movement\" && chainId == \"testnet\") {\n            namespace = \"aptos\";\n            chainId = \"70000060\";\n        }\n        const requestParam = Object.assign(Object.assign({}, args), { chainId: `${namespace}:${chainId}` });\n        return { namespace, requestParam };\n    }\n    enable() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.client) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (!this.session) {\n                if (this.connectOpts) {\n                    yield this.connect(this.connectOpts);\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n                }\n            }\n            const accounts = yield this.requestAccounts();\n            return accounts;\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider disconnect() called');\n            if (!this.session) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n                let called = false;\n                const onRequestSent = () => __awaiter(this, void 0, void 0, function* () {\n                    if (!called) {\n                        called = true;\n                        yield this.disconnectAndEmit();\n                        yield this.cleanup();\n                        resolve();\n                        (0, core_1.logDebug)(\"UniversalProvider disconnect Disconnected\");\n                    }\n                });\n                try {\n                    yield this.client.disconnect();\n                    yield onRequestSent();\n                }\n                catch (e) {\n                    yield onRequestSent();\n                }\n            }));\n        });\n    }\n    disconnectAndEmit() {\n        var _a, _b;\n        this.client.engine.connectionManager.disconnect();\n        this.events.emit(\"disconnect\", { topic: (_a = this.session) === null || _a === void 0 ? void 0 : _a.topic });\n        this.events.emit(\"session_delete\", { topic: (_b = this.session) === null || _b === void 0 ? void 0 : _b.topic });\n    }\n    aptosChainNameToGeneralId(chainId) {\n        if (chainId == \"aptos:mainnet\") {\n            return \"aptos:637\";\n        }\n        else if (chainId == \"movement:testnet\") {\n            return \"aptos:70000060\";\n        }\n        else {\n            return chainId;\n        }\n    }\n    replaceAptos(opts) {\n        var _a, _b;\n        let aptosNameSpace = (_a = opts.namespaces) === null || _a === void 0 ? void 0 : _a[\"aptos\"];\n        if (aptosNameSpace != undefined) {\n            let realNS = this.replaceAptosInner(aptosNameSpace);\n            if (opts.namespaces != undefined && \"aptos\" in opts.namespaces && realNS != undefined) {\n                opts.namespaces.aptos = realNS;\n            }\n        }\n        let optionAptosNameSpace = (_b = opts.optionalNamespaces) === null || _b === void 0 ? void 0 : _b[\"aptos\"];\n        if (optionAptosNameSpace != undefined) {\n            let realOptionNS = this.replaceAptosInner(optionAptosNameSpace);\n            if (opts.optionalNamespaces != undefined && \"aptos\" in opts.optionalNamespaces && realOptionNS != undefined) {\n                opts.optionalNamespaces.aptos = realOptionNS;\n            }\n        }\n        return opts;\n    }\n    replaceAptosInner(aptosNameSpace) {\n        var _a;\n        if (aptosNameSpace != undefined) {\n            aptosNameSpace.chains = (_a = aptosNameSpace.chains) === null || _a === void 0 ? void 0 : _a.map(chainId => {\n                return this.aptosChainNameToGeneralId(chainId);\n            });\n            if (aptosNameSpace.defaultChain != undefined) {\n                aptosNameSpace.defaultChain = this.aptosChainNameToGeneralId(aptosNameSpace.defaultChain);\n            }\n        }\n        return aptosNameSpace;\n    }\n    replaceAptosGeneralIdWithNetName(chainId) {\n        if (chainId.includes(\"aptos:637\")) {\n            chainId = chainId.replace(\"aptos:637\", \"aptos:mainnet\");\n        }\n        else if (chainId.includes(\"aptos:70000060\")) {\n            chainId = chainId.replace(\"aptos:70000060\", \"movement:testnet\");\n        }\n        return chainId;\n    }\n    replaceSessionAptos(session) {\n        var _a;\n        let namespaces = (_a = session === null || session === void 0 ? void 0 : session.namespaces) === null || _a === void 0 ? void 0 : _a[\"aptos\"];\n        if (namespaces != undefined && namespaces.chains != undefined) {\n            namespaces.chains = namespaces.chains.map(chain => {\n                return this.replaceAptosGeneralIdWithNetName(chain);\n            });\n            namespaces.accounts = namespaces.accounts.map((account) => {\n                return this.replaceAptosGeneralIdWithNetName(account);\n            });\n            let extra = {};\n            Object.keys(namespaces.extra || {}).forEach((key, index) => {\n                let newKey = this.replaceAptosGeneralIdWithNetName(key);\n                extra[this.replaceAptosGeneralIdWithNetName(key)] = Object.values((session === null || session === void 0 ? void 0 : session.namespaces[\"aptos\"].extra) || {})[index];\n            });\n            namespaces.extra = extra;\n        }\n        (0, core_1.logDebug)(\"replaceSessionAptos\", session);\n    }\n    connected() {\n        (0, core_1.logDebug)('OKXUniversalProvider connected() called');\n        let disconnectInner = () => {\n            try {\n                this.cleanup();\n                this.client.engine.connectionManager.disconnect();\n            }\n            catch (e) {\n                (0, core_1.logDebug)(\"Error during disconnect:\", e);\n            }\n        };\n        try {\n            if (!this.session)\n                return false;\n            if (!this.client.engine.connectionManager.getCurrentConnectionReady()) {\n                disconnectInner();\n                return false;\n            }\n            return true;\n        }\n        catch (e) {\n            disconnectInner();\n            return false;\n        }\n    }\n    connect(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider connect() called');\n            if (!this.client) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (this.connected()) {\n                return this.session;\n            }\n            opts = this.replaceAptos(opts);\n            (0, core_1.logDebug)(`OKXUniversalProvider connect >>>>`, JSON.stringify(opts));\n            if (opts.sessionConfig === undefined) {\n                opts.sessionConfig = {};\n            }\n            if (opts.sessionConfig.openUniversalUrl === undefined) {\n                opts.sessionConfig.openUniversalUrl = (0, core_1.isMobileUserAgent)();\n            }\n            this.setNamespaces(opts);\n            try {\n                (0, core_1.logDebug)(`UniversalProvider connect opts.stringify ====> ${JSON.stringify(opts)}`);\n                let session = yield this.client.connect(opts);\n                this.replaceSessionAptos(session);\n                (0, core_1.logDebug)(`UniversalProvider connect success ====> ${JSON.stringify(session)}`);\n                if (session) {\n                    this.session = session;\n                    this.onConnect();\n                    return session;\n                }\n                return undefined;\n            }\n            catch (error) {\n                (0, core_1.logDebug)(`UniversalProvider connect error ====> `, JSON.stringify(error));\n                throw error;\n            }\n        });\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    setDefaultChain(chain, rpcUrl) {\n        (0, core_1.logDebug)('OKXUniversalProvider setDefaultChain() called');\n        // chain = this.aptosChainNameToGeneralId(chain)\n        try {\n            // ignore without active session\n            if (!this.connected())\n                return;\n            const [namespace, chainId] = this.validateChain(chain);\n            const provider = this.getProvider(namespace);\n            provider.setDefaultChain(chainId, rpcUrl);\n        }\n        catch (error) {\n            // ignore the error if the fx is used prematurely before namespaces are set\n            if (!/Please call connect/.test(error.message))\n                throw error;\n        }\n    }\n    checkStorage() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let sessionInfoStr = yield this.getFromStore(\"connectSession\");\n            (0, core_1.logDebug)(sessionInfoStr);\n            if (sessionInfoStr) {\n                let sessionInfo = sessionInfoStr;\n                this.session = sessionInfo;\n                this.client.session = this.session;\n                this.sessionConfig = sessionInfo.sessionConfig;\n                this.client.sessionConfig = this.sessionConfig;\n                (0, core_1.logDebug)('[evm u-provider] do reconnection', this.session);\n                yield this.client.restoreconnect(sessionInfo);\n                this.createProviders();\n                this.registerEventListeners();\n                setTimeout(() => {\n                    this.events.emit(\"reconnect\", { session: this.session });\n                }, 100);\n                this.registerEventListeners();\n            }\n        });\n    }\n    initialize() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider initialize() called');\n            const data = Object.assign({ url: window.location.hostname, origin: window.location.origin }, this.providerOpts.dappMetaData);\n            this.client = new client_1.SignClient(data, this.events);\n            yield this.checkStorage();\n        });\n    }\n    createProviders() {\n        if (!this.client) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n        }\n        if (!this.connected()) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Session not initialized. Please call connect() before enable()\");\n        }\n        const providersToCreate = [\n            ...new Set(Object.keys(this.session.namespaces).map((namespace) => (0, namespaces_1.parseNamespaceKey)(namespace))),\n        ];\n        providersToCreate.forEach((namespace) => {\n            if (!this.session)\n                return;\n            const namespacesValue = this.session.namespaces;\n            const currentNameSpace = namespacesValue[namespace];\n            (0, core_1.logDebug)(\"init eip155 >> \", currentNameSpace);\n            switch (namespace) {\n                case \"eip155\":\n                    const opts = {\n                        namespace: currentNameSpace\n                    };\n                    this.rpcProviders[namespace] = new eip155_1.Eip155Provider(opts, this.client, this.events);\n                    break;\n                case \"solana\":\n                    const opts1 = {\n                        namespace: currentNameSpace\n                    };\n                    let solanaProvider = new solana_1.default(opts1, \"solana\", this.client, this.events);\n                    this.rpcProviders[namespace] = solanaProvider;\n                    let sonicProvider = new solana_1.default(opts1, \"sonic\", this.client, this.events);\n                    this.rpcProviders['sonic'] = sonicProvider;\n                    let svmProvider = new solana_1.default(opts1, \"svm\", this.client, this.events);\n                    this.rpcProviders['svm'] = svmProvider;\n                    // this.rpcProviders[namespace] = new SolanaProvider(opts1, () => { return this.session; });\n                    break;\n                case \"ton\":\n                    const optsTon = {\n                        namespace: currentNameSpace\n                    };\n                    let tonProvider = new ton_1.default(optsTon, this.client, this.events);\n                    this.rpcProviders[namespace] = tonProvider;\n                    break;\n                case \"sui\":\n                    const optsSui = {\n                        namespace: currentNameSpace\n                    };\n                    let suiProvider = new sui_1.SuiProvider(optsSui, this.client, this.events);\n                    suiProvider.name = \"sui\";\n                    this.rpcProviders[namespace] = suiProvider;\n                    break;\n                case \"btc\":\n                    const optsBtc = {\n                        namespace: currentNameSpace\n                    };\n                    let btcProvider = new btc_1.default(optsBtc, \"btc\", this.client, this.events);\n                    this.rpcProviders[\"btc\"] = btcProvider;\n                    let fbProvider = new btc_1.default(optsBtc, \"fractal\", this.client, this.events);\n                    this.rpcProviders[\"fractal\"] = fbProvider;\n                    break;\n                case \"aptos\":\n                    let aptosProvider = new aptos_1.default({\n                        namespace: currentNameSpace\n                    }, \"aptos\", this.client, this.events);\n                    this.rpcProviders[namespace] = aptosProvider;\n                    let moveProvider = new aptos_1.default({\n                        namespace: currentNameSpace\n                    }, \"movement\", this.client, this.events);\n                    this.rpcProviders[\"movement\"] = moveProvider;\n                    break;\n                case \"cosmos\":\n                    let cosmosProvider = new cosmos_1.default({\n                        namespace: currentNameSpace\n                    }, this.client, this.events);\n                    this.rpcProviders[namespace] = cosmosProvider;\n                    break;\n                case \"tron\":\n                    let tronProvider = new tron_1.default({\n                        namespace: currentNameSpace\n                    }, this.client, this.events);\n                    this.rpcProviders[namespace] = tronProvider;\n                    break;\n                case \"starknet\":\n                    let starknetProvider = new starknet_1.default({\n                        namespace: currentNameSpace\n                    }, \"starknet\", this.client, this.events);\n                    this.rpcProviders[namespace] = starknetProvider;\n                    break;\n            }\n        });\n    }\n    registerEventListeners() {\n        if (typeof this.client === \"undefined\") {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client is not initialized\");\n        }\n        this.client.engine.addDisconnectListener(() => {\n            this.disconnectAndEmit();\n            this.cleanup();\n        });\n        this.on(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, (caip2ChainId) => {\n            this.onChainChanged(caip2ChainId);\n        });\n        this.on(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, (nameSpaces) => {\n            if (nameSpaces) {\n                const nameSpacekey = Object.keys(nameSpaces)[0];\n                if (this.session) {\n                    this.session.namespaces[nameSpacekey] = nameSpaces[nameSpacekey];\n                    if (this.session) {\n                        this.persist(\"connectSession\", this.session);\n                        this.events.emit(\"session_update\", this.session);\n                    }\n                    (0, core_1.logDebug)(\"PROVIDER_EVENTS.UPDATE_NAMESPACES this.session... ->>>\", JSON.stringify(this.session));\n                }\n            }\n        });\n    }\n    getProvider(namespace) {\n        (0, core_1.logDebug)('current get providers', this.rpcProviders);\n        (0, core_1.logDebug)('query namespace: ', namespace);\n        return this.rpcProviders[namespace];\n    }\n    setNamespaces(params) {\n        this.connectOpts = params;\n        const { namespaces, sessionConfig } = params;\n        const data = {\n            origin: window.location.origin,\n            url: window.location.hostname,\n            name: this.providerOpts.dappMetaData.name,\n            icon: this.providerOpts.dappMetaData.icon,\n        };\n        this.sessionConfig = {\n            dappInfo: data,\n            openUniversalUrl: sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.openUniversalUrl,\n            redirect: sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect,\n        };\n        (0, core_1.logDebug)(\"setNamespaces sessionConfig>>>\", this.sessionConfig);\n        this.client.sessionConfig = this.sessionConfig;\n        this.persist(\"sessionConfig\", sessionConfig);\n    }\n    validateChain(chain) {\n        var _a;\n        let [namespace, chainId] = (chain === null || chain === void 0 ? void 0 : chain.split(\":\")) || [\"\", \"\"];\n        if (!this.session || !this.session.namespaces || !Object.keys(this.session.namespaces).length) {\n            (0, core_1.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        if (namespace) {\n            if (!this.isChainNamespaceInSession(namespace)) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace '${namespace}' is not configured. Please call connect() first with namespace config.`);\n            }\n            if (chainId && chain) {\n                (0, core_1.logDebug)('this.session.namespaces -->> ', namespace, JSON.stringify(this.session.namespaces));\n                const chainsArr = (_a = this.session.namespaces[namespace]) === null || _a === void 0 ? void 0 : _a.chains;\n                (0, core_1.logDebug)('get chainsArr & chain', JSON.stringify(chainsArr), chain);\n                if (chainsArr && !chainsArr.includes(chain)) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace not include the chain '${chain}'`);\n                }\n            }\n        }\n        if (namespace && chainId) {\n            (0, core_1.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        let defaultNamespace = (0, namespaces_1.parseNamespaceKey)(Object.keys(this.session.namespaces)[0]);\n        const defaultChain = this.rpcProviders[defaultNamespace].getDefaultChain();\n        (0, core_1.logDebug)('get default chain:', defaultChain);\n        return [defaultNamespace, defaultChain];\n    }\n    isChainNamespaceInSession(namespaceStr) {\n        var _a, _b;\n        if (Object.keys(((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces) || {})\n            .map((key) => (0, namespaces_1.parseNamespaceKey)(key))\n            .includes(namespaceStr)) {\n            return true;\n        }\n        let isChainNamespaceInSession = false;\n        Object.values(((_b = this.session) === null || _b === void 0 ? void 0 : _b.namespaces) || {})\n            .forEach(namespace => {\n            namespace.chains.forEach(chain => {\n                if (chain.split(\":\")[0] == namespaceStr) {\n                    isChainNamespaceInSession = true;\n                }\n            });\n        });\n        return isChainNamespaceInSession;\n    }\n    requestAccountsWithNamespace(namespace) {\n        return this.getProvider(namespace).requestAccounts();\n    }\n    requestDefaultChainWithNamespace(namespace) {\n        return this.getProvider(namespace).getDefaultChain();\n    }\n    requestAccounts() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const [namespace] = this.validateChain();\n            return yield this.getProvider(namespace).requestAccounts();\n        });\n    }\n    onChainChanged(caip2Chain) {\n        var _a;\n        if (!((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces))\n            return;\n        const [namespace, chainId] = this.validateChain(caip2Chain);\n        if (!chainId)\n            return;\n        if (this.session.namespaces[namespace]) {\n            this.session.namespaces[namespace].defaultChain = chainId;\n            this.persist(\"connectSession\", this.session);\n        }\n        this.events.emit(\"chainChanged\", chainId);\n    }\n    onConnect() {\n        this.createProviders();\n        if (this.session) {\n            this.persist(\"connectSession\", this.session);\n        }\n        this.events.emit(\"connect\", { session: this.session });\n        this.registerEventListeners();\n    }\n    cleanup() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.session = undefined;\n            this.sessionProperties = undefined;\n            this.persist(\"optionalNamespaces\", undefined);\n            this.persist(\"sessionProperties\", undefined);\n            this.persist(\"connectSession\", undefined);\n        });\n    }\n    persist(key, data) {\n        (0, core_1.logDebug)('[evm u-provider] persisit data', key, data);\n        return this.client.engine.connectionManager.saveSessionContent(key, data);\n    }\n    getFromStore(key) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.client.engine.connectionManager.getSessionContent(key);\n        });\n    }\n    showRequestModal(args, chain) {\n        try {\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return this.getProvider(namespace).showRequestModal(requestParam);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n}\nexports.OKXUniversalProvider = OKXUniversalProvider;\nexports.default = OKXUniversalProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXStarknetProvider = exports.OKXTronProvider = exports.OKXTonProvider = exports.OKXCosmosProvider = exports.OKXBtcProvider = exports.OKXUniversalProvider = void 0;\n__exportStar(require(\"./provider/types\"), exports);\nvar OKXUniversalProvider_1 = require(\"./OKXUniversalProvider\");\nObject.defineProperty(exports, \"OKXUniversalProvider\", { enumerable: true, get: function () { return OKXUniversalProvider_1.OKXUniversalProvider; } });\nvar OKXBtcProvider_1 = require(\"./OKXBtcProvider\");\nObject.defineProperty(exports, \"OKXBtcProvider\", { enumerable: true, get: function () { return OKXBtcProvider_1.OKXBtcProvider; } });\nvar OKXCosmosProvider_1 = require(\"./OKXCosmosProvider\");\nObject.defineProperty(exports, \"OKXCosmosProvider\", { enumerable: true, get: function () { return OKXCosmosProvider_1.OKXCosmosProvider; } });\nvar OKXTonProvider_1 = require(\"./OKXTonProvider\");\nObject.defineProperty(exports, \"OKXTonProvider\", { enumerable: true, get: function () { return OKXTonProvider_1.OKXTonProvider; } });\nvar OKXTronProvider_1 = require(\"./OKXTronProvider\");\nObject.defineProperty(exports, \"OKXTronProvider\", { enumerable: true, get: function () { return OKXTronProvider_1.OKXTronProvider; } });\nvar OKXStarknetProvider_1 = require(\"./OKXStarknetProvider\");\nObject.defineProperty(exports, \"OKXStarknetProvider\", { enumerable: true, get: function () { return OKXStarknetProvider_1.OKXStarknetProvider; } });\n__exportStar(require(\"@okxconnect/core\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SignClient = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"../utils/namespaces\");\nconst ConnectMethodUtils_1 = require(\"../utils/ConnectMethodUtils\");\nclass SignClient extends core_1.ISignClient {\n    constructor(metaData, events) {\n        super(metaData);\n        this.engine = new core_1.Engine(new core_1.ConnectionManager());\n        // ---------- Engine ----------------------------------------------- //\n        this.connect = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    var connectRequest = [];\n                    (0, core_1.logDebug)(`client connect params >>>`, JSON.stringify(params));\n                    var requestAccountItem = {\n                        name: \"requestAccounts\",\n                        requiredNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.namespaces),\n                        optionalNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.optionalNamespaces),\n                    };\n                    if (params.connectMethods) {\n                        requestAccountItem.connectRequestMethods = yield (0, ConnectMethodUtils_1.connectMethodsToConnectWalletMethods)(params.connectMethods, requestAccountItem.requiredNamespaces);\n                    }\n                    connectRequest.push(requestAccountItem);\n                    (0, core_1.logDebug)(`client connect connectRequest >>>`, JSON.stringify(connectRequest));\n                    this.engine.universalConnect(connectRequest, Object.assign({ dappInfo: this.metadata }, params.sessionConfig), (info) => {\n                        if (info && info.connectRequest) {\n                            var encodeParams = (0, core_1.encodeConnectParams)(info.connectRequest);\n                            (0, core_1.logDebug)(`universalConect encodeParams:`, encodeParams);\n                            (0, core_1.logDebug)(`universalConect url:`, (0, core_1.getUniversalLink)((0, core_1.getAppWalletDeepLink)(encodeParams)));\n                            this.events.emit(\"display_uri\", (0, core_1.getUniversalLink)((0, core_1.getAppWalletDeepLink)(encodeParams)));\n                            (0, core_1.logDebug)(`universalConect EngineConnectInfo  ${JSON.stringify(info)}`);\n                            this.events.emit(\"okx_engine_connect_params\", info);\n                        }\n                    }).then((session) => __awaiter(this, void 0, void 0, function* () {\n                        (0, namespaces_1.fillParamsToSession)(session, params.namespaces, params.optionalNamespaces, this.sessionConfig);\n                        (0, core_1.logDebug)(`signClient: connect: session ${JSON.stringify(session)}`);\n                        if (params.connectMethods) {\n                            yield (0, ConnectMethodUtils_1.connectMethodsResponseUpdate)(session, params.connectMethods);\n                        }\n                        resolve(session);\n                    })).catch((e) => {\n                        (0, core_1.logDebug)(`signClient: connect: catch ${JSON.stringify(e)}`);\n                        this.events.emit(\"connect_error\", e);\n                        reject(e);\n                    });\n                }\n                catch (error) {\n                    (0, core_1.logDebug)(`signClient: connect:  ${JSON.stringify(error)}`);\n                    reject(error);\n                }\n            }));\n        });\n        this.restoreconnect = (sessionConfig) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.restoreconnect(sessionConfig, (session) => {\n                    resolve(session);\n                });\n            });\n        });\n        this.reject = (params) => __awaiter(this, void 0, void 0, function* () {\n            //   try {\n            //     return await this.engine.reject(params);\n            //   } catch (error: any) {\n            //     this.logger.error(error.message);\n            //     throw error;\n            //   }\n        });\n        //\n        // public update: ISignClient[\"update\"] = async (params) => {\n        //   return\n        // //   try {\n        // //     return await this.engine.update(params);\n        // //   } catch (error: any) {\n        // //     this.logger.error(error.message);\n        // //     throw error;\n        // //   }\n        // };\n        this.request = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                (0, core_1.logDebug)(\"clint request --params>>>> >\", this.engine.connectionManager.getCurrentConnectionReady(), (_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl, JSON.stringify(params));\n                try {\n                    // this.sessionConfig\n                    if (((_b = this.sessionConfig) === null || _b === void 0 ? void 0 : _b.openUniversalUrl) && (0, core_1.isIos)()) {\n                        this.openOKXWallet();\n                    }\n                    yield this.engine.send(params, {\n                        resolve: (response) => {\n                            delete response.requestId;\n                            (0, core_1.logDebug)(\"clint request --response >\", JSON.stringify(response));\n                            if (('error' in response) && response.error) {\n                                let error = response.error;\n                                reject(new core_1.OKXConnectError(response.error.code, response.method + \":\" + error.message));\n                            }\n                            else {\n                                resolve(response);\n                            }\n                        },\n                        onAck: () => {\n                            var _a;\n                            if (!(0, core_1.isIos)() && ((_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl)) {\n                                this.openOKXWallet();\n                            }\n                        }\n                    });\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }));\n        });\n        // public emit: ISignClient[\"emit\"] = async (params) => {\n        //     try {\n        //         // return await this.engine.emit(params);\n        //     } catch (error: any) {\n        //         throw error;\n        //     }\n        // };\n        this.disconnect = () => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.send({\n                    method: \"disconnect\"\n                }, {\n                    onAck: () => {\n                        resolve();\n                    }\n                }).catch((error) => {\n                    console.log(`disconnect : ${JSON.stringify(error)}`);\n                    reject(error);\n                });\n            });\n        });\n        this.events = events;\n        this.metadata = metaData;\n    }\n    openOKXWallet() {\n        // if (this.openUniversalUrl){\n        (0, core_1.logDebug)('bridge-provider ==>> connect_5');\n        (0, core_1.openOKXDeeplink)(core_1.standardDeeplink);\n        // }\n    }\n}\nexports.SignClient = SignClient;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.connectSupportMethods = void 0;\nexports.connectMethodsResponseUpdate = connectMethodsResponseUpdate;\nexports.connectMethodsToConnectWalletMethods = connectMethodsToConnectWalletMethods;\nconst core_1 = require(\"@okxconnect/core\");\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst uint8array_extras_1 = require(\"uint8array-extras\");\nfunction isArray(value) {\n    return typeof value === \"object\" && value !== null && Array.isArray(value);\n}\nfunction isRecord(value) {\n    return typeof value === \"object\" && value !== null && !Array.isArray(value);\n}\nexports.connectSupportMethods = Object.freeze([\n    \"wallet_addEthereumChain\",\n    \"personal_sign\",\n    \"solana_signMessage\",\n    \"sui_signMessage\",\n    \"sui_signPersonalMessage\",\n    \"btc_signMessage\",\n    \"aptos_signMessage\",\n    \"cosmos_signArbitrary\",\n    \"tron_signMessage\",\n    \"tron_signMessageV2\",\n    \"starknet_signMessage\",\n]);\nfunction connectMethodsResponseUpdate(session, requestParams) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a;\n        try {\n            if (session.connectMethodsReply) {\n                (0, core_1.logDebug)(\"connectMethodsResponseUpdate connectMethodsReply:\", JSON.stringify(session.connectMethodsReply));\n                (0, core_1.logDebug)(\"connectMethodsResponseUpdate session.namespaces:\", JSON.stringify(session.namespaces));\n                for (const methodItem of session.connectMethodsReply) {\n                    (0, core_1.logDebug)(\"connectMethodsResponseUpdate methodItem:\", JSON.stringify(methodItem));\n                    if (\"result\" in methodItem) {\n                        if (methodItem.method === \"solana_signMessage\") {\n                            let solanaSuccessData = methodItem.result;\n                            (0, core_1.logDebug)(\"solana_signMessage methodItem.chainId:\", methodItem.chainId);\n                            let account = (_a = session.namespaces[\"solana\"]) === null || _a === void 0 ? void 0 : _a.accounts.filter(function (account) {\n                                (0, core_1.logDebug)(\"solana_signMessage account:\", account);\n                                return account.startsWith(methodItem.chainId);\n                            })[0];\n                            (0, core_1.logDebug)(\"solana_signMessage result account:\", solanaSuccessData, account);\n                            if (solanaSuccessData && account) {\n                                methodItem.result = {\n                                    \"signature\": bs58_1.default.decode(solanaSuccessData),\n                                    \"publicKey\": account === null || account === void 0 ? void 0 : account.split(':')[2]\n                                };\n                            }\n                        }\n                        else if (methodItem.method === \"sui_signMessage\" || methodItem.method === \"sui_signPersonalMessage\") {\n                            let suiMethod = requestParams.filter(function (requestMethod) {\n                                return requestMethod.method === methodItem.method;\n                            })[0];\n                            if (suiMethod && suiMethod.params && \"message\" in suiMethod.params) {\n                                let suiMessage = suiMethod.params.message;\n                                let suiMessageb64 = btoa(suiMessage);\n                                console.log(\"sui_signMessag suiMessagee suiMessageb64:>>>>\", suiMessage, suiMessageb64);\n                                if (methodItem.method === \"sui_signMessage\") {\n                                    methodItem.result = {\n                                        \"messageBytes\": suiMessageb64,\n                                        \"signature\": methodItem.result\n                                    };\n                                }\n                                else if (methodItem.method === \"sui_signPersonalMessage\") {\n                                    methodItem.result = {\n                                        \"bytes\": suiMessageb64,\n                                        \"signature\": methodItem.result\n                                    };\n                                }\n                            }\n                        }\n                        else if (methodItem.method === \"aptos_signMessage\") {\n                            if (methodItem.chainId === \"aptos:637\") {\n                                methodItem.chainId = \"aptos:mainnet\";\n                            }\n                            else if (methodItem.chainId === \"aptos:70000060\") {\n                                methodItem.chainId = \"movement:testnet\";\n                            }\n                            methodItem.result = JSON.parse(methodItem.result);\n                            console.log(\"aptos_signMessage result methodItem.result before:>>>>\", JSON.stringify(methodItem.result));\n                            if (methodItem.result && \"signature\" in methodItem.result) {\n                                let aptosSignature = methodItem.result.signature;\n                                if (aptosSignature && aptosSignature.startsWith(\"0x\")) {\n                                    aptosSignature = aptosSignature.slice(2, aptosSignature.length);\n                                    methodItem.result.signature = aptosSignature;\n                                }\n                            }\n                            console.log(\"aptos_signMessage result methodItem.result after:>>>>\", JSON.stringify(methodItem.result));\n                        }\n                        else if (methodItem.method === \"cosmos_signArbitrary\") {\n                            methodItem.result = JSON.parse(methodItem.result);\n                        }\n                        else if (methodItem.method == 'starknet_signMessage') {\n                            let results = methodItem.result;\n                            if (typeof results == 'string') {\n                                results = JSON.parse(results);\n                            }\n                            methodItem.result = [results[\"signedDataR\"], results[\"signedDataS\"]];\n                        }\n                    }\n                }\n            }\n            else if (requestParams && requestParams.length > 0) { //adapt old version\n                session.connectMethodsReply = [];\n                let notSupportError = new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                for (const requestItem of requestParams) {\n                    var errorItem = {\n                        method: requestItem.method,\n                        chainId: requestItem.chainId,\n                        error: {\n                            code: notSupportError.code,\n                            message: notSupportError.message\n                        },\n                    };\n                    session.connectMethodsReply.push(errorItem);\n                }\n            }\n        }\n        catch (error) {\n            (0, core_1.logDebug)(\"connectMethodsResponseUpdate connectMethodsReply Error:\", JSON.stringify(error));\n            throw error;\n        }\n    });\n}\nfunction connectMethodsToConnectWalletMethods(params, requireNameSpace) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            (0, core_1.logDebug)(\"connectMethodsToConnectWalletMethods requestMethods:\", JSON.stringify(params));\n            const result = [];\n            //TODO  后面需要打开限制\n            // if (params && params.length>1){\n            //     throw new OKXConnectError(\n            //         OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR,\n            //         `connect requestMethods only support one data`\n            //     );\n            // }\n            if (!requireNameSpace && params && params.length > 0) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error , RequestMethods cannot be added when the NameSpace is empty`);\n            }\n            // check chianId\n            for (const methodItem of params) {\n                if (methodItem.method === \"aptos_signMessage\") { //update chainId\n                    if (methodItem.chainId === \"aptos:mainnet\") {\n                        methodItem.chainId = \"aptos:637\";\n                    }\n                    else if (methodItem.chainId === \"movement:testnet\") {\n                        methodItem.chainId = \"aptos:70000060\";\n                    }\n                }\n                // check chianId\n                if (methodItem.method === \"wallet_addEthereumChain\") {\n                    var includeEip155 = requireNameSpace === null || requireNameSpace === void 0 ? void 0 : requireNameSpace.some(space => space.namespace.includes(\"eip155\"));\n                    if (!includeEip155) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error, When using '${methodItem.method}', the EVM chain needs to be included in the NameSpace`);\n                    }\n                }\n                else {\n                    const includeChain = !!(requireNameSpace === null || requireNameSpace === void 0 ? void 0 : requireNameSpace.some(space => space.chains.some(chain => chain.includes(`${methodItem.chainId}`))));\n                    if (!includeChain) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error, When using '${methodItem.method}', NameSpace must contain '${methodItem.chainId}'`);\n                    }\n                }\n            }\n            for (const item of params) {\n                //TODO  后面需要打开限制\n                // if (!connectSupportMethods.includes(item.method)){\n                //     throw new OKXConnectError(\n                //         OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR,\n                //             `connect requestMethods not support method, method: '${item.method}'`\n                //     );\n                // }\n                if (item.method === \"wallet_addEthereumChain\") {\n                    if (Array.isArray(item.params)) {\n                        const paramsArr = item.params;\n                        if (paramsArr && paramsArr.length === 1) {\n                            const firstParam = paramsArr[0];\n                            if (isRecord(firstParam)) {\n                                item.params = firstParam;\n                            }\n                        }\n                        else if (paramsArr && paramsArr.length > 1) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params only support one data, method: '${item.method}'`);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is nil, method: '${item.method}'`);\n                        }\n                    }\n                }\n                else if (item.method === \"personal_sign\") {\n                    if (isArray(item.params)) {\n                        if (item.params && item.params.length !== 1) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params error,  method: '${item.method}' `);\n                        }\n                        let firstObj = item.params[0];\n                        if (firstObj && typeof firstObj === 'string') {\n                            item.params = {\n                                message: firstObj\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                }\n                else if (item.method === \"sui_signMessage\" || item.method === \"sui_signPersonalMessage\") {\n                    if (isRecord(item.params) && 'message' in item.params) {\n                        if (item.params.message) {\n                            (0, core_1.logDebug)(\"sui_signMessage item.params.message :\", item.params.message);\n                            let message = JSON.parse(JSON.stringify(item.params.message));\n                            let convertedArray = Object.values(message);\n                            let uint8Array = new Uint8Array(convertedArray);\n                            let decoder = new TextDecoder(\"utf8\");\n                            let b64encoded = btoa(decoder.decode(uint8Array));\n                            item.params.message = atob(b64encoded);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"solana_signMessage\") {\n                    if (isRecord(item.params) && 'message' in item.params) {\n                        if (item.params.message && typeof item.params.message === 'string') {\n                            item.params[\"bs58Message\"] = bs58_1.default.encode((0, uint8array_extras_1.stringToUint8Array)(item.params.message));\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"aptos_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (item.chainId && (item.chainId === \"aptos:637\" || item.chainId === \"aptos:70000060\")) {\n                            var aptosParams = item.params;\n                            var currentURL = window.location.protocol + \"//\" + window.location.hostname;\n                            let signChainId = 1;\n                            if (item.chainId === \"aptos:637\") {\n                            }\n                            else if (item.chainId === \"aptos:70000060\") {\n                                signChainId = 2;\n                            }\n                            item.params = {\n                                data: aptosParams,\n                                applicationUrl: currentURL,\n                                prefix: \"APTOS\",\n                                aptosChainId: signChainId\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params chainId is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"cosmos_signArbitrary\") {\n                    if (isRecord(item.params)) {\n                        if (item.params.message && typeof item.params.message === 'string') {\n                            const base64Encoded = (0, uint8array_extras_1.stringToBase64)(item.params.message);\n                            let cosmosChain = item.chainId.split(\":\")[1];\n                            if (cosmosChain) {\n                                item.params = {\n                                    chain_id: cosmosChain,\n                                    data: {\n                                        chain_id: \"\",\n                                        account_number: \"0\",\n                                        sequence: \"0\",\n                                        fee: {\n                                            gas: \"0\",\n                                            amount: []\n                                        },\n                                        msgs: [{\n                                                \"type\": \"sign/MsgSignData\",\n                                                \"value\": {\n                                                    \"signer\": \"\", //address\n                                                    \"data\": base64Encoded\n                                                }\n                                            }],\n                                        memo: \"\"\n                                    }\n                                };\n                            }\n                            else {\n                                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params chainId is error,  method: '${item.method}' `);\n                            }\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params message is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method == \"tron_signMessage\" && 'message' in item.params) {\n                    if (item.params.message && typeof item.params.message === 'string') {\n                        item.params.message = stringToHex(item.params.message);\n                    }\n                }\n                else if (item.method == \"starknet_signMessage\") {\n                    /// do nothing\n                }\n                (0, core_1.logDebug)(\"connectMethodsToConnectWalletMethods item:\", JSON.stringify(item));\n                result.push(item);\n            }\n            return result;\n        }\n        catch (error) {\n            throw error;\n        }\n    });\n}\nfunction stringToHex(str) {\n    let hex = '';\n    for (let i = 0; i < str.length; i++) {\n        hex += str.charCodeAt(i).toString(16).padStart(2, '0');\n    }\n    return hex;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAccountsChains = getAccountsChains;\nexports.nameSpaceToConnectWalletNameSpace = nameSpaceToConnectWalletNameSpace;\nexports.fillParamsToSession = fillParamsToSession;\nexports.isCaipNamespace = isCaipNamespace;\nexports.parseNamespaceKey = parseNamespaceKey;\nconst core_1 = require(\"@okxconnect/core\");\nfunction getAccountsChains(accounts) {\n    const chains = [];\n    accounts.forEach((account) => {\n        const [chain, chainId] = account.split(\":\");\n        chains.push(`${chain}:${chainId}`);\n    });\n    return chains;\n}\nfunction nameSpaceToConnectWalletNameSpace(namespaces) {\n    var result = [];\n    if (!namespaces) {\n        return result;\n    }\n    Object.keys(namespaces).forEach((key) => {\n        if (key === core_1.NameSpaceKeyEip155 || key === core_1.NameSpaceKeySOL || key === core_1.NameSpaceKeySui || key === core_1.NameSpaceKeyAptos\n            || key == core_1.NameSpaceKeyBtc || key === core_1.NameSpaceKeyTON || key === core_1.NameSpaceKeyCosmos || key === core_1.NameSpaceKeyTron || key === core_1.NameSpaceKeyStarknet) {\n            if (namespaces[key].chains) {\n                result.push({\n                    namespace: key,\n                    chains: namespaces[key].chains,\n                    params: namespaces[key].params\n                });\n            }\n        }\n    });\n    return result;\n}\nfunction fillParamsToSession(session, namespaces, optionalNamespaces, sessionConfig) {\n    // Helper function to merge rpcMaps\n    const mergeRpcMap = (targetRpcMap, sourceRpcMap) => {\n        Object.assign(targetRpcMap, sourceRpcMap);\n    };\n    // Merge function for namespaces\n    const mergeNamespaces = (target, source) => {\n        for (const key in source) {\n            if (source.hasOwnProperty(key) && source[key].rpcMap) {\n                if (source[key].rpcMap) {\n                    if (!target[key].rpcMap) {\n                        target[key].rpcMap = {};\n                    }\n                    // 合并 rpcMap\n                    mergeRpcMap(target[key].rpcMap, source[key].rpcMap);\n                }\n                if (source[key].defaultChain && target[key].defaultChain === undefined) {\n                    //defaultChain need in session nameSpace\n                    if (target[key].chains.some(chain => chain.split(\":\")[1] === source[key].defaultChain)) {\n                        target[key].defaultChain = source[key].defaultChain;\n                    }\n                }\n            }\n        }\n    };\n    // 合并 namespaces\n    if (namespaces) {\n        mergeNamespaces(session.namespaces, namespaces);\n    }\n    // 合并 optionalNamespaces\n    if (optionalNamespaces) {\n        mergeNamespaces(session.namespaces, optionalNamespaces);\n    }\n    session.sessionConfig = sessionConfig;\n}\n/**\n * util designed for Wallets that builds namespaces structure by provided supported chains, methods, events & accounts.\n * It takes required & optional namespaces provided in the session proposal\n * along with the supported chains/methods/events/accounts by the wallet and returns a structured namespaces object\n * @param {BuildApprovedNamespacesParams} params\n * @returns {SessionTypes.Namespaces}\n */\n// export function buildApprovedNamespaces(\n//   params: BuildApprovedNamespacesParams,\n// ): SessionTypes.Namespaces {\n//   const {\n//     proposal: { requiredNamespaces, optionalNamespaces = {} },\n//     supportedNamespaces,\n//   } = params;\n//   const normalizedRequired = normalizeNamespaces(requiredNamespaces);\n//   const normalizedOptional = normalizeNamespaces(optionalNamespaces);\n//\n//   // build approved namespaces\n//   const namespaces = {};\n//   Object.keys(supportedNamespaces).forEach((namespace) => {\n//     const supportedChains = supportedNamespaces[namespace].chains;\n//     const supportedMethods = supportedNamespaces[namespace].methods;\n//     const supportedEvents = supportedNamespaces[namespace].events;\n//     const supportedAccounts = supportedNamespaces[namespace].accounts;\n//\n//     supportedChains.forEach((chain) => {\n//       if (!supportedAccounts.some((account) => account.includes(chain))) {\n//         throw new Error(`No accounts provided for chain ${chain} in namespace ${namespace}`);\n//       }\n//     });\n//\n//     namespaces[namespace] = {\n//       chains: supportedChains,\n//       methods: supportedMethods,\n//       events: supportedEvents,\n//       accounts: supportedAccounts,\n//     };\n//   });\n//\n//   // verify all required namespaces are supported\n//   const err = isConformingNamespaces(requiredNamespaces, namespaces, \"approve()\");\n//   if (err) throw new Error(err.message);\n//\n//   const approvedNamespaces = {};\n//\n//   // if both required & optional namespaces are empty, return all supported namespaces by the wallet\n//   if (!Object.keys(requiredNamespaces).length && !Object.keys(optionalNamespaces).length)\n//     return namespaces;\n//\n//   // assign accounts for the required namespaces\n//   Object.keys(normalizedRequired).forEach((requiredNamespace) => {\n//     const chains = supportedNamespaces[requiredNamespace].chains.filter((chain) =>\n//       normalizedRequired[requiredNamespace]?.chains?.includes(chain),\n//     );\n//     const methods = supportedNamespaces[requiredNamespace].methods.filter((method) =>\n//       normalizedRequired[requiredNamespace]?.methods?.includes(method),\n//     );\n//     const events = supportedNamespaces[requiredNamespace].events.filter((event) =>\n//       normalizedRequired[requiredNamespace]?.events?.includes(event),\n//     );\n//\n//     const accounts = chains\n//       .map((chain: string) =>\n//         supportedNamespaces[requiredNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[requiredNamespace] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   });\n//\n//   // add optional namespaces\n//   Object.keys(normalizedOptional).forEach((optionalNamespace) => {\n//     if (!supportedNamespaces[optionalNamespace]) return;\n//\n//     const chainsToAdd = normalizedOptional[optionalNamespace]?.chains?.filter((chain) =>\n//       supportedNamespaces[optionalNamespace].chains.includes(chain),\n//     );\n//     const methodsToAdd = supportedNamespaces[optionalNamespace].methods.filter((method) =>\n//       normalizedOptional[optionalNamespace]?.methods?.includes(method),\n//     );\n//     const eventsToAdd = supportedNamespaces[optionalNamespace].events.filter((event) =>\n//       normalizedOptional[optionalNamespace]?.events?.includes(event),\n//     );\n//\n//     const accountsToAdd = chainsToAdd\n//       ?.map((chain: string) =>\n//         supportedNamespaces[optionalNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[optionalNamespace] = {\n//       chains: mergeArrays(approvedNamespaces[optionalNamespace]?.chains, chainsToAdd),\n//       methods: mergeArrays(approvedNamespaces[optionalNamespace]?.methods, methodsToAdd),\n//       events: mergeArrays(approvedNamespaces[optionalNamespace]?.events, eventsToAdd),\n//       accounts: mergeArrays(approvedNamespaces[optionalNamespace]?.accounts, accountsToAdd),\n//     };\n//   });\n//\n//   return approvedNamespaces;\n// }\nfunction isCaipNamespace(namespace) {\n    return namespace.includes(\":\");\n}\nfunction parseNamespaceKey(namespace) {\n    return isCaipNamespace(namespace) ? namespace.split(\":\")[0] : namespace;\n}\n/**\n * Converts\n * ```\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * ```\n * into\n * ```\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *```\n */\n// export function normalizeNamespaces(\n//   namespaces: ProposalTypes.RequiredNamespaces,\n// ): ProposalTypes.RequiredNamespaces {\n//   const normalizedNamespaces = {} as ProposalTypes.RequiredNamespaces;\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       methods: mergeArrays(methods, normalizedNamespaces[normalizedKey]?.methods),\n//       events: mergeArrays(events, normalizedNamespaces[normalizedKey]?.events),\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n// export function getNamespacesFromAccounts(accounts: string[]) {\n//   const namespaces = {};\n//   accounts?.forEach((account) => {\n//     const [namespace, chainId] = account.split(\":\");\n//     if (!namespaces[namespace]) {\n//       namespaces[namespace] = {\n//         accounts: [],\n//         chains: [],\n//         events: [],\n//       };\n//     }\n//     namespaces[namespace].accounts.push(account);\n//     namespaces[namespace].chains.push(`${namespace}:${chainId}`);\n//   });\n//\n//   return namespaces;\n// }\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PROVIDER_EVENTS = void 0;\nexports.PROVIDER_EVENTS = {\n    DEFAULT_CHAIN_CHANGED: \"default_chain_changed\",\n    UPDATE_NAMESPACES: \"update_name_spaces\",\n};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./values\"), exports);\n__exportStar(require(\"./events\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GENERIC_SUBPROVIDER_NAME = exports.RPC_URL = exports.STORAGE = exports.CONTEXT = exports.WC_VERSION = exports.PROTOCOL = exports.RELAY_URL = exports.LOGGER = void 0;\nexports.LOGGER = \"error\";\nexports.RELAY_URL = \"wss://relay.walletconnect.com\";\nexports.PROTOCOL = \"wc\";\nexports.WC_VERSION = 2;\nexports.CONTEXT = \"universal_provider\";\nexports.STORAGE = `${exports.PROTOCOL}@${exports.WC_VERSION}:${exports.CONTEXT}:`;\nexports.RPC_URL = \"https://rpc.walletconnect.com/v1/\";\nexports.GENERIC_SUBPROVIDER_NAME = \"generic\";\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass AptosProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"aptos\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"solana request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"solana provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = AptosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass BtcProvider {\n    constructor(opts, name, client, events) {\n        this.name = core_1.NameSpaceKeyBtc;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"btc request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"btc provider namespace: \", JSON.stringify(this.namespace));\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = BtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass CosmosProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyCosmos;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"cosmos request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"cosmos provider namespace: \", JSON.stringify(this.namespace));\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = CosmosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Eip155Provider = void 0;\nconst utils_1 = require(\"../utils\");\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nclass Eip155Provider {\n    constructor(opts, client, events) {\n        this.name = \"eip155\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = parseInt(this.getDefaultChain());\n        // rpc\n        this.httpProviders = this.createHttpProviders();\n        (0, core_1.logDebug)(\"eip155 constructor --opts.namespace-->\", opts.namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    isArray(value) {\n        return typeof value === \"object\" && value !== null && Array.isArray(value);\n    }\n    updateRequestParams(args) {\n        let isDic = args.params && typeof args.params === 'object' && !Array.isArray(args.params);\n        if (args.method === 'wallet_switchEthereumChain') {\n            const switchChainId = args.chainId.split(\":\")[1];\n            // const hexChainId = parseInt(switchChainId, 16);\n            const decimalNumber = parseInt(switchChainId, 10);\n            if (isNaN(decimalNumber)) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid decimal number,  chainId: '${switchChainId}' `);\n            }\n            if (!args.params) {\n                args.params = { chainId: '0x' + decimalNumber.toString(16) };\n            }\n            else if (isDic) { //为 Record<string, unknown>\n                let params = args.params;\n                if (!('chainId' in params)) {\n                    params['chainId'] = '0x' + decimalNumber.toString(16);\n                    args.params = params;\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params error ,  method: '${args.method}' `);\n            }\n        }\n        else if (args.method === 'personal_sign'\n            || args.method === 'eth_signTypedData_v4'\n            || args.method === 'eth_sendTransaction'\n            || args.method === 'wallet_watchAsset') {\n            if (!args.params) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params is nil, method: '${args.method}'`);\n            }\n            if (this.isRecord(args.params)) {\n                let params = args.params;\n                (0, core_1.logDebug)(\"eip155 updateRequestParams params>\", JSON.stringify(params));\n                if ('chainId' in params) {\n                    const selectedChainId = args.chainId.split(\":\")[1];\n                    const chainNum = parseInt(selectedChainId, 10);\n                    let paramsChainString = String(params.chainId);\n                    let paramsChainId;\n                    if (paramsChainString.startsWith(this.name) && args.chainId === paramsChainString) { //为\n                        paramsChainId = chainNum;\n                    }\n                    else if (paramsChainString.startsWith(\"0x\")) {\n                        paramsChainId = parseInt(paramsChainString, 16);\n                    }\n                    else if (!isNaN(Number(paramsChainString))) { //数字\n                        paramsChainId = parseInt(paramsChainString, 10);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid params.chainId format, method: '${args.method}'`);\n                    }\n                    if (chainNum !== paramsChainId) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params.chainId not equal chain,  method: '${args.method}' `);\n                    }\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid request params type, method: '${args.method}'`);\n            }\n        }\n    }\n    //adapt array\n    adaptArray(args) {\n        if (args.method === 'wallet_switchEthereumChain'\n            || args.method === 'wallet_addEthereumChain'\n            || args.method === 'wallet_watchAsset'\n            || args.method === 'eth_sendTransaction') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr) {\n                    if (paramsArr.length === 1) {\n                        let firstParam = args.params[0];\n                        if (this.isRecord(firstParam)) {\n                            args.params = firstParam;\n                        }\n                    }\n                    else if (paramsArr.length > 1) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                    }\n                }\n            }\n        }\n        else if (args.method === 'eth_signTypedData_v4') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr && paramsArr.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                }\n                else if (paramsArr && paramsArr.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let messageObj = {};\n                if (paramsArr && paramsArr.length === 2) {\n                    let addressObj = args.params[0]; //address\n                    if (addressObj && typeof addressObj === 'string') { //check address\n                        let isEqual = false;\n                        this.namespace.accounts.forEach((chain) => {\n                            let chainAddress = chain.split(':')[2];\n                            if (chainAddress.toLowerCase() === addressObj.toLowerCase()) {\n                                isEqual = true;\n                            }\n                        });\n                        (0, core_1.logDebug)(\"eip155 adaptArray eth_signTypedData_v4 >>>isEqual: \", isEqual);\n                        if (!isEqual) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error, not equal,  method: '${args.method}' `);\n                        }\n                        if (this.isRecord(args.params[1])) {\n                            messageObj = args.params[1];\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error , not string,  method: '${args.method}' `);\n                    }\n                }\n                else if (paramsArr && paramsArr.length === 1) {\n                    if (this.isRecord(args.params[0])) {\n                        messageObj = args.params[0];\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                    }\n                }\n                try {\n                    let messages = JSON.stringify(messageObj);\n                    args.params = {\n                        typedDataJson: messages\n                    };\n                }\n                catch (err) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params call JSON.stringify() failed,  method: '${args.method}' `);\n                }\n            }\n        }\n        else if (args.method === 'personal_sign') {\n            if (this.isArray(args.params)) {\n                if (args.params && args.params.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params error,  method: '${args.method}' `);\n                }\n                else if (args.params && args.params.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let firstObj = args.params[0];\n                let secondObj = args.params[1];\n                if (secondObj && typeof secondObj === 'string') { //check address\n                    let isEqual = false;\n                    this.namespace.accounts.forEach((chain) => {\n                        let chainAddress = chain.split(':')[2];\n                        if (chainAddress.toLowerCase() === secondObj.toLowerCase()) {\n                            isEqual = true;\n                        }\n                    });\n                    (0, core_1.logDebug)(\"eip155 adaptArray personal_sign >>>isEqual: \", isEqual);\n                    if (!isEqual) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error,  method: '${args.method}' `);\n                    }\n                }\n                if (firstObj && typeof firstObj === 'string') {\n                    args.params = {\n                        message: firstObj\n                    };\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is error,  method: '${args.method}' `);\n                }\n            }\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"eth_requestAccounts\":\n            case \"eth_accounts\":\n            case \"eth_chainId\":\n                return false;\n            case \"eth_sendTransaction\":\n            case \"eth_signTransaction\":\n            case \"eth_sign\":\n            case \"personal_sign\":\n            case \"eth_signTypedData\":\n            case \"wallet_addEthereumChain\":\n            case \"wallet_watchAsset\":\n            case \"eth_signTypedData_v4\":\n                return true;\n            case \"wallet_switchEthereumChain\": {\n                this.adaptArray(args);\n                this.updateRequestParams(args);\n                const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n                return !this.isChainApproved(parsedChainId);\n            }\n            default:\n                return false;\n        }\n        return false;\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.adaptArray(args);\n            (0, core_1.logDebug)(\"eip155 request --args--string>\", JSON.stringify(args));\n            this.updateRequestParams(args);\n            (0, core_1.logDebug)(\"eip155 request --params--string>\", JSON.stringify(args));\n            switch (args.method) {\n                case \"eth_requestAccounts\":\n                    return this.getAccounts();\n                case \"eth_accounts\":\n                    return this.getAccounts();\n                case \"eth_chainId\":\n                    return parseInt(this.getDefaultChain());\n                case \"wallet_switchEthereumChain\": {\n                    return (yield this.handleSwitchChain(args));\n                }\n                case \"wallet_addEthereumChain\":\n                    return this.addEthereumChain(args);\n                default:\n                    break;\n            }\n            if (this.namespace.methods.includes(args.method)) {\n                // personal_sign\n                // eth_signTypedData_v4\n                // eth_sendTransaction\n                // wallet_watchAsset\n                try {\n                    const response = yield this.client.request(args);\n                    (0, core_1.logDebug)(\"eip155 request --response----string>\", JSON.stringify(response));\n                    if (this.isRecord(response)) {\n                        if ('result' in response) {\n                            let result = response.result;\n                            if (result && typeof result === 'string' && (result === \"true\" || result === \"false\")) {\n                                (0, core_1.logDebug)(\"eip155 request --wallet_watchAsset>>>>\", result === \"true\");\n                                return (result === \"true\");\n                            }\n                            return response.result;\n                        }\n                    }\n                    return response;\n                }\n                catch (e) {\n                    (0, core_1.logDebug)(`eip155 request --response --error--string> e instanceof OKXConnectError ${e instanceof core_1.OKXConnectError}`, JSON.stringify(e));\n                    throw e;\n                }\n            }\n            else {\n                (0, core_1.logDebug)('[RPC] request begin');\n                return yield this.getHttpProvider().request(args);\n            }\n        });\n    }\n    addEthereumChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let resultData = (yield this.client.request(args));\n            try {\n                if ('result' in resultData) {\n                    let successData = resultData;\n                    let account = resultData.result;\n                    if (account) {\n                        const nameSpace = account.split(\":\")[0];\n                        const chainId = account.split(\":\")[1];\n                        const chain = nameSpace + ':' + chainId;\n                        let newNameSpace = this.namespace;\n                        this.namespace.accounts.push(account);\n                        this.namespace.chains.push(chain);\n                        if (this.isRecord(args.params)) {\n                            if (\"rpcUrls\" in args.params) {\n                                let rpcUrls = args.params.rpcUrls;\n                                let rpcUrl = rpcUrls ? rpcUrls[0] : undefined;\n                                if (rpcUrl) {\n                                    if (this.namespace.rpcMap) {\n                                        this.namespace.rpcMap[chainId] = rpcUrl;\n                                    }\n                                    else {\n                                        this.namespace.rpcMap = {\n                                            [chainId]: rpcUrl\n                                        };\n                                    }\n                                    this.setHttpProvider(chainId, rpcUrl);\n                                }\n                            }\n                        }\n                        this.events.emit(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, {\n                            eip155: this.namespace\n                        });\n                    }\n                }\n                else {\n                    new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request error`);\n                }\n            }\n            catch (error) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request  error`);\n            }\n            return null;\n        });\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        this.chainId = parseInt(chainId);\n        // set rpc\n        if (!this.httpProviders[chainId]) {\n            const rpc = rpcUrl || (0, utils_1.getRpcUrl)(`${this.name}:${chainId}`, this.namespace);\n            if (!rpc) {\n                // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n                (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            }\n            else {\n                this.setHttpProvider(chainId, rpc);\n            }\n        }\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId.toString();\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // ---------- Private ----------------------------------------------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"eip155 getAccounts \", accounts, this.chainId);\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    getHexChainIdFromRequest(args) {\n        let params = args.params;\n        let hexChainId = \"0x0\";\n        if (params && \"chainId\" in params) {\n            hexChainId = params.chainId;\n        }\n        hexChainId = hexChainId.startsWith(\"0x\") ? hexChainId : `0x${hexChainId}`;\n        (0, core_1.logDebug)(\"handleSwitchChain -->args \", args);\n        (0, core_1.logDebug)(\"handleSwitchChain -->hexChainId \", hexChainId);\n        const parsedChainId = parseInt(hexChainId, 16);\n        (0, core_1.logDebug)(\"handleSwitchChain -->parsedChainId \", parsedChainId);\n        return { parsedChainId, hexChainId };\n    }\n    handleSwitchChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n            if (this.isChainApproved(parsedChainId)) {\n                this.setDefaultChain(`${parsedChainId}`);\n            }\n            else {\n                const resultData = (yield this.client.request({\n                    method: \"wallet_switchEthereumChain\",\n                    chainId: args.chainId,\n                    params: {\n                        chainId: hexChainId,\n                    },\n                }));\n                try {\n                    if ('result' in resultData) {\n                        let successData = resultData;\n                        let account = resultData.result;\n                        if (account) {\n                            const nameSpace = account.split(\":\")[0];\n                            const chainId = account.split(\":\")[1];\n                            const chain = nameSpace + ':' + chainId;\n                            let newNameSpace = this.namespace;\n                            this.namespace.accounts.push(account);\n                            this.namespace.chains.push(chain);\n                            (0, core_1.logDebug)(\"handleSwitchChain -->wallet_switchEthereumChain \", resultData);\n                            this.setDefaultChain(`${parsedChainId}`);\n                            this.events.emit(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, {\n                                eip155: this.namespace\n                            });\n                        }\n                    }\n                    else {\n                        new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request error`);\n                    }\n                }\n                catch (error) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request  error`);\n                }\n            }\n            return null;\n        });\n    }\n    isChainApproved(chainId) {\n        return this.namespace.chains.includes(`${this.name}:${chainId}`);\n    }\n    // rpc\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            //   throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            (0, core_1.logDebug)('get parsed chain and rpc:', parsedChainId, parsedRpc);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        (0, core_1.logDebug)('get http providermap:', http);\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n}\nexports.Eip155Provider = Eip155Provider;\nexports.default = Eip155Provider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcConnection = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nconst DEFAULT_HTTP_HEADERS = {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n};\nconst DEFAULT_HTTP_METHOD = \"POST\";\nconst DEFAULT_FETCH_OPTS = {\n    headers: DEFAULT_HTTP_HEADERS,\n    method: DEFAULT_HTTP_METHOD,\n};\n// Source: https://nodejs.org/api/events.html#emittersetmaxlistenersn\nconst EVENT_EMITTER_MAX_LISTENERS_DEFAULT = 10;\nclass JsonRpcConnection {\n    constructor(url, disableProviderPing = false) {\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n        this.events = new eventemitter3_1.EventEmitter();\n        this.isAvailable = false;\n        this.registering = false;\n        if (!(0, core_2.isHttpUrl)(url)) {\n            throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n        }\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n    }\n    get connected() {\n        return this.isAvailable;\n    }\n    get connecting() {\n        return this.registering;\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            yield this.register(url);\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                throw new Error(\"Connection already closed\");\n            }\n            this.onClose();\n        });\n    }\n    send(payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                yield this.register();\n            }\n            try {\n                const body = (0, core_1.safeJsonStringify)(payload);\n                const res = yield (0, cross_fetch_1.default)(this.url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                const data = yield res.json();\n                this.onPayload({ data });\n            }\n            catch (e) {\n                this.onError(payload.id, e);\n            }\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    register() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            if (!(0, core_2.isHttpUrl)(url)) {\n                throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n            }\n            if (this.registering) {\n                return new Promise((resolve, reject) => {\n                    this.events.once(\"register_error\", (error) => {\n                        reject(error);\n                    });\n                    this.events.once(\"open\", () => {\n                        if (typeof this.isAvailable === \"undefined\") {\n                            return reject(new Error(\"HTTP connection is missing or invalid\"));\n                        }\n                        resolve();\n                    });\n                });\n            }\n            this.url = url;\n            this.registering = true;\n            try {\n                if (!this.disableProviderPing) {\n                    const body = (0, core_1.safeJsonStringify)({ id: 1, jsonrpc: \"2.0\", method: \"test\", params: [] });\n                    yield (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                }\n                this.onOpen();\n            }\n            catch (e) {\n                const error = this.parseError(e);\n                this.events.emit(\"register_error\", error);\n                this.onClose();\n                throw error;\n            }\n        });\n    }\n    onOpen() {\n        this.isAvailable = true;\n        this.registering = false;\n        this.events.emit(\"open\");\n    }\n    onClose() {\n        this.isAvailable = false;\n        this.registering = false;\n        this.events.emit(\"close\");\n    }\n    onPayload(e) {\n        if (typeof e.data === \"undefined\")\n            return;\n        const payload = typeof e.data === \"string\" ? (0, core_1.safeJsonParse)(e.data) : e.data;\n        this.events.emit(\"payload\", payload);\n    }\n    onError(id, e) {\n        const error = this.parseError(e);\n        const message = error.message || error.toString();\n        const payload = (0, core_2.formatJsonRpcError)(id, message);\n        this.events.emit(\"payload\", payload);\n    }\n    parseError(e, url = this.url) {\n        return (0, core_2.parseConnectionError)(e, url, \"HTTP\");\n    }\n}\nexports.JsonRpcConnection = JsonRpcConnection;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcProvider = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst types_1 = require(\"../../types\");\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nclass JsonRpcProvider extends types_1.IJSONRpcProvider {\n    constructor(connection) {\n        super(connection);\n        this.events = new eventemitter3_1.EventEmitter();\n        this.connected = false;\n        this.connecting = false;\n        this.hasRegisteredEventListeners = false;\n        this.connection = this.setConnection(connection);\n        if (this.connection.connected) {\n            this.registerEventListeners();\n        }\n    }\n    connect() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            yield this.open(connection);\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.close();\n        });\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    request(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.requestStrict((0, core_1.formatJsonRpcRequest)(request.method, request.params || [], (0, core_1.getBigIntRpcId)().toString()), // casting to any is required in order to use BigInt as rpcId\n            context);\n        });\n    }\n    // ---------- Protected ----------------------------------------------- //\n    requestStrict(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                if (!this.connection.connected) {\n                    try {\n                        yield this.open();\n                    }\n                    catch (e) {\n                        reject(e);\n                    }\n                }\n                this.events.on(`${request.id}`, (response) => {\n                    if ((0, core_1.isJsonRpcError)(response)) {\n                        reject(response.error);\n                    }\n                    else {\n                        resolve(response.result);\n                    }\n                });\n                try {\n                    (0, core_2.logDebug)('[RPC] >>> send request', request, context);\n                    yield this.connection.send(request, context);\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }));\n        });\n    }\n    setConnection(connection = this.connection) {\n        return connection;\n    }\n    onPayload(payload) {\n        this.events.emit(\"payload\", payload);\n        if ((0, core_1.isJsonRpcResponse)(payload)) {\n            this.events.emit(`${payload.id}`, payload);\n        }\n        else {\n            this.events.emit(\"message\", {\n                type: payload.method,\n                data: payload.params,\n            });\n        }\n    }\n    onClose(event) {\n        // Code 3000 indicates an abnormal closure signalled by the relay -> emit an error in this case.\n        if (event && event.code === 3000) {\n            this.events.emit(\"error\", new Error(`WebSocket connection closed abnormally with code: ${event.code} ${event.reason ? `(${event.reason})` : \"\"}`));\n        }\n        this.events.emit(\"disconnect\");\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            if (this.connection === connection && this.connection.connected)\n                return;\n            if (this.connection.connected)\n                this.close();\n            if (typeof connection === \"string\") {\n                yield this.connection.open(connection);\n                connection = this.connection;\n            }\n            this.connection = this.setConnection(connection);\n            yield this.connection.open();\n            this.registerEventListeners();\n            this.events.emit(\"connect\");\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.connection.close();\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    registerEventListeners() {\n        if (this.hasRegisteredEventListeners)\n            return;\n        this.connection.on(\"payload\", (payload) => this.onPayload(payload));\n        this.connection.on(\"close\", (event) => this.onClose(event));\n        this.connection.on(\"error\", (error) => this.events.emit(\"error\", error));\n        this.connection.on(\"register_error\", (_error) => this.onClose());\n        this.hasRegisteredEventListeners = true;\n    }\n}\nexports.JsonRpcProvider = JsonRpcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SolanaProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SolanaProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"solana\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"solana request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"solana provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    //   {\n    //     \"chains\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\" ],\n    //     \"accounts\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp:F7wnJc5wiBGy1k87jv6gyNwE3jMEWd18oTQiYsF1xVG7\"],\n    //     \"methods\": [\n    //         \"solana_signTransaction\",\n    //         \"solana_signMessage\"\n    //     ],\n    //     \"defaultChain\": \"5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\"\n    // }\n    // TODO:确认上面的defaultChain是否正确（没有solana前缀）\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"solana\"))) {\n                chainId = `solana:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.SolanaProvider = SolanaProvider;\nexports.default = SolanaProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass StarknetProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"starknet\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"solana request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"solana provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = StarknetProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SuiProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SuiProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeySui;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"sui request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"sui provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"sui\"))) {\n                chainId = `sui:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"sui_signMessage\":\n            case \"sui_signPersonalMessage\":\n            case \"sui_signTransactionBlock\":\n            case \"sui_signAndExecuteTransactionBlock\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.SuiProvider = SuiProvider;\nexports.default = SuiProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass TONProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyTON;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            (0, core_1.logDebug)(\"TONProvider request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"TONProvider request provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                if (!args.params) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params is nil\");\n                }\n                if (this.isRecord(args.params)) {\n                    const _e = args.params, { validUntil } = _e, newParams = __rest(_e, [\"validUntil\"]);\n                    let fromAddress = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n                    if ('from' in newParams) {\n                        fromAddress = newParams.from || ((_d = (_c = this.namespace.payload) === null || _c === void 0 ? void 0 : _c.ton_addr) === null || _d === void 0 ? void 0 : _d.address);\n                    }\n                    args.params['from'] = fromAddress;\n                    args.params['network'] = this.getDefaultChain();\n                    args.params['valid_until'] = validUntil;\n                    let response = yield this.client.request(args);\n                    if (this.isRecord(response) && 'result' in response) {\n                        const result = {\n                            boc: response.result.toString()\n                        };\n                        (0, core_1.logDebug)(\"TONProvider request provider response: \", JSON.stringify(response));\n                        (0, core_1.logDebug)(\"TONProvider request provider result: \", JSON.stringify(result));\n                        return result;\n                    }\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton_send request response is nil\");\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params type add nil\");\n                }\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        var _a, _b;\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"ton getAccounts accounts :\", accounts);\n        (0, core_1.logDebug)(\"ton getAccounts .namespace :\", JSON.stringify(this.namespace));\n        if (!accounts) {\n            return [];\n        }\n        let address = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n        (0, core_1.logDebug)(\"ton getAccounts address :\", address);\n        if (address) {\n            return [\n                address\n            ];\n        }\n        return [];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"ton_sendTransaction\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.default = TONProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass TronProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyTron;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"tron request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"tron provider namespace: \", JSON.stringify(this.namespace));\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = TronProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./providers\"), exports);\n__exportStar(require(\"./misc\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IJSONRpcProvider = exports.IJSONRpcConnection = void 0;\nclass IJSONRpcConnection {\n}\nexports.IJSONRpcConnection = IJSONRpcConnection;\nclass IJSONRpcProvider {\n    constructor(opt) {\n    }\n}\nexports.IJSONRpcProvider = IJSONRpcProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setGlobal = exports.getGlobal = void 0;\nconst globals = {};\nconst getGlobal = (key) => {\n    return globals[key];\n};\nexports.getGlobal = getGlobal;\nconst setGlobal = (key, value) => {\n    globals[key] = value;\n};\nexports.setGlobal = setGlobal;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./misc\"), exports);\n__exportStar(require(\"./globals\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRpcUrl = getRpcUrl;\nexports.getChainId = getChainId;\nexports.convertChainIdToNumber = convertChainIdToNumber;\nexports.parseChainId = parseChainId;\nexports.mergeArrays = mergeArrays;\nfunction getRpcUrl(chainId, rpc, projectId) {\n    var _a;\n    const chain = parseChainId(chainId);\n    // no default\n    return (((_a = rpc.rpcMap) === null || _a === void 0 ? void 0 : _a[chain.reference]) ||\n        ``);\n}\nfunction getChainId(chain) {\n    return chain.includes(\":\") ? chain.split(\":\")[1] : chain;\n}\n// export function validateChainApproval(chain: string, chains: string[]): void {\n//   if (!chains.includes(chain)) {\n//     throw new Error(\n//       `Chain '${chain}' not approved. Please use one of the following: ${chains.toString()}`,\n//     );\n//   }\n// }\n// export function getChainsFromApprovedSession(accounts: string[]): string[] {\n//   return accounts.map((address) => `${address.split(\":\")[0]}:${address.split(\":\")[1]}`);\n// }\n// export function getAccountsFromSession(namespace: string, session: SessionTypes.Struct): string[] {\n//   // match namespaces e.g. eip155 with eip155:1\n//   const matchedNamespaceKeys = Object.keys(session.namespaces).filter((key) =>\n//     key.includes(namespace),\n//   );\n//   if (!matchedNamespaceKeys.length) return [];\n//   const accounts: string[] = [];\n//   matchedNamespaceKeys.forEach((key) => {\n//     const accountsForNamespace = session.namespaces[key].accounts;\n//     accounts.push(...accountsForNamespace);\n//   });\n//   return accounts;\n// }\n// export function mergeRequiredOptionalNamespaces(\n//   required: NamespaceConfig = {},\n//   optional: NamespaceConfig = {},\n// ){\n//   const requiredNamespaces = normalizeNamespaces(required);\n//   const optionalNamespaces = normalizeNamespaces(optional);\n//    return merge.merge(requiredNamespaces,optionalNamespaces)\n// }\n/**\n * Converts\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * into\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *\n */\n// export function normalizeNamespaces(namespaces: NamespaceConfig): NamespaceConfig {\n//   const normalizedNamespaces: NamespaceConfig = {};\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const rpcMap = values.rpcMap || {};\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       ...values,\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       rpcMap: { ...rpcMap, ...normalizedNamespaces[normalizedKey]?.rpcMap },\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n//\n// export function parseCaip10Account(caip10Account: string): string {\n//   return caip10Account.includes(\":\") ? caip10Account.split(\":\")[2] : caip10Account;\n// }\n/**\n * Populates the chains array for each namespace with the chains extracted from the accounts if are otherwise missing\n */\n// export function populateNamespacesChains(\n//   namespaces: SessionTypes.Namespaces,\n// ): Record<string, SessionTypes.Namespace> {\n//   const parsedNamespaces: Record<string, SessionTypes.Namespace> = {};\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const accounts = values.accounts || [];\n//     // If the key includes a CAIP separator `:` we know it's a namespace + chainId (e.g. `eip155:1`)\n//     const chains = isCaipNamespace(key)\n//       ? [key]\n//       : values.chains\n//       ? values.chains\n//       : getChainsFromApprovedSession(values.accounts);\n//     parsedNamespaces[key] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   }\n//   return parsedNamespaces;\n// }\nfunction convertChainIdToNumber(chainId) {\n    if (typeof chainId === \"number\")\n        return chainId;\n    if (chainId.includes(\"0x\")) {\n        return parseInt(chainId, 16);\n    }\n    chainId = chainId.includes(\":\") ? chainId.split(\":\")[1] : chainId;\n    return isNaN(Number(chainId)) ? chainId : Number(chainId);\n}\nconst CAIP_DELIMITER = \":\";\nfunction parseChainId(chain) {\n    const [namespace, reference] = chain.split(CAIP_DELIMITER);\n    return { namespace, reference };\n}\nfunction mergeArrays(a = [], b = []) {\n    return [...new Set([...a, ...b])];\n}\n","<template>\n  <div id=\"app\">\n    <el-container>\n      <el-header>OKX Connect</el-header>\n      <el-main>\n        <el-card class=\"wallet-info\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Wallet Info</div>\n          </template>\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Wallet Address:</strong> {{ getWalletAddress }}\n            </el-col>\n          </el-row>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Status :</strong> {{ currentStatus }}\n            </el-col>\n          </el-row>\n\n        </el-card>\n\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Connect Params</div>\n          </template>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"12\">\n              <el-checkbox v-model=\"withUI\" @change=\"handleWithUI\">\n                Show UI</el-checkbox>\n            </el-col>\n\n            <el-col :span=\"12\">\n              <el-checkbox v-model=\"universalToTG\" @change=\"handleUniversalToTG\">\n                Use mini wallet</el-checkbox>\n            </el-col>\n          </el-row>\n\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Modals</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"modals\" placeholder=\"Modals\" @change=\"handleModalsSelect\" multiple>\n                <el-option label=\"Before\" value=\"before\" />\n                <el-option label=\"Success\" value=\"success\" />\n                <el-option label=\"Error\" value=\"error\" />\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center; justify-content: space-between;\">\n            <el-col :span=\"6\" style=\"gap: 2px\">\n              <p style=\"font-size: 11pt; margin: 0px\">Return Strategy</p>\n              <p style=\"font-size: 9pt; margin: 0px\">(Mobile only)</p>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-select\n                v-model=\"returnStrategy\"\n                @change=\"handleReturnStrategySelect\"\n                placeholder=\"Return Strategy\"\n              >\n                <el-option\n                  v-for=\"strategy in returnStrategies\"\n                  :key=\"`return-strategy-select-option-${strategy}`\"\n                  :label=\"strategy\"\n                  :value=\"strategy\"\n                />\n              </el-select>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-input\n                v-if=\"returnStrategy === 'deeplink'\"\n                v-model=\"deeplink\"\n                @change=\"handleReturnStrategyDeeplink\"\n                placeholder=\"Deeplink\"\n                :disabled=\"returnStrategy !== 'deeplink'\"\n                style=\"margin: 0px\"\n              />\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Lang</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"language\" @change=\"handleLanguageSelect\" placeholder=\"Language\">\n                <el-option v-for=\"locale in locales\" :key=\"`language-select-option-${locale}`\" :label=\"locale\"\n                  :value=\"locale\" />\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Theme</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"theme\" @change=\"handleThemeSelect\" placeholder=\"Theme\">\n                <el-option label=\"LIGHT\" :value=\"THEME.LIGHT\" />\n                <el-option label=\"DARK\" :value=\"THEME.DARK\" />\n              </el-select>\n            </el-col>\n          </el-row>\n\n<!--          <el-row>-->\n<!--          <el-row style=\"align-items: center\">-->\n<!--            <el-col :span=\"4\">-->\n<!--              <p style=\"font-size: 11pt\">Connect</p>-->\n<!--              <p style=\"font-size: 11pt\">Methods</p>-->\n<!--            </el-col>-->\n<!--            <el-col :span=\"20\">-->\n<!--              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" placeholder=\"Methods\">-->\n<!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n<!--                           :value=\"methods\" />-->\n\n<!--              </el-select>-->\n<!--            </el-col>-->\n<!--          </el-row>-->\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Connect</p>\n              <p style=\"font-size: 11pt\">Methods</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" multiple placeholder=\"methods\">\n                <el-option\n                    v-for=\"item in connectMethods\"\n                    :key=\"item\"\n                    :label=\"item\"\n                    :value=\"item\">\n                </el-option>\n              </el-select>\n\n\n<!--              <el-select v-model=\"selectedMethod\" placeholder=\"Methods\" @change=\"handleConnectMethodsSelect\" multiple>-->\n<!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n<!--                           :value=\"methods\" />-->\n<!--              </el-select>-->\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">ton_proof</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-input v-model=\"tonProofValue\"  placeholder=\"input ton_proof\"></el-input>\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" align=\"middle\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Required Chains</div>\n            </el-col>\n            <el-col\n              :span=\"6\"\n              v-for=\"item in Object.keys(availableChains)\"\n              :key=\"item\"\n            >\n              <el-checkbox\n                v-model=\"availableChains[item].checked\"\n                :disabled=\"!areChainsInit\"\n                >{{ availableChains[item].name }}</el-checkbox\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" align=\"middle\" style=\"margin-top: 20px\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Optional Chains</div>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(43114)\" @change=\"() => handleOptionChange(43114)\">\n                AVAX</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(10)\" @change=\"() => handleOptionChange(10)\">OP</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(8453)\" @change=\"() => handleOptionChange(8453)\">\n                BASE</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(99781165)\"\n                @change=\"() => handleOptionChange(99781165)\">Nonexist</el-checkbox>\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"initBtnClicked\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectInitStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                type=\"primary\"\n                @click=\"connectBtnClicked\"\n                icon=\"el-icon-connection\"\n                :disabled=\"!areChainsInit\"\n                >{{ connectStatusStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"syncAllAddressClick\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ syncAllAddressStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                type=\"danger\"\n                @click=\"disconnectAction\"\n                icon=\"el-icon-switch-button\"\n                :disabled=\"!areChainsInit || walletAddress.length == 0\"\n                >{{ disconnectStatusStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n          <teleport to=\"body\">\n            <div v-if=\"showModal\" class=\"modal-overlay\" @click=\"closeModal\">\n              <div class=\"modal-content\" @click.stop>\n                <button class=\"close-button\" @click=\"closeModal\">\n                  &times;\n                </button>\n                <h2>Scan to connect</h2>\n                <qrcode-vue :value=\"qrValue\" :size=\"350\" level=\"L\" />\n              </div>\n            </div>\n          </teleport>\n        </el-card>\n\n        <!-- 发送交易 -->\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Transactions</div>\n          </template>\n\n          <el-tabs v-model=\"activeTab\" type=\"border-card\" @tab-click=\"clickActiveTab\">\n            <!-- ETH -->\n            <el-tab-pane label=\"ETH\" name=\"eip155:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to ETH)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve TONCoin)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(eth mint\n                    nft)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add SPX6900)\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TON\" name=\"ton:-239\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_getAccount\">ton_getAccount</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_sendTransaction\">ton_sendTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- solana -->\n            <el-tab-pane label=\"Sol\" name=\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- Sui-->\n            <el-tab-pane label=\"Sui\" name=\"sui:mainnet\">\n              <SuiPanel @generateTransactionParams=\"sui_generateTransactionParams\" />\n            </el-tab-pane>\n            <!-- BTC -->\n            <el-tab-pane label=\"BTC\" name=\"btc:mainnet\">\n              <BTCPanel @generateTransactionParams=\"btc_generateTransactionParams\" />\n            </el-tab-pane>\n\n            <!-- Fractal BTC -->\n            <el-tab-pane label=\"Fractal\" name=\"fractal:mainnet\">\n              <FractalPanel @generateTransactionParams=\"fractal_generateTransactionParams\" />\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Tron\" name=\"tron:mainnet\">\n              <TronTransactionPanel\n                  @generateTransactionParams=\"tron_generateTransactionParams\"\n                  @generateTransactionResult=\"tron_getTransactionResult\" />\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Aptos\" name=\"aptos:mainnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signTransaction\">aptos_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"aptos_signAndSubmitTransaction\">aptos_signAndSubmitTransaction</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Cosmos\" name=\"cosmos:cosmoshub-4\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <!-- Polygon-->\n            <el-tab-pane label=\"Polygon\" name=\"eip155:137\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send POL)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve sushi)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(polygon mint\n                    nft)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add LGNS)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_testRpc()\">wallet_testRpc(Polygon)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\"\n                  >eth_sendTransaction(转账FUSE)</el-button\n                  >\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\"\n                  >eth_sendTransaction(授权USDC)</el-button\n                  >\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- BSC-->\n            <el-tab-pane label=\"BNB\" name=\"eip155:56\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to BNB)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve POSI)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add FET)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_testRpc()\">wallet_testRpc(check balance on eth)</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Fuse\" name=\"eip155:122\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_swap\">eth_sendTransaction(Swap)</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Sonic testnet\" name=\"svm:70000062\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Movement\" name=\"movement:testnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"move_signTransaction\">move_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"move_signAndSubmitTransaction\">move_signAndSubmitTransaction</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n\n            <el-tab-pane label=\"osmos\" name=\"cosmos:osmosis-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"SEI\" name=\"cosmos:pacific-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TEST \" name=\"test:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"testBase64UrlSafe\">testBase64UrlSafe</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n          </el-tabs>\n\n          <el-col :xs=\"24\" :sm=\"24\" style=\"margin: 16px 0px;\">\n            <el-row style=\"align-items: center; justify-content: space-between; margin-bottom: 8px;\">\n              <el-col :span=\"4\">\n                <p style=\"font-size: 11pt; margin: 0px; text-align: start\">Redirect param (only for ETH, Polygon, BNB, Fuse)</p>\n              </el-col>\n              <el-col :span=\"9\">\n                <el-select\n                  v-model=\"redirect\"\n                  @change=\"handleRedirectSelect\"\n                  placeholder=\"Return Strategy\"\n                  :disabled=\"!canChainAddRedirectParam()\"\n                  >\n                  <el-option\n                    v-for=\"strategy in returnStrategies\"\n                    :key=\"`return-strategy-select-option-${strategy}`\"\n                    :label=\"strategy\"\n                    :value=\"strategy\"\n                  />\n                </el-select>\n              </el-col>\n              <el-col :span=\"10\">\n                <el-input\n                  v-if=\"redirect === 'deeplink'\"\n                  v-model=\"redirectDeeplink\"\n                  @change=\"handleRedirectDeeplink\"\n                  placeholder=\"Deeplink\"\n                  :disabled=\"!canChainAddRedirectParam() || redirect !== 'deeplink'\"\n                  style=\"margin: 0px\"\n                />\n              </el-col>\n            </el-row>\n            <el-button\n              type=\"primary\" @click=\"addRedirectParam()\"\n              :disabled=\"!canChainAddRedirectParam() || !testTransaction\"\n            >\n              Add redirect param to data\n            </el-button>\n          </el-col>\n\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Data:</div>\n            <el-input v-model=\"testTransaction\" type=\"textarea\" :rows=\"5\" placeholder=\"sendTransactions\"></el-input>\n          </el-col>\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Result :</div>\n            <el-input v-model=\"testboc\" type=\"textarea\" :rows=\"5\" placeholder=\"boc\"></el-input>\n          </el-col>\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button type=\"primary\" @click=\"sendTransaction()\">{{\n                testTransactionStr\n                }}</el-button>\n            </el-col>\n          </el-row>\n        </el-card>\n      </el-main>\n    </el-container>\n  </div>\n</template>\n\n<style scoped>\n/* 重置全局边距和内边距 */\nbody,\nhtml {\n  margin: 0;\n  padding: 0;\n  height: 100%;\n}\n\n/* 确保 app 容器占满整个视口 */\n#app {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin: 0 auto;\n  /* 居中 */\n  max-width: 600px;\n  /* 设置最大宽度 */\n  padding: 0 20px;\n  /* 添加一些左右内边距 */\n}\n\n/* 调整 el-container 样式 */\n.el-container {\n  min-height: 100vh;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n}\n\n/* 调整 el-header 样式 */\n.el-header {\n  background-color: #333333;\n  color: white;\n  height: 50px;\n  line-height: 50px;\n  font-size: 18px;\n  font-weight: bold;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1000;\n}\n\n/* 调整 el-main 样式 */\n.el-main {\n  padding: 70px 0 20px;\n  /* 增加顶部内边距以避免被固定header遮挡 */\n  flex-grow: 1;\n}\n\n.el-card {\n  margin-bottom: 20px;\n}\n\n.info-row {\n  margin-bottom: 10px;\n}\n\n.input-label {\n  margin-bottom: 5px;\n  text-align: left;\n}\n\n.el-input {\n  margin-bottom: 10px;\n}\n\n/* 通用按钮样式 */\n.wallet-actions .el-button,\n.transaction .el-button,\n.clear-cache .el-button {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 40px;\n}\n\n.wallet-actions .el-button span,\n.transaction .el-button span,\n.clear-cache .el-button span {\n  margin: 0 auto;\n}\n\n/* 按钮行间距 */\n.wallet-actions .button-row,\n.transaction .button-row {\n  margin-bottom: 8px;\n}\n\n.wallet-actions .button-row:last-child,\n.transaction .button-row:last-child {\n  margin-bottom: 0;\n}\n\n/* 调整图标和文字的对齐 */\n.wallet-actions .el-button [class^=\"el-icon-\"],\n.transaction .el-button [class^=\"el-icon-\"],\n.clear-cache .el-button [class^=\"el-icon-\"] {\n  margin-right: 5px;\n  vertical-align: middle;\n}\n\n/* 新增：调整发送交易按钮与输入框的间距 */\n.transaction .el-row:not(:last-child) {\n  margin-bottom: 10px;\n}\n\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.modal-content {\n  background-color: white;\n  padding: 20px;\n  border-radius: 8px;\n  text-align: center;\n  position: relative;\n  max-width: 90%;\n  width: 400px;\n}\n\n.close-button {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  font-size: 24px;\n  border: none;\n  background: none;\n  cursor: pointer;\n}\n\n/* 响应式调整 */\n@media (max-width: 600px) {\n  #app {\n    padding: 0 10px;\n  }\n\n  .el-main {\n    padding: 60px 0 10px;\n  }\n}\n</style>\n<script>\nimport {OKX_CONNECT_ERROR_CODES, safeJsonStringify,getAppWalletDeepLink,getUniversalLink} from \"@okxconnect/core\"\nimport {\n  OKXBtcProvider,\n  OKXUniversalProvider,\n  OKXCosmosProvider,\n  OKXTonProvider,\n  OKXTronProvider\n} from \"@okxconnect/universal-provider\"\nimport {OKXSolanaProvider} from \"@okxconnect/solana-provider\";\nimport {\n  Connection,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n  TransactionMessage,\n  VersionedTransaction\n} from '@solana/web3.js';\nimport {OKXSuiProvider as SuiAdapter} from \"@okxconnect/sui-provider\"\nimport QrcodeVue from 'qrcode.vue'\n\nimport {OKXAptosProvider} from \"@okxconnect/aptos-provider\";\nimport {Aptos, AptosConfig, Network} from \"@aptos-labs/ts-sdk\";\n\nimport BTCPanel from \"./components/BtcTransactionPanel.vue\";\nimport FractalPanel from \"./components/FractalTransactionPanel.vue\"\nimport SuiPanel from \"./components/SuiTransactionPanel.vue\";\n\nimport {OKXUniversalConnectUI, THEME} from \"@okxconnect/ui\";\nimport { ethers } from 'ethers';\nimport VConsole from 'vconsole';\nimport nacl from \"tweetnacl\";\nconst { verifyADR36Amino } = require('@keplr-wallet/cosmos')\nconst { fromBech32 } = require('@cosmjs/encoding')\nimport { verifyPersonalMessageSignature } from '@mysten/sui/verify';\nimport {useShortLink} from \"@okxconnect/core\";\nimport TronTransactionPanel from \"@/components/TronTransactionPanel.vue\";\nimport {TronWeb} from \"tronweb\";\nnew VConsole();\n\nconst allChains = {\n  1: { name: \"Eth\", checked: false },\n  56: { name: \"BNB\", checked: false },\n  137: { name: \"Polygon\", checked: false },\n  122: { name: \"Fuse\", checked: false },\n  \"ton:-239\":{name: \"TON\",checked: false},\n  \"btc:mainnet\": { name: \"BTC\", checked: false },\n  \"sui:mainnet\": { name: \"Sui\", checked: false },\n  \"aptos:mainnet\": { name: \"Aptos\", checked: false },\n  \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\": {\n    name: \"Solana\",\n    checked: false,\n  },\n  \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\": {\n    name: \"Sol testnet\",\n    checked: false,\n  },\n  \"svm:70000062\": {\n    name: \"Sonic testnet\",\n    checked: false,\n  },\n  \"movement:testnet\": { name: \"Movement\", checked: false },\n  \"fractal:mainnet\": { name: \"Fractal\", checked: false },\n  \"cosmos:osmosis-1\": {name: \"Osmos\", checked: false},\n  \"cosmos:cosmoshub-4\": {name: \"Cosmos\", checked: false},\n  \"cosmos:pacific-1\": {name: \"SEI\", checked: false},\n  \"cosmos:abvdefg\": {name: \"cosmos:abvdefg\", checked: false},\n  \"tron:mainnet\": {name: \"tron\", checked: false},\n  997865: { name: \"Non Exist chain\", checked: false },\n  2020: { name: \"Ronin\", checked: false },\n  1666600000: { name: \"Harmony\", checked: false },\n};\n\nconst chainsThatCanAddRedirectParam = [\n  \"eip\"\n]\n\nvar optionChains = new Set([]);\nvar selectedModals = [\"before\", \"success\", \"error\"];\nvar selectedReturnStrategy = \"none\";\nvar selectedDeepLink = \"tg://resolve\";\nvar selectedLanguage = \"en_US\";\nvar selectedTheme = THEME.LIGHT;\n\n// import QrcodeVue from 'qrcode.vue'\nexport default {\n  name: \"App\",\n  components: {\n    TronTransactionPanel,\n    QrcodeVue,\n    BTCPanel,\n    FractalPanel,\n    SuiPanel\n  },\n\n  data: () => {\n    return {\n      activeTab: \"eip155:1\",\n      testTopic: \"\",\n      testPublicKey: \"\",\n      testProofPayload: \"\",\n      tonProofValue:\"\",\n      pendingDeepLink: \"-\",\n      logList: [],\n      connectReady: false,\n      connectStatusStr: \"Connect\",\n      syncAllAddressStr: \"syncAllAddress\",\n      connectInitStr: \"init test\",\n      disconnectStatusStr: \"Disconnect\",\n      localPubKey: \"\",\n      localSecKey: \"\",\n      testTransaction: \"\",\n      selectedChain: \"eip155:1\",\n      testTransactionStr: \"Send\",\n      walletAddress: \"\",\n      testboc: \"\",\n      ProofPayloadVerify: \"\",\n      showModal: false,\n      showVerifyRow: false,\n      qrValue: \"https://www.okx.com/download\",\n      currentStatus: \"\",\n      areChainsInit: false,\n      availableChains: allChains,\n      isOptionalChecked: (chainId) => {\n        return optionChains.has(chainId);\n      },\n      withUI: localStorage.getItem(\"autoRefresh\") != \"false\",\n      universalToTG: localStorage.getItem(\"universalToTG\") != \"false\",\n      modals: selectedModals,\n      returnStrategies: [\"none\", \"back\", \"deeplink\"],\n      returnStrategy: selectedReturnStrategy,\n      deeplink: selectedDeepLink,\n      locales: [\n        \"en_US\",\n        \"ru_RU\",\n        \"zh_CN\",\n        \"zh\",\n        \"ar_AE\",\n        \"cs_CZ\",\n        \"de_DE\",\n        \"es_ES\",\n        \"es_LAT\",\n        \"fr_FR\",\n        \"id_ID\",\n        \"it_IT\",\n        \"nl_NL\",\n        \"pl_PL\",\n        \"pt_BR\",\n        \"pt_PT\",\n        \"ro_RO\",\n        \"tr_TR\",\n        \"uk_UA\",\n        \"vi_VN\",\n        \"zh_TW\"\n      ],\n      selectedMethod:[],\n      selectedMethodData:[],\n      connectMethods:[\n        \"wallet_addEthereumChain(ETH)\",\n        \"personal_sign(ETH)\",\n        \"solana_signMessage(Sol mainnet)\",\n        \"sui_signMessage(Sui mainnet)\",\n        \"sui_signPersonalMessage(Sui mainnet)\",\n        \"btc_signMessage(BTC)\",\n        \"aptos_signMessage(aptos mainnet)\",\n        \"cosmos_signArbitrary(cosmoshub)\",\n        \"test_noSupport_eth(ETH)\",\n        \"tron_signMessage\",\n        \"tron_signMessageV2\",\n        \"sync_all_addresses\"\n      ],\n\n      language: selectedLanguage,\n      theme: selectedTheme,\n      THEME: THEME,\n      redirect: selectedReturnStrategy,\n      redirectDeeplink: selectedDeepLink,\n      handleWithUI: (isChecked) => {\n        localStorage.setItem(\"autoRefresh\", `${isChecked}`);\n        location.reload();\n      },\n      handleUniversalToTG: (isChecked) => {\n        localStorage.setItem(\"universalToTG\", `${isChecked}`);\n      },\n      handleOptionChange: (chainId) => {\n        if (optionChains.has(chainId)) {\n          optionChains.delete(chainId);\n        } else {\n          optionChains.add(chainId);\n        }\n      },\n    };\n  },\n  computed: {\n    getWalletAddress: function () {\n      return this.walletAddress;\n    },\n  },\n  methods: {\n    isChecked(chainId) {\n      return this.selectedChains.has(chainId);\n    },\n\n    initChains(newChains) {\n      if (newChains.length > 0) {\n        const updatedChains = Object.assign({}, this.availableChains);\n        for (const chainId of newChains) {\n          if (updatedChains[chainId]){\n            updatedChains[chainId].checked = !updatedChains[chainId].checked;\n          }\n        }\n        this.availableChains = updatedChains;\n      }\n\n      this.areChainsInit = true;\n    },\n\n    async clickActiveTab(tab) {\n      const tabName = tab.props ? tab.props.name : tab.name;\n      this.selectedChain = tabName;\n      console.log(`已切换到链 :`, tabName);\n\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      window.provider.setDefaultChain(this.selectedChain);\n    },\n\n    async initBtnClicked() {\n      var initCall;\n      if (!this.withUI) {\n        initCall = OKXUniversalProvider.init({\n          dappMetaData: {\n            name: \"univer test dapp\",\n            icon: \"https://avatars.githubusercontent.com/u/37784886\",\n          },\n        });\n      } else {\n        initCall = OKXUniversalConnectUI.init({\n          dappMetaData: {\n            icon: \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\",\n            name: \"OKX WalletConnect UI Demo\",\n          },\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: \"all\",\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme\n          },\n        });\n      }\n\n      initCall.then((provider) => {\n        window.provider = provider;\n        window.tonProvider = new OKXTonProvider(window.provider);\n        window.tonProvider.onStatusChange((walletInfo) => {\n              console.log('TONConnection onStatusChange:', JSON.stringify(walletInfo));\n            }, (err) => {\n              console.log('TONConnection onStatusChange error:', err);\n            }\n        )\n\n        if (window.provider instanceof OKXUniversalConnectUI) {\n          window.provider.onModalStateChange((state)=>{\n            console.log(`onModalStateChange   ${JSON.stringify(state)}`)\n          })\n        }\n\n        console.log(\"init finished:\", provider);\n        console.log(\"init finished session:\", JSON.stringify(provider.session));\n\n        if (provider.session?.namespaces) {\n          const newChains = [];\n          console.log(\"namespaces\", provider.session.namespaces);\n          Object.entries(provider.session.namespaces).forEach(([key, value]) => {\n            if (key === \"eip155\") {\n              value.chains.forEach((chain) => {\n                newChains.push(parseInt(chain.substring(7)));\n              });\n            }\n            else {\n              value.chains.forEach((chain) => {\n                newChains.push(chain);\n              });\n            }\n          });\n\n          console.log(\"existing chains:\", newChains);\n          this.initChains(newChains);\n        } else {\n          this.initChains([]);\n        }\n\n        provider.on(\"display_uri\", (uri) => {\n          if (!useShortLink()){\n            if (this.isPC()) {\n              if (uri && !this.withUI && !this.universalToTG) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          }\n          console.log(\"通知>>>display_uri  ==> \", uri);\n        });\n\n        provider.on(\"connect_signResponse\", (items) => {\n          console.log(\"通知>>>connect_signResponse  ==> \", JSON.stringify(items));\n          this.verifyMessage(items)\n        })\n\n        provider.on(\"short_display_uri\", (uri) => {\n          if (useShortLink()){\n            if (this.isPC()) {\n              if (uri && !this.withUI && !this.universalToTG) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          }\n          console.log(\"通知>>>short_display_uri  ==> \", uri);\n        });\n\n\n        provider.on(\"session_connecting\", () => {\n          if (useShortLink()){\n            alert(\"session_connecting\")\n          }\n          console.log(\"通知>>>session_connecting  ==> \");\n        });\n\n        provider.on(\"connect\", (session) => {\n          console.log(\"通知>>>get connect session\", session);\n        });\n        provider.on(\"reconnect\", (session) => {\n          console.log(\"通知>>>get reconnect session\", session);\n          this.walletAddress = \"connected\";\n        });\n        provider.on(\"disconnect\", ({ topic }) => {\n          console.log(`通知>>>get disconnect  ${topic}`);\n          this.walletAddress = \"disconnecteddddd\";\n        });\n        provider.on(\"session_delete\", ({ topic }) => {\n          console.log(`通知>>>get session_delete  ${topic}`);\n        });\n        provider.on(\"session_update\", (session) => {\n          console.log(`通知>>>get session_update `, JSON.stringify(session));\n        });\n      });\n    },\n\n    async connectBtnClicked() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        this.testTonSdk();\n      } else {\n        console.log(`connectBtnClicked provider not finish init`);\n      }\n    },\n\n    async syncAllAddressClick() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        if (window.provider instanceof OKXUniversalProvider){\n          if (window.provider.connected()){\n            try {\n              let message = await window.provider.syncAllAddresses()\n              if (typeof message == \"string\") {\n                this.testboc = message\n              } else {\n                this.testboc = JSON.stringify(message)\n              }\n            }catch (e) {\n              this.testboc = JSON.stringify(e)\n            }\n          }else{\n            this.testboc = \"not connected\"\n          }\n        }\n\n      } else {\n        console.log(`syncAllAddress provider not finish init`);\n      }\n    },\n\n    async disconnectAction() {\n      try {\n        console.log(\"get disconnect wallet btn clicked\");\n        // await TON.disconnect();\n        var provider = window.provider;\n        await provider.disconnect();\n        this.walletAddress = \"disconnected\";\n      } catch (error) {\n        console.log(\"Disconnect  error ==>> \", error.message);\n        this.currentStatus = error.message;\n      }\n    },\n\n    async eth_requestAccounts() {\n      var data = { method: \"eth_requestAccounts\" };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_chainId() {\n      var data = { method: \"eth_chainId\" };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async wallet_switchEthereumChain() {\n      var data = { method: \"wallet_switchEthereumChain\" };\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async wallet_addEthereumChain() {\n      var data = {\n        method: \"wallet_addEthereumChain\",\n        params: {\n          blockExplorerUrls: [\"https://explorer.fuse.io\"],\n          chainId: \"0x7a\",\n          chainName: \"Fuse\",\n          nativeCurrency: { name: \"Fuse\", symbol: \"FUSE\", decimals: 18 },\n          rpcUrls: [\"https://rpc.fuse.io\"],\n        },\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n    async personal_sign() {\n      if (this.selectedChain === \"eip155:1\") {\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0x1ca023f10e157d148deed210f8bee193657a1eaa7f187909e20a9dc3b071dbc364c41fde37960c05093359f410a061ec8a7dca8c0c39fc7c1e24de8a3329775d1b\n\n        var accounts = await window.provider.request(\n          { method: \"eth_requestAccounts\" },\n          \"eip155:1\"\n        );\n        var address = accounts[0];\n        console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n        var dataETH = {\n          method: \"personal_sign\",\n          params: [\n            \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n            address,\n          ],\n        };\n\n        this.testTransaction = JSON.stringify(dataETH);\n      } else if (\n        this.selectedChain === \"eip155:137\" ||\n        this.selectedChain === \"eip155:122\"\n      ) {\n        // method\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0xebda9cfa2af43999058dffa0107031d1ef7fc0252dca85dcbd22ea097af922ca39b64d509ef61ce42b7641c5840b8a80337ffd1411b13e87e2260a3f1b6c151c1b\n\n        var dataPolygon = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n        this.testTransaction = JSON.stringify(dataPolygon);\n      } else if (this.selectedChain === \"eip155:56\") {\n        var data = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n\n        this.testTransaction = JSON.stringify(data);\n      }\n    },\n\n    async eth_sendTransaction_swap() {\n      var data = {\n        method: \"eth_sendTransaction\",\n        chainId: \"eip155:122\",\n        params: {\n          value: \"0x38d7ea4c68000\",\n          gas: \"0x2665f\",\n          to: \"0xf2614A233c7C3e7f08b1F887Ba133a13f1eb2c55\",\n          from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n          data: \"0x2646478b000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee00000000000000000000000000000000000000000000000000038d7ea4c68000000000000000000000000000620fd5fa44be6af63715ef4e65ddfa0387ad13f5000000000000000000000000000000000000000000000000000000000000001b000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000700301ffff0201602352A9Eb5234466Eac23E59e7B99bCaE79C39c0BE9e53fd7EDaC9F859882AfdDa116645287C629040BE9e53fd7EDaC9F859882AfdDa116645287C62900602352A9Eb5234466Eac23E59e7B99bCaE79C39c01f2F3e73be57031114dd1f4E75c1DD87658be7F0E000bb800000000000000000000000000000000\",\n        },\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_signTypedData_v4() {\n      // method\n      // eth_signTypedData\n      // address\n      // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n      // valid\n      // true\n      // result\n      // 0xa8bb3c6b33a119d2d567c7632195c21988df778006082742125a591f5c633f716107883a37f7de6531a6312a5f69022135bf46fe5ab77905b62c82b3395f985e1b\n      //\n\n      // var data = {\n      //   \"method\": \"eth_signTypedData_v4\",\n      //   \"params\": {\n      //     \"typedDataJson\":\"{\\\"types\\\":{\\\"EIP712Domain\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"version\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"chainId\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"name\\\":\\\"verifyingContract\\\",\\\"type\\\":\\\"address\\\"}],\\\"Person\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"wallet\\\",\\\"type\\\":\\\"address\\\"}],\\\"Mail\\\":[{\\\"name\\\":\\\"from\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"to\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"contents\\\",\\\"type\\\":\\\"string\\\"}]},\\\"primaryType\\\":\\\"Mail\\\",\\\"domain\\\":{\\\"name\\\":\\\"Ether Mail\\\",\\\"version\\\":\\\"1\\\",\\\"chainId\\\":1,\\\"verifyingContract\\\":\\\"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\\\"},\\\"message\\\":{\\\"from\\\":{\\\"name\\\":\\\"Cow\\\",\\\"wallet\\\":\\\"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\\\"},\\\"to\\\":{\\\"name\\\":\\\"Bob\\\",\\\"wallet\\\":\\\"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\\\"},\\\"contents\\\":\\\"Hello, Bob!\\\"}}\"\n      // }}\n\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n        this.selectedChain\n      );\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n      var data = {\n        method: \"eth_signTypedData_v4\",\n        params: [\n          address,\n          {\n            types: {\n              EIP712Domain: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"version\",\n                  type: \"string\",\n                },\n                {\n                  name: \"chainId\",\n                  type: \"uint256\",\n                },\n                {\n                  name: \"verifyingContract\",\n                  type: \"address\",\n                },\n              ],\n              Person: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"wallet\",\n                  type: \"address\",\n                },\n              ],\n              Mail: [\n                {\n                  name: \"from\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"to\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"contents\",\n                  type: \"string\",\n                },\n              ],\n            },\n            primaryType: \"Mail\",\n            domain: {\n              name: \"Ether Mail\",\n              version: \"1\",\n              chainId: 1,\n              verifyingContract: \"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\",\n            },\n            message: {\n              from: {\n                name: \"Cow\",\n                wallet: \"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\",\n              },\n              to: {\n                name: \"Bob\",\n                wallet: \"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\",\n              },\n              contents: \"Hello, Bob!\",\n            },\n          },\n        ],\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_sendTransaction_transfer() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            chainId: \"0x1\",\n            to: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            value: \"0x5af3107a4000\",\n            maxPriorityFeePerGas: \"0x3b9aca00\",\n            gas: \"0x5e56\",\n            maxFeePerGas: \"0x2643b9db8\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gasPrice: \"0x17003f6530\",\n            nonce: \"0x0d30\",\n            data: \"0x\",\n            value: \"0x00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasLimit: \"0x5208\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x5e56\",\n            value: \"0x5af3107a4000\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasPrice: \"0x3b9aca00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            chainId: \"0x38\",\n          },\n        };\n      }else if(this.selectedChain === \"eip155:122\"){\n         data =   {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            value: \"0x0\",\n            chainId: \"0x7a\",\n          }\n        }\n      }\n\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n        this.selectedChain\n      );\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"to\"] = address;\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_approve() {\n      var data = {};\n\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000000000000022d473030f116ddee9f6b43ac78ba3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x582d872a1b094fc48f5de31d3b73f2d9be47def1\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000f6f8096ac575b0\",\n            to: \"0x0b3F868E0BE5597D5DB7fEB59E1CADBb0fdDa50a\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            value: \"0x0\",\n            gas: \"0xe117\",\n            gasPrice: \"0xb2d05e00\",\n            data: \"0x095ea7b300000000000000000000000031c2f6fcff4f8759b3bd5bf0e1084a055615c768ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x5CA42204cDaa70d5c773946e69dE942b85CA6706\",\n          },\n        };\n      }else if (this.selectedChain === 'eip155:122'){\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000000000000013b3\",\n            to: \"0x620fd5fa44BE6af63715Ef4E65DDFA0387aD13F5\",\n          },\n        };\n      }\n\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n        this.selectedChain\n      );\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_mint() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x4cacb\",\n            data: \"0xa64dfa75000000000000000000000000ed688002f3797599db8b4feacfe8b1dda0df1c8d000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cecb15396825a895ff8da8fc2d2c77a234dccee00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f6261667962656968643737366b6177706e71336f6f6a6635693274787a76617737737164656b34616a776472637472703261366f626b70723773792f7b69647dan            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x30795\",\n            data: \"0xa64dfa75000000000000000000000000341b3687f0309778f08f29336b2c4b9c38b9f110000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f62616679626569686a6279676b68747a71376b68377434336266686e676e793236337668766f6578716a6d6e377161716166366e717a64743777712f7b69647dan            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      }\n\n      let str = JSON.stringify(data);\n      console.log(\"-----长度--->\", str.length);\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n          this.selectedChain\n      );\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async wallet_testRpc() {\n      let provider = window.provider;\n      provider.setDefaultChain(\n        `eip155:56`,\n        `https://eth-mainnet.g.alchemy.com/v2/NxUfYJUr-TQtEpLmSXhhD5pXn70GwsyV`\n      );\n      var data = {\n        method: \"eth_getBalance\",\n        params: [\"0x8D97689C9818892B700e27F316cc3E41e17fBeb9\", \"latest\"],\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async wallet_watchAsset() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xe0f63a424a4439cbe457d80e4f4b51ad25b2c56c\",\n              symbol: \"SPX6900\",\n              image:\n                \"https://assets.coingecko.com/coins/images/31401/standard/sticker_%281%29.jpg?1702371083\",\n              decimals: 8,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xeB51D9A39AD5EEF215dC0Bf39a8821ff804A0F01\",\n              symbol: \"LGNS\",\n              image: \"https://polygonscan.com/token/images/originlgns_32.png\",\n              decimals: 9,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0x031b41e504677879370e9dbcf937283a8691fa7f\",\n              symbol: \"FET\",\n              image: \"https://bscscan.com/token/images/fetch_32.png\",\n              decimals: 18,\n            },\n          },\n        };\n      }\n\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async ton_sendTransaction() {\n      var data  = {\n        \"messages\":[{\"address\":\"EQARULUYsmJq1RiZ-YiH-IJLcAZUVkVff-KBPwEmmaQGH6aC\",\"amount\":\"205000000\",\"payload\":\"te6cckEBAgEAhwABbQ+KfqUAAADNgG7tIEATEtAIAO87mQKicbKgHIk4pSPP4k5xhHqutqYgAB7USnesDnCcECwbgQMBAJUlk4VhgBD3JEg1TUr75iTijBghOKm/sxNDXUBl7CD6WMut0Q85x4RafwA/Es89DBXoTxuqxVFxyBbzt9Rav2HBUKl7hmkvLuKHLBCW57aK\"}],\n        \"validUntil\":1792481054,\n        \"network\":'-239'}\n      this.testTransaction = JSON.stringify(data)\n    },\n    ton_getAccount() {\n      this.testTransaction = \"这里是同步获取 不再需要点击 <<发送交易>>\"\n      let result =   window.tonProvider.account()\n      if (result) {\n        this.testboc = JSON.stringify(result);\n      } else {\n        this.testboc = 'null'\n      }\n    },\n\n    async tonUniversalLog() {\n      console.log(\"ton 信息: tonProvider  connected:\",window.tonProvider.connected())\n      console.log(\"ton 信息: tonProvider  account:\",JSON.stringify(window.tonProvider.account()))\n      console.log(\"ton 信息: tonProvider  wallet:\",JSON.stringify(window.tonProvider.wallet()))\n    },\n\n    async sendTransactionAlert() {\n      //\n      const response = await fetch(`https://apitest.fireverse.ai/oauth/okx/getNonce?publicAddress=0x0cecb15396825a895ff8da8fc2d2c77a234dccee`);\n      const data = await response.json();\n      console.log(\"请求数据----\",JSON.stringify(data))\n      await this.personal_sign()\n      if (confirm(\"Are you want to sign message?\")) {\n        this.sendTransaction();\n      }\n\n      // window.open(\"https://www.okx.com/download?deeplink=okx%3A%2F%2Fweb3%2Fwallet%2Fconnect\",'_self')\n    },\n\n    async sendTransaction() {\n      if (this.selectedChain.startsWith(\"aptos\")\n          || this.selectedChain.startsWith(\"movement\")\n          || this.selectedChain.startsWith(\"solana\")\n          || this.selectedChain.startsWith(\"sonic\")\n          || this.selectedChain.startsWith(\"cosmos\")) {\n        return\n      }\n      console.log(\"sendTransaction\", window.provider);\n      console.log(\"sendTransaction内容11------\", this.testTransaction);\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      if (this.testTransaction && window.provider) {\n        // eslint-disable-next-line no-undef\n        const sendData = JSON.parse(this.testTransaction);\n        try {\n          console.log(\"sendTransaction-----22method>>\", sendData.method);\n\n          let chainId = \"eip155:1\";\n          if (this.selectedChain) {\n            chainId = this.selectedChain;\n            console.log(\n              \"sendTransaction-----this.selectedChain>>\",\n              this.selectedChain\n            );\n          }\n          console.log(\"windowOpen[click_1]: \", Date.now());\n          if (chainId == \"sui:mainnet\") {\n            const adapter = new SuiAdapter(window.provider);\n            var suiResult = \"invalid result\";\n            if (this.currentSuiMethod == 'sui_getAccount') {\n              let result = adapter.getAccount()\n              if (typeof result == \"string\") {\n                this.testboc = result\n              } else {\n                this.testboc = JSON.stringify(result)\n              }\n            }\n            if (this.currentSuiMethod == \"sui_signTransaction\") {\n              suiResult = await adapter.signTransaction(\n                this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signAndExecuteTransaction\") {\n              suiResult = await adapter.signAndExecuteTransaction(\n                this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signMessage\") {\n              console.log(\"signMessage----\", this.currentSuiTransaction);\n              suiResult = await adapter.signMessage(this.currentSuiTransaction);\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_signPersonalMessage\") {\n              console.log(\n                \"signPersonalMessage----\",\n                this.currentSuiTransaction\n              );\n              suiResult = await adapter.signPersonalMessage(\n                this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_testRpc\") {\n              console.log(\"test rpc----\", this.currentSuiTransaction);\n              console.log(\n                `请求数据发送 rpc ----->> ${JSON.stringify(sendData)}`\n              );\n              const res = await window.provider.request(sendData, chainId);\n              console.log(`请求数据回调 rpc ----->> ${JSON.stringify(result)}`);\n              if (typeof res == \"string\") {\n                this.testboc = res;\n              } else {\n                this.testboc = JSON.stringify(res);\n              }\n            }\n            console.log(\"windowOpen[click_2]: \", Date.now());\n            return;\n          }else if(chainId === \"ton:-239\"){\n            console.log(\n                `请求数据发送 sendTransaction ---ton-->> ${JSON.stringify(sendData)}`\n            );\n            let result =  await window.tonProvider.sendTransaction(sendData)\n            console.log(\n                `请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`\n            );\n            if (typeof result == \"string\") {\n              this.testboc = result;\n            } else {\n              this.testboc = JSON.stringify(result);\n            }\n            return\n          }\n\n          if (chainId == 'btc:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var btcResult = 'invalid result'\n\n            if (this.currentBtcMethod == 'btc_signMessage') {\n              btcResult = await btcAdapter.signMessage(chainId, this.currentBtcTransaction[\"signStr\"])\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_send') {\n              btcResult = await btcAdapter.send(chainId, this.currentBtcTransaction)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signPsbt') {\n              btcResult = await btcAdapter.signPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n\n              this.hexToBase64(btcResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentBtcMethod == 'btc_signPsbts') {\n              btcResult = await btcAdapter.signPsbts(chainId, this.currentBtcTransaction.psbtHexs, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_sendInscription') {\n              btcResult = await btcAdapter.sendInscription(chainId, this.currentBtcTransaction.address, this.currentBtcTransaction.inscriptionId, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signAndPushPsbt') {\n              btcResult = await btcAdapter.signAndPushPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            }else if (this.currentBtcMethod == 'btc_sendBitcoin') {\n              btcResult = await btcAdapter.sendBitcoin(chainId, this.currentBtcTransaction.toAddress, this.currentBtcTransaction.satoshis, this.currentBtcTransaction.options)\n\n              this.testboc = JSON.stringify(btcResult)\n            }\n            return\n          }\n\n          if (chainId == 'fractal:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var fractalResult = 'invalid result'\n\n            if (this.currentFractalMethod == 'fractal_signMessage') {\n              fractalResult = await btcAdapter.signMessage(chainId, this.currentFractalTransaction['signStr'])\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_send') {\n              fractalResult = await btcAdapter.send(chainId, this.currentFractalTransaction)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signPsbt') {\n              fractalResult = await btcAdapter.signPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.hexToBase64(fractalResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentFractalMethod == 'fractal_signPsbts') {\n              fractalResult = await btcAdapter.signPsbts(chainId, this.currentFractalTransaction.psbtHexs, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_sendInscription') {\n              fractalResult = await btcAdapter.sendInscription(chainId, this.currentFractalTransaction.address, this.currentFractalTransaction.inscriptionId, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signAndPushPsbt') {\n              fractalResult = await btcAdapter.signAndPushPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            }else if (this.currentFractalMethod == 'fractal_sendBitcoin') {\n              fractalResult = await btcAdapter.sendBitcoin(chainId, this.currentFractalTransaction.toAddress, this.currentFractalTransaction.satoshis, this.currentFractalTransaction.options)\n\n              this.testboc = JSON.stringify(fractalResult)\n            }\n\n            return\n          }\n\n          console.log(`请求数据发送 sendTransaction ----->> ${JSON.stringify(sendData)}`)\n          var result = await window.provider.request(sendData, chainId)\n          console.log(`请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`)\n\n          console.log(\"windowOpen[click_3]: \", Date.now());\n          if (typeof result == \"string\") {\n            this.testboc = result;\n          } else {\n            this.testboc = JSON.stringify(result);\n          }\n          console.log(\"方法数据回调 --this.testboc--\", this.testboc);\n        } catch (error) {\n          console.error(\"方法数据回调失败 --Error--\", error.message);\n\n          if (error.code === OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n            this.testboc = error.message;\n          } else {\n            this.testboc = \"wrong signature！\" + error.message;\n          }\n        }\n      } else {\n        alert(\"Please input transaction data\");\n      }\n    },\n\n    hexToBase64(hexStr) {\n      var bytes = [];\n      for (var i = 0; i < hexStr.length; i += 2) {\n        bytes.push(parseInt(hexStr.substr(i, 2), 16));\n      }\n      const buffer = new Uint8Array(bytes)\n      const blob = new Blob([buffer]);\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = function (e) {\n          var base64Data = e.target.result.split(\",\")[1]\n          resolve(base64Data);\n        };\n        reader.onerror = function (e) {\n          reject(e);\n        };\n        reader.readAsDataURL(blob);\n      });\n    },\n    testBase64UrlSafe(){\n      let datatest = {\"protocolVer\":1,\"topic\":\"8a7a4c3be73802d0ae2587123ade7bb79f27433b9aa3ca589a2208a2089eecfd\",\"clientId\":\"5f1bbf9eac92160affa7ef04d0a710817ddb6d8c22ebbd6263e86f059930b404\",\"requestId\":\"1731383250054\",\"dAppInfo\":{\"url\":\"connect.oker.vip\",\"origin\":\"https://connect.oker.vip\",\"name\":\"univer test dapp\",\"icon\":\"https://avatars.githubusercontent.com/u/37784886\"},\"requests\":[{\"name\":\"requestAccounts\",\"requiredNamespaces\":[{\"namespace\":\"aptos\",\"chains\":[\"aptos:637\"]}],\"optionalNamespaces\":[],\"connectRequestMethods\":[{\"chainId\":\"aptos:637\",\"method\":\"aptos_signMessage\",\"params\":{\"data\":{\"address\":true,\"application\":true,\"chainId\":true,\"message\":\"123 中文测试!\",\"nonce\":\"1234\"},\"applicationUrl\":\"https://connect.oker.vip\",\"prefix\":\"APTOS\",\"aptosChainId\":\"1\"}}]}],\"redirect\":\"none\"}\n      let json = JSON.stringify(datatest)\n      const utf8Array = new TextEncoder().encode(json);\n      let binary = '';\n      utf8Array.forEach(byte => {\n        binary += String.fromCharCode(byte);\n      });\n\n      let firstStr =  btoa(binary)\n      console.log(\"字符串编码1>>>>\",firstStr)\n      firstStr = firstStr.replace(/\\+/g, '-')  // 替换 '+'\n      console.log(\"字符串编码2>>>>\",firstStr)\n      firstStr = firstStr.replace(/\\//g, '_')  // 替换 '/'\n      console.log(\"字符串编码3>>>>\",firstStr)\n      firstStr = firstStr.replace(/=+$/, '');  // 移除 '=';\n      console.log(\"字符串编码4>>>>\",firstStr)\n\n      let showUrl =  getUniversalLink(getAppWalletDeepLink(firstStr))\n      console.log(\"字符串编码5>>>>\",showUrl)\n      this.qrValue = showUrl;\n      this.showModal = true;\n    },\n\n\n    async testTonSdk() {\n      // 1. connect\n      //  create sub providers for each namespace/chain\n      let nameSpacesChains = [];\n      let optSpaceChains = [];\n\n      let solanaChains = [\n        \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n        \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n        \"svm:70000062\",\n      ];\n      let hasEip155, hasSolana, hasSui, hasBtc, hasAptos, hasTon, hasCosmos, hasTron = false\n\n      let suiChains = [\n        \"sui:mainnet\",\n      ];\n\n      let btcChains = [\n        \"btc:mainnet\",\n        \"fractal:mainnet\"\n      ];\n\n      const chains = Object.entries(this.availableChains)\n          .filter((chain) => chain[1].checked)\n          .map((chain) => chain[0]);\n      console.log(`chains  ===> ${chains.values()}`)\n      chains.forEach(function (chainId) {\n        console.log(`chains.forEach chainId  ===> ${chainId}`)\n\n        if (solanaChains.includes(chainId)) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"ton\")) {\n          nameSpacesChains.push(chainId)\n          hasTon = true\n          return\n        }\n        if (typeof chainId == 'string' && (chainId.startsWith(\"aptos\") || chainId.startsWith(\"movement\"))) {\n          nameSpacesChains.push(chainId)\n          hasAptos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId)\n          hasSolana = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"cosmos\")) {\n          nameSpacesChains.push(chainId)\n          hasCosmos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"tron\")) {\n          nameSpacesChains.push(chainId)\n          hasTron = true\n          return\n        }\n\n        if (suiChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`);\n          nameSpacesChains.push(chainId);\n          hasSui = true;\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`)\n          nameSpacesChains.push(chainId)\n          hasBtc = true\n          return\n        }\n\n        hasEip155 = true\n        nameSpacesChains.push(`eip155:${chainId}`)\n      })\n\n\n      optionChains.forEach(function (chainId) {\n        if (solanaChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n        if (typeof chainId == \"string\" && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (suiChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          optSpaceChains.push(chainId)\n          return\n        }\n\n        optSpaceChains.push(`eip155:${chainId}`)\n      })\n\n      console.log(`namespaceChains  ===> ${JSON.stringify(nameSpacesChains)}`);\n      var connectData = {};\n      if (nameSpacesChains && nameSpacesChains.length > 0) {\n        var requireData = {};\n\n        if (hasEip155) {\n          requireData.eip155 = {\n            chains: nameSpacesChains.filter((item) =>\n              item.startsWith(\"eip155\")\n            ),\n            defaultChain: nameSpacesChains.filter((item) =>\n              item.startsWith(\"eip155\")\n            )[0],\n          };\n        }\n        if (hasSolana) {\n          requireData.solana = {\n            chains: nameSpacesChains.filter(\n              (item) =>\n                item.startsWith(\"solana\") ||\n                item.startsWith(\"sonic\") ||\n                item.startsWith(\"svm\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n              (item) =>\n                item.startsWith(\"solana\") ||\n                item.startsWith(\"sonic\") ||\n                item.startsWith(\"svm\")\n            )[0],\n          };\n        }\n\n        if (hasCosmos) {\n          requireData.cosmos = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            )[0],\n          }\n        }\n        if (hasTron) {\n          requireData.tron = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            )[0],\n          }\n        }\n        if (hasTon) {\n\n          //\n          let tonParams = {\n            ton_addr:{\n              name: 'ton_addr',\n            }\n          };\n          if (this.tonProofValue){\n            tonParams = {\n              ton_addr:{\n                name: 'ton_addr',\n              },\n              ton_proof:{\n                name: 'ton_proof',\n                payload: this.tonProofValue,\n              }\n            };\n          }\n\n\n          requireData.ton = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"ton\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"ton\"))[0],\n            params:tonParams\n          };\n        }\n\n        if (hasSui) {\n          requireData.sui = {\n            chains: nameSpacesChains.filter((item) => item.startsWith(\"sui\")),\n            defaultChain: nameSpacesChains.filter((item) =>\n              item.startsWith(\"sui\")\n            )[0],\n            rpcMap: {\n              \"sui:mainnet\": \"https://www.okx.com/fullnode/sui/discover/rpc\"\n            }\n          };\n        }\n        if (hasAptos) {\n          requireData.aptos = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\"))[0]\n          }\n        }\n\n        if (hasBtc) {\n          let btcChains = nameSpacesChains.filter(item => item.startsWith(\"btc\") || item.startsWith(\"fractal\"))\n          requireData.btc = {\n            chains: btcChains,\n            defaultChain: btcChains[0]\n          }\n        }\n        console.log(`requireData  ===> ${JSON.stringify(requireData)}`)\n        connectData['namespaces'] = requireData;\n        console.log(JSON.stringify(connectData))\n      }\n\n      if (optSpaceChains && optSpaceChains.length > 0) {\n        var optData = {\n          eip155: {\n            chains: optSpaceChains.filter((item) => item.startsWith(\"eip155\")),\n            defaultChain: optSpaceChains.filter((item) =>\n              item.startsWith(\"eip155\")\n            )[0],\n          },\n        };\n        connectData[\"optionalNamespaces\"] = optData;\n      }\n\n      if (nameSpacesChains.length === 0 && optSpaceChains.length === 0) {\n        //未选择链\n        alert(\"Please select a chain from above to continue\");\n        return;\n      }\n      console.log(\"=====>connectData \");\n      console.log(connectData);\n\n      var connectMethod;\n      let signMethods = this.getCurrentSelectedMethodData();\n      if (window.provider instanceof OKXUniversalConnectUI) {\n        if (signMethods && signMethods.length>0){\n          connectMethod = window.provider.openModalAndSign(connectData,JSON.parse(JSON.stringify(signMethods)));\n        }else {\n          connectMethod = window.provider.openModal(connectData);\n        }\n      } else {\n        if (this.universalToTG){\n          connectData.sessionConfig = {\n            useMini:true,\n            openUniversalUrl:true,\n            tmaReturnUrl:'back'\n          }\n        }else{\n          connectData.sessionConfig = {\n            redirect: selectedReturnStrategy\n          }\n        }\n        if (signMethods && signMethods.length>0){\n          connectMethod = window.provider.connectAndSign(connectData,JSON.parse(JSON.stringify(signMethods)));\n        }else {\n          connectMethod = window.provider.connect(connectData);\n        }\n      }\n\n      await connectMethod\n        .then((result) => {\n          // 2. set defaul chain\n          this.walletAddress = \"connected\";\n          if (this.isPC()) {\n            this.showModal = false;\n          }\n          if (result){\n            this.testboc = JSON.stringify(result)\n          }\n\n          if (window.provider.session && window.provider.session.namespaces){\n            let ton = window.provider.session.namespaces[\"ton\"];\n          console.log(\"是否包含ton\",ton)\n            if (ton){\n              this.tonUniversalLog()\n            }\n          }\n\n\n\n        })\n        .catch((error) => {\n          if (error.message){\n            alert(error.message)\n          }\n\n          console.error(\"发生了错误：\", error);\n        });\n    },\n\n    getCurrentSelectedMethodData(){// 连接签名\n      var methodList = [];\n      this.selectedMethod.forEach(method =>{\n        switch (method) {\n          case \"wallet_addEthereumChain(ETH)\":\n            methodList.push({\n              method: \"wallet_addEthereumChain\",\n              chainId:\"eip155:1\",\n              params: {\n                blockExplorerUrls: [\"https://explorer.fuse.io\"],\n                chainId: \"0x7a\",\n                chainName: \"Fuse\",\n                nativeCurrency: { name: \"Fuse\", symbol: \"FUSE\", decimals: 18 },\n                rpcUrls: [\"https://rpc.fuse.io\"],\n              },\n            })\n            break;\n          case \"personal_sign(ETH)\":\n            methodList.push(\n              {\n                method: \"personal_sign\",\n                chainId: \"eip155:1\",\n                params: [\n                  \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n                ],\n              });\n            break;\n          case \"solana_signMessage(Sol mainnet)\":\n            methodList.push(\n              {\n                \"chainId\": \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n                \"method\": \"solana_signMessage\",\n                \"params\": {\n                  \"message\": \"Hello Solana\",\n                }\n              }\n            );\n            break;\n          case \"sui_signMessage(Sui mainnet)\":\n          case \"sui_signPersonalMessage(Sui mainnet)\": {\n            let suiData = [\n              76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n              109, 111, 118, 101,\n            ];\n            let uint8Array = new Uint8Array(suiData);\n            let currentMethod = \"sui_signMessage\";\n            this.currentSuiTransaction = {\n              message:uint8Array\n            }\n\n            if(method.startsWith(\"sui_signPersonalMessage\")){\n              currentMethod = \"sui_signPersonalMessage\";\n            }\n            methodList.push(\n                {\n                  method: currentMethod,\n                  chainId: \"sui:mainnet\",\n                  params: {\n                    message: uint8Array,\n                  }\n                }\n            );\n            break;\n          }\n          case \"btc_signMessage(BTC)\":\n            methodList.push(\n              {\n                method: \"btc_signMessage\",\n                chainId: \"btc:mainnet\",\n                params: {\n                  message: \"Welcome to BTC\"\n                }\n              }\n            )\n            break;\n          case \"aptos_signMessage(aptos mainnet)\":\n            methodList.push(\n              {\n                \"chainId\": \"aptos:mainnet\",\n                \"method\": \"aptos_signMessage\",\n                \"params\": {\n                  address: true,\n                  application: true,\n                  chainId: true,\n                  message: \"Hello Aptos\",\n                  nonce: \"1234\"\n                }\n              }\n            )\n            break;\n          case \"cosmos_signArbitrary(cosmoshub)\":\n            methodList.push(\n                {\n                  \"chainId\": \"cosmos:cosmoshub-4\",\n                  \"method\": \"cosmos_signArbitrary\",\n                  \"params\": {\n                    message: \"test cosmos\"\n                  }\n                }\n            )\n\n            break;\n          case \"test_noSupport_eth(ETH)\":\n            methodList.push(\n                {\n                  chainId: \"eip155:1\",\n                  method: \"test_noSupport_eth\",\n                  params: {\n                    message: \"test hello\",\n                  }\n                }\n            )\n            break;\n          case \"sync_all_addresses\":\n            methodList.push(\n                {\n                  method: \"sync_all_addresses\",\n                });\n            break;\n          case \"tron_signMessage\":\n            methodList.push(\n                {\n                  chainId:\"tron:mainnet\",\n                  method: \"tron_signMessage\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n          case \"tron_signMessageV2\":\n            methodList.push(\n                {\n                  chainId:\"tron:mainnet\",\n                  method: \"tron_signMessageV2\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n            //\n          default:\n\n            break;\n        }\n      })\n      this.selectedMethodData = methodList\n      return methodList\n\n    },\n\n\n    closeModal() {\n      this.showModal = false;\n    },\n\n    isPC() {\n      const userAgentInfo = navigator.userAgent;\n      console.log(\"current device ua is ===>\", userAgentInfo);\n\n      const Agents = [\n        \"Android\",\n        \"iPhone\",\n        \"SymbianOS\",\n        \"Windows Phone\",\n        \"iPad\",\n        \"iPod\",\n      ];\n      let flag = true;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = false;\n          break;\n        }\n      }\n      return flag;\n    },\n    isSafariOrChrome() {\n      const userAgentInfo = navigator.userAgent;\n      const Agents = [\"Safari\", \"Chrome\"];\n      let flag = false;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = true;\n          break;\n        }\n      }\n      return flag;\n    },\n\n    /// solana\n    async sol_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      let data = {\n        method: \"solana_signMessage\",\n        params: {\n          message: \"Hello Solana\",\n          pubkey: \"\",\n        },\n      };\n      this.testTransaction = JSON.stringify(data);\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let message = await provider.signMessage(\n          \"Hello Solana\",\n          this.selectedChain\n      );\n      console.log(\"solana_signMessage Result:\",JSON.stringify(message))\n      const result1 = nacl.sign.detached.verify(\n          new TextEncoder().encode(\"Hello Solana\"),\n          message.signature,\n          new PublicKey(message.publicKey).toBytes()\n      );\n      console.log(result1)\n\n      if (typeof message == \"string\") {\n        this.testboc = result1;\n      } else {\n        this.testboc = result1;\n      }\n    },\n\n    async aptos_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      let data = {\n        address: true,\n        application: true,\n        chainId: true,\n        message: \"Hello Aptos\",\n        nonce: \"1234\"\n      }\n\n      let provider = new OKXAptosProvider(window.provider)\n      let message = await provider.signMessage(data, this.selectedChain)\n      this.testTransaction = JSON.stringify(data)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n          functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async move_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async move_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n          functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n        },\n      });\n\n      // let data = {\n      //   \"arguments\": [\"100000\",[\"0\",\"0\",\"10533\"],[\"10\",\"5\",\"5\"],[\"false\",\"false\",\"true\"]],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x3\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\",\"0x73eb84966be67e4697fc5ae75173ca6c35089e802650f75422ab49a8729704ec::coin::DooDoo\",\"0x53a30a6e5936c0a4c5140daed34de39d17ca7fcae08f947c02e979cef98a3719::coin::LSD\",\"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::CurveV1\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x54cb0bb2c18564b86e34539b9f89cfe1186e39d89fce54e1cd007b8e61673a85::bin_steps::X80\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async sol_signVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(\n        provider.getAccount(\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\").address\n      );\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n         recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signTransaction(\n        transaction,\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAndSendVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n        transaction,\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllVersionedTransactions() {\n      let provider = new OKXSolanaProvider(window.provider);\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n        [transaction],\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signTransaction() {\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n         recentBlockhash: blockhash,\n      }).add(\n        SystemProgram.transfer({\n          fromPubkey: new PublicKey(provider.getAccount().address),\n          toPubkey: new PublicKey(provider.getAccount().address),\n          lamports: 1000,\n        })\n      );\n\n      this.testTransaction = safeJsonStringify(transaction)\n      let result = await provider.signTransaction(\n        transaction,\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllTransactions() {\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n        SystemProgram.transfer({\n          fromPubkey: new PublicKey(provider.getAccount().address),\n          toPubkey: new PublicKey(provider.getAccount().address),\n          lamports: \"100\",\n        })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n        [transaction],\n        this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    getSolConnect() {\n      let rpc = \"https://www.okx.com/fullnode/sol/discover/rpc\"\n      if (this.selectedChain === \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\") {\n        rpc = \"https://www.okx.com//fullnode/sol/discover/rpc\"\n      } else if (this.selectedChain === \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\"){\n        rpc = \"https://www.okx.com/fullnode/soltestnet/discover/rpc\"\n      } else if (this.selectedChain === \"svm:70000062\") {\n        rpc = \"https://www.okx.com/fullnode/sonic/testnet/discover/rpc\"\n      }\n      return rpc\n    },\n\n    async sol_signAndSendTransaction() {\n\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n        SystemProgram.transfer({\n          fromPubkey: new PublicKey(provider.getAccount().address),\n          toPubkey: new PublicKey(provider.getAccount().address),\n          lamports: \"100\",\n        })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n        transaction,\n        this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async cosmos_signArbitrary() {\n      let provider = new OKXCosmosProvider(window.provider)\n      let message = await provider.signArbitrary(this.selectedChain, provider.getAccount(this.selectedChain).address, \"test cosmos\")\n      if (typeof message == \"string\") {\n        this.testboc = message;\n      } else {\n        let isValid =  await this.cosmos_verifySignArbitrary(provider.getAccount(this.selectedChain).address,\"test cosmos\",message.signature, message.pub_key.value)\n        console.log(\"verify\",isValid)\n        this.testboc = \"verify:\" + isValid + JSON.stringify(message);\n      }\n    },\n\n    async cosmos_verifySignArbitrary(signer, data, signature, pubkey) {\n      try {\n        console.log(\"cosmos_verifySignArbitrary signer:\",signer)\n        console.log(\"cosmos_verifySignArbitrary data:\",JSON.stringify(data))\n        console.log(\"cosmos_verifySignArbitrary signature:\",signature)\n        console.log(\"cosmos_verifySignArbitrary pubkey:\",pubkey)\n\n        // 将bech32地址转换为公钥\n        const {prefix: prefixStr} = fromBech32(signer)\n\n        const signatureBuffer = Buffer.from(signature, 'base64');\n\n        const uint8Signature = new Uint8Array(signatureBuffer); // Convert the buffer to an Uint8Array\n\n        const pubKeyValueBuffer = Buffer.from(pubkey, 'base64'); // Decode the base64 encoded value\n\n        const pubKeyUint8Array = new Uint8Array(pubKeyValueBuffer); // Convert the buffer to an Uint8Array\n\n        // 验证签名\n        return await verifyADR36Amino(\n            prefixStr,\n            signer,\n            data,\n            pubKeyUint8Array,\n            uint8Signature\n        )\n      } catch (err) {\n        console.error('Verification failed:', err)\n        return false\n      }\n    },\n\n    async cosmos_signAmino(){\n      let provider = new OKXCosmosProvider(window.provider)\n      // const rpcUrl = 'https://osmosis-rpc.publicnode.com:443';\n      // const client = await StargateClient.connect(rpcUrl);\n      // const height = await client.getHeight();\n      // let address = provider.getAccount(this.selectedChain).address\n      // const sequence = await client.getSequence(address)\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      // let signDoc = makeSignDoc(\n      //     transaction.msgs,\n      //     transaction.fee,\n      //     this.selectedChain.split(\":\")[1],\n      //     transaction.memo,\n      //     transaction.accountNumber,\n      //     transaction.sequence,\n      // )\n      let signDoc = {\n        \"chain_id\": \"osmosis-1\",\n        \"account_number\": \"630104\",\n        \"sequence\": \"480\",\n        \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]},\n        \"msgs\": [{\n          \"type\": \"osmosis/poolmanager/swap-exact-amount-in\",\n          \"value\": {\n            \"sender\": \"osmo1u6lts9ng4etxj0zdaxsada6zgl8dudpgelmuyu\",\n            \"routes\": [{\n              \"pool_id\": \"1096\",\n              \"token_out_denom\": \"ibc/987C17B11ABC2B20019178ACE62929FE9840202CE79498E29FE8E5CB02B7C0A4\"\n            }, {\n              \"pool_id\": \"611\",\n              \"token_out_denom\": \"ibc/27394FB092D2ECCD56123C74F36E4C1F926001CEADA9CA97EA622B25F41E5EB2\"\n            }],\n            \"token_in\": {\"denom\": \"uosmo\", \"amount\": \"100\"},\n            \"token_out_min_amount\": \"8\"\n          }\n        }],\n        \"memo\": \"FE\",\n        \"timeout_height\": \"23603788\",\n        \"signOptions\": {\n          \"useOneClickTrading\": false,\n          \"preferNoSetFee\": true,\n          \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]}\n        }\n      }\n\n\n\n\n\n\n\n      // let signOption = {\n      //   memo: true, // optional\n      //   fee: true, // optional\n      //   gasRate: {\n      //     // optional\n      //     average: \"0.2\",\n      //     low: \"0.02\",\n      //     tiny: \"0.002\",\n      //   },\n      // }\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signAmino(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, signDoc)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    messageToBuffer(message) {\n      var buffer = Buffer.from([]);\n      try {\n        if (typeof message === \"string\") {\n          buffer = Buffer.from(message.replace(\"0x\", \"\"), \"hex\");\n        } else {\n          buffer = Buffer.from(message);\n        }\n      } catch (err) {\n        console.log(`messageToBuffer error: ${err}`);\n      }\n      return buffer;\n    },\n\n\n\n    async cosmos_signDirect() {\n      let provider = new OKXCosmosProvider(window.provider)\n\n      let signDoc = {\n        \"bodyBytes\": this.messageToBuffer(\"0x0ac1010a292f6962632e6170706c69636174696f6e732e7472616e736665722e76312e4d73675472616e736665721293010a087472616e7366657212096368616e6e656c2d301a0d0a05756f736d6f120431303030222b6f736d6f3175366c7473396e67346574786a307a64617873616461367a676c386475647067656c6d7579752a2d636f736d6f733175366c7473396e67346574786a307a64617873616461367a676c386475647067337967766a773207080410ebe3f90a3880b0bcafd18cec8218\"),\n        \"authInfoBytes\": this.messageToBuffer(\"0x0a510a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a2102446e19e94ac0e83ea896d2712507577eb39fbdd2d6ae9f0fc0b9759f1fbaba9012040a02080118e00312140a0e0a05756f736d6f1205323530303010859a11\"),\n        \"chainId\": \"osmosis-1\",\n        \"accountNumber\": \"630104\",\n      }\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signDirect(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, transaction)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    sui_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentSuiTransaction = params\n      this.currentSuiMethod = flag\n    },\n\n    btc_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentBtcTransaction = params\n      this.currentBtcMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n\n    fractal_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentFractalTransaction = params\n      this.currentFractalMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n    tron_getTransactionResult(result) {\n      if (typeof result == \"string\") {\n        this.testboc = result\n      } else {\n        this.testboc = JSON.stringify(result)\n      }\n    },\n    tron_generateTransactionParams(params){\n      if (typeof params == \"string\") {\n        this.testTransaction = params\n      } else {\n        this.testTransaction = JSON.stringify(params)\n      }\n    },\n    handleModalsSelect(modals) {\n      selectedModals = modals;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: modals.length === 3 ? \"all\" : modals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n\n    handleReturnStrategySelect(returnStrategy) {\n      selectedReturnStrategy = returnStrategy === \"deeplink\" ? this.deeplink : returnStrategy;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      } else {\n        if (window.provider.sessionConfig) {\n          window.provider.sessionConfig.redirect = selectedReturnStrategy;\n        } else {\n          window.provider.sessionConfig = {\n            redirect: selectedReturnStrategy\n          };\n        }\n      }\n    },\n\n    handleReturnStrategyDeeplink(deeplink) {\n      console.log('handleReturnStrategyDeeplink', deeplink)\n      selectedReturnStrategy = deeplink;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: deeplink,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      } else {\n        if (window.provider.sessionConfig) {\n          window.provider.sessionConfig.redirect = deeplink;\n        } else {\n          window.provider.sessionConfig = {\n            redirect: deeplink\n          };\n        }\n      }\n    },\n\n    handleLanguageSelect(language) {\n      selectedLanguage = language;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: language,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n    handleConnectMethodsSelect() {\n      console.log(\"当前的方法 this.selectedMethod>>>>\",this.selectedMethod);\n    },\n\n    eth_verifyMessage(message, signature,ethAddress) {\n      console.log(\"eth_verifyMessage   message>>>\",message)\n      console.log(\"eth_verifyMessage   signature>>>\",signature)\n      console.log(\"eth_verifyMessage   ethAddress>>>\",ethAddress)\n      if (!message || !signature){\n        return \"\"\n      }\n      let originalMessage = message\n      if (message.startsWith(\"0x\")){\n        originalMessage = originalMessage.replace(/^0x/, '');\n        let str = '';\n        for (let i = 0; i < originalMessage.length; i += 2) {\n          const byte = originalMessage.slice(i, i + 2);\n          str += String.fromCharCode(parseInt(byte, 16));\n        }\n        originalMessage = str\n      }\n      console.log(\"eth_verifyMessage   originalMessage>>>\",originalMessage)\n\n      // const messageHash = ethers.utils.hashMessage(originalMessage);\n      const recoveredAddress = ethers.utils.verifyMessage(originalMessage, signature);\n      console.log(\"eth_verifyMessage recoveredAddress:\", recoveredAddress);\n      return recoveredAddress.toLowerCase() === ethAddress.toLowerCase();\n    },\n\n    async verifyMessage(list){ //连接验签\n\n        if (window.provider && window.provider.session && list && list.length>0){\n          let verifyList = {}\n          for (let methodItem of list){\n            if (\"result\" in methodItem && \"method\" in methodItem){\n              let requestItme = this.selectedMethodData.filter(item => item.method === methodItem.method)[0];\n              console.log(\"验证签名 请求>>>:\", JSON.stringify(requestItme));\n              console.log(\"验证签名 结果>>>:\", JSON.stringify(methodItem));\n              if (methodItem.method === \"personal_sign\"){\n                let ethAddress = await window.provider.request({ method: \"eth_requestAccounts\" },methodItem.chainId)\n                ethAddress = ethAddress[0];\n                console.log(\"验证eth 钱包地址>>>:\", ethAddress);\n                let ethMessage = requestItme.params[0]\n                console.log(\"验证eth 签名消息体>>:\", JSON.stringify(ethMessage));\n                verifyList[methodItem.method] = this.eth_verifyMessage(ethMessage,methodItem.result,ethAddress)\n              }else if(methodItem.method === \"solana_signMessage\"){\n                let solanaMessage = methodItem.result\n                if (\"signature\" in solanaMessage && \"publicKey\" in solanaMessage){\n                  const verifySol = nacl.sign.detached.verify(\n                      new TextEncoder().encode(\"Hello Solana\"),\n                      solanaMessage.signature,\n                      new PublicKey(solanaMessage.publicKey).toBytes()\n                  );\n                  verifyList[methodItem.method] = verifySol\n                }else {\n                  verifyList[methodItem.method] = false\n                }\n              }else if(methodItem.method === \"sui_signPersonalMessage\" || methodItem.method === \"sui_signMessage\"){\n                let suiResult =  this.sui_verifySignature(methodItem.result);\n                  verifyList[methodItem.method] = (await suiResult).result\n              }else if(methodItem.method === \"btc_signMessage\"){\n\n                verifyList[methodItem.method] = \"Not verified yet\"\n\n              }else if(methodItem.method === \"aptos_signMessage\"){\n                let aptosMessage = methodItem.result\n                let aptosProvider = new OKXAptosProvider(window.provider)\n                let  aptosPublicKey  = aptosProvider.getAccount(methodItem.chainId)?.publicKey\n\n                let signStr = aptosMessage.signature\n                if (signStr.startsWith(\"0x\")) {\n                  signStr = signStr.slice(2, signStr.length)\n                }\n\n                console.log(\"aptos_signMessage aptosPublicKey And signStr\",aptosPublicKey,signStr)\n                verifyList[methodItem.method] = nacl.sign.detached.verify(\n                    Buffer.from(aptosMessage.fullMessage),\n                    Buffer.from(signStr, 'hex'),\n                    Buffer.from(aptosPublicKey, 'hex'),\n                );\n              }else if(methodItem.method === \"cosmos_signArbitrary\"){\n                let cosmosProvider = new OKXCosmosProvider(window.provider)\n                let cosmosAddress = cosmosProvider.getAccount(methodItem.chainId)?.address\n                let cosmosMessage = methodItem.result\n                let isValid =  await this.cosmos_verifySignArbitrary(cosmosAddress,\"test cosmos\",cosmosMessage.signature, cosmosMessage.pub_key.value)\n                verifyList[methodItem.method] = isValid\n\n              }else if (methodItem.method === \"tron_signMessage\") {\n                let tronMessage = methodItem.result\n                let tronWeb = new TronWeb({\n                  \"fullHost\": 'https://api.trongrid.io',\n                  \"headers\": {},\n                  \"privateKey\": ''\n                })\n                let provider = new OKXTronProvider(window.provider)\n                verifyList[methodItem.method] = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), tronMessage, provider.getAccount(\"tron:mainnet\").address)\n              } else if (methodItem.method === \"tron_signMessageV2\") {\n                let tronMessage = methodItem.result\n                let tronWeb = new TronWeb({\n                  \"fullHost\": 'https://api.trongrid.io',\n                  \"headers\": {},\n                  \"privateKey\": ''\n                })\n                const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", tronMessage);\n                let provider = new OKXTronProvider(window.provider)\n\n                verifyList[methodItem.method] = base58Address === provider.getAccount(\"tron:mainnet\").address\n              }\n              else {\n                verifyList[methodItem.method] = \"Not verified yet\"\n\n              }\n            }else if(\"method\" in methodItem && \"error\" in methodItem) {\n              verifyList[methodItem.method] = methodItem.error\n            }\n\n          }\n\n          console.log(\"验证签名 最后的结果>>>:\", JSON.stringify(verifyList));\n          this.testTransaction = \"签名验证结果如下: \\n\" + JSON.stringify(verifyList)\n        }else {\n          console.log(\"验证签名 window.provider.session.connectMethodsReply 为空:\");\n\n        }\n\n    },\n\n    handleThemeSelect(theme) {\n      selectedTheme = theme;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: theme,\n          },\n        };\n      }\n    },\n\n    async sui_verifySignature(signatureResult) {\n      let resultObj = signatureResult\n      let result = false\n      let msg = ''\n      try {\n        /// 获取当前account\n        const adapter = new SuiAdapter(window.provider);\n        let account = adapter.getAccount()\n        console.log(`Account中获取的address：${account.address}`)\n\n        /// 验证签名\n        let pubKey = await verifyPersonalMessageSignature(this.currentSuiTransaction.message, resultObj.signature)\n        let address = pubKey.toSuiAddress()\n        console.log(`验签结果计算得到address：${address}`)\n\n        /// 对比pubKey\n        console.log(`account pubkey: ${account.publicKey}`,)\n        console.log(`result pubkey: ${pubKey.toBase64()}`)\n        result = (account.address === address) && (account.publicKey === pubKey.toBase64())\n\n        msg = `address verify: ${account.address === address}\\npublicKey verify: ${account.publicKey === pubKey.toBase64()}`\n        console.log(\"signature verify success: \", pubKey)\n      } catch (e) {\n        console.log(\"signature verify failed: \", e)\n      }\n      return {\n        result,\n        msg\n      }\n    },\n\n\n    handleRedirectSelect(input) {\n      this.redirect = input;\n    },\n\n    handleRedirectDeeplink(input) {\n      this.redirectDeeplink = input;\n    },\n\n    addRedirectParam() {\n      if (this.testTransaction) {\n        const newTransaction = JSON.parse(this.testTransaction);\n        newTransaction.redirect = this.redirect === 'deeplink' ? this.redirectDeeplink : this.redirect;\n        this.testTransaction = JSON.stringify(newTransaction);\n      }\n    },\n\n    canChainAddRedirectParam() {\n      return chainsThatCanAddRedirectParam.some((c) => this.selectedChain.startsWith(c));\n    }\n  },\n  created() {\n    // for (const eventName of Object.values(OKX_TON_CONNECTION_AND_TRANSACTION_EVENT)) {\n    //   console.log(eventName);\n    //   window.addEventListener(eventName, (event) => {\n    //     console.log(eventName,event.detail)\n    //     this.currentStatus = eventName\n    //   });\n    // }\n  },\n\n  mounted() {\n\n    var scriptTag = document.createElement(\"script\");\n    scriptTag.src = \"https://telegram.org/js/telegram-web-app.js\";\n    scriptTag.id = \"tgsdk\";\n    document.getElementsByTagName('head')[0].appendChild(scriptTag);\n\n    this.connectReady = true;\n    document.title = \"OKX Connect\";\n    this.initBtnClicked()\n  },\n};\n</script>\n","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signMessage()\">signMessage(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_send()\">send(BTC)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendBitcoin()\">sendBitcoin(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signPsbt_up()\">signPsbt(上架NFT)</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"btc_signAndPushPsbt_up()\">signAndPushPsbt(上架NFT)</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在OKX App选择要上架的Btc NFT，点击【上架】\n        </li>\n        <li>\n          2. 弹出签名面板，点开高级选项，查看\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出上架流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendInscription()\">sendInscription(BTC)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Btc NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount\n    }\n  },\n  methods: {\n    btc_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to BTC\"\n      };\n      this.$emit('generateTransactionParams', params, \"btc_signMessage\")\n    },\n\n    btc_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"btc_send\")\n    },\n\n    btc_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"btc_sendBitcoin\")\n    },\n\n    btc_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"btc_signPsbt\")\n    },\n\n    btc_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"btc_signAndPushPsbt\")\n    },\n\n    btc_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"btc_sendInscription\")\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./BtcTransactionPanel.vue?vue&type=template&id=b2c51436&scoped=true\"\nimport script from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./BtcTransactionPanel.vue?vue&type=style&index=0&id=b2c51436&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-b2c51436\"]])\n\nexport default __exports__","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signMessage()\">signMessage(Fractal)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_send()\">send(Fractal)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_sendBitcoin()\">sendBitcoin(Fractal)</el-button>\n\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signPsbt_up()\">signPsbt(上架NFT)</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_signAndPushPsbt_up()\">signAndPushPsbt(上架NFT)</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在OKX App选择要上架的Fractal NFT，点击【上架】\n        </li>\n        <li>\n          2. 弹出签名面板，点开高级选项，查看\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出上架流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_sendInscription()\">sendInscription(Fractal)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Fractal NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount\n    }\n  },\n  methods: {\n    fractal_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to UniSat!\\n\\nClick to sign in and accept the UniSat Terms of Service (https://unisat.io/terms-of-service.html) and Privacy Policy (https://unisat.io/privacy-policy.html).\\n    \\nThis request will not trigger a blockchain transaction.\\n    \\nYour authentication status will reset after 24 hours.\\n    \\nWallet address:\\nbc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\\n    \\nNonce:\\n162d70e3-8c21-4cfd-9a22-9bf0a4b7be51\\n\"\n      };\n      this.$emit('generateTransactionParams', params, \"fractal_signMessage\")\n    },\n\n    fractal_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_send\")\n    },\n\n    fractal_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_sendBitcoin\")\n    },\n\n    fractal_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"fractal_signPsbt\")\n    },\n\n    fractal_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"fractal_signAndPushPsbt\")\n    },\n\n    fractal_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"fractal_sendInscription\")\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./FractalTransactionPanel.vue?vue&type=template&id=02b5b8a5&scoped=true\"\nimport script from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./FractalTransactionPanel.vue?vue&type=style&index=0&id=02b5b8a5&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-02b5b8a5\"]])\n\nexport default __exports__","<script>\n\nimport {getFullnodeUrl, SuiClient} from \"@mysten/sui/client\";\nimport {Transaction as SuiTransaction} from '@mysten/sui/transactions';\n\nexport default {\n  name: \"SuiTransactionPanel\",\n  methods: {\n    sui_getAccount() {\n      this.$emit('generateTransactionParams', '', \"sui_getAccount\")\n    },\n\n    //对单个交易签名（不发送)\n    async sui_signMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signMessage\")\n    },\n\n    async sui_signPersonalMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signPersonalMessage\")\n    },\n\n    sui_signTransaction2() {\n      // 定义要转移的金额和目标地址\n      const amount = 109; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    async sui_requestRpc() {\n      let provider = window.provider;\n      provider.setDefaultChain(\n          `sui:mainnet`,\n          `https://fullnode.mainnet.sui.io:443`\n      );\n      var data = {\n        method: \"suix_getBalance\",\n        params: [\n          \"0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae\",\n          \"0x168da5bf1f48dafc111b0a488fa454aca95e0b5e::usdc::USDC\",\n        ],\n      };\n\n      this.$emit(\"generateTransactionParams\", data, \"sui_testRpc\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 102; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signAndExecuteTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n      this.$emit(\"generateTransactionParams\", input, \"sui_signAndExecuteTransaction\")\n    },\n\n    /// generate txBytes and txSerialize\n    async generateTsBytesAndSerizlize(input) {\n      /// txBytes and txSerialize may be constructed in advance by the dapp side\n      let resultTuple = [\"\", \"\"];\n      if (\n          \"txBytes\" in input &&\n          input.txBytes.length > 0 &&\n          \"txSerialize\" in input &&\n          input.txSerialize.length > 0\n      ) {\n        resultTuple = [input.txBytes, input.txSerialize];\n      }\n\n      /// Otherwise, a transactionBlock parameter is required.\n      if (!(\"transactionBlock\" in input)) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      // if (this.walletAddress != \"connected\") {\n      //   alert(\"请先连接钱包\");\n      //   return new Promise((resolve) => {\n      //     resolve(resultTuple);\n      //   });\n      // }\n\n      let senderAccounts = window.provider.requestAccountsWithNamespace(\"sui\");\n      if (senderAccounts.length == 0) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      try {\n        let rpcUrl = getFullnodeUrl(\"mainnet\");\n        rpcUrl = \"https://www.okx.com/fullnode/sui/discover/rpc\"\n        const suiClient = new SuiClient({ url: rpcUrl });\n\n        /// sender is required\n        input.transactionBlock.setSender(senderAccounts[0]);\n        const result = await input.transactionBlock.build({\n          client: suiClient,\n        });\n        const txBytes = Buffer(result).toString(\"base64\");\n        const txSerialize = await SuiTransaction.from(txBytes).toJSON();\n        resultTuple = [txBytes, txSerialize];\n      } catch (error) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      return new Promise((resolve) => {\n        resolve(resultTuple)\n      })\n    },\n\n    //签名并发送交易\n    sui_signAndExecuteTransaction() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n        \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.testTransaction = JSON.stringify(input);\n      this.currentSuiTransaction = input;\n      this.currentSuiMethod = \"sui_signAndExecuteTransaction\";\n    },\n  },\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_getAccount()\">getAccount(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signMessage()\">signMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signPersonalMessage()\">signPersonalMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signTransaction2()\">signTransaction(Sui)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signAndExecuteTransaction()\">sendTransaction(Sui)</el-button>\n      <div style=\"font-size: 12px; color: gray;\">(send to Rally Tiger account)</div>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_requestRpc()\">RPC_getBalance</el-button>\n      <div style=\"font-size: 12px; color: gray;\">get USDC balance of address:</div>\n      <div style=\"font-size: 12px; color: gray\">0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae</div>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signTransaction_pre_execution()\">signTransaction(prepared data)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signAndExecuteTransaction_pre_execution()\">sendTransaction(prepared data)</el-button>\n    </el-col>\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./SuiTransactionPanel.vue?vue&type=template&id=56a8eddf&scoped=true\"\nimport script from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./SuiTransactionPanel.vue?vue&type=style&index=0&id=56a8eddf&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-56a8eddf\"]])\n\nexport default __exports__","<script>\n\n\nimport {OKXTronProvider} from \"@okxconnect/universal-provider\";\nimport {TronWeb} from \"tronweb\";\n\nexport default {\n  name: \"TronTransactionPanel\",\n  methods: {\n\n    async tron_signMessage() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessage(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n\n      const verify = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), res, provider.getAccount(\"tron:mainnet\").address)\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" + res, \"tron_signMessage\")\n    },\n\n    async tron_signMessageV2() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessageV2(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", res);\n      console.log(\"tron_signMessageV2_base58Address\", base58Address)\n      console.log(\"tron_signMessageV2_address\", provider.getAccount(\"tron:mainnet\").address)\n      const verify = base58Address === provider.getAccount(\"tron:mainnet\").address\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" +  res, \"tron_signMessage\")\n    },\n\n    async tron_signTransaction(isOnlySign) {\n      let provider = new OKXTronProvider(window.provider)\n        let tronWeb = new TronWeb({\n          \"fullHost\": 'https://api.trongrid.io',\n          \"headers\": {},\n          \"privateKey\": ''\n        })\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const transaction = await tronWeb.transactionBuilder.sendTrx(\"TGBcVLMnVtvJzjPWZpPiYBgwwb7th1w3BF\", 1000, address);\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let res = await provider.signTransaction( transaction, \"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", res, \"tron_signTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async getContract() {\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41e95812d8d5b5412d2b9f3a4d5a87ca15c5c51f33\"\n      \n      try {\n        const contract = await tronWeb.trx.getContract(contractAddress)\n        const abi = contract.abi.entrys;\n        console.log(\"获取到的合约：\")\n        console.log(abi)\n      } catch (error) {\n        console.log(\"Error getting contract ABI:\", error);\n      }\n    },\n    \n    async tron_signAndSendTransactionContract(isOnlySign) {\n      // this.getContract()\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41e95812d8d5b5412d2b9f3a4d5a87ca15c5c51f33\"\n      let provider = new OKXTronProvider(window.provider)\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const parameter = [\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n      ]\n      const ret = await tronWeb.transactionBuilder.triggerSmartContract(contractAddress, \"quote(uint256,uint256,uint256)\", {}, parameter, address);\n      console.log(\"=====>transaction: \")\n      console.log(ret);\n      this.$emit(\"generateTransactionParams\", ret.transaction)\n      if (isOnlySign) {\n        let tx = await provider.signTransaction( ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async tron_signAndSendTransactionApprove(isOnlySign) {\n      let provider = new OKXTronProvider(window.provider)\n\n      let transaction = {\n        \"visible\": false,\n        \"txID\": \"d1ed31b6abd2c37e248254681d3ee61b2e628fbd776def753b5592712ebd98c5\",\n        \"raw_data\": {\n          \"contract\": [{\n            \"parameter\": {\n              \"value\": {\n                \"data\": \"095ea7b3000000000000000000000000e95812d8d5b5412d2b9f3a4d5a87ca15c5c51f33ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n                \"owner_address\": \"4157c140be01fa2bbabf7f055ab879d0c05725293c\",\n                \"contract_address\": \"41b4a428ab7092c2f1395f376ce297033b3bb446c1\"\n              },\n              \"type_url\": \"type.googleapis.com/protocol.TriggerSmartContract\"\n            },\n            \"type\": \"TriggerSmartContract\"\n          }],\n          \"ref_block_bytes\": \"1bde\",\n          \"ref_block_hash\": \"af71fa1aa01b5bd1\",\n          \"expiration\": Date.now() + 60000,\n          \"fee_limit\": 250000000,\n          \"timestamp\": Date.now()\n        },\n        \"raw_data_hex\": \"0a021bde2208af71fa1aa01b5bd140f8b1fa98b4325aae01081f12a9010a31747970652e676f6f676c65617069732e636f6d2f70726f746f636f6c2e54726967676572536d617274436f6e747261637412740a154157c140be01fa2bbabf7f055ab879d0c05725293c121541b4a428ab7092c2f1395f376ce297033b3bb446c12244095ea7b3000000000000000000000000e95812d8d5b5412d2b9f3a4d5a87ca15c5c51f33ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff70f1e6f698b432900180e59a77\"\n      }\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let tx = await provider.signTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n\n    }\n\n  }\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessage()\">tron_signMessage</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessageV2()\">tron_signMessageV2</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(true)\">\n        tron_signTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(true)\">\n        tron_signTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(true)\">\n        tron_signTransaction(Approve)\n      </el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(false)\">\n        tron_signAndSendTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(false)\">\n        tron_signAndSendTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(false)\">\n        tron_signAndSendTransaction(approve)\n      </el-button>\n    </el-col>\n\n\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./TronTransactionPanel.vue?vue&type=template&id=eaaccc08&scoped=true\"\nimport script from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./TronTransactionPanel.vue?vue&type=style&index=0&id=eaaccc08&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-eaaccc08\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=b2407636&scoped=true\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=b2407636&scoped=true&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-b2407636\"]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport ElementPlus from 'element-plus'\nimport 'element-plus/dist/index.css'\nimport App from './App.vue'\n\nconst app = createApp(App)\n\napp.use(ElementPlus)\napp.mount('#app')","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkokxconnectdemo\"] = self[\"webpackChunkokxconnectdemo\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(81765); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["Object","defineProperty","exports","value","CONNECT_METHOD_BATCH_FETCHMSG","CONNECT_METHOD_FETCHMSG","CONNECT_METHOD_RECEIVE","CONNECT_METHOD_UNSUB","CONNECT_METHOD_SUB","CONNECT_METHOD_PUBLISH","CONNECT_METHOD_LOGIN","CONNECT_METHOD_PUSH","require","__createBinding","this","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","__setModuleDefault","v","__importStar","ownKeys","getOwnPropertyNames","ar","prototype","hasOwnProperty","call","length","mod","result","i","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","next","e","rejected","done","then","apply","OKXWalletConnector","constants_1","storageconstants_1","storage_1","utils_1","utils_2","eventemitter3_1","log","protocol_1","WS","resolveWebSocketImplementation","constructor","url","events","EventEmitter","state","ConnectorState","InitState","selectedUrlIndex","retryCount","timeOutLimit","checkWSUrl","Error","heartbeatTimer","connectionTimeoutTimer","connectURLStorage","Storage","OKXCONNECTOR_CACHE_KEY","connecting","Connecting","onPayload","data","logDebug","rsp","Date","now","toString","emit","onClose","event","_a","socket","code","onError","id","payload","msg","onopen","onmessage","onclose","Connected","emitError","errorEvent","heartbeat","clearTimeout","OnError","readyState","WebSocket","OPEN","send","setTimeout","bind","tryRegistOpen","logError","registOpen","inRetry","toUTCString","URLSearchParams","startTimeOutTimer","hasBuiltInWebSocket","onerror","close","on","resetTimeOutTimer","OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE","FINISHED","checkMaxRetry","OKXCONNECTOR_WS_URL_LIST","connectionTryNext","nextUrl","getNextSelectUrl","CANCELED","pendingSocket","TIME_OUT","cacheSuccessUrlSelect","saveContent","getSuccessUrlSelect","selectIndex","getItem","content","index","Number","onVisibleChanged","document","visibilityState","arguments","once","err","OKXConnectError","OKX_CONNECT_ERROR_CODES","CONNECTION_ERROR","connect","removeEventListener","addEventListener","disconnect","Disconnected","currentStatus","addListener","decrypt","success","failed","listenPayloadHandler","removeListener","parsedEvent","safeJsonParse","params","rawMsg","message","failHandler","addPackageParse","callback","payloadHandler","param","listener","off","doLogin","safeJsonStringify","getMsgPayloadFromHistory","tmpMsg","jsonstr","onOpen","openHandler","ConnectionManager","connect_1","commands_1","jwtconstants_1","crypto_1","jwt_1","safejson_1","log_1","url_1","connectStorage","OKXCONNECTOR_CACHE_KEY_DAPP","crypto","SessionCrypto","inTMA","isInTMA","keyPairInfo","getCachedCryptoKeyPair","jwtKeyPair","getCachedJWTKeyPair","saveJWTKeyPair","connector","OKXCONNECTOR_WS_URL_1","packageId","connectedWalletPK","currentTopic","refreshPackageId","saveCryptoKeyPair","keyPair","cacheInfo","encryptStoreMsg","OKXCONNECTOR_CRYPTO_KEY","kp","getAndDecrypt","clearCache","strkeyPair","publicKey","toHexString","secretKey","OKXCONNECTOR_JWT_KEY","strKeyPairInfo","hexToByteArray","generateKeyPair","isWalletPKReady","makeJWT","topic","signJWT","OKXCONNECTOR_JWT_SIDE","OKXCONNECTOR_JWT_TTL","parsePackage","input_1","input","ignoreACK","_b","_c","_d","_e","sendACK","OKXCONNECTOR_TOKEN_CACHE","inputObj","messageId","sendReceive","restoreConnect","getConnectInfo","generateTopic","info","channelId","clientId","stringifyKeypair","fromRestore","timeLog","getTime","lastConnectId","cachedSenderPublicKey","OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE","jwtToken","timeOne","error","name","timeF","sendFetchAndConsumeMessages","timeTh","catch","jsonrpc","CONNECT_JSONRPC_VER","method","token","replace","parsedMessage","fail","msgObj","sendRaw","ttl","OKXCONNECTOR_MESSAGE_TTL","encrypt","msgId_1","success_1","msgId","reason","sendConnectSessionInfo","fetchedMessages","hasMore","receivedMsgs","timeFive","cleanCache","saveSessionContent","key","OKXCONNECTOR_SESSION_PREFIX_KEY","jsonData","getSessionContent","jsonStr","object","getCurrentConnectionReady","OKXCONNECTOR_WS_URL_IDX_KEY","OKXCONNECTOR_WS_URL_2","EVENT_EMITTER_MAX_LISTENERS","Engine","sessionUtils_1","connectionManager","pendingRequests","Map","disconnectListener","jsonResponse","handleResponse","addDisconnectListener","disconnecter","push","clear","getRequestId","requestId","bindRequestForPromise","set","request","requestAnswer","option","JSON","stringify","assign","onAck","sendSession","sessionInfo","response","delete","forEach","restoreconnect","onConnectResult","conect","sessionConfig","connectInfo","openUniversalLink","openUniversalUrl","connectRequest","protocolVer","tonConnectSdkVersion","dAppInfo","dappInfo","requests","connectRequestStr","utf8Array","TextEncoder","encode","base64Encoded","btoa","String","fromCharCode","deeplinkUrl","standardDeeplink","isIOS","isIos","openOKXDeeplinkWithFallback","session","onConnect","getUniversalLink","connectResponse","namespaces","buildNameSpacesByConnectResponse","universalConnect","connectInfoAndUrl","tonRequest","universalRequest","item","startsWith","universalConnectRequest","encodeConnectParams","redirect","tonConnectRequest","isFromTonSDK","defaultConnectRequest","UNKNOWN_ERROR","wallet","methodsResponse","responses","find","connectRequestMethods","connectMethodsReply","tmaReturnUrl","WalletConnectionManager","connectionManager_1","walletConnectionManager_1","engine_1","__importDefault","MULTICODEC_ED25519_LENGTH","MULTICODEC_ED25519_HEADER","MULTICODEC_ED25519_BASE","MULTICODEC_ED25519_ENCODING","DID_METHOD","DID_PREFIX","DID_DELIMITER","KEY_PAIR_SEED_LENGTH","DATA_ENCODING","JSON_ENCODING","JWT_ENCODING","JWT_DELIMITER","JWT_IRIDIUM_TYP","JWT_IRIDIUM_ALG","JWTHeaderType","decodeJSON","encodeJSON","encodeIss","decodeIss","encodeSig","decodeSig","encodeData","decodeData","encodeJWT","decodeJWT","verifyJWT","ed25519","tweetnacl_1","stringUtils_1","default","sign","str","okxtoString","okxfromString","val","publicKeyStr","join","issuer","prefix","multicodec","split","bytes","encoded","header","signature","jwt","slice","sub_1","aud_1","ttl_1","keyPair_1","sub","aud","iat","Math","floor","alg","typ","iss","exp","act","detached","verify","OKXCONNECTOR_JWT_WALLET_SIDE","buildRequestAccountNameSpacesByConnectResponse","requestAccountNameSpaces","universalResponse","tonAddress","tonProof","address","network","ton_addr","ton_proof","accounts","namespace","addresses","methods","extra","chains","addressItem","addressArr","chain","utils_3","crypto_js_1","subKey","localStorage","resolveLocalStorage","storeKey","cipherIV","cacheStr","cacheKey","cache","cacheObj","timestamp","saveItem","localKey","totalCacheStr","setItem","getCachedPBKDF2InfoKey","pwLen","saltLen","pw","iv","salt","OKXCONNECTOR_STORAGER_CRYPTO_SALT","randomBytes","OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD","OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV","ivBuffer","PBKDF2","iterations","storeInfo","AES","enc","Utf8","OKXCONNECTOR_STORAGE_CIPHER_METHOD","OKXCONNECTOR_TON_KEY","WalletConnectionManagerEvent","WalletConnectionManagerTopicInfoCacheKey","RECEIVE_REQUEST","walletConnectionConstants_1","communicateEvents","sessionCryptoInfoMap","inLogin","isLogined","offset","topicId","isTopicPublicKeyExist","timestampStr","parseInternalMsg","internalMsg","internalObj","origin","originContent","base64decode","topic_1","_f","_g","_h","_j","_k","_l","isInternalData","inner_message","inner_topic","trimStart","messageObj","decryptWallet","dappPublicKey","recovrySessionInfoFromCache","cacheMap","topicItem","cryptoItem","cryptoKeyPair","syncCacheSessionInfo","cacheSessionInfo","sync","duplicatedTopics","includes","appendTopic","sessionPublicKey","subscribeTopics","Array","from","confirmAppendingTopics","size","keys","getSessionPublicKey","getCurrentCachedTopicIdList","msg_1","needPublicKey","connectedDappPK","cryptoObject","encryptWallet","sendUnsubscribe","sendBatchFetchAndConsumeMessages","topicIdList","topics","withInternalData","finishCount","idx","nonceLength","sessionKeyPair","createKeypairFromString","createKeypair","box","createNonce","receiverPublicKey","encodedMessage","nonce","encrypted","concatInfo","concatUint8Arrays","hexResult","encodedResult","base64encode","senderPublicKey","base64Content","messageByteArray","toUint8Array","internalMessage","splitToUint8Arrays","decrypted","open","TextDecoder","decode","__exportStar","p","IEngine","ISignClient","ISignClientEvents","IEngineEvents","super","client","creatOKXMiniAppWalletInfo","creatOKXWalletInfo","getBigIntRpcId","formatJsonRpcRequest","isJsonRpcError","isJsonRpcResponse","parseConnectionError","isHttpUrl","formatJsonRpcError","json_rpc_1","wallet_info_1","isJsonRpcPayload","isJsonRpcRequest","isJsonRpcResult","payloadId","formatJsonRpcResult","isReservedErrorCode","getError","getErrorByCode","formatErrorMessage","isWsUrl","okx_connect_error_1","IncrementalRandomGenerator","bits","Uint8Array","Uint16Array","Uint32Array","initialValue","getNextValue","uint8Generator","uint16Generator","date","BigInt","RESERVED_ERROR_CODES","type","STANDARD_ERROR_MAP","DEFAULT_ERROR","match","values","INTERNAL_ERROR","SERVER_ERROR","getUrlProtocol","matches","RegExp","matchRegexProtocol","regex","protocol","test","CONNECT_ITEM_ERROR_CODES","TONCHAIN","connect_wallet_1","connect_event_1","standardUniversalLink","tgwalletName","okxDeeplink","SERVER_ERROR_CODE_RANGE","INVALID_PARAMS","METHOD_NOT_FOUND","INVALID_REQUEST","PARSE_ERROR","getDefaultMessageByCode","setPrototypeOf","toJSON","BAD_REQUEST_ERROR","ALREADY_CONNECTED_ERROR","NOT_CONNECTED_ERROR","UNKNOWN_APP_ERROR","USER_REJECTS_ERROR","METHOD_NOT_SUPPORTED","NameSpaceKeyStarknet","NameSpaceKeyTron","NameSpaceKeyCosmos","NameSpaceKeyAptos","NameSpaceKeyBtc","NameSpaceKeySui","NameSpaceKeyTON","NameSpaceKeySOL","NameSpaceKeyEip155","misc_1","callForSuccess","fn","options","attempts","delayMs","lastError","delay","timeout","signal","aborted","timeoutId","isMobileUserAgent","openLinkBlank","openLink","isValidObject","encodeTWAConnectURLParams","openOKXTMAWalletlinkWithFallback","getTelegramWalletTWAUrl","getAppWalletDeepLink","encodeTelegramUrlParameters","isTelegramUrl","openOKXDeeplink","logWarning","call_for_success_1","web_api_1","debug","args","console","window","okxLogDebug","warn","JSONStringify","_","JSONParse","json","numbersBiggerThanMaxInt","serializedData","parse","isCustomFormatBigInt","substring","alloc","allocUnsafe","basics_1","string","encoding","base","BASES","decoder","array","encoder","createCodec","buf","ascii","charCodeAt","utf8","hex","bases","base16","latin1","binary","isTmaPlatform","isInTelegramBrowser","sendExpand","sendOpenTelegramLink","versionCompare","initParams","locationHash","location","hash","urlParseHashParams","tmaPlatform","tgWebAppPlatform","getWindow","Telegram","WebApp","platform","webAppVersion","tgWebAppVersion","version","platforms","TelegramWebviewProxy","isTelegramWebview","TelegramWebview","postEvent","link","fallback","URL","hostname","pathFull","pathname","search","isIframe","versionAtLeast","path_full","parent","eventType","eventData","external","notify","trustedTarget","postMessage","indexOf","_path","urlSafeDecode","qIndex","pathParam","substr","query_params","urlParseQueryString","urlencoded","decodeURIComponent","queryString","paramName","paramValue","queryStringParams","v1","v2","a","p1","p2","v1List","v2List","max","parseInt","ver","removeUrlLastSlash","addPathToUrl","tma_api_1","path","deeplinkEncodeUrl","encodeURIComponent","fullUrl","isTelegram","newWindow","href","deepLinkOpened","timeoutDuration","downloadUrl","fallbackToDownloadPage","parameters","encodedParameters","connectParam","redirectStr","browserDebug","okxconnect","extraparams","base64ContentStr","twaDeepLink","openTelegramLink","RANDOM_LENGTH","isBrowser","hasLocalStorage","hashKey","generateRandomBytes32","tweetnacl_util_1","to_string_1","sha256_1","BASE16","hexString","byteArray","byte","buffer1","buffer2","mergedArray","subArray1","subArray2","encodeUint8Array","urlSafe","encodeBase64","decodeToUint8Array","decodeBase64","uint8Array","decodeUTF8","decodedUint8Array","encodeUTF8","toObject","scheme","global","self","randomBytes32","obj","getPrototypeOf","userAgent","navigator","maxTouchPoints","isIOSDevice","MSStream","isIPadOS","openDeeplinkWithFallback","getUserAgent","isOS","ua_parser_js_1","target","doFallback","fallbackTimeout","check","vendor","opera","results","getResult","osName","os","toLowerCase","deviceModel","device","model","browserName","browser","OKXBtcProvider","_1","caip","provider","getUniversalProvider","getAddressForChainId","chainId","ns","checkChainId","filter","account","getAccount","signMessage","signStr","ret","errorData","sendBitcoin","toAddress","satoshis","to","feeRate","txhash","checkParameters","signPsbt","psbtHex","signPsbts","psbtResults","psbtHexs","signAndPushPsbt","sendInscription","inscriptionId","extension","coinId","protocolId","atomicSuffix","ordinalsSuffix","endsWith","removeSuffix","scenario","txType","batchBean","coinAmount","nftId","suffix","unexistKeys","namespaceKey","OKXCosmosProvider","core_1","accountArray","algo","bech32Address","pubKey","hexToUint8Array","signArbitrary","signerAddress","signDoc","chain_id","account_number","sequence","fee","gas","amount","msgs","memo","signData","signAmino","signOptions","resData","signed","signDirect","bodyBytes","bufferToHex","authInfoBytes","accountNumber","res","messageToBuffer","buffer","arr","output","map","x","padStart","arrayBuffer","byteValue","isNaN","OKXStarknetProvider","typedData","sendTransaction","transaction","transactionData","transaction_hash","signMessageDeclareContractPayload","sendMessageExecuteTransactionDetail","calls","abis","transactionsDetail","transactions","isArray","executionRequest","OKXTonProvider","statusChangeSubscriptions","statusChangeErrorSubscriptions","tonWallet","errorsHandler","connected","tonNameSpace","walletStateInit","sessionWallet","tonDeviceInfo","appName","appVersion","maxProtocolVersion","features","connectItems","onStatusChange","MAINNET","requestAccountsWithNamespace","requestParams","OKXTronProvider","stringToHex","signMessageV2","signTransaction","signedTx","realSignTx","visible","txID","rawData","contract","raw_data","expiration","ref_block_bytes","ref_block_hash","raw_data_hex","signAndSendTransaction","OKXUniversalProvider","eip155_1","sui_1","client_1","namespaces_1","solana_1","btc_1","aptos_1","ton_1","cosmos_1","tron_1","starknet_1","init","opts","okxConnectUniversalinwindow","initialize","rpcProviders","providerOpts","requestParam","buildRequestParamFromRequest","getProvider","validateChain","keyArr","enable","connectOpts","requestAccounts","called","onRequestSent","disconnectAndEmit","cleanup","engine","aptosChainNameToGeneralId","replaceAptos","aptosNameSpace","realNS","replaceAptosInner","aptos","optionAptosNameSpace","optionalNamespaces","realOptionNS","defaultChain","replaceAptosGeneralIdWithNetName","replaceSessionAptos","disconnectInner","setNamespaces","setDefaultChain","rpcUrl","checkStorage","sessionInfoStr","getFromStore","createProviders","registerEventListeners","dappMetaData","SignClient","providersToCreate","Set","parseNamespaceKey","namespacesValue","currentNameSpace","Eip155Provider","opts1","solanaProvider","sonicProvider","svmProvider","optsTon","tonProvider","optsSui","suiProvider","SuiProvider","optsBtc","btcProvider","fbProvider","aptosProvider","moveProvider","cosmosProvider","tronProvider","starknetProvider","PROVIDER_EVENTS","DEFAULT_CHAIN_CHANGED","caip2ChainId","onChainChanged","UPDATE_NAMESPACES","nameSpaces","nameSpacekey","persist","icon","isChainNamespaceInSession","chainsArr","defaultNamespace","getDefaultChain","namespaceStr","requestDefaultChainWithNamespace","caip2Chain","sessionProperties","showRequestModal","OKXUniversalProvider_1","OKXBtcProvider_1","OKXCosmosProvider_1","OKXTonProvider_1","OKXTronProvider_1","OKXStarknetProvider_1","ConnectMethodUtils_1","metaData","requestAccountItem","requiredNamespaces","nameSpaceToConnectWalletNameSpace","connectMethods","connectMethodsToConnectWalletMethods","metadata","encodeParams","fillParamsToSession","connectMethodsResponseUpdate","openOKXWallet","connectSupportMethods","bs58_1","uint8array_extras_1","isRecord","methodItem","solanaSuccessData","suiMethod","requestMethod","suiMessage","suiMessageb64","aptosSignature","notSupportError","requestItem","errorItem","requireNameSpace","includeEip155","some","space","includeChain","paramsArr","firstParam","firstObj","convertedArray","b64encoded","atob","stringToUint8Array","aptosParams","currentURL","signChainId","applicationUrl","aptosChainId","stringToBase64","cosmosChain","freeze","getAccountsChains","isCaipNamespace","mergeRpcMap","targetRpcMap","sourceRpcMap","mergeNamespaces","source","rpcMap","GENERIC_SUBPROVIDER_NAME","RPC_URL","STORAGE","CONTEXT","WC_VERSION","PROTOCOL","RELAY_URL","LOGGER","JsonRpcConnection_1","JsonRpcProvider_1","AptosProvider","httpProviders","createHttpProviders","updateNamespace","getAccounts","setHttpProvider","http","parsedChainId","getChainId","parsedRpc","getRpcUrl","httpProvider","createHttpProvider","getHttpProvider","rpc","JsonRpcProvider","JsonRpcConnection","getGlobal","BtcProvider","CosmosProvider","updateRequestParams","isDic","switchChainId","decimalNumber","selectedChainId","chainNum","paramsChainId","paramsChainString","adaptArray","addressObj","isEqual","chainAddress","messages","typedDataJson","secondObj","hexChainId","getHexChainIdFromRequest","isChainApproved","handleSwitchChain","addEthereumChain","resultData","nameSpace","rpcUrls","eip155","cross_fetch_1","core_2","DEFAULT_HTTP_HEADERS","Accept","DEFAULT_HTTP_METHOD","DEFAULT_FETCH_OPTS","headers","disableProviderPing","isAvailable","registering","register","body","parseError","types_1","IJSONRpcProvider","connection","hasRegisteredEventListeners","setConnection","context","requestStrict","_error","SolanaProvider","getPubkey","getWalletAddress","components","StarknetProvider","__rest","s","t","getOwnPropertySymbols","propertyIsEnumerable","TONProvider","validUntil","newParams","fromAddress","boc","TronProvider","IJSONRpcConnection","opt","setGlobal","globals","projectId","parseChainId","reference","convertChainIdToNumber","mergeArrays","CAIP_DELIMITER","b","_createElementBlock","_hoisted_1","_createVNode","_component_el_container","_withCtx","_component_el_header","_cache","_createTextVNode","_component_el_main","_component_el_card","class","_createElementVNode","style","_component_el_row","_component_el_col","span","_toDisplayString","$options","_ctx","_component_el_checkbox","modelValue","withUI","$event","onChange","handleWithUI","universalToTG","handleUniversalToTG","_component_el_select","modals","placeholder","handleModalsSelect","multiple","_component_el_option","label","returnStrategy","handleReturnStrategySelect","_Fragment","_renderList","returnStrategies","strategy","_createBlock","_component_el_input","deeplink","handleReturnStrategyDeeplink","disabled","_createCommentVNode","language","handleLanguageSelect","locales","locale","theme","handleThemeSelect","THEME","LIGHT","DARK","selectedMethod","handleConnectMethodsSelect","tonProofValue","gutter","align","availableChains","checked","areChainsInit","isOptionalChecked","handleOptionChange","_component_el_button","onClick","initBtnClicked","connectInitStr","connectBtnClicked","connectStatusStr","syncAllAddressClick","syncAllAddressStr","disconnectAction","walletAddress","disconnectStatusStr","_Teleport","showModal","closeModal","_withModifiers","_component_qrcode_vue","qrValue","level","_component_el_tabs","activeTab","onTabClick","clickActiveTab","_component_el_tab_pane","eth_requestAccounts","eth_chainId","wallet_switchEthereumChain","wallet_addEthereumChain","personal_sign","eth_signTypedData_v4","eth_sendTransaction_transfer","eth_sendTransaction_approve","eth_sendTransaction_mint","wallet_watchAsset","ton_getAccount","ton_sendTransaction","sol_signMessage","sol_signTransaction","sol_signVersionedTransaction","sol_signAllTransactions","sol_signAllVersionedTransactions","sol_signAndSendTransaction","sol_signAndSendVersionedTransaction","_component_SuiPanel","onGenerateTransactionParams","sui_generateTransactionParams","_component_BTCPanel","btc_generateTransactionParams","_component_FractalPanel","fractal_generateTransactionParams","_component_TronTransactionPanel","tron_generateTransactionParams","onGenerateTransactionResult","tron_getTransactionResult","aptos_signMessage","aptos_signTransaction","aptos_signAndSubmitTransaction","cosmos_signArbitrary","cosmos_signAmino","cosmos_signDirect","wallet_testRpc","eth_sendTransaction_swap","move_signTransaction","move_signAndSubmitTransaction","testBase64UrlSafe","xs","sm","handleRedirectSelect","canChainAddRedirectParam","redirectDeeplink","handleRedirectDeeplink","addRedirectParam","testTransaction","rows","testboc","testTransactionStr","btc_signMessage","$setup","sendAmount","clearable","btc_send","sendSatoshisAmount","btc_sendBitcoin","btc_signPsbt_up","btc_signAndPushPsbt_up","receiver","btc_sendInscription","props","setup","ref","$emit","alert","autoFinalized","__exports__","fractal_signMessage","fractal_send","fractal_sendBitcoin","fractal_signPsbt_up","fractal_signAndPushPsbt_up","fractal_sendInscription","sui_getAccount","sui_signMessage","sui_signPersonalMessage","sui_signTransaction2","sui_signAndExecuteTransaction","sui_requestRpc","sui_signTransaction_pre_execution","sui_signAndExecuteTransaction_pre_execution","recipientAddress","tx","SuiTransaction","coin","splitCoins","transferObjects","transactionBlock","showEffects","txBytes","txSerialize","generateTsBytesAndSerizlize","resultTuple","senderAccounts","getFullnodeUrl","suiClient","SuiClient","setSender","build","Buffer","currentSuiTransaction","currentSuiMethod","tron_signMessage","tron_signMessageV2","tron_signTransaction","tron_signAndSendTransactionContract","tron_signAndSendTransactionApprove","tronWeb","TronWeb","trx","verifyMessage","base58Address","verifyMessageV2","isOnlySign","transactionBuilder","sendTrx","getContract","contractAddress","abi","entrys","parameter","triggerSmartContract","verifyADR36Amino","fromBech32","VConsole","allChains","chainsThatCanAddRedirectParam","optionChains","selectedModals","selectedReturnStrategy","selectedDeepLink","selectedLanguage","selectedTheme","TronTransactionPanel","QrcodeVue","BTCPanel","FractalPanel","SuiPanel","testTopic","testPublicKey","testProofPayload","pendingDeepLink","logList","connectReady","localPubKey","localSecKey","selectedChain","ProofPayloadVerify","showVerifyRow","has","selectedMethodData","isChecked","reload","add","computed","selectedChains","initChains","newChains","updatedChains","tab","tabName","initCall","OKXUniversalConnectUI","actionsConfiguration","uiPreferences","walletInfo","onModalStateChange","entries","uri","useShortLink","isPC","items","testTonSdk","syncAllAddresses","blockExplorerUrls","chainName","nativeCurrency","symbol","decimals","dataETH","dataPolygon","types","EIP712Domain","Person","Mail","primaryType","domain","verifyingContract","contents","maxPriorityFeePerGas","maxFeePerGas","gasPrice","gasLimit","image","tonUniversalLog","sendTransactionAlert","fetch","confirm","sendData","adapter","SuiAdapter","suiResult","signAndExecuteTransaction","sui_verifySignature","signPersonalMessage","btcAdapter","btcResult","currentBtcMethod","currentBtcTransaction","hexToBase64","bs64Str","fractalResult","currentFractalMethod","currentFractalTransaction","hexStr","blob","Blob","reader","FileReader","onload","base64Data","readAsDataURL","datatest","firstStr","showUrl","hasEip155","hasSolana","hasSui","hasBtc","hasAptos","hasTon","hasCosmos","nameSpacesChains","optSpaceChains","solanaChains","hasTron","suiChains","btcChains","connectMethod","connectData","requireData","solana","cosmos","tron","tonParams","ton","sui","btc","optData","signMethods","getCurrentSelectedMethodData","openModalAndSign","openModal","useMini","connectAndSign","methodList","suiData","currentMethod","application","userAgentInfo","Agents","flag","isSafariOrChrome","pubkey","OKXSolanaProvider","result1","nacl","PublicKey","toBytes","OKXAptosProvider","config","AptosConfig","Network","Aptos","simple","sender","function","typeArguments","functionArguments","signAndSubmitTransaction","Connection","getSolConnect","blockhash","getLatestBlockhash","versionedTransactionMessage","TransactionMessage","payerKey","recentBlockhash","instructions","SystemProgram","transfer","fromPubkey","toPubkey","lamports","compileToV0Message","VersionedTransaction","signAllTransactions","Transaction","feePayer","isValid","cosmos_verifySignArbitrary","pub_key","signer","prefixStr","signatureBuffer","uint8Signature","pubKeyValueBuffer","pubKeyUint8Array","uiOptions","eth_verifyMessage","ethAddress","originalMessage","recoveredAddress","ethers","list","verifyList","requestItme","ethMessage","solanaMessage","verifySol","aptosMessage","aptosPublicKey","fullMessage","cosmosAddress","cosmosMessage","tronMessage","signatureResult","resultObj","verifyPersonalMessageSignature","toSuiAddress","toBase64","newTransaction","c","created","mounted","scriptTag","createElement","src","getElementsByTagName","appendChild","title","render","app","createApp","App","use","ElementPlus","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","loaded","__webpack_modules__","amdO","deferred","O","chunkIds","priority","notFulfilled","Infinity","j","every","splice","r","n","getter","d","definition","g","globalThis","Function","prop","Symbol","toStringTag","nmd","paths","children","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}