{"version":3,"file":"js/app.19efd831.js","mappings":"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","sources":["webpack://okxconnectdemo/../packages/core/src/connect/commands.js","webpack://okxconnectdemo/../packages/core/src/connect/connect.js","webpack://okxconnectdemo/../packages/core/src/connect/connectionManager.js","webpack://okxconnectdemo/../packages/core/src/connect/connectionSplitPackages.js","webpack://okxconnectdemo/../packages/core/src/connect/constants.js","webpack://okxconnectdemo/../packages/core/src/connect/engine.js","webpack://okxconnectdemo/../packages/core/src/connect/index.js","webpack://okxconnectdemo/../packages/core/src/connect/jwt.js","webpack://okxconnectdemo/../packages/core/src/connect/jwtconstants.js","webpack://okxconnectdemo/../packages/core/src/connect/sessionUtils.js","webpack://okxconnectdemo/../packages/core/src/connect/storage.js","webpack://okxconnectdemo/../packages/core/src/connect/storageconstants.js","webpack://okxconnectdemo/../packages/core/src/connect/walletConnectionConstants.js","webpack://okxconnectdemo/../packages/core/src/connect/walletConnectionManager.js","webpack://okxconnectdemo/../packages/core/src/connector/appwallet-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/iconnector.js","webpack://okxconnectdemo/../packages/core/src/connector/index.js","webpack://okxconnectdemo/../packages/core/src/connector/inject-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/okxwallet-inject-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/tgwallet-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/ws-connector.js","webpack://okxconnectdemo/../packages/core/src/crypto/crypto.js","webpack://okxconnectdemo/../packages/core/src/index.js","webpack://okxconnectdemo/../packages/core/src/inject/InjectUtils.js","webpack://okxconnectdemo/../packages/core/src/inject/index.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/AptosProvider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/SolProvider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/TONProvider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/btc-provider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/eip155Provider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/index.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/sui-provider.js","webpack://okxconnectdemo/../packages/core/src/protocol/chains.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/engine.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/json-rpc.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/connect-event.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/connect-wallet.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/wallet-info.js","webpack://okxconnectdemo/../packages/core/src/protocol/constants.js","webpack://okxconnectdemo/../packages/core/src/protocol/error/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/error/okx-connect.error.js","webpack://okxconnectdemo/../packages/core/src/protocol/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/misc.js","webpack://okxconnectdemo/../packages/core/src/utils/call-for-success.js","webpack://okxconnectdemo/../packages/core/src/utils/index.js","webpack://okxconnectdemo/../packages/core/src/utils/log.js","webpack://okxconnectdemo/../packages/core/src/utils/media.js","webpack://okxconnectdemo/../packages/core/src/utils/report.js","webpack://okxconnectdemo/../packages/core/src/utils/reportconstants.js","webpack://okxconnectdemo/../packages/core/src/utils/request.js","webpack://okxconnectdemo/../packages/core/src/utils/safejson.js","webpack://okxconnectdemo/../packages/core/src/utils/stringUtils.js","webpack://okxconnectdemo/../packages/core/src/utils/tma-api.js","webpack://okxconnectdemo/../packages/core/src/utils/url.js","webpack://okxconnectdemo/../packages/core/src/utils/utils.js","webpack://okxconnectdemo/../packages/core/src/utils/web-api.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXBtcProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXCosmosProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXStarknetProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXTonProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXTronProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXUniversalProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/sign-client/client.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/ConnectMethodUtils.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/namespaces.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/events.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/values.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/aptos.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/btc.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/cosmos.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/eip155.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcConnection.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/solana.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/starknet.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/sui.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/ton.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/tron.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/misc.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/providers.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/globals.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/misc.js","webpack://okxconnectdemo/./src/App.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue?1b44","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue?e4fb","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue?aa83","webpack://okxconnectdemo/./src/components/StarknetTransactionPanel.vue","webpack://okxconnectdemo/./src/components/StarknetTransactionPanel.vue?1a06","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue?089a","webpack://okxconnectdemo/./src/App.vue?7ccd","webpack://okxconnectdemo/./src/main.js","webpack://okxconnectdemo/webpack/bootstrap","webpack://okxconnectdemo/webpack/runtime/amd options","webpack://okxconnectdemo/webpack/runtime/chunk loaded","webpack://okxconnectdemo/webpack/runtime/compat get default export","webpack://okxconnectdemo/webpack/runtime/create fake namespace object","webpack://okxconnectdemo/webpack/runtime/define property getters","webpack://okxconnectdemo/webpack/runtime/global","webpack://okxconnectdemo/webpack/runtime/hasOwnProperty shorthand","webpack://okxconnectdemo/webpack/runtime/make namespace object","webpack://okxconnectdemo/webpack/runtime/node module decorator","webpack://okxconnectdemo/webpack/runtime/jsonp chunk loading","webpack://okxconnectdemo/webpack/startup"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_METHOD_BATCH_FETCHMSG = exports.CONNECT_METHOD_FETCHMSG = exports.CONNECT_METHOD_RECEIVE = exports.CONNECT_METHOD_UNSUB = exports.CONNECT_METHOD_SUB = exports.CONNECT_METHOD_PUBLISH = exports.CONNECT_METHOD_LOGIN = exports.CONNECT_METHOD_PUSH = void 0;\n// --------------- ws methods -------------\nexports.CONNECT_METHOD_PUSH = \"push\";\nexports.CONNECT_METHOD_LOGIN = \"login\";\nexports.CONNECT_METHOD_PUBLISH = \"publish\";\nexports.CONNECT_METHOD_SUB = \"subscribe\";\nexports.CONNECT_METHOD_UNSUB = \"unsubscribe\";\nexports.CONNECT_METHOD_RECEIVE = \"receive\";\nexports.CONNECT_METHOD_FETCHMSG = \"fetchMessages\";\nexports.CONNECT_METHOD_BATCH_FETCHMSG = \"batchFetchMessages\";\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXWalletConnector = void 0;\nconst constants_1 = require(\"./constants\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils\");\nconst utils_2 = require(\"../utils/utils\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst log = __importStar(require(\"../utils/log\"));\nconst protocol_1 = require(\"../protocol\");\nconst report_1 = require(\"../utils/report\");\nconst WS = (0, utils_2.resolveWebSocketImplementation)();\nclass OKXWalletConnector {\n    constructor(url) {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.state = constants_1.ConnectorState.InitState;\n        this.selectedUrlIndex = 0;\n        // reconnect\n        this.retryCount = 0;\n        // default timeout limit: 8 sec\n        this.timeOutLimit = 8000;\n        if (!(0, utils_2.checkWSUrl)(url)) {\n            throw new Error(`CONNECTOR: invalid url ${url}`);\n        }\n        this.url = url;\n        this.heartbeatTimer = null;\n        this.connectionTimeoutTimer = null;\n        this.connectURLStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY + storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n    }\n    get connecting() {\n        return this.state == constants_1.ConnectorState.Connecting;\n    }\n    // ------------------------------------------------------\n    onPayload(e) {\n        if (typeof e.data === \"undefined\")\n            return;\n        log.logDebug('get received data');\n        log.logDebug(e);\n        if (typeof e.data === \"string\") {\n            let rsp = e.data;\n            if (rsp === \"pong\") {\n                log.logDebug(`CONNECT: receive pong ${Date.now().toString()}`);\n                return;\n            }\n        }\n        this.events.emit(\"payload\", e.data);\n    }\n    onClose(event) {\n        var _a;\n        log.logDebug('socket get closed: ', (_a = this.socket) === null || _a === void 0 ? void 0 : _a.url, event.code);\n        this.socket = undefined;\n        this.events.emit(\"close\", event);\n    }\n    onError(id, e) {\n        const payload = { id: id, msg: e.toString() };\n        this.events.emit(\"payload\", payload);\n    }\n    onopen(socket) {\n        socket.onmessage = (event) => this.onPayload(event);\n        socket.onclose = (event) => this.onClose(event);\n        this.socket = socket;\n        this.state = constants_1.ConnectorState.Connected;\n        this.events.emit(\"open\");\n    }\n    // ------------------------------------------------------\n    emitError(errorEvent) {\n        this.events.emit(\"fail\", errorEvent);\n    }\n    // ------------------------------------------------------\n    heartbeat() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.heartbeatTimer) {\n                clearTimeout(this.heartbeatTimer);\n            }\n            if (this.state != constants_1.ConnectorState.Connected && this.state != constants_1.ConnectorState.OnError) {\n                log.logDebug('heart beat close');\n                return;\n            }\n            if (!this.socket) {\n                log.logDebug('socket not exist');\n                if (this.state == constants_1.ConnectorState.Connected || this.state == constants_1.ConnectorState.OnError) {\n                    log.logDebug('socket reconnect by heartbeat');\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                        this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n                    }\n                }\n                return;\n            }\n            if (this.socket.readyState !== WebSocket.OPEN) {\n                log.logDebug('socket not ready');\n                if (this.state == constants_1.ConnectorState.Connected || this.state == constants_1.ConnectorState.OnError) {\n                    log.logDebug('socket reconnect by heartbeat with state', this.state, this.socket.readyState);\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                        this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n                    }\n                }\n                return;\n            }\n            log.logDebug(`send ping heart beat: ${Date.now().toString()}, ${this.socket}`);\n            this.socket.send(\"ping\");\n            this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n        });\n    }\n    registOpen(url = this.url, inRetry = false) {\n        if (!(0, utils_2.checkWSUrl)(url)) {\n            throw new Error(`CONNECTOR: invalid url ${url}`);\n        }\n        this.url = url;\n        if (!inRetry) {\n            log.logDebug('Connection connect:', this.url, new Date().toUTCString());\n        }\n        this.state = constants_1.ConnectorState.Connecting;\n        const origin = new URLSearchParams(url).get(\"origin\");\n        return new Promise((resolve, reject) => {\n            const socket = new WS(url, []);\n            log.logDebug('Connection connect Begin:', this.url, new Date().toUTCString());\n            this.startTimeOutTimer(socket);\n            if ((0, utils_2.hasBuiltInWebSocket)()) {\n                log.logDebug('Add socket error handler');\n                socket.onerror = () => {\n                    reject(new Error('socket error'));\n                    socket.close();\n                };\n            }\n            else {\n                log.logDebug('Add socket error handler');\n                socket.on(\"error\", () => {\n                    reject(new Error('socket error'));\n                    socket.close();\n                });\n            }\n            socket.onopen = () => {\n                log.logDebug('socket opened');\n                this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.FINISHED);\n                this.onopen(socket);\n                this.heartbeat();\n                resolve(socket);\n            };\n        });\n    }\n    checkMaxRetry() {\n        log.logDebug('current retry count:', this.retryCount, 'of', constants_1.OKXCONNECTOR_WS_URL_LIST.length);\n        return this.retryCount > (constants_1.OKXCONNECTOR_WS_URL_LIST.length * 3);\n    }\n    connectionTryNext() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.checkMaxRetry()) {\n                //TODO: mark descent\n                this.retryCount += 1;\n                let nextUrl = this.getNextSelectUrl();\n                log.logDebug('Connection retry:', nextUrl, new Date().toUTCString());\n                return this.registOpen(nextUrl, true);\n            }\n            else {\n                log.logDebug('Max Connection retry ', this.retryCount, new Date().toUTCString());\n            }\n        });\n    }\n    startTimeOutTimer(socket) {\n        if (this.connectionTimeoutTimer) {\n            this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.CANCELED);\n        }\n        this.pendingSocket = socket;\n        this.connectionTimeoutTimer = setTimeout(() => {\n            if (this.pendingSocket) {\n                this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.TIME_OUT);\n            }\n        }, this.timeOutLimit);\n    }\n    resetTimeOutTimer(code) {\n        var _a;\n        // 1. cancel connecting pending sockets\n        if (code == constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.TIME_OUT) {\n            // 2. remove timer\n            clearTimeout(this.connectionTimeoutTimer);\n            (_a = this.pendingSocket) === null || _a === void 0 ? void 0 : _a.close();\n            this.pendingSocket = undefined;\n            log.reportEvent(report_1.OKXReportType.LOG, 'timeout', this.retryCount.toString());\n            throw new Error('socket timeout');\n        }\n        else {\n            this.pendingSocket = undefined;\n            // 2. remove timer\n            clearTimeout(this.connectionTimeoutTimer);\n        }\n    }\n    cacheSuccessUrlSelect() {\n        this.connectURLStorage.saveContent(this.selectedUrlIndex.toString(), storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n    }\n    // private getSuccessUrlSelect(): string {\n    //     let selectIndex = this.connectURLStorage.getItem(OKXCONNECTOR_CACHE_KEY)?.content\n    //     let index = 0\n    //     if (selectIndex) {\n    //         index = Number(selectIndex)\n    //     }\n    //     this.selectedUrlIndex = index\n    //     return OKXCONNECTOR_WS_URL_LIST[index]\n    // }\n    getNextSelectUrl() {\n        this.selectedUrlIndex += 1;\n        this.selectedUrlIndex = this.selectedUrlIndex % constants_1.OKXCONNECTOR_WS_URL_LIST.length;\n        return constants_1.OKXCONNECTOR_WS_URL_LIST[this.selectedUrlIndex];\n    }\n    // ------------------------------------------------------\n    onVisibleChanged() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (document.visibilityState === 'visible') {\n                // check and restore\n                log.logDebug(`get changed ${this.state}, ${this.socket}`);\n                if (this.state == constants_1.ConnectorState.Connected && typeof this.socket === \"undefined\") {\n                    log.logDebug('CONNECTION need reopen');\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                    }\n                    return;\n                }\n            }\n        });\n    }\n    tryRegistOpen() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            if (this.connecting) {\n                log.logDebug('tryRegistOpen => connecting state');\n                return new Promise((resolve, reject) => {\n                    this.events.once('fail', (e) => {\n                        log.logDebug('tryRegistOpen => connecting fail listener', e);\n                        return reject(e);\n                    });\n                    this.events.once(\"open\", () => {\n                        if (typeof this.socket == \"undefined\") {\n                            return reject(new Error(\"Connect lost\"));\n                        }\n                        return resolve(this.socket);\n                    });\n                });\n            }\n            log.logDebug('tryRegistOpen => try registOpen until retry limit is hit');\n            let inRetry = false;\n            while (!this.checkMaxRetry() && !this.socket) {\n                try {\n                    log.logDebug('tryRegistOpen => call registOpen, try count:', this.retryCount, inRetry);\n                    yield this.registOpen(url, inRetry);\n                }\n                catch (err) {\n                    log.logDebug('tryRegistOpen => registOpen failed', err);\n                    this.retryCount += 1;\n                    url = this.getNextSelectUrl();\n                    inRetry = true;\n                }\n            }\n            log.logDebug('tryRegistOpen => exit while loop', this.retryCount, this.socket);\n            if (!this.socket && this.checkMaxRetry()) {\n                log.logDebug('tryRegistOpen => failed to open a socket', this.retryCount, this.socket);\n                this.retryCount = 0;\n                this.state = constants_1.ConnectorState.OnError;\n                this.emitError(new Error('tryRegistOpen failed'));\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CONNECTION_ERROR, \"Failed to connect\");\n            }\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this.tryRegistOpen();\n                // listener for reconnect\n                document.removeEventListener('visibilitychange', this.onVisibleChanged.bind(this));\n                document.addEventListener('visibilitychange', this.onVisibleChanged.bind(this));\n            }\n            catch (e) {\n                log.logDebug('connect => failed to connect', e);\n                throw e;\n            }\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.state = constants_1.ConnectorState.Disconnected;\n            return new Promise((resolve, reject) => {\n                if (typeof this.socket === \"undefined\") {\n                    // reject(new Error(\"CONNECTION closed\"))\n                    resolve();\n                    return;\n                }\n                this.socket.onclose = (event) => {\n                    this.onClose(event);\n                    resolve();\n                };\n                this.socket.close();\n                if (this.heartbeatTimer) {\n                    clearTimeout(this.heartbeatTimer);\n                }\n            });\n        });\n    }\n    currentStatus() {\n        return {\n            state: this.state,\n            url: this.url\n        };\n    }\n    // event will be jsonstr\n    /// @params Promise\n    /// @params success/failed callback\n    addListener(event, decrypt, success, failed, splitCheckComplete) {\n        if (this.listenPayloadHandler) {\n            this.events.removeListener(\"payload\", this.listenPayloadHandler);\n        }\n        this.listenPayloadHandler = (e) => __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            log.logDebug(`<<< get payload ${e}`);\n            let parsedEvent = (0, utils_1.safeJsonParse)(e);\n            // parse the data to chose success or failed\n            if (parsedEvent.params && parsedEvent.params.data) {\n                let rawMsg = (_a = parsedEvent.params.data) === null || _a === void 0 ? void 0 : _a.message;\n                let skipMsg = false;\n                if (rawMsg) {\n                    // 在这里增加检测流程，如果当前包是“分包”，而且没有finalMessage则不继续触发failed/success结果\n                    if (splitCheckComplete) {\n                        let checkResult = yield splitCheckComplete(parsedEvent.params.data);\n                        skipMsg = checkResult.isSplitPackage && (!checkResult.finalMessage);\n                        if (checkResult.isSplitPackage) {\n                            if (checkResult.finalMessage && checkResult.finalMessage.length > 0) {\n                                log.logDebug('CONNECT: update raw msg content');\n                                rawMsg = checkResult.finalMessage;\n                            }\n                            else {\n                                log.logDebug('CONNECT: skip raw msg content');\n                                skipMsg = true;\n                            }\n                        }\n                    }\n                }\n                if (!skipMsg) {\n                    try {\n                        let msg = decrypt(rawMsg);\n                        if (msg === undefined) {\n                            log.logDebug(`CONNECT: decrypt undefined`);\n                            failed(event, 'Decrypt undefined');\n                        }\n                        else {\n                            success(event, msg);\n                        }\n                    }\n                    catch (e) {\n                        log.logDebug(`CONNECT: decrypt failed: ${e}`);\n                        failed(event, e.message);\n                    }\n                }\n            }\n        });\n        this.events.on(\"payload\", this.listenPayloadHandler);\n        if (this.failHandler) {\n            this.events.removeListener(\"fail\", this.failHandler);\n        }\n        this.failHandler = (e) => {\n            if (e) {\n                log.logDebug(`CONNECT failed: ${e}`);\n                failed(event, e.message);\n            }\n            else {\n                failed(event, \"Unkonow error\");\n            }\n        };\n        this.events.on(\"fail\", this.failHandler);\n    }\n    addPackageParse(callback) {\n        if (this.payloadHandler) {\n            this.events.removeListener(\"payload\", this.payloadHandler);\n        }\n        this.payloadHandler = (e) => __awaiter(this, void 0, void 0, function* () {\n            // parse the data to chose success or failed\n            log.logDebug(`CONNECTION @[${new Date().toUTCString()}] <<<< received e:${e}`);\n            let param = (0, utils_1.safeJsonParse)(e);\n            yield callback(param);\n        });\n        this.events.on(\"payload\", this.payloadHandler);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    send(doLogin, payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (typeof this.socket === \"undefined\") {\n                    log.logDebug(`>>> send payload undefined ${payload}`);\n                    // this.socket = await this.registOpen();\n                    yield doLogin();\n                }\n                log.logDebug(`CONNECTION @[${new Date().toUTCString()}]>>> send payload ${(0, utils_1.safeJsonStringify)(payload)}`);\n                if (this.socket) {\n                    this.socket.send((0, utils_1.safeJsonStringify)(payload));\n                }\n            }\n            catch (e) {\n                this.onError(payload.id, e);\n            }\n        });\n    }\n    getMsgPayloadFromHistory(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof msg === \"undefined\")\n                return;\n            let tmpMsg = {\n                params: {\n                    data: msg\n                }\n            };\n            let jsonstr = (0, utils_1.safeJsonStringify)(msg);\n            log.logDebug('get received data from history');\n            log.logDebug(jsonstr);\n            jsonstr = (0, utils_1.safeJsonStringify)(tmpMsg);\n            this.events.emit(\"payload\", jsonstr);\n        });\n    }\n    onOpen(callback) {\n        if (this.openHandler) {\n            this.events.removeListener(\"open\", this.openHandler);\n        }\n        this.openHandler = () => __awaiter(this, void 0, void 0, function* () {\n            log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> ws opened: `);\n            yield callback();\n        });\n        this.events.on(\"open\", this.openHandler);\n        this.cacheSuccessUrlSelect();\n    }\n}\nexports.OKXWalletConnector = OKXWalletConnector;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionManager = void 0;\nconst connect_1 = require(\"./connect\");\nconst commands_1 = require(\"./commands\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst jwtconstants_1 = require(\"./jwtconstants\");\nconst constants_1 = require(\"./constants\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils/utils\");\nconst crypto_1 = require(\"../crypto/crypto\");\nconst jwt_1 = require(\"./jwt\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst report_1 = require(\"../utils/report\");\nconst url_1 = require(\"../utils/url\");\nconst connectionSplitPackages_1 = require(\"./connectionSplitPackages\");\nclass ConnectionManager {\n    constructor(appname = undefined) {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.splitManager = new connectionSplitPackages_1.ConnectionSplitPackages('dapp');\n        // local storage\n        this.connectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY_DAPP + appname, storageconstants_1.OKXCONNECTOR_CACHE_KEY_DAPP);\n        this.crypto = new crypto_1.SessionCrypto();\n        let inTMA = (0, url_1.isInTMA)();\n        (0, log_1.logDebug)('do init:', inTMA);\n        log.reportLog('connection manager do init');\n        if (inTMA) {\n            // recovery from cache\n            const keyPairInfo = this.getCachedCryptoKeyPair();\n            (0, log_1.logDebug)('use same pk:', keyPairInfo);\n            this.crypto = new crypto_1.SessionCrypto(keyPairInfo);\n        }\n        this.jwtKeyPair = this.getCachedJWTKeyPair();\n        this.saveJWTKeyPair(this.jwtKeyPair);\n        // wss connection\n        this.connector = new connect_1.OKXWalletConnector(constants_1.OKXCONNECTOR_WS_URL_1);\n        this.packageId = Date.now();\n        // connection state\n        this.connectedWalletPK = '';\n        this.currentTopic = '';\n        log.logDebug(`this.connectedWalletPK  constructor   ${this.connectedWalletPK}`);\n    }\n    refreshPackageId() {\n        let nowDate = Date.now();\n        if (nowDate == this.packageId) {\n            this.packageId = nowDate + 1;\n        }\n        this.packageId = nowDate;\n    }\n    saveCryptoKeyPair(keyPair) {\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(keyPair);\n        // encrypt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_CRYPTO_KEY);\n    }\n    getCachedCryptoKeyPair() {\n        // decrypt kp\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_CRYPTO_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            log.logDebug('get cached crypto key:');\n            log.logDebug(content);\n            let keyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            return keyPairInfo;\n        }\n        else {\n            this.connectStorage.clearCache();\n        }\n        return null;\n    }\n    saveJWTKeyPair(keyPair) {\n        var strkeyPair = {\n            publicKey: (0, utils_1.toHexString)(keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(keyPair.secretKey)\n        };\n        log.logDebug('save jwt kp');\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(strkeyPair);\n        log.logDebug(cacheInfo);\n        // encrypt jwt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_JWT_KEY);\n    }\n    getCachedJWTKeyPair() {\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            // TODO: decrypt jwt kp\n            log.logDebug('get cached jwt kp:');\n            log.logDebug(content);\n            let strKeyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            log.logDebug('save jwt kp');\n            log.logDebug(strKeyPairInfo);\n            var keyPair = {\n                publicKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.publicKey),\n                secretKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.secretKey)\n            };\n            return keyPair;\n        }\n        else {\n            return (0, jwt_1.generateKeyPair)();\n        }\n    }\n    isWalletPKReady() {\n        log.logDebug(`isWalletPKReady  ===> ${this.connectedWalletPK}`);\n        return this.connectedWalletPK.length > 0;\n    }\n    makeJWT(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, jwt_1.signJWT)(topic, jwtconstants_1.OKXCONNECTOR_JWT_SIDE, jwtconstants_1.OKXCONNECTOR_JWT_TTL, // 24h\n            this.jwtKeyPair);\n        });\n    }\n    parsePackage(input_1) {\n        return __awaiter(this, arguments, void 0, function* (input, ignoreACK = false) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o;\n            this.events.emit(input.id, input);\n            // send back ACK\n            if (!ignoreACK) {\n                yield this.sendACK(input.id, true);\n                let topic = (_a = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE)) === null || _a === void 0 ? void 0 : _a.content;\n                if (topic) {\n                    let inputObj = input;\n                    if ((_c = (_b = inputObj.params) === null || _b === void 0 ? void 0 : _b.data) === null || _c === void 0 ? void 0 : _c.messageId) {\n                        // change into split check receive\n                        let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload((_e = (_d = inputObj.params) === null || _d === void 0 ? void 0 : _d.data) === null || _e === void 0 ? void 0 : _e.message);\n                        if (msgPlayloadObject) {\n                            let msgObject = {\n                                topicId: (_g = (_f = inputObj.params) === null || _f === void 0 ? void 0 : _f.data) === null || _g === void 0 ? void 0 : _g.topic,\n                                messageId: (_j = (_h = inputObj.params) === null || _h === void 0 ? void 0 : _h.data) === null || _j === void 0 ? void 0 : _j.messageId,\n                                messageObject: msgPlayloadObject,\n                                publishedAt: (_l = (_k = inputObj.params) === null || _k === void 0 ? void 0 : _k.data) === null || _l === void 0 ? void 0 : _l.publishedAt,\n                            };\n                            let checkResult = yield this.splitManager.onReceivedPackageCheck(msgObject);\n                            if (checkResult.completeMessageIdList) {\n                                checkResult.completeMessageIdList.forEach((msgId) => __awaiter(this, void 0, void 0, function* () {\n                                    // 发送receive\n                                    this.refreshPackageId();\n                                    yield this.sendReceive(this.packageId.toString(), msgId, topic);\n                                }));\n                            }\n                        }\n                        else {\n                            this.refreshPackageId();\n                            yield this.sendReceive(this.packageId.toString(), (_o = (_m = inputObj.params) === null || _m === void 0 ? void 0 : _m.data) === null || _o === void 0 ? void 0 : _o.messageId, topic);\n                        }\n                    }\n                }\n            }\n        });\n    }\n    restoreConnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.reportLog('connection manager restore connection');\n            log.logDebug(`connectionManager  restoreConenct   ${topic}`);\n            if ((typeof topic !== 'string') || topic.length === 0) {\n                throw new Error('CONNECTION: invalid topic');\n            }\n            log.logDebug(`connectionManager  restoreConenct   disconnect`);\n            yield this.disconnect(true);\n            this.connectStorage.saveContent(topic, storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`connectionManager  restoreConenct   conect`);\n            yield this.connect(true);\n        });\n    }\n    getConnectInfo() {\n        var topic = (0, utils_1.generateTopic)();\n        log.logDebug(`generate topic token: ${topic}`);\n        log.reportLog('connection manager generate connection info');\n        this.currentTopic = topic;\n        const info = {\n            channelId: topic,\n            clientId: this.crypto.stringifyKeypair().publicKey,\n        };\n        return info;\n    }\n    connect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            this.timeLog = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---enter->\", this.timeLog);\n            log.reportLog('connection manager begin connect');\n            let lastConnectId = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            //1. generate topic & jwt\n            var topic = this.currentTopic;\n            log.logDebug(`generate topic token: ${topic}`);\n            // crypto keypair\n            if (fromRestore) {\n                if (typeof lastConnectId !== 'undefined' && lastConnectId !== null) {\n                    log.logDebug(`read last connect id: ${lastConnectId}`);\n                    topic = lastConnectId.content;\n                }\n                var cachedSenderPublicKey = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                if (cachedSenderPublicKey) {\n                    this.connectedWalletPK = cachedSenderPublicKey.content;\n                    (0, log_1.logDebug)(`connectionManager connect() this.connectedWalletPK : ${this.connectedWalletPK}`);\n                }\n                log.reportLog('connection manager do restore connection');\n            }\n            if (fromRestore) {\n                // recovery from cache\n                const keyPairInfo = this.getCachedCryptoKeyPair();\n                if (keyPairInfo) {\n                    this.crypto = new crypto_1.SessionCrypto(keyPairInfo);\n                }\n            }\n            log.logDebug(`use crypto client id: ${this.crypto.stringifyKeypair().publicKey}`);\n            // cache topic\n            this.connectStorage.saveContent(topic, storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            var jwtToken = yield this.makeJWT(topic);\n            log.logDebug(`generate jwt token: ${jwtToken}`);\n            this.connectStorage.saveContent(jwtToken, 'jwt');\n            return new Promise((resolve, reject) => {\n                // 1. when websocket opened\n                this.connector.onOpen(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug(`1. connector on open`);\n                    log.reportLog('1. connect ws open');\n                    const timeOne = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---open->\", timeOne - this.timeLog);\n                    //2. send jwt to login\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when login');\n                            log.reportLog('2. connect login failed');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // throw error\n                            reject(error);\n                        }\n                        //3. send subscribe\n                        this.refreshPackageId();\n                        this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                            // ack\n                            if (rsp && rsp.error) {\n                                log.logError('failed when subscribe');\n                                log.reportLog('3. connect subscribe failed');\n                                yield this.connector.disconnect();\n                                var error = new Error();\n                                error.message = rsp.error.message;\n                                error.name = rsp.error.code.toString();\n                                // throw error\n                                reject(error);\n                            }\n                            this.refreshPackageId();\n                            log.logDebug(`4. subscribe callback then send fetch: ${this.packageId}`);\n                            log.reportLog('4. subscribe callback then send fetch');\n                            const timeF = new Date().getTime();\n                            (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n                            // 4. fetch messages\n                            yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                            // 5. split init\n                            log.logDebug(`5. splitmanager init: ${this.packageId}`);\n                            log.reportLog('5. splitmanager init');\n                            yield this.splitManager.init(this.sendRaw.bind(this));\n                            resolve();\n                        }));\n                        log.logDebug(`3. login callback then send subscribe: ${this.packageId}`);\n                        log.reportLog('3. connect subscribe failed');\n                        const timeTh = new Date().getTime();\n                        (0, log_1.logDebug)(\"ConnectTime---login callback->\", timeTh - this.timeLog);\n                        yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                            log.logDebug('CONNECT: reconnect before send');\n                            yield this.connector.connect()\n                                .catch((err) => {\n                                (0, log_1.logDebug)('ConnectionManager connect error', err);\n                                reject(err);\n                            });\n                        }), {\n                            id: this.packageId.toString(),\n                            jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                            method: commands_1.CONNECT_METHOD_SUB,\n                            params: {\n                                topic: topic\n                            }\n                        });\n                    }));\n                    log.logDebug(`2. login called`);\n                    log.reportLog('2. connection manager connect call login');\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        yield this.connector.connect()\n                            .catch((err) => {\n                            (0, log_1.logDebug)('ConnectionManager connect error', err);\n                            reject(err);\n                        });\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_LOGIN,\n                        params: {\n                            token: jwtToken\n                        }\n                    });\n                    // 4. listen when dapp back to front, receive wallet public key\n                    this.connector.addPackageParse((event) => {\n                        var _a;\n                        log.logDebug(`connect: parse package`);\n                        log.logDebug(event);\n                        if (!(\"params\" in event) || !(\"data\" in event[\"params\"])) {\n                            this.parsePackage(event, true);\n                            return;\n                        }\n                        let rawMsg = (_a = event.params.data) === null || _a === void 0 ? void 0 : _a.message;\n                        if (typeof rawMsg !== 'undefined') {\n                            rawMsg = rawMsg.replace(/'/g, '\"');\n                            let parsedMessage = (0, safejson_1.safeJsonParse)(rawMsg);\n                            if (typeof parsedMessage !== 'string' && \"clientId\" in parsedMessage && parsedMessage.clientId && parsedMessage.clientId.length > 0) {\n                                this.connectedWalletPK = parsedMessage.clientId;\n                                log.logDebug(`this.connectedWalletPK  addPackageParse   ${this.connectedWalletPK}`);\n                                // exchange sender public key\n                                // cache wallet public key\n                                this.connectStorage.saveContent(this.connectedWalletPK, storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                                // cache crypto keypair\n                                this.saveCryptoKeyPair(this.crypto.stringifyKeypair());\n                            }\n                        }\n                        // ignore receive echo\n                        this.parsePackage(event, event.method === commands_1.CONNECT_METHOD_RECEIVE);\n                    });\n                }));\n                this.connector.connect().catch((err) => {\n                    (0, log_1.logDebug)('ConnectionManager connect error', err);\n                    reject(err);\n                });\n            });\n        });\n    }\n    disconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            yield this.connector.disconnect();\n            log.reportLog('connect disconnect');\n            //clean cached topic\n            //如果是恢复连接，就不清理解密public key\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            if (!fromRestore) {\n                this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                this.connectedWalletPK = '';\n                (0, log_1.logDebug)(`connectionManager disconnect() this.connectedWalletPK : ${this.connectedWalletPK}`);\n            }\n        });\n    }\n    updateProtocolVersion(topic, protocolVersion) {\n        this.splitManager.updateTopicSenderVersion(topic, protocolVersion);\n    }\n    addListener(event, success, fail) {\n        this.connector.addListener((0, safejson_1.safeJsonStringify)(event), (rawMsg) => {\n            rawMsg = rawMsg.replace(/'/g, '\"');\n            log.logDebug(`addListener ===> ${rawMsg}`);\n            if (typeof rawMsg !== 'undefined') {\n                var msgObj = (0, safejson_1.safeJsonParse)(rawMsg);\n                var msg = msgObj.message;\n                let result;\n                if (msg.trimStart().startsWith('{')) {\n                    result = msg;\n                }\n                else {\n                    if (msgObj.clientId && msgObj.clientId.length > 0) {\n                        this.connectedWalletPK = msgObj.clientId;\n                        this.connectStorage.saveContent(this.connectedWalletPK, storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                        log.logDebug(`this.connectedWalletPK  addListener   ${this.connectedWalletPK}`);\n                        log.logDebug(`this.cryptoKey  addListener   ${(0, utils_1.toHexString)(this.crypto.keyPair.publicKey)}`);\n                        // cache crypto keypair\n                        this.saveCryptoKeyPair(this.crypto.stringifyKeypair());\n                    }\n                    result = this.crypto.decrypt(msg, this.connectedWalletPK);\n                }\n                log.logDebug(`addListener ===> ${result}`);\n                return result;\n            }\n            return undefined;\n        }, success, fail, (inputDataObj) => {\n            // 判断获取是否是分包，如果是则返回合包结果，如果不是则继续\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(inputDataObj.message);\n                if (msgPlayloadObject) {\n                    let msgObject = {\n                        topicId: inputDataObj.topic,\n                        messageId: inputDataObj === null || inputDataObj === void 0 ? void 0 : inputDataObj.messageId,\n                        messageObject: msgPlayloadObject,\n                        publishedAt: inputDataObj === null || inputDataObj === void 0 ? void 0 : inputDataObj.publishedAt,\n                    };\n                    let msgResult = yield this.splitManager.onReceivedPackageCheck(msgObject);\n                    resolve(msgResult);\n                }\n                else {\n                    resolve({\n                        isSplitPackage: false,\n                    });\n                }\n            }));\n        });\n    }\n    sendRaw(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.logDebug(`message send =====> ${msg}`);\n            log.reportLog('connect send raw msg');\n            let message = msg;\n            log.logDebug(`message send =====encrypt message.length>>>> ${message.length}`);\n            // only one topic\n            let topic = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`message send =====topic>>>> ${topic === null || topic === void 0 ? void 0 : topic.content}`);\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                method: commands_1.CONNECT_METHOD_PUBLISH,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                params: {\n                    message: {\n                        topic: topic === null || topic === void 0 ? void 0 : topic.content,\n                        message: message,\n                        ttl: constants_1.OKXCONNECTOR_MESSAGE_TTL\n                    }\n                } // crypted\n            };\n            this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                // ack\n                if (rsp && rsp.error) {\n                    log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                }\n                else if (rsp && !rsp.error) {\n                    log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                }\n            }));\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n            return this.packageId;\n        });\n    }\n    sendEncryptedMsg(topic_1, encryptedMsg_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, encryptedMsg, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL) {\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                method: commands_1.CONNECT_METHOD_PUBLISH,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                params: {\n                    message: {\n                        topic: topic,\n                        message: encryptedMsg,\n                        ttl: ttl\n                    }\n                } // crypted\n            };\n            this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                // ack\n                if (rsp && rsp.error) {\n                    log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                }\n                else if (rsp && !rsp.error) {\n                    log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                }\n            }));\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    send(msg_1) {\n        return __awaiter(this, arguments, void 0, function* (msg, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL) {\n            // make send msg payload\n            log.logDebug(`message send =====> ${msg}`);\n            log.reportLog('connect send msg');\n            if (!this.isWalletPKReady()) {\n                // channel not ready\n                throw new Error('connection not finish');\n            }\n            let message = this.crypto.encrypt(msg, this.connectedWalletPK);\n            log.logDebug(`message send =====encrypt message.length>>>> ${message.length}`);\n            log.reportEvent(report_1.OKXReportType.LOG, 'msg_size', message.length.toString());\n            // only one topic\n            let topic = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`message send =====topic>>>> ${topic === null || topic === void 0 ? void 0 : topic.content}`);\n            // before send message check split\n            yield this.splitManager.sendSplitPackages(topic === null || topic === void 0 ? void 0 : topic.content, message, this.sendEncryptedMsg.bind(this), this.sendRaw.bind(this));\n            // await this.sendEncryptedMsg(topic?.content, message, ttl)\n            // this.refreshPackageId()\n            // const payload : ConnectPayloadReq = {\n            //    id : this.packageId.toString(),\n            //    method: CONNECT_METHOD_PUBLISH,\n            //    jsonrpc: CONNECT_JSONRPC_VER,\n            //    params: {\n            //       message: {\n            //          topic: topic?.content,\n            //          message: message,\n            //          ttl: ttl\n            //       }\n            //    } // crypted\n            // }\n            // this.events.once(this.packageId.toString(), async (rsp:ConnectPayloadRsp)=>{\n            //    // ack\n            //    if (rsp && rsp.error) {\n            //       log.logError(`@${new Date().toUTCString()} >>> failed when send msg`)\n            //    } else if ( rsp && !rsp.error) {\n            //       log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`)\n            //    }\n            // })\n            // await this.connector.send(async ()=>{\n            //    log.logDebug('CONNECT: reconnect before send')\n            //    return await this.connector.connect();\n            // }, payload)\n            return this.packageId;\n        });\n    }\n    sendACK(msgId_1, success_1) {\n        return __awaiter(this, arguments, void 0, function* (msgId, success, reason = undefined) {\n            if (success === true) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    result: true\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n            else if (reason) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    error: {\n                        code: reason.code, //int\n                        message: reason.message\n                    }\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    // send receive\n    sendReceive(msgId, messageId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECEIVE,\n                params: {\n                    data: {\n                        messageId: messageId,\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    // send receive\n    // 1. fetch all \n    // 2. send back receive\n    // 3. check has more, if so, repeat from 1st step\n    sendFetchAndConsumeMessages(msgId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(msgId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic == topic) {\n                                let messageId = msg.messageId;\n                                log.reportLog('5. get fetch result');\n                                // fetch result receive control\n                                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(msg.message);\n                                if (msgPlayloadObject) {\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                    log.logDebug('skip receive');\n                                }\n                                else {\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                    // send receive command to relay server\n                                    this.refreshPackageId();\n                                    yield this.sendReceive(this.packageId.toString(), messageId, topic);\n                                }\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            log.reportLog('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_FETCHMSG,\n                params: {\n                    data: {\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    cleanCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.reportLog('connection cache clean called');\n            this.connectStorage.clearCache();\n        });\n    }\n    saveSessionContent(key, data) {\n        if (!data) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(data);\n        this.connectStorage.encryptStoreMsg(jsonData, storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n    }\n    getSessionContent(key) {\n        let jsonStr = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        if (jsonStr) {\n            let object = (0, safejson_1.safeJsonParse)(jsonStr);\n            return object;\n        }\n        return undefined;\n    }\n    getCurrentConnectionReady() {\n        return this.isWalletPKReady();\n    }\n}\nexports.ConnectionManager = ConnectionManager;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionSplitPackages = void 0;\nconst storageconstants_1 = require(\"./storageconstants\");\nconst localforage_1 = __importDefault(require(\"localforage\"));\nconst utils_1 = require(\"../utils/utils\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst ConnectionSplitSupportedVersionLimit = 2;\nconst ConnectionSplitSupportedSizeLimit = 63000;\n// test\n//  const ConnectionSplitSupportedSizeLimit = 500\nconst ConnectionReceiveKey = 'ConnectionReceiveKey';\nconst ConnectionSendKey = 'ConnectionSendKey';\nconst ConnectionTopicVersionKey = 'ConnectionSenderVersionKey';\nclass ConnectionSplitPackages {\n    constructor(side) {\n        // 发送队列, 保存分片数据，需要断点续传发送，\n        this.splitMessageSendArray = new Map();\n        // 接收队列, 保存回包数据，需要冗余去重复\n        this.splitMessageReceivedArray = new Map();\n        // sender 版本校验缓存\n        this.splitMessageSenderVersionMap = new Map();\n        this.splitPackageCache = localforage_1.default.createInstance({\n            name: storageconstants_1.OKXCONNECTOR_STORAGE_PROTOCOL_CACHE + side\n        });\n    }\n    init(sendRawMsg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // 1. 恢复缓存\n            yield this.recoverFromCache();\n            //2. 缓存中发送队列重发\n            if (this.splitMessageSendArray.size > 0) {\n                for (const [topic, payloadList] of this.splitMessageSendArray.entries()) {\n                    for (let i = 0; i < payloadList.length;) {\n                        const payload = payloadList[i];\n                        try {\n                            // 尝试发送消息\n                            yield sendRawMsg((0, safejson_1.safeJsonStringify)(payload), topic);\n                            log.logDebug(`Successfully sent payload: ${(0, safejson_1.safeJsonStringify)(payload)} to topic: ${topic}`);\n                            // 成功后移除元素\n                            payloadList.splice(i, 1);\n                        }\n                        catch (error) {\n                            log.logError(`Failed to send payload: ${(0, safejson_1.safeJsonStringify)(payload)} to topic: ${topic}`, error);\n                            // 重试逻辑（最多重试 3 次）\n                            payload.retryCount = (payload.retryCount || 0) + 1;\n                            if (payload.retryCount > 3) {\n                                log.logError(`Payload failed after 3 retries: ${(0, safejson_1.safeJsonStringify)(payload)}`);\n                                payloadList.splice(i, 1); // 放弃重试，移除元素\n                            }\n                            else {\n                                i++; // 跳过当前元素，继续处理下一个\n                            }\n                        }\n                    }\n                }\n                yield this.syncCache();\n            }\n        });\n    }\n    tryParseMessageSplitPayload(message) {\n        var _a;\n        let result = undefined;\n        try {\n            if (message.trimStart().startsWith('{')) {\n                let messageObj = (0, safejson_1.safeJsonParse)(message);\n                if (messageObj\n                    && messageObj.protocol_version\n                    && messageObj.protocol_version >= 2) {\n                    let protocolMessageObject = messageObj;\n                    if (protocolMessageObject.package_group_id && ((_a = protocolMessageObject.package_group_id) === null || _a === void 0 ? void 0 : _a.length) > 0) {\n                        result = messageObj;\n                    }\n                }\n            }\n            else {\n                (0, log_1.logDebug)('not split packages');\n            }\n        }\n        catch (error) {\n            (0, log_1.logDebug)('not split packages');\n        }\n        return result;\n    }\n    updateTopicSenderVersion(topic, protocolVersion) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.splitMessageSenderVersionMap.set(topic, protocolVersion);\n            yield this.syncCache();\n            (0, log_1.logDebug)('get update topic sender version: ', topic, protocolVersion);\n        });\n    }\n    /**\n     * topic\n     * message 待发送的消息体\n     * sendMsg 正常发送消息的方法\n     * sendRawMsg 发送明文格式，即拆包消息的方法\n    */\n    sendSplitPackages(topic, message, sendMsg, sendRawMsg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // 1. 长度校验拆分子包\n            // 2. 确认连接协议最大支持版本\n            // 3. 分包缓存\n            // 4. 缓存包发送\n            // 5. ACK确认并清理缓存\n            if (!topic) {\n                log.logError('sendSplitPackages invalid topic');\n                return;\n            }\n            let senderVersion = this.splitMessageSenderVersionMap.get(topic);\n            let msgLength = message.length;\n            try {\n                if (msgLength < ConnectionSplitSupportedSizeLimit) {\n                    throw new Error(`no need to split (size:${msgLength})`);\n                }\n                if (!senderVersion || (senderVersion && senderVersion < ConnectionSplitSupportedVersionLimit)) {\n                    throw new Error(`version not support split (version: ${senderVersion})`);\n                }\n                const msg_parts = [];\n                let msg_part_length = ConnectionSplitSupportedSizeLimit;\n                for (let i = 0; i < message.length; i += msg_part_length) {\n                    if (i + msg_part_length < message.length) {\n                        msg_parts.push(message.slice(i, i + msg_part_length));\n                    }\n                    else {\n                        msg_parts.push(message.slice(i));\n                    }\n                }\n                let groupId = (0, utils_1.generateGroupId)();\n                let splitMessagePackages = msg_parts.map((msg, index) => {\n                    // make msg split parts\n                    let msgObj = {\n                        topicId: topic,\n                        protocol_version: ConnectionSplitSupportedVersionLimit,\n                        total_count: msg_parts.length,\n                        package_index: index,\n                        package_group_id: groupId,\n                        content: msg\n                    };\n                    return msgObj;\n                });\n                // save cache\n                this.mergePackageArray(true, splitMessagePackages);\n                // try send out\n                for (let i = 0; i < splitMessagePackages.length;) {\n                    const msgObj = splitMessagePackages[i];\n                    const payload = (0, safejson_1.safeJsonStringify)(msgObj);\n                    try {\n                        // 尝试发送消息\n                        yield sendRawMsg(payload, topic);\n                        log.logDebug(`Successfully sent payload: ${payload} to topic: ${topic}`);\n                        // 成功后移除元素\n                        splitMessagePackages.splice(i, 1);\n                    }\n                    catch (error) {\n                        log.logError(`Failed to send payload: ${payload} to topic: ${topic}`, error);\n                        // 重试逻辑（最多重试 3 次）\n                        msgObj.retryCount = (msgObj.retryCount || 0) + 1;\n                        if (msgObj.retryCount > 3) {\n                            log.logError(`Payload failed after 3 retries: ${payload}`);\n                            splitMessagePackages.splice(i, 1); // 放弃重试，移除元素\n                        }\n                        else {\n                            i++; // 跳过当前元素，继续处理下一个\n                        }\n                    }\n                }\n                // clean cache\n                this.splitMessageSendArray.set(topic, []);\n                yield this.syncCache();\n            }\n            catch (e) {\n                (0, log_1.logDebug)('send split packages no split');\n                (0, log_1.logDebug)(e);\n                yield sendMsg(topic, message);\n            }\n        });\n    }\n    onReceivedPackageCheck(payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // 1. merge 进入缓存\n            this.mergePackageArray(false, [payload]);\n            let completeMap = new Map();\n            let inputTopic = payload.topicId;\n            // 2. 返回检查结果,输出完整message结果\n            this.splitMessageReceivedArray.forEach((itemList, topic) => {\n                if (topic == payload.topicId) {\n                    itemList.forEach((item) => {\n                        if (item.messageObject.package_group_id) {\n                            let messageCache = completeMap.get(item.messageObject.package_group_id);\n                            if (!messageCache) {\n                                messageCache = new Array();\n                            }\n                            messageCache.push(item);\n                            completeMap.set(item.messageObject.package_group_id, messageCache);\n                        }\n                    });\n                }\n            });\n            (0, log_1.logDebug)('on received message, check message cache');\n            let checkResult = {\n                isSplitPackage: false,\n                // finalMessage: undefined,\n                // completeMessageIdList: undefined \n            };\n            if (payload.messageObject.package_group_id) {\n                checkResult.isSplitPackage = true;\n                let messageCache = completeMap.get(payload.messageObject.package_group_id);\n                // 判断是否收齐\n                if (messageCache === null || messageCache === void 0 ? void 0 : messageCache.length) {\n                    let index_check = new Set();\n                    messageCache.forEach((item) => {\n                        if (item.messageObject.package_index !== undefined) {\n                            index_check.add(item.messageObject.package_index);\n                        }\n                    });\n                    if (index_check.size == payload.messageObject.total_count) {\n                        // 满足条件，更新checkResult\n                        messageCache.sort((a, b) => {\n                            if ((a.messageObject.package_index || a.messageObject.package_index === 0)\n                                && (b.messageObject.package_index || b.messageObject.package_index === 0)) {\n                                return a.messageObject.package_index - b.messageObject.package_index;\n                            }\n                            else {\n                                return 0;\n                            }\n                        });\n                        let messageList = messageCache.reduce((msgList, item) => {\n                            msgList.push(item.messageObject.content);\n                            return msgList;\n                        }, []);\n                        let messageIdList = messageCache.reduce((msgIdList, item) => {\n                            msgIdList.push(item.messageId);\n                            return msgIdList;\n                        }, []);\n                        checkResult.isSplitPackage = true;\n                        checkResult.finalMessage = messageList.join('');\n                        checkResult.completeMessageIdList = messageIdList;\n                        // 清理缓存\n                        let receivedList = this.splitMessageReceivedArray.get(inputTopic);\n                        if (receivedList) {\n                            receivedList = receivedList.filter((item) => {\n                                return !messageIdList.includes(item.messageId);\n                            });\n                            this.splitMessageReceivedArray.set(inputTopic, receivedList);\n                        }\n                        yield this.syncCache();\n                    }\n                }\n            }\n            // 抛出，交给manager来发送receive\n            return checkResult;\n        });\n    }\n    /* -------------------------- */\n    /** private methods */\n    /* -------------------------- */\n    mergePackageArray(isSending, inputPayloadArray) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('append sending array');\n            if (isSending) {\n                let inputSendArray = inputPayloadArray;\n                let filtedArray = inputSendArray.filter((payload) => {\n                    let inputTopic = payload.topicId;\n                    let accept = true;\n                    let sendCacheArray = this.splitMessageSendArray.get(inputTopic);\n                    sendCacheArray === null || sendCacheArray === void 0 ? void 0 : sendCacheArray.forEach((cachedPayload) => {\n                        if (cachedPayload.package_group_id == payload.package_group_id\n                            && cachedPayload.total_count == payload.total_count\n                            && cachedPayload.package_index == payload.package_index) {\n                            accept = false;\n                        }\n                    });\n                    return accept;\n                });\n                if (filtedArray.length > 0) {\n                    let inputTopic = filtedArray[0].topicId;\n                    let sendArray = this.splitMessageSendArray.get(inputTopic);\n                    if (!sendArray) {\n                        sendArray = new Array();\n                    }\n                    sendArray = sendArray.concat(filtedArray);\n                    this.splitMessageSendArray.set(inputTopic, sendArray);\n                    (0, log_1.logDebug)('append sending array (after filted): ', sendArray);\n                }\n            }\n            else {\n                let inputReceiveArray = inputPayloadArray;\n                let filtedArray = inputReceiveArray.filter((payload) => {\n                    let inputTopic = payload.topicId;\n                    let accept = true;\n                    let receiveCacheArray = this.splitMessageReceivedArray.get(inputTopic);\n                    receiveCacheArray === null || receiveCacheArray === void 0 ? void 0 : receiveCacheArray.forEach((cachedPayload) => {\n                        if (cachedPayload.messageId == payload.messageId) {\n                            accept = false;\n                        }\n                    });\n                    return accept;\n                });\n                if (filtedArray.length > 0) {\n                    let inputTopic = filtedArray[0].topicId;\n                    let receiveArray = this.splitMessageReceivedArray.get(inputTopic);\n                    if (!receiveArray) {\n                        receiveArray = new Array();\n                    }\n                    receiveArray = receiveArray.concat(filtedArray);\n                    this.splitMessageReceivedArray.set(inputTopic, receiveArray);\n                    (0, log_1.logDebug)('append received array (after filted): ', receiveArray);\n                }\n            }\n        });\n    }\n    syncCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('sync split message cache');\n            yield this.splitPackageCache.setItem(ConnectionReceiveKey, this.splitMessageReceivedArray);\n            yield this.splitPackageCache.setItem(ConnectionSendKey, this.splitMessageSendArray);\n            yield this.splitPackageCache.setItem(ConnectionTopicVersionKey, this.splitMessageSenderVersionMap);\n        });\n    }\n    recoverFromCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // rec\n            let rec_array = yield this.splitPackageCache.getItem(ConnectionReceiveKey);\n            if (rec_array) {\n                this.splitMessageReceivedArray = rec_array;\n            }\n            else {\n                this.splitMessageReceivedArray = new Map();\n            }\n            //send\n            let send_array = yield this.splitPackageCache.getItem(ConnectionSendKey);\n            if (send_array) {\n                this.splitMessageSendArray = send_array;\n            }\n            else {\n                this.splitMessageSendArray = new Map();\n            }\n            // topic/version cach\n            let topic = yield this.splitPackageCache.getItem(ConnectionTopicVersionKey);\n            if (topic) {\n                this.splitMessageSenderVersionMap = topic;\n            }\n            else {\n                this.splitMessageSenderVersionMap = new Map();\n            }\n        });\n    }\n}\nexports.ConnectionSplitPackages = ConnectionSplitPackages;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectorState = exports.CONNECT_PROTOCOL_VER = exports.CONNECT_JSONRPC_VER = exports.OKXCONNECTOR_MESSAGE_TTL = exports.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE = exports.OKXCONNECTOR_WS_URL_LIST = exports.OKXCONNECTOR_WS_URL_IDX_KEY = exports.OKXCONNECTOR_WS_URL_3 = exports.OKXCONNECTOR_WS_URL_2 = exports.OKXCONNECTOR_WS_URL_1 = exports.EVENT_EMITTER_MAX_LISTENERS = exports.OKXCONNECTOR_PROTOCOL_VERSION = void 0;\nexports.OKXCONNECTOR_PROTOCOL_VERSION = 2;\nexports.EVENT_EMITTER_MAX_LISTENERS = 10;\nexports.OKXCONNECTOR_WS_URL_1 = \"wss://wsdexpri.okx.com/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_2 = \"wss://wsdexpri.okx.ac/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_3 = \"wss://wsdexpri.coinall.ltd/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_IDX_KEY = \"wuik\";\nexports.OKXCONNECTOR_WS_URL_LIST = [\n    exports.OKXCONNECTOR_WS_URL_1,\n    exports.OKXCONNECTOR_WS_URL_2,\n    exports.OKXCONNECTOR_WS_URL_3,\n];\nexports.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE = {\n    TIME_OUT: 3990,\n    CANCELED: 3991,\n    FINISHED: 3992,\n};\nexports.OKXCONNECTOR_MESSAGE_TTL = 300000;\n// --------------- JSON RPC ---------------\nexports.CONNECT_JSONRPC_VER = \"2.0\";\n// --------------- Protocol Version -------\nexports.CONNECT_PROTOCOL_VER = 2;\nexports.ConnectorState = {\n    InitState: 0,\n    Connecting: 1,\n    Connected: 2,\n    Disconnected: 3,\n    OnError: 4,\n};\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Engine = void 0;\nconst protocol_1 = require(\"../protocol\");\nconst constants_1 = require(\"./constants\");\nconst utils_1 = require(\"../utils\");\nconst iconnector_1 = require(\"../connector/iconnector\");\nconst connectionManager_1 = require(\"./connectionManager\");\nconst sessionUtils_1 = require(\"./sessionUtils\");\nconst wallet_info_1 = require(\"../protocol/connect/wallet-info\");\nclass Engine {\n    constructor(appName) {\n        this.connectors = [];\n        this.useConnector = undefined;\n        this.connectionManager = new connectionManager_1.ConnectionManager(appName);\n        this.addConnectionListener();\n    }\n    getConnector() {\n        if (this.useConnector) {\n            return this.useConnector;\n        }\n    }\n    setAccountChangeListener(accountChangeListener) {\n        this.accountChangeListener = accountChangeListener;\n        (0, utils_1.logDebug)(\"setAccountChangeListener: engine\", accountChangeListener);\n        for (const connector of this.connectors) {\n            connector.setAccountChangeListener(accountChangeListener);\n        }\n    }\n    registerConnector(connectors) {\n        this.connectors = connectors;\n        for (const connector of connectors) {\n            connector.setConnectionManager(this.connectionManager);\n        }\n    }\n    hasWsConnector() {\n        for (const connector of this.connectors) {\n            if (this.isWsConnector(connector)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    isWsConnector(connector) {\n        if (!connector)\n            return false;\n        return (connector.getTag() === iconnector_1.OKX_TG_WALLET\n            || connector.getTag() === iconnector_1.OKX_APP_WALLET);\n    }\n    isInjectedConnector(connector) {\n        if (!connector)\n            return false;\n        return connector.getTag() === iconnector_1.OKX_INJECT_WALLET;\n    }\n    universalConnect(request, sessionConfig, connectInfoAndUrl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.addConnectionListener();\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b, _c, _d;\n                try {\n                    (0, utils_1.logDebug)(\"engine universalConnect request :\", JSON.stringify(request));\n                    (0, utils_1.logDebug)(\"engine universalConnect sessionConfig :\", JSON.stringify(sessionConfig));\n                    let universalRequest = [];\n                    request.forEach((item) => {\n                        let name = item.name;\n                        if (name.startsWith(\"requestAccounts\") || name.startsWith(\"ton\")) {\n                            universalRequest.push(item);\n                        }\n                    });\n                    (0, utils_1.logDebug)(\"engine universalConnect universalRequest :\", JSON.stringify(universalRequest));\n                    const connectInfo = this.connectionManager.getConnectInfo();\n                    const requestId = Date.now().toString();\n                    let openUniversalLink = (_a = sessionConfig.openUniversalUrl) !== null && _a !== void 0 ? _a : false;\n                    const universalConnectRequest = {\n                        protocolVer: Number(protocol_1.tonConnectSdkVersion),\n                        topic: connectInfo.channelId,\n                        clientId: connectInfo.clientId,\n                        requestId: requestId,\n                        dAppInfo: sessionConfig.dappInfo,\n                        requests: universalRequest,\n                        redirect: (_b = sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect) !== null && _b !== void 0 ? _b : \"none\"\n                    };\n                    const base64Encoded = (0, utils_1.encodeConnectParams)(universalConnectRequest);\n                    universalConnectRequest.redirect = (_c = sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect) !== null && _c !== void 0 ? _c : \"none\";\n                    (0, utils_1.logDebug)('engine universalConnect ==>>universalConnectRequest:', JSON.stringify(universalConnectRequest));\n                    var openOKXLink = \"\";\n                    // open app wallet\n                    if (openUniversalLink) {\n                        openOKXLink = (0, utils_1.getOKXLink)(universalConnectRequest, sessionConfig.useMini, sessionConfig.tmaReturnUrl);\n                        (0, utils_1.logDebug)('engine universalConnect ==>>openOKXLink:', openOKXLink);\n                    }\n                    const openMethod = () => {\n                        if (this.connectors.length == 1 && this.connectors[0].getTag() === iconnector_1.OKX_INJECT_WALLET) {\n                            return this.connectors[0].openWallet({\n                                connectRequest: universalConnectRequest\n                            });\n                        }\n                        else {\n                            if (sessionConfig.useMini) {\n                                return (0, utils_1.openOKXTMAWalletlinkWithFallback)(openOKXLink);\n                            }\n                            if ((0, utils_1.useShortLink)()) {\n                                return (0, utils_1.openOKXUniversalLink)(openOKXLink);\n                            }\n                            return (0, utils_1.openOKXDeeplinkWithFallback)(openOKXLink);\n                        }\n                    };\n                    (0, utils_1.logDebug)('engine universalConnect ==>>openOKXLink:', openOKXLink);\n                    const isIOS = (0, utils_1.isIos)();\n                    if (isIOS && openUniversalLink) {\n                        (0, utils_1.logDebug)(`engine universalConnect ==>>isIOS: ${isIOS}   openUniversalLink: ${openUniversalLink}`);\n                        openMethod();\n                    }\n                    this.addOnConnectResultListener((response) => {\n                        var _a, _b, _c, _d;\n                        try {\n                            this.addOnConnectResultListener(undefined);\n                            let connectResponse = response;\n                            if (connectResponse.method == \"connect\") {\n                                (0, utils_1.logDebug)(\"engin  universalConnect success connectResponse:>>>\", JSON.stringify(connectResponse));\n                                let namespaces = (0, sessionUtils_1.buildNameSpacesByConnectResponse)(connectResponse);\n                                if (namespaces) {\n                                    let walletName = undefined;\n                                    if (((_b = (_a = connectResponse.payload) === null || _a === void 0 ? void 0 : _a.responses) === null || _b === void 0 ? void 0 : _b[0]) && \"walletName\" in connectResponse.payload.responses[0]) {\n                                        walletName = connectResponse.payload.responses[0]['walletName'];\n                                    }\n                                    let appName = (_c = connectResponse.payload) === null || _c === void 0 ? void 0 : _c.wallet.appName;\n                                    var tag;\n                                    switch (appName) {\n                                        case wallet_info_1.OKXWalletName:\n                                            tag = iconnector_1.OKX_APP_WALLET;\n                                            break;\n                                        case wallet_info_1.OKXMiniWalletName:\n                                            tag = iconnector_1.OKX_TG_WALLET;\n                                            break;\n                                        case wallet_info_1.OKXInjectWalletName:\n                                            tag = iconnector_1.OKX_INJECT_WALLET;\n                                            break;\n                                    }\n                                    var connector = this.connectors.find((connector) => connector.getTag() === tag);\n                                    if (!connector) {\n                                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n                                    }\n                                    let session = Object.assign({ topic: connectInfo.channelId, sessionConfig: sessionConfig, namespaces: namespaces }, (connectResponse.payload && {\n                                        wallet: Object.assign(Object.assign({}, connectResponse.payload.wallet), { walletName: walletName })\n                                    }));\n                                    let methodsResponse = connectResponse.payload.responses.find(item => item.name === 'requestAccounts');\n                                    if (methodsResponse && methodsResponse.connectRequestMethods) {\n                                        session.signResponse = methodsResponse.connectRequestMethods;\n                                    }\n                                    (0, utils_1.logDebug)(\"engin  universalConnect success session:>>>\", JSON.stringify(session));\n                                    if (this.isWsConnector(connector)) {\n                                        (0, utils_1.logDebug)(\"engine update protocol version\");\n                                        this.connectionManager.updateProtocolVersion(connectInfo.channelId, connectResponse.payload.wallet.maxProtocolVersion);\n                                    }\n                                    resolve(session);\n                                    this.setUseConnector(connector);\n                                }\n                                else {\n                                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n                                }\n                            }\n                            else if (connectResponse.method == \"connect_error\" && ((_d = connectResponse.payload) === null || _d === void 0 ? void 0 : _d.code) != undefined) {\n                                throw new protocol_1.OKXConnectError(connectResponse.payload.code);\n                            }\n                        }\n                        catch (e) {\n                            reject(e);\n                        }\n                    });\n                    if (this.hasWsConnector()) {\n                        yield ((_d = this.connectionManager) === null || _d === void 0 ? void 0 : _d.disconnect(false));\n                        try {\n                            yield this.connectionManager.connect();\n                        }\n                        catch (e) {\n                            (0, utils_1.logDebug)('Engine universalConnect error', e);\n                            throw e;\n                        }\n                        (0, utils_1.logDebug)('engin  universalConnect ==>> connectInfoAndUrl:', connectInfoAndUrl);\n                        this.sendSession(base64Encoded);\n                    }\n                    if (!isIOS && openUniversalLink) {\n                        openMethod();\n                    }\n                    (0, utils_1.logDebug)('engin  universalConnect ==>> connectInfoAndUrl:', connectInfoAndUrl);\n                    if (connectInfoAndUrl) {\n                        const info = {\n                            connectRequest: universalConnectRequest,\n                            redirect: sessionConfig.redirect,\n                            tmaReturnUrl: sessionConfig.tmaReturnUrl,\n                        };\n                        (0, utils_1.logDebug)(\"universalConnect connectInfoAndUrl info :\", JSON.stringify(info));\n                        connectInfoAndUrl(info);\n                    }\n                }\n                catch (error) {\n                    (0, utils_1.logDebug)(\"Engine universalConnect catch error\", error);\n                    reject(error);\n                }\n            }));\n        });\n    }\n    addOnConnectResultListener(connectResultListener) {\n        for (const connector of this.connectors) {\n            if (this.isInjectedConnector(connector)) {\n                connector.setOnConnectResultListener(connectResultListener);\n            }\n        }\n        this.connectResultListener = connectResultListener;\n    }\n    openWallet(engineConnectInfo, connector) {\n        var _a;\n        if (connector) {\n            connector.openWallet(engineConnectInfo);\n        }\n        else {\n            (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.openWallet(engineConnectInfo);\n        }\n    }\n    send(request, requestAnswer, ttl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            return (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.send(request, requestAnswer, ttl);\n        });\n    }\n    clearData() {\n        var _a;\n        (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.clearData();\n    }\n    addDisconnectListener(disconnecter) {\n        var _a;\n        (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.addDisconnectListener(disconnecter);\n    }\n    saveSessionContent(key, data) {\n        this.connectionManager.saveSessionContent(key, data);\n    }\n    getSessionContent(key) {\n        var _a;\n        var session = this.connectionManager.getSessionContent(key);\n        if (session) {\n            var tag = \"\";\n            if (typeof session === \"object\") {\n                tag = this.getTagByappName((_a = session.wallet) === null || _a === void 0 ? void 0 : _a.appName);\n            }\n            if (this.connectors.find((connector) => {\n                return connector.getTag() === tag;\n            })) {\n                return session;\n            }\n        }\n        return undefined;\n    }\n    getTagByappName(appName) {\n        var tag = '';\n        if (appName) {\n            switch (appName) {\n                case wallet_info_1.OKXWalletName:\n                    tag = iconnector_1.OKX_APP_WALLET;\n                    break;\n                case wallet_info_1.OKXMiniWalletName:\n                    tag = iconnector_1.OKX_TG_WALLET;\n                    break;\n                case wallet_info_1.OKXInjectWalletName:\n                    tag = iconnector_1.OKX_INJECT_WALLET;\n            }\n        }\n        return tag;\n    }\n    setConnectConnector(wallet) {\n        var tag = this.getTagByappName(wallet === null || wallet === void 0 ? void 0 : wallet.appName);\n        if (!tag)\n            return;\n        this.setUseConnector(this.connectors.find((connector) => {\n            return connector.getTag() === tag;\n        }));\n    }\n    setUseConnector(connector) {\n        this.useConnector = connector;\n        if (this.isWsConnector(connector)) {\n            connector.addConnectionListener();\n        }\n    }\n    // for es connect\n    setSessionConnectingListener(sessionConnectingListener) {\n        this.sessionConnectingListener = sessionConnectingListener;\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.restoreconnect(sessionInfo, onConnectResult));\n        });\n    }\n    restoreconnectFromTopic(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.isWsConnector(this.getConnector())) {\n                yield this.getConnector().restoreconnectFromTopic(topic);\n            }\n        });\n    }\n    getCurrentConnectionReady(namespaceKeys) {\n        var _a;\n        return !!((_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.getCurrentConnectionReady(namespaceKeys));\n    }\n    connectManagerDisconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            var _a;\n            yield ((_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.connectManagerDisconnect(fromRestore));\n        });\n    }\n    sendSession(sessionInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, utils_1.logDebug)('[Connect] sendSession called:', sessionInfo);\n            const requestId = Date.now().toString();\n            let request = {\n                method: 'session_info',\n                params: { protocolVersion: constants_1.CONNECT_PROTOCOL_VER, sessionInfo: sessionInfo }\n            };\n            yield this.connectionManager.sendRaw(JSON.stringify(Object.assign(Object.assign({}, request), { requestId: requestId })));\n        });\n    }\n    addConnectionListener() {\n        var _a;\n        (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.addListener(\"sdk_response\", (event, msg) => {\n            var jsonResponse = (0, utils_1.safeJsonParse)(msg);\n            (0, utils_1.logDebug)(`Engine ==>> addListener ==> success ==> ${jsonResponse}`);\n            if (jsonResponse.method === 'connect' || jsonResponse.method === 'connect_error') {\n                if (this.connectResultListener) {\n                    this.connectResultListener(jsonResponse);\n                }\n            }\n            else if (jsonResponse.method === \"session_connecting\") {\n                (0, utils_1.logDebug)(\"Engine ==>> handleResponse_4  ===> sessionConnectingListener\");\n                if (this.sessionConnectingListener) {\n                    (0, utils_1.logDebug)(\"Engine ==>> handleResponse_4  ===> sessionConnectingListener not null\");\n                    this.sessionConnectingListener();\n                    this.sessionConnectingListener = undefined;\n                }\n            }\n        }, function () {\n        });\n    }\n}\nexports.Engine = Engine;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Storage = exports.Engine = exports.WalletConnectionManager = exports.ConnectionManager = exports.OKXWalletConnector = void 0;\nvar connect_1 = require(\"./connect\");\nObject.defineProperty(exports, \"OKXWalletConnector\", { enumerable: true, get: function () { return connect_1.OKXWalletConnector; } });\nvar connectionManager_1 = require(\"./connectionManager\");\nObject.defineProperty(exports, \"ConnectionManager\", { enumerable: true, get: function () { return connectionManager_1.ConnectionManager; } });\nvar walletConnectionManager_1 = require(\"./walletConnectionManager\");\nObject.defineProperty(exports, \"WalletConnectionManager\", { enumerable: true, get: function () { return walletConnectionManager_1.WalletConnectionManager; } });\nvar engine_1 = require(\"./engine\");\nObject.defineProperty(exports, \"Engine\", { enumerable: true, get: function () { return engine_1.Engine; } });\nvar storage_1 = require(\"./storage\");\nObject.defineProperty(exports, \"Storage\", { enumerable: true, get: function () { return storage_1.Storage; } });\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MULTICODEC_ED25519_LENGTH = exports.MULTICODEC_ED25519_HEADER = exports.MULTICODEC_ED25519_BASE = exports.MULTICODEC_ED25519_ENCODING = exports.DID_METHOD = exports.DID_PREFIX = exports.DID_DELIMITER = exports.KEY_PAIR_SEED_LENGTH = exports.DATA_ENCODING = exports.JSON_ENCODING = exports.JWT_ENCODING = exports.JWT_DELIMITER = exports.JWT_IRIDIUM_TYP = exports.JWT_IRIDIUM_ALG = exports.JWTHeaderType = void 0;\nexports.generateKeyPair = generateKeyPair;\nexports.decodeJSON = decodeJSON;\nexports.encodeJSON = encodeJSON;\nexports.encodeIss = encodeIss;\nexports.decodeIss = decodeIss;\nexports.encodeSig = encodeSig;\nexports.decodeSig = decodeSig;\nexports.encodeData = encodeData;\nexports.decodeData = decodeData;\nexports.encodeJWT = encodeJWT;\nexports.decodeJWT = decodeJWT;\nexports.signJWT = signJWT;\nexports.verifyJWT = verifyJWT;\nconst ed25519 = __importStar(require(\"@stablelib/ed25519\"));\nconst safejson_1 = require(\"../utils/safejson\");\nconst utils_1 = require(\"../utils/utils\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst log = __importStar(require(\"../utils/log\"));\nconst stringUtils_1 = require(\"../utils/stringUtils\");\nexports.JWTHeaderType = \"dapp\";\nexports.JWT_IRIDIUM_ALG = \"EdDSA\";\nexports.JWT_IRIDIUM_TYP = \"JWT\";\nexports.JWT_DELIMITER = \".\";\nexports.JWT_ENCODING = \"base64url\";\nexports.JSON_ENCODING = \"utf8\";\nexports.DATA_ENCODING = \"utf8\";\nexports.KEY_PAIR_SEED_LENGTH = 32;\nexports.DID_DELIMITER = \":\";\nexports.DID_PREFIX = \"did\";\nexports.DID_METHOD = \"key\";\nexports.MULTICODEC_ED25519_ENCODING = \"base58btc\";\nexports.MULTICODEC_ED25519_BASE = \"z\";\nexports.MULTICODEC_ED25519_HEADER = \"K36\";\nexports.MULTICODEC_ED25519_LENGTH = 32;\nfunction generateKeyPair() {\n    // let local_seed = randomBytes(KEY_PAIR_SEED_LENGTH)\n    // return ed25519.generateKeyPairFromSeed(local_seed);\n    return tweetnacl_1.default.sign.keyPair();\n}\nfunction decodeJSON(str) {\n    return (0, safejson_1.safeJsonParse)((0, stringUtils_1.okxtoString)((0, stringUtils_1.okxfromString)(str, exports.JWT_ENCODING), exports.JSON_ENCODING));\n}\nfunction encodeJSON(val) {\n    return (0, stringUtils_1.okxtoString)((0, stringUtils_1.okxfromString)((0, safejson_1.safeJsonStringify)(val), exports.JSON_ENCODING), exports.JWT_ENCODING);\n}\nfunction encodeIss(publicKey) {\n    log.logDebug(`publicKey: ${(0, utils_1.toHexString)(publicKey)}`);\n    var publicKeyStr = (0, stringUtils_1.okxtoString)(publicKey, exports.MULTICODEC_ED25519_ENCODING);\n    return [exports.DID_PREFIX, exports.DID_METHOD, publicKeyStr].join(exports.DID_DELIMITER);\n}\nfunction decodeIss(issuer) {\n    const [prefix, method, multicodec] = issuer.split(exports.DID_DELIMITER);\n    if (prefix !== exports.DID_PREFIX || method !== exports.DID_METHOD) {\n        throw new Error(`Issuer must be a DID with method \"key\"`);\n    }\n    if (multicodec === undefined) {\n        throw new Error('multicodec is undefined');\n    }\n    const publicKey = (0, stringUtils_1.okxfromString)(multicodec, exports.MULTICODEC_ED25519_ENCODING);\n    if (publicKey === undefined || publicKey.length !== exports.MULTICODEC_ED25519_LENGTH) {\n        throw new Error(`Issuer must be a public key with length 32 bytes`);\n    }\n    return publicKey;\n}\n// ---------- Signature ----------------------------------------------- //\nfunction encodeSig(bytes) {\n    return (0, stringUtils_1.okxtoString)(bytes, exports.JWT_ENCODING);\n}\nfunction decodeSig(encoded) {\n    return (0, stringUtils_1.okxfromString)(encoded, exports.JWT_ENCODING);\n}\n// ---------- Data ----------------------------------------------- //\nfunction encodeData(params) {\n    return (0, stringUtils_1.okxfromString)([encodeJSON(params.header), encodeJSON(params.payload)].join(exports.JWT_DELIMITER), exports.DATA_ENCODING);\n}\nfunction decodeData(data) {\n    var _a, _b;\n    const params = (0, stringUtils_1.okxtoString)(data, exports.DATA_ENCODING).split(exports.JWT_DELIMITER);\n    const header = decodeJSON((_a = params[0]) !== null && _a !== void 0 ? _a : '{}');\n    const payload = decodeJSON((_b = params[1]) !== null && _b !== void 0 ? _b : '{}');\n    return { header, payload };\n}\n// ---------- JWT ----------------------------------------------- //\nfunction encodeJWT(params) {\n    return [encodeJSON(params.header), encodeJSON(params.payload), encodeSig(params.signature)].join(exports.JWT_DELIMITER);\n}\nfunction decodeJWT(jwt) {\n    var _a, _b, _c;\n    const params = jwt.split(exports.JWT_DELIMITER);\n    const header = decodeJSON((_a = params[0]) !== null && _a !== void 0 ? _a : '{}');\n    const payload = decodeJSON((_b = params[1]) !== null && _b !== void 0 ? _b : '{}');\n    const signature = decodeSig((_c = params[2]) !== null && _c !== void 0 ? _c : '{}');\n    const data = (0, stringUtils_1.okxfromString)(params.slice(0, 2).join(exports.JWT_DELIMITER), exports.DATA_ENCODING);\n    return { header, payload, signature, data };\n}\nfunction signJWT(sub_1, aud_1, ttl_1, keyPair_1) {\n    return __awaiter(this, arguments, void 0, function* (sub, aud, ttl, keyPair, iat = Math.floor(Date.now())) {\n        const header = { alg: exports.JWT_IRIDIUM_ALG, typ: exports.JWT_IRIDIUM_TYP };\n        const iss = encodeIss(keyPair.publicKey);\n        const exp = iat + ttl;\n        const act = \"authenticate user\";\n        const payload = { iss, sub, aud, act, iat, exp };\n        const data = encodeData({ header, payload });\n        // const signature = ed25519.sign(keyPair.secretKey, data);\n        log.logDebug(`get sec kp: ${keyPair.secretKey} {${keyPair.secretKey.length}}`);\n        const signature = tweetnacl_1.default.sign.detached(data, keyPair.secretKey);\n        return encodeJWT({ header, payload, signature });\n    });\n}\nfunction verifyJWT(jwt) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { header, payload, data, signature } = decodeJWT(jwt);\n        if (header.alg !== exports.JWT_IRIDIUM_ALG || header.typ !== exports.JWT_IRIDIUM_TYP) {\n            throw new Error(\"JWT must use EdDSA algorithm\");\n        }\n        const publicKey = decodeIss(payload.iss);\n        return ed25519.verify(publicKey, data, signature);\n    });\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCONNECTOR_JWT_TTL = exports.OKXCONNECTOR_JWT_WALLET_SIDE = exports.OKXCONNECTOR_JWT_SIDE = void 0;\nexports.OKXCONNECTOR_JWT_SIDE = \"wallet\";\nexports.OKXCONNECTOR_JWT_WALLET_SIDE = \"dapp\";\nexports.OKXCONNECTOR_JWT_TTL = 86400000;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.buildNameSpacesByConnectResponse = buildNameSpacesByConnectResponse;\nexports.buildRequestAccountNameSpacesByConnectResponse = buildRequestAccountNameSpacesByConnectResponse;\nexports.buildAccountNameSpaces = buildAccountNameSpaces;\nconst log_1 = require(\"../utils/log\");\nfunction buildNameSpacesByConnectResponse(connectResponse) {\n    let requestAccountNameSpaces = buildRequestAccountNameSpacesByConnectResponse(connectResponse);\n    return requestAccountNameSpaces;\n}\nfunction buildRequestAccountNameSpacesByConnectResponse(connectResponse) {\n    let result = {};\n    (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start connectResponse111>>', JSON.stringify(connectResponse));\n    let universalResponse = connectResponse.payload.responses.find(item => item.name === 'requestAccounts');\n    if (universalResponse && universalResponse.accounts) {\n        let filterAccount = [];\n        for (const item of universalResponse.accounts) {\n            if (item.namespace === \"ton\") {\n                if (item.data && item.data.ton_addr) {\n                    if (item.data.ton_addr.address && item.data.ton_addr.address.length > 0) {\n                        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start TON>>', JSON.stringify(item));\n                        filterAccount.push(item);\n                    }\n                }\n            }\n            else {\n                (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start other>>', JSON.stringify(item));\n                filterAccount.push(item);\n            }\n        }\n        universalResponse.accounts = filterAccount;\n    }\n    const tonAddress = connectResponse.payload.responses.find(item => item.name === 'ton_addr');\n    const tonProof = connectResponse.payload.responses.find(item => item.name === 'ton_proof');\n    if (tonAddress && !universalResponse) { //adapt tonsdk\n        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse adapt ton data >>');\n        let address = tonAddress.address;\n        address = 'ton:' + tonAddress.network + \":\" + address;\n        let data = {\n            ton_addr: tonAddress\n        };\n        if (tonProof) {\n            data.ton_proof = tonProof;\n        }\n        universalResponse = {\n            name: \"requestAccounts\",\n            accounts: [{\n                    namespace: 'ton',\n                    addresses: [address],\n                    methods: ['ton_sendTransaction'],\n                    extra: {},\n                    data: data,\n                }]\n        };\n    }\n    (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse end universalResponse>>>', JSON.stringify(universalResponse));\n    buildAccountNameSpaces(universalResponse.accounts, result);\n    return result;\n}\nfunction buildAccountNameSpaces(accounts, result) {\n    accounts.forEach(item => {\n        var chains = [];\n        var accounts = [];\n        item.addresses.forEach(addressItem => {\n            var addressArr = addressItem.split(\":\");\n            (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse addressArr>>', addressArr.length);\n            if (addressArr.length >= 3) {\n                let chain = addressArr.slice(0, 2).join(\":\");\n                chains.push(chain);\n                accounts.push(addressItem);\n                (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse chain:>>', chain, \"addressItem:\", addressItem);\n            }\n        });\n        if (item.data && item.data.ton_addr) {\n            item.data.ton_addr.name = 'ton_addr';\n        }\n        if (item.data && item.data.ton_proof) {\n            item.data.ton_proof.name = 'ton_proof';\n        }\n        result[item.namespace] = {\n            chains: chains,\n            accounts: accounts,\n            methods: item.methods,\n            extra: item.extra,\n            payload: item.data\n        };\n        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse result>>', JSON.stringify(result));\n    });\n}\n/*export function buildTonNameSpaceByConnectResponse(connectResponse: ConnectResponseSuccess): Namespaces | undefined {\n    const tonAddrItem: TonAddressItemReply = connectResponse.payload.responses.find(\n        item => item.name === 'ton_addr'\n    ) as TonAddressItemReply;\n\n    const tonProfItem: TonProofItemReply = connectResponse.payload.responses.find(\n        item => item.name === 'ton_proof'\n    ) as TonProofItemReply;\n\n    if (!tonAddrItem) {\n        return undefined\n    }\n\n    return {\n        NameSpaceKeyTON: {\n            chains: [tonAddrItem.network],\n            accounts: [],\n            methods: connectResponse.payload.wallet.features?.ton,\n            payload: {\n                tonAccount: {\n                    address: tonAddrItem.address,\n                    chain: tonAddrItem.network,\n                    walletStateInit: tonAddrItem.walletStateInit,\n                    publicKey: tonAddrItem.publicKey\n                },\n                tonProof: tonProfItem\n            }\n        }\n    }\n}*/\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Storage = void 0;\nconst storageconstants_1 = require(\"./storageconstants\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst utils_1 = require(\"../utils/utils\");\nconst utils_2 = require(\"../utils\");\nconst log = __importStar(require(\"../utils/log\"));\nconst utils_3 = require(\"../utils\");\nconst crypto_js_1 = require(\"crypto-js\");\nclass Storage {\n    constructor(subKey, beforeKey = undefined) {\n        const localStorage = (0, utils_1.resolveLocalStorage)();\n        // 0. check and upgrade beforeKey\n        log.logDebug('------ update before cache ------');\n        if (beforeKey) {\n            this.checkAndUpgradeCache(beforeKey, subKey);\n        }\n        // 1. load data from local storage\n        this.storeKey = '';\n        this.cipherIV = '';\n        this.subKey = subKey;\n        log.logDebug('--------get current local storage --------');\n        log.logDebug(localStorage);\n        const cacheStr = localStorage.getItem(Storage.cacheKey + subKey);\n        if (typeof cacheStr === \"undefined\" || cacheStr === null) {\n            log.logDebug(\"with no cache\");\n            this.cache = {};\n            return;\n        }\n        log.logDebug(cacheStr);\n        if ((cacheStr === null || cacheStr === void 0 ? void 0 : cacheStr.length) > 0) {\n            var cacheObj = (0, utils_2.safeJsonParse)(cacheStr);\n            this.cache = cacheObj;\n        }\n        log.logDebug(`get cache obj: ${this.cache}`);\n        if (typeof this.cache === 'undefined' || this.cache == null) {\n            this.cache = {};\n        }\n    }\n    checkAndUpgradeCache(fromCacheKey, toCacheKey) {\n        if (fromCacheKey && fromCacheKey.length > 0 && toCacheKey && toCacheKey.length > 0) {\n            // 1. get all infos from from-cache-key\n            log.logDebug('--------get current local storage --------');\n            log.logDebug(localStorage);\n            const cacheStr = localStorage.getItem(Storage.cacheKey + fromCacheKey);\n            if (typeof cacheStr === \"undefined\" || cacheStr === null) {\n                log.logDebug(\"no pre cache content\");\n                return;\n            }\n            log.logDebug(cacheStr);\n            if ((cacheStr === null || cacheStr === void 0 ? void 0 : cacheStr.length) > 0) {\n                // 2. save to to-cache-key\n                log.logDebug(\"write in cache content: \", fromCacheKey, '->', toCacheKey);\n                localStorage.setItem(Storage.cacheKey + toCacheKey, cacheStr);\n                // 3. clean from item\n                log.logDebug(\"clean in cache content: \", fromCacheKey);\n                localStorage.removeItem(Storage.cacheKey + fromCacheKey);\n            }\n        }\n        else {\n            log.logDebug('no pre cache key:', fromCacheKey);\n        }\n    }\n    saveContent(content, key, id = '-') {\n        let item = {\n            id: id,\n            timestamp: Date.now().toString(),\n            content: content\n        };\n        this.saveItem(item, key);\n    }\n    saveItem(item, key) {\n        let localKey = Storage.cacheKey + this.subKey;\n        const localStorage = (0, utils_1.resolveLocalStorage)();\n        log.logDebug(this.cache);\n        log.logDebug(`get cache obj: ${this.cache}, ${key}, ${item}`);\n        this.cache[key] = item;\n        let totalCacheStr = (0, utils_2.safeJsonStringify)(this.cache);\n        log.logDebug(`STORAGE: ${key} @ ${this.cache}`);\n        localStorage.setItem(localKey, totalCacheStr);\n    }\n    getItem(key) {\n        log.logDebug(`STORAGE >> getItem: ${key} @ ${this.cache}`);\n        return this.cache[key];\n    }\n    getCachedPBKDF2InfoKey() {\n        var _a, _b, _c, _d;\n        const pwLen = 32;\n        const saltLen = 24;\n        if (this.storeKey.length > 0 && ((_a = this.cipherIV) === null || _a === void 0 ? void 0 : _a.length) > 0) {\n            return {\n                pw: this.storeKey,\n                iv: this.cipherIV\n            };\n        }\n        let salt = (_b = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGER_CRYPTO_SALT)) === null || _b === void 0 ? void 0 : _b.content;\n        if (!salt) {\n            salt = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(saltLen));\n            this.saveContent(salt, storageconstants_1.OKXCONNECTOR_STORAGER_CRYPTO_SALT);\n        }\n        let pw = (_c = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD)) === null || _c === void 0 ? void 0 : _c.content;\n        if (!pw) {\n            pw = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(pwLen));\n            this.saveContent(pw, storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD);\n        }\n        let cipherIV = (_d = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV)) === null || _d === void 0 ? void 0 : _d.content;\n        if (!cipherIV) {\n            // let ivBuffer = Buffer.from(nacl.randomBytes(16))\n            let ivBuffer = tweetnacl_1.default.randomBytes(16);\n            cipherIV = (0, utils_1.toHexString)(ivBuffer);\n            this.saveContent(cipherIV, storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV);\n        }\n        this.cipherIV = cipherIV;\n        this.storeKey = (0, crypto_js_1.PBKDF2)(pw, salt, { iterations: 10 }).toString();\n        return {\n            pw: this.storeKey,\n            iv: this.cipherIV\n        };\n    }\n    encryptStoreMsg(msg, key) {\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg start ${Date.now()}`);\n        let storeInfo = this.getCachedPBKDF2InfoKey();\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg mid ${Date.now()}`);\n        var result = crypto_js_1.AES.encrypt(msg, storeInfo.pw).toString();\n        this.saveContent(result, key);\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg end ${Date.now()}`);\n    }\n    getAndDecrypt(key) {\n        (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt start ${Date.now()}`);\n        let item = this.getItem(key);\n        if (item && item.content) {\n            let storeInfo = this.getCachedPBKDF2InfoKey();\n            (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt mid ${Date.now()}`);\n            let result = crypto_js_1.AES.decrypt(item.content, storeInfo.pw).toString(crypto_js_1.enc.Utf8);\n            (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt end ${Date.now()}`);\n            return result;\n        }\n        return null;\n    }\n    clearCache(key = undefined) {\n        if (key === undefined) {\n            // clean all\n            this.cache = {};\n            let localKey = Storage.cacheKey + this.subKey;\n            localStorage.setItem(localKey, '');\n        }\n        else {\n            let localKey = Storage.cacheKey + this.subKey;\n            const localStorage = (0, utils_1.resolveLocalStorage)();\n            log.logDebug(this.cache);\n            this.cache[key] = null;\n            let totalCacheStr = (0, utils_2.safeJsonStringify)(this.cache);\n            log.logDebug(`STORAGE: clean key ${key} @ ${this.cache}`);\n            localStorage.setItem(localKey, totalCacheStr);\n        }\n    }\n}\nexports.Storage = Storage;\nStorage.cacheKey = 'OKXStorageKey';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCONNECTOR_STORAGE_PROTOCOL_CACHE = exports.OKXCONNECTOR_STORAGE_CIPHER_METHOD = exports.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV = exports.OKXCONNECTOR_STORAGER_CRYPTO_SALT = exports.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD = exports.OKXCONNECTOR_TON_KEY = exports.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE = exports.OKXCONNECTOR_TOKEN_CACHE = exports.OKXCONNECTOR_JWT_KEY = exports.OKXCONNECTOR_SESSION_PREFIX_KEY = exports.OKXCONNECTOR_CRYPTO_KEY = exports.OKXCONNECTOR_CACHE_KEY_DAPP = exports.OKXCONNECTOR_CACHE_KEY = void 0;\nexports.OKXCONNECTOR_CACHE_KEY = \"ck\";\nexports.OKXCONNECTOR_CACHE_KEY_DAPP = \"ck_dapp\";\nexports.OKXCONNECTOR_CRYPTO_KEY = \"cck_k\";\nexports.OKXCONNECTOR_SESSION_PREFIX_KEY = \"cspk_\";\nexports.OKXCONNECTOR_JWT_KEY = \"cjk_k\";\nexports.OKXCONNECTOR_TOKEN_CACHE = \"ct\";\nexports.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE = \"csp\";\nexports.OKXCONNECTOR_TON_KEY = \"OKXStorage_ctc\";\nexports.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD = \"scp\";\nexports.OKXCONNECTOR_STORAGER_CRYPTO_SALT = \"scs\";\nexports.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV = \"scpc\";\nexports.OKXCONNECTOR_STORAGE_CIPHER_METHOD = \"aes-256-cbc\";\nexports.OKXCONNECTOR_STORAGE_PROTOCOL_CACHE = 'okx_connect_split_cache_key';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletConnectionManagerEvent = exports.WalletConnectionManagerTopicInfoCacheKey = void 0;\nexports.WalletConnectionManagerTopicInfoCacheKey = \"wcmtic\";\nexports.WalletConnectionManagerEvent = {\n    RECEIVE_REQUEST: \"payload\"\n};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletConnectionManager = void 0;\nconst connect_1 = require(\"./connect\");\nconst commands_1 = require(\"./commands\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst jwtconstants_1 = require(\"./jwtconstants\");\nconst constants_1 = require(\"./constants\");\nconst walletConnectionConstants_1 = require(\"./walletConnectionConstants\");\nconst connectionSplitPackages_1 = require(\"./connectionSplitPackages\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils/utils\");\nconst crypto_1 = require(\"../crypto/crypto\");\nconst jwt_1 = require(\"./jwt\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst utils_2 = require(\"../utils\");\nclass WalletConnectionManager {\n    constructor() {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.communicateEvents = new eventemitter3_1.EventEmitter();\n        this.splitManager = new connectionSplitPackages_1.ConnectionSplitPackages('wallet');\n        log.logDebug('connect manager construct');\n        // local storage\n        this.connectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n        this.jwtKeyPair = this.getCachedJWTKeyPair();\n        this.saveJWTKeyPair(this.jwtKeyPair);\n        // wss connection\n        this.connector = new connect_1.OKXWalletConnector(constants_1.OKXCONNECTOR_WS_URL_1);\n        this.packageId = Date.now();\n        // connection state\n        this.sessionCryptoInfoMap = new Map();\n        // log.logDebug(`this.connectedWalletPK  constructor   ${this.connectedWalletPK}`)\n        this.inLogin = false;\n        this.isLogined = false;\n    }\n    refreshPackageId(offset = 0) {\n        let nowDate = Date.now() + offset;\n        if (nowDate == this.packageId) {\n            this.packageId = nowDate + 1;\n        }\n        this.packageId = nowDate;\n    }\n    saveCryptoKeyPair(topicId, keyPair) {\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(keyPair);\n        // encrypt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_CRYPTO_KEY + topicId);\n    }\n    getCachedCryptoKeyPair(topicId) {\n        // decrypt kp\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_CRYPTO_KEY + topicId);\n        const content = kp;\n        if (typeof content == 'string') {\n            log.logDebug('get cached crypto key:');\n            log.logDebug(content);\n            let keyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            return keyPairInfo;\n        }\n        else {\n            this.connectStorage.clearCache();\n        }\n        return null;\n    }\n    saveJWTKeyPair(keyPair) {\n        var strkeyPair = {\n            publicKey: (0, utils_1.toHexString)(keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(keyPair.secretKey)\n        };\n        log.logDebug('save jwt kp');\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(strkeyPair);\n        log.logDebug(cacheInfo);\n        // encrypt jwt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        log.logDebug('after save jwt kp');\n    }\n    getCachedJWTKeyPair() {\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            // TODO: decrypt jwt kp\n            log.logDebug('get cached jwt kp:');\n            log.logDebug(content);\n            let strKeyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            log.logDebug('save jwt kp');\n            log.logDebug(strKeyPairInfo);\n            var keyPair = {\n                publicKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.publicKey),\n                secretKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.secretKey)\n            };\n            return keyPair;\n        }\n        else {\n            return (0, jwt_1.generateKeyPair)();\n        }\n    }\n    isTopicPublicKeyExist(topicId) {\n        log.logDebug(`isTopicPublicKeyExist  ===> ${topicId}`);\n        return this.sessionCryptoInfoMap.get(topicId);\n    }\n    makeJWT(timestampStr) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, jwt_1.signJWT)(timestampStr, jwtconstants_1.OKXCONNECTOR_JWT_WALLET_SIDE, jwtconstants_1.OKXCONNECTOR_JWT_TTL, // 24h\n            this.jwtKeyPair);\n        });\n    }\n    parseInternalMsg(internalMsg) {\n        try {\n            let internalObj = (0, safejson_1.safeJsonParse)(internalMsg);\n            let origin = internalObj['ivur-igbfft-ptjip'];\n            if (origin && origin.length > 0) {\n                let originContent = (0, utils_2.base64decode)(origin, true);\n                return originContent.toString();\n            }\n        }\n        catch (error) {\n            log.logError('parse internal msg', error);\n        }\n    }\n    updateClientId(topic, clientId) {\n        let sessionInfo = this.sessionCryptoInfoMap.get(topic);\n        (0, log_1.logDebug)('updateClientId', sessionInfo, topic, clientId);\n        if (sessionInfo && clientId && clientId.length > 0) {\n            if (sessionInfo.cid) {\n                // check\n                let lastCheck = (0, utils_1.getLastSixMd5Hash)(clientId);\n                if (sessionInfo.cid == lastCheck) {\n                    sessionInfo.dappPublicKey = clientId;\n                }\n                else {\n                    log.logError('cid check failed', sessionInfo, topic, clientId);\n                }\n            }\n            else {\n                sessionInfo.dappPublicKey = clientId;\n            }\n            // \n            this.syncCacheSessionInfo();\n        }\n        return false;\n    }\n    parsePackage(topic_1, input_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, input, ignoreACK = false) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s;\n            this.events.emit(input.id, input);\n            // emit event\n            let sessionInfo = this.sessionCryptoInfoMap.get(topic);\n            log.logDebug('get sessionInfo for decrypt topic:', topic);\n            log.logDebug('get sessionInfo for decrypt:', input.id, topic, sessionInfo, this.sessionCryptoInfoMap);\n            let ignoreReceive = false;\n            if (sessionInfo && input.params.data) {\n                if ((_a = input.params.data) === null || _a === void 0 ? void 0 : _a.message) {\n                    // try parse internal message\n                    if ((_b = input.params.data) === null || _b === void 0 ? void 0 : _b.isInternalData) {\n                        let inner_message = (_c = input.params.data) === null || _c === void 0 ? void 0 : _c.message;\n                        let inner_topic = (_d = input.params.data) === null || _d === void 0 ? void 0 : _d.topic;\n                        let originContent = this.parseInternalMsg(inner_message);\n                        (0, log_1.logDebug)('parse internal origin: ', originContent);\n                        if (originContent && originContent.length > 0) {\n                            this.communicateEvents.emit(\"origin\", originContent, inner_topic);\n                        }\n                    }\n                    else {\n                        // try parse message base64\n                        try {\n                            let message = (_e = input.params.data) === null || _e === void 0 ? void 0 : _e.message;\n                            if (message.trimStart().startsWith('{')) {\n                                // 判断是否是分包数据\n                                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(message);\n                                if (msgPlayloadObject) {\n                                    (0, log_1.logDebug)('parse split msg object: ', msgPlayloadObject);\n                                    // 屏蔽后续的receive逻辑\n                                    ignoreReceive = true;\n                                    let msgObject = {\n                                        topicId: (_g = (_f = input.params) === null || _f === void 0 ? void 0 : _f.data) === null || _g === void 0 ? void 0 : _g.topic,\n                                        messageId: (_j = (_h = input.params) === null || _h === void 0 ? void 0 : _h.data) === null || _j === void 0 ? void 0 : _j.messageId,\n                                        messageObject: msgPlayloadObject,\n                                        publishedAt: (_l = (_k = input.params) === null || _k === void 0 ? void 0 : _k.data) === null || _l === void 0 ? void 0 : _l.publishedAt,\n                                    };\n                                    let checkResult = yield this.splitManager.onReceivedPackageCheck(msgObject);\n                                    if (checkResult.completeMessageIdList) {\n                                        checkResult.completeMessageIdList.forEach((msgId) => __awaiter(this, void 0, void 0, function* () {\n                                            // 发送批量receive\n                                            this.refreshPackageId();\n                                            yield this.sendReceive(this.packageId.toString(), msgId, topic);\n                                        }));\n                                    }\n                                    // 抛出finalmessage\n                                    if (checkResult.finalMessage) {\n                                        let message = sessionInfo.crypto.decryptWallet(checkResult.finalMessage, sessionInfo.dappPublicKey);\n                                        (0, log_1.logDebug)('<<< receive msg from split:', topic, message);\n                                        this.communicateEvents.emit(topic, message);\n                                    }\n                                }\n                                else {\n                                    let messageObj = (0, safejson_1.safeJsonParse)(message);\n                                    if (messageObj.method) {\n                                        if (messageObj.method == 'session_info') {\n                                            let sessionInfoString = messageObj.params.sessionInfo;\n                                            let base64Content = (0, utils_2.base64decode)(sessionInfoString, false);\n                                            (0, log_1.logDebug)(\"wallet connection manager requset base64Content:\", base64Content);\n                                            (0, log_1.logDebug)(\"base64Content:\" + base64Content);\n                                            let inner_connection = base64Content.toObject();\n                                            this.updateClientId(topic, inner_connection.clientId);\n                                        }\n                                        (0, log_1.logDebug)('<<< parse raw msg:', topic, messageObj);\n                                        this.communicateEvents.emit(topic, message);\n                                    }\n                                }\n                            }\n                            else {\n                                let message = sessionInfo.crypto.decryptWallet((_m = input.params.data) === null || _m === void 0 ? void 0 : _m.message, sessionInfo.dappPublicKey);\n                                (0, log_1.logDebug)('<<< receive msg:', topic, message);\n                                this.communicateEvents.emit(topic, message);\n                            }\n                        }\n                        catch (error) {\n                            let message = sessionInfo.crypto.decryptWallet((_o = input.params.data) === null || _o === void 0 ? void 0 : _o.message, sessionInfo.dappPublicKey);\n                            (0, log_1.logDebug)('<<< receive msg:', topic, message);\n                            this.communicateEvents.emit(topic, message);\n                        }\n                    }\n                }\n                else {\n                }\n            }\n            // send back ACK\n            if (!ignoreACK) {\n                yield this.sendACK(input.id, true);\n                if (topic && !ignoreReceive) {\n                    let inputObj = input;\n                    if ((_q = (_p = inputObj.params) === null || _p === void 0 ? void 0 : _p.data) === null || _q === void 0 ? void 0 : _q.messageId) {\n                        this.refreshPackageId();\n                        yield this.sendReceive(this.packageId.toString(), (_s = (_r = inputObj.params) === null || _r === void 0 ? void 0 : _r.data) === null || _s === void 0 ? void 0 : _s.messageId, topic);\n                    }\n                }\n            }\n        });\n    }\n    recovrySessionInfoFromCache() {\n        // get topic ids and keys from session\n        // WalletConnectionCryptoCacheMap\n        // {[topicId]: {cryptoKeypair: {publicKey:string, secretKey:string}, dappPublicKey:clientId}}\n        let jsonStr = this.connectStorage.getAndDecrypt(walletConnectionConstants_1.WalletConnectionManagerTopicInfoCacheKey);\n        log.logDebug('get cached sessionInfos:', jsonStr);\n        if (jsonStr) {\n            let cacheMap = (0, safejson_1.safeJsonParse)(jsonStr);\n            for (let topicId in cacheMap) {\n                let topicItem = cacheMap[topicId];\n                log.logDebug('make topicItem:', topicItem);\n                let cryptoItem = {\n                    topic: topicId,\n                    crypto: new crypto_1.SessionCrypto({\n                        publicKey: topicItem.cryptoKeyPair.publicKey,\n                        secretKey: topicItem.cryptoKeyPair.secretKey\n                    }),\n                    dappPublicKey: topicItem.dappPublicKey,\n                    cid: topicItem.cid\n                };\n                this.sessionCryptoInfoMap.set(topicId, cryptoItem);\n            }\n        }\n        log.logDebug('get cached sessionInfos map:', this.sessionCryptoInfoMap);\n    }\n    syncCacheSessionInfo() {\n        let cacheMap = {};\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            log.logDebug('for each Keys', topicId);\n            if (cryptoItem) {\n                cacheMap[topicId] = {\n                    cryptoKeyPair: cryptoItem.crypto.stringifyKeypair(),\n                    dappPublicKey: cryptoItem.dappPublicKey,\n                    cid: cryptoItem.cid\n                };\n            }\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(cacheMap);\n        log.logDebug('sync cache sessionInfos:', jsonData);\n        this.connectStorage.encryptStoreMsg(jsonData, walletConnectionConstants_1.WalletConnectionManagerTopicInfoCacheKey);\n    }\n    cacheSessionInfo(topic, sessionInfo, sync = true) {\n        let dappPublicKey = sessionInfo.dappPublicKey;\n        // 1. search dapp public related topic ids\n        let duplicatedTopics = [];\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            log.logDebug('for each Keys', topicId);\n            if (cryptoItem.dappPublicKey == dappPublicKey) {\n                log.logDebug('duplicated dapp public key:', topicId, dappPublicKey);\n                duplicatedTopics.push(topicId);\n            }\n        }\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            if (duplicatedTopics.includes(topicId)) {\n                this.sessionCryptoInfoMap.delete(topicId);\n            }\n        }\n        // discard useless topics\n        log.logDebug('cleaned connect session cache:', this.sessionCryptoInfoMap);\n        // 2. remove previous connected topic ids\n        // 3. write in current topic\n        this.sessionCryptoInfoMap.set(topic, sessionInfo);\n        // TODO: search domain info and then delete \n        log.logDebug('cache sessionInfo:', topic, sessionInfo, this.sessionCryptoInfoMap);\n        if (sync) {\n            this.syncCacheSessionInfo();\n        }\n        return duplicatedTopics;\n    }\n    updateProtocolVersion(topic, protocolVersion) {\n        this.splitManager.updateTopicSenderVersion(topic, protocolVersion);\n    }\n    // add and subscribe topic\n    appendTopic(topic, sessionPublicKey, cid) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('4.1. get append Topic:', topic);\n            // 1. check if connected\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                if (!this.isLogined) {\n                    var error = new Error();\n                    error.message = \"connection is not logined\";\n                    error.name = \"append error\";\n                    // throw error\n                    reject(error);\n                    return;\n                }\n                // 2. subscribe topic and session public key\n                let cryptoItem = {\n                    topic: topic,\n                    crypto: new crypto_1.SessionCrypto(),\n                    dappPublicKey: sessionPublicKey ? sessionPublicKey : \"\",\n                    cid: cid\n                };\n                let duplicatedTopics = this.cacheSessionInfo(topic, cryptoItem, false);\n                // make sure cache session info before subscribe\n                yield this.subscribeTopics(Array.from([topic]));\n                this.refreshPackageId();\n                log.logDebug(`5. subscribe callback then fetch append message: ${this.packageId}, ${topic}`);\n                log.reportLog(`5. subscribe callback then fetch append message`);\n                const timeF = new Date().getTime();\n                (0, log_1.logDebug)(\"Append --subscribe callback->\", timeF - this.timeLog);\n                resolve(duplicatedTopics);\n            }));\n        });\n    }\n    confirmAppendingTopics() {\n        this.syncCacheSessionInfo();\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.timeLog = new Date().getTime();\n            (0, log_1.logDebug)(\"[Wallet] ConnectTime---enter->\", this.timeLog);\n            log.reportLog('wallet connect connect called');\n            // 0. get cached topics and infos\n            let timestampStr = Date.now().toString();\n            var jwtToken = yield this.makeJWT(timestampStr);\n            log.logDebug(`generate jwt token: ${jwtToken}`);\n            this.connectStorage.saveContent(jwtToken, 'jwt');\n            this.recovrySessionInfoFromCache();\n            // 1.\n            return new Promise((resolve, reject) => {\n                // 1. when websocket opened\n                this.inLogin = true;\n                this.connector.onOpen(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug(`1. connector on open`);\n                    log.reportLog('1. wallet connect connect on open');\n                    const timeOne = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---open->\", timeOne - this.timeLog);\n                    //2. send jwt to login\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when login');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // throw error\n                            reject(error);\n                        }\n                        else {\n                            this.isLogined = true;\n                            resolve();\n                            // 3. subscribe cached topics\n                            log.logDebug('3. subscribe cached topics', this.sessionCryptoInfoMap);\n                            log.reportLog('3. wallet connect connect subscribe cached topics');\n                            if (this.sessionCryptoInfoMap.size > 0) {\n                                yield this.subscribeTopics(Array.from(this.sessionCryptoInfoMap.keys()));\n                            }\n                        }\n                    }));\n                    log.logDebug(`2. login called`);\n                    log.reportLog('2. wallet connect login called');\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        return yield this.connector.connect();\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_LOGIN,\n                        params: {\n                            token: jwtToken\n                        }\n                    });\n                }));\n                this.connector.connect().catch((err) => {\n                    (0, log_1.logDebug)('WalletConnectionManager connect error', err);\n                    reject(err);\n                });\n                // add callback\n                this.connector.addPackageParse((event) => {\n                    var _a, _b;\n                    log.logDebug(`connect: parse package`);\n                    log.logDebug(event);\n                    if (!(\"params\" in event) || !(\"data\" in event[\"params\"])) {\n                        this.parsePackage(\"\", event, true);\n                        return;\n                    }\n                    // ignore receive echo\n                    if ((_a = event.params.data) === null || _a === void 0 ? void 0 : _a.topic) {\n                        this.parsePackage((_b = event.params.data) === null || _b === void 0 ? void 0 : _b.topic, event, event.method === commands_1.CONNECT_METHOD_RECEIVE);\n                    }\n                });\n                // this.connector.addListener(safeJsonStringify(event), (rawMsg: string)=> {\n                //    rawMsg = rawMsg.replace(/'/g, '\"')\n                //    log.logDebug(`addListener ===> ${rawMsg}`)\n                //    if (typeof rawMsg !== 'undefined') {\n                //       var msgObj = safeJsonParse(rawMsg)\n                //       var msg = msgObj.message\n                //       let crypto = \n                //       var result = this.crypto.decrypt(msg, this.connectedWalletPK)\n                //       log.logDebug(`addListener ===> ${result}`)\n                //       return result\n                //    }\n                //    return undefined\n                // }, ()=>{\n                //    // emit success\n                // }, ()=>{\n                //    // emit fail\n                // })\n            });\n        });\n    }\n    // 获取对应topic session下的钱包公钥\n    // 在返回approve时需要填充到clientId字段中\n    getSessionPublicKey(topicId) {\n        if (this.isTopicPublicKeyExist(topicId)) {\n            let item = this.sessionCryptoInfoMap.get(topicId);\n            if (item) {\n                return (0, utils_1.toHexString)(item.crypto.keyPair.publicKey);\n            }\n        }\n        return undefined;\n    }\n    getCurrentCachedTopicIdList() {\n        return Array.from(this.sessionCryptoInfoMap.keys());\n    }\n    disconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            yield this.connector.disconnect();\n            //clean cached topic\n            //如果是恢复连接，就不清理解密public key\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            if (!fromRestore) {\n                this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n            }\n        });\n    }\n    sendRaw(msg, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (topic) {\n                yield this.sendMsg(topic, msg, constants_1.OKXCONNECTOR_MESSAGE_TTL);\n            }\n        });\n    }\n    sendMsg(topic, message, ttl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (message) {\n                this.refreshPackageId();\n                const payload = {\n                    id: this.packageId.toString(),\n                    method: commands_1.CONNECT_METHOD_PUBLISH,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    params: {\n                        message: {\n                            topic: topic,\n                            message: message,\n                            ttl: ttl\n                        }\n                    } // crypted\n                };\n                this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                    // ack\n                    if (rsp && rsp.error) {\n                        log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                    }\n                    else if (rsp && !rsp.error) {\n                        log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                    }\n                }));\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    send(topic_1, msg_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, msg, needPublicKey = false, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL, useRaw = false) {\n            var _a, _b;\n            // make send msg payload\n            log.logDebug(`message send =====> ${msg}`);\n            if (!this.isTopicPublicKeyExist(topic)) {\n                // channel not ready\n                throw new Error('connection not finish');\n            }\n            let connectedDappPK = (_a = this.sessionCryptoInfoMap.get(topic)) === null || _a === void 0 ? void 0 : _a.dappPublicKey;\n            let cryptoObject = (_b = this.sessionCryptoInfoMap.get(topic)) === null || _b === void 0 ? void 0 : _b.crypto;\n            let messageObj = undefined;\n            if (useRaw) {\n                messageObj = {\n                    message: msg,\n                };\n            }\n            let useCrypto = false;\n            if (cryptoObject && connectedDappPK && !useRaw) {\n                let message = cryptoObject.encryptWallet(msg, connectedDappPK);\n                useCrypto = true;\n                messageObj = {\n                    message: message,\n                };\n            }\n            if (messageObj) {\n                if (needPublicKey && cryptoObject) {\n                    messageObj.clientId = (0, utils_1.toHexString)(cryptoObject.keyPair.publicKey);\n                    // let privateKey = toHexString(cryptoObject.keyPair.secretKey)\n                    // log.logDebug(`message send use dapp publicKey =====> ${connectedDappPK}`)\n                    // log.logDebug(`message send use publicKey =====> ${messageObj.clientId}`)\n                    // log.logDebug(`message send use secretKey =====> ${privateKey}`)\n                }\n                let messageStr = (0, safejson_1.safeJsonStringify)(messageObj);\n                if (!useRaw && useCrypto) {\n                    yield this.splitManager.sendSplitPackages(topic, messageStr, this.sendMsg.bind(this), this.sendRaw.bind(this));\n                }\n                else {\n                    yield this.sendMsg(topic, messageStr, ttl);\n                }\n            }\n        });\n    }\n    sendACK(msgId_1, success_1) {\n        return __awaiter(this, arguments, void 0, function* (msgId, success, reason = undefined) {\n            if (success === true) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    result: true\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n            else if (reason) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    error: {\n                        code: reason.code, //int\n                        message: reason.message\n                    }\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    // send receive\n    sendReceive(msgId, messageId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECEIVE,\n                params: {\n                    data: {\n                        messageId: messageId,\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendUnsubscribe(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO: make disconnect payload\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), {\n                id: this.packageId.toString(),\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_UNSUB,\n                params: {\n                    topic: topic\n                }\n            });\n            // remove topicId\n            this.sessionCryptoInfoMap.delete(topic);\n            this.syncCacheSessionInfo();\n        });\n    }\n    // send receive\n    // 1. fetch all \n    // 2. send back receive\n    // 3. check has more, if so, repeat from 1st step\n    sendFetchAndConsumeMessages(msgId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(msgId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic == topic) {\n                                let messageId = msg.messageId;\n                                yield this.connector.getMsgPayloadFromHistory(msg);\n                                // send receive command to relay server\n                                this.refreshPackageId();\n                                yield this.sendReceive(this.packageId.toString(), messageId, topic);\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_FETCHMSG,\n                params: {\n                    data: {\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendBatchFetchAndConsumeMessages(packageId, topicIdList) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(packageId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic) {\n                                // send receive command to relay server\n                                let msgPlayloadObject = this.splitManager.tryParseMessageSplitPayload(msg.message);\n                                if (msgPlayloadObject) {\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                }\n                                else {\n                                    let messageId = msg.messageId;\n                                    yield this.connector.getMsgPayloadFromHistory(msg);\n                                    this.refreshPackageId(i);\n                                    yield this.sendReceive(this.packageId.toString(), messageId, msg.topic);\n                                }\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendBatchFetchAndConsumeMessages(this.packageId.toString(), topicIdList);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            log.reportLog('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: packageId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_BATCH_FETCHMSG,\n                params: {\n                    topics: topicIdList,\n                    withInternalData: true\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                yield this.connector.connect();\n            }), payload);\n        });\n    }\n    cleanCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.connectStorage.clearCache();\n        });\n    }\n    saveSessionContent(key, data) {\n        if (!data) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(data);\n        this.connectStorage.encryptStoreMsg(jsonData, storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n    }\n    getSessionContent(key) {\n        let jsonStr = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        if (jsonStr) {\n            let object = (0, safejson_1.safeJsonParse)(jsonStr);\n            return object;\n        }\n        return undefined;\n    }\n    // subscribe then fetch messages for each topics\n    subscribeTopics(topicIdList) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)(\"4. topicid list\", topicIdList);\n            log.reportLog(\"4. topicid list\");\n            this.refreshPackageId();\n            const timeF = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let finishCount = 0;\n                //3. send subscribe\n                for (let idx = 0; idx < topicIdList.length; ++idx) {\n                    let topicId = topicIdList[idx];\n                    this.refreshPackageId(idx);\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when subscribe');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // reject(error)\n                            finishCount += 1;\n                            if (finishCount == topicIdList.length) {\n                                resolve();\n                            }\n                        }\n                        this.refreshPackageId(idx);\n                        const timeF = new Date().getTime();\n                        (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n                        finishCount += 1;\n                        if (finishCount == topicIdList.length) {\n                            // 4. fetch messages\n                            log.logDebug(`5. send fetch msg: ${this.packageId}, ${topicId}`);\n                            yield this.sendBatchFetchAndConsumeMessages(this.packageId.toString(), topicIdList);\n                            // 5. split manager resend\n                            yield this.splitManager.init(this.sendRaw.bind(this));\n                            resolve();\n                        }\n                    }));\n                    log.logDebug(`3. login callback then send subscribe: ${this.packageId}, ${topicId}`);\n                    log.reportLog('3. login callback then send subscribe');\n                    const timeTh = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---login callback->\", timeTh - this.timeLog);\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        return yield this.connector.connect();\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_SUB,\n                        params: {\n                            topic: topicId\n                        }\n                    });\n                }\n            }));\n        });\n    }\n}\nexports.WalletConnectionManager = WalletConnectionManager;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AppwalletConnector = void 0;\nconst ws_connector_1 = require(\"./ws-connector\");\nconst iconnector_1 = require(\"./iconnector\");\nconst utils_1 = require(\"../utils\");\nconst constants_1 = require(\"../protocol/constants\");\nclass AppwalletConnector extends ws_connector_1.WsConnector {\n    static getConnector() {\n        return new AppwalletConnector();\n    }\n    constructor() {\n        super();\n        this.walletName = 'OKX App';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectApp';\n    }\n    getTag() {\n        return iconnector_1.OKX_APP_WALLET;\n    }\n    openWallet(engineConnectInfo) {\n        var _a;\n        if (engineConnectInfo && engineConnectInfo.connectRequest) {\n            let connectRequest = engineConnectInfo.connectRequest;\n            (0, utils_1.logDebug)(`appwallet-connector openwallet before useSHortLink engineConnectInfo.connectRequest JSON ${JSON.stringify(engineConnectInfo)}`);\n            if ((0, utils_1.useShortLink)()) {\n                let shortUniversalLink = (0, utils_1.getOKXLink)(connectRequest);\n                (0, utils_1.openOKXUniversalLink)(shortUniversalLink);\n            }\n            else {\n                (0, utils_1.logDebug)(`appwallet-connector openwallet else connectRequest ${connectRequest}`);\n                let appConnectEncodeParams = (0, utils_1.encodeConnectParams)(Object.assign(Object.assign({}, connectRequest), { redirect: (_a = engineConnectInfo.redirect) !== null && _a !== void 0 ? _a : \"none\" }));\n                let appDeepLink = (0, utils_1.getAppWalletDeepLink)(appConnectEncodeParams);\n                (0, utils_1.openOKXDeeplinkWithFallback)(appDeepLink);\n            }\n        }\n        else {\n            if ((0, utils_1.isOS)('android')) {\n                (0, utils_1.openDeeplinkWithFallback)(constants_1.stackDeepLink, () => { });\n            }\n            else {\n                (0, utils_1.openLinkBlank)(constants_1.standardUniversalLink);\n            }\n        }\n    }\n}\nexports.AppwalletConnector = AppwalletConnector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_TG_WALLET = exports.OKX_APP_WALLET = exports.OKX_INJECT_WALLET = void 0;\nexports.OKX_INJECT_WALLET = \"okx_inject_wallet\";\nexports.OKX_APP_WALLET = \"okx_app_wallet\";\nexports.OKX_TG_WALLET = \"okx_tg_wallet\";\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OkxwalletInjectConnector = exports.WsConnector = exports.TgwalletConnector = exports.InjectConnector = exports.OKX_INJECT_WALLET = exports.OKX_APP_WALLET = exports.OKX_TG_WALLET = exports.AppwalletConnector = void 0;\nvar appwallet_connector_1 = require(\"./appwallet-connector\");\nObject.defineProperty(exports, \"AppwalletConnector\", { enumerable: true, get: function () { return appwallet_connector_1.AppwalletConnector; } });\nvar iconnector_1 = require(\"./iconnector\");\nObject.defineProperty(exports, \"OKX_TG_WALLET\", { enumerable: true, get: function () { return iconnector_1.OKX_TG_WALLET; } });\nObject.defineProperty(exports, \"OKX_APP_WALLET\", { enumerable: true, get: function () { return iconnector_1.OKX_APP_WALLET; } });\nObject.defineProperty(exports, \"OKX_INJECT_WALLET\", { enumerable: true, get: function () { return iconnector_1.OKX_INJECT_WALLET; } });\nvar inject_connector_1 = require(\"./inject-connector\");\nObject.defineProperty(exports, \"InjectConnector\", { enumerable: true, get: function () { return inject_connector_1.InjectConnector; } });\nvar tgwallet_connector_1 = require(\"./tgwallet-connector\");\nObject.defineProperty(exports, \"TgwalletConnector\", { enumerable: true, get: function () { return tgwallet_connector_1.TgwalletConnector; } });\nvar ws_connector_1 = require(\"./ws-connector\");\nObject.defineProperty(exports, \"WsConnector\", { enumerable: true, get: function () { return ws_connector_1.WsConnector; } });\nvar okxwallet_inject_connector_1 = require(\"./okxwallet-inject-connector\");\nObject.defineProperty(exports, \"OkxwalletInjectConnector\", { enumerable: true, get: function () { return okxwallet_inject_connector_1.OkxwalletInjectConnector; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InjectConnector = void 0;\nconst protocol_1 = require(\"../protocol\");\nconst utils_1 = require(\"../utils\");\nconst iconnector_1 = require(\"./iconnector\");\nconst SolProvider_1 = require(\"../inject/provider/SolProvider\");\nconst wallet_info_1 = require(\"../protocol/connect/wallet-info\");\nconst AptosProvider_1 = require(\"../inject/provider/AptosProvider\");\nconst media_1 = require(\"../utils/media\");\nconst TONProvider_1 = require(\"../inject/provider/TONProvider\");\nconst inject_1 = require(\"../inject\");\nconst sui_provider_1 = require(\"../inject/provider/sui-provider\");\nconst utils_2 = require(\"../utils/utils\");\nconst sessionUtils_1 = require(\"../connect/sessionUtils\");\nconst btc_provider_1 = require(\"../inject/provider/btc-provider\");\nclass InjectConnector {\n    constructor() {\n        this.disconnectListener = [];\n        this.providerMap = new Map();\n        this.accountChangedEVMHandler = null;\n        this.accountChangedSolanaPublicKeyHandler = null;\n        this.accountChangedTONHandler = null;\n        this.disconnectHandler = null;\n        this.walletName = \"\";\n        this.walletNameKey = '';\n        this.enable = true;\n        this.providerMap.set(protocol_1.NameSpaceKeyEip155, new inject_1.Eip155Provider());\n        this.providerMap.set(protocol_1.NameSpaceKeySOL, new SolProvider_1.SolProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeyAptos, new AptosProvider_1.AptosProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeyTON, new TONProvider_1.TONProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeySui, new sui_provider_1.SuiProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeyBtc, new btc_provider_1.BtcProvider());\n    }\n    setAccountChangeListener(accountChangeListener) {\n        (0, utils_1.logDebug)(\"setAccountChangeListener: inject\", accountChangeListener);\n        this.accountChangeListener = accountChangeListener;\n    }\n    setConnectionManager(connectionManager) {\n        this.connectionManager = connectionManager;\n    }\n    getInjectProvider(nameSpace) {\n        for (const [mapKey, value] of this.providerMap.entries()) {\n            if (nameSpace.includes(mapKey)) {\n                return value;\n            }\n        }\n        return undefined;\n    }\n    openWallet(engineConnectInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c;\n            (0, utils_1.logDebug)(\"InjectEngine connect begin:\", JSON.stringify(engineConnectInfo));\n            if (!engineConnectInfo) {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR);\n            }\n            this.dappInfo = engineConnectInfo.connectRequest.dAppInfo;\n            var universalConnectRequest = engineConnectInfo.connectRequest;\n            try {\n                if (window && window.okxwallet) {\n                    if (universalConnectRequest.requests) {\n                        let requestAccounts = universalConnectRequest.requests\n                            .find(item => item.name === \"requestAccounts\");\n                        let version = yield window.okxwallet.getVersion();\n                        let result = {\n                            method: \"connect\",\n                            requestId: universalConnectRequest.requestId,\n                            payload: {\n                                wallet: {\n                                    platform: (_a = navigator.platform) !== null && _a !== void 0 ? _a : \"/\",\n                                    appName: wallet_info_1.OKXInjectWalletName,\n                                    appVersion: version !== null && version !== void 0 ? version : \"1.0.0\",\n                                    maxProtocolVersion: 1,\n                                },\n                                responses: []\n                            },\n                        };\n                        let responseItem = {\n                            name: \"requestAccounts\",\n                            accounts: [],\n                        };\n                        result.payload.responses.push(responseItem);\n                        yield this.disconnect();\n                        const required = (_b = requestAccounts.requiredNamespaces) !== null && _b !== void 0 ? _b : [];\n                        const optional = (_c = requestAccounts.optionalNamespaces) !== null && _c !== void 0 ? _c : [];\n                        let needPop = true;\n                        let signalChain = false;\n                        if (required.length + optional.length === 1 && !(0, media_1.isDevice)(\"mobile\")) {\n                            const singleItem = required.length === 1 ? required[0] : optional[0];\n                            const singleProvider = this.getInjectProvider(singleItem.namespace);\n                            // await singleProvider?.connect(singleItem,this.dappInfo)\n                            let singleConnectResult = yield (singleProvider === null || singleProvider === void 0 ? void 0 : singleProvider.singleConnect(singleItem, this.dappInfo));\n                            if (!!singleConnectResult) {\n                                signalChain = true;\n                                needPop = false;\n                            }\n                        }\n                        var accounts = yield this.getAccountByRequestWallets(needPop, false, signalChain, required, optional);\n                        if (accounts) {\n                            responseItem.accounts.push(...accounts);\n                            if (responseItem.accounts.length === 0) {\n                                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"connect connectAccounts is null\");\n                            }\n                        }\n                        else {\n                            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"connect requestWallets is null\");\n                        }\n                        if (this.connectResultListener) {\n                            if (this.disconnectHandler) {\n                                window.okxwallet.removeListener('disconnect', this.disconnectHandler);\n                            }\n                            this.disconnectHandler = () => {\n                                console.log(\"window.okxwallet disconnect:\");\n                                this.disconnectListener.forEach(listener => listener());\n                                this.disconnectListener = [];\n                            };\n                            window.okxwallet.on('disconnect', this.disconnectHandler);\n                            this.connectResultListener(result);\n                        }\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR);\n                }\n            }\n            catch (error) {\n                var code = protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR;\n                var message = '';\n                if (error instanceof protocol_1.OKXConnectError) {\n                    code = error.code;\n                    message = error.message;\n                }\n                if (this.connectResultListener) {\n                    this.connectResultListener({\n                        requestId: \"-1\",\n                        method: 'connect_error',\n                        payload: {\n                            code: code\n                        }\n                    });\n                }\n            }\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, utils_1.logDebug)('InjectEngine ==>> disconnect  okxwallet.disconnect()');\n            if (window.okxwallet) {\n                yield window.okxwallet.disconnect();\n                (0, utils_1.logDebug)('InjectEngine ==>> disconnect end okxwallet.disconnect()');\n            }\n        });\n    }\n    getRequestId() {\n        const requestId = Date.now().toString();\n        (0, utils_1.logDebug)('InjectEngine ==>> getRequestId ==>', requestId);\n        return requestId;\n    }\n    send(request, requestAnswer) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                (0, utils_1.logDebug)(\"InjectEngine send  > request:\", (0, utils_1.safeJsonStringify)(request));\n                let newRequest = request;\n                if (newRequest.method === 'disconnect') {\n                    yield this.disconnect();\n                    this.disconnectListener.forEach(listener => listener());\n                    this.disconnectListener = [];\n                    (_a = requestAnswer.onAck) === null || _a === void 0 ? void 0 : _a.call(requestAnswer);\n                    return;\n                }\n                yield this.checkWalletMatch();\n                const injectProvider = this.getInjectProvider(newRequest.chainId);\n                if (injectProvider) {\n                    injectProvider.send(newRequest).then(result => {\n                        var _a;\n                        (0, utils_1.logDebug)(\"InjectEngine ==>> send > result:\", result);\n                        (_a = requestAnswer.resolve) === null || _a === void 0 ? void 0 : _a.call(requestAnswer, result);\n                    }).catch(error => {\n                        var _a;\n                        let code = error.code;\n                        if (code === 4001) {\n                            code = protocol_1.OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR;\n                        }\n                        let errorResponse = {\n                            requestId: this.getRequestId(),\n                            method: request.method,\n                            error: {\n                                code: code,\n                                message: error.message\n                            }\n                        };\n                        (0, utils_1.logDebug)(\"InjectEngine ==>> send > errorResponse:\", JSON.stringify(errorResponse));\n                        (_a = requestAnswer.resolve) === null || _a === void 0 ? void 0 : _a.call(requestAnswer, errorResponse);\n                    });\n                    return;\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"InjectEngine ==>> send  ===> error:\", error);\n                return Promise.reject(error);\n            }\n        });\n    }\n    checkWalletMatch() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                var _a;\n                let sessionLocal = (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getSessionContent('connectSession');\n                if (!sessionLocal) {\n                    reject(new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED));\n                }\n                this.restoreconnect(sessionLocal, (session) => {\n                    if (session) {\n                        resolve();\n                    }\n                    else {\n                        reject(new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED));\n                    }\n                });\n            });\n        });\n    }\n    checkAccountChanged() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                let sessionLocal = (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getSessionContent('connectSession');\n                if (!sessionLocal) {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.WALLET_NOT_SUPPORTED);\n                }\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged --sessionInfo:\", JSON.stringify(sessionLocal));\n                let requiredNamespaces = this.getRequireNameSpaceFromSession(sessionLocal);\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged --requiredNamespaces:\", JSON.stringify(requiredNamespaces));\n                // 使用 await 等待异步操作完成\n                let accounts = yield this.getAccountByRequestWallets(false, true, false, requiredNamespaces, []);\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged --accounts:\", JSON.stringify(accounts));\n                if (accounts) {\n                    let resultNameSpace = {};\n                    (0, sessionUtils_1.buildAccountNameSpaces)(accounts, resultNameSpace);\n                    if (!this.compareAndModifyNamespaces(sessionLocal.namespaces, resultNameSpace)) {\n                        (0, utils_1.logDebug)(\"inject-connector checkAccountChanged --result sessionLocal:\", JSON.stringify(sessionLocal));\n                        if (this.accountChangeListener) {\n                            (0, utils_1.logDebug)(\"inject-connector checkAccountChanged -accountChangeListener:\", this.accountChangeListener);\n                            this.accountChangeListener(sessionLocal);\n                        }\n                        else {\n                            (0, utils_1.logDebug)(\"inject-connector checkAccountChanged disconnect:\");\n                            yield this.disconnect();\n                        }\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"connect requestWallets is null\");\n                }\n            }\n            catch (e) {\n                (0, utils_1.logDebug)(\"inject-connector restoreconnect catch error\", JSON.stringify(e));\n                throw e;\n            }\n        });\n    }\n    compareAndModifyNamespaces(nameSpaces1, nameSpaces2) {\n        let isAccountsSame = true;\n        for (const key in nameSpaces1) {\n            if (nameSpaces2[key]) {\n                const ns1 = nameSpaces1[key];\n                const ns2 = nameSpaces2[key];\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged ns1:\", JSON.stringify(ns1));\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged ns2:\", JSON.stringify(ns2));\n                const areAccountsSame = JSON.stringify([...ns1.accounts].sort()) === JSON.stringify([...ns2.accounts].sort());\n                if (!areAccountsSame) {\n                    isAccountsSame = false;\n                    ns1.accounts = [...ns2.accounts];\n                    ns1.extra = Object.assign({}, ns2.extra);\n                    ns1.payload = Object.assign({}, ns2.payload);\n                }\n                (0, utils_1.logDebug)(\"inject-connector checkAccountChanged new ns1:\", JSON.stringify(ns1));\n            }\n        }\n        (0, utils_1.logDebug)(`inject-connector checkAccountChanged compareAndModifyNamespaces ===> ${isAccountsSame}`);\n        return isAccountsSame;\n    }\n    clearData() {\n        this.connectResultListener = undefined;\n    }\n    addDisconnectListener(disconnecter) {\n        this.disconnectListener.push(disconnecter);\n    }\n    setOnConnectResultListener(connectResultListener) {\n        this.connectResultListener = connectResultListener;\n    }\n    connectManagerDisconnect() {\n        return __awaiter(this, arguments, void 0, function* (_ = false) {\n        });\n    }\n    getCurrentConnectionReady(namespaceKeys) {\n        if (!namespaceKeys) {\n            return false;\n        }\n        const allReady = namespaceKeys.every(namespaceKey => { var _a; return (_a = this.getInjectProvider(namespaceKey)) === null || _a === void 0 ? void 0 : _a.connectReady(); });\n        return allReady;\n    }\n    getTag() {\n        return iconnector_1.OKX_INJECT_WALLET;\n    }\n    toJSON() {\n        return \"inject-connector\";\n    }\n    getRequireNameSpaceFromSession(sessionInfo) {\n        var _a, _b;\n        var requiredNamespaces = [];\n        for (let namespacesKey in sessionInfo.namespaces) {\n            let nameSpace = sessionInfo.namespaces[namespacesKey];\n            let connectWalletNameSpace = {\n                namespace: namespacesKey,\n                chains: nameSpace.chains\n            };\n            if (namespacesKey === protocol_1.NameSpaceKeyAptos) {\n                let aptosChains = [];\n                nameSpace.chains.forEach((chainStr) => {\n                    let aptosChain = (0, utils_2.replaceAptosChainName)(chainStr);\n                    aptosChains.push(aptosChain);\n                });\n                connectWalletNameSpace = {\n                    namespace: namespacesKey,\n                    chains: aptosChains\n                };\n            }\n            else if (namespacesKey === protocol_1.NameSpaceKeyTON) {\n                let ton_proof_result_Item = undefined;\n                let proofItem = undefined;\n                if ((_a = nameSpace.payload) === null || _a === void 0 ? void 0 : _a.ton_proof) {\n                    ton_proof_result_Item = (_b = nameSpace.payload) === null || _b === void 0 ? void 0 : _b.ton_proof;\n                    if (ton_proof_result_Item.proof.payload) {\n                        proofItem = {\n                            name: \"ton_proof\",\n                            payload: ton_proof_result_Item.proof.payload\n                        };\n                    }\n                }\n                connectWalletNameSpace = {\n                    namespace: namespacesKey,\n                    chains: nameSpace.chains,\n                    params: {\n                        ton_addr: { name: 'ton_addr' },\n                        ton_proof: proofItem\n                    },\n                };\n            }\n            requiredNamespaces.push(connectWalletNameSpace);\n        }\n        return requiredNamespaces;\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        var _a;\n        if (!window.okxwallet) {\n            onConnectResult(null);\n            return;\n        }\n        this.dappInfo = (_a = sessionInfo.sessionConfig) === null || _a === void 0 ? void 0 : _a.dappInfo;\n        (0, utils_1.logDebug)(\"inject-connector restoreconnect --sessionInfo:\", JSON.stringify(sessionInfo));\n        var requiredNamespaces = this.getRequireNameSpaceFromSession(sessionInfo);\n        (0, utils_1.logDebug)(\"inject-connector restoreconnect --requiredNamespaces:\", JSON.stringify(requiredNamespaces));\n        this.getAccountByRequestWallets(false, false, false, requiredNamespaces, [])\n            .then((accounts) => {\n            (0, utils_1.logDebug)(\"inject-connector restoreconnect --accounts:\", JSON.stringify(accounts));\n            //compare account with sessionInfo\n            let allEqual = true;\n            for (let namespacesKey in sessionInfo.namespaces) {\n                var accountsItem = accounts.find((item) => item.namespace === namespacesKey);\n                var sessionAccounts = sessionInfo.namespaces[namespacesKey].accounts;\n                if (!accountsItem) {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"resotreconnect error: accountItem error\");\n                }\n                const areEqual = accountsItem.addresses.length === sessionAccounts.length &&\n                    accountsItem.addresses.slice().sort().every((value, index) => {\n                        if (namespacesKey === protocol_1.NameSpaceKeyAptos) {\n                            let aptosAdd = sessionAccounts.slice().sort()[index];\n                            (0, utils_1.logDebug)(\"check aptos address -value and aptosAdd--\", value, aptosAdd);\n                            aptosAdd = (0, utils_2.replaceAptosChainName)(aptosAdd);\n                            return aptosAdd === value;\n                        }\n                        else {\n                            return value === sessionAccounts.slice().sort()[index];\n                        }\n                    });\n                if (!areEqual) {\n                    allEqual = false;\n                }\n            }\n            if (allEqual) {\n                onConnectResult(sessionInfo);\n            }\n            else {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"resotreconnect error: address not as same as session\");\n            }\n        }).catch((e) => {\n            (0, utils_1.logDebug)(\"inject-connector restoreconnect catch error\", JSON.stringify(e));\n            onConnectResult(null);\n        });\n    }\n    getAccountByRequestWallets(needPop, isAccountChange, signalChain, requiredNamespaces, optionalNamespaces) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                var walletInfo = [];\n                var accountResult = [];\n                if ((0, media_1.isDevice)(\"mobile\")) {\n                    var walletInfoItem = yield window.okxwallet.connectWallet(needPop, {\n                        requiredNamespaces: requiredNamespaces,\n                        optionalNamespaces: optionalNamespaces\n                    });\n                    walletInfo.push(walletInfoItem);\n                }\n                else {\n                    walletInfo = (yield window.okxwallet.requestWallets(needPop));\n                }\n                var allNameSpace = [...(requiredNamespaces !== null && requiredNamespaces !== void 0 ? requiredNamespaces : []), ...(optionalNamespaces !== null && optionalNamespaces !== void 0 ? optionalNamespaces : [])];\n                let walletInfoFirst = walletInfo[0];\n                (0, utils_1.logDebug)(\" InjectEngine connect connectAccounts:\", JSON.stringify(walletInfoFirst));\n                let eventkey;\n                let hasTON = false;\n                if (allNameSpace && walletInfoFirst && walletInfoFirst.address) {\n                    for (const [mapKey, provider] of this.providerMap.entries()) {\n                        let itemResult = yield provider.parseConnectResponse(needPop, isAccountChange, signalChain, allNameSpace, walletInfoFirst, this.dappInfo);\n                        if (itemResult) {\n                            eventkey = mapKey;\n                            accountResult.push(itemResult);\n                            if (mapKey === protocol_1.NameSpaceKeyTON) {\n                                hasTON = true;\n                            }\n                        }\n                    }\n                }\n                // check require\n                let cheeckRequire = requiredNamespaces.every(requireItem => {\n                    // requireItem.namespace\n                    let resultSel = accountResult.find(resultItem => {\n                        return resultItem.namespace === requireItem.namespace;\n                    });\n                    if (resultSel) {\n                        let hasChainAdd = requireItem.chains.every(chain => {\n                            let addItem = resultSel.addresses.find(address => {\n                                return address.startsWith(chain + \":\");\n                            });\n                            return !!addItem;\n                        });\n                        return hasChainAdd;\n                    }\n                    return false;\n                });\n                (0, utils_1.logDebug)(\"InjectEngine connect requiredNamespaces:\", JSON.stringify(requiredNamespaces));\n                (0, utils_1.logDebug)(\"InjectEngine connect accountResult:\", JSON.stringify(accountResult));\n                if (!cheeckRequire) {\n                    yield this.disconnect();\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED);\n                }\n                if (!(0, media_1.isDevice)(\"mobile\")) {\n                    this.configEventWithKey(eventkey, hasTON);\n                    yield window.okxwallet.requestWallets(needPop);\n                }\n                return accountResult;\n            }\n            catch (e) {\n                if (e && typeof e === \"object\" && \"code\" in e) {\n                    if (e.code === 4001) {\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR);\n                    }\n                }\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n            }\n        });\n    }\n    configEventWithKey(key, hasTON) {\n        if (window.okxwallet && key) {\n            if (this.accountChangedEVMHandler) {\n                window.okxwallet.removeListener('accountsChanged', this.accountChangedEVMHandler);\n            }\n            if (this.accountChangedSolanaPublicKeyHandler) {\n                window.okxwallet.solana.removeListener('accountChanged', this.accountChangedSolanaPublicKeyHandler);\n                window.okxwallet.sui.removeListener('accountChanged', this.accountChangedSolanaPublicKeyHandler);\n            }\n            if (this.accountChangedTONHandler) {\n                window.okxTonWallet.tonconnect.off('accountChanged', this.accountChangedTONHandler);\n            }\n            if (hasTON) {\n                console.log(\"window.okxwallet configEventWithKey:\", key);\n                this.accountChangedTONHandler = () => {\n                    console.log(\"window.okxwallet configEventWithKey_TON:\", Date.now(), key);\n                    this.checkAccountChanged().catch(e => {\n                        console.log(\"window.okxwallet configEventWithKey error: \", e);\n                    });\n                };\n                window.okxTonWallet.tonconnect.on('accountChanged', this.accountChangedTONHandler);\n            }\n            else {\n                switch (key) {\n                    case protocol_1.NameSpaceKeyEip155:\n                        {\n                            console.log(\"window.okxwallet configEventWithKey:\", key);\n                            this.accountChangedEVMHandler = (accounts) => {\n                                console.log(\"window.okxwallet configEventWithKey_evm:\", Date.now(), key, accounts);\n                                if (accounts && accounts.length > 0) { //\n                                    this.checkAccountChanged().catch(e => {\n                                        console.log(\"window.okxwallet configEventWithKey error: \", e);\n                                    });\n                                }\n                            };\n                            window.okxwallet.on('accountsChanged', this.accountChangedEVMHandler);\n                        }\n                        break;\n                    case protocol_1.NameSpaceKeySOL:\n                        {\n                            console.log(\"window.okxwallet configEventWithKey:\", key);\n                            this.accountChangedSolanaPublicKeyHandler = (publicKey) => {\n                                console.log(\"window.okxwallet configEventWithKey_solana:\", Date.now(), key, publicKey);\n                                if (publicKey) {\n                                    this.checkAccountChanged().catch(e => {\n                                        console.log(\"window.okxwallet configEventWithKey error: \", e);\n                                    });\n                                }\n                            };\n                            window.okxwallet.solana.on('accountChanged', this.accountChangedSolanaPublicKeyHandler);\n                        }\n                        break;\n                    case protocol_1.NameSpaceKeySui:\n                        {\n                            console.log(\"window.okxwallet configEventWithKey:\", key);\n                            this.accountChangedSolanaPublicKeyHandler = (publicKey) => {\n                                console.log(\"window.okxwallet configEventWithKey_sui:\", Date.now(), key, publicKey);\n                                if (publicKey) {\n                                    this.checkAccountChanged().catch(e => {\n                                        console.log(\"window.okxwallet configEventWithKey error: \", e);\n                                    });\n                                }\n                            };\n                            window.okxwallet.sui.on('accountChanged', this.accountChangedSolanaPublicKeyHandler);\n                        }\n                        break;\n                    case protocol_1.NameSpaceKeyTON:\n                        {\n                            console.log(\"window.okxwallet configEventWithKey:\", key);\n                        }\n                        break;\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n}\nexports.InjectConnector = InjectConnector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OkxwalletInjectConnector = void 0;\nconst inject_connector_1 = require(\"./inject-connector\");\nclass OkxwalletInjectConnector extends inject_connector_1.InjectConnector {\n    static getConnector() {\n        return new OkxwalletInjectConnector();\n    }\n    constructor() {\n        super();\n        this.walletName = 'OKX Wallet extension';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectInjected';\n    }\n}\nexports.OkxwalletInjectConnector = OkxwalletInjectConnector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TgwalletConnector = void 0;\nconst ws_connector_1 = require(\"./ws-connector\");\nconst iconnector_1 = require(\"./iconnector\");\nconst utils_1 = require(\"../utils\");\nclass TgwalletConnector extends ws_connector_1.WsConnector {\n    static getConnector() {\n        return new TgwalletConnector();\n    }\n    constructor() {\n        super();\n        this.walletName = 'OKX Mini Wallet';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectMini';\n    }\n    getTag() {\n        return iconnector_1.OKX_TG_WALLET;\n    }\n    openWallet(engineConnectInfo) {\n        var _a;\n        var encodeTGParams;\n        if (engineConnectInfo && engineConnectInfo.connectRequest) {\n            encodeTGParams = (0, utils_1.encodeTWAConnectURLParams)(Object.assign(Object.assign({}, engineConnectInfo.connectRequest), { redirect: \"none\" }));\n        }\n        var tgUrl = (0, utils_1.getTelegramWalletTWAUrl)(encodeTGParams, (_a = engineConnectInfo === null || engineConnectInfo === void 0 ? void 0 : engineConnectInfo.tmaReturnUrl) !== null && _a !== void 0 ? _a : \"back\");\n        (0, utils_1.openOKXTMAWalletlinkWithFallback)(tgUrl);\n    }\n}\nexports.TgwalletConnector = TgwalletConnector;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WsConnector = void 0;\nconst safejson_1 = require(\"../utils/safejson\");\nconst log_1 = require(\"../utils/log\");\nclass WsConnector {\n    constructor() {\n        this.disconnectListener = [];\n        this.walletName = '';\n        this.walletNameKey = '';\n        this.enable = true;\n        this.pendingRequests = new Map();\n        // report api begin\n        (0, log_1.getDefaultReporter)().beginReport();\n    }\n    setAccountChangeListener(accountChangeListener) {\n        this.accountChangeListener = accountChangeListener;\n    }\n    setConnectionManager(connectionManager) {\n        this.connectionManager = connectionManager;\n    }\n    addConnectionListener() {\n        var _a;\n        (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.addListener(\"sdk_response\", (event, msg) => {\n            var jsonResponse = (0, safejson_1.safeJsonParse)(msg);\n            (0, log_1.logDebug)(`Engine ==>> addListener ==> success ==> ${jsonResponse}`);\n            this.handleResponse(event, jsonResponse);\n        }, function () {\n        });\n    }\n    addDisconnectListener(disconnecter) {\n        this.disconnectListener.push(disconnecter);\n    }\n    connectManagerDisconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.disconnect(fromRestore));\n        });\n    }\n    openWallet(engineConnectInfo) {\n    }\n    bindRequestForPromise(requestId, resolve) {\n        this.pendingRequests.set(requestId, resolve);\n    }\n    send(request, requestAnswer, ttl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b;\n            (0, log_1.logDebug)('Engine ==>> send  request==>', JSON.stringify(request));\n            const requestId = this.getRequestId();\n            try {\n                let packageId = yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.send(JSON.stringify(Object.assign(Object.assign({}, request), { requestId: requestId })), ttl));\n                if (packageId) {\n                    (_b = this.connectionManager) === null || _b === void 0 ? void 0 : _b.events.once(packageId.toString(), (event) => {\n                        var _a;\n                        (0, log_1.logDebug)(`Engine ==> send => onAck => ${(0, safejson_1.safeJsonStringify)(event)}`);\n                        if (event && event.result) {\n                            (_a = requestAnswer.onAck) === null || _a === void 0 ? void 0 : _a.call(requestAnswer);\n                        }\n                    });\n                }\n                if (requestAnswer.resolve) {\n                    this.bindRequestForPromise(requestId, requestAnswer.resolve);\n                }\n            }\n            catch (e) {\n                return Promise.reject(e);\n            }\n        });\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.restoreConnect(sessionInfo.topic));\n            onConnectResult(sessionInfo);\n        });\n    }\n    restoreconnectFromTopic(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.restoreConnect(topic));\n        });\n    }\n    getRequestId() {\n        const requestId = Date.now().toString();\n        (0, log_1.logDebug)('Engine ==>> getRequestId ==>', requestId);\n        return requestId;\n    }\n    handleResponse(event, response) {\n        (0, log_1.logDebug)(`Engine ==>> handleResponse_1  ======>response: ${(0, safejson_1.safeJsonStringify)(response)}`, event);\n        if (\"requestId\" in response) {\n            (0, log_1.logDebug)(\"Engine ==>> handleResponse_2  ===> in response\");\n            let requestId = response.requestId;\n            const resolve = this.pendingRequests.get(requestId);\n            if (resolve) {\n                (0, log_1.logDebug)(\"Engine ==>> handleResponse_3  ===> find resolve:\", resolve);\n                resolve(response);\n                // 从pendingRequests中删除这个Promise\n                this.pendingRequests.delete(requestId);\n            }\n            else {\n                (0, log_1.logDebug)(\"Engine ==>> handleResponse_3  ===> not find resolve:\");\n                if (response.method === \"disconnect\") {\n                    this.disconnectListener.forEach(listener => listener());\n                    this.disconnectListener = [];\n                    this.clearData();\n                }\n            }\n        }\n    }\n    getCurrentConnectionReady() {\n        var _a;\n        return !!((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getCurrentConnectionReady());\n    }\n    saveSessionContent(key, data) {\n        var _a;\n        (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.saveSessionContent(key, data);\n    }\n    getSessionContent(key) {\n        var _a;\n        return (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getSessionContent(key);\n    }\n    setOnConnectResultListener(connectResultListener) {\n        this.connectResultListener = connectResultListener;\n    }\n    getTag() {\n        return \"\";\n    }\n    toJSON() {\n        return \"ws-connector\";\n    }\n    clearData() {\n        this.pendingRequests.clear();\n    }\n}\nexports.WsConnector = WsConnector;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SessionCrypto = void 0;\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst utils_1 = require(\"../utils/utils\");\nclass SessionCrypto {\n    constructor(keyPair = undefined) {\n        this.nonceLength = 24;\n        this.sessionKeyPair = keyPair ? this.createKeypairFromString(keyPair) : this.createKeypair();\n    }\n    createKeypair() {\n        return tweetnacl_1.default.box.keyPair();\n    }\n    createKeypairFromString(keyPair) {\n        return {\n            publicKey: (0, utils_1.hexToByteArray)(keyPair.publicKey),\n            secretKey: (0, utils_1.hexToByteArray)(keyPair.secretKey),\n        };\n    }\n    createNonce() {\n        return tweetnacl_1.default.randomBytes(this.nonceLength);\n    }\n    get keyPair() {\n        return this.sessionKeyPair;\n    }\n    // dapp 加密:\n    // base64(hex（nonce+加密内容）)\n    encrypt(message, receiverPublicKey) {\n        const encodedMessage = new TextEncoder().encode(message);\n        const nonce = this.createNonce();\n        const encrypted = tweetnacl_1.default.box(encodedMessage, nonce, (0, utils_1.hexToByteArray)(receiverPublicKey), this.keyPair.secretKey);\n        let concatInfo = (0, utils_1.concatUint8Arrays)(nonce, encrypted);\n        var hexResult = (0, utils_1.toHexString)(concatInfo);\n        var encodedResult = new TextEncoder().encode(hexResult);\n        return (0, utils_1.base64encode)(encodedResult, false);\n    }\n    // 钱包加密内容\n    // 注意：没有中间hex的环节\n    // base64（nonce+加密内容)\n    encryptWallet(message, receiverPublicKey) {\n        const encodedMessage = new TextEncoder().encode(message);\n        const nonce = this.createNonce();\n        const encrypted = tweetnacl_1.default.box(encodedMessage, nonce, (0, utils_1.hexToByteArray)(receiverPublicKey), this.keyPair.secretKey);\n        let concatInfo = (0, utils_1.concatUint8Arrays)(nonce, encrypted);\n        return (0, utils_1.base64encode)(concatInfo, false);\n    }\n    // dapp 解密\n    // base64(split(nonce+加密内容))\n    decrypt(message, senderPublicKey) {\n        let base64Content = (0, utils_1.base64decode)(message, true);\n        let messageByteArray = base64Content.toUint8Array();\n        const [nonce, internalMessage] = (0, utils_1.splitToUint8Arrays)(messageByteArray, this.nonceLength);\n        const decrypted = tweetnacl_1.default.box.open(internalMessage, nonce, (0, utils_1.hexToByteArray)(senderPublicKey), this.keyPair.secretKey);\n        if (!decrypted) {\n            throw new Error(`Decryption error: \\n message: ${message.toString()} \\n sender pubkey: ${senderPublicKey.toString()} \\n keypair pubkey: ${(0, utils_1.toHexString)(this.keyPair.publicKey)} \\n keypair secretkey: ${(0, utils_1.toHexString)(this.keyPair.secretKey)}`);\n        }\n        return new TextDecoder().decode(decrypted);\n    }\n    // dapp 解密\n    // base64(hextoByte(split(nonce+加密内容)))\n    decryptWallet(message, senderPublicKey) {\n        let base64Content = (0, utils_1.base64decode)(message, true);\n        let messageByteArray = (0, utils_1.hexToByteArray)(base64Content.toString());\n        const [nonce, internalMessage] = (0, utils_1.splitToUint8Arrays)(messageByteArray, this.nonceLength);\n        const decrypted = tweetnacl_1.default.box.open(internalMessage, nonce, (0, utils_1.hexToByteArray)(senderPublicKey), this.keyPair.secretKey);\n        if (!decrypted) {\n            throw new Error(`Decryption error: \\n message: ${message.toString()} \\n sender pubkey: ${senderPublicKey.toString()} \\n keypair pubkey: ${(0, utils_1.toHexString)(this.keyPair.publicKey)} \\n keypair secretkey: ${(0, utils_1.toHexString)(this.keyPair.secretKey)}`);\n        }\n        return new TextDecoder().decode(decrypted);\n    }\n    stringifyKeypair() {\n        return {\n            publicKey: (0, utils_1.toHexString)(this.keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(this.keyPair.secretKey)\n        };\n    }\n}\nexports.SessionCrypto = SessionCrypto;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./connect\"), exports);\n__exportStar(require(\"./protocol\"), exports);\n__exportStar(require(\"./utils\"), exports);\n__exportStar(require(\"./inject\"), exports);\n__exportStar(require(\"./connector\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BtcMethods = exports.SuiMethods = exports.TONMethods = exports.AptosMethods = exports.SOLANAMethods = exports.Eip55Methods = void 0;\nexports.hasOKXInjectedProvider = hasOKXInjectedProvider;\nfunction hasOKXInjectedProvider() {\n    if (typeof getWindowProviderNamespace(\"okxwallet\") !== 'undefined') {\n        return true;\n    }\n    return false;\n}\nfunction getWindowProviderNamespace(namespace) {\n    const providerSearch = (provider, namespace) => {\n        const [property, ...path] = namespace.split('.');\n        const _provider = provider[property];\n        if (_provider) {\n            if (path.length === 0)\n                return _provider;\n            return providerSearch(_provider, path.join('.'));\n        }\n    };\n    if (typeof window !== 'undefined')\n        return providerSearch(window, namespace);\n}\nexports.Eip55Methods = [\n    \"personal_sign\",\n    \"eth_signTypedData_v4\",\n    \"eth_sendTransaction\",\n    \"wallet_addEthereumChain\",\n    \"wallet_watchAsset\",\n    \"wallet_switchEthereumChain\",\n    \"eth_requestAccounts\",\n    \"eth_accounts\",\n    \"eth_chainId\"\n];\nexports.SOLANAMethods = [\n    \"solana_signTransaction\",\n    \"solana_signMessage\",\n    \"solana_signAllTransactions\",\n    \"solana_signAndSendTransaction\"\n];\nexports.AptosMethods = [\n    \"aptos_signMessage\",\n    \"aptos_signTransaction\",\n    \"aptos_signAndSubmitTransaction\"\n];\nexports.TONMethods = [\n    \"ton_sendTransaction\",\n];\nexports.SuiMethods = [\n    \"sui_signMessage\",\n    \"sui_signPersonalMessage\",\n    \"sui_signTransactionBlock\",\n    \"sui_signAndExecuteTransactionBlock\"\n];\nexports.BtcMethods = [\n    \"btc_signMessage\",\n    \"btc_signPsbts\",\n    \"btc_send\",\n    \"btc_sendInscription\",\n    \"btc_signAndPushPsbt\",\n    \"btc_inscribeTransfer\",\n    \"btc_sendRunes\"\n];\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./InjectUtils\"), exports);\n__exportStar(require(\"./provider\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AptosProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nconst media_1 = require(\"../../utils/media\");\nclass AptosProvider {\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                (0, utils_1.logDebug)(\"AptosProvider send request:\", (0, utils_1.safeJsonStringify)(request));\n                yield this.restoreConnect();\n                const method = request.method;\n                let result;\n                switch (method) {\n                    case \"aptos_signMessage\":\n                        {\n                            if (request.injectParams) {\n                                let message = yield window.okxwallet.aptos.signMessage(request.injectParams);\n                                result = {\n                                    method: request.method,\n                                    result: message.signature,\n                                };\n                                (0, utils_1.logDebug)(\"AptosProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                                return result;\n                            }\n                            else {\n                                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `param is error method: '${method}'`);\n                            }\n                        }\n                        break;\n                    case \"aptos_signTransaction\":\n                        {\n                            (0, utils_1.logDebug)(\"AptosProvider Method>>>> :\", method);\n                            let message = yield window.okxwallet.aptos.signTransaction(request.params);\n                            result = {\n                                method: request.method,\n                                result: message,\n                            };\n                            (0, utils_1.logDebug)(\"AptosProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                            return result;\n                        }\n                        break;\n                    case \"aptos_signAndSubmitTransaction\":\n                        {\n                            (0, utils_1.logDebug)(\"AptosProvider Method>>>> :\", method);\n                            let message = yield window.okxwallet.aptos.signAndSubmitTransaction(request.params);\n                            result = {\n                                method: request.method,\n                                result: message.hash,\n                            };\n                            (0, utils_1.logDebug)(\"AptosProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                            return result;\n                        }\n                        break;\n                    default:\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, ` method: '${method}'`);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"AptosProvider send error:\", error);\n                throw error;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    disconnect() {\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return window.okxwallet.aptos.connect();\n        }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let connectChain = [];\n            connectWalletNameSpace.forEach(item => {\n                if (item.namespace === protocol_1.NameSpaceKeyAptos) {\n                    connectChain.push(...item.chains);\n                }\n            });\n            let addresses = [];\n            let extra = {};\n            (0, utils_1.logDebug)(\"AptosProvider parseConnectResponse connectChain\", JSON.stringify(connectChain));\n            connectChain.forEach((chainStr) => {\n                let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                    return (addressItem.chainId === \"637\" && addressItem.coinType === 637) || (addressItem.namespaceChainId === chainStr);\n                });\n                if (selectedAddress) {\n                    addresses.push(chainStr + \":\" + selectedAddress.address);\n                    extra[chainStr] = {\n                        publicKey: selectedAddress.publicKey\n                    };\n                }\n            });\n            (0, utils_1.logDebug)(\"AptosProvider parseConnectResponse addresses\", JSON.stringify(addresses));\n            if (addresses && addresses.length > 0) {\n                let nameSpaceResponse = {\n                    namespace: protocol_1.NameSpaceKeyAptos,\n                    addresses: addresses,\n                    methods: [...InjectUtils_1.AptosMethods],\n                    extra: extra\n                };\n                return nameSpaceResponse;\n            }\n            return undefined;\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return window.okxwallet.aptos.connect();\n        });\n    }\n    singleConnect() {\n        return this.connect();\n    }\n}\nexports.AptosProvider = AptosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SolProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass SolProvider {\n    // TOOD\n    // 问题: 是否需要切链  不切链, 主网 测试网络  sonic 如何区别\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                yield this.restoreConnect();\n                (0, utils_1.logDebug)(\"SolProvider send request:\", JSON.stringify(request));\n                const method = request.method;\n                let result;\n                if (request.injectParams) {\n                    switch (method) {\n                        case \"solana_signMessage\":\n                            {\n                                if (request.injectParams && typeof request.injectParams === 'object' && 'message' in request.injectParams) {\n                                    var message = (_a = request.injectParams) === null || _a === void 0 ? void 0 : _a.message;\n                                    const encodedMessage = new TextEncoder().encode(message);\n                                    const signedMessage = yield window.okxwallet.solana.signMessage(encodedMessage, \"utf8\");\n                                    result = {\n                                        method: request.method,\n                                        result: bs58_1.default.encode(signedMessage.signature),\n                                    };\n                                    (0, utils_1.logDebug)(\"SolProvider send result:\", JSON.stringify(signedMessage));\n                                    return result;\n                                }\n                                else {\n                                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `param is error method: '${method}'`);\n                                }\n                            }\n                            break;\n                        case \"solana_signTransaction\":\n                            {\n                                let bufferResult = yield window.okxwallet.solana.signTransaction(request.injectParams);\n                                (0, utils_1.logDebug)(\"SolProvider send bufferResult:\", JSON.stringify(bufferResult));\n                                result = {\n                                    method: request.method,\n                                    injectResult: bufferResult,\n                                };\n                                (0, utils_1.logDebug)(\"SolProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                                return result;\n                            }\n                            break;\n                        case \"solana_signAllTransactions\":\n                            {\n                                let allResult = yield window.okxwallet.solana.signAllTransactions(request.injectParams);\n                                (0, utils_1.logDebug)(\"SolProvider send result:\", (0, utils_1.safeJsonStringify)(allResult));\n                                result = {\n                                    method: request.method,\n                                    injectResult: allResult,\n                                };\n                                return result;\n                            }\n                            break;\n                        case \"solana_signAndSendTransaction\":\n                            {\n                                var signAndSendResult = yield window.okxwallet.solana.signAndSendTransaction(request.injectParams);\n                                (0, utils_1.logDebug)(\"SolProvider send result:\", (0, utils_1.safeJsonStringify)(signAndSendResult));\n                                result = {\n                                    method: request.method,\n                                    injectResult: signAndSendResult,\n                                };\n                                return result;\n                            }\n                            break;\n                        default:\n                            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, `method: '${method}'`);\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `param is error method: '${method}'`);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"SolProvider send error:\", error);\n                throw error;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    disconnect() {\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return this.connect();\n        }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let connectChain = [];\n            connectWalletNameSpace.forEach(item => {\n                if (item.namespace === protocol_1.NameSpaceKeySOL) {\n                    connectChain.push(...item.chains);\n                }\n            });\n            let addresses = [];\n            let extra = {};\n            let accounts = {};\n            // if (!isDevice(\"mobile\")){\n            //      accounts = await window.okxwallet.solana.connect()\n            //     logDebug(\"parseConnectResponse solana.connect() :\",JSON.stringify(accounts))\n            // }\n            connectChain.forEach((chainStr) => {\n                let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                    return (addressItem.chainId === \"501\" && addressItem.coinType === 501)\n                        || (addressItem.namespaceChainId === chainStr);\n                });\n                if (selectedAddress) {\n                    addresses.push(chainStr + \":\" + selectedAddress.address);\n                    if (accounts && \"publicKey\" in accounts) {\n                        extra[chainStr] = accounts;\n                    }\n                    else {\n                        extra[chainStr] = {\n                            publicKey: selectedAddress.publicKey\n                        };\n                    }\n                }\n            });\n            if (addresses && addresses.length > 0) {\n                let nameSpaceResponse = {\n                    namespace: protocol_1.NameSpaceKeySOL,\n                    addresses: addresses,\n                    methods: [...InjectUtils_1.SOLANAMethods],\n                    extra: extra\n                };\n                (0, utils_1.logDebug)(\"parseConnectResponse nameSpaceResponse :\", JSON.stringify(nameSpaceResponse));\n                return nameSpaceResponse;\n            }\n            return undefined;\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return window.okxwallet.solana.connect();\n        });\n    }\n    singleConnect() {\n        return this.connect();\n    }\n}\nexports.SolProvider = SolProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TONProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass TONProvider {\n    constructor() {\n        this.signalChainConnectResult = undefined;\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                (0, utils_1.logDebug)(\"TONProvider send request:\", (0, utils_1.safeJsonStringify)(request));\n                // await this.restoreConnect()//To initialize data in Discover\n                let tonParams = null;\n                switch (request.method) {\n                    case \"ton_sendTransaction\":\n                        if (request.params) {\n                            tonParams = {\n                                method: \"sendTransaction\",\n                                params: [JSON.stringify(request.params)],\n                                id: Date.now().toString()\n                            };\n                            (0, utils_1.logDebug)(\"TONProvider tonParams first:\", JSON.stringify(tonParams));\n                        }\n                        break;\n                    default:\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n                if (tonParams) {\n                    const resultMe = yield window.okxTonWallet.tonconnect.send(tonParams);\n                    (0, utils_1.logDebug)(\"TONProvider send request result:\", (0, utils_1.safeJsonStringify)(resultMe));\n                    if (resultMe.error) {\n                        throw new protocol_1.OKXConnectError(resultMe.error.code, resultMe.error.message);\n                    }\n                    return {\n                        result: resultMe.result,\n                        method: request.method,\n                    };\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"TONProvider encountered an error:\", error);\n                throw error;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    restoreConnect() {\n        // if (isDevice(\"mobile\") && window.okxTonWallet){\n        //     return  window.okxTonWallet.tonconnect.restoreConnection()\n        // }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeyTON) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                connectChain.forEach((chainStr) => {\n                    let currentChain = (0, utils_1.getChainId)(chainStr);\n                    let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                        return (addressItem.chainId === \"607\" && addressItem.coinType === 607)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                    if (selectedAddress) {\n                        addresses.push(chainStr + \":\" + selectedAddress.address);\n                        extra[chainStr] = {\n                            publicKey: selectedAddress.publicKey\n                        };\n                    }\n                });\n                (0, utils_1.logDebug)(\"tonprovider parseConnectResponse needPop and addresses: \", needPop, JSON.stringify(addresses));\n                if (addresses && addresses.length > 0) {\n                    let tonItem = connectWalletNameSpace.find(tonItem => {\n                        return tonItem.namespace === protocol_1.NameSpaceKeyTON;\n                    });\n                    (0, utils_1.logDebug)(\"tonprovider parseConnectResponse ton: \", JSON.stringify(tonItem));\n                    let tonResult = undefined;\n                    if (tonItem && tonItem.params && dappInfo && dappInfo.manifestUrl) {\n                        this.dappInfo = dappInfo;\n                        let itmes = [tonItem.params.ton_addr];\n                        let params = {\n                            manifestUrl: dappInfo.manifestUrl,\n                            items: itmes\n                        };\n                        let needProof = needPop || accountChange;\n                        if (needProof && tonItem.params.ton_proof) {\n                            itmes.push(tonItem.params.ton_proof);\n                        }\n                        (0, utils_1.logDebug)(\"parseConnectResponse ton connect params: \", JSON.stringify(params));\n                        if ((0, media_1.isDevice)(\"mobile\")) {\n                            tonResult = (yield window.okxTonWallet.tonconnect.connect(2, params));\n                        }\n                        else {\n                            if (needPop || accountChange) {\n                                tonResult = (yield window.okxTonWallet.tonconnect.connect(2, params));\n                            }\n                            else {\n                                //No proof is needed here, the result is only used for address verification\n                                tonResult = (yield window.okxTonWallet.tonconnect.restoreConnection());\n                            }\n                        }\n                    }\n                    else {\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"manifestUrl is nil\");\n                    }\n                    if (signalChain && this.signalChainConnectResult) {\n                        tonResult = this.signalChainConnectResult;\n                        this.signalChainConnectResult = undefined;\n                    }\n                    (0, utils_1.logDebug)(\"parseConnectResponse ton connect result: \", JSON.stringify(tonResult));\n                    if (tonResult && tonItem) {\n                        if (tonResult.event === \"connect_error\") {\n                            throw new protocol_1.OKXConnectError(tonResult.payload.code, tonResult.payload.message);\n                        }\n                        else {\n                            let ton_addr = tonResult.payload.items.find(item => item.name === \"ton_addr\");\n                            let ton_proof = tonResult.payload.items.find(item => item.name === \"ton_proof\");\n                            (0, utils_1.logDebug)(\"tonprovider connect isSignalChain: \", signalChain);\n                            let nameSpaceResponse = {\n                                namespace: protocol_1.NameSpaceKeyTON,\n                                addresses: addresses,\n                                methods: [...InjectUtils_1.TONMethods],\n                                extra: extra,\n                                data: {\n                                    ton_addr: ton_addr,\n                                    ton_proof: ton_proof,\n                                    manifestUrl: dappInfo.manifestUrl\n                                }\n                            };\n                            return nameSpaceResponse;\n                        }\n                    }\n                }\n                return undefined;\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"tonprovider parseConnectResponse error: \", JSON.stringify(error));\n                throw error;\n            }\n        });\n    }\n    connect(nameSpace, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (nameSpace && dappInfo && dappInfo.manifestUrl && nameSpace.params) {\n                this.dappInfo = dappInfo;\n                let itmes = [nameSpace.params.ton_addr];\n                let params = {\n                    manifestUrl: dappInfo.manifestUrl,\n                    items: itmes\n                };\n                if (nameSpace.params.ton_proof) {\n                    itmes.push(nameSpace.params.ton_proof);\n                }\n                (0, utils_1.logDebug)(\"tonprovider connect params: \", JSON.stringify(params));\n                try {\n                    let tonResult = yield window.okxTonWallet.tonconnect.connect(2, params);\n                    (0, utils_1.logDebug)(\"tonprovider connect tonResult: \", JSON.stringify(tonResult));\n                    this.signalChainConnectResult = tonResult;\n                    return tonResult;\n                }\n                catch (error) {\n                    (0, utils_1.logDebug)(\"tonprovider connect error: \", JSON.stringify(error));\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"tonconnect error\");\n                }\n            }\n            else {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"manifestUrl or params is nil\");\n            }\n        });\n    }\n    singleConnect(nameSpace, dappInfo) {\n        return this.connect(nameSpace, dappInfo);\n    }\n}\nexports.TONProvider = TONProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BtcProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nconst media_1 = require(\"../../utils/media\");\nclass BtcProvider {\n    connect(chain) {\n        return this.getOKXWallet(chain).connect();\n    }\n    getOKXWallet(chain) {\n        switch (chain) {\n            case protocol_1.BTC_CHAINS.MAINNET:\n                return window.okxwallet.bitcoin;\n            case protocol_1.BTC_CHAINS.FRACTAL:\n                return window.okxwallet.fractalBitcoin;\n        }\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, \"Incorrect chain ID when getOKXWallet\");\n    }\n    connectReady() {\n        return true;\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeyBtc) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                if (connectChain.length == 0) {\n                    return undefined;\n                }\n                const findAddress = (addresses, chainStr) => {\n                    return addresses.find((addressItem) => {\n                        const matchCoin = (addressItem.name === 'bitcoin' && chainStr === protocol_1.BTC_CHAINS.MAINNET)\n                            || (addressItem.name === 'fractalbitcoin' && chainStr === protocol_1.BTC_CHAINS.FRACTAL);\n                        return (addressItem.coinType === 0 && matchCoin)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                };\n                const processChain = (chainStr) => __awaiter(this, void 0, void 0, function* () {\n                    let selectedAddress = findAddress(connectRequestWalletResponse.address, chainStr);\n                    if (!selectedAddress)\n                        return;\n                    let accounts = yield this.connect(chainStr);\n                    addresses.push(chainStr + \":\" + selectedAddress.address);\n                    extra[chainStr] = {\n                        publicKey: accounts.publicKey,\n                        compressedPublicKey: accounts.compressedPublicKey\n                    };\n                });\n                const promises = connectChain.map(processChain);\n                yield Promise.all(promises);\n                if (addresses && addresses.length > 0) {\n                    let nameSpaceResponse = {\n                        namespace: protocol_1.NameSpaceKeyBtc,\n                        addresses: addresses,\n                        methods: [...InjectUtils_1.BtcMethods],\n                        extra: extra\n                    };\n                    return nameSpaceResponse;\n                }\n                return undefined;\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n    restoreConnect(chain) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if ((0, media_1.isDevice)(\"mobile\")) {\n                return this.connect(chain);\n            }\n            return Promise.resolve();\n        });\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                (0, utils_1.logDebug)(\"btcProvider send request:\", JSON.stringify(request));\n                const method = request.method;\n                const chain = request.chainId;\n                yield this.restoreConnect(chain);\n                let result;\n                if (request.params) {\n                    switch (method) {\n                        case \"btc_signMessage\": {\n                            const { signStr, type } = (request.params || {});\n                            const signature = yield window.okxwallet.bitcoin.signMessage(signStr, type);\n                            return {\n                                method: request.method,\n                                result: signature,\n                            };\n                        }\n                        case \"btc_send\": {\n                            const { from, to, value, satBytes } = (request.params || {});\n                            const hash = yield window.okxwallet.bitcoin.send({ from, to, value, satBytes });\n                            return {\n                                method: request.method,\n                                result: hash,\n                            };\n                        }\n                        case \"btc_signPsbts\": {\n                            const { psbtHexs, options } = (request.params || {});\n                            const signatures = yield window.okxwallet.bitcoin.signPsbts(psbtHexs, options);\n                            return {\n                                method: request.method,\n                                result: (0, utils_1.safeJsonStringify)(signatures),\n                            };\n                        }\n                        case \"btc_signAndPushPsbt\": {\n                            const { psbtHex, options } = (request.params || {});\n                            const signedPsbt = yield window.okxwallet.bitcoin.signPsbt(psbtHex, options);\n                            const hash = yield window.okxwallet.bitcoin.pushPsbt(signedPsbt);\n                            return {\n                                method: request.method,\n                                result: hash,\n                            };\n                        }\n                        case \"btc_sendInscription\": {\n                            const { address, inscriptionId, options } = (request.injectParams || {});\n                            const result = yield window.okxwallet.bitcoin.sendInscription(address, inscriptionId, options);\n                            return {\n                                method: request.method,\n                                result: result,\n                            };\n                        }\n                        // case \"btc_sendRunes\": {\n                        //     const {address,inscriptionId, options} = (request.injectParams || {}) as Record<string, unknown>;\n                        //     // const result = await window.okxwallet.bitcoin.signPsbt(address,inscriptionId,options)\n                        //     // return {\n                        //     //     method: request.method,\n                        //     //     result: result,\n                        //     // };\n                        // }\n                        case \"btc_inscribeTransfer\": {\n                            if ((0, media_1.isDevice)('mobile')) {\n                                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, `method: '${method}'`);\n                            }\n                            const { ticker, amount } = (request.params || {});\n                            const result = yield window.okxwallet.bitcoin.inscribeTransfer(ticker, amount);\n                            return {\n                                method: request.method,\n                                result: result,\n                            };\n                        }\n                        default:\n                            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, `method: '${method}'`);\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, `param is error method: '${method}'`);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"BtcProvider send error:\", error);\n                throw error;\n            }\n        });\n    }\n    singleConnect(itemNameSpace) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (itemNameSpace.chains.length == 1) {\n                return this.connect(itemNameSpace.chains[0]);\n            }\n            return false;\n        });\n    }\n}\nexports.BtcProvider = BtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Eip155Provider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass Eip155Provider {\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                (0, utils_1.logDebug)(\"Eip155Provider send request:\", (0, utils_1.safeJsonStringify)(request));\n                yield this.restoreConnect(); //To initialize data in Discover\n                let ethParams = null;\n                switch (request.method) {\n                    case \"personal_sign\":\n                        if (request.params && \"message\" in request.params) {\n                            ethParams = {\n                                method: request.method,\n                                params: [\n                                    request.params.message,\n                                    request.address,\n                                ],\n                            };\n                        }\n                        break;\n                    case \"eth_sendTransaction\":\n                    case \"wallet_addEthereumChain\":\n                    case \"wallet_switchEthereumChain\":\n                        {\n                            if (request.params) {\n                                ethParams = {\n                                    method: request.method,\n                                    params: [request.params],\n                                };\n                            }\n                        }\n                        break;\n                    case \"eth_signTypedData_v4\":\n                        {\n                            if (request.params && \"typedDataJson\" in request.params && ((_a = request.params) === null || _a === void 0 ? void 0 : _a.typedDataJson) && typeof request.params.typedDataJson === \"string\") {\n                                ethParams = {\n                                    method: request.method,\n                                    params: [\n                                        request.address,\n                                        request.params.typedDataJson,\n                                    ],\n                                };\n                            }\n                        }\n                        break;\n                    case \"wallet_watchAsset\":\n                        {\n                            if (request.params) {\n                                ethParams = {\n                                    method: request.method,\n                                    params: request.params,\n                                };\n                            }\n                        }\n                        break;\n                    default:\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n                if (ethParams) {\n                    // 特殊处理 \"wallet_switchEthereumChain\"\n                    if ((request.method === \"wallet_switchEthereumChain\" || request.method === \"wallet_addEthereumChain\")\n                        && request.params\n                        && \"chainId\" in request.params) {\n                        (0, utils_1.logDebug)(\"Eip155Provider send request switch requestParams:\", (0, utils_1.safeJsonStringify)(ethParams));\n                        const switchChainId = parseInt(request.params.chainId, 16).toString();\n                        yield window.okxwallet.request(ethParams);\n                        const resultSwitch = `eip155:${switchChainId}:${request.address}`;\n                        (0, utils_1.logDebug)(\"Eip155Provider send request switch result:\", resultSwitch);\n                        return {\n                            result: resultSwitch,\n                            method: request.method,\n                        };\n                    }\n                    else {\n                        const chain = (0, utils_1.getChainId)(request.chainId);\n                        const chainHex = `0x${Number(chain).toString(16)}`;\n                        (0, utils_1.logDebug)(\"Eip155Provider current chainId:\", chain, chainHex);\n                        if (chainHex) {\n                            yield window.okxwallet.request({\n                                method: \"wallet_switchEthereumChain\",\n                                params: [{ chainId: chainHex }],\n                            });\n                            (0, utils_1.logDebug)(\"Eip155Provider send request requestParams:\", chainHex, (0, utils_1.safeJsonStringify)(ethParams));\n                            const resultMe = yield window.okxwallet.request(ethParams);\n                            (0, utils_1.logDebug)(\"Eip155Provider send request result:\", (0, utils_1.safeJsonStringify)(resultMe));\n                            return {\n                                result: resultMe,\n                                method: request.method,\n                            };\n                        }\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"Eip155Provider encountered an error:\", error);\n                throw error;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return window.okxwallet.request({ method: 'eth_requestAccounts' });\n        }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeyEip155) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                connectChain.forEach((chainStr) => {\n                    let currentChain = (0, utils_1.getChainId)(chainStr);\n                    let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                        return (addressItem.chainId === currentChain && addressItem.coinType === 60)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                    if (selectedAddress) {\n                        addresses.push(chainStr + \":\" + selectedAddress.address);\n                        extra[chainStr] = {\n                            publicKey: selectedAddress.publicKey\n                        };\n                    }\n                });\n                if (addresses && addresses.length > 0) {\n                    let nameSpaceResponse = {\n                        namespace: protocol_1.NameSpaceKeyEip155,\n                        addresses: addresses,\n                        methods: [...InjectUtils_1.Eip55Methods],\n                        extra: extra\n                    };\n                    return nameSpaceResponse;\n                }\n                return undefined;\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return window.okxwallet.request({ method: 'eth_requestAccounts' });\n        });\n    }\n    singleConnect() {\n        return this.connect();\n    }\n}\nexports.Eip155Provider = Eip155Provider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./eip155Provider\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SuiProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass SuiProvider {\n    constructor() {\n        // const GlobalWallet: {\n        //     [key: string]: any;\n        //     register: (wallet: any) => void;\n        // } = {\n        //     register: (wallet) => {\n        //         GlobalWallet[wallet.chainName] = wallet; // 动态添加属性\n        //     },\n        // }\n        // const event = new CustomEvent('wallet-standard:app-ready', { detail: GlobalWallet });\n        // window.dispatchEvent(event);\n        // this.suiWallet = GlobalWallet[\"suiMainnet\"]\n    }\n    connectReady() {\n        return true;\n    }\n    getSuiPublicKey() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const suiAccount = yield this.connect();\n            let publicKey = suiAccount.accounts[0].publicKey;\n            return publicKey;\n        });\n    }\n    parseConnectResponse(needPop, accountChange, signalChain, connectWalletNameSpace, connectRequestWalletResponse, dappInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeySui) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                if (connectChain.length == 0) {\n                    return undefined;\n                }\n                const suiPublicKey = yield this.getSuiPublicKey();\n                connectChain.forEach((chainStr) => {\n                    var _a;\n                    let currentChain = (0, utils_1.getChainId)(chainStr);\n                    let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                        return (addressItem.coinType === 784)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                    if (selectedAddress) {\n                        addresses.push(chainStr + \":\" + selectedAddress.address);\n                        extra[chainStr] = {\n                            publicKey: (_a = selectedAddress.publicKey) !== null && _a !== void 0 ? _a : suiPublicKey\n                        };\n                    }\n                });\n                if (addresses && addresses.length > 0) {\n                    let nameSpaceResponse = {\n                        namespace: protocol_1.NameSpaceKeySui,\n                        addresses: addresses,\n                        methods: [...InjectUtils_1.SuiMethods],\n                        extra: extra\n                    };\n                    return nameSpaceResponse;\n                }\n                return undefined;\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return this.connect();\n        }\n        return Promise.resolve();\n    }\n    getSuiWallet() {\n        return window.okxwallet.sui;\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this.restoreConnect();\n                (0, utils_1.logDebug)(\"suiProvider send request:\", JSON.stringify(request));\n                const method = request.method;\n                let result;\n                if (request.injectParams && this.getSuiWallet()) {\n                    let originalRarams = request.injectParams;\n                    switch (method) {\n                        case \"sui_signTransactionBlock\":\n                            const injectSignResult = yield this.getSuiWallet().features['sui:signTransactionBlock'].signTransactionBlock(originalRarams);\n                            //{transactionBlockBytes: 'AAACAAhmAAAAAAAAAAAgcveY+LcJkCRT1LtVxlZh6eBBVKUGdl…7bLNXSJ4Qz1jZurage0aGdH6Zb+4CAAAAAAAAIAo1AAAAAAAA', hash: '2pxcesyfKVCs3EegDYUDeQ28m3V3tn5VR32aUZSdg3dc', signature: 'ADDzSloxm5wEQX4BaTMJEON9t/xGgZ66ybiy5uT4TUimdl6Q9/…NeA3YOy/QsAD4XwjQ0rSuNkeKyfNy+VZPtJsmnKWswbGHSw=='}\n                            result = {\n                                method: \"sui_signTransactionBlock\",\n                                result: injectSignResult.signature\n                            };\n                            break;\n                        case \"sui_signAndExecuteTransactionBlock\":\n                            const injectSendResult = yield this.getSuiWallet().features['sui:signAndExecuteTransactionBlock'].signAndExecuteTransactionBlock(originalRarams);\n                            result = {\n                                method: \"sui_signAndExecuteTransactionBlock\",\n                                result: injectSendResult.digest\n                            };\n                            break;\n                        case \"sui_signMessage\":\n                            const injectResult = yield this.getSuiWallet().features['sui:signMessage'].signMessage(originalRarams);\n                            result = {\n                                method: \"sui_signMessage\",\n                                result: injectResult.signature\n                            };\n                            break;\n                        case \"sui_signPersonalMessage\":\n                            const injectPersonalResult = yield this.getSuiWallet().features['sui:signPersonalMessage'].signPersonalMessage(originalRarams);\n                            result = {\n                                method: \"sui_signPersonalMessage\",\n                                result: injectPersonalResult.signature\n                            };\n                            break;\n                    }\n                }\n                return result;\n            }\n            catch (e) {\n                (0, utils_1.logDebug)(\"suiProvider send error:\", e);\n                throw e;\n            }\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            return (_a = this.getSuiWallet()) === null || _a === void 0 ? void 0 : _a.features['standard:connect'].connect();\n        });\n    }\n    singleConnect() {\n        return this.connect();\n    }\n}\nexports.SuiProvider = SuiProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TON_CHAINS = exports.COSMOS_CHAINS = exports.APTOS_CHAINS = exports.SUI_CHAINS = exports.SOLANA_CHAINS = exports.BTC_CHAINS = void 0;\nexports.BTC_CHAINS = {\n    MAINNET: 'btc:mainnet',\n    FRACTAL: 'fractal:mainnet',\n};\nexports.SOLANA_CHAINS = {\n    MAINNET: 'solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp',\n    TESTNET: 'solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z',\n    SONIC_TESTNET: 'sonic:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z'\n};\nexports.SUI_CHAINS = {\n    MAINNET: 'sui:mainnet'\n};\nexports.APTOS_CHAINS = {\n    MAINNET: 'aptos:mainnet' // aptos mainnet\n};\nexports.COSMOS_CHAINS = {\n    COSMOS_MAINNET: 'cosmos:cosmoshub-4'\n};\nexports.TON_CHAINS = {\n    MAINNET: 'ton:-239', // mainnet\n};\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IEngine = exports.ISignClient = exports.ISignClientEvents = exports.IEngineEvents = void 0;\nconst eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\nclass IEngineEvents extends eventemitter3_1.default {\n    constructor() {\n        super();\n    }\n}\nexports.IEngineEvents = IEngineEvents;\nclass ISignClientEvents extends eventemitter3_1.default {\n    constructor() {\n        super();\n    }\n}\nexports.ISignClientEvents = ISignClientEvents;\nclass ISignClient {\n    constructor(data) {\n        this.data = data;\n    }\n}\nexports.ISignClient = ISignClient;\nclass IEngine {\n    constructor(client) {\n        this.client = client;\n    }\n}\nexports.IEngine = IEngine;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXWalletName = exports.creatOKXInjectWalletInfo = exports.creatOKXMiniAppWalletInfo = exports.creatOKXWalletInfo = exports.ISignClientEvents = exports.IEngine = exports.IEngineEvents = exports.ISignClient = exports.getBigIntRpcId = exports.formatJsonRpcRequest = exports.isJsonRpcError = exports.isJsonRpcResponse = exports.parseConnectionError = exports.isHttpUrl = exports.formatJsonRpcError = void 0;\nvar json_rpc_1 = require(\"./json-rpc\");\nObject.defineProperty(exports, \"formatJsonRpcError\", { enumerable: true, get: function () { return json_rpc_1.formatJsonRpcError; } });\nObject.defineProperty(exports, \"isHttpUrl\", { enumerable: true, get: function () { return json_rpc_1.isHttpUrl; } });\nObject.defineProperty(exports, \"parseConnectionError\", { enumerable: true, get: function () { return json_rpc_1.parseConnectionError; } });\nObject.defineProperty(exports, \"isJsonRpcResponse\", { enumerable: true, get: function () { return json_rpc_1.isJsonRpcResponse; } });\nObject.defineProperty(exports, \"isJsonRpcError\", { enumerable: true, get: function () { return json_rpc_1.isJsonRpcError; } });\nObject.defineProperty(exports, \"formatJsonRpcRequest\", { enumerable: true, get: function () { return json_rpc_1.formatJsonRpcRequest; } });\nObject.defineProperty(exports, \"getBigIntRpcId\", { enumerable: true, get: function () { return json_rpc_1.getBigIntRpcId; } });\nvar engine_1 = require(\"./engine\");\nObject.defineProperty(exports, \"ISignClient\", { enumerable: true, get: function () { return engine_1.ISignClient; } });\nObject.defineProperty(exports, \"IEngineEvents\", { enumerable: true, get: function () { return engine_1.IEngineEvents; } });\nObject.defineProperty(exports, \"IEngine\", { enumerable: true, get: function () { return engine_1.IEngine; } });\nObject.defineProperty(exports, \"ISignClientEvents\", { enumerable: true, get: function () { return engine_1.ISignClientEvents; } });\n__exportStar(require(\"./ton\"), exports);\nvar wallet_info_1 = require(\"./wallet-info\");\nObject.defineProperty(exports, \"creatOKXWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXWalletInfo; } });\nObject.defineProperty(exports, \"creatOKXMiniAppWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXMiniAppWalletInfo; } });\nObject.defineProperty(exports, \"creatOKXInjectWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXInjectWalletInfo; } });\nObject.defineProperty(exports, \"OKXWalletName\", { enumerable: true, get: function () { return wallet_info_1.OKXWalletName; } });\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isJsonRpcPayload = isJsonRpcPayload;\nexports.isJsonRpcRequest = isJsonRpcRequest;\nexports.isJsonRpcResponse = isJsonRpcResponse;\nexports.isJsonRpcResult = isJsonRpcResult;\nexports.isJsonRpcError = isJsonRpcError;\nexports.payloadId = payloadId;\nexports.getBigIntRpcId = getBigIntRpcId;\nexports.formatJsonRpcRequest = formatJsonRpcRequest;\nexports.formatJsonRpcResult = formatJsonRpcResult;\nexports.formatJsonRpcError = formatJsonRpcError;\nexports.isReservedErrorCode = isReservedErrorCode;\nexports.getError = getError;\nexports.getErrorByCode = getErrorByCode;\nexports.formatErrorMessage = formatErrorMessage;\nexports.isHttpUrl = isHttpUrl;\nexports.isWsUrl = isWsUrl;\nexports.parseConnectionError = parseConnectionError;\nfunction isJsonRpcPayload(payload) {\n    return (typeof payload === \"object\" &&\n        \"id\" in payload &&\n        \"jsonrpc\" in payload &&\n        payload.jsonrpc === \"2.0\");\n}\nfunction isJsonRpcRequest(payload) {\n    return isJsonRpcPayload(payload) && \"method\" in payload;\n}\nfunction isJsonRpcResponse(payload) {\n    return isJsonRpcPayload(payload) && (isJsonRpcResult(payload) || isJsonRpcError(payload));\n}\nfunction isJsonRpcResult(payload) {\n    return \"result\" in payload;\n}\nfunction isJsonRpcError(payload) {\n    return \"error\" in payload;\n}\nconst okx_connect_error_1 = require(\"../error/okx-connect.error\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nclass IncrementalRandomGenerator {\n    constructor(bits) {\n        this.i = 1;\n        const typedArray = bits === 8 ? new Uint8Array(1) : bits === 16 ? new Uint16Array(1) : new Uint32Array(1);\n        if (bits) {\n            this.initialValue = tweetnacl_1.default.randomBytes(bits / 8)[0];\n        }\n        else {\n            this.initialValue = 0;\n        }\n    }\n    getNextValue() {\n        return this.initialValue + this.i++;\n    }\n}\nconst uint8Generator = new IncrementalRandomGenerator(8);\nconst uint16Generator = new IncrementalRandomGenerator(16);\nfunction payloadId() {\n    const date = Date.now() * 1000;\n    const extra = uint8Generator.getNextValue();\n    return date + extra;\n}\nfunction getBigIntRpcId() {\n    const date = BigInt(Date.now()) * BigInt(1000000);\n    const extra = BigInt(uint16Generator.getNextValue());\n    return date + extra;\n}\nfunction formatJsonRpcRequest(method, params, id) {\n    return {\n        id: id || payloadId(),\n        jsonrpc: \"2.0\",\n        method,\n        params,\n    };\n}\nfunction formatJsonRpcResult(id, result) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        result,\n    };\n}\nfunction formatJsonRpcError(id, error, data) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        error: formatErrorMessage(error, data),\n    };\n}\nfunction isReservedErrorCode(code) {\n    return okx_connect_error_1.RESERVED_ERROR_CODES.includes(code);\n}\nfunction getError(type) {\n    if (!Object.keys(okx_connect_error_1.STANDARD_ERROR_MAP).includes(type)) {\n        return okx_connect_error_1.STANDARD_ERROR_MAP[okx_connect_error_1.DEFAULT_ERROR];\n    }\n    return okx_connect_error_1.STANDARD_ERROR_MAP[type];\n}\nfunction getErrorByCode(code) {\n    const match = Object.values(okx_connect_error_1.STANDARD_ERROR_MAP).find((e) => e.code === code);\n    if (!match) {\n        return okx_connect_error_1.STANDARD_ERROR_MAP[okx_connect_error_1.DEFAULT_ERROR];\n    }\n    return match;\n}\nfunction formatErrorMessage(error, data) {\n    if (typeof error === \"undefined\") {\n        return getError(okx_connect_error_1.INTERNAL_ERROR);\n    }\n    if (typeof error === \"string\") {\n        error = Object.assign(Object.assign({}, getError(okx_connect_error_1.SERVER_ERROR)), { message: error });\n    }\n    if (typeof data !== \"undefined\") {\n        error.data = data;\n    }\n    if (isReservedErrorCode(error.code)) {\n        error = getErrorByCode(error.code);\n    }\n    return error;\n}\nfunction getUrlProtocol(url) {\n    const matches = url.match(new RegExp(/^\\w+:/, \"gi\"));\n    if (!matches || !matches.length)\n        return;\n    return matches[0];\n}\nfunction matchRegexProtocol(url, regex) {\n    const protocol = getUrlProtocol(url);\n    if (typeof protocol === \"undefined\")\n        return false;\n    return new RegExp(regex).test(protocol);\n}\nfunction isHttpUrl(url) {\n    return matchRegexProtocol(url, \"^https?:\");\n}\nfunction isWsUrl(url) {\n    return matchRegexProtocol(url, \"^wss?:\");\n}\nfunction parseConnectionError(e, url, type) {\n    return e.message.includes(\"getaddrinfo ENOTFOUND\") || e.message.includes(\"connect ECONNREFUSED\")\n        ? new Error(`Unavailable ${type} RPC url at ${url}`)\n        : e;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_ITEM_ERROR_CODES = void 0;\nvar CONNECT_ITEM_ERROR_CODES;\n(function (CONNECT_ITEM_ERROR_CODES) {\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n})(CONNECT_ITEM_ERROR_CODES || (exports.CONNECT_ITEM_ERROR_CODES = CONNECT_ITEM_ERROR_CODES = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TONCHAIN = void 0;\nvar TONCHAIN;\n(function (TONCHAIN) {\n    TONCHAIN[\"MAINNET\"] = \"-239\";\n})(TONCHAIN || (exports.TONCHAIN = TONCHAIN = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_ITEM_ERROR_CODES = exports.TONCHAIN = void 0;\nvar connect_wallet_1 = require(\"./connect-wallet\");\nObject.defineProperty(exports, \"TONCHAIN\", { enumerable: true, get: function () { return connect_wallet_1.TONCHAIN; } });\nvar connect_event_1 = require(\"./connect-event\");\nObject.defineProperty(exports, \"CONNECT_ITEM_ERROR_CODES\", { enumerable: true, get: function () { return connect_event_1.CONNECT_ITEM_ERROR_CODES; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXInjectWalletName = exports.OKXMiniWalletName = exports.OKXWalletName = void 0;\nexports.creatOKXWalletInfo = creatOKXWalletInfo;\nexports.creatOKXMiniAppWalletInfo = creatOKXMiniAppWalletInfo;\nexports.creatOKXInjectWalletInfo = creatOKXInjectWalletInfo;\nexports.OKXWalletName = \"OKX Wallet\";\nexports.OKXMiniWalletName = \"OKX Mini Wallet\";\nexports.OKXInjectWalletName = \"OKX Inject Wallet\";\nfunction creatOKXWalletInfo() {\n    return {\n        \"appName\": \"okxAppWallet\",\n        \"name\": exports.OKXWalletName,\n        \"imageUrl\": \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\"\n    };\n}\nfunction creatOKXMiniAppWalletInfo() {\n    return {\n        \"appName\": \"okxMiniApp\",\n        \"name\": exports.OKXMiniWalletName,\n        \"imageUrl\": \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\"\n    };\n}\nfunction creatOKXInjectWalletInfo() {\n    return {\n        \"appName\": \"okxInjectWallet\",\n        \"name\": exports.OKXInjectWalletName,\n        \"imageUrl\": \"\"\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_MINI_WALLET_NAME = exports.OKX_APP_WALLET_NAME = exports.stackDeepLink = exports.tgwalletAppName = exports.tgwalletName = exports.tonConnectSdkVersion = exports.shortUniversalLink = exports.standardDeeplink = exports.downloadUrl = exports.standardUniversalLink = exports.okxDeeplink = void 0;\nexports.getTestTwaUrl = getTestTwaUrl;\nexports.getTestTgTwaUrl = getTestTgTwaUrl;\nexports.getBotNameAndAppName = getBotNameAndAppName;\nexports.okxDeeplink = 'okx://web3';\nexports.standardUniversalLink = typeof window !== \"undefined\" && window.location.hostname.includes(\"okx.com\")\n    ? \"https://link.okx.com/download\"\n    : \"https://www.okx.com/download\";\nexports.downloadUrl = \"https://www.okx.com/download\";\n// export const standardUniversalLink = 'http://localhost:5173';\nexports.standardDeeplink = `${exports.okxDeeplink}/wallet/connect`;\nexports.shortUniversalLink = `https://www.okx.com/ul/connect`;\n// export const standardDeeplink = 'http://localhost:5173';\nexports.tonConnectSdkVersion = '1';\n// export const tgwalletName: string = \"TCTestqdqwdqwdqBot\"\nexports.tgwalletName = \"OKX_WALLET_BOT\";\nexports.tgwalletAppName = \"start\";\n// https://t.me/OKX_WALLET_BOT/start\nexports.stackDeepLink = 'okx://web3?stack=true';\nfunction getTestTwaUrl() {\n    return window.okxTesttwaUrl;\n}\nfunction getTestTgTwaUrl() {\n    return window.okxTestTgtwaUrl;\n}\nfunction getBotNameAndAppName(url) {\n    const urlObj = new URL(url);\n    const pathnameParts = urlObj.pathname.split('/').filter(Boolean);\n    if (pathnameParts.length >= 2) {\n        const botName = pathnameParts[0]; // 获取 'test_12312313123_bot'\n        const appName = pathnameParts[1]; // 获取 'testtest'\n        return { botName, appName };\n    }\n}\nexports.OKX_APP_WALLET_NAME = 'OKX Wallet';\nexports.OKX_MINI_WALLET_NAME = 'OKX Mini Wallet';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_CONNECT_ERROR_CODES = exports.OKXConnectError = void 0;\nvar okx_connect_error_1 = require(\"./okx-connect.error\");\nObject.defineProperty(exports, \"OKXConnectError\", { enumerable: true, get: function () { return okx_connect_error_1.OKXConnectError; } });\nObject.defineProperty(exports, \"OKX_CONNECT_ERROR_CODES\", { enumerable: true, get: function () { return okx_connect_error_1.OKX_CONNECT_ERROR_CODES; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEFAULT_ERROR = exports.STANDARD_ERROR_MAP = exports.SERVER_ERROR_CODE_RANGE = exports.RESERVED_ERROR_CODES = exports.SERVER_ERROR = exports.INTERNAL_ERROR = exports.INVALID_PARAMS = exports.METHOD_NOT_FOUND = exports.INVALID_REQUEST = exports.PARSE_ERROR = exports.OKX_CONNECT_ERROR_CODES = exports.OKXConnectError = void 0;\nclass OKXConnectError extends Error {\n    constructor(code, message) {\n        if (message == undefined) {\n            message = getDefaultMessageByCode(code);\n        }\n        super(message);\n        this.code = code;\n        this.message = `${OKXConnectError.prefix} ${message ? '\\n' + message : ''}`;\n        Object.setPrototypeOf(this, OKXConnectError.prototype);\n    }\n    toJSON() {\n        return {\n            message: this.message,\n            code: this.code\n        };\n    }\n}\nexports.OKXConnectError = OKXConnectError;\nOKXConnectError.prefix = '[OKX_CONNECT_SDK_ERROR]';\nfunction getDefaultMessageByCode(code) {\n    if (code == OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR) {\n        return \"unknown error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR) {\n        return \"bad request error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.ALREADY_CONNECTED_ERROR) {\n        return \"already connected error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR) {\n        return \"not connected error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.UNKNOWN_APP_ERROR) {\n        return \"unknown app error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n        return \"user rejects error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR_CAUSE_REGISTER) {\n        return \"wallet address are registering\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED) {\n        return \"method not supported\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.CONNECTION_ERROR) {\n        return \"connect error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED) {\n        return \"chain not supported\";\n    }\n    return \"unknown error\";\n}\nvar OKX_CONNECT_ERROR_CODES;\n(function (OKX_CONNECT_ERROR_CODES) {\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"BAD_REQUEST_ERROR\"] = 1] = \"BAD_REQUEST_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"ALREADY_CONNECTED_ERROR\"] = 11] = \"ALREADY_CONNECTED_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"NOT_CONNECTED_ERROR\"] = 12] = \"NOT_CONNECTED_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"UNKNOWN_APP_ERROR\"] = 100] = \"UNKNOWN_APP_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"USER_REJECTS_ERROR\"] = 300] = \"USER_REJECTS_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"USER_REJECTS_ERROR_CAUSE_REGISTER\"] = 301] = \"USER_REJECTS_ERROR_CAUSE_REGISTER\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"CHAIN_NOT_SUPPORTED\"] = 500] = \"CHAIN_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"WALLET_NOT_SUPPORTED\"] = 600] = \"WALLET_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"CONNECTION_ERROR\"] = 700] = \"CONNECTION_ERROR\";\n})(OKX_CONNECT_ERROR_CODES || (exports.OKX_CONNECT_ERROR_CODES = OKX_CONNECT_ERROR_CODES = {}));\nexports.PARSE_ERROR = \"PARSE_ERROR\";\nexports.INVALID_REQUEST = \"INVALID_REQUEST\";\nexports.METHOD_NOT_FOUND = \"METHOD_NOT_FOUND\";\nexports.INVALID_PARAMS = \"INVALID_PARAMS\";\nexports.INTERNAL_ERROR = \"INTERNAL_ERROR\";\nexports.SERVER_ERROR = \"SERVER_ERROR\";\nexports.RESERVED_ERROR_CODES = [-32700, -32600, -32601, -32602, -32603];\nexports.SERVER_ERROR_CODE_RANGE = [-32000, -32099];\nexports.STANDARD_ERROR_MAP = {\n    [exports.PARSE_ERROR]: { code: -32700, message: \"Parse error\" },\n    [exports.INVALID_REQUEST]: { code: -32600, message: \"Invalid Request\" },\n    [exports.METHOD_NOT_FOUND]: { code: -32601, message: \"Method not found\" },\n    [exports.INVALID_PARAMS]: { code: -32602, message: \"Invalid params\" },\n    [exports.INTERNAL_ERROR]: { code: -32603, message: \"Internal error\" },\n    [exports.SERVER_ERROR]: { code: -32000, message: \"Server error\" },\n};\nexports.DEFAULT_ERROR = exports.SERVER_ERROR;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TON_CHAINS = exports.COSMOS_CHAINS = exports.APTOS_CHAINS = exports.SUI_CHAINS = exports.SOLANA_CHAINS = exports.BTC_CHAINS = exports.downloadUrl = exports.okxDeeplink = exports.tonConnectSdkVersion = exports.standardDeeplink = exports.standardUniversalLink = exports.NameSpaceKeyStarknet = exports.NameSpaceKeyTron = exports.NameSpaceKeyCosmos = exports.NameSpaceKeyAptos = exports.NameSpaceKeyBtc = exports.NameSpaceKeySui = exports.NameSpaceKeyTON = exports.NameSpaceKeySOL = exports.NameSpaceKeyEip155 = void 0;\n__exportStar(require(\"./error\"), exports);\nvar misc_1 = require(\"./misc\");\nObject.defineProperty(exports, \"NameSpaceKeyEip155\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyEip155; } });\nObject.defineProperty(exports, \"NameSpaceKeySOL\", { enumerable: true, get: function () { return misc_1.NameSpaceKeySOL; } });\nObject.defineProperty(exports, \"NameSpaceKeyTON\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyTON; } });\nObject.defineProperty(exports, \"NameSpaceKeySui\", { enumerable: true, get: function () { return misc_1.NameSpaceKeySui; } });\nObject.defineProperty(exports, \"NameSpaceKeyBtc\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyBtc; } });\nObject.defineProperty(exports, \"NameSpaceKeyAptos\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyAptos; } });\nObject.defineProperty(exports, \"NameSpaceKeyCosmos\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyCosmos; } });\nObject.defineProperty(exports, \"NameSpaceKeyTron\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyTron; } });\nObject.defineProperty(exports, \"NameSpaceKeyStarknet\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyStarknet; } });\nvar constants_1 = require(\"./constants\");\nObject.defineProperty(exports, \"standardUniversalLink\", { enumerable: true, get: function () { return constants_1.standardUniversalLink; } });\nObject.defineProperty(exports, \"standardDeeplink\", { enumerable: true, get: function () { return constants_1.standardDeeplink; } });\nObject.defineProperty(exports, \"tonConnectSdkVersion\", { enumerable: true, get: function () { return constants_1.tonConnectSdkVersion; } });\nObject.defineProperty(exports, \"okxDeeplink\", { enumerable: true, get: function () { return constants_1.okxDeeplink; } });\nObject.defineProperty(exports, \"downloadUrl\", { enumerable: true, get: function () { return constants_1.downloadUrl; } });\n__exportStar(require(\"./connect\"), exports);\nvar chains_1 = require(\"./chains\");\nObject.defineProperty(exports, \"BTC_CHAINS\", { enumerable: true, get: function () { return chains_1.BTC_CHAINS; } });\nObject.defineProperty(exports, \"SOLANA_CHAINS\", { enumerable: true, get: function () { return chains_1.SOLANA_CHAINS; } });\nObject.defineProperty(exports, \"SUI_CHAINS\", { enumerable: true, get: function () { return chains_1.SUI_CHAINS; } });\nObject.defineProperty(exports, \"APTOS_CHAINS\", { enumerable: true, get: function () { return chains_1.APTOS_CHAINS; } });\nObject.defineProperty(exports, \"COSMOS_CHAINS\", { enumerable: true, get: function () { return chains_1.COSMOS_CHAINS; } });\nObject.defineProperty(exports, \"TON_CHAINS\", { enumerable: true, get: function () { return chains_1.TON_CHAINS; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NameSpaceKeyStarknet = exports.NameSpaceKeyTron = exports.NameSpaceKeyCosmos = exports.NameSpaceKeyAptos = exports.NameSpaceKeyBtc = exports.NameSpaceKeySui = exports.NameSpaceKeyTON = exports.NameSpaceKeySOL = exports.NameSpaceKeyEip155 = void 0;\nexports.NameSpaceKeyEip155 = \"eip155\";\nexports.NameSpaceKeySOL = \"solana\";\nexports.NameSpaceKeyTON = \"ton\";\nexports.NameSpaceKeySui = \"sui\";\nexports.NameSpaceKeyBtc = \"btc\";\nexports.NameSpaceKeyAptos = \"aptos\";\nexports.NameSpaceKeyCosmos = \"cosmos\";\nexports.NameSpaceKeyTron = \"tron\";\nexports.NameSpaceKeyStarknet = \"starknet\";\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.callForSuccess = callForSuccess;\nexports.delay = delay;\n/**\n * Function to call ton api until we get response.\n * Because ton network is pretty unstable we need to make sure response is final.\n * @param {T} fn - function to call\n * @param {CallForSuccessOptions} [options] - optional configuration options\n */\nfunction callForSuccess(fn, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b;\n        const attempts = (_a = options === null || options === void 0 ? void 0 : options.attempts) !== null && _a !== void 0 ? _a : 3;\n        const delayMs = (_b = options === null || options === void 0 ? void 0 : options.delayMs) !== null && _b !== void 0 ? _b : 800;\n        if (typeof fn !== 'function') {\n            throw new Error(`Expected a function, got ${typeof fn}`);\n        }\n        let i = 0;\n        let lastError;\n        while (i < attempts) {\n            try {\n                return yield fn();\n            }\n            catch (err) {\n                lastError = err;\n                i++;\n                if (i < attempts) {\n                    yield delay(delayMs);\n                }\n            }\n        }\n        throw lastError;\n    });\n}\n/**\n * Delays the execution of code for a specified number of milliseconds.\n * @param {number} timeout - The number of milliseconds to delay the execution.\n * @param {DelayOptions} [options] - Optional configuration options for the delay.\n * @return {Promise<void>} - A promise that resolves after the specified delay, or rejects if the delay is aborted.\n */\nfunction delay(timeout, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            var _a, _b;\n            if ((_a = options === null || options === void 0 ? void 0 : options.signal) === null || _a === void 0 ? void 0 : _a.aborted) {\n                reject(new Error('Delay aborted'));\n                return;\n            }\n            const timeoutId = setTimeout(() => resolve(), timeout);\n            (_b = options === null || options === void 0 ? void 0 : options.signal) === null || _b === void 0 ? void 0 : _b.addEventListener('abort', () => {\n                clearTimeout(timeoutId);\n                reject(new Error('Delay aborted'));\n            });\n        });\n    });\n}\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkMetaData = exports.versionCompare = exports.isBrowser = exports.isOS = exports.isMobileUserAgent = exports.openDeeplinkWithFallback = exports.openLinkBlank = exports.openLink = exports.getChainId = exports.useShortLink = exports.toSafeBase64FromBase64 = exports.isValidObject = exports.isIos = exports.base64decode = exports.base64encode = exports.splitToUint8Arrays = exports.concatUint8Arrays = exports.toHexString = exports.hexToByteArray = exports.getOKXLink = exports.openOKXUniversalLink = exports.getAppWalletShortDeepLink = exports.encodeTWAConnectURLParams = exports.encodeConnectParams = exports.openOKXTMAWalletlinkWithFallback = exports.getTelegramWalletTWAUrl = exports.getAppWalletDeepLink = exports.encodeTelegramUrlParameters = exports.isTelegramUrl = exports.openOKXDeeplinkWithFallback = exports.openOKXDeeplink = exports.getUniversalLink = exports.safeJsonStringify = exports.safeJsonParse = exports.getDefaultReporter = exports.reportEvent = exports.reportLog = exports.logWarning = exports.logError = exports.logDebug = exports.callForSuccess = void 0;\nvar call_for_success_1 = require(\"./call-for-success\");\nObject.defineProperty(exports, \"callForSuccess\", { enumerable: true, get: function () { return call_for_success_1.callForSuccess; } });\nvar log_1 = require(\"./log\");\nObject.defineProperty(exports, \"logDebug\", { enumerable: true, get: function () { return log_1.logDebug; } });\nObject.defineProperty(exports, \"logError\", { enumerable: true, get: function () { return log_1.logError; } });\nObject.defineProperty(exports, \"logWarning\", { enumerable: true, get: function () { return log_1.logWarning; } });\nObject.defineProperty(exports, \"reportLog\", { enumerable: true, get: function () { return log_1.reportLog; } });\nObject.defineProperty(exports, \"reportEvent\", { enumerable: true, get: function () { return log_1.reportEvent; } });\nObject.defineProperty(exports, \"getDefaultReporter\", { enumerable: true, get: function () { return log_1.getDefaultReporter; } });\n__exportStar(require(\"./reportconstants\"), exports);\n__exportStar(require(\"./report\"), exports);\nvar safejson_1 = require(\"./safejson\");\nObject.defineProperty(exports, \"safeJsonParse\", { enumerable: true, get: function () { return safejson_1.safeJsonParse; } });\nObject.defineProperty(exports, \"safeJsonStringify\", { enumerable: true, get: function () { return safejson_1.safeJsonStringify; } });\nvar url_1 = require(\"./url\");\nObject.defineProperty(exports, \"getUniversalLink\", { enumerable: true, get: function () { return url_1.getUniversalLink; } });\nObject.defineProperty(exports, \"openOKXDeeplink\", { enumerable: true, get: function () { return url_1.openOKXDeeplink; } });\nObject.defineProperty(exports, \"openOKXDeeplinkWithFallback\", { enumerable: true, get: function () { return url_1.openOKXDeeplinkWithFallback; } });\nObject.defineProperty(exports, \"isTelegramUrl\", { enumerable: true, get: function () { return url_1.isTelegramUrl; } });\nObject.defineProperty(exports, \"encodeTelegramUrlParameters\", { enumerable: true, get: function () { return url_1.encodeTelegramUrlParameters; } });\nObject.defineProperty(exports, \"getAppWalletDeepLink\", { enumerable: true, get: function () { return url_1.getAppWalletDeepLink; } });\nObject.defineProperty(exports, \"getTelegramWalletTWAUrl\", { enumerable: true, get: function () { return url_1.getTelegramWalletTWAUrl; } });\nObject.defineProperty(exports, \"openOKXTMAWalletlinkWithFallback\", { enumerable: true, get: function () { return url_1.openOKXTMAWalletlinkWithFallback; } });\nObject.defineProperty(exports, \"encodeConnectParams\", { enumerable: true, get: function () { return url_1.encodeConnectParams; } });\nObject.defineProperty(exports, \"encodeTWAConnectURLParams\", { enumerable: true, get: function () { return url_1.encodeTWAConnectURLParams; } });\nObject.defineProperty(exports, \"getAppWalletShortDeepLink\", { enumerable: true, get: function () { return url_1.getAppWalletShortDeepLink; } });\nObject.defineProperty(exports, \"openOKXUniversalLink\", { enumerable: true, get: function () { return url_1.openOKXUniversalLink; } });\nObject.defineProperty(exports, \"getOKXLink\", { enumerable: true, get: function () { return url_1.getOKXLink; } });\nvar utils_1 = require(\"./utils\");\nObject.defineProperty(exports, \"hexToByteArray\", { enumerable: true, get: function () { return utils_1.hexToByteArray; } });\nObject.defineProperty(exports, \"toHexString\", { enumerable: true, get: function () { return utils_1.toHexString; } });\nObject.defineProperty(exports, \"concatUint8Arrays\", { enumerable: true, get: function () { return utils_1.concatUint8Arrays; } });\nObject.defineProperty(exports, \"splitToUint8Arrays\", { enumerable: true, get: function () { return utils_1.splitToUint8Arrays; } });\nObject.defineProperty(exports, \"base64encode\", { enumerable: true, get: function () { return utils_1.base64encode; } });\nObject.defineProperty(exports, \"base64decode\", { enumerable: true, get: function () { return utils_1.base64decode; } });\nObject.defineProperty(exports, \"isIos\", { enumerable: true, get: function () { return utils_1.isIos; } });\nObject.defineProperty(exports, \"isValidObject\", { enumerable: true, get: function () { return utils_1.isValidObject; } });\nObject.defineProperty(exports, \"toSafeBase64FromBase64\", { enumerable: true, get: function () { return utils_1.toSafeBase64FromBase64; } });\nObject.defineProperty(exports, \"useShortLink\", { enumerable: true, get: function () { return utils_1.useShortLink; } });\nObject.defineProperty(exports, \"getChainId\", { enumerable: true, get: function () { return utils_1.getChainId; } });\nvar web_api_1 = require(\"./web-api\");\nObject.defineProperty(exports, \"openLink\", { enumerable: true, get: function () { return web_api_1.openLink; } });\nObject.defineProperty(exports, \"openLinkBlank\", { enumerable: true, get: function () { return web_api_1.openLinkBlank; } });\nObject.defineProperty(exports, \"openDeeplinkWithFallback\", { enumerable: true, get: function () { return web_api_1.openDeeplinkWithFallback; } });\nObject.defineProperty(exports, \"isMobileUserAgent\", { enumerable: true, get: function () { return web_api_1.isMobileUserAgent; } });\nObject.defineProperty(exports, \"isOS\", { enumerable: true, get: function () { return web_api_1.isOS; } });\nObject.defineProperty(exports, \"isBrowser\", { enumerable: true, get: function () { return web_api_1.isBrowser; } });\nvar tma_api_1 = require(\"./tma-api\");\nObject.defineProperty(exports, \"versionCompare\", { enumerable: true, get: function () { return tma_api_1.versionCompare; } });\nvar request_1 = require(\"./request\");\nObject.defineProperty(exports, \"checkMetaData\", { enumerable: true, get: function () { return request_1.checkMetaData; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getDefaultReporter = getDefaultReporter;\nexports.logDebug = logDebug;\nexports.logError = logError;\nexports.logWarning = logWarning;\nexports.reportEvent = reportEvent;\nexports.reportLog = reportLog;\nconst debug = false;\nconst forceReport = false;\nconst report_1 = require(\"./report\");\nconst defaultReporter = new report_1.OKXReporter();\nfunction getDefaultReporter() {\n    return defaultReporter;\n}\nconst packageJson = require('../../package.json');\nconst version = packageJson.version;\nfunction logDebug(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.log(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction logError(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.error(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n            if (forceReport || !debug) {\n                let content = '';\n                content += [...args].reduce((result, item) => {\n                    if (typeof item == 'string') {\n                        result += ',' + item;\n                    }\n                    else if (typeof item == 'object') {\n                        result += JSON.stringify(item);\n                    }\n                });\n                defaultReporter.sendRecordContent(content, report_1.OKXReportType.LOG, '');\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction logWarning(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.warn(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction reportEvent(type, action, content) {\n    return __awaiter(this, void 0, void 0, function* () {\n        yield defaultReporter.sendRecordContent(content, type, action);\n    });\n}\nfunction reportLog(content_1) {\n    return __awaiter(this, arguments, void 0, function* (content, action = 'default') {\n        // await defaultReporter.sendRecordContent(content, OKXReportType.LOG, action)\n    });\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mediaNotTouch = exports.mediaTouch = exports.maxWidth = void 0;\nexports.isDevice = isDevice;\nexports.media = media;\nexports.mediaMin = mediaMin;\nexports.mediaMax = mediaMax;\nexports.mediaMinMax = mediaMinMax;\nconst web_api_1 = require(\"../utils/web-api\");\nconst tma_api_1 = require(\"../utils/tma-api\");\nconst url_1 = require(\"./url\");\nconst log_1 = require(\"./log\");\nexports.maxWidth = {\n    mobile: 440,\n    tablet: 1020\n};\nfunction isDevice(device) {\n    var _a;\n    const window = (0, url_1.getWindow)();\n    if (!window) {\n        return device === 'desktop';\n    }\n    // TODO: remove this check when weba will fix viewport width\n    if ((0, tma_api_1.isTmaPlatform)('weba')) {\n        return true;\n    }\n    const width = window.innerWidth;\n    switch (device) {\n        case 'desktop':\n            return width > exports.maxWidth.tablet;\n        case 'tablet':\n            return width > exports.maxWidth.mobile;\n        default:\n        case 'mobile':\n            let isMobile = width <= exports.maxWidth.mobile || (0, web_api_1.isOS)('ios', 'android', 'ipad');\n            if (isMobile) {\n                const isTelegram = !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n                const maxTouchPoints = navigator.maxTouchPoints || 0;\n                if (isTelegram && maxTouchPoints === 0) {\n                    isMobile = false;\n                }\n                (0, log_1.logDebug)(\"isDevice mobile isTelegram and maxTouchPoints:\", isMobile, isTelegram, maxTouchPoints);\n            }\n            return isMobile;\n    }\n}\nfunction media(device) {\n    switch (device) {\n        case 'mobile':\n            return `@media (max-width: ${exports.maxWidth.mobile}px)`;\n        case 'tablet':\n            return `@media (max-width: ${exports.maxWidth.tablet}px) (min-width: ${exports.maxWidth.mobile}px)`;\n        default:\n        case 'desktop':\n            return `@media (min-width: ${exports.maxWidth.tablet}px)`;\n    }\n}\nfunction mediaMin(px) {\n    return `@media (min-width: ${px}px)`;\n}\nfunction mediaMax(px) {\n    return `@media (max-width: ${px}px)`;\n}\nfunction mediaMinMax(pxMin, pxMax) {\n    return `@media (min-width: ${pxMin}px) and (max-width: ${pxMax}px)`;\n}\nexports.mediaTouch = '@media (hover: none)';\nexports.mediaNotTouch = '@media not all and (hover: none)';\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXReporter = exports.OKXReportSide = exports.OKXReportType = exports.versionStr = void 0;\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nconst log_1 = require(\"./log\");\nconst url_1 = require(\"./url\");\nconst utils_1 = require(\"../utils\");\nconst localforage_1 = __importDefault(require(\"localforage\"));\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nexports.versionStr = '1.6.9';\nconst reportApiList = [\n    'https://www.okx.com/dappstat/wallet-connect',\n    'https://www.okx.ac/dappstat/wallet-connect'\n];\nconst reportCacheKey = 'OKX_RP_CK';\nconst reportUUIDKey = 'OKX_RP_UUID_CK';\nconst MAX_LIMIT_REPORTCOUNT = 100;\nconst DEFAULT_HTTP_HEADERS = {\n    Accept: \"*/*\",\n    \"Content-Type\": \"text/plain\",\n};\nconst DEFAULT_HTTP_METHOD = \"POST\";\nconst DEFAULT_FETCH_OPTS = {\n    headers: DEFAULT_HTTP_HEADERS,\n    method: DEFAULT_HTTP_METHOD,\n};\nexports.OKXReportType = {\n    PAGE_IN: 'page_in',\n    PAGE_OUT: 'page_out',\n    CLICK: 'click',\n    LOG: 'log',\n};\nexports.OKXReportSide = {\n    DAPP: 'dapp',\n    WALLET: 'wallet',\n};\nclass IReporter {\n}\nconst fetchWithTimeout = (url, options, timeout = 5000) => {\n    const controller = new AbortController();\n    const signal = controller.signal;\n    const fetchPromise = (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, options), { signal }));\n    const timeoutPromise = new Promise((_, reject) => setTimeout(() => {\n        controller.abort();\n        reject(new Error('Request timed out'));\n    }, timeout));\n    return Promise.race([fetchPromise, timeoutPromise]);\n};\nconst fetchListWithTimeout = (urls_1, ...args_1) => __awaiter(void 0, [urls_1, ...args_1], void 0, function* (urls, options = {}, timeout = 5000) {\n    for (const url of urls) {\n        try {\n            const controller = new AbortController();\n            const signal = controller.signal;\n            const fetchPromise = (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, options), { signal }));\n            const timeoutPromise = new Promise((_, reject) => setTimeout(() => {\n                controller.abort();\n                reject(new Error('Request timed out'));\n            }, timeout));\n            const response = yield Promise.race([fetchPromise, timeoutPromise]);\n            if (response.ok) {\n                return response;\n            }\n            if (response.status == 502) {\n                console.error(`Fetch error status 502`, url);\n                return response;\n            }\n        }\n        catch (error) {\n            console.error(`Fetch error for ${url}:`, error);\n        }\n    }\n    console.error(`'All fetch attempts failed.'`);\n    throw new Error('All fetch attempts failed.');\n});\nclass OKXReporter {\n    constructor() {\n        this.currentSide = exports.OKXReportSide.DAPP;\n        this.currentVersion = exports.versionStr;\n        this.storage = localforage_1.default.createInstance({\n            name: \"OKXReporter\"\n        });\n        this.recordList = new Array();\n        this.currentUUID = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(16));\n    }\n    configVersionAndSide(version, side, appname) {\n        this.currentVersion = version;\n        this.currentSide = side;\n        this.appName = appname;\n    }\n    get recordCacheKey() {\n        return reportCacheKey + \"@\" + this.appName;\n    }\n    get reportPlatform() {\n        if ((0, utils_1.isMobileUserAgent)()) {\n            if ((0, utils_1.isIos)()) {\n                return 'iOS';\n            }\n            else {\n                return 'android';\n            }\n        }\n        else {\n            return 'pc';\n        }\n    }\n    beginReport() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.startErrorCatching();\n            let records = yield this.storage.getItem(this.recordCacheKey);\n            let uuid = yield this.storage.getItem(reportUUIDKey);\n            if (uuid) {\n                this.currentUUID = uuid;\n            }\n            else {\n                this.storage.setItem(reportUUIDKey, this.currentUUID);\n            }\n            if (records) {\n                this.recordList = records;\n                (0, log_1.logDebug)('resume records from cache length: ', this.recordList.length);\n                yield this.sendCachedRecords();\n            }\n        });\n    }\n    startErrorCatching() {\n        let window = (0, url_1.getWindow)();\n        if (window) {\n            (0, log_1.logDebug)('begin capture console error');\n            // window.onerror = (event: Event | string, source?: string, lineno?: number, colno?: number, error?: Error) => {\n            //     logDebug('capture error info:', error, source)\n            //     this.markRecord(error?.message+'/'+error?.name+'/'+error?.stack, OKXReportType.LOG, '', this.currentSide)\n            // }\n        }\n    }\n    cachedErrors() {\n        return this.recordList;\n    }\n    sendRecord(record) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    const body = JSON.stringify(record);\n                    (0, log_1.logDebug)('[REPORT] record: ', body);\n                    const res = yield fetchListWithTimeout(reportApiList, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body: body }));\n                    (0, log_1.logDebug)('[REPORT] get rsp:', res);\n                    if (res && res.status && res.status == 200) {\n                        this.recordList = this.recordList.filter((item) => {\n                            return item.timestamp != record.timestamp || item.content != record.content;\n                        });\n                        yield this.storage.setItem(this.recordCacheKey, this.recordList);\n                        resolve(true);\n                    }\n                    else {\n                        reject(false);\n                    }\n                }\n                catch (e) {\n                    (0, log_1.logDebug)('send record error:', e);\n                    resolve(true);\n                    // reject(e)\n                }\n            }));\n        });\n    }\n    sendRecordContent(content, type, action) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            let path = (_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.location.pathname;\n            let location = (_b = (0, url_1.getWindow)()) === null || _b === void 0 ? void 0 : _b.location.origin;\n            if (path && location) {\n                location = location + path;\n            }\n            let language = (_c = (0, url_1.getWindow)()) === null || _c === void 0 ? void 0 : _c.navigator.language;\n            let ua = (_d = (0, url_1.getWindow)()) === null || _d === void 0 ? void 0 : _d.navigator.userAgent;\n            let platform = this.reportPlatform;\n            let reportItem = {\n                uuid: this.currentUUID,\n                version: this.currentVersion,\n                content: content,\n                action: action,\n                side: this.currentSide,\n                timestamp: new Date().getTime(),\n                url: location,\n                lang: language,\n                type: type,\n                platform: platform,\n                \"user-agent\": ua\n            };\n            yield this.markRecordItem(reportItem);\n            yield this.sendRecord(reportItem);\n        });\n    }\n    sendCachedRecords() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let sendList = this.recordList.map(record => this.sendRecord(record));\n                (0, log_1.logDebug)('[REPORT] submit & clean recorded caches begin @', new Date().toUTCString());\n                Promise.allSettled(sendList).then((results) => {\n                    (0, log_1.logDebug)('[REPORT] submit & clean recorded caches ends @', new Date().toUTCString());\n                    let keepIndex = [];\n                    results.forEach((result, index) => {\n                        if (result.status == \"rejected\") {\n                            keepIndex.push(index);\n                        }\n                    });\n                    this.recordList = this.recordList.filter((_, index) => !keepIndex.includes(index));\n                    this.storage.setItem(this.recordCacheKey, this.recordList).then(function (value) {\n                        resolve();\n                    }).catch(function (err) {\n                        reject(err);\n                    });\n                });\n            }));\n        });\n    }\n    markRecordItem(item) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.recordList.push(item);\n            if (this.recordList.length > MAX_LIMIT_REPORTCOUNT) {\n                let offset = this.recordList.length - MAX_LIMIT_REPORTCOUNT;\n                this.recordList.splice(0, offset);\n            }\n            return new Promise((resolve, reject) => {\n                this.storage.setItem(this.recordCacheKey, this.recordList).then(function (value) {\n                    resolve(item);\n                }).catch(function (err) {\n                    reject(err);\n                });\n            });\n        });\n    }\n    markRecord(content, type, action, side) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            let path = (_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.location.pathname;\n            let location = (_b = (0, url_1.getWindow)()) === null || _b === void 0 ? void 0 : _b.location.origin;\n            if (path && location) {\n                location = location + path;\n            }\n            let language = (_c = (0, url_1.getWindow)()) === null || _c === void 0 ? void 0 : _c.navigator.language;\n            let platform = this.reportPlatform;\n            let ua = (_d = (0, url_1.getWindow)()) === null || _d === void 0 ? void 0 : _d.navigator.userAgent;\n            let reportItem = {\n                uuid: this.currentUUID,\n                version: this.currentVersion,\n                content: content,\n                action: action,\n                side: side,\n                timestamp: new Date().getTime(),\n                url: location,\n                lang: language,\n                type: type,\n                platform: platform,\n                \"user-agent\": ua\n            };\n            return yield this.markRecordItem(reportItem);\n        });\n    }\n}\nexports.OKXReporter = OKXReporter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Report_WalletType_Key = exports.Report_Proceed_QRCode_Click = exports.Report_ChooseType_Download_Click = exports.Report_ChooseType_ConnectWallet_Click = exports.Report_Proceed_Retry_Click = exports.Report_ChooseType_ConnectWallet_View = exports.Report_Loading_ConnectWallet_View = exports.Report_Proceed_QRCode_View = exports.Report_Proceed_Proceed_View = void 0;\nexports.Report_Proceed_Proceed_View = \"OKXConnectSDK_Proceed_Proceed_View\";\nexports.Report_Proceed_QRCode_View = \"OKXConnectSDK_Proceed_QRCode_View\";\nexports.Report_Loading_ConnectWallet_View = \"OKXConnectSDK_Loading_ConnectWallet_View\";\nexports.Report_ChooseType_ConnectWallet_View = \"OKXConnectSDK_ChooseType_ConnectWallet_View\";\nexports.Report_Proceed_Retry_Click = \"OKXConnectSDK_Proceed_Retry_Click\";\nexports.Report_ChooseType_ConnectWallet_Click = \"OKXConnectSDK_ChooseType_ConnectWallet_Click\";\nexports.Report_ChooseType_Download_Click = \"OKXConnectSDK_ChooseType_Download_Click\";\nexports.Report_Proceed_QRCode_Click = \"OKXConnectSDK_Proceed_QRCode_Click\";\nexports.Report_WalletType_Key = 'wallet_type';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkMetaData = checkMetaData;\nconst protocol_1 = require(\"../protocol\");\nfunction checkMetaData(dappMetaData) {\n    if (!dappMetaData) {\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"You have to specify a `dappMetaData`in the options.\");\n    }\n    if (!dappMetaData.name) {\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"dappName is required\");\n    }\n    if (!dappMetaData.icon) {\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"icon is required\");\n    }\n    return true;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.safeJsonParse = safeJsonParse;\nexports.safeJsonStringify = safeJsonStringify;\nconst log_1 = require(\"./log\");\nconst JSONStringify = (data) => JSON.stringify(data, (_, value) => (typeof value === \"bigint\" ? value.toString() + \"n\" : value));\n/*\n  Function to parse JSON.\n  If JSON has values in our custom format BigInt (strings with \"n\" character at the end), we just parse them to BigInt values.\n  If JSON has big number values, but not in our custom format, we copy it, and in a copy we convert those values to our custom format,\n  then parse them to BigInt values.\n  Other values (not big numbers and not our custom format BigInt values) are not affected and parsed as native JSON.parse() would parse them.\n*/\nconst JSONParse = (json) => {\n    /*\n      Big numbers are found and marked using Regex with this condition:\n      Number's length is bigger than 16 || Number's length is 16 and any numerical digit of the number is greater than that of the Number.MAX_SAFE_INTEGER\n      Additionally, it skips values that are strings (between double quotes).\n      */\n    // prettier-ignore\n    // eslint-disable-next-line no-useless-escape\n    const numbersBiggerThanMaxInt = /:(\\b\\d{17,}|\\b(?:[9](?:[1-9]07199254740991|0[1-9]7199254740991|00[8-9]199254740991|007[2-9]99254740991|007199[3-9]54740991|0071992[6-9]4740991|00719925[5-9]740991|007199254[8-9]40991|0071992547[5-9]0991|00719925474[1-9]991|00719925474099[2-9])))(?=[,\\}\\]]|$)/g;\n    const serializedData = json.replace(numbersBiggerThanMaxInt, (match, group) => `:\"${group}n\"`);\n    try {\n        return JSON.parse(serializedData, (_, value) => {\n            const isCustomFormatBigInt = typeof value === \"string\" && value.match(/^\\d+n$/);\n            if (isCustomFormatBigInt)\n                return BigInt(value.substring(0, value.length - 1));\n            return value;\n        });\n    }\n    catch (e) {\n        return JSON.parse(json);\n    }\n};\nfunction safeJsonParse(value) {\n    if (typeof value !== \"string\") {\n        (0, log_1.logDebug)(value);\n        throw new Error(`Cannot safe json parse value of type ${typeof value}`);\n    }\n    try {\n        return JSONParse(value);\n    }\n    catch (e) {\n        // eslint-disable-next-line no-console\n        console.error(\"safeJsonParse error:\", e);\n        return value;\n    }\n}\nfunction safeJsonStringify(value) {\n    return typeof value === \"string\" ? value : JSONStringify(value) || \"\";\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.okxfromString = okxfromString;\nexports.okxtoString = okxtoString;\nexports.alloc = alloc;\nexports.allocUnsafe = allocUnsafe;\nconst basics_1 = require(\"multiformats/basics\");\nconst log_1 = require(\"../utils/log\");\nfunction okxfromString(string, encoding = 'utf8') {\n    const base = BASES[encoding];\n    (0, log_1.logDebug)(\"okxfromstring ====> \");\n    if (!base) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    return base.decoder.decode(`${base.prefix}${string}`);\n}\nfunction okxtoString(array, encoding = 'utf8') {\n    const base = BASES[encoding];\n    (0, log_1.logDebug)(\"okxtoString ====> \");\n    if (!base) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    return base.encoder.encode(array).substring(1);\n}\nfunction alloc(size = 0) {\n    return new Uint8Array(size);\n}\nfunction allocUnsafe(size = 0) {\n    return new Uint8Array(size);\n}\nfunction createCodec(name, prefix, encode, decode) {\n    return {\n        name,\n        prefix,\n        encoder: {\n            name,\n            prefix,\n            encode\n        },\n        decoder: { decode }\n    };\n}\nconst string = createCodec('utf8', 'u', buf => {\n    const decoder = new TextDecoder('utf8');\n    return 'u' + decoder.decode(buf);\n}, str => {\n    const encoder = new TextEncoder();\n    return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', buf => {\n    let result = 'a';\n    for (let i = 0; i < buf.length; i++) {\n        let bufNum = buf[i];\n        if (bufNum && String.fromCharCode(bufNum)) {\n            result += String.fromCharCode(bufNum);\n        }\n    }\n    return result;\n}, str => {\n    str = str.substring(1);\n    const buf = allocUnsafe(str.length);\n    for (let i = 0; i < str.length; i++) {\n        buf[i] = str.charCodeAt(i);\n    }\n    return buf;\n});\nconst BASES = Object.assign({ utf8: string, 'utf-8': string, hex: basics_1.bases.base16, latin1: ascii, ascii: ascii, binary: ascii }, basics_1.bases);\n","\"use strict\";\nvar _a, _b, _c, _d, _e, _f, _g;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isTmaPlatform = isTmaPlatform;\nexports.isInTMA = isInTMA;\nexports.inTg = inTg;\nexports.isInTelegramBrowser = isInTelegramBrowser;\nexports.sendExpand = sendExpand;\nexports.sendOpenTelegramLink = sendOpenTelegramLink;\nexports.versionCompare = versionCompare;\nconst url_1 = require(\"./url\");\nconst log_1 = require(\"./log\");\nconst protocol_1 = require(\"../protocol\");\nconst web_api_1 = require(\"./web-api\");\nlet initParams = {};\ntry {\n    let locationHash = location.hash.toString();\n    initParams = urlParseHashParams(locationHash);\n}\ncatch (e) { }\nlet tmaPlatform = 'unknown';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppPlatform) {\n    tmaPlatform = (_a = initParams.tgWebAppPlatform) !== null && _a !== void 0 ? _a : 'unknown';\n}\nif (tmaPlatform === 'unknown') {\n    const window = (0, url_1.getWindow)();\n    tmaPlatform = (_d = (_c = (_b = window === null || window === void 0 ? void 0 : window.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) === null || _c === void 0 ? void 0 : _c.platform) !== null && _d !== void 0 ? _d : 'unknown';\n}\nlet webAppVersion = '6.0';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppVersion) {\n    webAppVersion = initParams.tgWebAppVersion;\n}\nif (!webAppVersion) {\n    const window = (0, url_1.getWindow)();\n    webAppVersion = (_g = (_f = (_e = window === null || window === void 0 ? void 0 : window.Telegram) === null || _e === void 0 ? void 0 : _e.WebApp) === null || _f === void 0 ? void 0 : _f.version) !== null && _g !== void 0 ? _g : '6.0';\n}\n/**\n * Returns true if the app is running in TMA on the specified platform.\n * @param platforms\n */\nfunction isTmaPlatform(...platforms) {\n    return platforms.includes(tmaPlatform);\n}\n/**\n * Returns true if the app is running in TMA.\n */\nfunction isInTMA() {\n    var _a;\n    return tmaPlatform !== 'unknown' || !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n}\nfunction inTg() {\n    // return true\n    return isInTelegramBrowser() || isInTMA();\n}\n/**\n * Returns true if the app is running in the Telegram browser.\n */\nfunction isInTelegramBrowser() {\n    var _a;\n    const isTelegramWebview = !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebview);\n    return (isInTMA() || isTelegramWebview) && tmaPlatform === 'unknown';\n}\n/**\n * Expand the app window.\n */\nfunction sendExpand() {\n    postEvent('web_app_expand', {});\n}\n/**\n * Opens link in TMA or in new tab and returns a function that closes the tab.\n * @param link The link to open.\n * @param fallback The function to call if the link can't be opened in TMA.\n */\nfunction sendOpenTelegramLink(link, fallback) {\n    const url = new URL(link);\n    if (url.protocol !== 'http:' && url.protocol !== 'https:') {\n        if (fallback) {\n            return fallback();\n        }\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Url protocol is not supported: ${url}`);\n    }\n    if (url.hostname !== 't.me') {\n        if (fallback) {\n            return fallback();\n        }\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Url host is not supported: ${url}`);\n    }\n    const pathFull = url.pathname + url.search;\n    if (isIframe() || versionAtLeast('6.1')) {\n        postEvent('web_app_open_tg_link', { path_full: pathFull });\n    }\n    else {\n        (0, web_api_1.openLinkBlank)('https://t.me' + pathFull);\n    }\n}\nfunction isIframe() {\n    try {\n        const window = (0, url_1.getWindow)();\n        if (!window) {\n            return false;\n        }\n        return window.parent != null && window !== window.parent;\n    }\n    catch (e) {\n        return false;\n    }\n}\nfunction postEvent(eventType, eventData) {\n    try {\n        const window = (0, url_1.getWindow)();\n        if (!window) {\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Can't post event to parent window: window is not defined`);\n        }\n        if (window.TelegramWebviewProxy !== undefined) {\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.TelegramWebviewProxy.postEvent(eventType, JSON.stringify(eventData));\n        }\n        else if (window.external && 'notify' in window.external) {\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.external.notify(JSON.stringify({ eventType: eventType, eventData: eventData }));\n        }\n        else if (isIframe()) {\n            const trustedTarget = '*';\n            const message = JSON.stringify({ eventType: eventType, eventData: eventData });\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.parent.postMessage(message, trustedTarget);\n        }\n        else {\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Can't post event to TMA`);\n        }\n    }\n    catch (e) {\n        (0, log_1.logError)(`Can't post event to parent window: ${e}`);\n    }\n}\nfunction urlParseHashParams(locationHash) {\n    locationHash = locationHash.replace(/^#/, '');\n    let params = {};\n    if (!locationHash.length) {\n        return params;\n    }\n    if (locationHash.indexOf('=') < 0 && locationHash.indexOf('?') < 0) {\n        params._path = urlSafeDecode(locationHash);\n        return params;\n    }\n    let qIndex = locationHash.indexOf('?');\n    if (qIndex >= 0) {\n        let pathParam = locationHash.substr(0, qIndex);\n        params._path = urlSafeDecode(pathParam);\n        locationHash = locationHash.substr(qIndex + 1);\n    }\n    let query_params = urlParseQueryString(locationHash);\n    for (let k in query_params) {\n        params[k] = query_params[k];\n    }\n    return params;\n}\nfunction urlSafeDecode(urlencoded) {\n    try {\n        urlencoded = urlencoded.replace(/\\+/g, '%20');\n        return decodeURIComponent(urlencoded);\n    }\n    catch (e) {\n        return urlencoded;\n    }\n}\nfunction urlParseQueryString(queryString) {\n    let params = {};\n    if (!queryString.length) {\n        return params;\n    }\n    let queryStringParams = queryString.split('&');\n    let i, param, paramName, paramValue;\n    for (i = 0; i < queryStringParams.length; i++) {\n        param = queryStringParams[i].split('=');\n        paramName = urlSafeDecode(param[0]);\n        paramValue = param[1] == null ? null : urlSafeDecode(param[1]);\n        params[paramName] = paramValue;\n    }\n    return params;\n}\nfunction versionCompare(v1, v2) {\n    if (typeof v1 !== 'string')\n        v1 = '';\n    if (typeof v2 !== 'string')\n        v2 = '';\n    let v1List = v1.replace(/^\\s+|\\s+$/g, '').split('.');\n    let v2List = v2.replace(/^\\s+|\\s+$/g, '').split('.');\n    let a, i, p1, p2;\n    a = Math.max(v1List.length, v2List.length);\n    for (i = 0; i < a; i++) {\n        p1 = parseInt(v1List[i]) || 0;\n        p2 = parseInt(v2List[i]) || 0;\n        if (p1 === p2)\n            continue;\n        if (p1 > p2)\n            return 1;\n        return -1;\n    }\n    return 0;\n}\nfunction versionAtLeast(ver) {\n    return versionCompare(webAppVersion, ver) >= 0;\n}\n","\"use strict\";\nvar _a, _b, _c, _d;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.removeUrlLastSlash = removeUrlLastSlash;\nexports.addPathToUrl = addPathToUrl;\nexports.getUniversalLink = getUniversalLink;\nexports.openOKXDeeplink = openOKXDeeplink;\nexports.openOKXUniversalLink = openOKXUniversalLink;\nexports.openOKXDeeplinkWithFallback = openOKXDeeplinkWithFallback;\nexports.getWindow = getWindow;\nexports.isTelegramUrl = isTelegramUrl;\nexports.encodeTelegramUrlParameters = encodeTelegramUrlParameters;\nexports.encodeConnectParams = encodeConnectParams;\nexports.encodeTWAConnectURLParams = encodeTWAConnectURLParams;\nexports.getAppWalletDeepLink = getAppWalletDeepLink;\nexports.getAppWalletShortDeepLink = getAppWalletShortDeepLink;\nexports.getTelegramWalletTWAUrl = getTelegramWalletTWAUrl;\nexports.openOKXTMAWalletlinkWithFallback = openOKXTMAWalletlinkWithFallback;\nexports.isInTMA = isInTMA;\nexports.isInTelegramBrowser = isInTelegramBrowser;\nexports.getOKXLink = getOKXLink;\nconst protocol_1 = require(\"../protocol\");\nconst log_1 = require(\"./log\");\nconst constants_1 = require(\"../protocol/constants\");\nconst utils_1 = require(\"./utils\");\nconst tma_api_1 = require(\"./tma-api\");\nconst constants_2 = require(\"../connect/constants\");\nfunction removeUrlLastSlash(url) {\n    if (url.slice(-1) === '/') {\n        return url.slice(0, -1);\n    }\n    return url;\n}\nfunction addPathToUrl(url, path) {\n    return removeUrlLastSlash(url) + '/' + path;\n}\nfunction getUniversalLink(deeplinkUrl, useStandardUniversalLink = false) {\n    console.log(\"getUniversalLink deeplinkUrl:\", deeplinkUrl, \", useStandardUniversalLink:\", useStandardUniversalLink);\n    /*const replaceStrWithParam = `${standardDeeplink}?param=`\n    if(!useStandardUniversalLink && deeplinkUrl.startsWith(replaceStrWithParam)){\n        const cleanUrl = deeplinkUrl.replace(replaceStrWithParam, '');\n        logDebug(\"getUniversalLink cleanUrl:\",cleanUrl)\n        const deeplinkEncodeUrl= encodeURIComponent(cleanUrl);\n        logDebug(\"getUniversalLink standardUniversalLink:\",standardUniversalLink)\n        logDebug(\"getUniversalLink `${shortUniversalLink}?param=${deeplinkEncodeUrl}`:\",`${shortUniversalLink}?param=${deeplinkEncodeUrl}`)\n        return `${shortUniversalLink}?param=${deeplinkEncodeUrl}`;\n    }else if(!useStandardUniversalLink && deeplinkUrl == standardDeeplink){\n        logDebug(\"getUniversalLink shortUniversalLink:\",shortUniversalLink)\n        return shortUniversalLink;\n    }else {\n        const deeplinkEncodeUrl= encodeURIComponent(deeplinkUrl);\n        console.log(\"getUniversalLink standardUniversalLink:\",standardUniversalLink)\n\n        return `${standardUniversalLink}?deeplink=${deeplinkEncodeUrl}`;\n    }*/\n    const deeplinkEncodeUrl = encodeURIComponent(deeplinkUrl);\n    console.log(\"getUniversalLink standardUniversalLink:\", protocol_1.standardUniversalLink);\n    console.log(\"getUniversalLink standardUniversalLink:\", `${protocol_1.standardUniversalLink}?deeplink=${deeplinkEncodeUrl}`);\n    return `${protocol_1.standardUniversalLink}?deeplink=${deeplinkEncodeUrl}`;\n}\nfunction openOKXDeeplink(deeplinkUrl) {\n    var _a;\n    const fullUrl = getUniversalLink(deeplinkUrl);\n    const isTelegram = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n    console.log(\"openOKXDeeplink fullUrl:\", fullUrl);\n    if (!(0, utils_1.isIos)()) {\n        let newWindow = null;\n        if (isTelegram) {\n            newWindow = window.open(deeplinkUrl, '_blank');\n        }\n        else {\n            window.location.href = deeplinkUrl;\n        }\n    }\n    else {\n        openOKXUniversalLink(fullUrl);\n    }\n}\nfunction openOKXUniversalLink(fullUrl) {\n    if (!(0, utils_1.isIos)()) {\n        // if (isTelegram) {\n        window.open(fullUrl, '_blank');\n        // } else {\n        //     window.location.href = fullUrl;\n        // }\n    }\n    else {\n        if (isInTMA()) {\n            window.open(fullUrl, '_blank');\n        }\n        else {\n            console.log(\"windowOpen[before]: \", Date.now());\n            if (window === null || window === void 0 ? void 0 : window.okxLogDebug) {\n                window.open(fullUrl, '_blank');\n            }\n            else {\n                window.open(fullUrl, '_self');\n            }\n            console.log(\"windowOpen[after]: \", Date.now());\n        }\n    }\n}\nfunction openOKXDeeplinkWithFallback(deeplinkUrl) {\n    var _a;\n    const fullUrl = getUniversalLink(deeplinkUrl);\n    const isTelegram = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n    console.log(\"openOKXDeeplinkWithFallback fullUrl:\", fullUrl);\n    let deepLinkOpened = false;\n    const timeoutDuration = 3000; // 1.5秒的等待时间\n    const downloadUrl = protocol_1.standardUniversalLink;\n    console.log(\"openOKXDeeplinkWithFallback standardUniversalLink:\", protocol_1.standardUniversalLink);\n    if (!(0, utils_1.isIos)()) {\n        let newWindow = null;\n        var fallbackToDownloadPage = () => {\n            if (!deepLinkOpened) {\n                if (newWindow) {\n                    newWindow.open(fullUrl, '_self');\n                }\n                else {\n                    window.open(fullUrl, '_blank');\n                }\n            }\n        };\n        if (isTelegram) {\n            newWindow = window.open(deeplinkUrl, '_blank');\n        }\n        else {\n            window.location.href = deeplinkUrl;\n        }\n        setTimeout(fallbackToDownloadPage, timeoutDuration);\n        window.addEventListener('blur', () => {\n            deepLinkOpened = true;\n        }, { once: true });\n        document.addEventListener('visibilitychange', () => {\n            if (document.visibilityState === 'hidden') {\n                deepLinkOpened = true;\n            }\n        });\n    }\n    else {\n        if (isTelegram) {\n            window.open(fullUrl, '_blank');\n        }\n        else {\n            console.log(\"windowOpen[before]: \", Date.now());\n            if (window === null || window === void 0 ? void 0 : window.okxLogDebug) {\n                window.open(fullUrl, '_blank');\n            }\n            else {\n                window.open(fullUrl, '_self');\n            }\n            console.log(\"windowOpen[after]: \", Date.now());\n        }\n    }\n}\nfunction getWindow() {\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    return undefined;\n}\nfunction isTelegramUrl(link) {\n    if (!link) {\n        return false;\n    }\n    const url = new URL(link);\n    return url.protocol === 'tg:' || url.hostname === 't.me';\n}\nfunction encodeTelegramUrlParameters(parameters) {\n    let encodedParameters = parameters;\n    encodedParameters = encodedParameters.replace(/\\./g, '%2E');\n    encodedParameters = encodedParameters.replace(/-/g, '%2D');\n    encodedParameters = encodedParameters.replace(/_/g, '%5F');\n    encodedParameters = encodedParameters.replace(/&/g, '-');\n    encodedParameters = encodedParameters.replace(/=/g, '__');\n    encodedParameters = encodedParameters.replace(/%/g, '--');\n    return encodedParameters;\n}\nfunction encodeConnectParams(connectRequest) {\n    let connectRequestWithVersion = Object.assign(Object.assign({}, connectRequest), { protocolVersion: constants_2.CONNECT_PROTOCOL_VER });\n    const connectRequestStr = JSON.stringify(connectRequestWithVersion);\n    (0, log_1.logDebug)(\"url encodeConnectParams connectRequestStr \", connectRequestStr);\n    const utf8Array = new TextEncoder().encode(connectRequestStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    // .replace(/\\+/g, '-')\n    // .replace(/\\//g, '_')\n    // .replace(/=+$/, ''); //Compatible with older versions of iOS. Cannot be added directly  (Base64 URL Safe)\n    (0, log_1.logDebug)(\"url encodeConnectParams base64Encoded \", base64Encoded);\n    return base64Encoded;\n}\nfunction encodeTWAConnectURLParams(connectRequest) {\n    const connectRequestStr = JSON.stringify({ topic: connectRequest.topic, clientId: connectRequest.clientId });\n    (0, log_1.logDebug)(\"url encodeConnectParams connectRequestStr\", connectRequestStr);\n    const utf8Array = new TextEncoder().encode(connectRequestStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    return base64Encoded;\n}\nfunction getAppWalletDeepLink(connectParam) {\n    return `${protocol_1.standardDeeplink}?param=${connectParam}`;\n}\nfunction getAppWalletShortDeepLink(topic, clientId) {\n    return `${constants_1.shortUniversalLink}?topic=${topic}${(0, utils_1.getLastSixMd5Hash)(clientId)}`;\n}\n//  make telegram okx wallet TWA url\nfunction getTelegramWalletTWAUrl(connectParam, redirectStr) {\n    let base64Content = { okxconnect: \"\", redirect: \"\", extraparams: \"\", fromtg: false };\n    if (connectParam) {\n        base64Content.okxconnect = connectParam;\n    }\n    if (redirectStr) {\n        base64Content.redirect = redirectStr;\n    }\n    if (!isInTMA()) {\n        base64Content.fromtg = false;\n    }\n    else {\n        base64Content.fromtg = true;\n    }\n    (0, log_1.logDebug)('getTelegramWalletTWAUrl redirect:', base64Content.redirect);\n    let base64ContentStr = JSON.stringify(base64Content);\n    const utf8Array = new TextEncoder().encode(base64ContentStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    const urlSafeBase64 = (0, utils_1.toSafeBase64FromBase64)(base64Encoded);\n    (0, log_1.logDebug)('[TWA] open link:', base64Content, base64Encoded);\n    if (connectParam || redirectStr) {\n        if (!isInTMA()) {\n            // return `http://localhost:5173?tgWebAppStartParam=${urlSafeBase64}`\n            if ((0, constants_1.getTestTwaUrl)()) {\n                return `${(0, constants_1.getTestTwaUrl)()}?tgWebAppStartParam=${urlSafeBase64}`;\n            }\n            else if ((0, constants_1.getTestTgTwaUrl)()) {\n                let result = (0, constants_1.getBotNameAndAppName)((0, constants_1.getTestTgTwaUrl)());\n                if (result) {\n                    let { botName, appName } = result;\n                    return `tg://resolve?domain=${botName}&appname=${appName}&startapp=${urlSafeBase64}`;\n                }\n                return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}&startapp=${urlSafeBase64}`;\n            }\n            else {\n                return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}&startapp=${urlSafeBase64}`;\n            }\n        }\n        else {\n            if ((0, constants_1.getTestTgTwaUrl)()) {\n                return `${(0, constants_1.getTestTgTwaUrl)()}?startapp=${urlSafeBase64}`;\n            }\n            else {\n                return `https://t.me/${constants_1.tgwalletName}/start?startapp=${urlSafeBase64}`;\n            }\n        }\n    }\n    if (!isInTMA()) {\n        // return \"http://localhost:5173\"\n        if ((0, constants_1.getTestTwaUrl)()) {\n            return `${(0, constants_1.getTestTwaUrl)()}`;\n        }\n        else if ((0, constants_1.getTestTgTwaUrl)()) {\n            let result = (0, constants_1.getBotNameAndAppName)((0, constants_1.getTestTgTwaUrl)());\n            if (result) {\n                let { botName, appName } = result;\n                return `tg://resolve?domain=${botName}&appname=${appName}`;\n            }\n            return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}`;\n        }\n        else {\n            return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}`;\n        }\n    }\n    else {\n        if ((0, constants_1.getTestTgTwaUrl)()) {\n            return `${(0, constants_1.getTestTgTwaUrl)()}`;\n        }\n        else {\n            return `https://t.me/${constants_1.tgwalletName}/start`;\n        }\n    }\n}\n//  open TWA url in telegram\nfunction openOKXTMAWalletlinkWithFallback(twaDeepLink) {\n    var _a, _b, _c, _d, _e;\n    (0, log_1.logDebug)('[TWA] open link:', twaDeepLink, \"isInTMA ==> \", isInTMA());\n    if (!isInTMA()) {\n        if ((0, constants_1.getTestTwaUrl)()) {\n            window.open(twaDeepLink, '_blank');\n        }\n        else {\n            window.open(twaDeepLink, '_self');\n        }\n    }\n    else {\n        if ((_b = (_a = getWindow()) === null || _a === void 0 ? void 0 : _a.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) {\n            (_e = (_d = (_c = getWindow()) === null || _c === void 0 ? void 0 : _c.Telegram) === null || _d === void 0 ? void 0 : _d.WebApp) === null || _e === void 0 ? void 0 : _e.openTelegramLink(twaDeepLink);\n        }\n        else {\n            (0, tma_api_1.sendOpenTelegramLink)(twaDeepLink);\n        }\n    }\n}\n/**\n * Returns true if the app is running in TMA.\n */\nfunction urlSafeDecode(urlencoded) {\n    try {\n        urlencoded = urlencoded.replace(/\\+/g, '%20');\n        return decodeURIComponent(urlencoded);\n    }\n    catch (e) {\n        return urlencoded;\n    }\n}\nfunction urlParseQueryString(queryString) {\n    let params = {};\n    if (!queryString.length) {\n        return params;\n    }\n    let queryStringParams = queryString.split('&');\n    let i, param, paramName, paramValue;\n    for (i = 0; i < queryStringParams.length; i++) {\n        param = queryStringParams[i].split('=');\n        paramName = urlSafeDecode(param[0]);\n        paramValue = param[1] == null ? null : urlSafeDecode(param[1]);\n        params[paramName] = paramValue;\n    }\n    return params;\n}\nfunction urlParseHashParams(locationHash) {\n    locationHash = locationHash.replace(/^#/, '');\n    let params = {};\n    if (!locationHash.length) {\n        return params;\n    }\n    if (locationHash.indexOf('=') < 0 && locationHash.indexOf('?') < 0) {\n        params._path = urlSafeDecode(locationHash);\n        return params;\n    }\n    let qIndex = locationHash.indexOf('?');\n    if (qIndex >= 0) {\n        let pathParam = locationHash.substr(0, qIndex);\n        params._path = urlSafeDecode(pathParam);\n        locationHash = locationHash.substr(qIndex + 1);\n    }\n    let query_params = urlParseQueryString(locationHash);\n    for (let k in query_params) {\n        params[k] = query_params[k];\n    }\n    return params;\n}\nlet initParams = {};\ntry {\n    let locationHash = location.hash.toString();\n    initParams = urlParseHashParams(locationHash);\n}\ncatch (e) { }\nlet tmaPlatform = 'unknown';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppPlatform) {\n    tmaPlatform = (_a = initParams.tgWebAppPlatform) !== null && _a !== void 0 ? _a : 'unknown';\n}\nif (tmaPlatform === 'unknown') {\n    const window = getWindow();\n    tmaPlatform = (_d = (_c = (_b = window === null || window === void 0 ? void 0 : window.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) === null || _c === void 0 ? void 0 : _c.platform) !== null && _d !== void 0 ? _d : 'unknown';\n}\nfunction isInTMA() {\n    var _a;\n    return tmaPlatform !== 'unknown' || !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n}\n/**\n * Returns true if the app is running in the Telegram browser.\n */\nfunction isInTelegramBrowser() {\n    var _a;\n    const isTelegramWebview = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebview);\n    return (isInTMA() || isTelegramWebview) && tmaPlatform === 'unknown';\n}\nfunction getOKXLink(connectRequest, useMini = false, tmaReturnUrl) {\n    (0, log_1.logDebug)(`url  getOKXLink() called connectRequest==> ${JSON.stringify(connectRequest)}  useMini=> ${useMini}  tmaReturnUrl==> ${tmaReturnUrl}`);\n    if (useMini) {\n        if (connectRequest) {\n            var encodeTGParams = encodeTWAConnectURLParams(connectRequest);\n            return getTelegramWalletTWAUrl(encodeTGParams, tmaReturnUrl !== null && tmaReturnUrl !== void 0 ? tmaReturnUrl : \"back\");\n        }\n        else {\n            return getTelegramWalletTWAUrl(undefined, tmaReturnUrl !== null && tmaReturnUrl !== void 0 ? tmaReturnUrl : \"back\");\n        }\n    }\n    else {\n        if ((0, utils_1.useShortLink)()) {\n            if (connectRequest) {\n                return getAppWalletShortDeepLink(connectRequest.topic, connectRequest.clientId);\n            }\n            else {\n                return constants_1.shortUniversalLink;\n            }\n        }\n        else {\n            if (connectRequest) {\n                const base64Encoded = encodeConnectParams(connectRequest);\n                return `${protocol_1.standardDeeplink}?param=${base64Encoded}`;\n            }\n            else {\n                return protocol_1.standardDeeplink;\n            }\n        }\n    }\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isValidObject = exports.RANDOM_LENGTH = exports.isBrowser = exports.resolveLocalStorage = exports.hasLocalStorage = exports.hasBuiltInWebSocket = exports.resolveWebSocketImplementation = void 0;\nexports.hexToByteArray = hexToByteArray;\nexports.getChainId = getChainId;\nexports.toHexString = toHexString;\nexports.concatUint8Arrays = concatUint8Arrays;\nexports.splitToUint8Arrays = splitToUint8Arrays;\nexports.base64encode = base64encode;\nexports.base64decode = base64decode;\nexports.checkWSUrl = checkWSUrl;\nexports.hashKey = hashKey;\nexports.generateRandomBytes32 = generateRandomBytes32;\nexports.generateTopic = generateTopic;\nexports.generateGroupId = generateGroupId;\nexports.isIos = isIos;\nexports.getLastSixMd5Hash = getLastSixMd5Hash;\nexports.toSafeBase64FromBase64 = toSafeBase64FromBase64;\nexports.useShortLink = useShortLink;\nexports.replaceAptosChainName = replaceAptosChainName;\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst tweetnacl_util_1 = __importDefault(require(\"tweetnacl-util\"));\nconst to_string_1 = require(\"uint8arrays/to-string\");\nconst sha256_1 = require(\"@stablelib/sha256\");\nconst safejson_1 = require(\"./safejson\");\nconst log_1 = require(\"./log\");\nconst stringUtils_1 = require(\"../utils/stringUtils\");\nconst crypto_js_1 = __importDefault(require(\"crypto-js\"));\nconst BASE16 = \"base16\";\nfunction hexToByteArray(hexString) {\n    if (hexString.length % 2 !== 0) {\n        throw new Error(`Cannot convert ${hexString} to bytesArray`);\n    }\n    const result = new Uint8Array(hexString.length / 2);\n    for (let i = 0; i < hexString.length; i += 2) {\n        result[i / 2] = parseInt(hexString.slice(i, i + 2), 16);\n    }\n    return result;\n}\nfunction getChainId(chain) {\n    return chain.includes(\":\") ? chain.split(\":\")[1] : chain;\n}\nfunction toHexString(byteArray) {\n    let hexString = '';\n    byteArray.forEach(byte => {\n        hexString += ('0' + (byte & 0xff).toString(16)).slice(-2);\n    });\n    return hexString;\n}\nfunction concatUint8Arrays(buffer1, buffer2) {\n    const mergedArray = new Uint8Array(buffer1.length + buffer2.length);\n    mergedArray.set(buffer1);\n    mergedArray.set(buffer2, buffer1.length);\n    return mergedArray;\n}\nfunction splitToUint8Arrays(array, index) {\n    if (index >= array.length) {\n        throw new Error('Index is out of buffer');\n    }\n    const subArray1 = array.slice(0, index);\n    const subArray2 = array.slice(index);\n    return [subArray1, subArray2];\n}\nfunction encodeUint8Array(value, urlSafe) {\n    const encoded = tweetnacl_util_1.default.encodeBase64(value);\n    if (!urlSafe) {\n        return encoded;\n    }\n    return encodeURIComponent(encoded);\n}\nfunction decodeToUint8Array(value, urlSafe) {\n    if (urlSafe) {\n        value = decodeURIComponent(value);\n    }\n    return tweetnacl_util_1.default.decodeBase64(value);\n}\nfunction base64encode(value, urlSafe) {\n    let uint8Array;\n    if (value instanceof Uint8Array) {\n        uint8Array = value;\n    }\n    else {\n        if (typeof value !== 'string') {\n            value = (0, safejson_1.safeJsonStringify)(value);\n        }\n        uint8Array = tweetnacl_util_1.default.decodeUTF8(value);\n    }\n    return encodeUint8Array(uint8Array, urlSafe);\n}\nfunction base64decode(value, urlSafe) {\n    const decodedUint8Array = decodeToUint8Array(value, urlSafe);\n    return {\n        toString() {\n            return tweetnacl_util_1.default.encodeUTF8(decodedUint8Array);\n        },\n        toObject() {\n            try {\n                return (0, safejson_1.safeJsonParse)(tweetnacl_util_1.default.encodeUTF8(decodedUint8Array));\n            }\n            catch (e) {\n                return null;\n            }\n        },\n        toUint8Array() {\n            return decodedUint8Array;\n        }\n    };\n}\nfunction checkWSUrl(url) {\n    const match = url.match(new RegExp(/^\\w+:/, \"gi\"));\n    if (!match || !match.length) {\n        return false;\n    }\n    let scheme = match[0];\n    if (scheme === undefined) {\n        return false;\n    }\n    return new RegExp(\"^wss?:\").test(scheme);\n}\nconst resolveWebSocketImplementation = () => {\n    if (typeof WebSocket !== \"undefined\") {\n        return WebSocket;\n    }\n    else if (typeof global !== \"undefined\" && typeof global.WebSocket !== \"undefined\") {\n        return global.WebSocket;\n    }\n    else if (typeof window !== \"undefined\" && typeof window.WebSocket !== \"undefined\") {\n        return window.WebSocket;\n    }\n    else if (typeof self !== \"undefined\" && typeof self.WebSocket !== \"undefined\") {\n        return self.WebSocket;\n    }\n    return WebSocket;\n    //\n    // return require(\"ws\");\n};\nexports.resolveWebSocketImplementation = resolveWebSocketImplementation;\nconst hasBuiltInWebSocket = () => typeof WebSocket !== \"undefined\" ||\n    (typeof global !== \"undefined\" && typeof global.WebSocket !== \"undefined\") ||\n    (typeof window !== \"undefined\" && typeof window.WebSocket !== \"undefined\") ||\n    (typeof self !== \"undefined\" && typeof self.WebSocket !== \"undefined\");\nexports.hasBuiltInWebSocket = hasBuiltInWebSocket;\nconst hasLocalStorage = () => (typeof global !== \"undefined\" && (typeof global.localStorage !== \"undefined\")) ||\n    (typeof window !== \"undefined\" && typeof window.localStorage !== \"undefined\");\nexports.hasLocalStorage = hasLocalStorage;\nconst resolveLocalStorage = () => {\n    if (typeof global !== \"undefined\" && typeof global.localStorage !== \"undefined\") {\n        return global.localStorage;\n    }\n    else if (typeof window !== \"undefined\" && typeof window.localStorage !== \"undefined\") {\n        return window.localStorage;\n    }\n    return localStorage;\n};\nexports.resolveLocalStorage = resolveLocalStorage;\nconst isBrowser = () => typeof window !== \"undefined\";\nexports.isBrowser = isBrowser;\nexports.RANDOM_LENGTH = 32;\nfunction hashKey(key, encode = BASE16) {\n    (0, log_1.logDebug)(`hash key called ${key}`);\n    const result = (0, sha256_1.hash)((0, stringUtils_1.okxfromString)(key, encode));\n    return (0, to_string_1.toString)(result, encode);\n}\nfunction generateRandomBytes32() {\n    return tweetnacl_1.default.randomBytes(exports.RANDOM_LENGTH);\n}\nfunction generateTopic() {\n    let randomBytes32 = generateRandomBytes32();\n    (0, log_1.logDebug)(`generate topic called ${randomBytes32}`);\n    return hashKey((0, to_string_1.toString)(randomBytes32, BASE16));\n}\nfunction generateGroupId() {\n    let randomBytes32 = tweetnacl_1.default.randomBytes(16);\n    (0, log_1.logDebug)(`generate groupid called ${randomBytes32}`);\n    return hashKey((0, to_string_1.toString)(randomBytes32, BASE16));\n}\nconst isValidObject = (obj) => Object.getPrototypeOf(obj) === Object.prototype && Object.keys(obj).length;\nexports.isValidObject = isValidObject;\nfunction isIos() {\n    const userAgent = navigator.userAgent;\n    const maxTouchPoints = navigator.maxTouchPoints || 0;\n    // 检测 iPhone、iPod 和传统的 iPad\n    const isIOSDevice = /iPad|iPhone|iPod/.test(userAgent) && !window.MSStream;\n    // 针对 iPadOS 13 及以上的设备进行额外判断\n    const isIPadOS = (userAgent.includes('Mac') && maxTouchPoints > 1);\n    (0, log_1.logDebug)(`utils isIos >>>isIOSDevice: ${isIOSDevice}    >> isIPadOS: ${isIPadOS}`);\n    // 如果是 iOS 设备或者是 iPadOS 设备，返回 true\n    return isIOSDevice || isIPadOS;\n}\nfunction getLastSixMd5Hash(input) {\n    // 生成 MD5 哈希\n    const hash = crypto_js_1.default.MD5(input).toString();\n    // 获取最后六位\n    return hash.slice(-6);\n}\nfunction toSafeBase64FromBase64(base64) {\n    return base64\n        .replace(/=/g, \"\")\n        .replace(/\\+/g, \"-\")\n        .replace(/\\//g, \"_\");\n}\nfunction useShortLink() {\n    // return !!(window as any).useShortLink;\n    return true;\n}\nfunction replaceAptosChainName(chainId) {\n    let newChain = chainId;\n    if (chainId.includes(\"aptos:mainnet\")) {\n        newChain = chainId.replace(\"aptos:mainnet\", \"aptos:637\");\n    }\n    else if (chainId.includes(\"movement:testnet\")) {\n        newChain = chainId.replace(\"movement:testnet\", \"aptos:70000060\");\n    }\n    return newChain;\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.openLink = openLink;\nexports.openLinkBlank = openLinkBlank;\nexports.openDeeplinkWithFallback = openDeeplinkWithFallback;\nexports.isMobileUserAgent = isMobileUserAgent;\nexports.getUserAgent = getUserAgent;\nexports.isOS = isOS;\nexports.isBrowser = isBrowser;\nconst ua_parser_js_1 = __importDefault(require(\"ua-parser-js\"));\nconst log_1 = require(\"./log\");\nconst tma_api_1 = require(\"./tma-api\");\nfunction openLink(href, target = '_self') {\n    (0, log_1.logDebug)('openLink', href, target);\n    window.open(href, target, 'noopener noreferrer');\n}\nfunction openLinkBlank(href) {\n    openLink(href, '_blank');\n}\nfunction openDeeplinkWithFallback(href, fallback) {\n    const doFallback = () => {\n        if (isBrowser('safari') || (isOS('android') && isBrowser('firefox'))) {\n            // Safari does not support fallback to direct link.\n            return;\n        }\n        fallback();\n    };\n    const fallbackTimeout = setTimeout(() => doFallback(), 500);\n    window.addEventListener('blur', () => clearTimeout(fallbackTimeout), { once: true });\n    if (isOS('android') && (0, tma_api_1.inTg)()) {\n        openLink(href, '_blank');\n    }\n    else {\n        openLink(href, '_self');\n    }\n}\nfunction isMobileUserAgent() {\n    let check = false;\n    (function (a) {\n        if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) ||\n            /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.slice(0, 4)))\n            check = true;\n    })(navigator.userAgent ||\n        navigator.vendor ||\n        window.opera);\n    return check;\n}\nfunction getUserAgent() {\n    var _a, _b, _c;\n    const results = new ua_parser_js_1.default().getResult();\n    const osName = (_a = results.os.name) === null || _a === void 0 ? void 0 : _a.toLowerCase();\n    const deviceModel = (_b = results.device.model) === null || _b === void 0 ? void 0 : _b.toLowerCase();\n    let os;\n    switch (true) {\n        case deviceModel === 'ipad':\n            os = 'ipad';\n            break;\n        case osName === 'ios':\n            os = 'ios';\n            break;\n        case osName === 'android':\n            os = 'android';\n            break;\n        case osName === 'mac os':\n            os = 'macos';\n            break;\n        case osName === 'linux':\n            os = 'linux';\n            break;\n        case osName === null || osName === void 0 ? void 0 : osName.includes('windows'):\n            os = 'windows';\n            break;\n    }\n    const browserName = (_c = results.browser.name) === null || _c === void 0 ? void 0 : _c.toLowerCase();\n    let browser;\n    switch (true) {\n        case browserName === 'chrome':\n            browser = 'chrome';\n            break;\n        case browserName === 'firefox':\n            browser = 'firefox';\n            break;\n        case browserName === null || browserName === void 0 ? void 0 : browserName.includes('safari'):\n            browser = 'safari';\n            break;\n        case browserName === null || browserName === void 0 ? void 0 : browserName.includes('opera'):\n            browser = 'opera';\n            break;\n    }\n    return {\n        os,\n        browser\n    };\n}\nfunction isOS(...os) {\n    return os.includes(getUserAgent().os);\n}\nfunction isBrowser(...browser) {\n    return browser.includes(getUserAgent().browser);\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXBtcProvider = void 0;\nconst _1 = require(\"./\");\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXBtcProvider {\n    constructor(provider) {\n        this.caip = [\n            \"btc:mainnet\",\n            \"fractal:mainnet\"\n        ];\n        this.provider = provider;\n    }\n    getAddressForChainId(chainId) {\n        var _a, _b;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let accounts = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['btc']) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        });\n        if (accounts == undefined || accounts.length < 0) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `no connected account`);\n        }\n        let account = accounts[0];\n        const address = account.split(':')[2];\n        return address;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let extra = (_c = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['btc']) === null || _b === void 0 ? void 0 : _b.extra) === null || _c === void 0 ? void 0 : _c[chainId];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"compressedPublicKey\"];\n        }\n        return {\n            address: this.getAddressForChainId(chainId),\n            publicKey: publicKey\n        };\n    }\n    /**\n     *\n     * @param signStr\n     * @param chainId\n     * @param type\n     * @returns\n     */\n    signMessage(chainId, signStr, type) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (signStr === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signMessage parmas error`);\n            }\n            let params = {\n                signStr: signStr,\n                from: this.getAddressForChainId(chainId)\n            };\n            if (type) {\n                params.type = type;\n            }\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signMessage\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param toAddress\n     * @param satoshis\n     * @param options { feeRate: 0 }\n     * @returns\n     */\n    sendBitcoin(chainId, toAddress, satoshis, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            let params = {\n                from: this.getAddressForChainId(chainId),\n                to: toAddress,\n                value: (satoshis / 100000000).toString(),\n            };\n            if (options === null || options === void 0 ? void 0 : options.feeRate) {\n                params[\"satBytes\"] = options.feeRate.toString();\n            }\n            let result = yield this.send(chainId, params);\n            if (result !== undefined && ('txhash' in result)) {\n                // return txhash directly\n                return result.txhash;\n            }\n            // or return unexpected result\n            return result;\n        });\n    }\n    //  from - string：当前连接的钱包的 BTC 地址\n    //  to - string：接受 BTC 的地址\n    //  value - string：发送 BTC 的数量\n    //  satBytes - string： (可选) 自定义费率\n    //  memo - string： (可选) 指定 outputs OP_RETURN 内容 示例\n    //  memoPos - number： (可选) 指定 outputs OP_RETURN 输出位置，如果传了 memo 则必须传入 memoPos 指定位置，否则 memo 不生效\n    send(chainId, input) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (!this.checkParameters(input, 'to', 'value')) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send parmas  error`);\n            }\n            input[\"from\"] = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: 'btc_send',\n                    params: input\n                }, chainId);\n                if ('result' in ret) {\n                    return {\n                        txhash: ret.result\n                    };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param psbtHex string 要签名的 psbt 的十六进制字符串\n     * @param options object { autoFinalized: 0 }\n     */\n    signPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.signPsbts(chainId, [psbtHex], [options]).then(psbtResults => {\n                    let results = JSON.parse(psbtResults);\n                    resolve(results[0]);\n                }).catch(error => {\n                    reject(error);\n                });\n            });\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHexs Array\n     * @param options Array [{ autoFinalized: 0 }]\n     * @returns\n     */\n    signPsbts(chainId, psbtHexs, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHexs === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHexs: psbtHexs,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signPsbts\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHex string\n     * @param options object\n     * @returns\n     */\n    signAndPushPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHex === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHex: psbtHex,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signAndPushPsbt\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return JSON.parse(ret.result);\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param address string, receiver address\n     * @param inscriptionId string, 铭文 ID + 协议，没有传协议则默认是 Ordinals NFT ，目前仅支持 Ordinals 及 Atomicals 协议\n     * @param options object, { feeRate: number } custom rates\n     */\n    sendInscription(chainId, address, inscriptionId, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let extension = {\n                address: address,\n                inscriptionId: inscriptionId,\n                options: options\n            };\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (address === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method sendInscription params error`);\n            }\n            var feeRate = 0;\n            if (options && ('feeRate' in options)) {\n                feeRate = options.feeRate;\n            }\n            let coinId = '';\n            let from = this.getAddressForChainId(chainId);\n            var protocolId = 7; //ProtocolIdBRCNFT\n            if (inscriptionId !== 'undefined') {\n                let atomicSuffix = \"-Atomicals\";\n                let ordinalsSuffix = \"-Ordinals\";\n                if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(atomicSuffix.toLowerCase())) {\n                    protocolId = 8; //WXRCProtocolIdARCNFT\n                    inscriptionId = this.removeSuffix(inscriptionId, atomicSuffix);\n                }\n                else if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(ordinalsSuffix.toLowerCase())) {\n                    inscriptionId = this.removeSuffix(inscriptionId, ordinalsSuffix);\n                }\n            }\n            let params = {\n                scenario: 5,\n                feeRate: feeRate,\n                txType: \"20\",\n                to: address,\n                batchBean: [\n                    {\n                        coinAmount: \"1\",\n                        nftId: inscriptionId,\n                        protocolId: protocolId,\n                        coinId: coinId,\n                        inscriptionId: \"\",\n                        from: from\n                    }\n                ],\n                extension: extension,\n            };\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_sendInscription\",\n                    params: params,\n                    injectParams: {\n                        address: address,\n                        inscriptionId: inscriptionId,\n                        options: options\n                    }\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    sendRunes(chainId, address, runeid, amount, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!chainId || !address || !runeid || !amount) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `The parameter is empty. Please check`);\n                }\n                let ns = this.checkChainId(chainId);\n                let protocolId = undefined;\n                if (ns != undefined) {\n                    if (ns.startsWith(\"btc\")) {\n                        protocolId = 13;\n                    }\n                    else if (ns.startsWith(\"fractal\")) {\n                        protocolId = 16;\n                    }\n                }\n                if (ns == undefined || protocolId == undefined) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n                }\n                let fromAddress = this.getAddressForChainId(chainId); // string\n                let params = {\n                    fromAddress: fromAddress,\n                    protocolId: protocolId,\n                    address: address, //String\n                    runeid: runeid, //String\n                    amount: amount, // String\n                    options: options\n                };\n                (0, core_1.logDebug)(\"OKXBtcProvider sendRunes -->\", JSON.stringify(params));\n                const ret = yield this.provider.request({\n                    method: \"btc_sendRunes\",\n                    params: params\n                }, chainId);\n                return ret.result;\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    inscribeTransfer(chainId, ticker, amount) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!chainId || !ticker || !amount) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `The parameter is empty. Please check`);\n                }\n                let ns = this.checkChainId(chainId);\n                let protocolId = undefined;\n                if (ns != undefined) {\n                    if (ns.startsWith(\"btc\")) {\n                        protocolId = 1;\n                    }\n                    else if (ns.startsWith(\"fractal\")) {\n                        protocolId = 14;\n                    }\n                }\n                if (ns == undefined || protocolId == undefined) {\n                    throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n                }\n                let fromAddress = this.getAddressForChainId(chainId); // string\n                let params = {\n                    fromAddress: fromAddress,\n                    protocolId: protocolId,\n                    ticker: ticker, //String\n                    amount: amount, // String\n                };\n                (0, core_1.logDebug)(\"OKXBtcProvider inscribeTransfer -->\", JSON.stringify(params));\n                const ret = yield this.provider.request({\n                    method: \"btc_inscribeTransfer\",\n                    params: params\n                }, chainId);\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    removeSuffix(str, suffix) {\n        if (str.endsWith(suffix)) {\n            return str.slice(0, str.length - suffix.length);\n        }\n        return str;\n    }\n    checkParameters(params, ...keys) {\n        var unexistKeys = [];\n        keys.forEach(key => {\n            if (!(`${key}` in params)) {\n                unexistKeys.push(key);\n            }\n        });\n        if (unexistKeys.length > 0) {\n            console.log('not find key: ', unexistKeys.join(\",\"));\n            return false;\n        }\n        return true;\n    }\n    /**\n     *\n     * @param chainId eg. btc:mainnet\n     * @returns eg. btc\n     */\n    checkChainId(chainId) {\n        if (this.caip.includes(chainId)) {\n            let [namespaceKey, _] = chainId.split(\":\");\n            return namespaceKey;\n        }\n        return undefined;\n    }\n}\nexports.OKXBtcProvider = OKXBtcProvider;\nexports.default = OKXBtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCosmosProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXCosmosProvider {\n    constructor(provider) {\n        this.provider = provider;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e, _f;\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount chainId:\", chainId);\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount namespaces:\", JSON.stringify((_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces));\n        let account = (_c = (_b = this.provider.session) === null || _b === void 0 ? void 0 : _b.namespaces[core_1.NameSpaceKeyCosmos]) === null || _c === void 0 ? void 0 : _c.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount account:\", JSON.stringify(account));\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount address:\", address);\n        let extra = (_f = (_e = (_d = this.provider.session) === null || _d === void 0 ? void 0 : _d.namespaces[core_1.NameSpaceKeyCosmos]) === null || _e === void 0 ? void 0 : _e.extra) === null || _f === void 0 ? void 0 : _f[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n            console.log(\"aptos_publicKey\", publicKey);\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            algo: \"secp256k1\",\n            address: address,\n            bech32Address: address,\n            pubKey: this.hexToUint8Array(publicKey),\n        };\n    }\n    signArbitrary(chainId, signerAddress, data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const base64Encoded = window.btoa(data);\n            const signDoc = {\n                chain_id: \"\",\n                account_number: \"0\",\n                sequence: \"0\",\n                fee: {\n                    gas: \"0\",\n                    amount: []\n                },\n                msgs: [{\n                        \"type\": \"sign/MsgSignData\",\n                        \"value\": {\n                            \"signer\": signerAddress,\n                            \"data\": base64Encoded\n                        }\n                    }],\n                memo: \"\"\n            };\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signArbitrary\",\n                \"params\": {\n                    \"signer\": signerAddress,\n                    \"chain_id\": chainId.split(\":\")[1],\n                    \"data\": signDoc\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    if (typeof ret.result == \"string\") {\n                        return JSON.parse(ret.result);\n                    }\n                    else {\n                        return ret.result;\n                    }\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signAmino(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (signDoc.msgs[0].type == \"sign/MsgSignData\") {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signArbitrary\",\n                    \"params\": {\n                        \"signer\": signerAddress,\n                        \"chain_id\": chainId.split(\":\")[1],\n                        \"data\": signDoc\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        return ret.result;\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    return error;\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                }\n            }\n            else {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signAmino\",\n                    \"params\": {\n                        \"signer\": signerAddress,\n                        \"chainId\": chainId.split(\":\")[1],\n                        \"sign_doc\": signDoc,\n                        \"signOptions\": signOptions\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        const resData = JSON.parse(ret.result);\n                        console.log(\"signdoc\", signDoc, resData.signDoc);\n                        signDoc.fee = resData.signDoc.fee;\n                        return { signed: signDoc, signature: resData.signature };\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                    return error;\n                }\n            }\n        });\n    }\n    signDirect(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const object = {\n                bodyBytes: this.bufferToHex(signDoc.bodyBytes),\n                authInfoBytes: this.bufferToHex(signDoc.authInfoBytes),\n                chainId: signDoc.chainId,\n                accountNumber: signDoc.accountNumber ? signDoc.accountNumber.toString() : null,\n                signOptions: signOptions ? signOptions : null\n            };\n            let data = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signDirect\",\n                \"params\": {\n                    \"signer\": signerAddress,\n                    \"chainId\": chainId.split(\":\")[1],\n                    \"sign_doc\": object,\n                }\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    const res = JSON.parse(ret.result);\n                    console.log(\"signdirect result\", res);\n                    signDoc.authInfoBytes = this.messageToBuffer(res.signDoc.authInfoBytes);\n                    return { signed: signDoc, signature: res.signature };\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    messageToBuffer(message) {\n        var buffer = Uint8Array.from([]);\n        try {\n            if (typeof message === \"string\") {\n                buffer = this.hexToUint8Array(message.replace(\"0x\", \"\"));\n            }\n            else {\n                buffer = Uint8Array.from(message);\n            }\n        }\n        catch (err) {\n            console.log(`messageToBuffer error: ${err}`);\n        }\n        return buffer;\n    }\n    bufferToHex(arr) {\n        let output = [...new Uint8Array(arr)]\n            .map(x => x.toString(16).padStart(2, '0'))\n            .join('');\n        return '0x' + output;\n    }\n    hexToUint8Array(hexString) {\n        if (hexString.length % 2 !== 0) {\n            throw \"Invalid hexString\";\n        }\n        var arrayBuffer = new Uint8Array(hexString.length / 2);\n        for (var i = 0; i < hexString.length; i += 2) {\n            var byteValue = parseInt(hexString.substr(i, 2), 16);\n            if (isNaN(byteValue)) {\n                throw \"Invalid hexString\";\n            }\n            arrayBuffer[i / 2] = byteValue;\n        }\n        return arrayBuffer;\n    }\n}\nexports.OKXCosmosProvider = OKXCosmosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXStarknetProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXStarknetProvider {\n    constructor(provider) {\n        this.STARKNET_CHAIN_ID = \"starknet:mainnet\";\n        this.provider = provider;\n    }\n    getChain(chainId) {\n        if (chainId == null) {\n            chainId = this.STARKNET_CHAIN_ID;\n        }\n        if (chainId != this.STARKNET_CHAIN_ID) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, \"The chainId:\" + chainId + \"is wrong for OKXStarknetProvider\");\n        }\n        return chainId;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e;\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[core_1.NameSpaceKeyStarknet]) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        let extra = (_e = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces[core_1.NameSpaceKeyStarknet]) === null || _d === void 0 ? void 0 : _d.extra) === null || _e === void 0 ? void 0 : _e[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address,\n            pubKey: publicKey\n        };\n    }\n    /**\n     *\n     * @param chainId\n     * @param signerAddress\n     * @param data: { types, primaryType, domain, message } as TypedData\n     * @returns [signedDataR, signedDataS]\n     */\n    signMessage(signerAddress, typedData, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            if (signerAddress.length == 0) {\n                signerAddress = this.getAccount(chainId)[\"address\"];\n            }\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"starknet_signMessage\",\n                \"params\": {\n                    \"accountAddress\": signerAddress,\n                    \"typedData\": typedData\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    let results = ret.result;\n                    if (typeof results == 'string') {\n                        results = JSON.parse(results);\n                    }\n                    return [results[\"signedDataR\"], results[\"signedDataS\"]];\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     * sendTransaction\n     * @param chainId\n     * @param signerAddress\n     * @param transaction\n     * @returns { transaction_hash }\n     */\n    sendTransaction(signerAddress, transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let transactionData = {\n                \"accountAddress\": signerAddress,\n                \"executionRequest\": transaction\n            };\n            let data = {\n                \"method\": \"starknet_sendTransaction\",\n                \"params\": {\n                    \"data\": JSON.stringify(transactionData),\n                    \"from\": signerAddress\n                }\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return { transaction_hash: ret.result };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     *\n     * signMessage old API（rarely used, no need provide to external）\n     * @param chainId\n     * @param payload\n     * @returns {transaction_hash, class_hash}\n     */\n    signMessageDeclareContractPayload(payload, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            try {\n                let data = {\n                    \"method\": \"starknet_signMessage\",\n                    \"params\": payload\n                };\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return {\n                        \"transaction_hash\": ret.result[\"txHash\"],\n                        \"class_hash\": ret.result[\"classHash\"]\n                    };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     * sendTransaction old API（rarely used, no need provide to external）\n     * @param chainId\n     * @param signerAddress\n     * @param calls\n     * @param abis\n     * @param transactionsDetail\n     * @returns { transaction_hash }\n     */\n    /// todo： \n    /// 修改方法名\n    /// chainId 放后面\n    sendMessageExecuteTransactionDetail(signerAddress, calls, abis, transactionsDetail, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            const transactions = Array.isArray(calls) ? calls : [calls];\n            const executionRequest = {\n                \"calls\": transactions,\n                \"abis\": abis,\n                \"transactionsDetail\": {\n                    \"nonce\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.nonce,\n                    \"maxFee\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.nonce,\n                    \"version\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.version,\n                }\n            };\n            return this.sendTransaction(signerAddress, executionRequest, chainId);\n        });\n    }\n}\nexports.OKXStarknetProvider = OKXStarknetProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTonProvider = void 0;\nconst _1 = require(\"./\");\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXTonProvider {\n    constructor(generator) {\n        this.statusChangeSubscriptions = [];\n        this.statusChangeErrorSubscriptions = [];\n        this.provider = generator;\n        this.provider.on(\"connect\", () => {\n            let tonWallet = this.wallet();\n            (0, core_1.logDebug)(\"OKXTONProvider event connect:\", JSON.stringify(tonWallet));\n            this.statusChangeSubscriptions.forEach(callback => callback(tonWallet));\n        });\n        this.provider.on(\"reconnect\", () => {\n            let tonWallet = this.wallet();\n            (0, core_1.logDebug)(\"OKXTONProvider event reconnect:\", JSON.stringify(tonWallet));\n            this.statusChangeSubscriptions.forEach(callback => callback(tonWallet));\n        });\n        this.provider.on(\"disconnect\", () => {\n            (0, core_1.logDebug)(\"OKXTONProvider event disconnect:\");\n            this.statusChangeSubscriptions.forEach(callback => callback(null));\n        });\n        this.provider.on(\"connect_error\", (error) => {\n            (0, core_1.logDebug)(\"OKXTONProvider event connect_error:\", JSON.stringify(error));\n            this.statusChangeErrorSubscriptions.forEach(errorsHandler => errorsHandler(error));\n        });\n    }\n    connected() {\n        if (this.provider.connected()) {\n            return !!this.provider.session.namespaces[\"ton\"];\n        }\n        return false;\n    }\n    account() {\n        try {\n            if (!this.provider.session) {\n                return null;\n            }\n            let tonNameSpace = this.provider.session.namespaces['ton'];\n            if (!tonNameSpace || !tonNameSpace.payload || !tonNameSpace.payload.ton_addr) {\n                return null;\n            }\n            let ton_addr = tonNameSpace.payload.ton_addr;\n            return {\n                address: ton_addr.address,\n                chain: ton_addr.network,\n                walletStateInit: ton_addr.walletStateInit,\n                publicKey: ton_addr.publicKey,\n            };\n        }\n        catch (e) {\n            (0, core_1.logDebug)(\"OKXTONProvider account  error:\", JSON.stringify(e));\n            return null;\n        }\n    }\n    wallet() {\n        if (this.connected()) {\n            try {\n                let sessionWallet = this.provider.session.wallet;\n                let tonDeviceInfo = {\n                    platform: sessionWallet.platform,\n                    appName: sessionWallet.appName,\n                    appVersion: sessionWallet.appVersion,\n                    maxProtocolVersion: sessionWallet.maxProtocolVersion,\n                    features: ['ton_sendTransaction'],\n                };\n                const wallet = {\n                    device: tonDeviceInfo,\n                    provider: \"http\",\n                    account: this.account()\n                };\n                let tonNameSpace = this.provider.session.namespaces['ton'];\n                if (tonNameSpace && tonNameSpace.payload && tonNameSpace.payload.ton_proof) {\n                    wallet.connectItems = {\n                        tonProof: tonNameSpace.payload.ton_proof\n                    };\n                }\n                (0, core_1.logDebug)(\"OKXTONProvider wallet :\", JSON.stringify(wallet));\n                return wallet;\n            }\n            catch (e) {\n                (0, core_1.logDebug)(\"OKXTONProvider wallet  error:\", JSON.stringify(e));\n                return null;\n            }\n        }\n        return null;\n    }\n    onStatusChange(callback, errorsHandler) {\n        this.statusChangeSubscriptions.push(callback);\n        if (errorsHandler) {\n            this.statusChangeErrorSubscriptions.push(errorsHandler);\n        }\n        return () => {\n            this.statusChangeSubscriptions = this.statusChangeSubscriptions.filter(item => item !== callback);\n            if (errorsHandler) {\n                this.statusChangeErrorSubscriptions = this.statusChangeErrorSubscriptions.filter(item => item !== errorsHandler);\n            }\n        };\n    }\n    sendTransaction(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (transaction.network && transaction.network !== core_1.TONCHAIN.MAINNET) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, 'OKXTONProvider sendTransaction network error');\n            }\n            if (!transaction.network) {\n                transaction.network = core_1.TONCHAIN.MAINNET;\n            }\n            if (this.provider.session) {\n                if (!transaction.from) {\n                    const accounts = this.provider.requestAccountsWithNamespace('ton');\n                    transaction.from = accounts[0];\n                }\n            }\n            const requestParams = {\n                method: \"ton_sendTransaction\",\n                params: transaction,\n            };\n            let chain = 'ton:' + core_1.TONCHAIN.MAINNET;\n            (0, core_1.logDebug)(\"OKXTONProvider sendTransaction transaction----:\", chain, JSON.stringify(requestParams));\n            return this.provider.request(requestParams, chain);\n        });\n    }\n}\nexports.OKXTonProvider = OKXTonProvider;\nexports.default = OKXTonProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTronProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXTronProvider {\n    constructor(provider) {\n        this.TRON_CHAIN_ID = \"tron:mainnet\";\n        this.provider = provider;\n    }\n    getChain(chainId) {\n        if (chainId == null) {\n            chainId = this.TRON_CHAIN_ID;\n        }\n        if (chainId != this.TRON_CHAIN_ID) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, \"The chainId:\" + chainId + \"is wrong for OKXTronProvider\");\n        }\n        return chainId;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e;\n        chainId = this.getChain(chainId);\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[core_1.NameSpaceKeyTron]) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        let extra = (_e = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces[core_1.NameSpaceKeyTron]) === null || _d === void 0 ? void 0 : _d.extra) === null || _e === void 0 ? void 0 : _e[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address\n        };\n    }\n    stringToHex(str) {\n        let hex = '';\n        for (let i = 0; i < str.length; i++) {\n            hex += str.charCodeAt(i).toString(16).padStart(2, '0');\n        }\n        return hex;\n    }\n    signMessage(data, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"tron_signMessage\",\n                \"params\": {\n                    \"message\": this.stringToHex(data)\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signMessageV2(data, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"tron_signMessageV2\",\n                \"params\": {\n                    \"message\": data\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let data = {\n                \"method\": \"tron_signTransaction\",\n                \"params\": transaction\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    let signedTx;\n                    if (typeof ret.result == \"string\") {\n                        signedTx = JSON.parse(ret.result);\n                    }\n                    else {\n                        signedTx = ret.result;\n                    }\n                    let realSignTx = {};\n                    realSignTx.visible = signedTx.visible;\n                    realSignTx.txID = signedTx.txID;\n                    let rawData = {};\n                    rawData.contract = signedTx.raw_data.contract;\n                    rawData.expiration = signedTx.raw_data.expiration;\n                    rawData.ref_block_bytes = signedTx.raw_data.ref_block_bytes;\n                    rawData.fee_limit = signedTx.raw_data.fee_limit;\n                    rawData.ref_block_hash = signedTx.raw_data.ref_block_hash;\n                    rawData.timestamp = signedTx.raw_data.timestamp;\n                    realSignTx.raw_data = rawData;\n                    realSignTx.raw_data_hex = signedTx.raw_data_hex;\n                    realSignTx.signature = signedTx.signature;\n                    return realSignTx;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signAndSendTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let data = {\n                \"method\": \"tron_signAndSendTransaction\",\n                \"params\": transaction\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n}\nexports.OKXTronProvider = OKXTronProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXUniversalProvider = void 0;\nconst eip155_1 = require(\"./provider/providers/eip155\");\nconst sui_1 = require(\"./provider/providers/sui\");\nconst constants_1 = require(\"./provider/constants\");\nconst eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\nconst client_1 = require(\"./packages/sign-client/client\");\nconst core_1 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"./packages/utils/namespaces\");\nconst solana_1 = __importDefault(require(\"./provider/providers/solana\"));\nconst btc_1 = __importDefault(require(\"./provider/providers/btc\"));\nconst aptos_1 = __importDefault(require(\"./provider/providers/aptos\"));\nconst ton_1 = __importDefault(require(\"./provider/providers/ton\"));\nconst cosmos_1 = __importDefault(require(\"./provider/providers/cosmos\"));\nconst tron_1 = __importDefault(require(\"./provider/providers/tron\"));\nconst utils_1 = require(\"./provider/utils\");\nconst packages_1 = require(\"./packages\");\nconst provider_1 = require(\"./provider\");\nconst starknet_1 = __importDefault(require(\"./provider/providers/starknet\"));\nclass OKXUniversalProvider {\n    static init(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider init() called');\n            (0, core_1.checkMetaData)(opts.dappMetaData);\n            // ignore rpc provider check by default\n            (0, utils_1.setGlobal)('disableProviderPing', true);\n            let provider;\n            if (window && window.okxConnectUniversalinwindow && window.okxConnectUniversalinwindow instanceof OKXUniversalProvider) {\n                (0, core_1.logDebug)('OKXUniversalConnect init() old called');\n                provider = window.okxConnectUniversalinwindow;\n            }\n            else {\n                (0, core_1.logDebug)('OKXUniversalConnect init() new called');\n                provider = new OKXUniversalProvider(opts);\n                if (window) {\n                    window.okxConnectUniversalinwindow = provider;\n                }\n                yield provider.initialize();\n            }\n            (0, core_1.getDefaultReporter)().configVersionAndSide('universalprovider-1.5.2', 'dapp', provider.providerOpts.dappMetaData.name);\n            return provider;\n        });\n    }\n    constructor(opts) {\n        this.rpcProviders = {};\n        this.events = new eventemitter3_1.default();\n        if (!opts.connector || opts.connector.length == 0) {\n            opts.connector = [core_1.AppwalletConnector.getConnector(), core_1.TgwalletConnector.getConnector()];\n        }\n        this.providerOpts = opts;\n    }\n    request(args, chain) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider request() called');\n            (0, core_1.reportLog)('OKXUniversalProvider request() called');\n            if (!this.connected()) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            (0, core_1.logDebug)('OKXUniversalProvider request()  connected ');\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return yield this.getProvider(namespace).request(requestParam);\n        });\n    }\n    buildRequestParamFromRequest(args, chain) {\n        var _a;\n        (0, core_1.logDebug)(\"UniversalProvider request args >>>>>>>: \", chain, (0, core_1.safeJsonStringify)(args));\n        let [namespace, chainId] = this.validateChain(chain);\n        if (!this.session) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Please call connect() before request()\");\n        }\n        let keyArr = Object.keys(this.session.namespaces);\n        if (!chain && keyArr && keyArr.length > 1) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Multiple chains have been linked, the request method requires chain`);\n        }\n        if (namespace == \"aptos\" && chainId == \"mainnet\") {\n            namespace = \"aptos\";\n            chainId = \"637\";\n        }\n        if (namespace == \"movement\" && chainId == \"testnet\") {\n            namespace = \"aptos\";\n            chainId = \"70000060\";\n        }\n        const requestParam = Object.assign(Object.assign({}, args), { chainId: `${namespace}:${chainId}`, redirect: (_a = args.redirect) !== null && _a !== void 0 ? _a : this.sessionConfig.redirect });\n        return { namespace, requestParam };\n    }\n    enable() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.client) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (!this.session) {\n                if (this.connectOpts) {\n                    yield this.connect(this.connectOpts);\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n                }\n            }\n            const accounts = yield this.requestAccounts();\n            return accounts;\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider disconnect() called');\n            (0, core_1.reportLog)('provider disconnect called');\n            if (!this.session) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n                let called = false;\n                const onRequestSent = () => __awaiter(this, void 0, void 0, function* () {\n                    if (!called) {\n                        called = true;\n                        yield this.disconnectAndEmit();\n                        yield this.cleanup();\n                        resolve();\n                        (0, core_1.logDebug)(\"UniversalProvider disconnect Disconnected\");\n                        (0, core_1.reportLog)('provider disconnect disconnected');\n                    }\n                });\n                try {\n                    yield this.client.disconnect();\n                    yield onRequestSent();\n                }\n                catch (e) {\n                    yield onRequestSent();\n                }\n            }));\n        });\n    }\n    disconnectAndEmit() {\n        var _a, _b;\n        this.client.engine.connectManagerDisconnect();\n        this.events.emit(\"disconnect\", { topic: (_a = this.session) === null || _a === void 0 ? void 0 : _a.topic });\n        this.events.emit(\"session_delete\", { topic: (_b = this.session) === null || _b === void 0 ? void 0 : _b.topic });\n    }\n    aptosChainNameToGeneralId(chainId) {\n        if (chainId == \"aptos:mainnet\") {\n            return \"aptos:637\";\n        }\n        else if (chainId == \"movement:testnet\") {\n            return \"aptos:70000060\";\n        }\n        else {\n            return chainId;\n        }\n    }\n    replaceAptos(opts) {\n        var _a, _b;\n        let aptosNameSpace = (_a = opts.namespaces) === null || _a === void 0 ? void 0 : _a[\"aptos\"];\n        if (aptosNameSpace != undefined) {\n            let realNS = this.replaceAptosInner(aptosNameSpace);\n            if (opts.namespaces != undefined && \"aptos\" in opts.namespaces && realNS != undefined) {\n                opts.namespaces.aptos = realNS;\n            }\n        }\n        let optionAptosNameSpace = (_b = opts.optionalNamespaces) === null || _b === void 0 ? void 0 : _b[\"aptos\"];\n        if (optionAptosNameSpace != undefined) {\n            let realOptionNS = this.replaceAptosInner(optionAptosNameSpace);\n            if (opts.optionalNamespaces != undefined && \"aptos\" in opts.optionalNamespaces && realOptionNS != undefined) {\n                opts.optionalNamespaces.aptos = realOptionNS;\n            }\n        }\n        return opts;\n    }\n    replaceAptosInner(aptosNameSpace) {\n        var _a;\n        if (aptosNameSpace != undefined) {\n            aptosNameSpace.chains = (_a = aptosNameSpace.chains) === null || _a === void 0 ? void 0 : _a.map(chainId => {\n                return this.aptosChainNameToGeneralId(chainId);\n            });\n            if (aptosNameSpace.defaultChain != undefined) {\n                aptosNameSpace.defaultChain = this.aptosChainNameToGeneralId(aptosNameSpace.defaultChain);\n            }\n        }\n        return aptosNameSpace;\n    }\n    replaceAptosGeneralIdWithNetName(chainId) {\n        if (chainId.includes(\"aptos:637\")) {\n            chainId = chainId.replace(\"aptos:637\", \"aptos:mainnet\");\n        }\n        else if (chainId.includes(\"aptos:70000060\")) {\n            chainId = chainId.replace(\"aptos:70000060\", \"movement:testnet\");\n        }\n        return chainId;\n    }\n    replaceSessionAptos(session) {\n        var _a;\n        let namespaces = (_a = session === null || session === void 0 ? void 0 : session.namespaces) === null || _a === void 0 ? void 0 : _a[\"aptos\"];\n        if (namespaces != undefined && namespaces.chains != undefined) {\n            namespaces.chains = namespaces.chains.map(chain => {\n                return this.replaceAptosGeneralIdWithNetName(chain);\n            });\n            namespaces.accounts = namespaces.accounts.map((account) => {\n                return this.replaceAptosGeneralIdWithNetName(account);\n            });\n            let extra = {};\n            Object.keys(namespaces.extra || {}).forEach((key, index) => {\n                let newKey = this.replaceAptosGeneralIdWithNetName(key);\n                extra[this.replaceAptosGeneralIdWithNetName(key)] = Object.values((session === null || session === void 0 ? void 0 : session.namespaces[\"aptos\"].extra) || {})[index];\n            });\n            namespaces.extra = extra;\n        }\n        (0, core_1.logDebug)(\"replaceSessionAptos\", session);\n    }\n    connected() {\n        (0, core_1.logDebug)('OKXUniversalProvider connected() called');\n        (0, core_1.reportLog)('provider connected called');\n        let disconnectInner = () => {\n            try {\n                this.cleanup();\n                this.client.engine.connectManagerDisconnect();\n            }\n            catch (e) {\n                (0, core_1.logDebug)(\"Error during disconnect:\", e);\n            }\n        };\n        try {\n            if (!this.session)\n                return false;\n            if (!this.client.engine.getCurrentConnectionReady(Object.keys(this.session.namespaces))) {\n                disconnectInner();\n                return false;\n            }\n            return true;\n        }\n        catch (e) {\n            disconnectInner();\n            return false;\n        }\n    }\n    connectAndSign(opts, signRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() called');\n            const updatedOpts = Object.assign(Object.assign({}, opts), { signRequest });\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() opts:', JSON.stringify(opts));\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() signRequest:', JSON.stringify(signRequest));\n            return yield this.connect(updatedOpts);\n        });\n    }\n    connect(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider connect() called');\n            (0, core_1.reportLog)('provider connect called');\n            if (!this.client) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (this.connected()) {\n                return this.session;\n            }\n            opts = this.replaceAptos(opts);\n            (0, core_1.logDebug)(`OKXUniversalProvider connect >>>>`, JSON.stringify(opts));\n            if (opts.sessionConfig === undefined) {\n                opts.sessionConfig = {};\n            }\n            if (opts.sessionConfig.openUniversalUrl === undefined) {\n                opts.sessionConfig.openUniversalUrl = (0, core_1.isMobileUserAgent)();\n            }\n            this.setNamespaces(opts);\n            try {\n                (0, core_1.logDebug)(`UniversalProvider connect opts.stringify ====> ${JSON.stringify(opts)}`);\n                //Connect\n                let session = yield this.client.connect(opts);\n                (0, core_1.logDebug)(`UniversalProvider connect success ====> ${JSON.stringify(session)}`);\n                if (session) {\n                    this.replaceSessionAptos(session);\n                    this.session = session;\n                    this.client.session = session;\n                    this.setConnectConnector();\n                    (0, core_1.logDebug)(`OKXUniversalProvider connect success opts>>>>`, JSON.stringify(opts));\n                    this.onConnect();\n                    if (opts.signRequest && opts.signRequest.length > 0) {\n                        let requestItem = opts.signRequest[0];\n                        let signResponseList = [];\n                        if (typeof window !== \"undefined\" && window && window.okxConnectUniversalUIinwindow) { //from UI\n                            (0, core_1.logDebug)(`OKXUniversalProvider connect success, us UI SDK>>>>`);\n                            if (this.session.signResponse && this.session.signResponse.length > 0) { // >=6.96\n                                signResponseList = this.session.signResponse;\n                            }\n                        }\n                        else {\n                            (0, core_1.logDebug)(`OKXUniversalProvider connect success, us Universal SDK>>>>`);\n                            if (this.session.signResponse && this.session.signResponse.length > 0) { // >=6.96\n                                signResponseList = this.session.signResponse;\n                            }\n                            else {\n                                signResponseList.push((0, packages_1.creatNotSupportMethodItemReplay)(requestItem));\n                            }\n                        }\n                        (0, core_1.logDebug)(`UniversalProvider connect success connectRequestReply ====> ${JSON.stringify(signResponseList)}`);\n                        setTimeout(() => {\n                            this.events.emit(\"connect_signResponse\", signResponseList);\n                        }, 100);\n                    }\n                    return session;\n                }\n                return undefined;\n            }\n            catch (error) {\n                (0, core_1.logDebug)(`UniversalProvider connect error ====> `, JSON.stringify(error));\n                throw error;\n            }\n        });\n    }\n    syncAllAddresses() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if ((0, provider_1.syncAddressAvailable)(this.session.wallet)) {\n                return this.client.syncAllAddress();\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n            }\n        });\n    }\n    setConnectConnector() {\n        var _a;\n        this.client.setConnectConnector((_a = this.session) === null || _a === void 0 ? void 0 : _a.wallet);\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    setDefaultChain(chain, rpcUrl) {\n        (0, core_1.logDebug)('OKXUniversalProvider setDefaultChain() called');\n        // chain = this.aptosChainNameToGeneralId(chain)\n        try {\n            // ignore without active session\n            if (!this.connected())\n                return;\n            const [namespace, chainId] = this.validateChain(chain);\n            const provider = this.getProvider(namespace);\n            provider.setDefaultChain(chainId, rpcUrl);\n        }\n        catch (error) {\n            // ignore the error if the fx is used prematurely before namespaces are set\n            if (!/Please call connect/.test(error.message))\n                throw error;\n        }\n    }\n    checkStorage() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let sessionInfoStr = yield this.getFromStore(\"connectSession\");\n            (0, core_1.logDebug)(sessionInfoStr);\n            if (sessionInfoStr) {\n                (0, core_1.logDebug)(`checkStorage error start`);\n                try {\n                    let sessionInfo = sessionInfoStr;\n                    this.session = sessionInfo;\n                    this.client.session = this.session;\n                    this.setConnectConnector();\n                    yield this.client.restoreconnect(sessionInfo);\n                    this.sessionConfig = sessionInfo.sessionConfig;\n                    this.client.sessionConfig = this.sessionConfig;\n                    (0, core_1.logDebug)('[evm u-provider] do reconnection', this.session);\n                    this.createProviders();\n                    this.registerEventListeners();\n                    setTimeout(() => {\n                        this.events.emit(\"reconnect\", { session: this.session });\n                    }, 100);\n                }\n                catch (e) {\n                    yield this.cleanup();\n                    (0, core_1.logDebug)(`checkStorage error ${JSON.stringify(e)}`);\n                }\n            }\n        });\n    }\n    initialize() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider initialize() called');\n            (0, core_1.reportLog)('provider initialize called');\n            const data = Object.assign({ url: window.location.hostname, origin: window.location.origin }, this.providerOpts.dappMetaData);\n            this.client = new client_1.SignClient(data, this.events);\n            this.registerConnector(this.providerOpts.connector);\n            yield this.checkStorage();\n        });\n    }\n    createProviders() {\n        if (!this.client) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n        }\n        if (!this.connected()) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Session not initialized. Please call connect() before enable()\");\n        }\n        const providersToCreate = [\n            ...new Set(Object.keys(this.session.namespaces)\n                .filter((namespace) => { var _a, _b; return ((_b = (_a = this.session.namespaces[namespace]) === null || _a === void 0 ? void 0 : _a.accounts) === null || _b === void 0 ? void 0 : _b.length) > 0; })\n                .map((namespace) => (0, namespaces_1.parseNamespaceKey)(namespace))),\n        ];\n        this.rpcProviders = {};\n        providersToCreate.forEach((namespace) => {\n            if (!this.session)\n                return;\n            const namespacesValue = this.session.namespaces;\n            const currentNameSpace = namespacesValue[namespace];\n            (0, core_1.logDebug)(\"init eip155 >> \", currentNameSpace);\n            switch (namespace) {\n                case \"eip155\":\n                    const opts = {\n                        namespace: currentNameSpace\n                    };\n                    this.rpcProviders[namespace] = new eip155_1.Eip155Provider(opts, this.client, this.events);\n                    break;\n                case \"solana\":\n                    const opts1 = {\n                        namespace: currentNameSpace\n                    };\n                    let solanaProvider = new solana_1.default(opts1, \"solana\", this.client, this.events);\n                    this.rpcProviders[namespace] = solanaProvider;\n                    let sonicProvider = new solana_1.default(opts1, \"sonic\", this.client, this.events);\n                    this.rpcProviders['sonic'] = sonicProvider;\n                    let svmProvider = new solana_1.default(opts1, \"svm\", this.client, this.events);\n                    this.rpcProviders['svm'] = svmProvider;\n                    // this.rpcProviders[namespace] = new SolanaProvider(opts1, () => { return this.session; });\n                    break;\n                case \"ton\":\n                    const optsTon = {\n                        namespace: currentNameSpace\n                    };\n                    let tonProvider = new ton_1.default(optsTon, this.client, this.events);\n                    this.rpcProviders[namespace] = tonProvider;\n                    break;\n                case \"sui\":\n                    const optsSui = {\n                        namespace: currentNameSpace\n                    };\n                    let suiProvider = new sui_1.SuiProvider(optsSui, this.client, this.events);\n                    suiProvider.name = \"sui\";\n                    this.rpcProviders[namespace] = suiProvider;\n                    break;\n                case \"btc\":\n                    const optsBtc = {\n                        namespace: currentNameSpace\n                    };\n                    let btcProvider = new btc_1.default(optsBtc, \"btc\", this.client, this.events);\n                    this.rpcProviders[\"btc\"] = btcProvider;\n                    let fbProvider = new btc_1.default(optsBtc, \"fractal\", this.client, this.events);\n                    this.rpcProviders[\"fractal\"] = fbProvider;\n                    break;\n                case \"aptos\":\n                    let aptosProvider = new aptos_1.default({\n                        namespace: currentNameSpace\n                    }, \"aptos\", this.client, this.events);\n                    this.rpcProviders[namespace] = aptosProvider;\n                    let moveProvider = new aptos_1.default({\n                        namespace: currentNameSpace\n                    }, \"movement\", this.client, this.events);\n                    this.rpcProviders[\"movement\"] = moveProvider;\n                    break;\n                case \"cosmos\":\n                    let cosmosProvider = new cosmos_1.default({\n                        namespace: currentNameSpace\n                    }, this.client, this.events);\n                    this.rpcProviders[namespace] = cosmosProvider;\n                    break;\n                case \"tron\":\n                    let tronProvider = new tron_1.default({\n                        namespace: currentNameSpace\n                    }, this.client, this.events);\n                    this.rpcProviders[namespace] = tronProvider;\n                    break;\n                case \"starknet\":\n                    let starknetProvider = new starknet_1.default({\n                        namespace: currentNameSpace\n                    }, \"starknet\", this.client, this.events);\n                    this.rpcProviders[namespace] = starknetProvider;\n                    break;\n            }\n        });\n    }\n    registerEventListeners() {\n        if (typeof this.client === \"undefined\") {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client is not initialized\");\n        }\n        this.client.engine.addDisconnectListener(() => {\n            this.disconnectAndEmit();\n            this.cleanup();\n        });\n        this.on(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, (caip2ChainId) => {\n            this.onChainChanged(caip2ChainId);\n        });\n        this.on(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, (nameSpaces) => {\n            if (nameSpaces) {\n                const nameSpacekey = Object.keys(nameSpaces)[0];\n                if (this.session) {\n                    this.session.namespaces[nameSpacekey] = nameSpaces[nameSpacekey];\n                    if (this.session) {\n                        this.persist(\"connectSession\", this.session);\n                        this.events.emit(\"session_update\", this.session);\n                    }\n                    (0, core_1.logDebug)(\"PROVIDER_EVENTS.UPDATE_NAMESPACES this.session... ->>>\", JSON.stringify(this.session));\n                }\n            }\n        });\n    }\n    getProvider(namespace) {\n        (0, core_1.logDebug)('current get providers', this.rpcProviders);\n        (0, core_1.logDebug)('query namespace: ', namespace);\n        return this.rpcProviders[namespace];\n    }\n    setNamespaces(params) {\n        this.connectOpts = params;\n        const { namespaces, sessionConfig } = params;\n        const data = {\n            origin: window.location.origin,\n            url: window.location.hostname,\n            name: this.providerOpts.dappMetaData.name,\n            icon: this.providerOpts.dappMetaData.icon,\n            manifestUrl: this.providerOpts.dappMetaData.manifestUrl,\n        };\n        this.sessionConfig = Object.assign({ dappInfo: data }, sessionConfig);\n        (0, core_1.logDebug)(\"setNamespaces sessionConfig>>>\", this.sessionConfig);\n        this.client.sessionConfig = this.sessionConfig;\n        this.persist(\"sessionConfig\", sessionConfig);\n    }\n    validateChain(chain) {\n        var _a;\n        let [namespace, chainId] = (chain === null || chain === void 0 ? void 0 : chain.split(\":\")) || [\"\", \"\"];\n        if (!this.session || !this.session.namespaces || !Object.keys(this.session.namespaces).length) {\n            (0, core_1.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        if (namespace) {\n            if (!this.isChainNamespaceInSession(namespace)) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace '${namespace}' is not configured. Please call connect() first with namespace config.`);\n            }\n            if (chainId && chain) {\n                (0, core_1.logDebug)('this.session.namespaces -->> ', namespace, JSON.stringify(this.session.namespaces));\n                const chainsArr = (_a = this.session.namespaces[namespace]) === null || _a === void 0 ? void 0 : _a.chains;\n                (0, core_1.logDebug)('get chainsArr & chain', JSON.stringify(chainsArr), chain);\n                if (chainsArr && !chainsArr.includes(chain)) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace not include the chain '${chain}'`);\n                }\n            }\n        }\n        if (namespace && chainId) {\n            (0, core_1.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        let defaultNamespace = (0, namespaces_1.parseNamespaceKey)(Object.keys(this.session.namespaces)[0]);\n        const defaultChain = this.rpcProviders[defaultNamespace].getDefaultChain();\n        (0, core_1.logDebug)('get default chain:', defaultChain);\n        return [defaultNamespace, defaultChain];\n    }\n    isChainNamespaceInSession(namespaceStr) {\n        var _a, _b;\n        if (Object.keys(((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces) || {})\n            .map((key) => (0, namespaces_1.parseNamespaceKey)(key))\n            .includes(namespaceStr)) {\n            return true;\n        }\n        let isChainNamespaceInSession = false;\n        Object.values(((_b = this.session) === null || _b === void 0 ? void 0 : _b.namespaces) || {})\n            .forEach(namespace => {\n            namespace.chains.forEach(chain => {\n                if (chain.split(\":\")[0] == namespaceStr) {\n                    isChainNamespaceInSession = true;\n                }\n            });\n        });\n        return isChainNamespaceInSession;\n    }\n    requestAccountsWithNamespace(namespace) {\n        return this.getProvider(namespace).requestAccounts();\n    }\n    requestDefaultChainWithNamespace(namespace) {\n        return this.getProvider(namespace).getDefaultChain();\n    }\n    requestAccounts() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const [namespace] = this.validateChain();\n            return yield this.getProvider(namespace).requestAccounts();\n        });\n    }\n    onChainChanged(caip2Chain) {\n        var _a;\n        if (!((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces))\n            return;\n        const [namespace, chainId] = this.validateChain(caip2Chain);\n        if (!chainId)\n            return;\n        if (this.session.namespaces[namespace]) {\n            this.session.namespaces[namespace].defaultChain = chainId;\n            this.persist(\"connectSession\", this.session);\n        }\n        this.events.emit(\"chainChanged\", chainId);\n    }\n    onConnect() {\n        this.createProviders();\n        if (this.session) {\n            this.persist(\"connectSession\", this.session);\n            console.log(\"window.okxwallet save session:\", Date.now());\n        }\n        this.events.emit(\"connect\", { session: this.session });\n        this.registerEventListeners();\n    }\n    cleanup() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.session = undefined;\n            this.client.session = undefined;\n            this.setConnectConnector();\n            this.sessionProperties = undefined;\n            this.persist(\"optionalNamespaces\", undefined);\n            this.persist(\"sessionProperties\", undefined);\n            this.persist(\"connectSession\", undefined);\n        });\n    }\n    persist(key, data) {\n        (0, core_1.logDebug)('[evm u-provider] persisit data', key, data);\n        return this.client.engine.saveSessionContent(key, data);\n    }\n    getFromStore(key) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.client.engine.getSessionContent(key);\n        });\n    }\n    showRequestModal(args, chain) {\n        try {\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return this.getProvider(namespace).showRequestModal(requestParam);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    openWallet(engineConnectInfo, connector) {\n        this.client.openWallet(engineConnectInfo, connector);\n    }\n    registerConnector(connectors) {\n        this.client.registerConnector(connectors);\n        this.client.setAccountChangeListener(session => {\n            (0, core_1.logDebug)(\"accountChangeListener session：\", this.events.listenerCount('accountChanged'), JSON.stringify(session));\n            try {\n                if (session && this.events.listenerCount('accountChanged')) {\n                    this.replaceSessionAptos(session);\n                    this.session = session;\n                    this.client.session = session;\n                    if (this.session) {\n                        this.persist(\"connectSession\", this.session);\n                        console.log(\"window.okxwallet save session:\", Date.now());\n                    }\n                    this.setConnectConnector();\n                    this.createProviders();\n                    this.events.emit(\"accountChanged\", this.session);\n                }\n            }\n            catch (error) {\n                (0, core_1.logDebug)(\"setAccountChangeListener error:\", JSON.stringify(error));\n            }\n        });\n    }\n}\nexports.OKXUniversalProvider = OKXUniversalProvider;\nexports.default = OKXUniversalProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXStarknetProvider = exports.OKXTronProvider = exports.OKXTonProvider = exports.OKXCosmosProvider = exports.OKXBtcProvider = exports.OKXUniversalProvider = void 0;\n__exportStar(require(\"./provider/types\"), exports);\n__exportStar(require(\"./packages\"), exports);\nvar OKXUniversalProvider_1 = require(\"./OKXUniversalProvider\");\nObject.defineProperty(exports, \"OKXUniversalProvider\", { enumerable: true, get: function () { return OKXUniversalProvider_1.OKXUniversalProvider; } });\nvar OKXBtcProvider_1 = require(\"./OKXBtcProvider\");\nObject.defineProperty(exports, \"OKXBtcProvider\", { enumerable: true, get: function () { return OKXBtcProvider_1.OKXBtcProvider; } });\nvar OKXCosmosProvider_1 = require(\"./OKXCosmosProvider\");\nObject.defineProperty(exports, \"OKXCosmosProvider\", { enumerable: true, get: function () { return OKXCosmosProvider_1.OKXCosmosProvider; } });\nvar OKXTonProvider_1 = require(\"./OKXTonProvider\");\nObject.defineProperty(exports, \"OKXTonProvider\", { enumerable: true, get: function () { return OKXTonProvider_1.OKXTonProvider; } });\nvar OKXTronProvider_1 = require(\"./OKXTronProvider\");\nObject.defineProperty(exports, \"OKXTronProvider\", { enumerable: true, get: function () { return OKXTronProvider_1.OKXTronProvider; } });\nvar OKXStarknetProvider_1 = require(\"./OKXStarknetProvider\");\nObject.defineProperty(exports, \"OKXStarknetProvider\", { enumerable: true, get: function () { return OKXStarknetProvider_1.OKXStarknetProvider; } });\n__exportStar(require(\"@okxconnect/core\"), exports);\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./utils\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SignClient = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"../utils/namespaces\");\nconst ConnectMethodUtils_1 = require(\"../utils/ConnectMethodUtils\");\nconst constants_1 = require(\"../../provider/constants\");\nclass SignClient extends core_1.ISignClient {\n    constructor(metaData, events) {\n        super(metaData);\n        // ---------- Engine ----------------------------------------------- //\n        this.connect = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    var connectRequest = [];\n                    (0, core_1.logDebug)(`client connect params >>>`, JSON.stringify(params));\n                    var requestAccountItem = {\n                        name: \"requestAccounts\",\n                        requiredNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.namespaces),\n                        optionalNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.optionalNamespaces),\n                    };\n                    this.engine.setSessionConnectingListener(() => {\n                        (0, core_1.logDebug)(`sessionConnectingListener >>>`);\n                        this.events.emit(constants_1.PROVIDER_EVENTS.SESSION_CONNECTING);\n                    });\n                    if (params.signRequest) {\n                        requestAccountItem.connectRequestMethods = yield (0, ConnectMethodUtils_1.connectMethodsToConnectWalletMethods)(params.signRequest, requestAccountItem.requiredNamespaces);\n                    }\n                    connectRequest.push(requestAccountItem);\n                    (0, core_1.logDebug)(`client connect connectRequest >>>`, JSON.stringify(connectRequest));\n                    this.engine.universalConnect(connectRequest, Object.assign({ dappInfo: this.metadata }, params.sessionConfig), (info) => {\n                        if (info && info.connectRequest) {\n                            (0, core_1.logDebug)(`universalConect info.connectRequest :`, info.connectRequest);\n                            (0, core_1.logDebug)(`universalConect url:`, (0, core_1.getOKXLink)(info.connectRequest, this.sessionConfig.useMini));\n                            this.events.emit(\"display_uri\", (0, core_1.getOKXLink)(info.connectRequest, this.sessionConfig.useMini));\n                            this.events.emit(\"short_display_uri\", (0, core_1.getAppWalletShortDeepLink)(info.connectRequest.topic, info.connectRequest.clientId));\n                            (0, core_1.logDebug)(`universalConect EngineConnectInfo  ${JSON.stringify(info)}`);\n                            this.events.emit(\"okx_engine_connect_params\", info);\n                        }\n                    }).then((session) => __awaiter(this, void 0, void 0, function* () {\n                        (0, namespaces_1.fillParamsToSession)(session, params.namespaces, params.optionalNamespaces, this.sessionConfig);\n                        (0, core_1.logDebug)(`signClient: connect: session ${JSON.stringify(session)}`);\n                        if (params.signRequest) {\n                            yield (0, ConnectMethodUtils_1.connectMethodsResponseUpdate)(session, params.signRequest);\n                        }\n                        resolve(session);\n                    })).catch((e) => {\n                        (0, core_1.logDebug)(`signClient: connect: catch ${JSON.stringify(e)}`);\n                        this.events.emit(\"connect_error\", e);\n                        reject(e);\n                    });\n                }\n                catch (error) {\n                    (0, core_1.logDebug)(`signClient: connect:  ${JSON.stringify(error)}`);\n                    reject(error);\n                }\n            }));\n        });\n        this.restoreconnect = (sessionConfig) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.restoreconnect(sessionConfig, (session) => {\n                    if (session) {\n                        resolve(session);\n                    }\n                    else {\n                        reject();\n                    }\n                });\n            });\n        });\n        this.reject = (params) => __awaiter(this, void 0, void 0, function* () {\n        });\n        this.request = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                (0, core_1.logDebug)(\"clint request --params>>>> >\", (_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl, (0, core_1.safeJsonStringify)(params));\n                try {\n                    // this.sessionConfig\n                    if (((_b = this.sessionConfig) === null || _b === void 0 ? void 0 : _b.openUniversalUrl) && (0, core_1.isIos)()) {\n                        this.openOKXWallet();\n                    }\n                    yield this.engine.send(params, {\n                        resolve: (response) => {\n                            delete response.requestId;\n                            (0, core_1.logDebug)(\"clint request --response >\", (0, core_1.safeJsonStringify)(response));\n                            if (('error' in response) && response.error) {\n                                let error = response.error;\n                                reject(new core_1.OKXConnectError(response.error.code, response.method + \":\" + error.message));\n                            }\n                            else {\n                                resolve(response);\n                            }\n                        },\n                        onAck: () => {\n                            var _a;\n                            if (!(0, core_1.isIos)() && ((_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl)) {\n                                this.openOKXWallet();\n                            }\n                        }\n                    });\n                }\n                catch (e) {\n                    (0, core_1.logDebug)(\"clint request --error:\", e);\n                    reject(e);\n                }\n            }));\n        });\n        this.disconnect = () => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.send({\n                    method: \"disconnect\"\n                }, {\n                    onAck: () => {\n                        resolve();\n                    }\n                }, 86400000).catch((error) => {\n                    console.log(`disconnect : ${JSON.stringify(error)}`);\n                    reject(error);\n                });\n            });\n        });\n        this.engine = new core_1.Engine(metaData.name);\n        this.events = events;\n        this.metadata = metaData;\n    }\n    setAccountChangeListener(accountChangeListener) {\n        this.engine.setAccountChangeListener(accountChangeListener);\n    }\n    openOKXWallet() {\n        // if (this.openUniversalUrl){\n        (0, core_1.logDebug)('bridge-provider ==>> connect_5');\n        this.engine.openWallet({ tmaReturnUrl: this.sessionConfig.tmaReturnUrl });\n        // if (this.sessionConfig?.useMini){\n        //     let url = getTelegramWalletTWAUrl(undefined,this.sessionConfig.tmaReturnUrl)\n        //     openOKXTMAWalletlinkWithFallback(url)\n        // }else{\n        //     openOKXDeeplink(standardDeeplink);\n        // }\n        // }\n    }\n    syncAllAddress() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.send({\n                    method: \"sync_all_addresses\"\n                }, {\n                    resolve: (response) => {\n                        delete response.requestId;\n                        (0, core_1.logDebug)(\"clint syncAllAddress --response >\", JSON.stringify(response));\n                        if (('error' in response) && response.error) {\n                            let error = response.error;\n                            reject(new core_1.OKXConnectError(response.error.code, response.method + \":\" + error.message));\n                        }\n                        else {\n                            let allAddressStr = response.result;\n                            resolve((0, ConnectMethodUtils_1.syncResoonseToRequire)(allAddressStr));\n                        }\n                    }\n                }).catch((error) => {\n                    console.log(`disconnect : ${JSON.stringify(error)}`);\n                    reject(error);\n                });\n            });\n        });\n    }\n    registerConnector(connectors) {\n        this.engine.registerConnector(connectors);\n    }\n    openWallet(engineConnectInfo, connector) {\n        this.engine.openWallet(engineConnectInfo, connector);\n    }\n    setConnectConnector(wallet) {\n        this.engine.setConnectConnector(wallet);\n    }\n}\nexports.SignClient = SignClient;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.connectSupportMethods = void 0;\nexports.creatNotSupportMethodItemReplay = creatNotSupportMethodItemReplay;\nexports.connectMethodsAdaptOldVersion = connectMethodsAdaptOldVersion;\nexports.connectMethodsResponseUpdate = connectMethodsResponseUpdate;\nexports.connectMethodsToConnectWalletMethods = connectMethodsToConnectWalletMethods;\nexports.syncResoonseToRequire = syncResoonseToRequire;\nconst core_1 = require(\"@okxconnect/core\");\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst provider_1 = require(\"../../provider\");\nfunction isArray(value) {\n    return typeof value === \"object\" && value !== null && Array.isArray(value);\n}\nfunction isRecord(value) {\n    return typeof value === \"object\" && value !== null && !Array.isArray(value);\n}\n// \"wallet_addEthereumChain\",\n// \"solana_signMessage\",  There are risks\nexports.connectSupportMethods = Object.freeze([\n    \"personal_sign\",\n    \"sui_signMessage\",\n    \"sui_signPersonalMessage\",\n    \"btc_signMessage\",\n    \"aptos_signMessage\",\n    \"cosmos_signArbitrary\",\n    \"tron_signMessage\",\n    \"tron_signMessageV2\",\n    \"starknet_signMessage\",\n    \"sync_all_addresses\"\n]);\nfunction creatNotSupportMethodItemReplay(requestParams) {\n    let notSupportError = new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n    var errorItem = {\n        method: requestParams.method,\n        chainId: requestParams.chainId,\n        error: {\n            code: notSupportError.code,\n            message: notSupportError.message\n        },\n    };\n    return errorItem;\n}\nfunction connectMethodsAdaptOldVersion(requestParams, session) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b, _c, _d, _e;\n        try {\n            (0, core_1.logDebug)(\"connectMethodsAdaptOldVersion start params :\", JSON.stringify(requestParams));\n            let callBackParams = {};\n            if (requestParams.method === \"solana_signMessage\") {\n                let solAccount = (_a = session.namespaces[core_1.NameSpaceKeySOL]) === null || _a === void 0 ? void 0 : _a.accounts.filter(function (account1) {\n                    return account1.startsWith(requestParams.chainId);\n                })[0];\n                const solAddress = (0, provider_1.fromAccountToAddress)(solAccount);\n                if (requestParams.params && solAddress && \"message\" in requestParams.params) {\n                    let realMessage = requestParams.params.message;\n                    if (((_b = session.wallet) === null || _b === void 0 ? void 0 : _b.appName) == \"OKX Wallet\") {\n                        let encodeMessage = new TextEncoder().encode(realMessage);\n                        realMessage = bs58_1.default.encode(encodeMessage);\n                    }\n                    requestParams.params = {\n                        message: realMessage,\n                        \"pubkey\": solAddress\n                    };\n                    callBackParams = {\n                        publicKey: solAddress\n                    };\n                    (0, core_1.logDebug)(\"solana_signMessage account and address:\", JSON.stringify(solAccount), solAddress);\n                    (0, core_1.logDebug)(\"solana_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"sui_signMessage\" || requestParams.method === \"sui_signPersonalMessage\") {\n                if (\"message\" in requestParams.params && requestParams.params.message) {\n                    let suiMessage = JSON.parse(JSON.stringify(requestParams.params.message));\n                    let convertedArray = Object.values(suiMessage);\n                    let uint8Array = new Uint8Array(convertedArray);\n                    let decoder = new TextDecoder(\"utf8\");\n                    let b64encoded = btoa(decoder.decode(uint8Array));\n                    requestParams.params = {\n                        message: atob(b64encoded),\n                    };\n                    console.log(\"sui_signMessag suiMessagee suiMessageb64:>>>>\", JSON.stringify(requestParams.params), b64encoded);\n                    if (requestParams.method === \"sui_signMessage\") {\n                        callBackParams = {\n                            \"messageBytes\": b64encoded,\n                            \"signature\": \"\"\n                        };\n                    }\n                    else if (requestParams.method === \"sui_signPersonalMessage\") {\n                        callBackParams = {\n                            \"bytes\": b64encoded,\n                            \"signature\": \"\"\n                        };\n                    }\n                    (0, core_1.logDebug)(\"sui_signMessage/sui_signPersonalMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"btc_signMessage\") {\n                let btcAccounts = (_c = session.namespaces[core_1.NameSpaceKeyBtc]) === null || _c === void 0 ? void 0 : _c.accounts.filter(function (account2) {\n                    return account2.startsWith(requestParams.chainId);\n                });\n                let btcAccount = btcAccounts[0];\n                const btcAddress = (0, provider_1.fromAccountToAddress)(btcAccount);\n                (0, core_1.logDebug)(\"btc_signMessage account and address:\", JSON.stringify(btcAccount), btcAddress);\n                if (btcAddress) {\n                    if (\"message\" in requestParams.params && requestParams.params.message && typeof requestParams.params.message === 'string') {\n                        requestParams.params = {\n                            from: btcAddress,\n                            signStr: requestParams.params.message\n                        };\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                    }\n                    requestParams.params[\"from\"] = btcAddress;\n                    (0, core_1.logDebug)(\"btc_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"aptos_signMessage\") {\n                let paramData = requestParams.params;\n                let aptosAccount = (_d = session.namespaces[core_1.NameSpaceKeyAptos]) === null || _d === void 0 ? void 0 : _d.accounts.filter(function (account3) {\n                    return account3.startsWith(requestParams.chainId);\n                })[0];\n                let aptosAddress = (0, provider_1.fromAccountToAddress)(aptosAccount);\n                if (paramData && aptosAddress) {\n                    let prefix = \"APTOS\";\n                    let message = \"\", nonce = \"\";\n                    var fullMessage = prefix;\n                    let application = window.location.protocol + \"//\" + window.location.hostname;\n                    if (\"address\" in paramData && paramData.address) {\n                        fullMessage += \"\\naddress: \" + aptosAddress;\n                    }\n                    if (\"application\" in paramData && paramData.application) {\n                        fullMessage += \"\\napplication: \" + application;\n                    }\n                    let aptosChainId = 1;\n                    if (\"chainId\" in paramData && paramData.chainId) {\n                        if (paramData.chainId == \"aptos:mainnet\") {\n                            aptosChainId = 1;\n                        }\n                        else if (paramData.chainId == \"movement:testnet\") {\n                            aptosChainId = 2;\n                        }\n                        fullMessage += \"\\nchainId: \" + aptosChainId;\n                    }\n                    if (\"message\" in paramData) {\n                        fullMessage += \"\\nmessage: \" + paramData.message;\n                        message = paramData.message;\n                    }\n                    if (\"nonce\" in paramData) {\n                        fullMessage += \"\\nnonce: \" + paramData.nonce;\n                        nonce = paramData.nonce;\n                    }\n                    const utf8Array = new TextEncoder().encode(fullMessage);\n                    const hex = Array.from(utf8Array)\n                        .map(byte => byte.toString(16).padStart(2, \"0\"))\n                        .join(\"\");\n                    requestParams.params = {\n                        \"message\": hex,\n                    };\n                    (0, core_1.logDebug)(\"aptos_signMessage requestParams:\", JSON.stringify(requestParams));\n                    callBackParams = {\n                        address: aptosAddress,\n                        application: application,\n                        chainId: aptosChainId,\n                        fullMessage: fullMessage,\n                        message: message,\n                        nonce: nonce,\n                        prefix: prefix,\n                        signature: \"\",\n                    };\n                    (0, core_1.logDebug)(\"aptos_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"cosmos_signArbitrary\") {\n                let cosmosAccount = (_e = session === null || session === void 0 ? void 0 : session.namespaces[core_1.NameSpaceKeyCosmos]) === null || _e === void 0 ? void 0 : _e.accounts.filter(function (account_cosmos) {\n                    return account_cosmos.startsWith(requestParams.chainId);\n                })[0];\n                const cosmosAddress = (0, provider_1.fromAccountToAddress)(cosmosAccount);\n                let cosmosData = requestParams.params[\"message\"];\n                const cosmosBase64Encoded = btoa(cosmosData);\n                (0, core_1.logDebug)(\"cosmos_signArbitrary account and address:\", JSON.stringify(cosmosAccount), cosmosAddress);\n                (0, core_1.logDebug)(\"cosmos_signArbitrary cosmosBase64Encoded:\", cosmosBase64Encoded);\n                if (cosmosData && cosmosAddress) {\n                    const signDoc = {\n                        chain_id: \"\",\n                        account_number: \"0\",\n                        sequence: \"0\",\n                        fee: {\n                            gas: \"0\",\n                            amount: []\n                        },\n                        msgs: [{\n                                \"type\": \"sign/MsgSignData\",\n                                \"value\": {\n                                    \"signer\": cosmosAddress,\n                                    \"data\": cosmosBase64Encoded\n                                }\n                            }],\n                        memo: \"\"\n                    };\n                    requestParams.params = {\n                        \"signer\": cosmosAddress,\n                        \"chain_id\": requestParams.chainId.split(\":\")[1],\n                        \"data\": signDoc\n                    };\n                    (0, core_1.logDebug)(\"cosmos_signArbitrary callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            (0, core_1.logDebug)(\"sol_handleSignatureData end params:\", JSON.stringify(requestParams));\n        }\n        catch (error) {\n            throw error;\n        }\n    });\n}\nfunction connectMethodsResponseUpdate(session, requestParams) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a;\n        try {\n            if (session.signResponse) {\n                (0, core_1.logDebug)(\"connectMethodsResponseUpdate signResponse:\", JSON.stringify(session.signResponse));\n                (0, core_1.logDebug)(\"connectMethodsResponseUpdate session.namespaces:\", JSON.stringify(session.namespaces));\n                for (const methodItem of session.signResponse) {\n                    (0, core_1.logDebug)(\"connectMethodsResponseUpdate methodItem:\", JSON.stringify(methodItem));\n                    if (\"result\" in methodItem) {\n                        if (methodItem.method === \"solana_signMessage\") {\n                            let solanaSuccessData = methodItem.result;\n                            (0, core_1.logDebug)(\"solana_signMessage methodItem.chainId:\", methodItem.chainId);\n                            let account = (_a = session.namespaces[core_1.NameSpaceKeySOL]) === null || _a === void 0 ? void 0 : _a.accounts.filter(function (account) {\n                                (0, core_1.logDebug)(\"solana_signMessage account:\", account);\n                                return account.startsWith(methodItem.chainId);\n                            })[0];\n                            (0, core_1.logDebug)(\"solana_signMessage result account:\", solanaSuccessData, account);\n                            if (solanaSuccessData && account) {\n                                methodItem.result = {\n                                    \"signature\": bs58_1.default.decode(solanaSuccessData),\n                                    \"publicKey\": (0, provider_1.fromAccountToAddress)(account)\n                                };\n                            }\n                        }\n                        else if (methodItem.method === \"sui_signMessage\" || methodItem.method === \"sui_signPersonalMessage\") {\n                            let suiMethod = requestParams.filter(function (requestMethod) {\n                                return requestMethod.method === methodItem.method;\n                            })[0];\n                            if (suiMethod && suiMethod.params && \"message\" in suiMethod.params) {\n                                let suiMessage = suiMethod.params.message;\n                                let suiMessageb64 = btoa(suiMessage);\n                                console.log(\"sui_signMessag suiMessagee suiMessageb64:>>>>\", suiMessage, suiMessageb64);\n                                if (methodItem.method === \"sui_signMessage\") {\n                                    methodItem.result = {\n                                        \"messageBytes\": suiMessageb64,\n                                        \"signature\": methodItem.result\n                                    };\n                                }\n                                else if (methodItem.method === \"sui_signPersonalMessage\") {\n                                    methodItem.result = {\n                                        \"bytes\": suiMessageb64,\n                                        \"signature\": methodItem.result\n                                    };\n                                }\n                            }\n                        }\n                        else if (methodItem.method === \"aptos_signMessage\") {\n                            if (methodItem.chainId === \"aptos:637\") {\n                                methodItem.chainId = \"aptos:mainnet\";\n                            }\n                            else if (methodItem.chainId === \"aptos:70000060\") {\n                                methodItem.chainId = \"movement:testnet\";\n                            }\n                            methodItem.result = JSON.parse(methodItem.result);\n                            console.log(\"aptos_signMessage result methodItem.result before:>>>>\", JSON.stringify(methodItem.result));\n                            if (methodItem.result && \"signature\" in methodItem.result) {\n                                let aptosSignature = methodItem.result.signature;\n                                if (aptosSignature && aptosSignature.startsWith(\"0x\")) {\n                                    aptosSignature = aptosSignature.slice(2, aptosSignature.length);\n                                    methodItem.result.signature = aptosSignature;\n                                }\n                            }\n                            console.log(\"aptos_signMessage result methodItem.result after:>>>>\", JSON.stringify(methodItem.result));\n                        }\n                        else if (methodItem.method === \"cosmos_signArbitrary\") {\n                            methodItem.result = JSON.parse(methodItem.result);\n                        }\n                        else if (methodItem.method == 'starknet_signMessage') {\n                            let results = methodItem.result;\n                            if (typeof results == 'string') {\n                                results = JSON.parse(results);\n                            }\n                            methodItem.result = [results[\"signedDataR\"], results[\"signedDataS\"]];\n                        }\n                        else if (methodItem.method == 'sync_all_addresses') {\n                            methodItem.result = syncResoonseToRequire(methodItem.result);\n                        }\n                    }\n                }\n            }\n        }\n        catch (error) {\n            (0, core_1.logDebug)(\"connectMethodsResponseUpdate signResponse Error:\", JSON.stringify(error));\n            throw error;\n        }\n    });\n}\nfunction connectMethodsToConnectWalletMethods(params, requireNameSpace) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            (0, core_1.logDebug)(\"connectMethodsToConnectWalletMethods requestMethods:\", JSON.stringify(params));\n            const result = [];\n            //TODO  后面需要打开限制\n            if (params && params.length > 1) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connectAndSign/openModalAndSign signRequest only support one data`);\n            }\n            if (!requireNameSpace && params && params.length > 0) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error , RequestMethods cannot be added when the NameSpace is empty`);\n            }\n            // check chianId\n            for (const methodItem of params) {\n                if (methodItem.method === \"aptos_signMessage\") { //update chainId\n                    if (methodItem.chainId === \"aptos:mainnet\") {\n                        methodItem.chainId = \"aptos:637\";\n                    }\n                    else if (methodItem.chainId === \"movement:testnet\") {\n                        methodItem.chainId = \"aptos:70000060\";\n                    }\n                }\n                // check chianId\n                if (methodItem.method === \"wallet_addEthereumChain\") {\n                    var includeEip155 = requireNameSpace === null || requireNameSpace === void 0 ? void 0 : requireNameSpace.some(space => space.namespace.includes(\"eip155\"));\n                    if (!includeEip155) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error, When using '${methodItem.method}', the EVM chain needs to be included in the NameSpace`);\n                    }\n                }\n                else if (methodItem.method === \"sync_all_addresses\") {\n                    if ((0, provider_1.syncAddressHostAvailable)()) {\n                        methodItem.chainId = \"\";\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                    }\n                }\n                else {\n                    const includeChain = !!(requireNameSpace === null || requireNameSpace === void 0 ? void 0 : requireNameSpace.some(space => space.chains.some(chain => chain.includes(`${methodItem.chainId}`))));\n                    if (!includeChain) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error, When using '${methodItem.method}', NameSpace must contain '${methodItem.chainId}'`);\n                    }\n                }\n            }\n            for (const item of params) {\n                if (!exports.connectSupportMethods.includes(item.method)) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect requestMethods not support method, method: '${item.method}'`);\n                }\n                if (item.method === \"wallet_addEthereumChain\") {\n                    if (Array.isArray(item.params)) {\n                        const paramsArr = item.params;\n                        if (paramsArr && paramsArr.length === 1) {\n                            const firstParam = paramsArr[0];\n                            if (isRecord(firstParam)) {\n                                item.params = firstParam;\n                            }\n                        }\n                        else if (paramsArr && paramsArr.length > 1) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params only support one data, method: '${item.method}'`);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is nil, method: '${item.method}'`);\n                        }\n                    }\n                }\n                else if (item.method === \"personal_sign\") {\n                    if (isArray(item.params)) {\n                        if (item.params && item.params.length !== 1) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params error,  method: '${item.method}' `);\n                        }\n                        let firstObj = item.params[0];\n                        if (firstObj && typeof firstObj === 'string') {\n                            item.params = {\n                                message: firstObj\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                }\n                else if (item.method === \"sui_signMessage\" || item.method === \"sui_signPersonalMessage\") {\n                    if (isRecord(item.params) && 'message' in item.params) {\n                        if (item.params.message) {\n                            (0, core_1.logDebug)(\"sui_signMessage item.params.message :\", item.params.message);\n                            let message = JSON.parse(JSON.stringify(item.params.message));\n                            let convertedArray = Object.values(message);\n                            let uint8Array = new Uint8Array(convertedArray);\n                            let decoder = new TextDecoder(\"utf8\");\n                            let b64encoded = btoa(decoder.decode(uint8Array));\n                            item.params.message = atob(b64encoded);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"solana_signMessage\") {\n                    if (isRecord(item.params) && 'message' in item.params) {\n                        if (item.params.message && typeof item.params.message === 'string') {\n                            let encodeMessage = new TextEncoder().encode(item.params.message);\n                            item.params[\"bs58Message\"] = bs58_1.default.encode(encodeMessage);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"aptos_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (item.chainId && (item.chainId === \"aptos:637\" || item.chainId === \"aptos:70000060\")) {\n                            var aptosParams = item.params;\n                            var currentURL = window.location.protocol + \"//\" + window.location.hostname;\n                            let signChainId = 1;\n                            if (item.chainId === \"aptos:637\") {\n                            }\n                            else if (item.chainId === \"aptos:70000060\") {\n                                signChainId = 2;\n                            }\n                            item.params = {\n                                data: aptosParams,\n                                applicationUrl: currentURL,\n                                prefix: \"APTOS\",\n                                aptosChainId: signChainId\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params chainId is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"cosmos_signArbitrary\") {\n                    if (isRecord(item.params)) {\n                        if (item.params.message && typeof item.params.message === 'string') {\n                            const base64Encoded = btoa(item.params.message);\n                            let cosmosChain = item.chainId.split(\":\")[1];\n                            if (cosmosChain) {\n                                item.params = {\n                                    chain_id: cosmosChain,\n                                    data: {\n                                        chain_id: \"\",\n                                        account_number: \"0\",\n                                        sequence: \"0\",\n                                        fee: {\n                                            gas: \"0\",\n                                            amount: []\n                                        },\n                                        msgs: [{\n                                                \"type\": \"sign/MsgSignData\",\n                                                \"value\": {\n                                                    \"signer\": \"\", //address\n                                                    \"data\": base64Encoded\n                                                }\n                                            }],\n                                        memo: \"\"\n                                    }\n                                };\n                            }\n                            else {\n                                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params chainId is error,  method: '${item.method}' `);\n                            }\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params message is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method == \"tron_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (\"message\" in item.params && item.params.message && typeof item.params.message === 'string') {\n                            item.params.message = stringToHex(item.params.message);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method == \"btc_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (\"message\" in item.params && item.params.message && typeof item.params.message === 'string') {\n                            item.params = {\n                                signStr: item.params.message\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                (0, core_1.logDebug)(\"connectMethodsToConnectWalletMethods item:\", JSON.stringify(item));\n                result.push(item);\n            }\n            return result;\n        }\n        catch (error) {\n            throw error;\n        }\n    });\n}\nfunction stringToHex(str) {\n    let hex = '';\n    for (let i = 0; i < str.length; i++) {\n        hex += str.charCodeAt(i).toString(16).padStart(2, '0');\n    }\n    return hex;\n}\nfunction syncResoonseToRequire(responseAddressStr) {\n    const allAddress = JSON.parse(responseAddressStr);\n    const result = {\n        type: allAddress.type,\n        isEvm: allAddress.isEvm,\n        walletName: allAddress.walletName,\n        deriveName: allAddress.deriveName,\n        addresses: allAddress.addresses.map((addr) => ({\n            coinId: addr.ci,\n            address: addr.a && addr.a !== 'null' ? addr.a : allAddress.evmAddress,\n        })),\n    };\n    return result;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.creatNotSupportMethodItemReplay = exports.connectMethodsAdaptOldVersion = void 0;\nvar ConnectMethodUtils_1 = require(\"./ConnectMethodUtils\");\nObject.defineProperty(exports, \"connectMethodsAdaptOldVersion\", { enumerable: true, get: function () { return ConnectMethodUtils_1.connectMethodsAdaptOldVersion; } });\nObject.defineProperty(exports, \"creatNotSupportMethodItemReplay\", { enumerable: true, get: function () { return ConnectMethodUtils_1.creatNotSupportMethodItemReplay; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAccountsChains = getAccountsChains;\nexports.nameSpaceToConnectWalletNameSpace = nameSpaceToConnectWalletNameSpace;\nexports.fillParamsToSession = fillParamsToSession;\nexports.isCaipNamespace = isCaipNamespace;\nexports.parseNamespaceKey = parseNamespaceKey;\nconst core_1 = require(\"@okxconnect/core\");\nfunction getAccountsChains(accounts) {\n    const chains = [];\n    accounts.forEach((account) => {\n        const [chain, chainId] = account.split(\":\");\n        chains.push(`${chain}:${chainId}`);\n    });\n    return chains;\n}\nfunction nameSpaceToConnectWalletNameSpace(namespaces) {\n    var result = [];\n    if (!namespaces) {\n        return result;\n    }\n    Object.keys(namespaces).forEach((key) => {\n        if (key === core_1.NameSpaceKeyEip155 || key === core_1.NameSpaceKeySOL || key === core_1.NameSpaceKeySui || key === core_1.NameSpaceKeyAptos\n            || key == core_1.NameSpaceKeyBtc || key === core_1.NameSpaceKeyTON || key === core_1.NameSpaceKeyCosmos || key === core_1.NameSpaceKeyTron || key === core_1.NameSpaceKeyStarknet) {\n            if (namespaces[key].chains) {\n                result.push({\n                    namespace: key,\n                    chains: namespaces[key].chains,\n                    params: namespaces[key].params,\n                });\n            }\n        }\n    });\n    return result;\n}\nfunction fillParamsToSession(session, namespaces, optionalNamespaces, sessionConfig) {\n    // Helper function to merge rpcMaps\n    const mergeRpcMap = (targetRpcMap, sourceRpcMap) => {\n        Object.assign(targetRpcMap, sourceRpcMap);\n    };\n    // Merge function for namespaces\n    const mergeNamespaces = (target, source) => {\n        for (const key in source) {\n            if (source.hasOwnProperty(key) && source[key].rpcMap) {\n                if (source[key].rpcMap) {\n                    if (!target[key].rpcMap) {\n                        target[key].rpcMap = {};\n                    }\n                    // 合并 rpcMap\n                    mergeRpcMap(target[key].rpcMap, source[key].rpcMap);\n                }\n                if (source[key].defaultChain && target[key].defaultChain === undefined) {\n                    //defaultChain need in session nameSpace\n                    if (target[key].chains.some(chain => chain.split(\":\")[1] === source[key].defaultChain)) {\n                        target[key].defaultChain = source[key].defaultChain;\n                    }\n                }\n            }\n        }\n    };\n    // 合并 namespaces\n    if (namespaces) {\n        mergeNamespaces(session.namespaces, namespaces);\n    }\n    // 合并 optionalNamespaces\n    if (optionalNamespaces) {\n        mergeNamespaces(session.namespaces, optionalNamespaces);\n    }\n    for (const key in session.namespaces) {\n        const namespace = session.namespaces[key];\n        if (!(namespace === null || namespace === void 0 ? void 0 : namespace.accounts) || namespace.accounts.length === 0) {\n            delete session.namespaces[key];\n        }\n    }\n    if (session.namespaces[core_1.NameSpaceKeyBtc] && session.wallet.appName === core_1.OKXWalletName) {\n        fixMobileBtcSession(session.namespaces[core_1.NameSpaceKeyBtc]);\n    }\n    session.sessionConfig = sessionConfig;\n}\nfunction fixMobileBtcSession(btcNameSpace) {\n    try {\n        if (btcNameSpace && btcNameSpace.extra) {\n            var data = btcNameSpace.extra;\n            Object.keys(data).forEach(key => {\n                const item = data[key];\n                if (Number(item.addressType) === 6) {\n                    item.publicKey = item.compressedPublicKey.slice(2);\n                }\n                else {\n                    item.publicKey = item.compressedPublicKey;\n                }\n            });\n        }\n    }\n    catch (e) {\n        (0, core_1.logDebug)(\"namespaces fixMobileBtcSession error\");\n    }\n}\n/**\n * util designed for Wallets that builds namespaces structure by provided supported chains, methods, events & accounts.\n * It takes required & optional namespaces provided in the session proposal\n * along with the supported chains/methods/events/accounts by the wallet and returns a structured namespaces object\n * @param {BuildApprovedNamespacesParams} params\n * @returns {SessionTypes.Namespaces}\n */\n// export function buildApprovedNamespaces(\n//   params: BuildApprovedNamespacesParams,\n// ): SessionTypes.Namespaces {\n//   const {\n//     proposal: { requiredNamespaces, optionalNamespaces = {} },\n//     supportedNamespaces,\n//   } = params;\n//   const normalizedRequired = normalizeNamespaces(requiredNamespaces);\n//   const normalizedOptional = normalizeNamespaces(optionalNamespaces);\n//\n//   // build approved namespaces\n//   const namespaces = {};\n//   Object.keys(supportedNamespaces).forEach((namespace) => {\n//     const supportedChains = supportedNamespaces[namespace].chains;\n//     const supportedMethods = supportedNamespaces[namespace].methods;\n//     const supportedEvents = supportedNamespaces[namespace].events;\n//     const supportedAccounts = supportedNamespaces[namespace].accounts;\n//\n//     supportedChains.forEach((chain) => {\n//       if (!supportedAccounts.some((account) => account.includes(chain))) {\n//         throw new Error(`No accounts provided for chain ${chain} in namespace ${namespace}`);\n//       }\n//     });\n//\n//     namespaces[namespace] = {\n//       chains: supportedChains,\n//       methods: supportedMethods,\n//       events: supportedEvents,\n//       accounts: supportedAccounts,\n//     };\n//   });\n//\n//   // verify all required namespaces are supported\n//   const err = isConformingNamespaces(requiredNamespaces, namespaces, \"approve()\");\n//   if (err) throw new Error(err.message);\n//\n//   const approvedNamespaces = {};\n//\n//   // if both required & optional namespaces are empty, return all supported namespaces by the wallet\n//   if (!Object.keys(requiredNamespaces).length && !Object.keys(optionalNamespaces).length)\n//     return namespaces;\n//\n//   // assign accounts for the required namespaces\n//   Object.keys(normalizedRequired).forEach((requiredNamespace) => {\n//     const chains = supportedNamespaces[requiredNamespace].chains.filter((chain) =>\n//       normalizedRequired[requiredNamespace]?.chains?.includes(chain),\n//     );\n//     const methods = supportedNamespaces[requiredNamespace].methods.filter((method) =>\n//       normalizedRequired[requiredNamespace]?.methods?.includes(method),\n//     );\n//     const events = supportedNamespaces[requiredNamespace].events.filter((event) =>\n//       normalizedRequired[requiredNamespace]?.events?.includes(event),\n//     );\n//\n//     const accounts = chains\n//       .map((chain: string) =>\n//         supportedNamespaces[requiredNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[requiredNamespace] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   });\n//\n//   // add optional namespaces\n//   Object.keys(normalizedOptional).forEach((optionalNamespace) => {\n//     if (!supportedNamespaces[optionalNamespace]) return;\n//\n//     const chainsToAdd = normalizedOptional[optionalNamespace]?.chains?.filter((chain) =>\n//       supportedNamespaces[optionalNamespace].chains.includes(chain),\n//     );\n//     const methodsToAdd = supportedNamespaces[optionalNamespace].methods.filter((method) =>\n//       normalizedOptional[optionalNamespace]?.methods?.includes(method),\n//     );\n//     const eventsToAdd = supportedNamespaces[optionalNamespace].events.filter((event) =>\n//       normalizedOptional[optionalNamespace]?.events?.includes(event),\n//     );\n//\n//     const accountsToAdd = chainsToAdd\n//       ?.map((chain: string) =>\n//         supportedNamespaces[optionalNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[optionalNamespace] = {\n//       chains: mergeArrays(approvedNamespaces[optionalNamespace]?.chains, chainsToAdd),\n//       methods: mergeArrays(approvedNamespaces[optionalNamespace]?.methods, methodsToAdd),\n//       events: mergeArrays(approvedNamespaces[optionalNamespace]?.events, eventsToAdd),\n//       accounts: mergeArrays(approvedNamespaces[optionalNamespace]?.accounts, accountsToAdd),\n//     };\n//   });\n//\n//   return approvedNamespaces;\n// }\nfunction isCaipNamespace(namespace) {\n    return namespace.includes(\":\");\n}\nfunction parseNamespaceKey(namespace) {\n    return isCaipNamespace(namespace) ? namespace.split(\":\")[0] : namespace;\n}\n/**\n * Converts\n * ```\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * ```\n * into\n * ```\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *```\n */\n// export function normalizeNamespaces(\n//   namespaces: ProposalTypes.RequiredNamespaces,\n// ): ProposalTypes.RequiredNamespaces {\n//   const normalizedNamespaces = {} as ProposalTypes.RequiredNamespaces;\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       methods: mergeArrays(methods, normalizedNamespaces[normalizedKey]?.methods),\n//       events: mergeArrays(events, normalizedNamespaces[normalizedKey]?.events),\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n// export function getNamespacesFromAccounts(accounts: string[]) {\n//   const namespaces = {};\n//   accounts?.forEach((account) => {\n//     const [namespace, chainId] = account.split(\":\");\n//     if (!namespaces[namespace]) {\n//       namespaces[namespace] = {\n//         accounts: [],\n//         chains: [],\n//         events: [],\n//       };\n//     }\n//     namespaces[namespace].accounts.push(account);\n//     namespaces[namespace].chains.push(`${namespace}:${chainId}`);\n//   });\n//\n//   return namespaces;\n// }\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PROVIDER_EVENTS = void 0;\nexports.PROVIDER_EVENTS = {\n    DEFAULT_CHAIN_CHANGED: \"default_chain_changed\",\n    UPDATE_NAMESPACES: \"update_name_spaces\",\n    SESSION_CONNECTING: \"session_connecting\"\n};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./values\"), exports);\n__exportStar(require(\"./events\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GENERIC_SUBPROVIDER_NAME = exports.RPC_URL = exports.STORAGE = exports.CONTEXT = exports.WC_VERSION = exports.PROTOCOL = exports.RELAY_URL = exports.LOGGER = void 0;\nexports.LOGGER = \"error\";\nexports.RELAY_URL = \"wss://relay.walletconnect.com\";\nexports.PROTOCOL = \"wc\";\nexports.WC_VERSION = 2;\nexports.CONTEXT = \"universal_provider\";\nexports.STORAGE = `${exports.PROTOCOL}@${exports.WC_VERSION}:${exports.CONTEXT}:`;\nexports.RPC_URL = \"https://rpc.walletconnect.com/v1/\";\nexports.GENERIC_SUBPROVIDER_NAME = \"generic\";\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./types\"), exports);\n__exportStar(require(\"./utils\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass AptosProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"aptos\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"aptos request --args--string>\", (0, core_1.safeJsonStringify)(args));\n            (0, core_1.logDebug)(\"aptos provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = AptosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass BtcProvider {\n    constructor(opts, name, client, events) {\n        this.name = core_1.NameSpaceKeyBtc;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"btc request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"btc provider namespace: \", JSON.stringify(this.namespace));\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = BtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass CosmosProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyCosmos;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"cosmos request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"cosmos provider namespace: \", JSON.stringify(this.namespace));\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = CosmosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Eip155Provider = void 0;\nconst utils_1 = require(\"../utils\");\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nclass Eip155Provider {\n    constructor(opts, client, events) {\n        this.name = \"eip155\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = parseInt(this.getDefaultChain());\n        // rpc\n        this.httpProviders = this.createHttpProviders();\n        (0, core_1.logDebug)(\"eip155 constructor --opts.namespace-->\", opts.namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    isArray(value) {\n        return typeof value === \"object\" && value !== null && Array.isArray(value);\n    }\n    updateRequestParams(args) {\n        let isDic = args.params && typeof args.params === 'object' && !Array.isArray(args.params);\n        if (args.method === 'wallet_switchEthereumChain') {\n            const switchChainId = args.chainId.split(\":\")[1];\n            // const hexChainId = parseInt(switchChainId, 16);\n            const decimalNumber = parseInt(switchChainId, 10);\n            if (isNaN(decimalNumber)) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid decimal number,  chainId: '${switchChainId}' `);\n            }\n            if (!args.params) {\n                args.params = { chainId: '0x' + decimalNumber.toString(16) };\n            }\n            else if (isDic) { //为 Record<string, unknown>\n                let params = args.params;\n                if (!('chainId' in params)) {\n                    params['chainId'] = '0x' + decimalNumber.toString(16);\n                    args.params = params;\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params error ,  method: '${args.method}' `);\n            }\n        }\n        else if (args.method === 'personal_sign'\n            || args.method === 'eth_signTypedData_v4'\n            || args.method === 'eth_sendTransaction'\n            || args.method === 'wallet_watchAsset') {\n            if (!args.params) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params is nil, method: '${args.method}'`);\n            }\n            if (this.isRecord(args.params)) {\n                let params = args.params;\n                (0, core_1.logDebug)(\"eip155 updateRequestParams params>\", JSON.stringify(params));\n                if ('chainId' in params) {\n                    const selectedChainId = args.chainId.split(\":\")[1];\n                    const chainNum = parseInt(selectedChainId, 10);\n                    let paramsChainString = String(params.chainId);\n                    let paramsChainId;\n                    if (paramsChainString.startsWith(this.name) && args.chainId === paramsChainString) { //为\n                        paramsChainId = chainNum;\n                    }\n                    else if (paramsChainString.startsWith(\"0x\")) {\n                        paramsChainId = parseInt(paramsChainString, 16);\n                    }\n                    else if (!isNaN(Number(paramsChainString))) { //数字\n                        paramsChainId = parseInt(paramsChainString, 10);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid params.chainId format, method: '${args.method}'`);\n                    }\n                    if (chainNum !== paramsChainId) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params.chainId not equal chain,  method: '${args.method}' `);\n                    }\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid request params type, method: '${args.method}'`);\n            }\n        }\n    }\n    //adapt array\n    adaptArray(args) {\n        if (args.method === 'wallet_switchEthereumChain'\n            || args.method === 'wallet_addEthereumChain'\n            || args.method === 'wallet_watchAsset'\n            || args.method === 'eth_sendTransaction') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr) {\n                    if (paramsArr.length === 1) {\n                        let firstParam = args.params[0];\n                        if (this.isRecord(firstParam)) {\n                            args.params = firstParam;\n                        }\n                    }\n                    else if (paramsArr.length > 1) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                    }\n                }\n            }\n        }\n        else if (args.method === 'eth_signTypedData_v4') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr && paramsArr.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                }\n                else if (paramsArr && paramsArr.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let messageObj = {};\n                if (paramsArr && paramsArr.length === 2) {\n                    let addressObj = args.params[0]; //address\n                    if (addressObj && typeof addressObj === 'string') { //check address\n                        let isEqual = false;\n                        this.namespace.accounts.forEach((account) => {\n                            let chainAddress = (0, utils_1.fromAccountToAddress)(account);\n                            if (chainAddress.toLowerCase() === addressObj.toLowerCase()) {\n                                isEqual = true;\n                            }\n                        });\n                        (0, core_1.logDebug)(\"eip155 adaptArray eth_signTypedData_v4 >>>isEqual: \", isEqual);\n                        if (!isEqual) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error, not equal,  method: '${args.method}' `);\n                        }\n                        if (this.isRecord(args.params[1])) {\n                            messageObj = args.params[1];\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error , not string,  method: '${args.method}' `);\n                    }\n                }\n                else if (paramsArr && paramsArr.length === 1) {\n                    if (this.isRecord(args.params[0])) {\n                        messageObj = args.params[0];\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                    }\n                }\n                try {\n                    let messages = JSON.stringify(messageObj);\n                    args.params = {\n                        typedDataJson: messages\n                    };\n                }\n                catch (err) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params call JSON.stringify() failed,  method: '${args.method}' `);\n                }\n            }\n        }\n        else if (args.method === 'personal_sign') {\n            if (this.isArray(args.params)) {\n                if (args.params && args.params.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params error,  method: '${args.method}' `);\n                }\n                else if (args.params && args.params.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let firstObj = args.params[0];\n                let secondObj = args.params[1];\n                if (secondObj && typeof secondObj === 'string') { //check address\n                    let isEqual = false;\n                    this.namespace.accounts.forEach((account) => {\n                        let chainAddress = (0, utils_1.fromAccountToAddress)(account);\n                        if (chainAddress.toLowerCase() === secondObj.toLowerCase()) {\n                            isEqual = true;\n                        }\n                    });\n                    (0, core_1.logDebug)(\"eip155 adaptArray personal_sign >>>isEqual: \", isEqual);\n                    if (!isEqual) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error,  method: '${args.method}' `);\n                    }\n                }\n                if (firstObj && typeof firstObj === 'string') {\n                    args.params = {\n                        message: firstObj\n                    };\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is error,  method: '${args.method}' `);\n                }\n            }\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"eth_requestAccounts\":\n            case \"eth_accounts\":\n            case \"eth_chainId\":\n                return false;\n            case \"eth_sendTransaction\":\n            case \"eth_signTransaction\":\n            case \"eth_sign\":\n            case \"personal_sign\":\n            case \"eth_signTypedData\":\n            case \"wallet_addEthereumChain\":\n            case \"wallet_watchAsset\":\n            case \"eth_signTypedData_v4\":\n                return true;\n            case \"wallet_switchEthereumChain\": {\n                this.adaptArray(args);\n                this.updateRequestParams(args);\n                const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n                return !this.isChainApproved(parsedChainId);\n            }\n            default:\n                return false;\n        }\n        return false;\n    }\n    configAddressAdaptInjectWallet(args) {\n        this.namespace.accounts.forEach((account) => {\n            if (account.includes(args.chainId)) {\n                args.address = (0, utils_1.fromAccountToAddress)(account);\n            }\n        });\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.adaptArray(args);\n            (0, core_1.logDebug)(\"eip155 request --args--string>\", JSON.stringify(args));\n            this.updateRequestParams(args);\n            (0, core_1.logDebug)(\"eip155 request --params--string>\", JSON.stringify(args));\n            this.configAddressAdaptInjectWallet(args);\n            switch (args.method) {\n                case \"eth_requestAccounts\":\n                    return this.getAccounts();\n                case \"eth_accounts\":\n                    return this.getAccounts();\n                case \"eth_chainId\":\n                    return parseInt(this.getDefaultChain());\n                case \"wallet_switchEthereumChain\": {\n                    return (yield this.handleSwitchChain(args));\n                }\n                case \"wallet_addEthereumChain\":\n                    return this.addEthereumChain(args);\n                default:\n                    break;\n            }\n            if (this.namespace.methods.includes(args.method)) {\n                // personal_sign\n                // eth_signTypedData_v4\n                // eth_sendTransaction\n                // wallet_watchAsset\n                try {\n                    const response = yield this.client.request(args);\n                    (0, core_1.logDebug)(\"eip155 request --response----string>\", JSON.stringify(response));\n                    if (this.isRecord(response)) {\n                        if ('result' in response) {\n                            let result = response.result;\n                            if (result && typeof result === 'string' && (result === \"true\" || result === \"false\")) {\n                                (0, core_1.logDebug)(\"eip155 request --wallet_watchAsset>>>>\", result === \"true\");\n                                return (result === \"true\");\n                            }\n                            return response.result;\n                        }\n                    }\n                    return response;\n                }\n                catch (e) {\n                    (0, core_1.logDebug)(`eip155 request --response --error--string> e instanceof OKXConnectError ${e instanceof core_1.OKXConnectError}`, JSON.stringify(e));\n                    throw e;\n                }\n            }\n            else {\n                (0, core_1.logDebug)('[RPC] request begin');\n                return yield this.getHttpProvider().request(args);\n            }\n        });\n    }\n    addEthereumChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let resultData = (yield this.client.request(args));\n            try {\n                if ('result' in resultData) {\n                    let successData = resultData;\n                    let account = resultData.result;\n                    if (account) {\n                        const nameSpace = account.split(\":\")[0];\n                        const chainId = account.split(\":\")[1];\n                        const chain = nameSpace + ':' + chainId;\n                        let newNameSpace = this.namespace;\n                        this.namespace.accounts.push(account);\n                        this.namespace.chains.push(chain);\n                        if (this.isRecord(args.params)) {\n                            if (\"rpcUrls\" in args.params) {\n                                let rpcUrls = args.params.rpcUrls;\n                                let rpcUrl = rpcUrls ? rpcUrls[0] : undefined;\n                                if (rpcUrl) {\n                                    if (this.namespace.rpcMap) {\n                                        this.namespace.rpcMap[chainId] = rpcUrl;\n                                    }\n                                    else {\n                                        this.namespace.rpcMap = {\n                                            [chainId]: rpcUrl\n                                        };\n                                    }\n                                    this.setHttpProvider(chainId, rpcUrl);\n                                }\n                            }\n                        }\n                        this.events.emit(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, {\n                            eip155: this.namespace\n                        });\n                    }\n                }\n                else {\n                    new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request error`);\n                }\n            }\n            catch (error) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request  error`);\n            }\n            return null;\n        });\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        this.chainId = parseInt(chainId);\n        // set rpc\n        if (!this.httpProviders[chainId]) {\n            const rpc = rpcUrl || (0, utils_1.getRpcUrl)(`${this.name}:${chainId}`, this.namespace);\n            if (!rpc) {\n                // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n                (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            }\n            else {\n                this.setHttpProvider(chainId, rpc);\n            }\n        }\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId.toString();\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // ---------- Private ----------------------------------------------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"eip155 getAccounts \", accounts, this.chainId);\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => {\n                return (0, utils_1.fromAccountToAddress)(account);\n            })),\n        ];\n    }\n    getHexChainIdFromRequest(args) {\n        let params = args.params;\n        let hexChainId = \"0x0\";\n        if (params && \"chainId\" in params) {\n            hexChainId = params.chainId;\n        }\n        hexChainId = hexChainId.startsWith(\"0x\") ? hexChainId : `0x${hexChainId}`;\n        (0, core_1.logDebug)(\"handleSwitchChain -->args \", args);\n        (0, core_1.logDebug)(\"handleSwitchChain -->hexChainId \", hexChainId);\n        const parsedChainId = parseInt(hexChainId, 16);\n        (0, core_1.logDebug)(\"handleSwitchChain -->parsedChainId \", parsedChainId);\n        return { parsedChainId, hexChainId };\n    }\n    handleSwitchChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n            if (this.isChainApproved(parsedChainId)) {\n                this.setDefaultChain(`${parsedChainId}`);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, `the method ${args.method} request  error`);\n            }\n        });\n    }\n    isChainApproved(chainId) {\n        return this.namespace.chains.includes(`${this.name}:${chainId}`);\n    }\n    // rpc\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            //   throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            (0, core_1.logDebug)('get parsed chain and rpc:', parsedChainId, parsedRpc);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        (0, core_1.logDebug)('get http providermap:', http);\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n}\nexports.Eip155Provider = Eip155Provider;\nexports.default = Eip155Provider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcConnection = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nconst DEFAULT_HTTP_HEADERS = {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n};\nconst DEFAULT_HTTP_METHOD = \"POST\";\nconst DEFAULT_FETCH_OPTS = {\n    headers: DEFAULT_HTTP_HEADERS,\n    method: DEFAULT_HTTP_METHOD,\n};\n// Source: https://nodejs.org/api/events.html#emittersetmaxlistenersn\nconst EVENT_EMITTER_MAX_LISTENERS_DEFAULT = 10;\nclass JsonRpcConnection {\n    constructor(url, disableProviderPing = false) {\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n        this.events = new eventemitter3_1.EventEmitter();\n        this.isAvailable = false;\n        this.registering = false;\n        if (!(0, core_2.isHttpUrl)(url)) {\n            throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n        }\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n    }\n    get connected() {\n        return this.isAvailable;\n    }\n    get connecting() {\n        return this.registering;\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            yield this.register(url);\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                throw new Error(\"Connection already closed\");\n            }\n            this.onClose();\n        });\n    }\n    send(payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                yield this.register();\n            }\n            try {\n                const body = (0, core_1.safeJsonStringify)(payload);\n                const res = yield (0, cross_fetch_1.default)(this.url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                const data = yield res.json();\n                this.onPayload({ data });\n            }\n            catch (e) {\n                this.onError(payload.id, e);\n            }\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    register() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            if (!(0, core_2.isHttpUrl)(url)) {\n                throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n            }\n            if (this.registering) {\n                return new Promise((resolve, reject) => {\n                    this.events.once(\"register_error\", (error) => {\n                        reject(error);\n                    });\n                    this.events.once(\"open\", () => {\n                        if (typeof this.isAvailable === \"undefined\") {\n                            return reject(new Error(\"HTTP connection is missing or invalid\"));\n                        }\n                        resolve();\n                    });\n                });\n            }\n            this.url = url;\n            this.registering = true;\n            try {\n                if (!this.disableProviderPing) {\n                    const body = (0, core_1.safeJsonStringify)({ id: 1, jsonrpc: \"2.0\", method: \"test\", params: [] });\n                    yield (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                }\n                this.onOpen();\n            }\n            catch (e) {\n                const error = this.parseError(e);\n                this.events.emit(\"register_error\", error);\n                this.onClose();\n                throw error;\n            }\n        });\n    }\n    onOpen() {\n        this.isAvailable = true;\n        this.registering = false;\n        this.events.emit(\"open\");\n    }\n    onClose() {\n        this.isAvailable = false;\n        this.registering = false;\n        this.events.emit(\"close\");\n    }\n    onPayload(e) {\n        if (typeof e.data === \"undefined\")\n            return;\n        const payload = typeof e.data === \"string\" ? (0, core_1.safeJsonParse)(e.data) : e.data;\n        this.events.emit(\"payload\", payload);\n    }\n    onError(id, e) {\n        const error = this.parseError(e);\n        const message = error.message || error.toString();\n        const payload = (0, core_2.formatJsonRpcError)(id, message);\n        this.events.emit(\"payload\", payload);\n    }\n    parseError(e, url = this.url) {\n        return (0, core_2.parseConnectionError)(e, url, \"HTTP\");\n    }\n}\nexports.JsonRpcConnection = JsonRpcConnection;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcProvider = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst types_1 = require(\"../../types\");\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nclass JsonRpcProvider extends types_1.IJSONRpcProvider {\n    constructor(connection) {\n        super(connection);\n        this.events = new eventemitter3_1.EventEmitter();\n        this.connected = false;\n        this.connecting = false;\n        this.hasRegisteredEventListeners = false;\n        this.connection = this.setConnection(connection);\n        if (this.connection.connected) {\n            this.registerEventListeners();\n        }\n    }\n    connect() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            yield this.open(connection);\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.close();\n        });\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    request(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.requestStrict((0, core_1.formatJsonRpcRequest)(request.method, request.params || [], (0, core_1.getBigIntRpcId)().toString()), // casting to any is required in order to use BigInt as rpcId\n            context);\n        });\n    }\n    // ---------- Protected ----------------------------------------------- //\n    requestStrict(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                if (!this.connection.connected) {\n                    try {\n                        yield this.open();\n                    }\n                    catch (e) {\n                        reject(e);\n                    }\n                }\n                this.events.on(`${request.id}`, (response) => {\n                    if ((0, core_1.isJsonRpcError)(response)) {\n                        reject(response.error);\n                    }\n                    else {\n                        resolve(response.result);\n                    }\n                });\n                try {\n                    (0, core_2.logDebug)('[RPC] >>> send request', request, context);\n                    yield this.connection.send(request, context);\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }));\n        });\n    }\n    setConnection(connection = this.connection) {\n        return connection;\n    }\n    onPayload(payload) {\n        this.events.emit(\"payload\", payload);\n        if ((0, core_1.isJsonRpcResponse)(payload)) {\n            this.events.emit(`${payload.id}`, payload);\n        }\n        else {\n            this.events.emit(\"message\", {\n                type: payload.method,\n                data: payload.params,\n            });\n        }\n    }\n    onClose(event) {\n        // Code 3000 indicates an abnormal closure signalled by the relay -> emit an error in this case.\n        if (event && event.code === 3000) {\n            this.events.emit(\"error\", new Error(`WebSocket connection closed abnormally with code: ${event.code} ${event.reason ? `(${event.reason})` : \"\"}`));\n        }\n        this.events.emit(\"disconnect\");\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            if (this.connection === connection && this.connection.connected)\n                return;\n            if (this.connection.connected)\n                this.close();\n            if (typeof connection === \"string\") {\n                yield this.connection.open(connection);\n                connection = this.connection;\n            }\n            this.connection = this.setConnection(connection);\n            yield this.connection.open();\n            this.registerEventListeners();\n            this.events.emit(\"connect\");\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.connection.close();\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    registerEventListeners() {\n        if (this.hasRegisteredEventListeners)\n            return;\n        this.connection.on(\"payload\", (payload) => this.onPayload(payload));\n        this.connection.on(\"close\", (event) => this.onClose(event));\n        this.connection.on(\"error\", (error) => this.events.emit(\"error\", error));\n        this.connection.on(\"register_error\", (_error) => this.onClose());\n        this.hasRegisteredEventListeners = true;\n    }\n}\nexports.JsonRpcProvider = JsonRpcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SolanaProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SolanaProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"solana\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"solana request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"solana provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    //   {\n    //     \"chains\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\" ],\n    //     \"accounts\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp:F7wnJc5wiBGy1k87jv6gyNwE3jMEWd18oTQiYsF1xVG7\"],\n    //     \"methods\": [\n    //         \"solana_signTransaction\",\n    //         \"solana_signMessage\"\n    //     ],\n    //     \"defaultChain\": \"5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\"\n    // }\n    // TODO:确认上面的defaultChain是否正确（没有solana前缀）\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"solana\"))) {\n                chainId = `solana:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.SolanaProvider = SolanaProvider;\nexports.default = SolanaProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass StarknetProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"starknet\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"starknet request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"starknet provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Wallet doesn't support\" + args.method);\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = StarknetProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SuiProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SuiProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeySui;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"sui request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"sui provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"sui\"))) {\n                chainId = `sui:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"sui_signMessage\":\n            case \"sui_signPersonalMessage\":\n            case \"sui_signTransactionBlock\":\n            case \"sui_signAndExecuteTransactionBlock\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.SuiProvider = SuiProvider;\nexports.default = SuiProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass TONProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyTON;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            (0, core_1.logDebug)(\"TONProvider request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"TONProvider request provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                if (!args.params) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params is nil\");\n                }\n                if (this.isRecord(args.params)) {\n                    const _e = args.params, { validUntil } = _e, newParams = __rest(_e, [\"validUntil\"]);\n                    let fromAddress = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n                    if ('from' in newParams) {\n                        fromAddress = newParams.from || ((_d = (_c = this.namespace.payload) === null || _c === void 0 ? void 0 : _c.ton_addr) === null || _d === void 0 ? void 0 : _d.address);\n                    }\n                    args.params['from'] = fromAddress;\n                    args.params['network'] = this.getDefaultChain();\n                    args.params['valid_until'] = validUntil;\n                    let response = yield this.client.request(args);\n                    if (this.isRecord(response) && 'result' in response) {\n                        const result = {\n                            boc: response.result.toString()\n                        };\n                        (0, core_1.logDebug)(\"TONProvider request provider response: \", JSON.stringify(response));\n                        (0, core_1.logDebug)(\"TONProvider request provider result: \", JSON.stringify(result));\n                        return result;\n                    }\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton_send request response is nil\");\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params type add nil\");\n                }\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        var _a, _b;\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"ton getAccounts accounts :\", accounts);\n        (0, core_1.logDebug)(\"ton getAccounts .namespace :\", JSON.stringify(this.namespace));\n        if (!accounts) {\n            return [];\n        }\n        let address = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n        (0, core_1.logDebug)(\"ton getAccounts address :\", address);\n        if (address) {\n            return [\n                address\n            ];\n        }\n        return [];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"ton_sendTransaction\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.default = TONProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass TronProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyTron;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"tron request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"tron provider namespace: \", JSON.stringify(this.namespace));\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = TronProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./providers\"), exports);\n__exportStar(require(\"./misc\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IJSONRpcProvider = exports.IJSONRpcConnection = void 0;\nclass IJSONRpcConnection {\n}\nexports.IJSONRpcConnection = IJSONRpcConnection;\nclass IJSONRpcProvider {\n    constructor(opt) {\n    }\n}\nexports.IJSONRpcProvider = IJSONRpcProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setGlobal = exports.getGlobal = void 0;\nconst globals = {};\nconst getGlobal = (key) => {\n    return globals[key];\n};\nexports.getGlobal = getGlobal;\nconst setGlobal = (key, value) => {\n    globals[key] = value;\n};\nexports.setGlobal = setGlobal;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./misc\"), exports);\n__exportStar(require(\"./globals\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRpcUrl = getRpcUrl;\nexports.getChainId = getChainId;\nexports.fromAccountToAddress = fromAccountToAddress;\nexports.convertChainIdToNumber = convertChainIdToNumber;\nexports.parseChainId = parseChainId;\nexports.mergeArrays = mergeArrays;\nexports.syncAddressAvailable = syncAddressAvailable;\nexports.syncAddressHostAvailable = syncAddressHostAvailable;\nconst core_1 = require(\"@okxconnect/core\");\nfunction getRpcUrl(chainId, rpc, projectId) {\n    var _a;\n    const chain = parseChainId(chainId);\n    // no default\n    return (((_a = rpc.rpcMap) === null || _a === void 0 ? void 0 : _a[chain.reference]) ||\n        ``);\n}\nfunction getChainId(chain) {\n    return chain.includes(\":\") ? chain.split(\":\")[1] : chain;\n}\nfunction fromAccountToAddress(account) {\n    if (!account) {\n        return \"\";\n    }\n    try {\n        let addressArr = account.split(\":\").slice(2);\n        let address = addressArr.length > 0 ? addressArr.join(\":\") : \"\";\n        (0, core_1.logDebug)(\"fromAccountToAddress address and account:\", address, account);\n        return address;\n    }\n    catch (e) {\n        (0, core_1.logError)(\"fromAccountToAddress error:\", account);\n        return \"\";\n    }\n}\n// export function validateChainApproval(chain: string, chains: string[]): void {\n//   if (!chains.includes(chain)) {\n//     throw new Error(\n//       `Chain '${chain}' not approved. Please use one of the following: ${chains.toString()}`,\n//     );\n//   }\n// }\n// export function getChainsFromApprovedSession(accounts: string[]): string[] {\n//   return accounts.map((address) => `${address.split(\":\")[0]}:${address.split(\":\")[1]}`);\n// }\n// export function getAccountsFromSession(namespace: string, session: SessionTypes.Struct): string[] {\n//   // match namespaces e.g. eip155 with eip155:1\n//   const matchedNamespaceKeys = Object.keys(session.namespaces).filter((key) =>\n//     key.includes(namespace),\n//   );\n//   if (!matchedNamespaceKeys.length) return [];\n//   const accounts: string[] = [];\n//   matchedNamespaceKeys.forEach((key) => {\n//     const accountsForNamespace = session.namespaces[key].accounts;\n//     accounts.push(...accountsForNamespace);\n//   });\n//   return accounts;\n// }\n// export function mergeRequiredOptionalNamespaces(\n//   required: NamespaceConfig = {},\n//   optional: NamespaceConfig = {},\n// ){\n//   const requiredNamespaces = normalizeNamespaces(required);\n//   const optionalNamespaces = normalizeNamespaces(optional);\n//    return merge.merge(requiredNamespaces,optionalNamespaces)\n// }\n/**\n * Converts\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * into\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *\n */\n// export function normalizeNamespaces(namespaces: NamespaceConfig): NamespaceConfig {\n//   const normalizedNamespaces: NamespaceConfig = {};\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const rpcMap = values.rpcMap || {};\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       ...values,\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       rpcMap: { ...rpcMap, ...normalizedNamespaces[normalizedKey]?.rpcMap },\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n//\n// export function parseCaip10Account(caip10Account: string): string {\n//   return caip10Account.includes(\":\") ? caip10Account.split(\":\")[2] : caip10Account;\n// }\n/**\n * Populates the chains array for each namespace with the chains extracted from the accounts if are otherwise missing\n */\n// export function populateNamespacesChains(\n//   namespaces: SessionTypes.Namespaces,\n// ): Record<string, SessionTypes.Namespace> {\n//   const parsedNamespaces: Record<string, SessionTypes.Namespace> = {};\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const accounts = values.accounts || [];\n//     // If the key includes a CAIP separator `:` we know it's a namespace + chainId (e.g. `eip155:1`)\n//     const chains = isCaipNamespace(key)\n//       ? [key]\n//       : values.chains\n//       ? values.chains\n//       : getChainsFromApprovedSession(values.accounts);\n//     parsedNamespaces[key] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   }\n//   return parsedNamespaces;\n// }\nfunction convertChainIdToNumber(chainId) {\n    if (typeof chainId === \"number\")\n        return chainId;\n    if (chainId.includes(\"0x\")) {\n        return parseInt(chainId, 16);\n    }\n    chainId = chainId.includes(\":\") ? chainId.split(\":\")[1] : chainId;\n    return isNaN(Number(chainId)) ? chainId : Number(chainId);\n}\nconst CAIP_DELIMITER = \":\";\nfunction parseChainId(chain) {\n    const [namespace, reference] = chain.split(CAIP_DELIMITER);\n    return { namespace, reference };\n}\nfunction mergeArrays(a = [], b = []) {\n    return [...new Set([...a, ...b])];\n}\nfunction syncAddressAvailable(wallet) {\n    if (!wallet) {\n        return false;\n    }\n    if (wallet.appName !== 'OKX Wallet') {\n        return false;\n    }\n    if ((0, core_1.versionCompare)('6.97.0', wallet.appVersion) > 0) {\n        return false;\n    }\n    return syncAddressHostAvailable();\n}\nfunction syncAddressHostAvailable() {\n    try {\n        return !!(window.okxGlobal);\n    }\n    catch (e) {\n        return false;\n    }\n}\n","<template>\n  <div id=\"app\">\n    <el-container>\n      <el-header>OKX Connect</el-header>\n      <el-main>\n        <el-card class=\"wallet-info\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Wallet Info</div>\n          </template>\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Wallet Address:</strong> {{ getWalletAddress }}\n            </el-col>\n          </el-row>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Status :</strong> {{ currentStatus }}\n            </el-col>\n          </el-row>\n\n        </el-card>\n\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Connect Params</div>\n          </template>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"12\">\n              <el-checkbox v-model=\"withUI\" @change=\"handleWithUI\">\n                Show UI\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"12\">\n              <el-checkbox v-model=\"universalToTG\" @change=\"handleUniversalToTG\">\n                Use mini wallet\n              </el-checkbox>\n            </el-col>\n          </el-row>\n\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Modals</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"modals\" placeholder=\"Modals\" @change=\"handleModalsSelect\" multiple>\n                <el-option label=\"Before\" value=\"before\"/>\n                <el-option label=\"Success\" value=\"success\"/>\n                <el-option label=\"Error\" value=\"error\"/>\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center; justify-content: space-between;\">\n            <el-col :span=\"6\" style=\"gap: 2px\">\n              <p style=\"font-size: 11pt; margin: 0px\">Return Strategy</p>\n              <p style=\"font-size: 9pt; margin: 0px\">(Mobile only)</p>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-select\n                  v-model=\"returnStrategy\"\n                  @change=\"handleReturnStrategySelect\"\n                  placeholder=\"Return Strategy\"\n              >\n                <el-option\n                    v-for=\"strategy in returnStrategies\"\n                    :key=\"`return-strategy-select-option-${strategy}`\"\n                    :label=\"strategy\"\n                    :value=\"strategy\"\n                />\n              </el-select>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-input\n                  v-if=\"returnStrategy === 'deeplink'\"\n                  v-model=\"deeplink\"\n                  @change=\"handleReturnStrategyDeeplink\"\n                  placeholder=\"Deeplink\"\n                  :disabled=\"returnStrategy !== 'deeplink'\"\n                  style=\"margin: 0px\"\n              />\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Lang</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"language\" @change=\"handleLanguageSelect\" placeholder=\"Language\">\n                <el-option v-for=\"locale in locales\" :key=\"`language-select-option-${locale}`\" :label=\"locale\"\n                           :value=\"locale\"/>\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Theme</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"theme\" @change=\"handleThemeSelect\" placeholder=\"Theme\">\n                <el-option label=\"LIGHT\" :value=\"THEME.LIGHT\"/>\n                <el-option label=\"DARK\" :value=\"THEME.DARK\"/>\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <!--          <el-row>-->\n          <!--          <el-row style=\"align-items: center\">-->\n          <!--            <el-col :span=\"4\">-->\n          <!--              <p style=\"font-size: 11pt\">Connect</p>-->\n          <!--              <p style=\"font-size: 11pt\">Methods</p>-->\n          <!--            </el-col>-->\n          <!--            <el-col :span=\"20\">-->\n          <!--              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" placeholder=\"Methods\">-->\n          <!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n          <!--                           :value=\"methods\" />-->\n\n          <!--              </el-select>-->\n          <!--            </el-col>-->\n          <!--          </el-row>-->\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Connect</p>\n              <p style=\"font-size: 11pt\">Methods</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" multiple placeholder=\"methods\">\n                <el-option\n                    v-for=\"item in connectMethods\"\n                    :key=\"item\"\n                    :label=\"item\"\n                    :value=\"item\">\n                </el-option>\n              </el-select>\n\n\n              <!--              <el-select v-model=\"selectedMethod\" placeholder=\"Methods\" @change=\"handleConnectMethodsSelect\" multiple>-->\n              <!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n              <!--                           :value=\"methods\" />-->\n              <!--              </el-select>-->\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">ton_proof</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-input v-model=\"tonProofValue\" placeholder=\"input ton_proof\"></el-input>\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" align=\"middle\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Required Chains</div>\n            </el-col>\n            <el-col\n                :span=\"6\"\n                v-for=\"item in Object.keys(availableChains)\"\n                :key=\"item\"\n            >\n              <el-checkbox\n                  v-model=\"availableChains[item].checked\"\n                  :disabled=\"!areChainsInit\"\n              >{{ availableChains[item].name }}\n              </el-checkbox\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" align=\"middle\" style=\"margin-top: 20px\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Optional Chains</div>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:43114')\" @change=\"() => handleOptionChange('eip155:43114')\">\n                AVAX\n              </el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:10')\" @change=\"() => handleOptionChange('eip155:10')\">OP</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:8453')\" @change=\"() => handleOptionChange('eip155:8453')\">\n                BASE\n              </el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:99781165')\"\n                           @change=\"() => handleOptionChange('eip155:99781165')\">Nonexist\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp')\"\n                           @change=\"() => handleOptionChange('solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp')\">Solana\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('ton:-239')\" @change=\"() => handleOptionChange('ton:-239')\">Ton\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('btc:mainnet')\"\n                           @change=\"() => handleOptionChange('btc:mainnet')\">btc\n              </el-checkbox>\n            </el-col>\n\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"initBtnClicked\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectInitStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"testTonConnect\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectTonStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"connectBtnClicked\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectStatusStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"syncAllAddressClick\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ syncAllAddressStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"danger\"\n                  @click=\"disconnectAction\"\n                  icon=\"el-icon-switch-button\"\n                  :disabled=\"!areChainsInit || walletAddress.length == 0\"\n              >{{ disconnectStatusStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <teleport to=\"body\">\n            <div v-if=\"showModal\" class=\"modal-overlay\" @click=\"closeModal\">\n              <div class=\"modal-content\" @click.stop>\n                <button class=\"close-button\" @click=\"closeModal\">\n                  &times;\n                </button>\n                <h2>Scan to connect</h2>\n                <qrcode-vue :value=\"qrValue\" :size=\"350\" level=\"L\"/>\n              </div>\n            </div>\n          </teleport>\n        </el-card>\n\n        <!-- 发送交易 -->\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Transactions</div>\n          </template>\n\n          <el-tabs v-model=\"activeTab\" type=\"border-card\" @tab-click=\"clickActiveTab\">\n            <!-- ETH -->\n            <el-tab-pane label=\"ETH\" name=\"eip155:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to Fuse)\n                  </el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send ETH)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve TONCoin)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(eth mint\n                    nft)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add SPX6900)\n                  </el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"oversized_personal_sign()\">oversized_personal_sign(about 70k, split limit 63k)\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TON\" name=\"ton:-239\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_getAccount\">ton_getAccount</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_sendTransaction\">ton_sendTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- solana -->\n            <el-tab-pane label=\"Sol\" name=\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- Sui-->\n            <el-tab-pane label=\"Sui\" name=\"sui:mainnet\">\n              <SuiPanel @generateTransactionParams=\"sui_generateTransactionParams\"/>\n            </el-tab-pane>\n            <!-- BTC -->\n            <el-tab-pane label=\"BTC\" name=\"btc:mainnet\">\n              <BTCPanel @generateTransactionParams=\"btc_generateTransactionParams\"/>\n            </el-tab-pane>\n\n            <!-- Fractal BTC -->\n            <el-tab-pane label=\"Fractal\" name=\"fractal:mainnet\">\n              <FractalPanel @generateTransactionParams=\"fractal_generateTransactionParams\"/>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Tron\" name=\"tron:mainnet\">\n              <TronTransactionPanel\n                  @generateTransactionParams=\"tron_generateTransactionParams\"\n                  @generateTransactionResult=\"tron_getTransactionResult\"/>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Aptos\" name=\"aptos:mainnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signTransaction\">aptos_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"aptos_signAndSubmitTransaction\">aptos_signAndSubmitTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Cosmos\" name=\"cosmos:cosmoshub-4\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <!-- Polygon-->\n            <el-tab-pane label=\"Polygon\" name=\"eip155:137\">\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"Polygon_RPCRequest()\">Polygon_RPCRequest(Polygon)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send POL)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve sushi)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(polygon mint\n                    nft)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add LGNS)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\"\n                  >eth_sendTransaction(转账FUSE)\n                  </el-button\n                  >\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\"\n                  >eth_sendTransaction(授权USDC)\n                  </el-button\n                  >\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- BSC-->\n            <el-tab-pane label=\"BNB\" name=\"eip155:56\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to BNB)\n                  </el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send BNB)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve POSI)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add FET)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Fuse\" name=\"eip155:122\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_swap\">eth_sendTransaction(Swap)</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Sonic testnet\" name=\"svm:70000062\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Movement\" name=\"movement:testnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"move_signTransaction\">move_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"move_signAndSubmitTransaction\">move_signAndSubmitTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n\n            <el-tab-pane label=\"osmos\" name=\"cosmos:osmosis-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"SEI\" name=\"cosmos:pacific-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Starknet\" name=\"starknet:mainnet\">\n              <StarknetPanel ref=\"starknetPanelRef\" @generateTransactionParams=\"starknet_generateTransactionParams\"\n                             @generateTransactionResult=\"starknet_getTransactionResult\"/>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TEST \" name=\"test:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"testBase64UrlSafe\">testBase64UrlSafe</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n          </el-tabs>\n\n          <el-col :xs=\"24\" :sm=\"24\" style=\"margin: 16px 0px;\">\n            <el-row style=\"align-items: center; justify-content: space-between; margin-bottom: 8px;\">\n              <el-col :span=\"4\">\n                <p style=\"font-size: 11pt; margin: 0px; text-align: start\">Redirect param (only for ETH, Polygon, BNB,\n                  Fuse)</p>\n              </el-col>\n              <el-col :span=\"9\">\n                <el-select\n                    v-model=\"redirect\"\n                    @change=\"handleRedirectSelect\"\n                    placeholder=\"Return Strategy\"\n                    :disabled=\"!canChainAddRedirectParam()\"\n                >\n                  <el-option\n                      v-for=\"strategy in returnStrategies\"\n                      :key=\"`return-strategy-select-option-${strategy}`\"\n                      :label=\"strategy\"\n                      :value=\"strategy\"\n                  />\n                </el-select>\n              </el-col>\n              <el-col :span=\"10\">\n                <el-input\n                    v-if=\"redirect === 'deeplink'\"\n                    v-model=\"redirectDeeplink\"\n                    @change=\"handleRedirectDeeplink\"\n                    placeholder=\"Deeplink\"\n                    :disabled=\"!canChainAddRedirectParam() || redirect !== 'deeplink'\"\n                    style=\"margin: 0px\"\n                />\n              </el-col>\n            </el-row>\n            <el-button\n                type=\"primary\" @click=\"addRedirectParam()\"\n                :disabled=\"!canChainAddRedirectParam() || !testTransaction\"\n            >\n              Add redirect param to data\n            </el-button>\n          </el-col>\n\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Data:</div>\n            <el-input v-model=\"testTransaction\" type=\"textarea\" :rows=\"5\" placeholder=\"sendTransactions\"></el-input>\n          </el-col>\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Result :</div>\n            <el-input v-model=\"testboc\" type=\"textarea\" :rows=\"5\" placeholder=\"boc\"></el-input>\n          </el-col>\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button type=\"primary\" :disabled=\"sendBtnDisabled\" @click=\"sendTransaction()\">{{\n                  testTransactionStr\n                }}\n              </el-button>\n            </el-col>\n          </el-row>\n        </el-card>\n      </el-main>\n    </el-container>\n  </div>\n</template>\n\n<style scoped>\n/* 重置全局边距和内边距 */\nbody,\nhtml {\n  margin: 0;\n  padding: 0;\n  height: 100%;\n}\n\n/* 确保 app 容器占满整个视口 */\n#app {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin: 0 auto;\n  /* 居中 */\n  max-width: 600px;\n  /* 设置最大宽度 */\n  padding: 0 20px;\n  /* 添加一些左右内边距 */\n}\n\n/* 调整 el-container 样式 */\n.el-container {\n  min-height: 100vh;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n}\n\n/* 调整 el-header 样式 */\n.el-header {\n  background-color: #333333;\n  color: white;\n  height: 50px;\n  line-height: 50px;\n  font-size: 18px;\n  font-weight: bold;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1000;\n}\n\n/* 调整 el-main 样式 */\n.el-main {\n  padding: 70px 0 20px;\n  /* 增加顶部内边距以避免被固定header遮挡 */\n  flex-grow: 1;\n}\n\n.el-card {\n  margin-bottom: 20px;\n}\n\n.info-row {\n  margin-bottom: 10px;\n}\n\n.input-label {\n  margin-bottom: 5px;\n  text-align: left;\n}\n\n.el-input {\n  margin-bottom: 10px;\n}\n\n/* 通用按钮样式 */\n.wallet-actions .el-button,\n.transaction .el-button,\n.clear-cache .el-button {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 40px;\n}\n\n.wallet-actions .el-button span,\n.transaction .el-button span,\n.clear-cache .el-button span {\n  margin: 0 auto;\n}\n\n/* 按钮行间距 */\n.wallet-actions .button-row,\n.transaction .button-row {\n  margin-bottom: 8px;\n}\n\n.wallet-actions .button-row:last-child,\n.transaction .button-row:last-child {\n  margin-bottom: 0;\n}\n\n/* 调整图标和文字的对齐 */\n.wallet-actions .el-button [class^=\"el-icon-\"],\n.transaction .el-button [class^=\"el-icon-\"],\n.clear-cache .el-button [class^=\"el-icon-\"] {\n  margin-right: 5px;\n  vertical-align: middle;\n}\n\n/* 新增：调整发送交易按钮与输入框的间距 */\n.transaction .el-row:not(:last-child) {\n  margin-bottom: 10px;\n}\n\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.modal-content {\n  background-color: white;\n  padding: 20px;\n  border-radius: 8px;\n  text-align: center;\n  position: relative;\n  max-width: 90%;\n  width: 400px;\n}\n\n.close-button {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  font-size: 24px;\n  border: none;\n  background: none;\n  cursor: pointer;\n}\n\n/* 响应式调整 */\n@media (max-width: 600px) {\n  #app {\n    padding: 0 10px;\n  }\n\n  .el-main {\n    padding: 60px 0 10px;\n  }\n}\n</style>\n<script>\nimport {OKX_CONNECT_ERROR_CODES, safeJsonStringify, getAppWalletDeepLink, getUniversalLink} from \"@okxconnect/core\"\nimport {\n  OKXBtcProvider,\n  OKXUniversalProvider,\n  OKXCosmosProvider,\n  OKXTonProvider,\n  OKXTronProvider,\n  OKXStarknetProvider\n} from \"@okxconnect/universal-provider\"\nimport {OKXSolanaProvider} from \"@okxconnect/solana-provider\";\nimport {\n  Connection,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n  TransactionMessage,\n  VersionedTransaction\n} from '@solana/web3.js';\nimport {OKXSuiProvider as SuiAdapter} from \"@okxconnect/sui-provider\"\nimport QrcodeVue from 'qrcode.vue'\n\nimport {OKXAptosProvider} from \"@okxconnect/aptos-provider\";\nimport {Aptos, AptosConfig, Network} from \"@aptos-labs/ts-sdk\";\n\nimport BTCPanel from \"./components/BtcTransactionPanel.vue\";\nimport FractalPanel from \"./components/FractalTransactionPanel.vue\"\nimport SuiPanel from \"./components/SuiTransactionPanel.vue\";\nimport StarknetPanel from \"./components/StarknetTransactionPanel.vue\";\n\nimport {OKXTonConnectUI, OKXUniversalConnectUI, THEME} from \"@okxconnect/ui\";\nimport {ethers} from 'ethers';\nimport VConsole from 'vconsole';\nimport nacl from \"tweetnacl\";\n\nconst {verifyADR36Amino} = require('@keplr-wallet/cosmos')\nconst {fromBech32} = require('@cosmjs/encoding')\nimport {verifyPersonalMessageSignature} from '@mysten/sui/verify';\nimport {useShortLink} from \"@okxconnect/core\";\nimport TronTransactionPanel from \"@/components/TronTransactionPanel.vue\";\nimport {TronWeb} from \"tronweb\";\nimport {RpcProvider as StarknetRpcProvider, Account as StarknetAccount} from \"starknet\";\nimport {ref, toRaw} from \"vue\";\n\nnew VConsole();\n\nconst allChains = {\n  1: {name: \"Eth\", checked: false},\n  56: {name: \"BNB\", checked: false},\n  137: {name: \"Polygon\", checked: false},\n  122: {name: \"Fuse\", checked: false},\n  \"ton:-239\": {name: \"TON\", checked: false},\n  \"btc:mainnet\": {name: \"BTC\", checked: false},\n  \"sui:mainnet\": {name: \"Sui\", checked: false},\n  \"aptos:mainnet\": {name: \"Aptos\", checked: false},\n  \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\": {\n    name: \"Solana\",\n    checked: false,\n  },\n  \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\": {\n    name: \"Sol testnet\",\n    checked: false,\n  },\n  \"svm:70000062\": {\n    name: \"Sonic testnet\",\n    checked: false,\n  },\n  \"movement:testnet\": {name: \"Movement\", checked: false},\n  \"fractal:mainnet\": {name: \"Fractal\", checked: false},\n  \"cosmos:osmosis-1\": {name: \"Osmos\", checked: false},\n  \"cosmos:cosmoshub-4\": {name: \"Cosmos\", checked: false},\n  \"cosmos:pacific-1\": {name: \"SEI\", checked: false},\n  \"cosmos:abvdefg\": {name: \"cosmos:abvdefg\", checked: false},\n  \"tron:mainnet\": {name: \"tron\", checked: false},\n  997865: {name: \"Non Exist chain\", checked: false},\n  2020: {name: \"Ronin\", checked: false},\n  1666600000: {name: \"Harmony\", checked: false},\n  \"starknet:mainnet\": {name: \"starknet\", checked: false}\n};\n\nconst chainsThatCanAddRedirectParam = [\n  \"eip\"\n]\n\nvar optionChains = new Set([]);\nvar selectedModals = [\"before\", \"success\", \"error\"];\nvar selectedReturnStrategy = \"none\";\nvar selectedDeepLink = \"tg://resolve\";\nvar selectedLanguage = \"en_US\";\nvar selectedTheme = THEME.LIGHT;\n\n// import QrcodeVue from 'qrcode.vue'\nexport default {\n  name: \"App\",\n  components: {\n    TronTransactionPanel,\n    QrcodeVue,\n    BTCPanel,\n    FractalPanel,\n    SuiPanel,\n    StarknetPanel\n  },\n\n  setup() {\n    const sendBtnDisabled = ref(false)\n\n    return {\n      sendBtnDisabled\n    }\n  },\n  data: () => {\n    return {\n      activeTab: \"eip155:1\",\n      testTopic: \"\",\n      testPublicKey: \"\",\n      testProofPayload: \"\",\n      tonProofValue: \"\",\n      pendingDeepLink: \"-\",\n      logList: [],\n      connectReady: false,\n      connectStatusStr: \"Connect\",\n      syncAllAddressStr: \"syncAllAddress\",\n      connectInitStr: \"init test\",\n      connectTonStr: \"tonuiconnect test\",\n      disconnectStatusStr: \"Disconnect\",\n      localPubKey: \"\",\n      localSecKey: \"\",\n      testTransaction: \"\",\n      selectedChain: \"eip155:1\",\n      testTransactionStr: \"Send\",\n      walletAddress: \"\",\n      testboc: \"\",\n      ProofPayloadVerify: \"\",\n      showModal: false,\n      showVerifyRow: false,\n      qrValue: \"https://www.okx.com/download\",\n      currentStatus: \"\",\n      areChainsInit: false,\n      availableChains: allChains,\n      isOptionalChecked: (chainId) => {\n        return optionChains.has(chainId);\n      },\n      withUI: localStorage.getItem(\"autoRefresh\") != \"false\",\n      universalToTG: localStorage.getItem(\"universalToTG\") != \"false\",\n      modals: selectedModals,\n      returnStrategies: [\"none\", \"back\", \"deeplink\"],\n      returnStrategy: selectedReturnStrategy,\n      deeplink: selectedDeepLink,\n      locales: [\n        \"en_US\",\n        \"ru_RU\",\n        \"zh_CN\",\n        \"zh\",\n        \"ar_AE\",\n        \"cs_CZ\",\n        \"de_DE\",\n        \"es_ES\",\n        \"es_LAT\",\n        \"fr_FR\",\n        \"id_ID\",\n        \"it_IT\",\n        \"nl_NL\",\n        \"pl_PL\",\n        \"pt_BR\",\n        \"pt_PT\",\n        \"ro_RO\",\n        \"tr_TR\",\n        \"uk_UA\",\n        \"vi_VN\",\n        \"zh_TW\"\n      ],\n      selectedMethod: [],\n      selectedMethodData: [],\n      connectMethods: [\n        \"wallet_addEthereumChain(ETH)\",\n        \"personal_sign(ETH)\",\n        \"solana_signMessage(Sol mainnet)\",\n        \"sui_signMessage(Sui mainnet)\",\n        \"sui_signPersonalMessage(Sui mainnet)\",\n        \"btc_signMessage(BTC)\",\n        \"aptos_signMessage(aptos mainnet)\",\n        \"cosmos_signArbitrary(cosmoshub)\",\n        \"test_noSupport_eth(ETH)\",\n        \"tron_signMessage\",\n        \"tron_signMessageV2\",\n        \"starknet_signMessage\",\n        \"sync_all_addresses\"\n      ],\n\n      language: selectedLanguage,\n      theme: selectedTheme,\n      THEME: THEME,\n      redirect: selectedReturnStrategy,\n      redirectDeeplink: selectedDeepLink,\n      handleWithUI: (isChecked) => {\n        localStorage.setItem(\"autoRefresh\", `${isChecked}`);\n        location.reload();\n      },\n      handleUniversalToTG: (isChecked) => {\n        localStorage.setItem(\"universalToTG\", `${isChecked}`);\n      },\n      handleOptionChange: (chainId) => {\n        console.log(\"handleOptionChange ->chainId:\",chainId)\n        if (optionChains.has(chainId)) {\n          optionChains.delete(chainId);\n        } else {\n          optionChains.add(chainId);\n        }\n      },\n      starknetPanelTypedData: ''\n    };\n  },\n  computed: {\n    getWalletAddress: function () {\n      return this.walletAddress;\n    },\n  },\n  methods: {\n    isChecked(chainId) {\n      return this.selectedChains.has(chainId);\n    },\n\n    initChains(newChains) {\n      if (newChains.length > 0) {\n        const updatedChains = Object.assign({}, this.availableChains);\n        for (const chainId of newChains) {\n          if (updatedChains[chainId]) {\n            updatedChains[chainId].checked = !updatedChains[chainId].checked;\n          }\n        }\n        this.availableChains = updatedChains;\n      }\n\n      this.areChainsInit = true;\n    },\n\n    async clickActiveTab(tab) {\n      const tabName = tab.props ? tab.props.name : tab.name;\n      this.selectedChain = tabName;\n      console.log(`已切换到链 :`, tabName);\n\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      if (tabName == \"starknet:mainnet\") {\n        this.sendBtnDisabled = true\n      } else {\n        this.sendBtnDisabled = false\n      }\n\n      window.provider.setDefaultChain(this.selectedChain);\n    },\n\n    async testTonConnect(){\n      await window.testTon.openModal().catch(\n          (error) => console.error(\"发生了错误：\", error));\n    },\n\n    async initBtnClicked() {\n      console.log(\"initBtnClickedddinitBtnClickedddinitBtnClickedddinitBtnClickedddinitBtnClickeddd\")\n      window.okxLogDebug = true\n      var initCall;\n      if (!this.withUI) {\n        initCall = OKXUniversalProvider.init({\n          dappMetaData: {\n            name: \"univer test dapp\",\n            icon: \"https://avatars.githubusercontent.com/u/37784886\",\n          },\n        });\n      } else {\n\n        window.testTon = new OKXTonConnectUI({\n          dappMetaData: {\n            name: \"OKX WalletConnect UI Demo\",\n            icon: \"https://avatars.githubusercontent.com/u/37784886\",\n          },\n          actionsConfiguration: {\n            returnStrategy: 'tg://resolve',\n            tmaReturnUrl:'back',\n            modals: \"all\",\n          },\n          uiPreferences: {\n            theme: THEME.LIGHT\n          },\n          language: 'en_US',\n        });\n\n        initCall = OKXUniversalConnectUI.init({\n          dappMetaData: {\n            icon: \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\",\n            name: \"OKX WalletConnect UI Demo\",\n            manifestUrl:\"https://app.ston.fi/tonconnect-manifest.json\"\n          },\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: 'all',\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme\n          },\n        });\n\n\n      }\n\n      initCall.then((provider) => {\n        window.provider = provider;\n        window.tonProvider = new OKXTonProvider(window.provider);\n        window.tonProvider.onStatusChange((walletInfo) => {\n              console.log('TONConnection onStatusChange:', JSON.stringify(walletInfo));\n            }, (err) => {\n              console.log('TONConnection onStatusChange error:', err);\n            }\n        )\n\n        if (window.provider instanceof OKXUniversalConnectUI) {\n          window.provider.onModalStateChange((state) => {\n            console.log(`onModalStateChange   ${JSON.stringify(state)}`)\n          })\n        }\n\n        console.log(\"init finished:\", provider);\n        console.log(\"init finished session:\", JSON.stringify(provider.session));\n\n        if (provider.session?.namespaces) {\n          const newChains = [];\n          console.log(\"namespaces\", provider.session.namespaces);\n          Object.entries(provider.session.namespaces).forEach(([key, value]) => {\n            if (key === \"eip155\") {\n              value.chains.forEach((chain) => {\n                newChains.push(parseInt(chain.substring(7)));\n              });\n            } else {\n              value.chains.forEach((chain) => {\n                newChains.push(chain);\n              });\n            }\n          });\n\n          console.log(\"existing chains:\", newChains);\n          this.initChains(newChains);\n        } else {\n          this.initChains([]);\n        }\n\n        provider.on(\"display_uri\", (uri) => {\n          if (!useShortLink()) {\n            if (this.isPC()) {\n              if (uri && !this.withUI && !this.universalToTG) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          }\n          console.log(\"通知>>>display_uri  ==> \", uri);\n        });\n\n        provider.on(\"connect_signResponse\", (items) => {\n          console.log(\"通知>>>connect_signResponse  ==> \", JSON.stringify(items));\n          this.verifyMessage(items)\n        })\n\n        provider.on(\"short_display_uri\", (uri) => {\n          if (useShortLink()) {\n            if (this.isPC()) {\n              if (uri && !this.withUI && !this.universalToTG) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          }\n          console.log(\"通知>>>short_display_uri  ==> \", uri);\n        });\n\n\n        provider.on(\"session_connecting\", () => {\n          console.log(\"通知>>>session_connecting  ==> \");\n        });\n\n        provider.on(\"connect\", (session) => {\n          console.log(\"通知>>>get connect session\", session);\n        });\n        provider.on(\"reconnect\", (session) => {\n          console.log(\"通知>>>get reconnect session\", session);\n          this.walletAddress = \"connected\";\n        });\n        provider.on(\"disconnect\", ({topic}) => {\n          console.log(`通知>>>get disconnect  ${topic}`);\n          this.walletAddress = \"disconnecteddddd\";\n        });\n        provider.on(\"session_delete\", ({topic}) => {\n          console.log(`通知>>>get session_delete  ${topic}`);\n        });\n        provider.on(\"session_update\", (session) => {\n          console.log(`通知>>>get session_update `, JSON.stringify(session));\n        });\n\n        provider.on(\"accountChanged\", (session) => {\n          if (session){\n            this.testboc = JSON.stringify(session);\n          }\n          console.log(`通知>>>get accountChanged `, JSON.stringify(session));\n        });\n\n      });\n    },\n\n    async connectBtnClicked() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        this.testTonSdk();\n      } else {\n        console.log(`connectBtnClicked provider not finish init`);\n      }\n    },\n\n    async syncAllAddressClick() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        if (window.provider instanceof OKXUniversalProvider) {\n          if (window.provider.connected()) {\n            try {\n              let message = await window.provider.syncAllAddresses()\n              if (typeof message == \"string\") {\n                this.testboc = message\n              } else {\n                this.testboc = JSON.stringify(message)\n              }\n            } catch (e) {\n              this.testboc = JSON.stringify(e)\n            }\n          } else {\n            this.testboc = \"not connected\"\n          }\n        }\n\n      } else {\n        console.log(`syncAllAddress provider not finish init`);\n      }\n    },\n\n    async disconnectAction() {\n      try {\n        console.log(\"get disconnect wallet btn clicked\");\n        // await TON.disconnect();\n        var provider = window.provider;\n        await provider.disconnect();\n        this.walletAddress = \"disconnected\";\n      } catch (error) {\n        console.log(\"Disconnect  error ==>> \", error.message);\n        this.currentStatus = error.message;\n      }\n    },\n\n    async eth_requestAccounts() {\n      var data = {method: \"eth_requestAccounts\"};\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_chainId() {\n      var data = {method: \"eth_chainId\"};\n      this.testTransaction = JSON.stringify(data);\n    },\n    async wallet_switchEthereumChain() {\n      var data = {\n        method: \"wallet_switchEthereumChain\",\n        params: [\n          {\n            chainId: \"0x7a\"\n          }\n        ]\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async wallet_addEthereumChain() {\n      var data = {\n        method: \"wallet_addEthereumChain\",\n        params: {\n          blockExplorerUrls: [\"https://explorer.fuse.io\"],\n          chainId: \"0x7a\",\n          chainName: \"Fuse\",\n          nativeCurrency: {name: \"Fuse\", symbol: \"FUSE\", decimals: 18},\n          rpcUrls: [\"https://rpc.fuse.io\"],\n        },\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    fromAccountToAddress(account) {\n      if (!account) {\n        return \"\"\n      }\n      try {\n        let addressArr = account.split(\":\").slice(2);\n        let address = addressArr.length > 0 ? addressArr.join(\":\") : \"\";\n        return address;\n      } catch (e) {\n        return \"\"\n      }\n\n    },\n\n    requestEVMAccountWithSession(chainId) {\n      console.log(\"requestAccountWithSession >>>\", chainId);\n      if (window.provider && window.provider.session && chainId) {\n        let key = chainId.includes(\":\") ? chainId.split(\":\")[0] : chainId;\n        let namespace = window.provider.session.namespaces\n        if (key === \"eip155\") {\n          let evmNameSpace = namespace[key];\n          if (evmNameSpace && evmNameSpace.accounts) {\n            let accounts = evmNameSpace.accounts;\n            return [\n              ...new Set(\n                  accounts\n                      // get the accounts from the active chain\n                      .filter((account) => account.includes(chainId+\":\"))\n                      // remove namespace & chainId from the string\n                      .map((account) => {\n                        return this.fromAccountToAddress(account);\n                      })\n              ),\n            ];\n\n          }\n\n        }\n      }\n      return undefined\n    },\n\n    async personal_sign() {\n      if (this.selectedChain === \"eip155:1\") {\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0x1ca023f10e157d148deed210f8bee193657a1eaa7f187909e20a9dc3b071dbc364c41fde37960c05093359f410a061ec8a7dca8c0c39fc7c1e24de8a3329775d1b\n\n        var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n        var address = accounts[0];\n        console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n        var dataETH = {\n          method: \"personal_sign\",\n          params: [\n            \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n            address,\n          ],\n        };\n\n        this.testTransaction = JSON.stringify(dataETH);\n      } else if (\n          this.selectedChain === \"eip155:137\" ||\n          this.selectedChain === \"eip155:122\"\n      ) {\n        // method\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0xebda9cfa2af43999058dffa0107031d1ef7fc0252dca85dcbd22ea097af922ca39b64d509ef61ce42b7641c5840b8a80337ffd1411b13e87e2260a3f1b6c151c1b\n\n        var dataPolygon = {\n          method: \"personal_sign\",\n          params: {\n            message:\n                \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n        this.testTransaction = JSON.stringify(dataPolygon);\n      } else if (this.selectedChain === \"eip155:56\") {\n        var data = {\n          method: \"personal_sign\",\n          params: {\n            message:\n                \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n\n        this.testTransaction = JSON.stringify(data);\n      }\n    },\n\n    async eth_sendTransaction_swap() {\n      var data = {\n        method: \"eth_sendTransaction\",\n        chainId: \"eip155:122\",\n        params: {\n          value: \"0x38d7ea4c68000\",\n          gas: \"0x2665f\",\n          to: \"0xf2614A233c7C3e7f08b1F887Ba133a13f1eb2c55\",\n          from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n          data: \"0x2646478b000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee00000000000000000000000000000000000000000000000000038d7ea4c68000000000000000000000000000620fd5fa44be6af63715ef4e65ddfa0387ad13f5000000000000000000000000000000000000000000000000000000000000001b000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000700301ffff0201602352A9Eb5234466Eac23E59e7B99bCaE79C39c0BE9e53fd7EDaC9F859882AfdDa116645287C629040BE9e53fd7EDaC9F859882AfdDa116645287C62900602352A9Eb5234466Eac23E59e7B99bCaE79C39c01f2F3e73be57031114dd1f4E75c1DD87658be7F0E000bb800000000000000000000000000000000\",\n        },\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async oversized_personal_sign() {\n      const payload = ``\n      if (this.selectedChain === \"eip155:1\") {\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0x1ca023f10e157d148deed210f8bee193657a1eaa7f187909e20a9dc3b071dbc364c41fde37960c05093359f410a061ec8a7dca8c0c39fc7c1e24de8a3329775d1b\n\n        var accounts = await window.provider.request(\n          { method: \"eth_requestAccounts\" },\n          \"eip155:1\"\n        );\n        var address = accounts[0];\n        console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n        var dataETH = {\n          method: \"personal_sign\",\n          params: [\n            payload,\n            address,\n          ],\n        };\n\n        this.testTransaction = JSON.stringify(dataETH);\n      } else if (\n        this.selectedChain === \"eip155:137\" ||\n        this.selectedChain === \"eip155:122\"\n      ) {\n        // method\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0xebda9cfa2af43999058dffa0107031d1ef7fc0252dca85dcbd22ea097af922ca39b64d509ef61ce42b7641c5840b8a80337ffd1411b13e87e2260a3f1b6c151c1b\n\n        var dataPolygon = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              payload,\n          },\n        };\n        this.testTransaction = JSON.stringify(dataPolygon);\n      } else if (this.selectedChain === \"eip155:56\") {\n        var data = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              payload,\n          },\n        };\n\n        this.testTransaction = JSON.stringify(data);\n      }\n    },\n\n    async eth_signTypedData_v4() {\n      // method\n      // eth_signTypedData\n      // address\n      // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n      // valid\n      // true\n      // result\n      // 0xa8bb3c6b33a119d2d567c7632195c21988df778006082742125a591f5c633f716107883a37f7de6531a6312a5f69022135bf46fe5ab77905b62c82b3395f985e1b\n      //\n\n      // var data = {\n      //   \"method\": \"eth_signTypedData_v4\",\n      //   \"params\": {\n      //     \"typedDataJson\":\"{\\\"types\\\":{\\\"EIP712Domain\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"version\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"chainId\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"name\\\":\\\"verifyingContract\\\",\\\"type\\\":\\\"address\\\"}],\\\"Person\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"wallet\\\",\\\"type\\\":\\\"address\\\"}],\\\"Mail\\\":[{\\\"name\\\":\\\"from\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"to\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"contents\\\",\\\"type\\\":\\\"string\\\"}]},\\\"primaryType\\\":\\\"Mail\\\",\\\"domain\\\":{\\\"name\\\":\\\"Ether Mail\\\",\\\"version\\\":\\\"1\\\",\\\"chainId\\\":1,\\\"verifyingContract\\\":\\\"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\\\"},\\\"message\\\":{\\\"from\\\":{\\\"name\\\":\\\"Cow\\\",\\\"wallet\\\":\\\"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\\\"},\\\"to\\\":{\\\"name\\\":\\\"Bob\\\",\\\"wallet\\\":\\\"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\\\"},\\\"contents\\\":\\\"Hello, Bob!\\\"}}\"\n      // }}\n\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n      var data = {\n        method: \"eth_signTypedData_v4\",\n        params: [\n          address,\n          {\n            types: {\n              EIP712Domain: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"version\",\n                  type: \"string\",\n                },\n                {\n                  name: \"chainId\",\n                  type: \"uint256\",\n                },\n                {\n                  name: \"verifyingContract\",\n                  type: \"address\",\n                },\n              ],\n              Person: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"wallet\",\n                  type: \"address\",\n                },\n              ],\n              Mail: [\n                {\n                  name: \"from\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"to\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"contents\",\n                  type: \"string\",\n                },\n              ],\n            },\n            primaryType: \"Mail\",\n            domain: {\n              name: \"Ether Mail\",\n              version: \"1\",\n              chainId: 1,\n              verifyingContract: \"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\",\n            },\n            message: {\n              from: {\n                name: \"Cow\",\n                wallet: \"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\",\n              },\n              to: {\n                name: \"Bob\",\n                wallet: \"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\",\n              },\n              contents: \"Hello, Bob!\",\n            },\n          },\n        ],\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_sendTransaction_transfer() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            chainId: \"0x1\",\n            to: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            value: \"0x5af3107a4000\",\n            maxPriorityFeePerGas: \"0x3b9aca00\",\n            gas: \"0x5e56\",\n            maxFeePerGas: \"0x2643b9db8\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gasPrice: \"0x17003f6530\",\n            nonce: \"0x0d30\",\n            data: \"0x\",\n            value: \"0x00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasLimit: \"0x5208\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x5e56\",\n            value: \"0x5af3107a4000\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasPrice: \"0x3b9aca00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            chainId: \"0x38\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:122\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            value: \"0x0\",\n            chainId: \"0x7a\",\n          }\n        }\n      }\n\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"to\"] = address;\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_approve() {\n      var data = {};\n\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000000000000022d473030f116ddee9f6b43ac78ba3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x582d872a1b094fc48f5de31d3b73f2d9be47def1\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000f6f8096ac575b0\",\n            to: \"0x0b3F868E0BE5597D5DB7fEB59E1CADBb0fdDa50a\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            value: \"0x0\",\n            gas: \"0xe117\",\n            gasPrice: \"0xb2d05e00\",\n            data: \"0x095ea7b300000000000000000000000031c2f6fcff4f8759b3bd5bf0e1084a055615c768ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x5CA42204cDaa70d5c773946e69dE942b85CA6706\",\n          },\n        };\n      } else if (this.selectedChain === 'eip155:122') {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000000000000013b3\",\n            to: \"0x620fd5fa44BE6af63715Ef4E65DDFA0387aD13F5\",\n          },\n        };\n      }\n\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_mint() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x4cacb\",\n            data: \"0xa64dfa75000000000000000000000000ed688002f3797599db8b4feacfe8b1dda0df1c8d000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cecb15396825a895ff8da8fc2d2c77a234dccee00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f6261667962656968643737366b6177706e71336f6f6a6635693274787a76617737737164656b34616a776472637472703261366f626b70723773792f7b69647dan            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x30795\",\n            data: \"0xa64dfa75000000000000000000000000341b3687f0309778f08f29336b2c4b9c38b9f110000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f62616679626569686a6279676b68747a71376b68377434336266686e676e793236337668766f6578716a6d6e377161716166366e717a64743777712f7b69647da3078303030303030303030303030303030303030303030303030303030303030303030303030303030300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001\",\n            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      }\n\n      let str = JSON.stringify(data);\n      console.log(\"-----长度--->\", str.length);\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async Polygon_RPCRequest() {\n      try {\n        var data = {\n          method: \"eth_getTransactionByHash\",\n          params: [\"0xd62fa4ea3cf7ee3bf6f5302b764490730186ed6a567c283517e8cb3c36142e1a\"],\n        };\n        this.testTransaction = JSON.stringify(data);\n\n        var result = await window.provider.request(data, this.selectedChain)\n        console.log(`请求数据回调 Polygon_RPCRequest ----->> ${JSON.stringify(result)}`)\n\n        if (typeof result == \"string\") {\n          this.testboc = result;\n        } else {\n          this.testboc = JSON.stringify(result);\n        }\n      }catch (e) {\n        this.testboc = JSON.stringify(e);\n      }\n\n    },\n    async wallet_watchAsset() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xe0f63a424a4439cbe457d80e4f4b51ad25b2c56c\",\n              symbol: \"SPX6900\",\n              image:\n                  \"https://assets.coingecko.com/coins/images/31401/standard/sticker_%281%29.jpg?1702371083\",\n              decimals: 8,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xeB51D9A39AD5EEF215dC0Bf39a8821ff804A0F01\",\n              symbol: \"LGNS\",\n              image: \"https://polygonscan.com/token/images/originlgns_32.png\",\n              decimals: 9,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0x031b41e504677879370e9dbcf937283a8691fa7f\",\n              symbol: \"FET\",\n              image: \"https://bscscan.com/token/images/fetch_32.png\",\n              decimals: 18,\n            },\n          },\n        };\n      }\n\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async ton_sendTransaction() {\n      var data = {\n        \"messages\": [{\n          \"address\": \"EQARULUYsmJq1RiZ-YiH-IJLcAZUVkVff-KBPwEmmaQGH6aC\",\n          \"amount\": \"186000000\",\n          \"payload\": \"te6cckEBAgEAhgABaw+KfqUAAACKXw/PUzD0JAgA7zuZAqJxsqAciTilI8/iTnGEeq62piAAHtRKd6wOcJwQLBuBAwEAlSWThWGAEPckSDVNSvvmJOKMGCE4qb+zE0NdQGXsIPpYy63RDznGJO33ACoTmz7CXpV552d6ANFof7NJCUxG8kSbhHYZT5CrVcQGUCH+joo=\"\n        }],\n        \"validUntil\": 1736161561913,\n        \"network\": '-239'\n      }\n      this.testTransaction = JSON.stringify(data)\n    },\n    ton_getAccount() {\n      this.testTransaction = \"这里是同步获取 不再需要点击 <<发送交易>>\"\n      let result = window.tonProvider.account()\n      if (result) {\n        this.testboc = JSON.stringify(result);\n      } else {\n        this.testboc = 'null'\n      }\n    },\n\n    async tonUniversalLog() {\n      console.log(\"ton 信息: tonProvider  connected:\", window.tonProvider.connected())\n      console.log(\"ton 信息: tonProvider  account:\", JSON.stringify(window.tonProvider.account()))\n      console.log(\"ton 信息: tonProvider  wallet:\", JSON.stringify(window.tonProvider.wallet()))\n    },\n\n    async sendTransactionAlert() {\n      //\n      const response = await fetch(`https://apitest.fireverse.ai/oauth/okx/getNonce?publicAddress=0x0cecb15396825a895ff8da8fc2d2c77a234dccee`);\n      const data = await response.json();\n      console.log(\"请求数据----\", JSON.stringify(data))\n      await this.personal_sign()\n      if (confirm(\"Are you want to sign message?\")) {\n        this.sendTransaction();\n      }\n\n      // window.open(\"https://www.okx.com/download?deeplink=okx%3A%2F%2Fweb3%2Fwallet%2Fconnect\",'_self')\n    },\n\n    async sendTransaction() {\n      if (this.selectedChain.startsWith(\"aptos\")\n          || this.selectedChain.startsWith(\"movement\")\n          || this.selectedChain.startsWith(\"solana\")\n          || this.selectedChain.startsWith(\"sonic\")\n          || this.selectedChain.startsWith(\"cosmos\")) {\n        return\n      }\n      console.log(\"sendTransaction\", window.provider);\n      console.log(\"sendTransaction内容11------\", this.testTransaction);\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      if (this.testTransaction && window.provider) {\n        // eslint-disable-next-line no-undef\n        const sendData = JSON.parse(this.testTransaction);\n        try {\n          console.log(\"sendTransaction-----22method>>\", sendData.method);\n\n          let chainId = \"eip155:1\";\n          if (this.selectedChain) {\n            chainId = this.selectedChain;\n            console.log(\n                \"sendTransaction-----this.selectedChain>>\",\n                this.selectedChain\n            );\n          }\n          console.log(\"windowOpen[click_1]: \", Date.now());\n          console.log(\"交易的ChainId: \",chainId);\n\n          if (chainId == \"sui:mainnet\") {\n            const adapter = new SuiAdapter(window.provider);\n            var suiResult = \"invalid result\";\n            if (this.currentSuiMethod == 'sui_getAccount') {\n              let result = adapter.getAccount()\n              if (typeof result == \"string\") {\n                this.testboc = result\n              } else {\n                this.testboc = JSON.stringify(result)\n              }\n            }\n            if (this.currentSuiMethod == \"sui_signTransaction\") {\n              suiResult = await adapter.signTransaction(\n                  this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signAndExecuteTransaction\") {\n              suiResult = await adapter.signAndExecuteTransaction(\n                  this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signMessage\") {\n              console.log(\"signMessage----\", this.currentSuiTransaction);\n              suiResult = await adapter.signMessage(this.currentSuiTransaction);\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_signPersonalMessage\") {\n              console.log(\n                  \"signPersonalMessage----\",\n                  this.currentSuiTransaction\n              );\n              suiResult = await adapter.signPersonalMessage(\n                  this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_testRpc\") {\n              console.log(\"test rpc----\", this.currentSuiTransaction);\n              console.log(\n                  `请求数据发送 rpc ----->> ${JSON.stringify(sendData)}`\n              );\n              const res = await window.provider.request(sendData, chainId);\n              console.log(`请求数据回调 rpc ----->> ${JSON.stringify(result)}`);\n              if (typeof res == \"string\") {\n                this.testboc = res;\n              } else {\n                this.testboc = JSON.stringify(res);\n              }\n            }\n            console.log(\"windowOpen[click_2]: \", Date.now());\n            return;\n          } else if (chainId === \"ton:-239\") {\n            console.log(\n                `请求数据发送 sendTransaction ---ton-->> ${JSON.stringify(sendData)}`\n            );\n            let result = await window.tonProvider.sendTransaction(sendData)\n            console.log(\n                `请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`\n            );\n            if (typeof result == \"string\") {\n              this.testboc = result;\n            } else {\n              this.testboc = JSON.stringify(result);\n            }\n            return\n          }\n\n          if (chainId == 'btc:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var btcResult = 'invalid result'\n\n            if (this.currentBtcMethod == 'btc_signMessage') {\n              btcResult = await btcAdapter.signMessage(chainId, this.currentBtcTransaction[\"signStr\"])\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_send') {\n              btcResult = await btcAdapter.send(chainId, this.currentBtcTransaction)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signPsbt') {\n              btcResult = await btcAdapter.signPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n\n              this.hexToBase64(btcResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentBtcMethod == 'btc_signPsbts') {\n              btcResult = await btcAdapter.signPsbts(chainId, this.currentBtcTransaction.psbtHexs, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_sendInscription') {\n              btcResult = await btcAdapter.sendInscription(chainId, this.currentBtcTransaction.address, this.currentBtcTransaction.inscriptionId, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signAndPushPsbt') {\n              btcResult = await btcAdapter.signAndPushPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_sendBitcoin') {\n              btcResult = await btcAdapter.sendBitcoin(chainId, this.currentBtcTransaction.toAddress, this.currentBtcTransaction.satoshis, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_getAccount') {\n              btcResult = btcAdapter.getAccount(chainId)\n              this.testboc = JSON.stringify(btcResult)\n            }else if(this.currentBtcMethod === \"btc_sendRunes\"){\n              console.log(\"BTC参数--->\",JSON.stringify(this.currentBtcTransaction))\n              btcResult = await btcAdapter.sendRunes(chainId,this.currentBtcTransaction.address,this.currentBtcTransaction.runeid,this.currentBtcTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }else if(this.currentBtcMethod === \"btc_inscribeTransfer\"){\n              console.log(\"BTC参数--->\",JSON.stringify(this.currentBtcTransaction))\n              btcResult = await btcAdapter.inscribeTransfer(chainId,this.currentBtcTransaction.ticker,this.currentBtcTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }\n\n            return\n          }\n\n          if (chainId == 'fractal:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var fractalResult = 'invalid result'\n\n            if (this.currentFractalMethod == 'fractal_signMessage') {\n              fractalResult = await btcAdapter.signMessage(chainId, this.currentFractalTransaction['signStr'])\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_send') {\n              fractalResult = await btcAdapter.send(chainId, this.currentFractalTransaction)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signPsbt') {\n              fractalResult = await btcAdapter.signPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.hexToBase64(fractalResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentFractalMethod == 'fractal_signPsbts') {\n              fractalResult = await btcAdapter.signPsbts(chainId, this.currentFractalTransaction.psbtHexs, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_sendInscription') {\n              fractalResult = await btcAdapter.sendInscription(chainId, this.currentFractalTransaction.address, this.currentFractalTransaction.inscriptionId, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signAndPushPsbt') {\n              fractalResult = await btcAdapter.signAndPushPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_sendBitcoin') {\n              fractalResult = await btcAdapter.sendBitcoin(chainId, this.currentFractalTransaction.toAddress, this.currentFractalTransaction.satoshis, this.currentFractalTransaction.options)\n\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_getAccount') {\n              fractalResult = btcAdapter.getAccount(chainId)\n              this.testboc = JSON.stringify(fractalResult)\n            }else if(this.currentFractalMethod === \"fractal_sendRunes\"){\n              console.log(\"fractal参数--->\",JSON.stringify(this.currentFractalTransaction))\n              btcResult = await btcAdapter.sendRunes(chainId,this.currentFractalTransaction.address,this.currentFractalTransaction.runeid,this.currentFractalTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }else if(this.currentFractalMethod === \"fractal_inscribeTransfer\"){\n              console.log(\"fractal参数--->\",JSON.stringify(this.currentFractalTransaction))\n              btcResult = await btcAdapter.inscribeTransfer(chainId,this.currentFractalTransaction.ticker,this.currentFractalTransaction.amount);\n              this.testboc = JSON.stringify(btcResult)\n            }\n\n            return\n          }\n\n          console.log(`请求数据发送 sendTransaction ----->> ${JSON.stringify(sendData)}`)\n          var result = await window.provider.request(sendData, chainId)\n          console.log(`请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`)\n\n          console.log(\"windowOpen[click_3]: \", Date.now());\n          if (typeof result == \"string\") {\n            this.testboc = result;\n          } else {\n            this.testboc = JSON.stringify(result);\n          }\n          console.log(\"方法数据回调 --this.testboc--\", this.testboc);\n        } catch (error) {\n          console.error(\"方法数据回调失败 --Error--\", error.message);\n\n          if (error.code === OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n            this.testboc = error.message;\n          } else {\n            this.testboc = \"wrong signature！\" + error.message;\n          }\n        }\n      } else {\n        alert(\"Please input transaction data\");\n      }\n    },\n\n    hexToBase64(hexStr) {\n      var bytes = [];\n      for (var i = 0; i < hexStr.length; i += 2) {\n        bytes.push(parseInt(hexStr.substr(i, 2), 16));\n      }\n      const buffer = new Uint8Array(bytes)\n      const blob = new Blob([buffer]);\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = function (e) {\n          var base64Data = e.target.result.split(\",\")[1]\n          resolve(base64Data);\n        };\n        reader.onerror = function (e) {\n          reject(e);\n        };\n        reader.readAsDataURL(blob);\n      });\n    },\n    testBase64UrlSafe() {\n      let datatest = {\n        \"protocolVer\": 1,\n        \"topic\": \"8a7a4c3be73802d0ae2587123ade7bb79f27433b9aa3ca589a2208a2089eecfd\",\n        \"clientId\": \"5f1bbf9eac92160affa7ef04d0a710817ddb6d8c22ebbd6263e86f059930b404\",\n        \"requestId\": \"1731383250054\",\n        \"dAppInfo\": {\n          \"url\": \"connect.oker.vip\",\n          \"origin\": \"https://connect.oker.vip\",\n          \"name\": \"univer test dapp\",\n          \"icon\": \"https://avatars.githubusercontent.com/u/37784886\"\n        },\n        \"requests\": [{\n          \"name\": \"requestAccounts\",\n          \"requiredNamespaces\": [{\"namespace\": \"aptos\", \"chains\": [\"aptos:637\"]}],\n          \"optionalNamespaces\": [],\n          \"connectRequestMethods\": [{\n            \"chainId\": \"aptos:637\",\n            \"method\": \"aptos_signMessage\",\n            \"params\": {\n              \"data\": {\n                \"address\": true,\n                \"application\": true,\n                \"chainId\": true,\n                \"message\": \"123 中文测试!\",\n                \"nonce\": \"1234\"\n              }, \"applicationUrl\": \"https://connect.oker.vip\", \"prefix\": \"APTOS\", \"aptosChainId\": \"1\"\n            }\n          }]\n        }],\n        \"redirect\": \"none\"\n      }\n      let json = JSON.stringify(datatest)\n      const utf8Array = new TextEncoder().encode(json);\n      let binary = '';\n      utf8Array.forEach(byte => {\n        binary += String.fromCharCode(byte);\n      });\n\n      let firstStr = btoa(binary)\n      console.log(\"字符串编码1>>>>\", firstStr)\n      firstStr = firstStr.replace(/\\+/g, '-')  // 替换 '+'\n      console.log(\"字符串编码2>>>>\", firstStr)\n      firstStr = firstStr.replace(/\\//g, '_')  // 替换 '/'\n      console.log(\"字符串编码3>>>>\", firstStr)\n      firstStr = firstStr.replace(/=+$/, '');  // 移除 '=';\n      console.log(\"字符串编码4>>>>\", firstStr)\n\n      let showUrl = getUniversalLink(getAppWalletDeepLink(firstStr))\n      console.log(\"字符串编码5>>>>\", showUrl)\n      this.qrValue = showUrl;\n      this.showModal = true;\n    },\n\n\n    async testTonSdk() {\n      // 1. connect\n      //  create sub providers for each namespace/chain\n      let nameSpacesChains = [];\n      let optSpaceChains = [];\n\n      let solanaChains = [\n        \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n        \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n        \"svm:70000062\",\n      ];\n      let hasEip155, hasSolana, hasSui, hasBtc, hasAptos, hasTon, hasCosmos, hasTron, hasStarknet,hasPolygon = false\n\n      let suiChains = [\n        \"sui:mainnet\",\n      ];\n\n      let btcChains = [\n        \"btc:mainnet\",\n        \"fractal:mainnet\"\n      ];\n\n      const chains = Object.entries(this.availableChains)\n          .filter((chain) => chain[1].checked)\n          .map((chain) => chain[0]);\n      console.log(`chains  ===> ${chains.values()}`)\n      chains.forEach(function (chainId) {\n        console.log(`chains.forEach chainId  ===> ${chainId}`)\n\n        if (solanaChains.includes(chainId)) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"ton\")) {\n          nameSpacesChains.push(chainId)\n          hasTon = true\n          return\n        }\n        if (typeof chainId == 'string' && (chainId.startsWith(\"aptos\") || chainId.startsWith(\"movement\"))) {\n          nameSpacesChains.push(chainId)\n          hasAptos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId)\n          hasSolana = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"cosmos\")) {\n          nameSpacesChains.push(chainId)\n          hasCosmos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"tron\")) {\n          nameSpacesChains.push(chainId)\n          hasTron = true\n          return\n        }\n\n        if (typeof chainId == 'string' && chainId.startsWith(\"starknet\")) {\n          nameSpacesChains.push(chainId)\n          hasStarknet = true\n          return\n        }\n\n        if (suiChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`);\n          nameSpacesChains.push(chainId);\n          hasSui = true;\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`)\n          nameSpacesChains.push(chainId)\n          hasBtc = true\n          return\n        }\n        if (chainId === \"137\"){\n          hasPolygon = true\n        }\n        hasEip155 = true\n        nameSpacesChains.push(`eip155:${chainId}`)\n      })\n\n\n      optionChains.forEach(function (chainId) {\n        console.log(\"optionChains.forEach 。chainId：》》\",chainId)\n        if (solanaChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n        if (typeof chainId == \"string\" && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (suiChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          optSpaceChains.push(chainId)\n          return\n        }\n        if (chainId.startsWith('ton')) {\n          optSpaceChains.push(chainId)\n          return\n        }\n\n        optSpaceChains.push(`eip155:${chainId}`)\n      })\n\n      console.log(`namespaceChains  ===> ${JSON.stringify(nameSpacesChains)}`);\n      var connectData = {};\n      if (nameSpacesChains && nameSpacesChains.length > 0) {\n        var requireData = {};\n\n        if (hasEip155) {\n\n          if (hasPolygon){\n            requireData.eip155 = {\n              chains: nameSpacesChains.filter((item) =>\n                  item.startsWith(\"eip155\")\n              ),\n              defaultChain: nameSpacesChains.filter((item) =>\n                  item.startsWith(\"eip155\")\n              )[0],\n              rpcMap: {\n                \"137\":\"https://polygon.drpc.org\"\n              }\n            };\n          }else {\n            requireData.eip155 = {\n              chains: nameSpacesChains.filter((item) =>\n                  item.startsWith(\"eip155\")\n              ),\n              defaultChain: nameSpacesChains.filter((item) =>\n                  item.startsWith(\"eip155\")\n              )[0],\n            };\n          }\n\n        }\n        if (hasSolana) {\n          requireData.solana = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"solana\") ||\n                    item.startsWith(\"sonic\") ||\n                    item.startsWith(\"svm\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"solana\") ||\n                    item.startsWith(\"sonic\") ||\n                    item.startsWith(\"svm\")\n            )[0],\n          };\n        }\n\n        if (hasCosmos) {\n          requireData.cosmos = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            )[0],\n          }\n        }\n        if (hasTron) {\n          requireData.tron = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            )[0],\n          }\n        }\n        if (hasStarknet) {\n          requireData.starknet = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"starknet\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"starknet\")\n            )[0],\n          }\n        }\n        if (hasTon) {\n\n          //\n          let tonParams = {\n            ton_addr: {\n              name: 'ton_addr',\n            }\n          };\n          if (this.tonProofValue) {\n            tonParams = {\n              ton_addr: {\n                name: 'ton_addr',\n              },\n              ton_proof: {\n                name: 'ton_proof',\n                payload: this.tonProofValue,\n              }\n            };\n          }\n\n\n          requireData.ton = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"ton\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"ton\"))[0],\n            params: tonParams,\n          };\n        }\n\n        if (hasSui) {\n          requireData.sui = {\n            chains: nameSpacesChains.filter((item) => item.startsWith(\"sui\")),\n            defaultChain: nameSpacesChains.filter((item) =>\n                item.startsWith(\"sui\")\n            )[0],\n            rpcMap: {\n              \"sui:mainnet\": \"https://www.okx.com/fullnode/sui/discover/rpc\"\n            }\n          };\n        }\n        if (hasAptos) {\n          requireData.aptos = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\"))[0]\n          }\n        }\n\n        if (hasBtc) {\n          let btcChains = nameSpacesChains.filter(item => item.startsWith(\"btc\") || item.startsWith(\"fractal\"))\n          requireData.btc = {\n            chains: btcChains,\n            defaultChain: btcChains[0]\n          }\n        }\n        console.log(`requireData  ===> ${JSON.stringify(requireData)}`)\n        connectData['namespaces'] = requireData;\n        console.log(JSON.stringify(connectData))\n      }\n\n      if (optSpaceChains && optSpaceChains.length > 0) {\n        const optData = {};\n\n        const eip155Chains = optSpaceChains.filter((item) => item.startsWith(\"eip155\"));\n        if (eip155Chains.length > 0) {\n          optData[\"eip155\"] = {\n            chains: eip155Chains,\n            defaultChain: eip155Chains[0],\n          };\n        }\n\n        const solanaChains = optSpaceChains.filter((item) => item.startsWith(\"solana\"));\n        if (solanaChains.length > 0) {\n          optData[\"solana\"] = {\n            chains: solanaChains,\n            defaultChain: solanaChains[0],\n          };\n        }\n\n        const tonChains = optSpaceChains.filter((item) => item.startsWith(\"ton\"));\n        if (tonChains.length > 0) {\n\n          let tonParams = {\n            ton_addr: {\n              name: 'ton_addr',\n            }\n          };\n          if (this.tonProofValue) {\n            tonParams = {\n              ton_addr: {\n                name: 'ton_addr',\n              },\n              ton_proof: {\n                name: 'ton_proof',\n                payload: this.tonProofValue,\n              }\n            };\n          }\n\n\n          optData[\"ton\"] = {\n            chains: tonChains,\n            defaultChain: tonChains[0],\n            params: tonParams,\n          };\n        }\n\n        const btcChains = optSpaceChains.filter((item) => item.startsWith(\"btc\"));\n        if (btcChains.length > 0) {\n          optData[\"btc\"] = {\n            chains: btcChains,\n            defaultChain: btcChains[0],\n          };\n        }\n\n        connectData[\"optionalNamespaces\"] = optData;\n      }\n\n      if (nameSpacesChains.length === 0 && optSpaceChains.length === 0) {\n        //未选择链\n        alert(\"Please select a chain from above to continue\");\n        return;\n      }\n      console.log(\"=====>connectData \");\n      console.log(connectData);\n\n      var connectMethod;\n      let signMethods = this.getCurrentSelectedMethodData();\n      if (window.provider instanceof OKXUniversalConnectUI) {\n\n        if (signMethods && signMethods.length > 0) {\n          connectMethod = window.provider.openModalAndSign(connectData, JSON.parse(JSON.stringify(signMethods)));\n        } else {\n          connectMethod = window.provider.openModal(connectData);\n        }\n      } else {\n        if (this.universalToTG) {\n          connectData.sessionConfig = {\n            useMini: true,\n            openUniversalUrl: true,\n            tmaReturnUrl: 'back'\n          }\n        } else {\n          connectData.sessionConfig = {\n            redirect: selectedReturnStrategy\n          }\n        }\n        if (signMethods && signMethods.length > 0) {\n          connectMethod = window.provider.connectAndSign(connectData, JSON.parse(JSON.stringify(signMethods)));\n        } else {\n          connectMethod = window.provider.connect(connectData);\n        }\n      }\n\n      await connectMethod\n          .then((result) => {\n            // 2. set defaul chain\n            this.walletAddress = \"connected\";\n            if (this.isPC()) {\n              this.showModal = false;\n            }\n            if (result) {\n              this.testboc = JSON.stringify(result)\n            }\n\n            if (window.provider.session && window.provider.session.namespaces) {\n              let ton = window.provider.session.namespaces[\"ton\"];\n              console.log(\"是否包含ton\", ton)\n              if (ton) {\n                this.tonUniversalLog()\n              }\n            }\n          })\n          .catch((error) => {\n            if (error.code == 301) {\n              setTimeout(() => {\n                alert(error.message)\n              }, 0.5);\n            } else if (error.message) {\n              alert(error.message)\n            }\n            console.error(\"发生了错误：\", error);\n          });\n    },\n\n    getCurrentSelectedMethodData() {// 连接签名\n      var methodList = [];\n      this.selectedMethod.forEach(method => {\n        switch (method) {\n          case \"wallet_addEthereumChain(ETH)\":\n            methodList.push({\n              method: \"wallet_addEthereumChain\",\n              chainId: \"eip155:1\",\n              params: {\n                blockExplorerUrls: [\"https://explorer.fuse.io\"],\n                chainId: \"0x7a\",\n                chainName: \"Fuse\",\n                nativeCurrency: {name: \"Fuse\", symbol: \"FUSE\", decimals: 18},\n                rpcUrls: [\"https://rpc.fuse.io\"],\n              },\n            })\n            break;\n          case \"personal_sign(ETH)\":\n            methodList.push(\n                {\n                  method: \"personal_sign\",\n                  chainId: \"eip155:1\",\n                  params: [\n                    \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n                  ],\n                });\n            break;\n          case \"solana_signMessage(Sol mainnet)\":\n            methodList.push(\n                {\n                  \"chainId\": \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n                  \"method\": \"solana_signMessage\",\n                  \"params\": {\n                    \"message\": \"Hello Solana\",\n                  }\n                }\n            );\n            break;\n          case \"sui_signMessage(Sui mainnet)\":\n          case \"sui_signPersonalMessage(Sui mainnet)\": {\n            let suiData = [\n              76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n              109, 111, 118, 101,\n            ];\n            let uint8Array = new Uint8Array(suiData);\n            let currentMethod = \"sui_signMessage\";\n            this.currentSuiTransaction = {\n              message: uint8Array\n            }\n\n            if (method.startsWith(\"sui_signPersonalMessage\")) {\n              currentMethod = \"sui_signPersonalMessage\";\n            }\n            methodList.push(\n                {\n                  method: currentMethod,\n                  chainId: \"sui:mainnet\",\n                  params: {\n                    message: uint8Array,\n                  }\n                }\n            );\n            break;\n          }\n          case \"btc_signMessage(BTC)\":\n            methodList.push(\n                {\n                  method: \"btc_signMessage\",\n                  chainId: \"btc:mainnet\",\n                  params: {\n                    message: \"Welcome to BTC\"\n                  }\n                }\n            )\n            break;\n          case \"aptos_signMessage(aptos mainnet)\":\n            methodList.push(\n                {\n                  \"chainId\": \"aptos:mainnet\",\n                  \"method\": \"aptos_signMessage\",\n                  \"params\": {\n                    address: true,\n                    application: true,\n                    chainId: true,\n                    message: \"Hello Aptos\",\n                    nonce: \"1234\"\n                  }\n                }\n            )\n            break;\n          case \"cosmos_signArbitrary(cosmoshub)\":\n            methodList.push(\n                {\n                  \"chainId\": \"cosmos:cosmoshub-4\",\n                  \"method\": \"cosmos_signArbitrary\",\n                  \"params\": {\n                    message: \"test cosmos\"\n                  }\n                }\n            )\n\n            break;\n          case \"test_noSupport_eth(ETH)\":\n            methodList.push(\n                {\n                  chainId: \"eip155:1\",\n                  method: \"test_noSupport_eth\",\n                  params: {\n                    message: \"test hello\",\n                  }\n                }\n            )\n            break;\n          case \"sync_all_addresses\":\n            methodList.push(\n                {\n                  method: \"sync_all_addresses\",\n                });\n            break;\n          case \"tron_signMessage\":\n            methodList.push(\n                {\n                  chainId: \"tron:mainnet\",\n                  method: \"tron_signMessage\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n          case \"tron_signMessageV2\":\n            methodList.push(\n                {\n                  chainId: \"tron:mainnet\",\n                  method: \"tron_signMessageV2\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n\n            //\n          case \"starknet_signMessage\": {\n            const signData = {\n              \"domain\": {\n                \"chainId\": \"0x534e5f4d41494e\",\n                \"name\": \"STRKFarm\",\n                \"version\": \"1\"\n              },\n              \"message\": {\n                \"document\": \"app.strkfarm.xyz/tnc/v1\",\n                \"message\": \"Read and Agree T&C\"\n              },\n              \"primaryType\": \"Tnc\",\n              \"types\": {\n                \"StarkNetDomain\": [\n                  {\n                    \"name\": \"name\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"version\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"chainId\",\n                    \"type\": \"felt\"\n                  }\n                ],\n                \"Tnc\": [\n                  {\n                    \"name\": \"message\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"document\",\n                    \"type\": \"felt\"\n                  }\n                ]\n              }\n            }\n            methodList.push({\n              chainId: \"starknet:mainnet\",\n              method: \"starknet_signMessage\",\n              params: {\n                accountAddress: \"\",\n                typedData: signData\n              }\n            })\n          }\n            break\n          default:\n\n            break;\n        }\n      })\n      this.selectedMethodData = methodList\n      return methodList\n\n    },\n\n    closeModal() {\n      this.showModal = false;\n    },\n\n    isPC() {\n      const userAgentInfo = navigator.userAgent;\n      console.log(\"current device ua is ===>\", userAgentInfo);\n\n      const Agents = [\n        \"Android\",\n        \"iPhone\",\n        \"SymbianOS\",\n        \"Windows Phone\",\n        \"iPad\",\n        \"iPod\",\n      ];\n      let flag = true;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = false;\n          break;\n        }\n      }\n      return flag;\n    },\n    isSafariOrChrome() {\n      const userAgentInfo = navigator.userAgent;\n      const Agents = [\"Safari\", \"Chrome\"];\n      let flag = false;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = true;\n          break;\n        }\n      }\n      return flag;\n    },\n\n    /// solana\n    async sol_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      try {\n        let data = {\n          method: \"solana_signMessage\",\n          params: {\n            message: \"Hello Solana\",\n            pubkey: \"\",\n          },\n        };\n        this.testTransaction = JSON.stringify(data);\n        let provider = new OKXSolanaProvider(window.provider);\n\n        const encoder = new TextEncoder();\n        const uint8Array1 = encoder.encode(\"Hello Solana\");\n\n        let message = await provider.signMessage(\n            uint8Array1,\n            this.selectedChain\n        );\n        console.log(\"solana_signMessage Result:\", JSON.stringify(message), typeof(uint8Array1))\n        const result1 = nacl.sign.detached.verify(\n            new TextEncoder().encode(\"Hello Solana\"),\n            message.signature,\n            new PublicKey(message.publicKey).toBytes()\n        );\n        console.log(result1)\n\n        if (typeof message == \"string\") {\n          this.testboc = result1;\n        } else {\n          this.testboc = result1;\n        }\n      } catch (e) {\n        console.log(\"solana_signMessage error:\", JSON.stringify(e))\n        this.testboc = e.message\n      }\n\n    },\n\n    async aptos_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      let data = {\n        address: true,\n        application: true,\n        chainId: true,\n        message: \"Hello Aptos\",\n        nonce: \"1234\"\n      }\n\n      let provider = new OKXAptosProvider(window.provider)\n      let message = await provider.signMessage(data, this.selectedChain)\n      this.testTransaction = JSON.stringify(data)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n      try {\n        const transaction = await aptos.transaction.build.simple({\n          sender: provider.getAccount(this.selectedChain).address,\n          data: {\n            // The Move entry-function\n            function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n            // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n            typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n            functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n          },\n        });\n        console.log(\"获取地址aptos 222222：\");\n\n        this.testTransaction = safeJsonStringify(transaction)\n\n        let message = await provider.signTransaction(transaction, this.selectedChain)\n        if (typeof message == \"string\") {\n          this.testboc = message\n        } else {\n          this.testboc = JSON.stringify(message)\n        }\n      }catch (e) {\n\n        this.testboc = JSON.stringify(e)\n      }\n\n    },\n\n    async move_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async move_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n          functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n        },\n      });\n\n      // let data = {\n      //   \"arguments\": [\"100000\",[\"0\",\"0\",\"10533\"],[\"10\",\"5\",\"5\"],[\"false\",\"false\",\"true\"]],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x3\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\",\"0x73eb84966be67e4697fc5ae75173ca6c35089e802650f75422ab49a8729704ec::coin::DooDoo\",\"0x53a30a6e5936c0a4c5140daed34de39d17ca7fcae08f947c02e979cef98a3719::coin::LSD\",\"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::CurveV1\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x54cb0bb2c18564b86e34539b9f89cfe1186e39d89fce54e1cd007b8e61673a85::bin_steps::X80\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async sol_signVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(\n          provider.getAccount(\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\").address\n      );\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signTransaction(\n          transaction,\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAndSendVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n          transaction,\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllVersionedTransactions() {\n      let provider = new OKXSolanaProvider(window.provider);\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n          [transaction],\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signTransaction() {\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: 1000,\n          })\n      );\n\n      this.testTransaction = safeJsonStringify(transaction)\n      let result = await provider.signTransaction(\n          transaction,\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllTransactions() {\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n          [transaction],\n          this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    getSolConnect() {\n      let rpc = \"https://www.okx.com/fullnode/sol/discover/rpc\"\n      if (this.selectedChain === \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\") {\n        rpc = \"https://www.okx.com//fullnode/sol/discover/rpc\"\n      } else if (this.selectedChain === \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\") {\n        rpc = \"https://www.okx.com/fullnode/soltestnet/discover/rpc\"\n      } else if (this.selectedChain === \"svm:70000062\") {\n        rpc = \"https://www.okx.com/fullnode/sonic/testnet/discover/rpc\"\n      }\n      return rpc\n    },\n\n    async sol_signAndSendTransaction() {\n\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n          transaction,\n          this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async cosmos_signArbitrary() {\n      let provider = new OKXCosmosProvider(window.provider)\n      let message = await provider.signArbitrary(this.selectedChain, provider.getAccount(this.selectedChain).address, \"test cosmos\")\n      if (typeof message == \"string\") {\n        this.testboc = message;\n      } else {\n        let isValid = await this.cosmos_verifySignArbitrary(provider.getAccount(this.selectedChain).address, \"test cosmos\", message.signature, message.pub_key.value)\n        console.log(\"verify\", isValid)\n        this.testboc = \"verify:\" + isValid + JSON.stringify(message);\n      }\n    },\n\n    async cosmos_verifySignArbitrary(signer, data, signature, pubkey) {\n      try {\n        console.log(\"cosmos_verifySignArbitrary signer:\", signer)\n        console.log(\"cosmos_verifySignArbitrary data:\", JSON.stringify(data))\n        console.log(\"cosmos_verifySignArbitrary signature:\", signature)\n        console.log(\"cosmos_verifySignArbitrary pubkey:\", pubkey)\n\n        // 将bech32地址转换为公钥\n        const {prefix: prefixStr} = fromBech32(signer)\n\n        const signatureBuffer = Buffer.from(signature, 'base64');\n\n        const uint8Signature = new Uint8Array(signatureBuffer); // Convert the buffer to an Uint8Array\n\n        const pubKeyValueBuffer = Buffer.from(pubkey, 'base64'); // Decode the base64 encoded value\n\n        const pubKeyUint8Array = new Uint8Array(pubKeyValueBuffer); // Convert the buffer to an Uint8Array\n\n        // 验证签名\n        return await verifyADR36Amino(\n            prefixStr,\n            signer,\n            data,\n            pubKeyUint8Array,\n            uint8Signature\n        )\n      } catch (err) {\n        console.error('Verification failed:', err)\n        return false\n      }\n    },\n\n    async cosmos_signAmino() {\n      let provider = new OKXCosmosProvider(window.provider)\n      // const rpcUrl = 'https://osmosis-rpc.publicnode.com:443';\n      // const client = await StargateClient.connect(rpcUrl);\n      // const height = await client.getHeight();\n      // let address = provider.getAccount(this.selectedChain).address\n      // const sequence = await client.getSequence(address)\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      // let signDoc = makeSignDoc(\n      //     transaction.msgs,\n      //     transaction.fee,\n      //     this.selectedChain.split(\":\")[1],\n      //     transaction.memo,\n      //     transaction.accountNumber,\n      //     transaction.sequence,\n      // )\n      let signDoc = {\n        \"chain_id\": \"osmosis-1\",\n        \"account_number\": \"630104\",\n        \"sequence\": \"480\",\n        \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]},\n        \"msgs\": [{\n          \"type\": \"osmosis/poolmanager/swap-exact-amount-in\",\n          \"value\": {\n            \"sender\": \"osmo1u6lts9ng4etxj0zdaxsada6zgl8dudpgelmuyu\",\n            \"routes\": [{\n              \"pool_id\": \"1096\",\n              \"token_out_denom\": \"ibc/987C17B11ABC2B20019178ACE62929FE9840202CE79498E29FE8E5CB02B7C0A4\"\n            }, {\n              \"pool_id\": \"611\",\n              \"token_out_denom\": \"ibc/27394FB092D2ECCD56123C74F36E4C1F926001CEADA9CA97EA622B25F41E5EB2\"\n            }],\n            \"token_in\": {\"denom\": \"uosmo\", \"amount\": \"100\"},\n            \"token_out_min_amount\": \"8\"\n          }\n        }],\n        \"memo\": \"FE\",\n        \"timeout_height\": \"23603788\",\n        \"signOptions\": {\n          \"useOneClickTrading\": false,\n          \"preferNoSetFee\": true,\n          \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]}\n        }\n      }\n\n\n      // let signOption = {\n      //   memo: true, // optional\n      //   fee: true, // optional\n      //   gasRate: {\n      //     // optional\n      //     average: \"0.2\",\n      //     low: \"0.02\",\n      //     tiny: \"0.002\",\n      //   },\n      // }\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signAmino(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, signDoc)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    messageToBuffer(message) {\n      var buffer = Buffer.from([]);\n      try {\n        if (typeof message === \"string\") {\n          buffer = Buffer.from(message.replace(\"0x\", \"\"), \"hex\");\n        } else {\n          buffer = Buffer.from(message);\n        }\n      } catch (err) {\n        console.log(`messageToBuffer error: ${err}`);\n      }\n      return buffer;\n    },\n\n\n    async cosmos_signDirect() {\n      let provider = new OKXCosmosProvider(window.provider)\n\n      let signDoc = {\n        \"bodyBytes\": this.messageToBuffer(\"0x0ac1010a292f6962632e6170706c69636174696f6e732e7472616e736665722e76312e4d73675472616e736665721293010a087472616e7366657212096368616e6e656c2d301a0d0a05756f736d6f120431303030222b6f736d6f3175366c7473396e67346574786a307a64617873616461367a676c386475647067656c6d7579752a2d636f736d6f733175366c7473396e67346574786a307a64617873616461367a676c386475647067337967766a773207080410ebe3f90a3880b0bcafd18cec8218\"),\n        \"authInfoBytes\": this.messageToBuffer(\"0x0a510a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a2102446e19e94ac0e83ea896d2712507577eb39fbdd2d6ae9f0fc0b9759f1fbaba9012040a02080118e00312140a0e0a05756f736d6f1205323530303010859a11\"),\n        \"chainId\": \"osmosis-1\",\n        \"accountNumber\": \"630104\",\n      }\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signDirect(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, transaction)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    sui_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentSuiTransaction = params\n      this.currentSuiMethod = flag\n    },\n\n    btc_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentBtcTransaction = params\n      this.currentBtcMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n\n    fractal_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentFractalTransaction = params\n      this.currentFractalMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n    tron_getTransactionResult(result) {\n      if (typeof result == \"string\") {\n        this.testboc = result\n      } else {\n        this.testboc = JSON.stringify(result)\n      }\n    },\n    tron_generateTransactionParams(params) {\n      if (typeof params == \"string\") {\n        this.testTransaction = params\n      } else {\n        this.testTransaction = JSON.stringify(params)\n      }\n    },\n\n    starknet_getTransactionResult(result) {\n      if (typeof result == \"string\") {\n        this.testboc = result\n      } else {\n        this.testboc = JSON.stringify(result)\n      }\n    },\n\n    starknet_generateTransactionParams(params) {\n      if (typeof params == \"string\") {\n        this.testTransaction = params\n      } else {\n        this.testTransaction = JSON.stringify(params)\n      }\n    },\n\n    handleModalsSelect(modals) {\n      selectedModals = modals;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: modals.length === 3 ? \"all\" : modals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n\n    handleReturnStrategySelect(returnStrategy) {\n      selectedReturnStrategy = returnStrategy === \"deeplink\" ? this.deeplink : returnStrategy;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      } else {\n        if (window.provider.sessionConfig) {\n          window.provider.sessionConfig.redirect = selectedReturnStrategy;\n        } else {\n          window.provider.sessionConfig = {\n            redirect: selectedReturnStrategy\n          };\n        }\n      }\n    },\n\n    handleReturnStrategyDeeplink(deeplink) {\n      console.log('handleReturnStrategyDeeplink', deeplink)\n      selectedReturnStrategy = deeplink;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: deeplink,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      } else {\n        if (window.provider.sessionConfig) {\n          window.provider.sessionConfig.redirect = deeplink;\n        } else {\n          window.provider.sessionConfig = {\n            redirect: deeplink\n          };\n        }\n      }\n    },\n\n    handleLanguageSelect(language) {\n      selectedLanguage = language;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: language,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n    handleConnectMethodsSelect() {\n      console.log(\"当前的方法 this.selectedMethod>>>>\", this.selectedMethod);\n    },\n\n    eth_verifyMessage(message, signature, ethAddress) {\n      console.log(\"eth_verifyMessage   message>>>\", message)\n      console.log(\"eth_verifyMessage   signature>>>\", signature)\n      console.log(\"eth_verifyMessage   ethAddress>>>\", ethAddress)\n      if (!message || !signature) {\n        return \"\"\n      }\n      let originalMessage = message\n      if (message.startsWith(\"0x\")) {\n        originalMessage = originalMessage.replace(/^0x/, '');\n        let str = '';\n        for (let i = 0; i < originalMessage.length; i += 2) {\n          const byte = originalMessage.slice(i, i + 2);\n          str += String.fromCharCode(parseInt(byte, 16));\n        }\n        originalMessage = str\n      }\n      console.log(\"eth_verifyMessage   originalMessage>>>\", originalMessage)\n\n      // const messageHash = ethers.utils.hashMessage(originalMessage);\n      const recoveredAddress = ethers.utils.verifyMessage(originalMessage, signature);\n      console.log(\"eth_verifyMessage recoveredAddress:\", recoveredAddress);\n      return recoveredAddress.toLowerCase() === ethAddress.toLowerCase();\n    },\n\n    async verifyMessage(list) { //连接验签\n\n      if (window.provider && window.provider.session && list && list.length > 0) {\n        let verifyList = {}\n        for (let methodItem of list) {\n          if (\"result\" in methodItem && \"method\" in methodItem) {\n            let requestItme = this.selectedMethodData.filter(item => item.method === methodItem.method)[0];\n            console.log(\"验证签名 请求>>>:\", JSON.stringify(requestItme));\n            console.log(\"验证签名 结果>>>:\", JSON.stringify(methodItem));\n            if (methodItem.method === \"personal_sign\") {\n              let ethAddress = this.requestEVMAccountWithSession(methodItem.chainId)\n              ethAddress = ethAddress[0];\n              console.log(\"验证eth 钱包地址>>>:\", ethAddress);\n              let ethMessage = requestItme.params[0]\n              console.log(\"验证eth 签名消息体>>:\", JSON.stringify(ethMessage));\n              verifyList[methodItem.method] = this.eth_verifyMessage(ethMessage, methodItem.result, ethAddress)\n            } else if (methodItem.method === \"solana_signMessage\") {\n              let solanaMessage = methodItem.result\n              if (\"signature\" in solanaMessage && \"publicKey\" in solanaMessage) {\n                const verifySol = nacl.sign.detached.verify(\n                    new TextEncoder().encode(\"Hello Solana\"),\n                    solanaMessage.signature,\n                    new PublicKey(solanaMessage.publicKey).toBytes()\n                );\n                verifyList[methodItem.method] = verifySol\n              } else {\n                verifyList[methodItem.method] = false\n              }\n            } else if (methodItem.method === \"sui_signPersonalMessage\" || methodItem.method === \"sui_signMessage\") {\n              let suiResult = this.sui_verifySignature(methodItem.result);\n              verifyList[methodItem.method] = (await suiResult).result\n            } else if (methodItem.method === \"btc_signMessage\") {\n\n              verifyList[methodItem.method] = \"Not verified yet\"\n\n            } else if (methodItem.method === \"aptos_signMessage\") {\n              let aptosMessage = methodItem.result\n              let aptosProvider = new OKXAptosProvider(window.provider)\n              let aptosPublicKey = aptosProvider.getAccount(methodItem.chainId)?.publicKey\n\n              let signStr = aptosMessage.signature\n              if (signStr.startsWith(\"0x\")) {\n                signStr = signStr.slice(2, signStr.length)\n              }\n\n              console.log(\"aptos_signMessage aptosPublicKey And signStr\", aptosPublicKey, signStr)\n              verifyList[methodItem.method] = nacl.sign.detached.verify(\n                  Buffer.from(aptosMessage.fullMessage),\n                  Buffer.from(signStr, 'hex'),\n                  Buffer.from(aptosPublicKey, 'hex'),\n              );\n            } else if (methodItem.method === \"cosmos_signArbitrary\") {\n              let cosmosProvider = new OKXCosmosProvider(window.provider)\n              let cosmosAddress = cosmosProvider.getAccount(methodItem.chainId)?.address\n              let cosmosMessage = methodItem.result\n              let isValid = await this.cosmos_verifySignArbitrary(cosmosAddress, \"test cosmos\", cosmosMessage.signature, cosmosMessage.pub_key.value)\n              verifyList[methodItem.method] = isValid\n\n            } else if (methodItem.method === \"tron_signMessage\") {\n              let tronMessage = methodItem.result\n              let tronWeb = new TronWeb({\n                \"fullHost\": 'https://api.trongrid.io',\n                \"headers\": {},\n                \"privateKey\": ''\n              })\n              let provider = new OKXTronProvider(window.provider)\n              verifyList[methodItem.method] = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), tronMessage, provider.getAccount(\"tron:mainnet\").address)\n            } else if (methodItem.method === \"tron_signMessageV2\") {\n              let tronMessage = methodItem.result\n              let tronWeb = new TronWeb({\n                \"fullHost\": 'https://api.trongrid.io',\n                \"headers\": {},\n                \"privateKey\": ''\n              })\n              const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", tronMessage);\n              let provider = new OKXTronProvider(window.provider)\n\n              verifyList[methodItem.method] = base58Address === provider.getAccount(\"tron:mainnet\").address\n            } else if (methodItem.method === \"starknet_signMessage\") {\n              let res = methodItem.result\n              let signData = this.starknetPanelTypedData\n\n              const rpcProvider = new StarknetRpcProvider({nodeUrl: \"https://free-rpc.nethermind.io/mainnet-juno/v0_7\"});\n\n              let provider = new OKXStarknetProvider(window.provider)\n              let address = provider.getAccount(\"starknet:mainnet\").address\n              let pk = \"0x123\"; /// random pk\n              const account = new StarknetAccount(rpcProvider, address, pk)\n\n              let that = this\n              account.verifyMessage(signData, res).then(function (isValid) {\n                that.testTransaction = `Verifyed result: \\n${isValid}`\n              }).catch(function (error) {\n                that.testTransaction = `Verifyed failed: \\n${error}`\n              })\n              verifyList[methodItem.method] = \"starknet is verifying signature...\"\n            } else {\n              verifyList[methodItem.method] = \"Not verified yet\"\n\n            }\n          } else if (\"method\" in methodItem && \"error\" in methodItem) {\n            verifyList[methodItem.method] = methodItem.error\n          }\n\n        }\n\n        console.log(\"验证签名 最后的结果>>>:\", JSON.stringify(verifyList));\n        this.testTransaction = \"签名验证结果如下: \\n\" + JSON.stringify(verifyList)\n      } else {\n        console.log(\"验证签名 window.provider.session.connectMethodsReply 为空:\");\n\n      }\n\n    },\n\n    handleThemeSelect(theme) {\n      selectedTheme = theme;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: theme,\n          },\n        };\n      }\n    },\n\n    async sui_verifySignature(signatureResult) {\n      let resultObj = signatureResult\n      let result = false\n      let msg = ''\n      try {\n        /// 获取当前account\n        const adapter = new SuiAdapter(window.provider);\n        let account = adapter.getAccount()\n        console.log(`Account中获取的address：${account.address}`)\n\n        /// 验证签名\n        let pubKey = await verifyPersonalMessageSignature(this.currentSuiTransaction.message, resultObj.signature)\n        let address = pubKey.toSuiAddress()\n        console.log(`验签结果计算得到address：${address}`)\n\n        /// 对比pubKey\n        console.log(`account pubkey: ${account.publicKey}`,)\n        console.log(`result pubkey: ${pubKey.toBase64()}`)\n        result = (account.address === address) && (account.publicKey === pubKey.toBase64())\n\n        msg = `address verify: ${account.address === address}\\npublicKey verify: ${account.publicKey === pubKey.toBase64()}`\n        console.log(\"signature verify success: \", pubKey)\n      } catch (e) {\n        console.log(\"signature verify failed: \", e)\n      }\n      return {\n        result,\n        msg\n      }\n    },\n\n\n    handleRedirectSelect(input) {\n      this.redirect = input;\n    },\n\n    handleRedirectDeeplink(input) {\n      this.redirectDeeplink = input;\n    },\n\n    addRedirectParam() {\n      if (this.testTransaction) {\n        const newTransaction = JSON.parse(this.testTransaction);\n        newTransaction.redirect = this.redirect === 'deeplink' ? this.redirectDeeplink : this.redirect;\n        this.testTransaction = JSON.stringify(newTransaction);\n      }\n    },\n\n    canChainAddRedirectParam() {\n      return chainsThatCanAddRedirectParam.some((c) => this.selectedChain.startsWith(c));\n    }\n  },\n  created() {\n    // for (const eventName of Object.values(OKX_TON_CONNECTION_AND_TRANSACTION_EVENT)) {\n    //   console.log(eventName);\n    //   window.addEventListener(eventName, (event) => {\n    //     console.log(eventName,event.detail)\n    //     this.currentStatus = eventName\n    //   });\n    // }\n  },\n\n  mounted() {\n\n    var scriptTag = document.createElement(\"script\");\n    scriptTag.src = \"https://telegram.org/js/telegram-web-app.js\";\n    scriptTag.id = \"tgsdk\";\n    document.getElementsByTagName('head')[0].appendChild(scriptTag);\n\n    this.connectReady = true;\n    document.title = \"OKX Connect\";\n    this.initBtnClicked()\n    this.initBtnClicked()\n\n    console.log(\"挂载成功:\")\n    if (this.$refs.starknetPanelRef) {\n      this.starknetPanelTypedData = toRaw(this.$refs.starknetPanelRef.signData)\n      console.log(\"111: \", this.starknetPanelTypedData)\n    } else {\n      console.log(\"222\")\n    }\n  },\n};\n</script>\n","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_getAccount()\">getAccount(BTC)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signMessage()\">signMessage(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_send()\">send(BTC)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendBitcoin()\">sendBitcoin(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signPsbt_up()\">signPsbt(上架NFT)</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"btc_signAndPushPsbt_up()\">signAndPushPsbt(上架NFT)</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在OKX App选择要上架的Btc NFT，点击【上架】\n        </li>\n        <li>\n          2. 弹出签名面板，点开高级选项，查看\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出上架流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendInscription()\">sendInscription(BTC)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Btc NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"runsAddress\" clearable placeholder=\"the receiver address\" />\n      <el-input class=\"grid-content\" v-model=\"runsId\" clearable placeholder=\"the runeid\" />\n      <el-input class=\"grid-content\" v-model=\"runsAmount\" clearable placeholder=\"the amount to send\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendRunes()\">btc_sendRunes(BTC)</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model= \"intTicker\" clearable placeholder=\"BRC-20 ticker \" />\n      <el-input class=\"grid-content\" v-model=\" intAmount\" clearable placeholder=\" the amount to inscribe\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_inscribeTransfer()\">btc_inscribeTransfer(BTC)</el-button>\n    </el-col>\n\n\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    const runsAddress = ref('')\n    const runsId = ref('')\n    const runsAmount = ref('')\n    const intTicker = ref('')\n    const intAmount = ref('')\n\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount,\n      runsAddress,\n      runsId,\n      runsAmount,\n      intTicker,\n      intAmount\n    }\n  },\n  methods: {\n\n    btc_getAccount() {\n      this.$emit('generateTransactionParams', {}, \"btc_getAccount\")\n    },\n\n    btc_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to BTC\"\n      };\n      this.$emit('generateTransactionParams', params, \"btc_signMessage\")\n    },\n\n    btc_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"btc_send\")\n    },\n\n    btc_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"btc_sendBitcoin\")\n    },\n\n    btc_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"btc_signPsbt\")\n    },\n\n    btc_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"btc_signAndPushPsbt\")\n    },\n\n    btc_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"btc_sendInscription\")\n    },\n    btc_sendRunes() {\n      if (!this.runsAddress) {\n        alert(\"Please enter the receiver address\")\n        return\n      }\n      if (!this.runsId) {\n        alert(\"Please enter the runsId\")\n        return\n      }\n      if (!this.runsAmount) {\n        alert(\"Please enter the amount to send \")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        address:this.runsAddress,\n        runeid:this.runsId,\n        amount:this.runsAmount\n      }, \"btc_sendRunes\")\n    },\n\n    btc_inscribeTransfer() {\n      if (!this.intTicker) {\n        alert(\"Please enter BRC-20 ticker\")\n        return\n      }\n      if (!this.intAmount) {\n        alert(\"Please enter the amount to inscribe\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        ticker:this.intTicker,\n        amount:this.intAmount\n      }, \"btc_inscribeTransfer\")\n    },\n\n\n\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./BtcTransactionPanel.vue?vue&type=template&id=759766a0&scoped=true\"\nimport script from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./BtcTransactionPanel.vue?vue&type=style&index=0&id=759766a0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-759766a0\"]])\n\nexport default __exports__","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_getAccount()\">getAccount(Fractal)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signMessage()\">signMessage(Fractal)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_send()\">send(Fractal)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_sendBitcoin()\">sendBitcoin(Fractal)</el-button>\n\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signPsbt_up()\">signPsbt(上架NFT)</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_signAndPushPsbt_up()\">signAndPushPsbt(上架NFT)</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在OKX App选择要上架的Fractal NFT，点击【上架】\n        </li>\n        <li>\n          2. 弹出签名面板，点开高级选项，查看\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出上架流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_sendInscription()\">sendInscription(Fractal)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Fractal NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"runsAddress\" clearable placeholder=\"the receiver address\" />\n      <el-input class=\"grid-content\" v-model=\"runsId\" clearable placeholder=\"the runeid\" />\n      <el-input class=\"grid-content\" v-model=\"runsAmount\" clearable placeholder=\"the amount to send\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_sendRunes()\">fractal_sendRunes(fractal)</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model= \"intTicker\" clearable placeholder=\"BRC-20 ticker \" />\n      <el-input class=\"grid-content\" v-model=\" intAmount\" clearable placeholder=\" the amount to inscribe\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_inscribeTransfer()\">fractal_inscribeTransfer(fractal)</el-button>\n    </el-col>\n\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    const runsAddress = ref('')\n    const runsId = ref('')\n    const runsAmount = ref('')\n    const intTicker = ref('')\n    const intAmount = ref('')\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount,\n      runsAddress,\n      runsId,\n      runsAmount,\n      intTicker,\n      intAmount\n    }\n  },\n  methods: {\n\n    fractal_getAccount() {\n      this.$emit('generateTransactionParams', {}, \"fractal_getAccount\")\n    },\n\n    fractal_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to UniSat!\\n\\nClick to sign in and accept the UniSat Terms of Service (https://unisat.io/terms-of-service.html) and Privacy Policy (https://unisat.io/privacy-policy.html).\\n    \\nThis request will not trigger a blockchain transaction.\\n    \\nYour authentication status will reset after 24 hours.\\n    \\nWallet address:\\nbc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\\n    \\nNonce:\\n162d70e3-8c21-4cfd-9a22-9bf0a4b7be51\\n\"\n      };\n      this.$emit('generateTransactionParams', params, \"fractal_signMessage\")\n    },\n\n    fractal_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_send\")\n    },\n\n    fractal_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_sendBitcoin\")\n    },\n\n    fractal_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"fractal_signPsbt\")\n    },\n\n    fractal_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"fractal_signAndPushPsbt\")\n    },\n\n    fractal_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"fractal_sendInscription\")\n    },\n\n    fractal_sendRunes() {\n      if (!this.runsAddress) {\n        alert(\"Please enter the receiver address\")\n        return\n      }\n      if (!this.runsId) {\n        alert(\"Please enter the runsId\")\n        return\n      }\n      if (!this.runsAmount) {\n        alert(\"Please enter the amount to send \")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        address:this.runsAddress,\n        runeid:this.runsId,\n        amount:this.runsAmount\n      }, \"fractal_sendRunes\")\n    },\n\n    fractal_inscribeTransfer() {\n      if (!this.intTicker) {\n        alert(\"Please enter BRC-20 ticker\")\n        return\n      }\n      if (!this.intAmount) {\n        alert(\"Please enter the amount to inscribe\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        ticker:this.intTicker,\n        amount:this.intAmount\n      }, \"fractal_inscribeTransfer\")\n    },\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./FractalTransactionPanel.vue?vue&type=template&id=07ed8044&scoped=true\"\nimport script from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./FractalTransactionPanel.vue?vue&type=style&index=0&id=07ed8044&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-07ed8044\"]])\n\nexport default __exports__","<script>\n\nimport {getFullnodeUrl, SuiClient} from \"@mysten/sui/client\";\nimport {Transaction as SuiTransaction} from '@mysten/sui/transactions';\n\nexport default {\n  name: \"SuiTransactionPanel\",\n  methods: {\n    sui_getAccount() {\n      this.$emit('generateTransactionParams', '', \"sui_getAccount\")\n    },\n\n    //对单个交易签名（不发送)\n    async sui_signMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signMessage\")\n    },\n\n    async sui_signPersonalMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signPersonalMessage\")\n    },\n\n    sui_signTransaction2() {\n      // 定义要转移的金额和目标地址\n      const amount = 109; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    async sui_requestRpc() {\n      let provider = window.provider;\n      provider.setDefaultChain(\n          `sui:mainnet`,\n          `https://fullnode.mainnet.sui.io:443`\n      );\n      var data = {\n        method: \"suix_getBalance\",\n        params: [\n          \"0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae\",\n          \"0x168da5bf1f48dafc111b0a488fa454aca95e0b5e::usdc::USDC\",\n        ],\n      };\n\n      this.$emit(\"generateTransactionParams\", data, \"sui_testRpc\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 102; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signAndExecuteTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n      this.$emit(\"generateTransactionParams\", input, \"sui_signAndExecuteTransaction\")\n    },\n\n    /// generate txBytes and txSerialize\n    async generateTsBytesAndSerizlize(input) {\n      /// txBytes and txSerialize may be constructed in advance by the dapp side\n      let resultTuple = [\"\", \"\"];\n      if (\n          \"txBytes\" in input &&\n          input.txBytes.length > 0 &&\n          \"txSerialize\" in input &&\n          input.txSerialize.length > 0\n      ) {\n        resultTuple = [input.txBytes, input.txSerialize];\n      }\n\n      /// Otherwise, a transactionBlock parameter is required.\n      if (!(\"transactionBlock\" in input)) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      // if (this.walletAddress != \"connected\") {\n      //   alert(\"请先连接钱包\");\n      //   return new Promise((resolve) => {\n      //     resolve(resultTuple);\n      //   });\n      // }\n\n      let senderAccounts = window.provider.requestAccountsWithNamespace(\"sui\");\n      if (senderAccounts.length == 0) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      try {\n        let rpcUrl = getFullnodeUrl(\"mainnet\");\n        rpcUrl = \"https://www.okx.com/fullnode/sui/discover/rpc\"\n        const suiClient = new SuiClient({ url: rpcUrl });\n\n        /// sender is required\n        input.transactionBlock.setSender(senderAccounts[0]);\n        const result = await input.transactionBlock.build({\n          client: suiClient,\n        });\n        const txBytes = Buffer(result).toString(\"base64\");\n        const txSerialize = await SuiTransaction.from(txBytes).toJSON();\n        resultTuple = [txBytes, txSerialize];\n      } catch (error) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      return new Promise((resolve) => {\n        resolve(resultTuple)\n      })\n    },\n\n    //签名并发送交易\n    sui_signAndExecuteTransaction() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n        \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.testTransaction = JSON.stringify(input);\n      this.currentSuiTransaction = input;\n      this.currentSuiMethod = \"sui_signAndExecuteTransaction\";\n    },\n  },\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_getAccount()\">getAccount(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signMessage()\">signMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signPersonalMessage()\">signPersonalMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signTransaction2()\">signTransaction(Sui)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signAndExecuteTransaction()\">sendTransaction(Sui)</el-button>\n      <div style=\"font-size: 12px; color: gray;\">(send to Rally Tiger account)</div>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_requestRpc()\">RPC_getBalance</el-button>\n      <div style=\"font-size: 12px; color: gray;\">get USDC balance of address:</div>\n      <div style=\"font-size: 12px; color: gray\">0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae</div>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signTransaction_pre_execution()\">signTransaction(prepared data)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signAndExecuteTransaction_pre_execution()\">sendTransaction(prepared data)</el-button>\n    </el-col>\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./SuiTransactionPanel.vue?vue&type=template&id=56a8eddf&scoped=true\"\nimport script from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./SuiTransactionPanel.vue?vue&type=style&index=0&id=56a8eddf&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-56a8eddf\"]])\n\nexport default __exports__","<script>\nimport { OKXStarknetProvider } from \"@okxconnect/universal-provider\";\nimport { CallData, uint256, RpcProvider, Account } from \"starknet\";\n\nexport default {\n  name: \"StarknetTransactionPanel\",\n  methods: {\n    async starknet_signMessage() {\n      this.address = this.getCurrentAddress()\n      if (this.address === \"\") {\n        alert(\"address can't be ''\");\n        return\n      }\n\n      let signData = this.signData\n      this.$emit(\"generateTransactionParams\", JSON.stringify(signData))\n      let provider = new OKXStarknetProvider(window.provider)\n      let res = await provider.signMessage(this.address, signData, \"starknet:mainnet\")\n      if (res.code) {\n        if (res.code == 301) {\n          let msg = \"Wallet address is registering, please try again later!\"\n          alert(msg)\n          this.$emit(\"generateTransactionResult\", msg, \"starknet_signMessage\")\n        }\n        this.$emit(\"generateTransactionResult\", res, \"starknet_signMessage\")\n        return\n      }\n      console.log(res)\n\n      const rpcProvider = new RpcProvider({ nodeUrl: \"https://free-rpc.nethermind.io/mainnet-juno/v0_7\" });\n      let pk = \"0x123\"; /// random pk\n      const account = new Account(rpcProvider, this.address, pk)\n      let that = this\n      account.verifyMessage(signData, res).then(function (isValid) {\n        that.$emit(\"generateTransactionResult\", \"verify:\" + isValid + \"\\n\" + res, \"starknet_signMessage\")\n      }).catch(function (error) {\n        that.$emit(\"generateTransactionResult\", \"failed:\" + error + \"\\n\" + res, \"starknet_signMessage\")\n      })\n    },\n\n    async starknet_sendTransaction() {\n      this.address = this.getCurrentAddress()\n      if (this.address === \"\") {\n        alert(\"address can't be ''\");\n        return\n      }\n\n      let val = uint256.bnToUint256(120000000000000000)\n      const transferCalldata = CallData.compile({\n        to: \"0x00b909cefa36ab6bc26f5887a867e46ef162238f0a171b1c2974b665afd4237f\",\n        value: val\n      })\n\n      // const ETHTokenAddress = \"0x049d36570d4e46f48e99674bd3fcc84644ddd6b96f7c741b1562b82f9e004dc7\"\n      // const STARKTokenAddress = \"0x04718f5a0fc34cc1af16a1cdee98ffb20c31f5cd61d6ab07201858f4287c938d\"\n      const DAITokenAddress = \"0x00da114221cb83fa859dbdb4c44beeaa0bb37c7537ad5ae66fe5e0efd20e6eb3\"\n\n      const invokeParams = {\n        calls: [\n          {\n            contract_address: DAITokenAddress,\n            entry_point: \"transfer\",\n            calldata: transferCalldata\n          }\n        ],\n      }\n\n      this.$emit(\"generateTransactionParams\", JSON.stringify(invokeParams))\n      let provider = new OKXStarknetProvider(window.provider)\n\n      let that = this\n      provider.sendTransaction(this.address, invokeParams, \"starknet:mainnet\").then(function(res){\n        console.log(\"starknet_sendTransaction result \", res)\n        that.$emit(\"generateTransactionResult\", res, \"starknet_sendTransaction\")\n      }).catch(function(error) {\n        if (error.code == 301) {\n          let msg = \"Wallet address is registering, please try again later!\"\n          alert(msg)\n          that.$emit(\"generateTransactionResult\", msg, \"starknet_sendTransaction\")\n        }else {\n          that.$emit(\"generateTransactionResult\", error, \"starknet_sendTransaction\")\n        }\n      });\n    },\n\n    getCurrentAddress() {\n      let provider = new OKXStarknetProvider(window.provider)\n      const address = provider.getAccount(\"starknet:mainnet\")?.address\n      return address\n    },\n\n    getPublicKey() {\n      let provider = new OKXStarknetProvider(window.provider)\n      const account = provider.getAccount(\"starknet:mainnet\")\n      console.log(\"获取到的account是：\")\n      console.log(account)\n      return \"05d8e5e9c1dd686246716c888159271d2f13986cb4acee46164e2c4e034629c0\"\n    }\n  },\n\n  data() {\n    const signData = {\n        \"domain\": {\n          \"chainId\": \"0x534e5f4d41494e\",\n          \"name\": \"STRKFarm\",\n          \"version\": \"1\"\n        },\n        \"message\": {\n          \"document\": \"app.strkfarm.xyz/tnc/v1\",\n          \"message\": \"Read and Agree T&C\"\n        },\n        \"primaryType\": \"Tnc\",\n        \"types\": {\n          \"StarkNetDomain\": [\n            {\n              \"name\": \"name\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"version\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"chainId\",\n              \"type\": \"felt\"\n            }\n          ],\n          \"Tnc\": [\n            {\n              \"name\": \"message\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"document\",\n              \"type\": \"felt\"\n            }\n          ]\n        }\n    }\n\n    return {\n      signData\n    }\n  }\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"starknet_signMessage()\">signMessage</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 验签不成功的话，请尝试连接VPN\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"starknet_sendTransaction(true)\">\n        sendTransaction\n      </el-button>\n\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 发送0.12个DAI到0x00b9...4237f的地址\n        </li>\n        <li>\n          2. 请保证你的钱包有足够的DAI\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./StarknetTransactionPanel.vue?vue&type=template&id=082fda2b&scoped=true\"\nimport script from \"./StarknetTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./StarknetTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./StarknetTransactionPanel.vue?vue&type=style&index=0&id=082fda2b&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-082fda2b\"]])\n\nexport default __exports__","<script>\n\n\nimport {OKXTronProvider} from \"@okxconnect/universal-provider\";\nimport {TronWeb} from \"tronweb\";\n\nexport default {\n  name: \"TronTransactionPanel\",\n  methods: {\n\n    async tron_signMessage() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessage(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n\n      const verify = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), res, provider.getAccount(\"tron:mainnet\").address)\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" + res, \"tron_signMessage\")\n    },\n\n    async tron_signMessageV2() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessageV2(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", res);\n      console.log(\"tron_signMessageV2_base58Address\", base58Address)\n      console.log(\"tron_signMessageV2_address\", provider.getAccount(\"tron:mainnet\").address)\n      const verify = base58Address === provider.getAccount(\"tron:mainnet\").address\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" +  res, \"tron_signMessage\")\n    },\n\n    async tron_signTransaction(isOnlySign) {\n      let provider = new OKXTronProvider(window.provider)\n        let tronWeb = new TronWeb({\n          \"fullHost\": 'https://api.trongrid.io',\n          \"headers\": {},\n          \"privateKey\": ''\n        })\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const transaction = await tronWeb.transactionBuilder.sendTrx(\"TGBcVLMnVtvJzjPWZpPiYBgwwb7th1w3BF\", 1000, address);\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let res = await provider.signTransaction( transaction, \"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", res, \"tron_signTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async getContract() {\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41b4a428ab7092c2f1395f376ce297033b3bb446c1\"\n      \n      try {\n        const contract = await tronWeb.trx.getContract(contractAddress)\n        const abi = contract.abi.entrys;\n        console.log(\"获取到的合约：\")\n        console.log(abi)\n      } catch (error) {\n        console.log(\"Error getting contract ABI:\", error);\n      }\n    },\n    \n    async tron_signAndSendTransactionContract(isOnlySign) {\n      // this.getContract()\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41e95812d8d5b5412d2b9f3a4d5a87ca15c5c51f33\"\n      let provider = new OKXTronProvider(window.provider)\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const parameter = [\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n      ]\n      const ret = await tronWeb.transactionBuilder.triggerSmartContract(contractAddress, \"quote(uint256,uint256,uint256)\", {}, parameter, address);\n      console.log(\"=====>transaction: \")\n      console.log(ret);\n      this.$emit(\"generateTransactionParams\", ret.transaction)\n      if (isOnlySign) {\n        let tx = await provider.signTransaction( ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async tron_signAndSendTransactionApprove(isOnlySign) {\n      let contractAddress = \"41b4a428ab7092c2f1395f376ce297033b3bb446c1\"\n      let provider = new OKXTronProvider(window.provider)\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const parameter = [\n        {type: 'address', value: contractAddress},\n        {type: 'uint256', value: 1000},\n      ]\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      const ret = await tronWeb.transactionBuilder.triggerSmartContract(contractAddress, \"approve(address,uint256)\", {}, parameter, address);\n\n      let transaction = ret.transaction\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let tx = await provider.signTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n\n    }\n\n  }\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessage()\">tron_signMessage</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessageV2()\">tron_signMessageV2</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(true)\">\n        tron_signTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(true)\">\n        tron_signTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(true)\">\n        tron_signTransaction(Approve)\n      </el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(false)\">\n        tron_signAndSendTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(false)\">\n        tron_signAndSendTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(false)\">\n        tron_signAndSendTransaction(approve)\n      </el-button>\n    </el-col>\n\n\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./TronTransactionPanel.vue?vue&type=template&id=55a13ab0&scoped=true\"\nimport script from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./TronTransactionPanel.vue?vue&type=style&index=0&id=55a13ab0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-55a13ab0\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=3516ba58&scoped=true\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=3516ba58&scoped=true&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-3516ba58\"]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport ElementPlus from 'element-plus'\nimport 'element-plus/dist/index.css'\nimport App from './App.vue'\n\nconst app = createApp(App)\n\napp.use(ElementPlus)\napp.mount('#app')","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? function(obj) { return Object.getPrototypeOf(obj); } : function(obj) { return obj.__proto__; };\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(function(key) { def[key] = function() { return value[key]; }; });\n\t}\n\tdef['default'] = function() { return value; };\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkokxconnectdemo\"] = self[\"webpackChunkokxconnectdemo\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(46511); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["Object","defineProperty","exports","value","CONNECT_METHOD_BATCH_FETCHMSG","CONNECT_METHOD_FETCHMSG","CONNECT_METHOD_RECEIVE","CONNECT_METHOD_UNSUB","CONNECT_METHOD_SUB","CONNECT_METHOD_PUBLISH","CONNECT_METHOD_LOGIN","CONNECT_METHOD_PUSH","require","__createBinding","this","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","__setModuleDefault","v","__importStar","mod","result","prototype","hasOwnProperty","call","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","next","e","rejected","done","then","apply","OKXWalletConnector","constants_1","storageconstants_1","storage_1","utils_1","utils_2","eventemitter3_1","log","protocol_1","report_1","WS","resolveWebSocketImplementation","constructor","url","events","EventEmitter","state","ConnectorState","InitState","selectedUrlIndex","retryCount","timeOutLimit","checkWSUrl","Error","heartbeatTimer","connectionTimeoutTimer","connectURLStorage","Storage","OKXCONNECTOR_CACHE_KEY","connecting","Connecting","onPayload","data","logDebug","rsp","Date","now","toString","emit","onClose","event","_a","socket","code","onError","id","payload","msg","onopen","onmessage","onclose","Connected","emitError","errorEvent","heartbeat","clearTimeout","OnError","readyState","WebSocket","OPEN","send","setTimeout","bind","tryRegistOpen","logError","registOpen","inRetry","toUTCString","URLSearchParams","startTimeOutTimer","hasBuiltInWebSocket","onerror","close","on","resetTimeOutTimer","OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE","FINISHED","checkMaxRetry","OKXCONNECTOR_WS_URL_LIST","length","connectionTryNext","nextUrl","getNextSelectUrl","CANCELED","pendingSocket","TIME_OUT","reportEvent","OKXReportType","LOG","cacheSuccessUrlSelect","saveContent","onVisibleChanged","document","visibilityState","arguments","once","err","OKXConnectError","OKX_CONNECT_ERROR_CODES","CONNECTION_ERROR","connect","removeEventListener","addEventListener","disconnect","Disconnected","currentStatus","addListener","decrypt","success","failed","splitCheckComplete","listenPayloadHandler","removeListener","parsedEvent","safeJsonParse","params","rawMsg","message","skipMsg","checkResult","isSplitPackage","finalMessage","failHandler","addPackageParse","callback","payloadHandler","param","listener","off","doLogin","safeJsonStringify","getMsgPayloadFromHistory","tmpMsg","jsonstr","onOpen","openHandler","ConnectionManager","connect_1","commands_1","jwtconstants_1","crypto_1","jwt_1","safejson_1","log_1","url_1","connectionSplitPackages_1","appname","splitManager","ConnectionSplitPackages","connectStorage","OKXCONNECTOR_CACHE_KEY_DAPP","crypto","SessionCrypto","inTMA","isInTMA","reportLog","keyPairInfo","getCachedCryptoKeyPair","jwtKeyPair","getCachedJWTKeyPair","saveJWTKeyPair","connector","OKXCONNECTOR_WS_URL_1","packageId","connectedWalletPK","currentTopic","refreshPackageId","nowDate","saveCryptoKeyPair","keyPair","cacheInfo","encryptStoreMsg","OKXCONNECTOR_CRYPTO_KEY","kp","getAndDecrypt","content","clearCache","strkeyPair","publicKey","toHexString","secretKey","OKXCONNECTOR_JWT_KEY","strKeyPairInfo","hexToByteArray","generateKeyPair","isWalletPKReady","makeJWT","topic","signJWT","OKXCONNECTOR_JWT_SIDE","OKXCONNECTOR_JWT_TTL","parsePackage","input_1","input","ignoreACK","_b","_c","_d","_e","_f","_g","_h","_j","_k","_l","_m","_o","sendACK","getItem","OKXCONNECTOR_TOKEN_CACHE","inputObj","messageId","msgPlayloadObject","tryParseMessageSplitPayload","msgObject","topicId","messageObject","publishedAt","onReceivedPackageCheck","completeMessageIdList","forEach","msgId","sendReceive","restoreConnect","getConnectInfo","generateTopic","info","channelId","clientId","stringifyKeypair","fromRestore","timeLog","getTime","lastConnectId","cachedSenderPublicKey","OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE","jwtToken","timeOne","error","name","timeF","sendFetchAndConsumeMessages","init","sendRaw","timeTh","catch","jsonrpc","CONNECT_JSONRPC_VER","method","token","replace","parsedMessage","updateProtocolVersion","protocolVersion","updateTopicSenderVersion","fail","msgObj","trimStart","startsWith","inputDataObj","msgResult","ttl","OKXCONNECTOR_MESSAGE_TTL","sendEncryptedMsg","topic_1","encryptedMsg_1","encryptedMsg","msg_1","encrypt","sendSplitPackages","msgId_1","success_1","reason","fetchedMessages","hasMore","receivedMsgs","i","timeFive","cleanCache","saveSessionContent","key","OKXCONNECTOR_SESSION_PREFIX_KEY","jsonData","getSessionContent","jsonStr","object","getCurrentConnectionReady","__importDefault","localforage_1","ConnectionSplitSupportedVersionLimit","ConnectionSplitSupportedSizeLimit","ConnectionReceiveKey","ConnectionSendKey","ConnectionTopicVersionKey","side","splitMessageSendArray","Map","splitMessageReceivedArray","splitMessageSenderVersionMap","splitPackageCache","default","createInstance","OKXCONNECTOR_STORAGE_PROTOCOL_CACHE","sendRawMsg","recoverFromCache","size","payloadList","entries","splice","syncCache","messageObj","protocol_version","protocolMessageObject","package_group_id","set","sendMsg","senderVersion","msgLength","msg_parts","msg_part_length","push","slice","groupId","generateGroupId","splitMessagePackages","map","index","total_count","package_index","mergePackageArray","completeMap","inputTopic","itemList","item","messageCache","Array","index_check","Set","add","sort","a","b","messageList","reduce","msgList","messageIdList","msgIdList","join","receivedList","filter","includes","isSending","inputPayloadArray","inputSendArray","filtedArray","accept","sendCacheArray","cachedPayload","sendArray","concat","inputReceiveArray","receiveCacheArray","receiveArray","setItem","rec_array","send_array","CONNECT_PROTOCOL_VER","OKXCONNECTOR_WS_URL_IDX_KEY","OKXCONNECTOR_WS_URL_3","OKXCONNECTOR_WS_URL_2","EVENT_EMITTER_MAX_LISTENERS","OKXCONNECTOR_PROTOCOL_VERSION","Engine","iconnector_1","connectionManager_1","sessionUtils_1","wallet_info_1","appName","connectors","useConnector","connectionManager","addConnectionListener","getConnector","setAccountChangeListener","accountChangeListener","registerConnector","setConnectionManager","hasWsConnector","isWsConnector","getTag","OKX_TG_WALLET","OKX_APP_WALLET","isInjectedConnector","OKX_INJECT_WALLET","universalConnect","request","sessionConfig","connectInfoAndUrl","JSON","stringify","universalRequest","connectInfo","requestId","openUniversalLink","openUniversalUrl","universalConnectRequest","protocolVer","Number","tonConnectSdkVersion","dAppInfo","dappInfo","requests","redirect","base64Encoded","encodeConnectParams","openOKXLink","getOKXLink","useMini","tmaReturnUrl","openMethod","openWallet","connectRequest","openOKXTMAWalletlinkWithFallback","useShortLink","openOKXUniversalLink","openOKXDeeplinkWithFallback","isIOS","isIos","addOnConnectResultListener","response","connectResponse","namespaces","buildNameSpacesByConnectResponse","UNKNOWN_ERROR","walletName","responses","wallet","tag","OKXWalletName","OKXMiniWalletName","OKXInjectWalletName","find","session","assign","methodsResponse","connectRequestMethods","signResponse","maxProtocolVersion","setUseConnector","sendSession","connectResultListener","setOnConnectResultListener","engineConnectInfo","requestAnswer","clearData","addDisconnectListener","disconnecter","getTagByappName","setConnectConnector","setSessionConnectingListener","sessionConnectingListener","restoreconnect","sessionInfo","onConnectResult","restoreconnectFromTopic","namespaceKeys","connectManagerDisconnect","jsonResponse","WalletConnectionManager","walletConnectionManager_1","engine_1","MULTICODEC_ED25519_LENGTH","MULTICODEC_ED25519_HEADER","MULTICODEC_ED25519_BASE","MULTICODEC_ED25519_ENCODING","DID_METHOD","DID_PREFIX","DID_DELIMITER","KEY_PAIR_SEED_LENGTH","DATA_ENCODING","JSON_ENCODING","JWT_ENCODING","JWT_DELIMITER","JWT_IRIDIUM_TYP","JWT_IRIDIUM_ALG","JWTHeaderType","decodeJSON","encodeJSON","encodeIss","decodeIss","encodeSig","decodeSig","encodeData","decodeData","encodeJWT","decodeJWT","verifyJWT","ed25519","tweetnacl_1","stringUtils_1","sign","str","okxtoString","okxfromString","val","publicKeyStr","issuer","prefix","multicodec","split","bytes","encoded","header","signature","jwt","sub_1","aud_1","ttl_1","keyPair_1","sub","aud","iat","Math","floor","alg","typ","iss","exp","act","detached","verify","OKXCONNECTOR_JWT_WALLET_SIDE","buildRequestAccountNameSpacesByConnectResponse","buildAccountNameSpaces","requestAccountNameSpaces","universalResponse","accounts","filterAccount","namespace","ton_addr","address","tonAddress","tonProof","network","ton_proof","addresses","methods","extra","chains","addressItem","addressArr","chain","utils_3","crypto_js_1","subKey","beforeKey","localStorage","resolveLocalStorage","checkAndUpgradeCache","storeKey","cipherIV","cacheStr","cacheKey","cache","cacheObj","fromCacheKey","toCacheKey","removeItem","timestamp","saveItem","localKey","totalCacheStr","getCachedPBKDF2InfoKey","pwLen","saltLen","pw","iv","salt","OKXCONNECTOR_STORAGER_CRYPTO_SALT","randomBytes","OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD","OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV","ivBuffer","PBKDF2","iterations","storeInfo","AES","enc","Utf8","OKXCONNECTOR_STORAGE_CIPHER_METHOD","OKXCONNECTOR_TON_KEY","WalletConnectionManagerEvent","WalletConnectionManagerTopicInfoCacheKey","RECEIVE_REQUEST","walletConnectionConstants_1","communicateEvents","sessionCryptoInfoMap","inLogin","isLogined","offset","isTopicPublicKeyExist","timestampStr","parseInternalMsg","internalMsg","internalObj","origin","originContent","base64decode","updateClientId","cid","lastCheck","getLastSixMd5Hash","dappPublicKey","syncCacheSessionInfo","_p","_q","_r","_s","ignoreReceive","isInternalData","inner_message","inner_topic","decryptWallet","sessionInfoString","base64Content","inner_connection","toObject","recovrySessionInfoFromCache","cacheMap","topicItem","cryptoItem","cryptoKeyPair","cacheSessionInfo","sync","duplicatedTopics","delete","appendTopic","sessionPublicKey","subscribeTopics","from","confirmAppendingTopics","keys","getSessionPublicKey","getCurrentCachedTopicIdList","needPublicKey","useRaw","connectedDappPK","cryptoObject","useCrypto","encryptWallet","messageStr","sendUnsubscribe","sendBatchFetchAndConsumeMessages","topicIdList","topics","withInternalData","finishCount","idx","AppwalletConnector","ws_connector_1","WsConnector","super","walletNameKey","shortUniversalLink","appConnectEncodeParams","appDeepLink","getAppWalletDeepLink","isOS","openDeeplinkWithFallback","stackDeepLink","openLinkBlank","standardUniversalLink","OkxwalletInjectConnector","TgwalletConnector","InjectConnector","appwallet_connector_1","inject_connector_1","tgwallet_connector_1","okxwallet_inject_connector_1","SolProvider_1","AptosProvider_1","media_1","TONProvider_1","inject_1","sui_provider_1","btc_provider_1","disconnectListener","providerMap","accountChangedEVMHandler","accountChangedSolanaPublicKeyHandler","accountChangedTONHandler","disconnectHandler","enable","NameSpaceKeyEip155","Eip155Provider","NameSpaceKeySOL","SolProvider","NameSpaceKeyAptos","AptosProvider","NameSpaceKeyTON","TONProvider","NameSpaceKeySui","SuiProvider","NameSpaceKeyBtc","BtcProvider","getInjectProvider","nameSpace","mapKey","BAD_REQUEST_ERROR","window","okxwallet","requestAccounts","version","getVersion","platform","navigator","appVersion","responseItem","required","requiredNamespaces","optional","optionalNamespaces","needPop","signalChain","isDevice","singleItem","singleProvider","singleConnectResult","singleConnect","getAccountByRequestWallets","console","getRequestId","newRequest","onAck","checkWalletMatch","injectProvider","chainId","USER_REJECTS_ERROR","errorResponse","CHAIN_NOT_SUPPORTED","sessionLocal","WALLET_NOT_SUPPORTED","checkAccountChanged","getRequireNameSpaceFromSession","resultNameSpace","compareAndModifyNamespaces","nameSpaces1","nameSpaces2","isAccountsSame","ns1","ns2","areAccountsSame","_","allReady","every","namespaceKey","connectReady","toJSON","namespacesKey","connectWalletNameSpace","aptosChains","chainStr","aptosChain","replaceAptosChainName","ton_proof_result_Item","proofItem","proof","allEqual","accountsItem","sessionAccounts","areEqual","aptosAdd","isAccountChange","walletInfo","accountResult","walletInfoItem","connectWallet","requestWallets","allNameSpace","eventkey","walletInfoFirst","hasTON","provider","itemResult","parseConnectResponse","cheeckRequire","requireItem","resultSel","resultItem","hasChainAdd","addItem","configEventWithKey","solana","sui","okxTonWallet","tonconnect","encodeTGParams","encodeTWAConnectURLParams","tgUrl","getTelegramWalletTWAUrl","pendingRequests","getDefaultReporter","beginReport","handleResponse","bindRequestForPromise","clear","nonceLength","sessionKeyPair","createKeypairFromString","createKeypair","box","createNonce","receiverPublicKey","encodedMessage","TextEncoder","encode","nonce","encrypted","concatInfo","concatUint8Arrays","hexResult","encodedResult","base64encode","senderPublicKey","messageByteArray","toUint8Array","internalMessage","splitToUint8Arrays","decrypted","open","TextDecoder","decode","__exportStar","p","hasOKXInjectedProvider","getWindowProviderNamespace","providerSearch","property","path","_provider","BtcMethods","SuiMethods","TONMethods","AptosMethods","SOLANAMethods","Eip55Methods","InjectUtils_1","injectParams","aptos","signMessage","signTransaction","signAndSubmitTransaction","hash","METHOD_NOT_SUPPORTED","accountChange","connectRequestWalletResponse","connectChain","selectedAddress","coinType","namespaceChainId","nameSpaceResponse","bs58_1","signedMessage","bufferResult","injectResult","allResult","signAllTransactions","signAndSendResult","signAndSendTransaction","signalChainConnectResult","tonParams","resultMe","getChainId","tonResult","tonItem","manifestUrl","itmes","items","needProof","restoreConnection","getOKXWallet","BTC_CHAINS","MAINNET","bitcoin","FRACTAL","fractalBitcoin","findAddress","matchCoin","processChain","compressedPublicKey","promises","all","signStr","type","to","satBytes","psbtHexs","options","signatures","signPsbts","psbtHex","signedPsbt","signPsbt","pushPsbt","inscriptionId","sendInscription","ticker","amount","inscribeTransfer","itemNameSpace","ethParams","typedDataJson","switchChainId","parseInt","resultSwitch","chainHex","currentChain","getSuiPublicKey","suiAccount","suiPublicKey","getSuiWallet","originalRarams","injectSignResult","features","signTransactionBlock","injectSendResult","signAndExecuteTransactionBlock","digest","injectPersonalResult","signPersonalMessage","TON_CHAINS","COSMOS_CHAINS","APTOS_CHAINS","SUI_CHAINS","SOLANA_CHAINS","TESTNET","SONIC_TESTNET","COSMOS_MAINNET","IEngine","ISignClient","ISignClientEvents","IEngineEvents","client","creatOKXInjectWalletInfo","creatOKXMiniAppWalletInfo","creatOKXWalletInfo","getBigIntRpcId","formatJsonRpcRequest","isJsonRpcError","isJsonRpcResponse","parseConnectionError","isHttpUrl","formatJsonRpcError","json_rpc_1","isJsonRpcPayload","isJsonRpcRequest","isJsonRpcResult","payloadId","formatJsonRpcResult","isReservedErrorCode","getError","getErrorByCode","formatErrorMessage","isWsUrl","okx_connect_error_1","IncrementalRandomGenerator","bits","Uint8Array","Uint16Array","Uint32Array","initialValue","getNextValue","uint8Generator","uint16Generator","date","BigInt","RESERVED_ERROR_CODES","STANDARD_ERROR_MAP","DEFAULT_ERROR","match","values","INTERNAL_ERROR","SERVER_ERROR","getUrlProtocol","matches","RegExp","matchRegexProtocol","regex","protocol","test","CONNECT_ITEM_ERROR_CODES","TONCHAIN","connect_wallet_1","connect_event_1","getTestTwaUrl","okxTesttwaUrl","getTestTgTwaUrl","okxTestTgtwaUrl","getBotNameAndAppName","urlObj","URL","pathnameParts","pathname","Boolean","botName","OKX_MINI_WALLET_NAME","OKX_APP_WALLET_NAME","tgwalletAppName","tgwalletName","standardDeeplink","downloadUrl","okxDeeplink","location","hostname","SERVER_ERROR_CODE_RANGE","INVALID_PARAMS","METHOD_NOT_FOUND","INVALID_REQUEST","PARSE_ERROR","getDefaultMessageByCode","setPrototypeOf","ALREADY_CONNECTED_ERROR","NOT_CONNECTED_ERROR","UNKNOWN_APP_ERROR","USER_REJECTS_ERROR_CAUSE_REGISTER","NameSpaceKeyStarknet","NameSpaceKeyTron","NameSpaceKeyCosmos","misc_1","chains_1","callForSuccess","fn","attempts","delayMs","lastError","delay","timeout","signal","aborted","timeoutId","checkMetaData","versionCompare","isBrowser","isMobileUserAgent","openLink","toSafeBase64FromBase64","isValidObject","getAppWalletShortDeepLink","encodeTelegramUrlParameters","isTelegramUrl","openOKXDeeplink","getUniversalLink","logWarning","call_for_success_1","web_api_1","tma_api_1","request_1","debug","forceReport","defaultReporter","OKXReporter","packageJson","args","okxLogDebug","sendRecordContent","warn","action","content_1","mediaNotTouch","mediaTouch","maxWidth","media","mediaMin","mediaMax","mediaMinMax","device","getWindow","isTmaPlatform","width","innerWidth","tablet","mobile","isMobile","isTelegram","TelegramWebviewProxy","maxTouchPoints","px","pxMin","pxMax","OKXReportSide","versionStr","cross_fetch_1","reportApiList","reportCacheKey","reportUUIDKey","MAX_LIMIT_REPORTCOUNT","DEFAULT_HTTP_HEADERS","Accept","DEFAULT_HTTP_METHOD","DEFAULT_FETCH_OPTS","headers","PAGE_IN","PAGE_OUT","CLICK","DAPP","WALLET","fetchListWithTimeout","urls_1","args_1","urls","controller","AbortController","fetchPromise","timeoutPromise","abort","race","ok","status","currentSide","currentVersion","storage","recordList","currentUUID","configVersionAndSide","recordCacheKey","reportPlatform","startErrorCatching","records","uuid","sendCachedRecords","cachedErrors","sendRecord","record","body","res","language","ua","userAgent","reportItem","lang","markRecordItem","sendList","allSettled","results","keepIndex","markRecord","Report_WalletType_Key","Report_Proceed_QRCode_Click","Report_ChooseType_Download_Click","Report_ChooseType_ConnectWallet_Click","Report_Proceed_Retry_Click","Report_ChooseType_ConnectWallet_View","Report_Loading_ConnectWallet_View","Report_Proceed_QRCode_View","Report_Proceed_Proceed_View","dappMetaData","icon","JSONStringify","JSONParse","json","numbersBiggerThanMaxInt","serializedData","group","parse","isCustomFormatBigInt","substring","alloc","allocUnsafe","basics_1","string","encoding","base","BASES","decoder","array","encoder","createCodec","buf","ascii","bufNum","String","fromCharCode","charCodeAt","utf8","hex","bases","base16","latin1","binary","inTg","isInTelegramBrowser","sendExpand","sendOpenTelegramLink","initParams","locationHash","urlParseHashParams","tmaPlatform","tgWebAppPlatform","Telegram","WebApp","webAppVersion","tgWebAppVersion","platforms","isTelegramWebview","TelegramWebview","postEvent","link","fallback","pathFull","search","isIframe","versionAtLeast","path_full","parent","eventType","eventData","external","notify","trustedTarget","postMessage","indexOf","_path","urlSafeDecode","qIndex","pathParam","substr","query_params","urlParseQueryString","urlencoded","decodeURIComponent","queryString","paramName","paramValue","queryStringParams","v1","v2","p1","p2","v1List","v2List","max","ver","removeUrlLastSlash","addPathToUrl","constants_2","deeplinkUrl","useStandardUniversalLink","deeplinkEncodeUrl","encodeURIComponent","fullUrl","newWindow","href","deepLinkOpened","timeoutDuration","fallbackToDownloadPage","parameters","encodedParameters","connectRequestWithVersion","connectRequestStr","utf8Array","btoa","connectParam","redirectStr","okxconnect","extraparams","fromtg","base64ContentStr","urlSafeBase64","twaDeepLink","openTelegramLink","RANDOM_LENGTH","hasLocalStorage","hashKey","generateRandomBytes32","tweetnacl_util_1","to_string_1","sha256_1","BASE16","hexString","byteArray","byte","buffer1","buffer2","mergedArray","subArray1","subArray2","encodeUint8Array","urlSafe","encodeBase64","decodeToUint8Array","decodeBase64","uint8Array","decodeUTF8","decodedUint8Array","encodeUTF8","scheme","global","self","randomBytes32","obj","getPrototypeOf","isIOSDevice","MSStream","isIPadOS","MD5","base64","newChain","getUserAgent","ua_parser_js_1","target","doFallback","fallbackTimeout","check","vendor","opera","getResult","osName","os","toLowerCase","deviceModel","model","browserName","browser","OKXBtcProvider","_1","core_1","caip","getAddressForChainId","ns","checkChainId","account","getAccount","ret","errorData","sendBitcoin","toAddress","satoshis","feeRate","txhash","checkParameters","psbtResults","signAndPushPsbt","extension","coinId","protocolId","atomicSuffix","ordinalsSuffix","endsWith","removeSuffix","scenario","txType","batchBean","coinAmount","nftId","sendRunes","runeid","fromAddress","suffix","unexistKeys","OKXCosmosProvider","accountArray","algo","bech32Address","pubKey","hexToUint8Array","signArbitrary","signerAddress","signDoc","chain_id","account_number","sequence","fee","gas","msgs","memo","signData","signAmino","signOptions","resData","signed","signDirect","bodyBytes","bufferToHex","authInfoBytes","accountNumber","messageToBuffer","buffer","arr","output","x","padStart","arrayBuffer","byteValue","isNaN","OKXStarknetProvider","STARKNET_CHAIN_ID","getChain","typedData","sendTransaction","transaction","transactionData","transaction_hash","signMessageDeclareContractPayload","sendMessageExecuteTransactionDetail","calls","abis","transactionsDetail","transactions","isArray","executionRequest","OKXTonProvider","statusChangeSubscriptions","statusChangeErrorSubscriptions","tonWallet","errorsHandler","connected","tonNameSpace","walletStateInit","sessionWallet","tonDeviceInfo","connectItems","onStatusChange","requestAccountsWithNamespace","requestParams","OKXTronProvider","TRON_CHAIN_ID","stringToHex","signMessageV2","signedTx","realSignTx","visible","txID","rawData","contract","raw_data","expiration","ref_block_bytes","fee_limit","ref_block_hash","raw_data_hex","OKXUniversalProvider","eip155_1","sui_1","client_1","namespaces_1","solana_1","btc_1","aptos_1","ton_1","cosmos_1","tron_1","packages_1","provider_1","starknet_1","opts","setGlobal","okxConnectUniversalinwindow","initialize","providerOpts","rpcProviders","requestParam","buildRequestParamFromRequest","getProvider","validateChain","keyArr","connectOpts","called","onRequestSent","disconnectAndEmit","cleanup","engine","aptosChainNameToGeneralId","replaceAptos","aptosNameSpace","realNS","replaceAptosInner","optionAptosNameSpace","realOptionNS","defaultChain","replaceAptosGeneralIdWithNetName","replaceSessionAptos","disconnectInner","connectAndSign","signRequest","updatedOpts","setNamespaces","onConnect","requestItem","signResponseList","okxConnectUniversalUIinwindow","creatNotSupportMethodItemReplay","syncAllAddresses","syncAddressAvailable","syncAllAddress","setDefaultChain","rpcUrl","checkStorage","sessionInfoStr","getFromStore","createProviders","registerEventListeners","SignClient","providersToCreate","parseNamespaceKey","namespacesValue","currentNameSpace","opts1","solanaProvider","sonicProvider","svmProvider","optsTon","tonProvider","optsSui","suiProvider","optsBtc","btcProvider","fbProvider","aptosProvider","moveProvider","cosmosProvider","tronProvider","starknetProvider","PROVIDER_EVENTS","DEFAULT_CHAIN_CHANGED","caip2ChainId","onChainChanged","UPDATE_NAMESPACES","nameSpaces","nameSpacekey","persist","isChainNamespaceInSession","chainsArr","defaultNamespace","getDefaultChain","namespaceStr","requestDefaultChainWithNamespace","caip2Chain","sessionProperties","showRequestModal","listenerCount","OKXUniversalProvider_1","OKXBtcProvider_1","OKXCosmosProvider_1","OKXTonProvider_1","OKXTronProvider_1","OKXStarknetProvider_1","ConnectMethodUtils_1","metaData","requestAccountItem","nameSpaceToConnectWalletNameSpace","SESSION_CONNECTING","connectMethodsToConnectWalletMethods","metadata","fillParamsToSession","connectMethodsResponseUpdate","openOKXWallet","allAddressStr","syncResoonseToRequire","connectSupportMethods","connectMethodsAdaptOldVersion","isRecord","notSupportError","errorItem","callBackParams","solAccount","account1","solAddress","fromAccountToAddress","realMessage","encodeMessage","suiMessage","convertedArray","b64encoded","atob","btcAccounts","account2","btcAccount","btcAddress","paramData","aptosAccount","account3","aptosAddress","fullMessage","application","aptosChainId","cosmosAccount","account_cosmos","cosmosAddress","cosmosData","cosmosBase64Encoded","methodItem","solanaSuccessData","suiMethod","requestMethod","suiMessageb64","aptosSignature","requireNameSpace","includeEip155","some","space","syncAddressHostAvailable","includeChain","paramsArr","firstParam","firstObj","aptosParams","currentURL","signChainId","applicationUrl","cosmosChain","responseAddressStr","allAddress","isEvm","deriveName","addr","ci","evmAddress","freeze","getAccountsChains","isCaipNamespace","mergeRpcMap","targetRpcMap","sourceRpcMap","mergeNamespaces","source","rpcMap","fixMobileBtcSession","btcNameSpace","addressType","GENERIC_SUBPROVIDER_NAME","RPC_URL","STORAGE","CONTEXT","WC_VERSION","PROTOCOL","RELAY_URL","LOGGER","JsonRpcConnection_1","JsonRpcProvider_1","httpProviders","createHttpProviders","updateNamespace","getAccounts","setHttpProvider","http","parsedChainId","parsedRpc","getRpcUrl","httpProvider","createHttpProvider","getHttpProvider","rpc","JsonRpcProvider","JsonRpcConnection","getGlobal","CosmosProvider","updateRequestParams","isDic","decimalNumber","selectedChainId","chainNum","paramsChainId","paramsChainString","adaptArray","addressObj","isEqual","chainAddress","messages","secondObj","hexChainId","getHexChainIdFromRequest","isChainApproved","configAddressAdaptInjectWallet","handleSwitchChain","addEthereumChain","resultData","rpcUrls","eip155","core_2","disableProviderPing","isAvailable","registering","register","parseError","types_1","IJSONRpcProvider","connection","hasRegisteredEventListeners","setConnection","context","requestStrict","_error","SolanaProvider","getPubkey","getWalletAddress","components","StarknetProvider","__rest","s","t","getOwnPropertySymbols","propertyIsEnumerable","validUntil","newParams","boc","TronProvider","IJSONRpcConnection","opt","globals","convertChainIdToNumber","parseChainId","mergeArrays","projectId","reference","CAIP_DELIMITER","okxGlobal","_createElementBlock","_hoisted_1","_createVNode","_component_el_container","_withCtx","_component_el_header","_cache","_createTextVNode","_component_el_main","_component_el_card","class","_createElementVNode","style","_component_el_row","_component_el_col","span","_toDisplayString","$options","_ctx","_component_el_checkbox","modelValue","withUI","$event","onChange","handleWithUI","universalToTG","handleUniversalToTG","_component_el_select","modals","placeholder","handleModalsSelect","multiple","_component_el_option","label","returnStrategy","handleReturnStrategySelect","_Fragment","_renderList","returnStrategies","strategy","_createBlock","_component_el_input","deeplink","handleReturnStrategyDeeplink","disabled","_createCommentVNode","handleLanguageSelect","locales","locale","theme","handleThemeSelect","THEME","LIGHT","DARK","selectedMethod","handleConnectMethodsSelect","connectMethods","tonProofValue","gutter","align","availableChains","checked","areChainsInit","isOptionalChecked","handleOptionChange","_component_el_button","onClick","initBtnClicked","connectInitStr","testTonConnect","connectTonStr","connectBtnClicked","connectStatusStr","syncAllAddressClick","syncAllAddressStr","disconnectAction","walletAddress","disconnectStatusStr","_Teleport","showModal","closeModal","_withModifiers","_component_qrcode_vue","qrValue","level","_component_el_tabs","activeTab","onTabClick","clickActiveTab","_component_el_tab_pane","eth_requestAccounts","eth_chainId","wallet_switchEthereumChain","wallet_addEthereumChain","personal_sign","eth_signTypedData_v4","eth_sendTransaction_transfer","eth_sendTransaction_approve","eth_sendTransaction_mint","wallet_watchAsset","oversized_personal_sign","ton_getAccount","ton_sendTransaction","sol_signMessage","sol_signTransaction","sol_signVersionedTransaction","sol_signAllTransactions","sol_signAllVersionedTransactions","sol_signAndSendTransaction","sol_signAndSendVersionedTransaction","_component_SuiPanel","onGenerateTransactionParams","sui_generateTransactionParams","_component_BTCPanel","btc_generateTransactionParams","_component_FractalPanel","fractal_generateTransactionParams","_component_TronTransactionPanel","tron_generateTransactionParams","onGenerateTransactionResult","tron_getTransactionResult","aptos_signMessage","aptos_signTransaction","aptos_signAndSubmitTransaction","cosmos_signArbitrary","cosmos_signAmino","cosmos_signDirect","Polygon_RPCRequest","eth_sendTransaction_swap","move_signTransaction","move_signAndSubmitTransaction","_component_StarknetPanel","ref","starknet_generateTransactionParams","starknet_getTransactionResult","testBase64UrlSafe","xs","sm","handleRedirectSelect","canChainAddRedirectParam","redirectDeeplink","handleRedirectDeeplink","addRedirectParam","testTransaction","rows","testboc","$setup","sendBtnDisabled","testTransactionStr","btc_getAccount","btc_signMessage","sendAmount","clearable","btc_send","sendSatoshisAmount","btc_sendBitcoin","btc_signPsbt_up","btc_signAndPushPsbt_up","receiver","btc_sendInscription","runsAddress","runsId","runsAmount","btc_sendRunes","intTicker","intAmount","btc_inscribeTransfer","props","setup","$emit","alert","autoFinalized","__exports__","fractal_getAccount","fractal_signMessage","fractal_send","fractal_sendBitcoin","fractal_signPsbt_up","fractal_signAndPushPsbt_up","fractal_sendInscription","fractal_sendRunes","fractal_inscribeTransfer","sui_getAccount","sui_signMessage","sui_signPersonalMessage","sui_signTransaction2","sui_signAndExecuteTransaction","sui_requestRpc","sui_signTransaction_pre_execution","sui_signAndExecuteTransaction_pre_execution","recipientAddress","tx","SuiTransaction","coin","splitCoins","transferObjects","transactionBlock","showEffects","txBytes","txSerialize","generateTsBytesAndSerizlize","resultTuple","senderAccounts","getFullnodeUrl","suiClient","SuiClient","setSender","build","Buffer","currentSuiTransaction","currentSuiMethod","starknet_signMessage","starknet_sendTransaction","getCurrentAddress","rpcProvider","RpcProvider","nodeUrl","pk","Account","that","verifyMessage","isValid","uint256","bnToUint256","transferCalldata","CallData","compile","DAITokenAddress","invokeParams","contract_address","entry_point","calldata","getPublicKey","tron_signMessage","tron_signMessageV2","tron_signTransaction","tron_signAndSendTransactionContract","tron_signAndSendTransactionApprove","tronWeb","TronWeb","trx","base58Address","verifyMessageV2","isOnlySign","transactionBuilder","sendTrx","getContract","contractAddress","abi","entrys","parameter","triggerSmartContract","verifyADR36Amino","fromBech32","VConsole","allChains","chainsThatCanAddRedirectParam","optionChains","selectedModals","selectedReturnStrategy","selectedDeepLink","selectedLanguage","selectedTheme","TronTransactionPanel","QrcodeVue","BTCPanel","FractalPanel","SuiPanel","StarknetPanel","testTopic","testPublicKey","testProofPayload","pendingDeepLink","logList","localPubKey","localSecKey","selectedChain","ProofPayloadVerify","showVerifyRow","has","selectedMethodData","isChecked","reload","starknetPanelTypedData","computed","selectedChains","initChains","newChains","updatedChains","tab","tabName","testTon","openModal","initCall","OKXTonConnectUI","actionsConfiguration","uiPreferences","OKXUniversalConnectUI","onModalStateChange","uri","isPC","testTonSdk","blockExplorerUrls","chainName","nativeCurrency","symbol","decimals","requestEVMAccountWithSession","evmNameSpace","dataETH","dataPolygon","types","EIP712Domain","Person","Mail","primaryType","domain","verifyingContract","contents","maxPriorityFeePerGas","maxFeePerGas","gasPrice","gasLimit","image","tonUniversalLog","sendTransactionAlert","fetch","confirm","sendData","adapter","SuiAdapter","suiResult","signAndExecuteTransaction","sui_verifySignature","btcAdapter","btcResult","currentBtcMethod","currentBtcTransaction","hexToBase64","bs64Str","fractalResult","currentFractalMethod","currentFractalTransaction","hexStr","blob","Blob","reader","FileReader","onload","base64Data","readAsDataURL","datatest","firstStr","showUrl","hasEip155","hasSolana","hasSui","hasBtc","hasAptos","hasTon","hasCosmos","hasTron","hasStarknet","nameSpacesChains","optSpaceChains","solanaChains","hasPolygon","suiChains","btcChains","connectMethod","connectData","requireData","cosmos","tron","starknet","ton","btc","optData","eip155Chains","tonChains","signMethods","getCurrentSelectedMethodData","openModalAndSign","methodList","suiData","currentMethod","accountAddress","userAgentInfo","Agents","flag","isSafariOrChrome","pubkey","OKXSolanaProvider","uint8Array1","result1","nacl","PublicKey","toBytes","OKXAptosProvider","config","AptosConfig","Network","Aptos","simple","sender","function","typeArguments","functionArguments","Connection","getSolConnect","blockhash","getLatestBlockhash","versionedTransactionMessage","TransactionMessage","payerKey","recentBlockhash","instructions","SystemProgram","transfer","fromPubkey","toPubkey","lamports","compileToV0Message","VersionedTransaction","Transaction","feePayer","cosmos_verifySignArbitrary","pub_key","signer","prefixStr","signatureBuffer","uint8Signature","pubKeyValueBuffer","pubKeyUint8Array","uiOptions","eth_verifyMessage","ethAddress","originalMessage","recoveredAddress","ethers","list","verifyList","requestItme","ethMessage","solanaMessage","verifySol","aptosMessage","aptosPublicKey","cosmosMessage","tronMessage","StarknetRpcProvider","StarknetAccount","signatureResult","resultObj","verifyPersonalMessageSignature","toSuiAddress","toBase64","newTransaction","c","created","mounted","scriptTag","createElement","src","getElementsByTagName","appendChild","title","$refs","starknetPanelRef","toRaw","render","app","createApp","App","use","ElementPlus","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","loaded","__webpack_modules__","amdO","deferred","O","chunkIds","priority","notFulfilled","Infinity","j","r","n","getter","d","leafPrototypes","getProto","__proto__","mode","def","current","getOwnPropertyNames","definition","g","globalThis","Function","prop","Symbol","toStringTag","nmd","paths","children","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}