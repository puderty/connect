{"version":3,"file":"js/app.3121fae2.js","mappings":"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","sources":["webpack://okxconnectdemo/../packages/core/src/connect/WSEngine.js","webpack://okxconnectdemo/../packages/core/src/connect/commands.js","webpack://okxconnectdemo/../packages/core/src/connect/connect.js","webpack://okxconnectdemo/../packages/core/src/connect/connectionManager.js","webpack://okxconnectdemo/../packages/core/src/connect/constants.js","webpack://okxconnectdemo/../packages/core/src/connect/engine.js","webpack://okxconnectdemo/../packages/core/src/connect/index.js","webpack://okxconnectdemo/../packages/core/src/connect/jwt.js","webpack://okxconnectdemo/../packages/core/src/connect/jwtconstants.js","webpack://okxconnectdemo/../packages/core/src/connect/sessionUtils.js","webpack://okxconnectdemo/../packages/core/src/connect/storage.js","webpack://okxconnectdemo/../packages/core/src/connect/storageconstants.js","webpack://okxconnectdemo/../packages/core/src/connect/walletConnectionConstants.js","webpack://okxconnectdemo/../packages/core/src/connect/walletConnectionManager.js","webpack://okxconnectdemo/../packages/core/src/crypto/crypto.js","webpack://okxconnectdemo/../packages/core/src/index.js","webpack://okxconnectdemo/../packages/core/src/inject/InjectEngine.js","webpack://okxconnectdemo/../packages/core/src/inject/InjectUtils.js","webpack://okxconnectdemo/../packages/core/src/inject/index.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/eip155Provider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/engine.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/json-rpc.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/connect-event.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/connect-wallet.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/wallet-info.js","webpack://okxconnectdemo/../packages/core/src/protocol/constants.js","webpack://okxconnectdemo/../packages/core/src/protocol/error/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/error/okx-connect.error.js","webpack://okxconnectdemo/../packages/core/src/protocol/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/misc.js","webpack://okxconnectdemo/../packages/core/src/utils/call-for-success.js","webpack://okxconnectdemo/../packages/core/src/utils/index.js","webpack://okxconnectdemo/../packages/core/src/utils/log.js","webpack://okxconnectdemo/../packages/core/src/utils/report.js","webpack://okxconnectdemo/../packages/core/src/utils/reportconstants.js","webpack://okxconnectdemo/../packages/core/src/utils/safejson.js","webpack://okxconnectdemo/../packages/core/src/utils/stringUtils.js","webpack://okxconnectdemo/../packages/core/src/utils/tma-api.js","webpack://okxconnectdemo/../packages/core/src/utils/url.js","webpack://okxconnectdemo/../packages/core/src/utils/utils.js","webpack://okxconnectdemo/../packages/core/src/utils/web-api.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXBtcProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXCosmosProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXTonProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXTronProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXUniversalProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/sign-client/client.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/ConnectMethodUtils.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/namespaces.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/events.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/values.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/aptos.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/btc.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/cosmos.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/eip155.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcConnection.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/solana.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/sui.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/ton.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/tron.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/misc.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/providers.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/globals.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/misc.js","webpack://okxconnectdemo/./src/App.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue?1b44","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue?e4fb","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue?aa83","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue?089a","webpack://okxconnectdemo/./src/App.vue?7ccd","webpack://okxconnectdemo/./src/main.js","webpack://okxconnectdemo/webpack/bootstrap","webpack://okxconnectdemo/webpack/runtime/amd options","webpack://okxconnectdemo/webpack/runtime/chunk loaded","webpack://okxconnectdemo/webpack/runtime/compat get default export","webpack://okxconnectdemo/webpack/runtime/define property getters","webpack://okxconnectdemo/webpack/runtime/global","webpack://okxconnectdemo/webpack/runtime/hasOwnProperty shorthand","webpack://okxconnectdemo/webpack/runtime/make namespace object","webpack://okxconnectdemo/webpack/runtime/node module decorator","webpack://okxconnectdemo/webpack/runtime/jsonp chunk loading","webpack://okxconnectdemo/webpack/startup"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WSEngine = void 0;\nconst connectionManager_1 = require(\"./connectionManager\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log_1 = require(\"../utils/log\");\nconst protocol_1 = require(\"../protocol\");\nconst utils_1 = require(\"../utils\");\nconst sessionUtils_1 = require(\"./sessionUtils\");\nconst url_1 = require(\"../utils/url\");\nclass WSEngine {\n    constructor(appName, pendingRequest) {\n        this.disconnectListener = [];\n        this.pendingRequests = pendingRequest;\n        this.connectionManager = new connectionManager_1.ConnectionManager(appName);\n        // report api begin\n        (0, log_1.getDefaultReporter)().beginReport();\n        this.connectionManager.addListener(\"sdk_response\", (event, msg) => {\n            var jsonResponse = (0, safejson_1.safeJsonParse)(msg);\n            (0, log_1.logDebug)(`Engine ==>> addListener ==> success ==> ${jsonResponse}`);\n            this.handleResponse(event, jsonResponse);\n        }, function () {\n        });\n    }\n    setSessionConnectingListener(sessionConnectingListener) {\n        this.sessionConnectingListener = sessionConnectingListener;\n    }\n    addDisconnectListener(disconnecter) {\n        this.disconnectListener.push(disconnecter);\n    }\n    disconnect() {\n        this.pendingRequests.clear();\n    }\n    connectManagerDisconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            yield this.connectionManager.disconnect(fromRestore);\n        });\n    }\n    universalConnect(request, sessionConfig, connectInfoAndUrl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b, _c, _d, _e;\n                try {\n                    (0, log_1.logDebug)(\"engine universalConnect request :\", JSON.stringify(request));\n                    (0, log_1.logDebug)(\"engine universalConnect sessionConfig :\", JSON.stringify(sessionConfig));\n                    let tonRequest = [];\n                    let universalRequest = [];\n                    request.forEach((item) => {\n                        let name = item.name;\n                        if (name.startsWith(\"requestAccounts\")) {\n                            universalRequest.push(item);\n                        }\n                        else if (name.startsWith(\"ton\")) {\n                            tonRequest.push(item);\n                        }\n                    });\n                    (0, log_1.logDebug)(\"engine universalConnect tonRequest :\", JSON.stringify(tonRequest));\n                    (0, log_1.logDebug)(\"engine universalConnect universalRequest :\", JSON.stringify(universalRequest));\n                    const connectInfo = this.connectionManager.getConnectInfo();\n                    const requestId = this.getRequestId();\n                    let openUniversalLink = (_a = sessionConfig.openUniversalUrl) !== null && _a !== void 0 ? _a : false;\n                    const universalConnectRequest = {\n                        protocolVer: Number(protocol_1.tonConnectSdkVersion),\n                        topic: connectInfo.channelId,\n                        clientId: connectInfo.clientId,\n                        requestId: requestId,\n                        dAppInfo: sessionConfig.dappInfo,\n                        requests: universalRequest,\n                        redirect: (_b = sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect) !== null && _b !== void 0 ? _b : \"none\"\n                    };\n                    const base64Encoded = (0, url_1.encodeConnectParams)(universalConnectRequest);\n                    universalConnectRequest.redirect = (_c = sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect) !== null && _c !== void 0 ? _c : \"none\";\n                    const tonConnectRequest = {\n                        protocolVer: Number(protocol_1.tonConnectSdkVersion),\n                        topic: connectInfo.channelId,\n                        clientId: connectInfo.clientId,\n                        requestId: requestId,\n                        dAppInfo: sessionConfig.dappInfo,\n                        requests: tonRequest,\n                        redirect: (_d = sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect) !== null && _d !== void 0 ? _d : \"none\"\n                    };\n                    let isFromTonSDK = false;\n                    if (tonRequest.length > 0) { //from tonsdk\n                        isFromTonSDK = true;\n                    }\n                    let defaultConnectRequest = isFromTonSDK ? tonConnectRequest : universalConnectRequest;\n                    (0, log_1.logDebug)('engine universalConnect ==>>defaultConnectRequest:', isFromTonSDK, JSON.stringify(defaultConnectRequest));\n                    var openOKXLink = \"\";\n                    // open app wallet\n                    if (openUniversalLink) {\n                        openOKXLink = (0, url_1.getOKXLink)(defaultConnectRequest, sessionConfig.useMini, sessionConfig.tmaReturnUrl);\n                        (0, log_1.logDebug)('engine universalConnect ==>>openOKXLink:', openOKXLink);\n                    }\n                    const openMethod = () => sessionConfig.useMini ? (0, url_1.openOKXTMAWalletlinkWithFallback)(openOKXLink) :\n                        (0, utils_1.useShortLink)() ? (0, utils_1.openOKXDeeplinkWithFallback)(openOKXLink) : (0, utils_1.openOKXUniversalLink)(openOKXLink);\n                    (0, log_1.logDebug)('engine universalConnect ==>>openOKXLink:', openOKXLink);\n                    const isIOS = (0, utils_1.isIos)();\n                    if (isIOS && openUniversalLink) {\n                        (0, log_1.logDebug)(`engine universalConnect ==>>isIOS: ${isIOS}   openUniversalLink: ${openUniversalLink}`);\n                        openMethod();\n                    }\n                    yield ((_e = this.connectionManager) === null || _e === void 0 ? void 0 : _e.disconnect(false));\n                    this.bindRequestForPromise(requestId, (response) => {\n                        var _a, _b, _c, _d;\n                        try {\n                            let connectResponse = response;\n                            if (connectResponse.method == \"connect\") {\n                                (0, log_1.logDebug)(\"engin  universalConnect success connectResponse:>>>\", JSON.stringify(connectResponse));\n                                let namespaces = (0, sessionUtils_1.buildNameSpacesByConnectResponse)(connectResponse);\n                                if (namespaces) {\n                                    let walletName = undefined;\n                                    if (((_b = (_a = connectResponse.payload) === null || _a === void 0 ? void 0 : _a.responses) === null || _b === void 0 ? void 0 : _b[0]) && \"walletName\" in connectResponse.payload.responses[0]) {\n                                        walletName = connectResponse.payload.responses[0]['walletName'];\n                                    }\n                                    let session = {\n                                        topic: connectInfo.channelId,\n                                        sessionConfig: sessionConfig,\n                                        namespaces: namespaces,\n                                        wallet: Object.assign(Object.assign({}, (_c = connectResponse.payload) === null || _c === void 0 ? void 0 : _c.wallet), { walletName: walletName }),\n                                    };\n                                    let methodsResponse = connectResponse.payload.responses.find(item => item.name === 'requestAccounts');\n                                    if (methodsResponse && methodsResponse.connectRequestMethods) {\n                                        session.signResponse = methodsResponse.connectRequestMethods;\n                                    }\n                                    (0, log_1.logDebug)(\"engin  universalConnect success session:>>>\", JSON.stringify(session));\n                                    resolve(session);\n                                }\n                                else {\n                                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n                                }\n                            }\n                            else if (connectResponse.method == \"connect_error\" && ((_d = connectResponse.payload) === null || _d === void 0 ? void 0 : _d.code)) {\n                                throw new protocol_1.OKXConnectError(connectResponse.payload.code);\n                            }\n                        }\n                        catch (e) {\n                            reject(e);\n                        }\n                    });\n                    try {\n                        yield this.connectionManager.connect();\n                    }\n                    catch (e) {\n                        (0, log_1.logDebug)('Engine universalConnect error', e);\n                        throw e;\n                    }\n                    if (!isIOS && openUniversalLink) {\n                        openMethod();\n                    }\n                    (0, log_1.logDebug)('engin  universalConnect ==>> connectInfoAndUrl:', connectInfoAndUrl);\n                    this.sendSession(base64Encoded);\n                    if (connectInfoAndUrl) {\n                        const info = {\n                            connectRequest: universalConnectRequest,\n                            redirect: sessionConfig.redirect,\n                            tmaReturnUrl: sessionConfig.tmaReturnUrl,\n                        };\n                        if (isFromTonSDK) {\n                            info.tonConnectRequest = tonConnectRequest;\n                        }\n                        (0, log_1.logDebug)(\"universalConnect connectInfoAndUrl info :\", JSON.stringify(info));\n                        connectInfoAndUrl(info);\n                    }\n                }\n                catch (error) {\n                    (0, log_1.logDebug)(\"Engine universalConnect catch error\", error);\n                    reject(error);\n                }\n            }));\n        });\n    }\n    sendSession(sessionInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('[Connect] sendSession called:', sessionInfo);\n            const requestId = this.getRequestId();\n            let request = {\n                method: 'session_info',\n                params: { sessionInfo: sessionInfo }\n            };\n            yield this.connectionManager.sendRaw(JSON.stringify(Object.assign(Object.assign({}, request), { requestId: requestId })));\n        });\n    }\n    bindRequestForPromise(requestId, resolve) {\n        this.pendingRequests.set(requestId, resolve);\n    }\n    send(request, requestAnswer, ttl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('Engine ==>> send  request==>', JSON.stringify(request));\n            const requestId = this.getRequestId();\n            try {\n                let packageId = yield this.connectionManager.send(JSON.stringify(Object.assign(Object.assign({}, request), { requestId: requestId })), ttl);\n                this.connectionManager.events.once(packageId.toString(), (event) => {\n                    var _a;\n                    (0, log_1.logDebug)(`Engine ==> send => onAck => ${(0, safejson_1.safeJsonStringify)(event)}`);\n                    if (event && event.result) {\n                        (_a = requestAnswer.onAck) === null || _a === void 0 ? void 0 : _a.call(requestAnswer);\n                    }\n                });\n                if (requestAnswer.resolve) {\n                    this.bindRequestForPromise(requestId, requestAnswer.resolve);\n                }\n            }\n            catch (e) {\n                return Promise.reject(e);\n            }\n        });\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.restoreConnect(sessionInfo.topic));\n            onConnectResult(sessionInfo);\n        });\n    }\n    restoreconnectFromTopic(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.restoreConnect(topic));\n        });\n    }\n    getRequestId() {\n        const requestId = Date.now().toString();\n        (0, log_1.logDebug)('Engine ==>> getRequestId ==>', requestId);\n        return requestId;\n    }\n    handleResponse(event, response) {\n        (0, log_1.logDebug)(`Engine ==>> handleResponse_1  ======>response: ${(0, safejson_1.safeJsonStringify)(response)}`, event);\n        if (\"requestId\" in response) {\n            (0, log_1.logDebug)(\"Engine ==>> handleResponse_2  ===> in response\");\n            let requestId = response.requestId;\n            const resolve = this.pendingRequests.get(requestId);\n            if (resolve) {\n                (0, log_1.logDebug)(\"Engine ==>> handleResponse_3  ===> find resolve:\", resolve);\n                resolve(response);\n                // 从pendingRequests中删除这个Promise\n                this.pendingRequests.delete(requestId);\n            }\n            else {\n                (0, log_1.logDebug)(\"Engine ==>> handleResponse_3  ===> not find resolve:\");\n                if (response.method === \"disconnect\") {\n                    this.disconnectListener.forEach(listener => listener());\n                    this.disconnectListener = [];\n                    this.disconnect();\n                }\n                else if (response.method === \"session_connecting\") {\n                    (0, log_1.logDebug)(\"Engine ==>> handleResponse_4  ===> sessionConnectingListener\");\n                    if (this.sessionConnectingListener) {\n                        (0, log_1.logDebug)(\"Engine ==>> handleResponse_4  ===> sessionConnectingListener not null\");\n                        this.sessionConnectingListener();\n                        this.sessionConnectingListener = undefined;\n                    }\n                }\n            }\n        }\n    }\n    getCurrentConnectionReady() {\n        return this.connectionManager.getCurrentConnectionReady();\n    }\n    saveSessionContent(key, data) {\n        this.connectionManager.saveSessionContent(key, data);\n    }\n    getSessionContent(key) {\n        return this.connectionManager.getSessionContent(key);\n    }\n}\nexports.WSEngine = WSEngine;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_METHOD_BATCH_FETCHMSG = exports.CONNECT_METHOD_FETCHMSG = exports.CONNECT_METHOD_RECEIVE = exports.CONNECT_METHOD_UNSUB = exports.CONNECT_METHOD_SUB = exports.CONNECT_METHOD_PUBLISH = exports.CONNECT_METHOD_LOGIN = exports.CONNECT_METHOD_PUSH = void 0;\n// --------------- ws methods -------------\nexports.CONNECT_METHOD_PUSH = \"push\";\nexports.CONNECT_METHOD_LOGIN = \"login\";\nexports.CONNECT_METHOD_PUBLISH = \"publish\";\nexports.CONNECT_METHOD_SUB = \"subscribe\";\nexports.CONNECT_METHOD_UNSUB = \"unsubscribe\";\nexports.CONNECT_METHOD_RECEIVE = \"receive\";\nexports.CONNECT_METHOD_FETCHMSG = \"fetchMessages\";\nexports.CONNECT_METHOD_BATCH_FETCHMSG = \"batchFetchMessages\";\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXWalletConnector = void 0;\nconst constants_1 = require(\"./constants\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils\");\nconst utils_2 = require(\"../utils/utils\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst log = __importStar(require(\"../utils/log\"));\nconst protocol_1 = require(\"../protocol\");\nconst WS = (0, utils_2.resolveWebSocketImplementation)();\nclass OKXWalletConnector {\n    constructor(url) {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.state = constants_1.ConnectorState.InitState;\n        this.selectedUrlIndex = 0;\n        // reconnect\n        this.retryCount = 0;\n        // default timeout limit: 8 sec\n        this.timeOutLimit = 8000;\n        if (!(0, utils_2.checkWSUrl)(url)) {\n            throw new Error(`CONNECTOR: invalid url ${url}`);\n        }\n        this.url = url;\n        this.heartbeatTimer = null;\n        this.connectionTimeoutTimer = null;\n        this.connectURLStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY + storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n    }\n    get connecting() {\n        return this.state == constants_1.ConnectorState.Connecting;\n    }\n    // ------------------------------------------------------\n    onPayload(e) {\n        if (typeof e.data === \"undefined\")\n            return;\n        log.logDebug('get received data');\n        log.logDebug(e);\n        if (typeof e.data === \"string\") {\n            let rsp = e.data;\n            if (rsp === \"pong\") {\n                log.logDebug(`CONNECT: receive pong ${Date.now().toString()}`);\n                return;\n            }\n        }\n        this.events.emit(\"payload\", e.data);\n    }\n    onClose(event) {\n        var _a;\n        log.logDebug('socket get closed: ', (_a = this.socket) === null || _a === void 0 ? void 0 : _a.url, event.code);\n        this.socket = undefined;\n        this.events.emit(\"close\", event);\n    }\n    onError(id, e) {\n        const payload = { id: id, msg: e.toString() };\n        this.events.emit(\"payload\", payload);\n    }\n    onopen(socket) {\n        socket.onmessage = (event) => this.onPayload(event);\n        socket.onclose = (event) => this.onClose(event);\n        this.socket = socket;\n        this.state = constants_1.ConnectorState.Connected;\n        this.events.emit(\"open\");\n    }\n    // ------------------------------------------------------\n    emitError(errorEvent) {\n        this.events.emit(\"fail\", errorEvent);\n    }\n    // ------------------------------------------------------\n    heartbeat() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.heartbeatTimer) {\n                clearTimeout(this.heartbeatTimer);\n            }\n            if (this.state != constants_1.ConnectorState.Connected && this.state != constants_1.ConnectorState.OnError) {\n                log.logDebug('heart beat close');\n                return;\n            }\n            if (!this.socket) {\n                log.logDebug('socket not exist');\n                if (this.state == constants_1.ConnectorState.Connected || this.state == constants_1.ConnectorState.OnError) {\n                    log.logDebug('socket reconnect by heartbeat');\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                        this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n                    }\n                }\n                return;\n            }\n            if (this.socket.readyState !== WebSocket.OPEN) {\n                log.logDebug('socket not ready');\n                if (this.state == constants_1.ConnectorState.Connected || this.state == constants_1.ConnectorState.OnError) {\n                    log.logDebug('socket reconnect by heartbeat with state', this.state, this.socket.readyState);\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                        this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n                    }\n                }\n                return;\n            }\n            log.logDebug(`send ping heart beat: ${Date.now().toString()}, ${this.socket}`);\n            this.socket.send(\"ping\");\n            this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n        });\n    }\n    registOpen(url = this.url, inRetry = false) {\n        if (!(0, utils_2.checkWSUrl)(url)) {\n            throw new Error(`CONNECTOR: invalid url ${url}`);\n        }\n        this.url = url;\n        if (!inRetry) {\n            log.logDebug('Connection connect:', this.url, new Date().toUTCString());\n        }\n        this.state = constants_1.ConnectorState.Connecting;\n        const origin = new URLSearchParams(url).get(\"origin\");\n        return new Promise((resolve, reject) => {\n            const socket = new WS(url, []);\n            log.logDebug('Connection connect Begin:', this.url, new Date().toUTCString());\n            this.startTimeOutTimer(socket);\n            if ((0, utils_2.hasBuiltInWebSocket)()) {\n                log.logDebug('Add socket error handler');\n                socket.onerror = () => {\n                    reject(new Error('socket error'));\n                    socket.close();\n                };\n            }\n            else {\n                log.logDebug('Add socket error handler');\n                socket.on(\"error\", () => {\n                    reject(new Error('socket error'));\n                    socket.close();\n                });\n            }\n            socket.onopen = () => {\n                log.logDebug('socket opened');\n                this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.FINISHED);\n                this.onopen(socket);\n                this.heartbeat();\n                resolve(socket);\n            };\n        });\n    }\n    checkMaxRetry() {\n        log.logDebug('current retry count:', this.retryCount, 'of', constants_1.OKXCONNECTOR_WS_URL_LIST.length);\n        return this.retryCount > constants_1.OKXCONNECTOR_WS_URL_LIST.length;\n    }\n    connectionTryNext() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.checkMaxRetry()) {\n                //TODO: mark descent\n                this.retryCount += 1;\n                let nextUrl = this.getNextSelectUrl();\n                log.logDebug('Connection retry:', nextUrl, new Date().toUTCString());\n                return this.registOpen(nextUrl, true);\n            }\n            else {\n                log.logDebug('Max Connection retry ', this.retryCount, new Date().toUTCString());\n            }\n        });\n    }\n    startTimeOutTimer(socket) {\n        if (this.connectionTimeoutTimer) {\n            this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.CANCELED);\n        }\n        this.pendingSocket = socket;\n        this.connectionTimeoutTimer = setTimeout(() => {\n            if (this.pendingSocket) {\n                this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.TIME_OUT);\n            }\n        }, this.timeOutLimit);\n    }\n    resetTimeOutTimer(code) {\n        var _a;\n        // 1. cancel connecting pending sockets\n        if (code != constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.FINISHED) {\n            (_a = this.pendingSocket) === null || _a === void 0 ? void 0 : _a.close(code);\n        }\n        this.pendingSocket = undefined;\n        // 2. remove timer\n        clearTimeout(this.connectionTimeoutTimer);\n    }\n    cacheSuccessUrlSelect() {\n        this.connectURLStorage.saveContent(this.selectedUrlIndex.toString(), storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n    }\n    // private getSuccessUrlSelect(): string {\n    //     let selectIndex = this.connectURLStorage.getItem(OKXCONNECTOR_CACHE_KEY)?.content\n    //     let index = 0\n    //     if (selectIndex) {\n    //         index = Number(selectIndex)\n    //     }\n    //     this.selectedUrlIndex = index\n    //     return OKXCONNECTOR_WS_URL_LIST[index]\n    // }\n    getNextSelectUrl() {\n        this.selectedUrlIndex += 1;\n        this.selectedUrlIndex = this.selectedUrlIndex % constants_1.OKXCONNECTOR_WS_URL_LIST.length;\n        return constants_1.OKXCONNECTOR_WS_URL_LIST[this.selectedUrlIndex];\n    }\n    // ------------------------------------------------------\n    onVisibleChanged() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (document.visibilityState === 'visible') {\n                // check and restore\n                log.logDebug(`get changed ${this.state}, ${this.socket}`);\n                if (this.state == constants_1.ConnectorState.Connected && typeof this.socket === \"undefined\") {\n                    log.logDebug('CONNECTION need reopen');\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                    }\n                    return;\n                }\n            }\n        });\n    }\n    tryRegistOpen() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            if (this.connecting) {\n                log.logDebug('tryRegistOpen => connecting state');\n                return new Promise((resolve, reject) => {\n                    this.events.once('fail', (e) => {\n                        log.logDebug('tryRegistOpen => connecting fail listener', e);\n                        return reject(e);\n                    });\n                    this.events.once(\"open\", () => {\n                        if (typeof this.socket == \"undefined\") {\n                            return reject(new Error(\"Connect lost\"));\n                        }\n                        return resolve(this.socket);\n                    });\n                });\n            }\n            log.logDebug('tryRegistOpen => try registOpen until retry limit is hit');\n            let inRetry = false;\n            while (!this.checkMaxRetry() && !this.socket) {\n                try {\n                    log.logDebug('tryRegistOpen => call registOpen, try count:', this.retryCount, inRetry);\n                    yield this.registOpen(url, inRetry);\n                }\n                catch (err) {\n                    log.logDebug('tryRegistOpen => registOpen failed', err);\n                    this.retryCount += 1;\n                    url = this.getNextSelectUrl();\n                    inRetry = true;\n                }\n            }\n            log.logDebug('tryRegistOpen => exit while loop', this.retryCount, this.socket);\n            if (!this.socket && this.checkMaxRetry()) {\n                log.logDebug('tryRegistOpen => failed to open a socket', this.retryCount, this.socket);\n                this.retryCount = 0;\n                this.state = constants_1.ConnectorState.OnError;\n                this.emitError(new Error('tryRegistOpen failed'));\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CONNECTION_ERROR, \"Failed to connect\");\n            }\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this.tryRegistOpen();\n                // listener for reconnect\n                document.removeEventListener('visibilitychange', this.onVisibleChanged.bind(this));\n                document.addEventListener('visibilitychange', this.onVisibleChanged.bind(this));\n            }\n            catch (e) {\n                log.logDebug('connect => failed to connect', e);\n                throw e;\n            }\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.state = constants_1.ConnectorState.Disconnected;\n            return new Promise((resolve, reject) => {\n                if (typeof this.socket === \"undefined\") {\n                    // reject(new Error(\"CONNECTION closed\"))\n                    resolve();\n                    return;\n                }\n                this.socket.onclose = (event) => {\n                    this.onClose(event);\n                    resolve();\n                };\n                this.socket.close();\n                if (this.heartbeatTimer) {\n                    clearTimeout(this.heartbeatTimer);\n                }\n            });\n        });\n    }\n    currentStatus() {\n        return {\n            state: this.state,\n            url: this.url\n        };\n    }\n    // event will be jsonstr\n    /// @params Promise\n    /// @params success/failed callback\n    addListener(event, decrypt, success, failed) {\n        if (this.listenPayloadHandler) {\n            this.events.removeListener(\"payload\", this.listenPayloadHandler);\n        }\n        this.listenPayloadHandler = (e) => {\n            var _a;\n            log.logDebug(`<<< get payload ${e}`);\n            let parsedEvent = (0, utils_1.safeJsonParse)(e);\n            // parse the data to chose success or failed\n            if (parsedEvent.params && parsedEvent.params.data) {\n                let rawMsg = (_a = parsedEvent.params.data) === null || _a === void 0 ? void 0 : _a.message;\n                if (rawMsg) {\n                    try {\n                        let msg = decrypt(rawMsg);\n                        if (msg === undefined) {\n                            log.logDebug(`CONNECT: decrypt undefined`);\n                            failed(event, 'Decrypt undefined');\n                        }\n                        else {\n                            success(event, msg);\n                        }\n                    }\n                    catch (e) {\n                        log.logDebug(`CONNECT: decrypt failed: ${e}`);\n                        failed(event, e.message);\n                    }\n                }\n            }\n        };\n        this.events.on(\"payload\", this.listenPayloadHandler);\n        if (this.failHandler) {\n            this.events.removeListener(\"fail\", this.failHandler);\n        }\n        this.failHandler = (e) => {\n            if (e) {\n                log.logDebug(`CONNECT failed: ${e}`);\n                failed(event, e.message);\n            }\n            else {\n                failed(event, \"Unkonow error\");\n            }\n        };\n        this.events.on(\"fail\", this.failHandler);\n    }\n    addPackageParse(callback) {\n        if (this.payloadHandler) {\n            this.events.removeListener(\"payload\", this.payloadHandler);\n        }\n        this.payloadHandler = (e) => __awaiter(this, void 0, void 0, function* () {\n            // parse the data to chose success or failed\n            log.logDebug(`CONNECTION @[${new Date().toUTCString()}] <<<< received e:${e}`);\n            let param = (0, utils_1.safeJsonParse)(e);\n            yield callback(param);\n        });\n        this.events.on(\"payload\", this.payloadHandler);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    send(doLogin, payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (typeof this.socket === \"undefined\") {\n                    log.logDebug(`>>> send payload undefined ${payload}`);\n                    // this.socket = await this.registOpen();\n                    yield doLogin();\n                }\n                log.logDebug(`CONNECTION @[${new Date().toUTCString()}]>>> send payload ${(0, utils_1.safeJsonStringify)(payload)}`);\n                if (this.socket) {\n                    this.socket.send((0, utils_1.safeJsonStringify)(payload));\n                }\n            }\n            catch (e) {\n                this.onError(payload.id, e);\n            }\n        });\n    }\n    getMsgPayloadFromHistory(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof msg === \"undefined\")\n                return;\n            let tmpMsg = {\n                params: {\n                    data: msg\n                }\n            };\n            let jsonstr = (0, utils_1.safeJsonStringify)(msg);\n            log.logDebug('get received data from history');\n            log.logDebug(jsonstr);\n            jsonstr = (0, utils_1.safeJsonStringify)(tmpMsg);\n            this.events.emit(\"payload\", jsonstr);\n        });\n    }\n    onOpen(callback) {\n        if (this.openHandler) {\n            this.events.removeListener(\"open\", this.openHandler);\n        }\n        this.openHandler = () => __awaiter(this, void 0, void 0, function* () {\n            log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> ws opened: `);\n            yield callback();\n        });\n        this.events.on(\"open\", this.openHandler);\n        this.cacheSuccessUrlSelect();\n    }\n}\nexports.OKXWalletConnector = OKXWalletConnector;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionManager = void 0;\nconst connect_1 = require(\"./connect\");\nconst commands_1 = require(\"./commands\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst jwtconstants_1 = require(\"./jwtconstants\");\nconst constants_1 = require(\"./constants\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils/utils\");\nconst crypto_1 = require(\"../crypto/crypto\");\nconst jwt_1 = require(\"./jwt\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst report_1 = require(\"../utils/report\");\nconst url_1 = require(\"../utils/url\");\nclass ConnectionManager {\n    constructor(appname = undefined) {\n        this.events = new eventemitter3_1.EventEmitter();\n        // local storage\n        this.connectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY_DAPP + appname, storageconstants_1.OKXCONNECTOR_CACHE_KEY_DAPP);\n        this.crypto = new crypto_1.SessionCrypto();\n        let inTMA = (0, url_1.isInTMA)();\n        (0, log_1.logDebug)('do init:', inTMA);\n        log.reportLog('connection manager do init');\n        if (inTMA) {\n            // recovery from cache\n            const keyPairInfo = this.getCachedCryptoKeyPair();\n            (0, log_1.logDebug)('use same pk:', keyPairInfo);\n            this.crypto = new crypto_1.SessionCrypto(keyPairInfo);\n        }\n        this.jwtKeyPair = this.getCachedJWTKeyPair();\n        this.saveJWTKeyPair(this.jwtKeyPair);\n        // wss connection\n        this.connector = new connect_1.OKXWalletConnector(constants_1.OKXCONNECTOR_WS_URL_1);\n        this.packageId = Date.now();\n        // connection state\n        this.connectedWalletPK = '';\n        this.currentTopic = '';\n        log.logDebug(`this.connectedWalletPK  constructor   ${this.connectedWalletPK}`);\n    }\n    refreshPackageId() {\n        this.packageId = Date.now();\n    }\n    saveCryptoKeyPair(keyPair) {\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(keyPair);\n        // encrypt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_CRYPTO_KEY);\n    }\n    getCachedCryptoKeyPair() {\n        // decrypt kp\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_CRYPTO_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            log.logDebug('get cached crypto key:');\n            log.logDebug(content);\n            let keyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            return keyPairInfo;\n        }\n        else {\n            this.connectStorage.clearCache();\n        }\n        return null;\n    }\n    saveJWTKeyPair(keyPair) {\n        var strkeyPair = {\n            publicKey: (0, utils_1.toHexString)(keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(keyPair.secretKey)\n        };\n        log.logDebug('save jwt kp');\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(strkeyPair);\n        log.logDebug(cacheInfo);\n        // encrypt jwt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_JWT_KEY);\n    }\n    getCachedJWTKeyPair() {\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            // TODO: decrypt jwt kp\n            log.logDebug('get cached jwt kp:');\n            log.logDebug(content);\n            let strKeyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            log.logDebug('save jwt kp');\n            log.logDebug(strKeyPairInfo);\n            var keyPair = {\n                publicKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.publicKey),\n                secretKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.secretKey)\n            };\n            return keyPair;\n        }\n        else {\n            return (0, jwt_1.generateKeyPair)();\n        }\n    }\n    isWalletPKReady() {\n        log.logDebug(`isWalletPKReady  ===> ${this.connectedWalletPK}`);\n        return this.connectedWalletPK.length > 0;\n    }\n    makeJWT(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, jwt_1.signJWT)(topic, jwtconstants_1.OKXCONNECTOR_JWT_SIDE, jwtconstants_1.OKXCONNECTOR_JWT_TTL, // 24h\n            this.jwtKeyPair);\n        });\n    }\n    parsePackage(input_1) {\n        return __awaiter(this, arguments, void 0, function* (input, ignoreACK = false) {\n            var _a, _b, _c, _d, _e;\n            this.events.emit(input.id, input);\n            // send back ACK\n            if (!ignoreACK) {\n                yield this.sendACK(input.id, true);\n                let topic = (_a = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE)) === null || _a === void 0 ? void 0 : _a.content;\n                if (topic) {\n                    let inputObj = input;\n                    if ((_c = (_b = inputObj.params) === null || _b === void 0 ? void 0 : _b.data) === null || _c === void 0 ? void 0 : _c.messageId) {\n                        this.refreshPackageId();\n                        yield this.sendReceive(this.packageId.toString(), (_e = (_d = inputObj.params) === null || _d === void 0 ? void 0 : _d.data) === null || _e === void 0 ? void 0 : _e.messageId, topic);\n                    }\n                }\n            }\n        });\n    }\n    restoreConnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.reportLog('connection manager restore connection');\n            log.logDebug(`connectionManager  restoreConenct   ${topic}`);\n            if ((typeof topic !== 'string') || topic.length === 0) {\n                throw new Error('CONNECTION: invalid topic');\n            }\n            log.logDebug(`connectionManager  restoreConenct   disconnect`);\n            yield this.disconnect(true);\n            this.connectStorage.saveContent(topic, storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`connectionManager  restoreConenct   conect`);\n            yield this.connect(true);\n        });\n    }\n    getConnectInfo() {\n        var topic = (0, utils_1.generateTopic)();\n        log.logDebug(`generate topic token: ${topic}`);\n        log.reportLog('connection manager generate connection info');\n        this.currentTopic = topic;\n        const info = {\n            channelId: topic,\n            clientId: this.crypto.stringifyKeypair().publicKey,\n        };\n        return info;\n    }\n    connect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            this.timeLog = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---enter->\", this.timeLog);\n            log.reportLog('connection manager begin connect');\n            let lastConnectId = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            //1. generate topic & jwt\n            var topic = this.currentTopic;\n            log.logDebug(`generate topic token: ${topic}`);\n            // crypto keypair\n            if (fromRestore) {\n                if (typeof lastConnectId !== 'undefined' && lastConnectId !== null) {\n                    log.logDebug(`read last connect id: ${lastConnectId}`);\n                    topic = lastConnectId.content;\n                }\n                var cachedSenderPublicKey = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                if (cachedSenderPublicKey) {\n                    this.connectedWalletPK = cachedSenderPublicKey.content;\n                    (0, log_1.logDebug)(`connectionManager connect() this.connectedWalletPK : ${this.connectedWalletPK}`);\n                }\n                log.reportLog('connection manager do restore connection');\n            }\n            if (fromRestore) {\n                // recovery from cache\n                const keyPairInfo = this.getCachedCryptoKeyPair();\n                if (keyPairInfo) {\n                    this.crypto = new crypto_1.SessionCrypto(keyPairInfo);\n                }\n            }\n            log.logDebug(`use crypto client id: ${this.crypto.stringifyKeypair().publicKey}`);\n            // cache topic\n            this.connectStorage.saveContent(topic, storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            var jwtToken = yield this.makeJWT(topic);\n            log.logDebug(`generate jwt token: ${jwtToken}`);\n            this.connectStorage.saveContent(jwtToken, 'jwt');\n            return new Promise((resolve, reject) => {\n                // 1. when websocket opened\n                this.connector.onOpen(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug(`1. connector on open`);\n                    log.reportLog('1. connect ws open');\n                    const timeOne = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---open->\", timeOne - this.timeLog);\n                    //2. send jwt to login\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when login');\n                            log.reportLog('2. connect login failed');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // throw error\n                            reject(error);\n                        }\n                        //3. send subscribe\n                        this.refreshPackageId();\n                        this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                            // ack\n                            if (rsp && rsp.error) {\n                                log.logError('failed when subscribe');\n                                log.reportLog('3. connect subscribe failed');\n                                yield this.connector.disconnect();\n                                var error = new Error();\n                                error.message = rsp.error.message;\n                                error.name = rsp.error.code.toString();\n                                // throw error\n                                reject(error);\n                            }\n                            this.refreshPackageId();\n                            log.logDebug(`4. subscribe callback then send fetch: ${this.packageId}`);\n                            log.reportLog('4. subscribe callback then send fetch');\n                            const timeF = new Date().getTime();\n                            (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n                            // 4. fetch messages\n                            yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                            resolve();\n                        }));\n                        log.logDebug(`3. login callback then send subscribe: ${this.packageId}`);\n                        log.reportLog('3. connect subscribe failed');\n                        const timeTh = new Date().getTime();\n                        (0, log_1.logDebug)(\"ConnectTime---login callback->\", timeTh - this.timeLog);\n                        yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                            log.logDebug('CONNECT: reconnect before send');\n                            yield this.connector.connect()\n                                .catch((err) => {\n                                (0, log_1.logDebug)('ConnectionManager connect error', err);\n                                reject(err);\n                            });\n                        }), {\n                            id: this.packageId.toString(),\n                            jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                            method: commands_1.CONNECT_METHOD_SUB,\n                            params: {\n                                topic: topic\n                            }\n                        });\n                    }));\n                    log.logDebug(`2. login called`);\n                    log.reportLog('2. connection manager connect call login');\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        yield this.connector.connect()\n                            .catch((err) => {\n                            (0, log_1.logDebug)('ConnectionManager connect error', err);\n                            reject(err);\n                        });\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_LOGIN,\n                        params: {\n                            token: jwtToken\n                        }\n                    });\n                    // 4. listen when dapp back to front, receive wallet public key\n                    this.connector.addPackageParse((event) => {\n                        var _a;\n                        log.logDebug(`connect: parse package`);\n                        log.logDebug(event);\n                        if (!(\"params\" in event) || !(\"data\" in event[\"params\"])) {\n                            this.parsePackage(event, true);\n                            return;\n                        }\n                        let rawMsg = (_a = event.params.data) === null || _a === void 0 ? void 0 : _a.message;\n                        if (typeof rawMsg !== 'undefined') {\n                            rawMsg = rawMsg.replace(/'/g, '\"');\n                            let parsedMessage = (0, safejson_1.safeJsonParse)(rawMsg);\n                            if (typeof parsedMessage !== 'string' && \"clientId\" in parsedMessage && parsedMessage.clientId && parsedMessage.clientId.length > 0) {\n                                this.connectedWalletPK = parsedMessage.clientId;\n                                log.logDebug(`this.connectedWalletPK  addPackageParse   ${this.connectedWalletPK}`);\n                                // exchange sender public key\n                                // cache wallet public key\n                                this.connectStorage.saveContent(this.connectedWalletPK, storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                                // cache crypto keypair\n                                this.saveCryptoKeyPair(this.crypto.stringifyKeypair());\n                            }\n                        }\n                        // ignore receive echo\n                        this.parsePackage(event, event.method === commands_1.CONNECT_METHOD_RECEIVE);\n                    });\n                }));\n                this.connector.connect().catch((err) => {\n                    (0, log_1.logDebug)('ConnectionManager connect error', err);\n                    reject(err);\n                });\n            });\n        });\n    }\n    disconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            yield this.connector.disconnect();\n            log.reportLog('connect disconnect');\n            //clean cached topic\n            //如果是恢复连接，就不清理解密public key\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            if (!fromRestore) {\n                this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                this.connectedWalletPK = '';\n                (0, log_1.logDebug)(`connectionManager disconnect() this.connectedWalletPK : ${this.connectedWalletPK}`);\n            }\n        });\n    }\n    addListener(event, success, fail) {\n        this.connector.addListener((0, safejson_1.safeJsonStringify)(event), (rawMsg) => {\n            rawMsg = rawMsg.replace(/'/g, '\"');\n            log.logDebug(`addListener ===> ${rawMsg}`);\n            if (typeof rawMsg !== 'undefined') {\n                var msgObj = (0, safejson_1.safeJsonParse)(rawMsg);\n                var msg = msgObj.message;\n                let result;\n                if (msg.trimStart().startsWith('{')) {\n                    result = msg;\n                }\n                else {\n                    if (msgObj.clientId && msgObj.clientId.length > 0) {\n                        this.connectedWalletPK = msgObj.clientId;\n                        this.connectStorage.saveContent(this.connectedWalletPK, storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                        log.logDebug(`this.connectedWalletPK  addListener   ${this.connectedWalletPK}`);\n                        log.logDebug(`this.cryptoKey  addListener   ${(0, utils_1.toHexString)(this.crypto.keyPair.publicKey)}`);\n                        // cache crypto keypair\n                        this.saveCryptoKeyPair(this.crypto.stringifyKeypair());\n                    }\n                    result = this.crypto.decrypt(msg, this.connectedWalletPK);\n                }\n                log.logDebug(`addListener ===> ${result}`);\n                return result;\n            }\n            return undefined;\n        }, success, fail);\n    }\n    sendRaw(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.logDebug(`message send =====> ${msg}`);\n            log.reportLog('connect send raw msg');\n            let message = msg;\n            log.logDebug(`message send =====encrypt message.length>>>> ${message.length}`);\n            // only one topic\n            let topic = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`message send =====topic>>>> ${topic === null || topic === void 0 ? void 0 : topic.content}`);\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                method: commands_1.CONNECT_METHOD_PUBLISH,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                params: {\n                    message: {\n                        topic: topic === null || topic === void 0 ? void 0 : topic.content,\n                        message: message,\n                        ttl: constants_1.OKXCONNECTOR_MESSAGE_TTL\n                    }\n                } // crypted\n            };\n            this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                // ack\n                if (rsp && rsp.error) {\n                    log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                }\n                else if (rsp && !rsp.error) {\n                    log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                }\n            }));\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n            return this.packageId;\n        });\n    }\n    send(msg_1) {\n        return __awaiter(this, arguments, void 0, function* (msg, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL) {\n            // make send msg payload\n            log.logDebug(`message send =====> ${msg}`);\n            log.reportLog('connect send msg');\n            if (!this.isWalletPKReady()) {\n                // channel not ready\n                throw new Error('connection not finish');\n            }\n            let message = this.crypto.encrypt(msg, this.connectedWalletPK);\n            log.logDebug(`message send =====encrypt message.length>>>> ${message.length}`);\n            log.reportEvent(report_1.OKXReportType.LOG, 'msg_size', message.length.toString());\n            // only one topic\n            let topic = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`message send =====topic>>>> ${topic === null || topic === void 0 ? void 0 : topic.content}`);\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                method: commands_1.CONNECT_METHOD_PUBLISH,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                params: {\n                    message: {\n                        topic: topic === null || topic === void 0 ? void 0 : topic.content,\n                        message: message,\n                        ttl: ttl\n                    }\n                } // crypted\n            };\n            this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                // ack\n                if (rsp && rsp.error) {\n                    log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                }\n                else if (rsp && !rsp.error) {\n                    log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                }\n            }));\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n            return this.packageId;\n        });\n    }\n    sendACK(msgId_1, success_1) {\n        return __awaiter(this, arguments, void 0, function* (msgId, success, reason = undefined) {\n            if (success === true) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    result: true\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n            else if (reason) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    error: {\n                        code: reason.code, //int\n                        message: reason.message\n                    }\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    // send receive\n    sendReceive(msgId, messageId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECEIVE,\n                params: {\n                    data: {\n                        messageId: messageId,\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendConnectSessionInfo(msgId, messageId, topic, params) {\n        return __awaiter(this, void 0, void 0, function* () {\n        });\n    }\n    // send receive\n    // 1. fetch all \n    // 2. send back receive\n    // 3. check has more, if so, repeat from 1st step\n    sendFetchAndConsumeMessages(msgId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(msgId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic == topic) {\n                                let messageId = msg.messageId;\n                                log.reportLog('5. get fetch result');\n                                yield this.connector.getMsgPayloadFromHistory(msg);\n                                // send receive command to relay server\n                                this.refreshPackageId();\n                                yield this.sendReceive(this.packageId.toString(), messageId, topic);\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            log.reportLog('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_FETCHMSG,\n                params: {\n                    data: {\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    cleanCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.reportLog('connection cache clean called');\n            this.connectStorage.clearCache();\n        });\n    }\n    saveSessionContent(key, data) {\n        if (!data) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(data);\n        this.connectStorage.encryptStoreMsg(jsonData, storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n    }\n    getSessionContent(key) {\n        let jsonStr = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        if (jsonStr) {\n            let object = (0, safejson_1.safeJsonParse)(jsonStr);\n            return object;\n        }\n        return undefined;\n    }\n    getCurrentConnectionReady() {\n        return this.isWalletPKReady();\n    }\n}\nexports.ConnectionManager = ConnectionManager;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectorState = exports.CONNECT_JSONRPC_VER = exports.OKXCONNECTOR_MESSAGE_TTL = exports.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE = exports.OKXCONNECTOR_WS_URL_LIST = exports.OKXCONNECTOR_WS_URL_IDX_KEY = exports.OKXCONNECTOR_WS_URL_3 = exports.OKXCONNECTOR_WS_URL_2 = exports.OKXCONNECTOR_WS_URL_1 = exports.EVENT_EMITTER_MAX_LISTENERS = void 0;\nexports.EVENT_EMITTER_MAX_LISTENERS = 10;\nexports.OKXCONNECTOR_WS_URL_1 = \"wss://wsdexpri.okx.com/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_2 = \"wss://wsdexpri.okx.ac/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_3 = \"wss://wsdexpri.coinall.ltd/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_IDX_KEY = \"wuik\";\nexports.OKXCONNECTOR_WS_URL_LIST = [\n    exports.OKXCONNECTOR_WS_URL_1,\n    exports.OKXCONNECTOR_WS_URL_2,\n    exports.OKXCONNECTOR_WS_URL_3,\n];\nexports.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE = {\n    TIME_OUT: 3990,\n    CANCELED: 3991,\n    FINISHED: 3992,\n};\nexports.OKXCONNECTOR_MESSAGE_TTL = 300000;\n// --------------- JSON RPC ---------------\nexports.CONNECT_JSONRPC_VER = \"2.0\";\nexports.ConnectorState = {\n    InitState: 0,\n    Connecting: 1,\n    Connected: 2,\n    Disconnected: 3,\n    OnError: 4,\n};\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Engine = void 0;\nconst WSEngine_1 = require(\"./WSEngine\");\nconst InjectEngine_1 = require(\"../inject/InjectEngine\");\nclass Engine {\n    constructor(appName) {\n        this.pendingRequests = new Map();\n        this.isConnectInject = undefined;\n        this.wsEngine = new WSEngine_1.WSEngine(appName, this.pendingRequests);\n        this.injectEngine = new InjectEngine_1.InjectEngine(this.pendingRequests);\n    }\n    isInject() {\n        return !!this.isConnectInject;\n    }\n    universalConnect(request, sessionConfig, connectInfoAndUrl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.isConnectInject = undefined;\n            return this.wsEngine.universalConnect(request, sessionConfig, connectInfoAndUrl);\n        });\n    }\n    injectConnect(connectionRequest) {\n        this.injectEngine.connect(connectionRequest).then((resopnse) => {\n            var _a;\n            if (resopnse) {\n                let requestId = connectionRequest.requestId;\n                this.isConnectInject = true;\n                (_a = this.pendingRequests.get(requestId)) === null || _a === void 0 ? void 0 : _a(resopnse);\n            }\n        });\n    }\n    send(request, requestAnswer, option, ttl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.isInject()) {\n                this.injectEngine.send(request, requestAnswer);\n            }\n            else {\n                this.wsEngine.send(request, requestAnswer, ttl);\n            }\n        });\n    }\n    disconnect() {\n        if (this.isInject()) {\n            this.injectEngine.disconnect();\n        }\n        else {\n            this.wsEngine.disconnect();\n        }\n    }\n    addDisconnectListener(disconnecter) {\n        if (this.isInject()) {\n            this.injectEngine.addDisconnectListener(disconnecter);\n        }\n        else {\n            this.wsEngine.addDisconnectListener(disconnecter);\n        }\n    }\n    getCurrentConnectionReady() {\n        if (this.isInject()) {\n            return true;\n        }\n        else {\n            return this.wsEngine.getCurrentConnectionReady();\n        }\n    }\n    connectManagerDisconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            if (!this.isInject()) {\n                yield this.wsEngine.connectManagerDisconnect(fromRestore);\n            }\n        });\n    }\n    saveSessionContent(key, data) {\n        if (!this.isInject()) {\n            this.wsEngine.saveSessionContent(key, data);\n        }\n    }\n    getSessionContent(key) {\n        if (!this.isInject()) {\n            return this.wsEngine.getSessionContent(key);\n        }\n    }\n    setSessionConnectingListener(sessionConnectingListener) {\n        if (!this.isInject()) {\n            this.wsEngine.setSessionConnectingListener(sessionConnectingListener);\n        }\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isInject()) {\n                yield this.wsEngine.restoreconnect(sessionInfo, onConnectResult);\n            }\n        });\n    }\n    restoreconnectFromTopic(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isInject()) {\n                yield this.wsEngine.restoreconnectFromTopic(topic);\n            }\n        });\n    }\n}\nexports.Engine = Engine;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Storage = exports.Engine = exports.WalletConnectionManager = exports.ConnectionManager = exports.OKXWalletConnector = void 0;\nvar connect_1 = require(\"./connect\");\nObject.defineProperty(exports, \"OKXWalletConnector\", { enumerable: true, get: function () { return connect_1.OKXWalletConnector; } });\nvar connectionManager_1 = require(\"./connectionManager\");\nObject.defineProperty(exports, \"ConnectionManager\", { enumerable: true, get: function () { return connectionManager_1.ConnectionManager; } });\nvar walletConnectionManager_1 = require(\"./walletConnectionManager\");\nObject.defineProperty(exports, \"WalletConnectionManager\", { enumerable: true, get: function () { return walletConnectionManager_1.WalletConnectionManager; } });\nvar engine_1 = require(\"./engine\");\nObject.defineProperty(exports, \"Engine\", { enumerable: true, get: function () { return engine_1.Engine; } });\nvar storage_1 = require(\"./storage\");\nObject.defineProperty(exports, \"Storage\", { enumerable: true, get: function () { return storage_1.Storage; } });\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MULTICODEC_ED25519_LENGTH = exports.MULTICODEC_ED25519_HEADER = exports.MULTICODEC_ED25519_BASE = exports.MULTICODEC_ED25519_ENCODING = exports.DID_METHOD = exports.DID_PREFIX = exports.DID_DELIMITER = exports.KEY_PAIR_SEED_LENGTH = exports.DATA_ENCODING = exports.JSON_ENCODING = exports.JWT_ENCODING = exports.JWT_DELIMITER = exports.JWT_IRIDIUM_TYP = exports.JWT_IRIDIUM_ALG = exports.JWTHeaderType = void 0;\nexports.generateKeyPair = generateKeyPair;\nexports.decodeJSON = decodeJSON;\nexports.encodeJSON = encodeJSON;\nexports.encodeIss = encodeIss;\nexports.decodeIss = decodeIss;\nexports.encodeSig = encodeSig;\nexports.decodeSig = decodeSig;\nexports.encodeData = encodeData;\nexports.decodeData = decodeData;\nexports.encodeJWT = encodeJWT;\nexports.decodeJWT = decodeJWT;\nexports.signJWT = signJWT;\nexports.verifyJWT = verifyJWT;\nconst ed25519 = __importStar(require(\"@stablelib/ed25519\"));\nconst safejson_1 = require(\"../utils/safejson\");\nconst utils_1 = require(\"../utils/utils\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst log = __importStar(require(\"../utils/log\"));\nconst stringUtils_1 = require(\"../utils/stringUtils\");\nexports.JWTHeaderType = \"dapp\";\nexports.JWT_IRIDIUM_ALG = \"EdDSA\";\nexports.JWT_IRIDIUM_TYP = \"JWT\";\nexports.JWT_DELIMITER = \".\";\nexports.JWT_ENCODING = \"base64url\";\nexports.JSON_ENCODING = \"utf8\";\nexports.DATA_ENCODING = \"utf8\";\nexports.KEY_PAIR_SEED_LENGTH = 32;\nexports.DID_DELIMITER = \":\";\nexports.DID_PREFIX = \"did\";\nexports.DID_METHOD = \"key\";\nexports.MULTICODEC_ED25519_ENCODING = \"base58btc\";\nexports.MULTICODEC_ED25519_BASE = \"z\";\nexports.MULTICODEC_ED25519_HEADER = \"K36\";\nexports.MULTICODEC_ED25519_LENGTH = 32;\nfunction generateKeyPair() {\n    // let local_seed = randomBytes(KEY_PAIR_SEED_LENGTH)\n    // return ed25519.generateKeyPairFromSeed(local_seed);\n    return tweetnacl_1.default.sign.keyPair();\n}\nfunction decodeJSON(str) {\n    return (0, safejson_1.safeJsonParse)((0, stringUtils_1.okxtoString)((0, stringUtils_1.okxfromString)(str, exports.JWT_ENCODING), exports.JSON_ENCODING));\n}\nfunction encodeJSON(val) {\n    return (0, stringUtils_1.okxtoString)((0, stringUtils_1.okxfromString)((0, safejson_1.safeJsonStringify)(val), exports.JSON_ENCODING), exports.JWT_ENCODING);\n}\nfunction encodeIss(publicKey) {\n    log.logDebug(`publicKey: ${(0, utils_1.toHexString)(publicKey)}`);\n    var publicKeyStr = (0, stringUtils_1.okxtoString)(publicKey, exports.MULTICODEC_ED25519_ENCODING);\n    return [exports.DID_PREFIX, exports.DID_METHOD, publicKeyStr].join(exports.DID_DELIMITER);\n}\nfunction decodeIss(issuer) {\n    const [prefix, method, multicodec] = issuer.split(exports.DID_DELIMITER);\n    if (prefix !== exports.DID_PREFIX || method !== exports.DID_METHOD) {\n        throw new Error(`Issuer must be a DID with method \"key\"`);\n    }\n    if (multicodec === undefined) {\n        throw new Error('multicodec is undefined');\n    }\n    const publicKey = (0, stringUtils_1.okxfromString)(multicodec, exports.MULTICODEC_ED25519_ENCODING);\n    if (publicKey === undefined || publicKey.length !== exports.MULTICODEC_ED25519_LENGTH) {\n        throw new Error(`Issuer must be a public key with length 32 bytes`);\n    }\n    return publicKey;\n}\n// ---------- Signature ----------------------------------------------- //\nfunction encodeSig(bytes) {\n    return (0, stringUtils_1.okxtoString)(bytes, exports.JWT_ENCODING);\n}\nfunction decodeSig(encoded) {\n    return (0, stringUtils_1.okxfromString)(encoded, exports.JWT_ENCODING);\n}\n// ---------- Data ----------------------------------------------- //\nfunction encodeData(params) {\n    return (0, stringUtils_1.okxfromString)([encodeJSON(params.header), encodeJSON(params.payload)].join(exports.JWT_DELIMITER), exports.DATA_ENCODING);\n}\nfunction decodeData(data) {\n    var _a, _b;\n    const params = (0, stringUtils_1.okxtoString)(data, exports.DATA_ENCODING).split(exports.JWT_DELIMITER);\n    const header = decodeJSON((_a = params[0]) !== null && _a !== void 0 ? _a : '{}');\n    const payload = decodeJSON((_b = params[1]) !== null && _b !== void 0 ? _b : '{}');\n    return { header, payload };\n}\n// ---------- JWT ----------------------------------------------- //\nfunction encodeJWT(params) {\n    return [encodeJSON(params.header), encodeJSON(params.payload), encodeSig(params.signature)].join(exports.JWT_DELIMITER);\n}\nfunction decodeJWT(jwt) {\n    var _a, _b, _c;\n    const params = jwt.split(exports.JWT_DELIMITER);\n    const header = decodeJSON((_a = params[0]) !== null && _a !== void 0 ? _a : '{}');\n    const payload = decodeJSON((_b = params[1]) !== null && _b !== void 0 ? _b : '{}');\n    const signature = decodeSig((_c = params[2]) !== null && _c !== void 0 ? _c : '{}');\n    const data = (0, stringUtils_1.okxfromString)(params.slice(0, 2).join(exports.JWT_DELIMITER), exports.DATA_ENCODING);\n    return { header, payload, signature, data };\n}\nfunction signJWT(sub_1, aud_1, ttl_1, keyPair_1) {\n    return __awaiter(this, arguments, void 0, function* (sub, aud, ttl, keyPair, iat = Math.floor(Date.now())) {\n        const header = { alg: exports.JWT_IRIDIUM_ALG, typ: exports.JWT_IRIDIUM_TYP };\n        const iss = encodeIss(keyPair.publicKey);\n        const exp = iat + ttl;\n        const act = \"authenticate user\";\n        const payload = { iss, sub, aud, act, iat, exp };\n        const data = encodeData({ header, payload });\n        // const signature = ed25519.sign(keyPair.secretKey, data);\n        log.logDebug(`get sec kp: ${keyPair.secretKey} {${keyPair.secretKey.length}}`);\n        const signature = tweetnacl_1.default.sign.detached(data, keyPair.secretKey);\n        return encodeJWT({ header, payload, signature });\n    });\n}\nfunction verifyJWT(jwt) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { header, payload, data, signature } = decodeJWT(jwt);\n        if (header.alg !== exports.JWT_IRIDIUM_ALG || header.typ !== exports.JWT_IRIDIUM_TYP) {\n            throw new Error(\"JWT must use EdDSA algorithm\");\n        }\n        const publicKey = decodeIss(payload.iss);\n        return ed25519.verify(publicKey, data, signature);\n    });\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCONNECTOR_JWT_TTL = exports.OKXCONNECTOR_JWT_WALLET_SIDE = exports.OKXCONNECTOR_JWT_SIDE = void 0;\nexports.OKXCONNECTOR_JWT_SIDE = \"wallet\";\nexports.OKXCONNECTOR_JWT_WALLET_SIDE = \"dapp\";\nexports.OKXCONNECTOR_JWT_TTL = 86400000;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.buildNameSpacesByConnectResponse = buildNameSpacesByConnectResponse;\nexports.buildRequestAccountNameSpacesByConnectResponse = buildRequestAccountNameSpacesByConnectResponse;\nconst log_1 = require(\"../utils/log\");\nfunction buildNameSpacesByConnectResponse(connectResponse) {\n    let requestAccountNameSpaces = buildRequestAccountNameSpacesByConnectResponse(connectResponse);\n    return requestAccountNameSpaces;\n}\nfunction buildRequestAccountNameSpacesByConnectResponse(connectResponse) {\n    let result = {};\n    (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start connectResponse>>', JSON.stringify(connectResponse));\n    let universalResponse = connectResponse.payload.responses.find(item => item.name === 'requestAccounts');\n    const tonAddress = connectResponse.payload.responses.find(item => item.name === 'ton_addr');\n    const tonProof = connectResponse.payload.responses.find(item => item.name === 'ton_proof');\n    if (tonAddress && !universalResponse) { //adapt tonsdk\n        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse adapt ton data >>');\n        let address = tonAddress.address;\n        address = 'ton:' + tonAddress.network + \":\" + address;\n        let data = {\n            ton_addr: tonAddress\n        };\n        if (tonProof) {\n            data.ton_proof = tonProof;\n        }\n        universalResponse = {\n            name: \"requestAccounts\",\n            accounts: [{\n                    namespace: 'ton',\n                    addresses: [address],\n                    methods: ['ton_sendTransaction'],\n                    extra: {},\n                    data: data,\n                }]\n        };\n    }\n    (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse end universalResponse>>>', JSON.stringify(universalResponse));\n    universalResponse.accounts.forEach(item => {\n        var chains = [];\n        var accounts = [];\n        item.addresses.forEach(addressItem => {\n            var addressArr = addressItem.split(\":\");\n            (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse addressArr>>', addressArr.length);\n            if (addressArr.length >= 3) {\n                let chain = addressArr.slice(0, 2).join(\":\");\n                chains.push(chain);\n                accounts.push(addressItem);\n                (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse chain:>>', chain, \"addressItem:\", addressItem);\n            }\n        });\n        if (item.data && item.data.ton_addr) {\n            item.data.ton_addr.name = 'ton_addr';\n        }\n        if (item.data && item.data.ton_proof) {\n            item.data.ton_proof.name = 'ton_proof';\n        }\n        result[item.namespace] = {\n            chains: chains,\n            accounts: accounts,\n            methods: item.methods,\n            extra: item.extra,\n            payload: item.data\n        };\n        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse result>>', JSON.stringify(result));\n    });\n    return result;\n}\n/*export function buildTonNameSpaceByConnectResponse(connectResponse: ConnectResponseSuccess): Namespaces | undefined {\n    const tonAddrItem: TonAddressItemReply = connectResponse.payload.responses.find(\n        item => item.name === 'ton_addr'\n    ) as TonAddressItemReply;\n\n    const tonProfItem: TonProofItemReply = connectResponse.payload.responses.find(\n        item => item.name === 'ton_proof'\n    ) as TonProofItemReply;\n\n    if (!tonAddrItem) {\n        return undefined\n    }\n\n    return {\n        NameSpaceKeyTON: {\n            chains: [tonAddrItem.network],\n            accounts: [],\n            methods: connectResponse.payload.wallet.features?.ton,\n            payload: {\n                tonAccount: {\n                    address: tonAddrItem.address,\n                    chain: tonAddrItem.network,\n                    walletStateInit: tonAddrItem.walletStateInit,\n                    publicKey: tonAddrItem.publicKey\n                },\n                tonProof: tonProfItem\n            }\n        }\n    }\n}*/\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Storage = void 0;\nconst storageconstants_1 = require(\"./storageconstants\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst utils_1 = require(\"../utils/utils\");\nconst utils_2 = require(\"../utils\");\nconst log = __importStar(require(\"../utils/log\"));\nconst utils_3 = require(\"../utils\");\nconst crypto_js_1 = require(\"crypto-js\");\nclass Storage {\n    constructor(subKey, beforeKey = undefined) {\n        const localStorage = (0, utils_1.resolveLocalStorage)();\n        // 0. check and upgrade beforeKey\n        log.logDebug('------ update before cache ------');\n        if (beforeKey) {\n            this.checkAndUpgradeCache(beforeKey, subKey);\n        }\n        // 1. load data from local storage\n        this.storeKey = '';\n        this.cipherIV = '';\n        this.subKey = subKey;\n        log.logDebug('--------get current local storage --------');\n        log.logDebug(localStorage);\n        const cacheStr = localStorage.getItem(Storage.cacheKey + subKey);\n        if (typeof cacheStr === \"undefined\" || cacheStr === null) {\n            log.logDebug(\"with no cache\");\n            this.cache = {};\n            return;\n        }\n        log.logDebug(cacheStr);\n        if ((cacheStr === null || cacheStr === void 0 ? void 0 : cacheStr.length) > 0) {\n            var cacheObj = (0, utils_2.safeJsonParse)(cacheStr);\n            this.cache = cacheObj;\n        }\n        log.logDebug(`get cache obj: ${this.cache}`);\n        if (typeof this.cache === 'undefined' || this.cache == null) {\n            this.cache = {};\n        }\n    }\n    checkAndUpgradeCache(fromCacheKey, toCacheKey) {\n        if (fromCacheKey && fromCacheKey.length > 0 && toCacheKey && toCacheKey.length > 0) {\n            // 1. get all infos from from-cache-key\n            log.logDebug('--------get current local storage --------');\n            log.logDebug(localStorage);\n            const cacheStr = localStorage.getItem(Storage.cacheKey + fromCacheKey);\n            if (typeof cacheStr === \"undefined\" || cacheStr === null) {\n                log.logDebug(\"no pre cache content\");\n                return;\n            }\n            log.logDebug(cacheStr);\n            if ((cacheStr === null || cacheStr === void 0 ? void 0 : cacheStr.length) > 0) {\n                // 2. save to to-cache-key\n                log.logDebug(\"write in cache content: \", fromCacheKey, '->', toCacheKey);\n                localStorage.setItem(Storage.cacheKey + toCacheKey, cacheStr);\n                // 3. clean from item\n                log.logDebug(\"clean in cache content: \", fromCacheKey);\n                localStorage.removeItem(Storage.cacheKey + fromCacheKey);\n            }\n        }\n        else {\n            log.logDebug('no pre cache key:', fromCacheKey);\n        }\n    }\n    saveContent(content, key, id = '-') {\n        let item = {\n            id: id,\n            timestamp: Date.now().toString(),\n            content: content\n        };\n        this.saveItem(item, key);\n    }\n    saveItem(item, key) {\n        let localKey = Storage.cacheKey + this.subKey;\n        const localStorage = (0, utils_1.resolveLocalStorage)();\n        log.logDebug(this.cache);\n        log.logDebug(`get cache obj: ${this.cache}, ${key}, ${item}`);\n        this.cache[key] = item;\n        let totalCacheStr = (0, utils_2.safeJsonStringify)(this.cache);\n        log.logDebug(`STORAGE: ${key} @ ${this.cache}`);\n        localStorage.setItem(localKey, totalCacheStr);\n    }\n    getItem(key) {\n        log.logDebug(`STORAGE >> getItem: ${key} @ ${this.cache}`);\n        return this.cache[key];\n    }\n    getCachedPBKDF2InfoKey() {\n        var _a, _b, _c, _d;\n        const pwLen = 32;\n        const saltLen = 24;\n        if (this.storeKey.length > 0 && ((_a = this.cipherIV) === null || _a === void 0 ? void 0 : _a.length) > 0) {\n            return {\n                pw: this.storeKey,\n                iv: this.cipherIV\n            };\n        }\n        let salt = (_b = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGER_CRYPTO_SALT)) === null || _b === void 0 ? void 0 : _b.content;\n        if (!salt) {\n            salt = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(saltLen));\n            this.saveContent(salt, storageconstants_1.OKXCONNECTOR_STORAGER_CRYPTO_SALT);\n        }\n        let pw = (_c = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD)) === null || _c === void 0 ? void 0 : _c.content;\n        if (!pw) {\n            pw = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(pwLen));\n            this.saveContent(pw, storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD);\n        }\n        let cipherIV = (_d = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV)) === null || _d === void 0 ? void 0 : _d.content;\n        if (!cipherIV) {\n            // let ivBuffer = Buffer.from(nacl.randomBytes(16))\n            let ivBuffer = tweetnacl_1.default.randomBytes(16);\n            cipherIV = (0, utils_1.toHexString)(ivBuffer);\n            this.saveContent(cipherIV, storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV);\n        }\n        this.cipherIV = cipherIV;\n        this.storeKey = (0, crypto_js_1.PBKDF2)(pw, salt, { iterations: 10 }).toString();\n        return {\n            pw: this.storeKey,\n            iv: this.cipherIV\n        };\n    }\n    encryptStoreMsg(msg, key) {\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg start ${Date.now()}`);\n        let storeInfo = this.getCachedPBKDF2InfoKey();\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg mid ${Date.now()}`);\n        var result = crypto_js_1.AES.encrypt(msg, storeInfo.pw).toString();\n        this.saveContent(result, key);\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg end ${Date.now()}`);\n    }\n    getAndDecrypt(key) {\n        (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt start ${Date.now()}`);\n        let item = this.getItem(key);\n        if (item && item.content) {\n            let storeInfo = this.getCachedPBKDF2InfoKey();\n            (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt mid ${Date.now()}`);\n            let result = crypto_js_1.AES.decrypt(item.content, storeInfo.pw).toString(crypto_js_1.enc.Utf8);\n            (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt end ${Date.now()}`);\n            return result;\n        }\n        return null;\n    }\n    clearCache(key = undefined) {\n        if (key === undefined) {\n            // clean all\n            this.cache = {};\n            let localKey = Storage.cacheKey + this.subKey;\n            localStorage.setItem(localKey, '');\n        }\n        else {\n            let localKey = Storage.cacheKey + this.subKey;\n            const localStorage = (0, utils_1.resolveLocalStorage)();\n            log.logDebug(this.cache);\n            this.cache[key] = null;\n            let totalCacheStr = (0, utils_2.safeJsonStringify)(this.cache);\n            log.logDebug(`STORAGE: clean key ${key} @ ${this.cache}`);\n            localStorage.setItem(localKey, totalCacheStr);\n        }\n    }\n}\nexports.Storage = Storage;\nStorage.cacheKey = 'OKXStorageKey';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCONNECTOR_STORAGE_CIPHER_METHOD = exports.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV = exports.OKXCONNECTOR_STORAGER_CRYPTO_SALT = exports.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD = exports.OKXCONNECTOR_TON_KEY = exports.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE = exports.OKXCONNECTOR_TOKEN_CACHE = exports.OKXCONNECTOR_JWT_KEY = exports.OKXCONNECTOR_SESSION_PREFIX_KEY = exports.OKXCONNECTOR_CRYPTO_KEY = exports.OKXCONNECTOR_CACHE_KEY_DAPP = exports.OKXCONNECTOR_CACHE_KEY = void 0;\nexports.OKXCONNECTOR_CACHE_KEY = \"ck\";\nexports.OKXCONNECTOR_CACHE_KEY_DAPP = \"ck_dapp\";\nexports.OKXCONNECTOR_CRYPTO_KEY = \"cck_k\";\nexports.OKXCONNECTOR_SESSION_PREFIX_KEY = \"cspk_\";\nexports.OKXCONNECTOR_JWT_KEY = \"cjk_k\";\nexports.OKXCONNECTOR_TOKEN_CACHE = \"ct\";\nexports.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE = \"csp\";\nexports.OKXCONNECTOR_TON_KEY = \"OKXStorage_ctc\";\nexports.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD = \"scp\";\nexports.OKXCONNECTOR_STORAGER_CRYPTO_SALT = \"scs\";\nexports.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV = \"scpc\";\nexports.OKXCONNECTOR_STORAGE_CIPHER_METHOD = \"aes-256-cbc\";\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletConnectionManagerEvent = exports.WalletConnectionManagerTopicInfoCacheKey = void 0;\nexports.WalletConnectionManagerTopicInfoCacheKey = \"wcmtic\";\nexports.WalletConnectionManagerEvent = {\n    RECEIVE_REQUEST: \"payload\"\n};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletConnectionManager = void 0;\nconst connect_1 = require(\"./connect\");\nconst commands_1 = require(\"./commands\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst jwtconstants_1 = require(\"./jwtconstants\");\nconst constants_1 = require(\"./constants\");\nconst walletConnectionConstants_1 = require(\"./walletConnectionConstants\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils/utils\");\nconst crypto_1 = require(\"../crypto/crypto\");\nconst jwt_1 = require(\"./jwt\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst utils_2 = require(\"../utils\");\nclass WalletConnectionManager {\n    constructor() {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.communicateEvents = new eventemitter3_1.EventEmitter();\n        log.logDebug('connect manager construct');\n        // local storage\n        this.connectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n        // this.crypto = new SessionCrypto()\n        this.jwtKeyPair = this.getCachedJWTKeyPair();\n        this.saveJWTKeyPair(this.jwtKeyPair);\n        // wss connection\n        this.connector = new connect_1.OKXWalletConnector(constants_1.OKXCONNECTOR_WS_URL_1);\n        this.packageId = Date.now();\n        // connection state\n        this.sessionCryptoInfoMap = new Map();\n        // log.logDebug(`this.connectedWalletPK  constructor   ${this.connectedWalletPK}`)\n        this.inLogin = false;\n        this.isLogined = false;\n    }\n    refreshPackageId(offset = 0) {\n        this.packageId = Date.now() + offset;\n    }\n    saveCryptoKeyPair(topicId, keyPair) {\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(keyPair);\n        // encrypt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_CRYPTO_KEY + topicId);\n    }\n    getCachedCryptoKeyPair(topicId) {\n        // decrypt kp\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_CRYPTO_KEY + topicId);\n        const content = kp;\n        if (typeof content == 'string') {\n            log.logDebug('get cached crypto key:');\n            log.logDebug(content);\n            let keyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            return keyPairInfo;\n        }\n        else {\n            this.connectStorage.clearCache();\n        }\n        return null;\n    }\n    saveJWTKeyPair(keyPair) {\n        var strkeyPair = {\n            publicKey: (0, utils_1.toHexString)(keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(keyPair.secretKey)\n        };\n        log.logDebug('save jwt kp');\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(strkeyPair);\n        log.logDebug(cacheInfo);\n        // encrypt jwt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        log.logDebug('after save jwt kp');\n    }\n    getCachedJWTKeyPair() {\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            // TODO: decrypt jwt kp\n            log.logDebug('get cached jwt kp:');\n            log.logDebug(content);\n            let strKeyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            log.logDebug('save jwt kp');\n            log.logDebug(strKeyPairInfo);\n            var keyPair = {\n                publicKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.publicKey),\n                secretKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.secretKey)\n            };\n            return keyPair;\n        }\n        else {\n            return (0, jwt_1.generateKeyPair)();\n        }\n    }\n    isTopicPublicKeyExist(topicId) {\n        log.logDebug(`isTopicPublicKeyExist  ===> ${topicId}`);\n        return this.sessionCryptoInfoMap.get(topicId);\n    }\n    makeJWT(timestampStr) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, jwt_1.signJWT)(timestampStr, jwtconstants_1.OKXCONNECTOR_JWT_WALLET_SIDE, jwtconstants_1.OKXCONNECTOR_JWT_TTL, // 24h\n            this.jwtKeyPair);\n        });\n    }\n    parseInternalMsg(internalMsg) {\n        try {\n            let internalObj = (0, safejson_1.safeJsonParse)(internalMsg);\n            let origin = internalObj['ivur-igbfft-ptjip'];\n            if (origin && origin.length > 0) {\n                let originContent = (0, utils_2.base64decode)(origin, true);\n                return originContent.toString();\n            }\n        }\n        catch (error) {\n            log.logError('parse internal msg', error);\n        }\n    }\n    updateClientId(topic, clientId) {\n        let sessionInfo = this.sessionCryptoInfoMap.get(topic);\n        (0, log_1.logDebug)('updateClientId', sessionInfo, topic, clientId);\n        if (sessionInfo && clientId && clientId.length > 0) {\n            if (sessionInfo.cid) {\n                // check \n                let lastCheck = clientId.slice(-6);\n                if (sessionInfo.cid == lastCheck) {\n                    sessionInfo.dappPublicKey = clientId;\n                }\n                else {\n                    log.logError('cid check failed', sessionInfo, topic, clientId);\n                }\n            }\n            else {\n                sessionInfo.dappPublicKey = clientId;\n            }\n            // \n            this.syncCacheSessionInfo();\n        }\n        return false;\n    }\n    parsePackage(topic_1, input_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, input, ignoreACK = false) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;\n            this.events.emit(input.id, input);\n            // emit event\n            let sessionInfo = this.sessionCryptoInfoMap.get(topic);\n            log.logDebug('get sessionInfo for decrypt topic:', topic);\n            log.logDebug('get sessionInfo for decrypt:', input.id, topic, sessionInfo, this.sessionCryptoInfoMap);\n            if (sessionInfo && input.params.data) {\n                if ((_a = input.params.data) === null || _a === void 0 ? void 0 : _a.message) {\n                    // try parse internal message\n                    if ((_b = input.params.data) === null || _b === void 0 ? void 0 : _b.isInternalData) {\n                        let inner_message = (_c = input.params.data) === null || _c === void 0 ? void 0 : _c.message;\n                        let inner_topic = (_d = input.params.data) === null || _d === void 0 ? void 0 : _d.topic;\n                        let originContent = this.parseInternalMsg(inner_message);\n                        (0, log_1.logDebug)('parse internal origin: ', originContent);\n                        if (originContent && originContent.length > 0) {\n                            this.communicateEvents.emit(\"origin\", originContent, inner_topic);\n                        }\n                    }\n                    else {\n                        // try parse message base64\n                        try {\n                            let message = (_e = input.params.data) === null || _e === void 0 ? void 0 : _e.message;\n                            if (message.trimStart().startsWith('{')) {\n                                let messageObj = (0, safejson_1.safeJsonParse)(message);\n                                if (messageObj.method) {\n                                    if (messageObj.method == 'session_info') {\n                                        let sessionInfoString = messageObj.params.sessionInfo;\n                                        let base64Content = (0, utils_2.base64decode)(sessionInfoString, false);\n                                        (0, log_1.logDebug)(\"wallet connection manager requset base64Content:\", base64Content);\n                                        (0, log_1.logDebug)(\"base64Content:\" + base64Content);\n                                        let inner_connection = base64Content.toObject();\n                                        this.updateClientId(topic, inner_connection.clientId);\n                                    }\n                                    (0, log_1.logDebug)('<<< parse raw msg:', topic, messageObj);\n                                    this.communicateEvents.emit(topic, message);\n                                }\n                            }\n                            else {\n                                let message = sessionInfo.crypto.decryptWallet((_f = input.params.data) === null || _f === void 0 ? void 0 : _f.message, sessionInfo.dappPublicKey);\n                                (0, log_1.logDebug)('<<< receive msg:', topic, message);\n                                this.communicateEvents.emit(topic, message);\n                            }\n                        }\n                        catch (error) {\n                            let message = sessionInfo.crypto.decryptWallet((_g = input.params.data) === null || _g === void 0 ? void 0 : _g.message, sessionInfo.dappPublicKey);\n                            (0, log_1.logDebug)('<<< receive msg:', topic, message);\n                            this.communicateEvents.emit(topic, message);\n                        }\n                    }\n                }\n                else {\n                }\n            }\n            // send back ACK\n            if (!ignoreACK) {\n                yield this.sendACK(input.id, true);\n                if (topic) {\n                    let inputObj = input;\n                    if ((_j = (_h = inputObj.params) === null || _h === void 0 ? void 0 : _h.data) === null || _j === void 0 ? void 0 : _j.messageId) {\n                        this.refreshPackageId();\n                        yield this.sendReceive(this.packageId.toString(), (_l = (_k = inputObj.params) === null || _k === void 0 ? void 0 : _k.data) === null || _l === void 0 ? void 0 : _l.messageId, topic);\n                    }\n                }\n            }\n        });\n    }\n    recovrySessionInfoFromCache() {\n        // get topic ids and keys from session\n        // WalletConnectionCryptoCacheMap\n        // {[topicId]: {cryptoKeypair: {publicKey:string, secretKey:string}, dappPublicKey:clientId}}\n        let jsonStr = this.connectStorage.getAndDecrypt(walletConnectionConstants_1.WalletConnectionManagerTopicInfoCacheKey);\n        log.logDebug('get cached sessionInfos:', jsonStr);\n        if (jsonStr) {\n            let cacheMap = (0, safejson_1.safeJsonParse)(jsonStr);\n            for (let topicId in cacheMap) {\n                let topicItem = cacheMap[topicId];\n                log.logDebug('make topicItem:', topicItem);\n                let cryptoItem = {\n                    topic: topicId,\n                    crypto: new crypto_1.SessionCrypto({\n                        publicKey: topicItem.cryptoKeyPair.publicKey,\n                        secretKey: topicItem.cryptoKeyPair.secretKey\n                    }),\n                    dappPublicKey: topicItem.dappPublicKey,\n                    cid: topicItem.cid\n                };\n                this.sessionCryptoInfoMap.set(topicId, cryptoItem);\n            }\n        }\n        log.logDebug('get cached sessionInfos map:', this.sessionCryptoInfoMap);\n    }\n    syncCacheSessionInfo() {\n        let cacheMap = {};\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            log.logDebug('for each Keys', topicId);\n            if (cryptoItem) {\n                cacheMap[topicId] = {\n                    cryptoKeyPair: cryptoItem.crypto.stringifyKeypair(),\n                    dappPublicKey: cryptoItem.dappPublicKey,\n                    cid: cryptoItem.cid\n                };\n            }\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(cacheMap);\n        log.logDebug('sync cache sessionInfos:', jsonData);\n        this.connectStorage.encryptStoreMsg(jsonData, walletConnectionConstants_1.WalletConnectionManagerTopicInfoCacheKey);\n    }\n    cacheSessionInfo(topic, sessionInfo, sync = true) {\n        let dappPublicKey = sessionInfo.dappPublicKey;\n        // 1. search dapp public related topic ids\n        let duplicatedTopics = [];\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            log.logDebug('for each Keys', topicId);\n            if (cryptoItem.dappPublicKey == dappPublicKey) {\n                log.logDebug('duplicated dapp public key:', topicId, dappPublicKey);\n                duplicatedTopics.push(topicId);\n            }\n        }\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            if (duplicatedTopics.includes(topicId)) {\n                this.sessionCryptoInfoMap.delete(topicId);\n            }\n        }\n        // discard useless topics\n        log.logDebug('cleaned connect session cache:', this.sessionCryptoInfoMap);\n        // 2. remove previous connected topic ids\n        // 3. write in current topic\n        this.sessionCryptoInfoMap.set(topic, sessionInfo);\n        // TODO: search domain info and then delete \n        log.logDebug('cache sessionInfo:', topic, sessionInfo, this.sessionCryptoInfoMap);\n        if (sync) {\n            this.syncCacheSessionInfo();\n        }\n        return duplicatedTopics;\n    }\n    // add and subscribe topic\n    appendTopic(topic, sessionPublicKey, cid) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('4.1. get append Topic:', topic);\n            // 1. check if connected\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                if (!this.isLogined) {\n                    var error = new Error();\n                    error.message = \"connection is not logined\";\n                    error.name = \"append error\";\n                    // throw error\n                    reject(error);\n                    return;\n                }\n                // 2. subscribe topic and session public key\n                let cryptoItem = {\n                    topic: topic,\n                    crypto: new crypto_1.SessionCrypto(),\n                    dappPublicKey: sessionPublicKey ? sessionPublicKey : \"\",\n                    cid: cid\n                };\n                let duplicatedTopics = this.cacheSessionInfo(topic, cryptoItem, false);\n                // make sure cache session info before subscribe\n                yield this.subscribeTopics(Array.from([topic]));\n                this.refreshPackageId();\n                log.logDebug(`5. subscribe callback then fetch append message: ${this.packageId}, ${topic}`);\n                log.reportLog(`5. subscribe callback then fetch append message`);\n                const timeF = new Date().getTime();\n                (0, log_1.logDebug)(\"Append --subscribe callback->\", timeF - this.timeLog);\n                resolve(duplicatedTopics);\n            }));\n        });\n    }\n    confirmAppendingTopics() {\n        this.syncCacheSessionInfo();\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.timeLog = new Date().getTime();\n            (0, log_1.logDebug)(\"[Wallet] ConnectTime---enter->\", this.timeLog);\n            log.reportLog('wallet connect connect called');\n            // 0. get cached topics and infos\n            let timestampStr = Date.now().toString();\n            var jwtToken = yield this.makeJWT(timestampStr);\n            log.logDebug(`generate jwt token: ${jwtToken}`);\n            this.connectStorage.saveContent(jwtToken, 'jwt');\n            this.recovrySessionInfoFromCache();\n            // 1.\n            return new Promise((resolve, reject) => {\n                // 1. when websocket opened\n                this.inLogin = true;\n                this.connector.onOpen(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug(`1. connector on open`);\n                    log.reportLog('1. wallet connect connect on open');\n                    const timeOne = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---open->\", timeOne - this.timeLog);\n                    //2. send jwt to login\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when login');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // throw error\n                            reject(error);\n                        }\n                        else {\n                            this.isLogined = true;\n                            resolve();\n                            // 3. subscribe cached topics\n                            log.logDebug('3. subscribe cached topics', this.sessionCryptoInfoMap);\n                            log.reportLog('3. wallet connect connect subscribe cached topics');\n                            if (this.sessionCryptoInfoMap.size > 0) {\n                                yield this.subscribeTopics(Array.from(this.sessionCryptoInfoMap.keys()));\n                            }\n                        }\n                    }));\n                    log.logDebug(`2. login called`);\n                    log.reportLog('2. wallet connect login called');\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        return yield this.connector.connect();\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_LOGIN,\n                        params: {\n                            token: jwtToken\n                        }\n                    });\n                }));\n                this.connector.connect().catch((err) => {\n                    (0, log_1.logDebug)('WalletConnectionManager connect error', err);\n                    reject(err);\n                });\n                // add callback\n                this.connector.addPackageParse((event) => {\n                    var _a, _b;\n                    log.logDebug(`connect: parse package`);\n                    log.logDebug(event);\n                    if (!(\"params\" in event) || !(\"data\" in event[\"params\"])) {\n                        this.parsePackage(\"\", event, true);\n                        return;\n                    }\n                    // ignore receive echo\n                    if ((_a = event.params.data) === null || _a === void 0 ? void 0 : _a.topic) {\n                        this.parsePackage((_b = event.params.data) === null || _b === void 0 ? void 0 : _b.topic, event, event.method === commands_1.CONNECT_METHOD_RECEIVE);\n                    }\n                });\n                // this.connector.addListener(safeJsonStringify(event), (rawMsg: string)=> {\n                //    rawMsg = rawMsg.replace(/'/g, '\"')\n                //    log.logDebug(`addListener ===> ${rawMsg}`)\n                //    if (typeof rawMsg !== 'undefined') {\n                //       var msgObj = safeJsonParse(rawMsg)\n                //       var msg = msgObj.message\n                //       let crypto = \n                //       var result = this.crypto.decrypt(msg, this.connectedWalletPK)\n                //       log.logDebug(`addListener ===> ${result}`)\n                //       return result\n                //    }\n                //    return undefined\n                // }, ()=>{\n                //    // emit success\n                // }, ()=>{\n                //    // emit fail\n                // })\n            });\n        });\n    }\n    // 获取对应topic session下的钱包公钥\n    // 在返回approve时需要填充到clientId字段中\n    getSessionPublicKey(topicId) {\n        if (this.isTopicPublicKeyExist(topicId)) {\n            let item = this.sessionCryptoInfoMap.get(topicId);\n            if (item) {\n                return (0, utils_1.toHexString)(item.crypto.keyPair.publicKey);\n            }\n        }\n        return undefined;\n    }\n    getCurrentCachedTopicIdList() {\n        return Array.from(this.sessionCryptoInfoMap.keys());\n    }\n    disconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            yield this.connector.disconnect();\n            //clean cached topic\n            //如果是恢复连接，就不清理解密public key\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            if (!fromRestore) {\n                this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n            }\n        });\n    }\n    send(topic_1, msg_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, msg, needPublicKey = false, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL, useRaw = false) {\n            var _a, _b;\n            // make send msg payload\n            log.logDebug(`message send =====> ${msg}`);\n            if (!this.isTopicPublicKeyExist(topic)) {\n                // channel not ready\n                throw new Error('connection not finish');\n            }\n            let connectedDappPK = (_a = this.sessionCryptoInfoMap.get(topic)) === null || _a === void 0 ? void 0 : _a.dappPublicKey;\n            let cryptoObject = (_b = this.sessionCryptoInfoMap.get(topic)) === null || _b === void 0 ? void 0 : _b.crypto;\n            let messageObj = undefined;\n            if (useRaw) {\n                messageObj = {\n                    message: msg,\n                };\n            }\n            if (cryptoObject && connectedDappPK && !useRaw) {\n                let message = cryptoObject.encryptWallet(msg, connectedDappPK);\n                messageObj = {\n                    message: message,\n                };\n            }\n            if (messageObj) {\n                if (needPublicKey && cryptoObject) {\n                    messageObj.clientId = (0, utils_1.toHexString)(cryptoObject.keyPair.publicKey);\n                    // let privateKey = toHexString(cryptoObject.keyPair.secretKey)\n                    // log.logDebug(`message send use dapp publicKey =====> ${connectedDappPK}`)\n                    // log.logDebug(`message send use publicKey =====> ${messageObj.clientId}`)\n                    // log.logDebug(`message send use secretKey =====> ${privateKey}`)\n                }\n                this.refreshPackageId();\n                const payload = {\n                    id: this.packageId.toString(),\n                    method: commands_1.CONNECT_METHOD_PUBLISH,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    params: {\n                        message: {\n                            topic: topic,\n                            message: (0, safejson_1.safeJsonStringify)(messageObj),\n                            ttl: ttl\n                        }\n                    } // crypted\n                };\n                this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                    // ack\n                    if (rsp && rsp.error) {\n                        log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                    }\n                    else if (rsp && !rsp.error) {\n                        log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                    }\n                }));\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n                return this.packageId;\n            }\n        });\n    }\n    sendACK(msgId_1, success_1) {\n        return __awaiter(this, arguments, void 0, function* (msgId, success, reason = undefined) {\n            if (success === true) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    result: true\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n            else if (reason) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    error: {\n                        code: reason.code, //int\n                        message: reason.message\n                    }\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    // send receive\n    sendReceive(msgId, messageId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECEIVE,\n                params: {\n                    data: {\n                        messageId: messageId,\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendUnsubscribe(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO: make disconnect payload\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), {\n                id: this.packageId.toString(),\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_UNSUB,\n                params: {\n                    topic: topic\n                }\n            });\n            // remove topicId\n            this.sessionCryptoInfoMap.delete(topic);\n            this.syncCacheSessionInfo();\n        });\n    }\n    // send receive\n    // 1. fetch all \n    // 2. send back receive\n    // 3. check has more, if so, repeat from 1st step\n    sendFetchAndConsumeMessages(msgId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(msgId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic == topic) {\n                                let messageId = msg.messageId;\n                                yield this.connector.getMsgPayloadFromHistory(msg);\n                                // send receive command to relay server\n                                this.refreshPackageId();\n                                yield this.sendReceive(this.packageId.toString(), messageId, topic);\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_FETCHMSG,\n                params: {\n                    data: {\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendBatchFetchAndConsumeMessages(packageId, topicIdList) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(packageId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic) {\n                                let messageId = msg.messageId;\n                                yield this.connector.getMsgPayloadFromHistory(msg);\n                                // send receive command to relay server\n                                this.refreshPackageId(i);\n                                yield this.sendReceive(this.packageId.toString(), messageId, msg.topic);\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendBatchFetchAndConsumeMessages(this.packageId.toString(), topicIdList);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            log.reportLog('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: packageId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_BATCH_FETCHMSG,\n                params: {\n                    topics: topicIdList,\n                    withInternalData: true\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                yield this.connector.connect();\n            }), payload);\n        });\n    }\n    cleanCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.connectStorage.clearCache();\n        });\n    }\n    saveSessionContent(key, data) {\n        if (!data) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(data);\n        this.connectStorage.encryptStoreMsg(jsonData, storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n    }\n    getSessionContent(key) {\n        let jsonStr = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        if (jsonStr) {\n            let object = (0, safejson_1.safeJsonParse)(jsonStr);\n            return object;\n        }\n        return undefined;\n    }\n    // subscribe then fetch messages for each topics\n    subscribeTopics(topicIdList) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)(\"4. topicid list\", topicIdList);\n            log.reportLog(\"4. topicid list\");\n            this.refreshPackageId();\n            const timeF = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let finishCount = 0;\n                //3. send subscribe\n                for (let idx = 0; idx < topicIdList.length; ++idx) {\n                    let topicId = topicIdList[idx];\n                    this.refreshPackageId(idx);\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when subscribe');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // reject(error)\n                            finishCount += 1;\n                            if (finishCount == topicIdList.length) {\n                                resolve();\n                            }\n                        }\n                        this.refreshPackageId(idx);\n                        const timeF = new Date().getTime();\n                        (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n                        finishCount += 1;\n                        if (finishCount == topicIdList.length) {\n                            // 4. fetch messages\n                            log.logDebug(`5. send fetch msg: ${this.packageId}, ${topicId}`);\n                            yield this.sendBatchFetchAndConsumeMessages(this.packageId.toString(), topicIdList);\n                            resolve();\n                        }\n                    }));\n                    log.logDebug(`3. login callback then send subscribe: ${this.packageId}, ${topicId}`);\n                    log.reportLog('3. login callback then send subscribe');\n                    const timeTh = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---login callback->\", timeTh - this.timeLog);\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        return yield this.connector.connect();\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_SUB,\n                        params: {\n                            topic: topicId\n                        }\n                    });\n                }\n            }));\n        });\n    }\n}\nexports.WalletConnectionManager = WalletConnectionManager;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SessionCrypto = void 0;\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst utils_1 = require(\"../utils/utils\");\nclass SessionCrypto {\n    constructor(keyPair = undefined) {\n        this.nonceLength = 24;\n        this.sessionKeyPair = keyPair ? this.createKeypairFromString(keyPair) : this.createKeypair();\n    }\n    createKeypair() {\n        return tweetnacl_1.default.box.keyPair();\n    }\n    createKeypairFromString(keyPair) {\n        return {\n            publicKey: (0, utils_1.hexToByteArray)(keyPair.publicKey),\n            secretKey: (0, utils_1.hexToByteArray)(keyPair.secretKey),\n        };\n    }\n    createNonce() {\n        return tweetnacl_1.default.randomBytes(this.nonceLength);\n    }\n    get keyPair() {\n        return this.sessionKeyPair;\n    }\n    // dapp 加密:\n    // base64(hex（nonce+加密内容）)\n    encrypt(message, receiverPublicKey) {\n        const encodedMessage = new TextEncoder().encode(message);\n        const nonce = this.createNonce();\n        const encrypted = tweetnacl_1.default.box(encodedMessage, nonce, (0, utils_1.hexToByteArray)(receiverPublicKey), this.keyPair.secretKey);\n        let concatInfo = (0, utils_1.concatUint8Arrays)(nonce, encrypted);\n        var hexResult = (0, utils_1.toHexString)(concatInfo);\n        var encodedResult = new TextEncoder().encode(hexResult);\n        return (0, utils_1.base64encode)(encodedResult, false);\n    }\n    // 钱包加密内容\n    // 注意：没有中间hex的环节\n    // base64（nonce+加密内容)\n    encryptWallet(message, receiverPublicKey) {\n        const encodedMessage = new TextEncoder().encode(message);\n        const nonce = this.createNonce();\n        const encrypted = tweetnacl_1.default.box(encodedMessage, nonce, (0, utils_1.hexToByteArray)(receiverPublicKey), this.keyPair.secretKey);\n        let concatInfo = (0, utils_1.concatUint8Arrays)(nonce, encrypted);\n        return (0, utils_1.base64encode)(concatInfo, false);\n    }\n    // dapp 解密\n    // base64(split(nonce+加密内容))\n    decrypt(message, senderPublicKey) {\n        let base64Content = (0, utils_1.base64decode)(message, true);\n        let messageByteArray = base64Content.toUint8Array();\n        const [nonce, internalMessage] = (0, utils_1.splitToUint8Arrays)(messageByteArray, this.nonceLength);\n        const decrypted = tweetnacl_1.default.box.open(internalMessage, nonce, (0, utils_1.hexToByteArray)(senderPublicKey), this.keyPair.secretKey);\n        if (!decrypted) {\n            throw new Error(`Decryption error: \\n message: ${message.toString()} \\n sender pubkey: ${senderPublicKey.toString()} \\n keypair pubkey: ${(0, utils_1.toHexString)(this.keyPair.publicKey)} \\n keypair secretkey: ${(0, utils_1.toHexString)(this.keyPair.secretKey)}`);\n        }\n        return new TextDecoder().decode(decrypted);\n    }\n    // dapp 解密\n    // base64(hextoByte(split(nonce+加密内容)))\n    decryptWallet(message, senderPublicKey) {\n        let base64Content = (0, utils_1.base64decode)(message, true);\n        let messageByteArray = (0, utils_1.hexToByteArray)(base64Content.toString());\n        const [nonce, internalMessage] = (0, utils_1.splitToUint8Arrays)(messageByteArray, this.nonceLength);\n        const decrypted = tweetnacl_1.default.box.open(internalMessage, nonce, (0, utils_1.hexToByteArray)(senderPublicKey), this.keyPair.secretKey);\n        if (!decrypted) {\n            throw new Error(`Decryption error: \\n message: ${message.toString()} \\n sender pubkey: ${senderPublicKey.toString()} \\n keypair pubkey: ${(0, utils_1.toHexString)(this.keyPair.publicKey)} \\n keypair secretkey: ${(0, utils_1.toHexString)(this.keyPair.secretKey)}`);\n        }\n        return new TextDecoder().decode(decrypted);\n    }\n    stringifyKeypair() {\n        return {\n            publicKey: (0, utils_1.toHexString)(this.keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(this.keyPair.secretKey)\n        };\n    }\n}\nexports.SessionCrypto = SessionCrypto;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./connect\"), exports);\n__exportStar(require(\"./protocol\"), exports);\n__exportStar(require(\"./utils\"), exports);\n__exportStar(require(\"./inject\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InjectEngine = void 0;\nconst protocol_1 = require(\"../protocol\");\nconst utils_1 = require(\"../utils\");\nconst provider_1 = require(\"../inject/provider\");\nclass InjectEngine {\n    constructor(pendingRequests) {\n        this.eip155Pro = new provider_1.Eip155Provider();\n        this.disconnectListener = [];\n        this.pendingRequests = pendingRequests;\n    }\n    connect(universalConnectRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, utils_1.logDebug)(\"InjectEngine connect begin:\", JSON.stringify(universalConnectRequest));\n            try {\n                if (window && window.okxwallet) {\n                    if (universalConnectRequest.requests) {\n                        let requestAccounts = universalConnectRequest.requests\n                            .find(item => item.name === \"requestAccounts\");\n                        let eip155 = undefined;\n                        if (requestAccounts.requiredNamespaces) {\n                            eip155 = requestAccounts.requiredNamespaces.find(nameSpace => {\n                                return nameSpace.namespace === \"eip155\";\n                            });\n                        }\n                        if (!eip155 && requestAccounts.optionalNamespaces) { //\n                            eip155 = requestAccounts.optionalNamespaces.find(nameSpace => {\n                                return nameSpace.namespace === \"eip155\";\n                            });\n                        }\n                        let result = {\n                            method: \"connect\",\n                            requestId: universalConnectRequest.requestId,\n                            payload: {\n                                wallet: {\n                                    platform: \"ios\",\n                                    \"appName\": \"OKX Wallet\",\n                                    \"appVersion\": \"6.96.1\",\n                                    \"maxProtocolVersion\": 1,\n                                    \"features\": {\n                                        \"ton\": [\n                                            \"ton_sendTransaction\"\n                                        ]\n                                    }\n                                },\n                                responses: []\n                            },\n                        };\n                        let responseItem = {\n                            name: \"requestAccounts\",\n                            accounts: [],\n                        };\n                        result.payload.responses.push(responseItem);\n                        if (eip155) {\n                            let connectInfo = yield window.okxwallet.request({ method: 'eth_requestAccounts' });\n                            (0, utils_1.logDebug)(\"InjectEngine connect connectInfo:\", JSON.stringify(connectInfo));\n                            // [\"0x0c86e2236d906306c3285b0007687def48dde6a2\"]\n                            let walletInfo = yield window.okxwallet.requestWallets();\n                            let walletInfoFirst = walletInfo[0];\n                            // logDebug(\"InjectEngine connect walletInfo:\",JSON.stringify(walletInfo))\n                            let connectAccounts = [];\n                            (0, utils_1.logDebug)(\"InjectEngine connect connectAccounts:\", JSON.stringify(walletInfoFirst));\n                            if (walletInfoFirst && walletInfoFirst.address) {\n                                (0, utils_1.logDebug)(\"InjectEngine connect eip155:\", JSON.stringify(eip155));\n                                for (let i = 0; i < eip155.chains.length; i++) {\n                                    let chainId = eip155.chains[i];\n                                    (0, utils_1.logDebug)(\"InjectEngine connect eip155.chains:\", chainId);\n                                    let idNum = chainId.split(\":\")[1];\n                                    let wallet = walletInfoFirst.address.find(info => {\n                                        (0, utils_1.logDebug)(\"InjectEngine connect walletInfo:\", info.chainId, idNum, info.chainId === idNum, JSON.stringify(info));\n                                        return info.chainId === idNum;\n                                    });\n                                    (0, utils_1.logDebug)(\"InjectEngine connect wallet:\", JSON.stringify(wallet));\n                                    if (wallet) {\n                                        connectAccounts.push(chainId + \":\" + wallet.address);\n                                    }\n                                }\n                                if (connectAccounts.length === 0) {\n                                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"connect connectAccounts is null\");\n                                }\n                            }\n                            else {\n                                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"connect requestWallets is null\");\n                            }\n                            (0, utils_1.logDebug)(\"InjectEngine connect connectAccounts:\", JSON.stringify(connectAccounts));\n                            let eip155Account = {\n                                namespace: \"eip155\",\n                                methods: [\"personal_sign\", \"eth_signTypedData_v4\", \"eth_sendTransaction\", \"wallet_addEthereumChain\", \"wallet_watchAsset\", \"wallet_switchEthereumChain\"],\n                                addresses: connectAccounts,\n                                extra: {}\n                            };\n                            if (eip155Account) {\n                                responseItem.accounts.push(eip155Account);\n                            }\n                        }\n                        return result;\n                    }\n                    // window.okxwallet.requestWallets(true).then(result =>{\n                    //     logDebug(\"requestWallets ====>\",JSON.stringify(result))\n                    // })\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR);\n                }\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n    getRequestId() {\n        const requestId = Date.now().toString();\n        (0, utils_1.logDebug)('InjectEngine ==>> getRequestId ==>', requestId);\n        return requestId;\n    }\n    bindRequestForPromise(requestId, resolve) {\n        this.pendingRequests.set(requestId, resolve);\n    }\n    send(request, requestAnswer) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, utils_1.logDebug)(\"InjectEngine send request:\", JSON.stringify(request));\n            let newRequest = request;\n            const requestId = this.getRequestId();\n            if (requestAnswer.resolve) {\n                this.bindRequestForPromise(requestId, requestAnswer.resolve);\n            }\n            if (newRequest.chainId.includes(\"eip155\")) {\n                let result = yield this.eip155Pro.send(newRequest, requestAnswer, requestId);\n                const resolve = this.pendingRequests.get(requestId);\n                if (resolve) {\n                    (0, utils_1.logDebug)(\"Engine ==>> handleResponse_3  ===> find resolve:\", resolve);\n                    resolve(result);\n                    this.pendingRequests.delete(requestId);\n                    return;\n                }\n            }\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED);\n        });\n    }\n    disconnect() {\n        this.pendingRequests.clear();\n    }\n    addDisconnectListener(disconnecter) {\n        this.disconnectListener.push(disconnecter);\n    }\n}\nexports.InjectEngine = InjectEngine;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hasOKXInjectedProvider = hasOKXInjectedProvider;\nfunction hasOKXInjectedProvider() {\n    if (typeof getWindowProviderNamespace(\"okxwallet\") !== 'undefined') {\n        return true;\n    }\n    return false;\n}\nfunction getWindowProviderNamespace(namespace) {\n    const providerSearch = (provider, namespace) => {\n        const [property, ...path] = namespace.split('.');\n        const _provider = provider[property];\n        if (_provider) {\n            if (path.length === 0)\n                return _provider;\n            return providerSearch(_provider, path.join('.'));\n        }\n    };\n    if (typeof window !== 'undefined')\n        return providerSearch(window, namespace);\n}\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InjectEngine = void 0;\nvar InjectEngine_1 = require(\"./InjectEngine\");\nObject.defineProperty(exports, \"InjectEngine\", { enumerable: true, get: function () { return InjectEngine_1.InjectEngine; } });\n__exportStar(require(\"./InjectUtils\"), exports);\n__exportStar(require(\"./provider\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Eip155Provider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nclass Eip155Provider {\n    send(request, requestAnswer, requestId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, utils_1.logDebug)(\"InjectEngine send request:\", JSON.stringify(request));\n            //    }else if (args.method === 'personal_sign'\n            // || args.method === 'eth_signTypedData_v4'\n            // || args.method === 'eth_sendTransaction'\n            // || args.method === 'wallet_watchAsset'){\n            if (request.method === \"personal_sign\") {\n                if (request.params && \"message\" in request.params) {\n                    let resultMe = yield window.okxwallet.request({\n                        method: request.method,\n                        params: [\n                            request.params.message,\n                            request.address,\n                        ]\n                    });\n                    (0, utils_1.logDebug)(\"InjectEngine send result:\", JSON.stringify(resultMe));\n                    return {\n                        result: resultMe,\n                        method: \"personal_sign\",\n                        requestId: requestId\n                    };\n                }\n            }\n            else if (request.method === \"eth_sendTransaction\") {\n                if (request.params) {\n                    let resultMe = yield window.okxwallet.request({\n                        method: request.method,\n                        params: [request.params]\n                    });\n                    (0, utils_1.logDebug)(\"InjectEngine send result:\", JSON.stringify(resultMe));\n                    return {\n                        result: resultMe,\n                        method: request.method,\n                        requestId: requestId\n                    };\n                }\n            }\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED);\n        });\n    }\n}\nexports.Eip155Provider = Eip155Provider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./eip155Provider\"), exports);\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IEngine = exports.ISignClient = exports.ISignClientEvents = exports.IEngineEvents = void 0;\nconst eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\nclass IEngineEvents extends eventemitter3_1.default {\n    constructor() {\n        super();\n    }\n}\nexports.IEngineEvents = IEngineEvents;\nclass ISignClientEvents extends eventemitter3_1.default {\n    constructor() {\n        super();\n    }\n}\nexports.ISignClientEvents = ISignClientEvents;\nclass ISignClient {\n    constructor(data) {\n        this.data = data;\n    }\n}\nexports.ISignClient = ISignClient;\nclass IEngine {\n    constructor(client) {\n        this.client = client;\n    }\n}\nexports.IEngine = IEngine;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.creatOKXMiniAppWalletInfo = exports.creatOKXWalletInfo = exports.ISignClientEvents = exports.IEngine = exports.IEngineEvents = exports.ISignClient = exports.getBigIntRpcId = exports.formatJsonRpcRequest = exports.isJsonRpcError = exports.isJsonRpcResponse = exports.parseConnectionError = exports.isHttpUrl = exports.formatJsonRpcError = void 0;\nvar json_rpc_1 = require(\"./json-rpc\");\nObject.defineProperty(exports, \"formatJsonRpcError\", { enumerable: true, get: function () { return json_rpc_1.formatJsonRpcError; } });\nObject.defineProperty(exports, \"isHttpUrl\", { enumerable: true, get: function () { return json_rpc_1.isHttpUrl; } });\nObject.defineProperty(exports, \"parseConnectionError\", { enumerable: true, get: function () { return json_rpc_1.parseConnectionError; } });\nObject.defineProperty(exports, \"isJsonRpcResponse\", { enumerable: true, get: function () { return json_rpc_1.isJsonRpcResponse; } });\nObject.defineProperty(exports, \"isJsonRpcError\", { enumerable: true, get: function () { return json_rpc_1.isJsonRpcError; } });\nObject.defineProperty(exports, \"formatJsonRpcRequest\", { enumerable: true, get: function () { return json_rpc_1.formatJsonRpcRequest; } });\nObject.defineProperty(exports, \"getBigIntRpcId\", { enumerable: true, get: function () { return json_rpc_1.getBigIntRpcId; } });\nvar engine_1 = require(\"./engine\");\nObject.defineProperty(exports, \"ISignClient\", { enumerable: true, get: function () { return engine_1.ISignClient; } });\nObject.defineProperty(exports, \"IEngineEvents\", { enumerable: true, get: function () { return engine_1.IEngineEvents; } });\nObject.defineProperty(exports, \"IEngine\", { enumerable: true, get: function () { return engine_1.IEngine; } });\nObject.defineProperty(exports, \"ISignClientEvents\", { enumerable: true, get: function () { return engine_1.ISignClientEvents; } });\n__exportStar(require(\"./ton\"), exports);\nvar wallet_info_1 = require(\"./wallet-info\");\nObject.defineProperty(exports, \"creatOKXWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXWalletInfo; } });\nObject.defineProperty(exports, \"creatOKXMiniAppWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXMiniAppWalletInfo; } });\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isJsonRpcPayload = isJsonRpcPayload;\nexports.isJsonRpcRequest = isJsonRpcRequest;\nexports.isJsonRpcResponse = isJsonRpcResponse;\nexports.isJsonRpcResult = isJsonRpcResult;\nexports.isJsonRpcError = isJsonRpcError;\nexports.payloadId = payloadId;\nexports.getBigIntRpcId = getBigIntRpcId;\nexports.formatJsonRpcRequest = formatJsonRpcRequest;\nexports.formatJsonRpcResult = formatJsonRpcResult;\nexports.formatJsonRpcError = formatJsonRpcError;\nexports.isReservedErrorCode = isReservedErrorCode;\nexports.getError = getError;\nexports.getErrorByCode = getErrorByCode;\nexports.formatErrorMessage = formatErrorMessage;\nexports.isHttpUrl = isHttpUrl;\nexports.isWsUrl = isWsUrl;\nexports.parseConnectionError = parseConnectionError;\nfunction isJsonRpcPayload(payload) {\n    return (typeof payload === \"object\" &&\n        \"id\" in payload &&\n        \"jsonrpc\" in payload &&\n        payload.jsonrpc === \"2.0\");\n}\nfunction isJsonRpcRequest(payload) {\n    return isJsonRpcPayload(payload) && \"method\" in payload;\n}\nfunction isJsonRpcResponse(payload) {\n    return isJsonRpcPayload(payload) && (isJsonRpcResult(payload) || isJsonRpcError(payload));\n}\nfunction isJsonRpcResult(payload) {\n    return \"result\" in payload;\n}\nfunction isJsonRpcError(payload) {\n    return \"error\" in payload;\n}\nconst okx_connect_error_1 = require(\"../error/okx-connect.error\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nclass IncrementalRandomGenerator {\n    constructor(bits) {\n        this.i = 1;\n        const typedArray = bits === 8 ? new Uint8Array(1) : bits === 16 ? new Uint16Array(1) : new Uint32Array(1);\n        if (bits) {\n            this.initialValue = tweetnacl_1.default.randomBytes(bits / 8)[0];\n        }\n        else {\n            this.initialValue = 0;\n        }\n    }\n    getNextValue() {\n        return this.initialValue + this.i++;\n    }\n}\nconst uint8Generator = new IncrementalRandomGenerator(8);\nconst uint16Generator = new IncrementalRandomGenerator(16);\nfunction payloadId() {\n    const date = Date.now() * 1000;\n    const extra = uint8Generator.getNextValue();\n    return date + extra;\n}\nfunction getBigIntRpcId() {\n    const date = BigInt(Date.now()) * BigInt(1000000);\n    const extra = BigInt(uint16Generator.getNextValue());\n    return date + extra;\n}\nfunction formatJsonRpcRequest(method, params, id) {\n    return {\n        id: id || payloadId(),\n        jsonrpc: \"2.0\",\n        method,\n        params,\n    };\n}\nfunction formatJsonRpcResult(id, result) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        result,\n    };\n}\nfunction formatJsonRpcError(id, error, data) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        error: formatErrorMessage(error, data),\n    };\n}\nfunction isReservedErrorCode(code) {\n    return okx_connect_error_1.RESERVED_ERROR_CODES.includes(code);\n}\nfunction getError(type) {\n    if (!Object.keys(okx_connect_error_1.STANDARD_ERROR_MAP).includes(type)) {\n        return okx_connect_error_1.STANDARD_ERROR_MAP[okx_connect_error_1.DEFAULT_ERROR];\n    }\n    return okx_connect_error_1.STANDARD_ERROR_MAP[type];\n}\nfunction getErrorByCode(code) {\n    const match = Object.values(okx_connect_error_1.STANDARD_ERROR_MAP).find((e) => e.code === code);\n    if (!match) {\n        return okx_connect_error_1.STANDARD_ERROR_MAP[okx_connect_error_1.DEFAULT_ERROR];\n    }\n    return match;\n}\nfunction formatErrorMessage(error, data) {\n    if (typeof error === \"undefined\") {\n        return getError(okx_connect_error_1.INTERNAL_ERROR);\n    }\n    if (typeof error === \"string\") {\n        error = Object.assign(Object.assign({}, getError(okx_connect_error_1.SERVER_ERROR)), { message: error });\n    }\n    if (typeof data !== \"undefined\") {\n        error.data = data;\n    }\n    if (isReservedErrorCode(error.code)) {\n        error = getErrorByCode(error.code);\n    }\n    return error;\n}\nfunction getUrlProtocol(url) {\n    const matches = url.match(new RegExp(/^\\w+:/, \"gi\"));\n    if (!matches || !matches.length)\n        return;\n    return matches[0];\n}\nfunction matchRegexProtocol(url, regex) {\n    const protocol = getUrlProtocol(url);\n    if (typeof protocol === \"undefined\")\n        return false;\n    return new RegExp(regex).test(protocol);\n}\nfunction isHttpUrl(url) {\n    return matchRegexProtocol(url, \"^https?:\");\n}\nfunction isWsUrl(url) {\n    return matchRegexProtocol(url, \"^wss?:\");\n}\nfunction parseConnectionError(e, url, type) {\n    return e.message.includes(\"getaddrinfo ENOTFOUND\") || e.message.includes(\"connect ECONNREFUSED\")\n        ? new Error(`Unavailable ${type} RPC url at ${url}`)\n        : e;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_ITEM_ERROR_CODES = void 0;\nvar CONNECT_ITEM_ERROR_CODES;\n(function (CONNECT_ITEM_ERROR_CODES) {\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n})(CONNECT_ITEM_ERROR_CODES || (exports.CONNECT_ITEM_ERROR_CODES = CONNECT_ITEM_ERROR_CODES = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TONCHAIN = void 0;\nvar TONCHAIN;\n(function (TONCHAIN) {\n    TONCHAIN[\"MAINNET\"] = \"-239\";\n})(TONCHAIN || (exports.TONCHAIN = TONCHAIN = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_ITEM_ERROR_CODES = exports.TONCHAIN = void 0;\nvar connect_wallet_1 = require(\"./connect-wallet\");\nObject.defineProperty(exports, \"TONCHAIN\", { enumerable: true, get: function () { return connect_wallet_1.TONCHAIN; } });\nvar connect_event_1 = require(\"./connect-event\");\nObject.defineProperty(exports, \"CONNECT_ITEM_ERROR_CODES\", { enumerable: true, get: function () { return connect_event_1.CONNECT_ITEM_ERROR_CODES; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.creatOKXWalletInfo = creatOKXWalletInfo;\nexports.creatOKXMiniAppWalletInfo = creatOKXMiniAppWalletInfo;\nconst constants_1 = require(\"../constants\");\nfunction creatOKXWalletInfo() {\n    return {\n        \"appName\": \"okxAppWallet\",\n        \"name\": \"OKX Wallet\",\n        \"imageUrl\": \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\",\n        \"aboutUrl\": constants_1.downloadUrl,\n        \"universalLink\": constants_1.standardUniversalLink,\n        \"deepLink\": constants_1.standardDeeplink,\n        \"platforms\": [\"ios\", \"android\"]\n    };\n}\nfunction creatOKXMiniAppWalletInfo() {\n    return {\n        \"appName\": \"okxMiniApp\",\n        \"name\": \"OKX Mini Wallet\",\n        \"imageUrl\": \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\",\n        \"aboutUrl\": constants_1.downloadUrl,\n        \"universalLink\": `https://t.me/${constants_1.tgwalletName}/start`,\n        \"deepLink\": \"\",\n        \"platforms\": [\"ios\", \"android\", 'macos', 'windows']\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.tgwalletAppName = exports.tgwalletName = exports.tonConnectSdkVersion = exports.shortUniversalLink = exports.standardDeeplink = exports.downloadUrl = exports.standardUniversalLink = exports.okxDeeplink = void 0;\nexports.okxDeeplink = 'okx://web3';\nexports.standardUniversalLink = typeof window !== \"undefined\" && window.location.hostname.includes(\"okx.com\")\n    ? \"https://link.okx.com/download\"\n    : \"https://www.okx.com/download\";\nexports.downloadUrl = \"https://www.okx.com/download\";\n// export const standardUniversalLink = 'http://localhost:5173';\nexports.standardDeeplink = `${exports.okxDeeplink}/wallet/connect`;\nexports.shortUniversalLink = `https://www.okx.com/ul/connect`;\n// export const standardDeeplink = 'http://localhost:5173';\nexports.tonConnectSdkVersion = '1';\n// export const tgwalletName: string = \"TCTestqdqwdqwdqBot\"\nexports.tgwalletName = \"OKX_WALLET_BOT\";\nexports.tgwalletAppName = \"start\";\n// https://t.me/OKX_WALLET_BOT/start\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_CONNECT_ERROR_CODES = exports.OKXConnectError = void 0;\nvar okx_connect_error_1 = require(\"./okx-connect.error\");\nObject.defineProperty(exports, \"OKXConnectError\", { enumerable: true, get: function () { return okx_connect_error_1.OKXConnectError; } });\nObject.defineProperty(exports, \"OKX_CONNECT_ERROR_CODES\", { enumerable: true, get: function () { return okx_connect_error_1.OKX_CONNECT_ERROR_CODES; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEFAULT_ERROR = exports.STANDARD_ERROR_MAP = exports.SERVER_ERROR_CODE_RANGE = exports.RESERVED_ERROR_CODES = exports.SERVER_ERROR = exports.INTERNAL_ERROR = exports.INVALID_PARAMS = exports.METHOD_NOT_FOUND = exports.INVALID_REQUEST = exports.PARSE_ERROR = exports.OKX_CONNECT_ERROR_CODES = exports.OKXConnectError = void 0;\nclass OKXConnectError extends Error {\n    constructor(code, message) {\n        if (message == undefined) {\n            message = getDefaultMessageByCode(code);\n        }\n        super(message);\n        this.code = code;\n        this.message = `${OKXConnectError.prefix} ${message ? '\\n' + message : ''}`;\n        Object.setPrototypeOf(this, OKXConnectError.prototype);\n    }\n    toJSON() {\n        return {\n            message: this.message,\n            code: this.code\n        };\n    }\n}\nexports.OKXConnectError = OKXConnectError;\nOKXConnectError.prefix = '[OKX_CONNECT_SDK_ERROR]';\nfunction getDefaultMessageByCode(code) {\n    if (code == OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR) {\n        return \"unknown error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR) {\n        return \"bad request error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.ALREADY_CONNECTED_ERROR) {\n        return \"already connected error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR) {\n        return \"not connected error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.UNKNOWN_APP_ERROR) {\n        return \"unknown app error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n        return \"user rejects error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED) {\n        return \"method not supported\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.CONNECTION_ERROR) {\n        return \"connect error\";\n    }\n    return \"unknown error\";\n}\nvar OKX_CONNECT_ERROR_CODES;\n(function (OKX_CONNECT_ERROR_CODES) {\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"BAD_REQUEST_ERROR\"] = 1] = \"BAD_REQUEST_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"ALREADY_CONNECTED_ERROR\"] = 11] = \"ALREADY_CONNECTED_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"NOT_CONNECTED_ERROR\"] = 12] = \"NOT_CONNECTED_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"UNKNOWN_APP_ERROR\"] = 100] = \"UNKNOWN_APP_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"USER_REJECTS_ERROR\"] = 300] = \"USER_REJECTS_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"CHAIN_NOT_SUPPORTED\"] = 500] = \"CHAIN_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"WALLET_NOT_SUPPORTED\"] = 600] = \"WALLET_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"CONNECTION_ERROR\"] = 700] = \"CONNECTION_ERROR\";\n})(OKX_CONNECT_ERROR_CODES || (exports.OKX_CONNECT_ERROR_CODES = OKX_CONNECT_ERROR_CODES = {}));\nexports.PARSE_ERROR = \"PARSE_ERROR\";\nexports.INVALID_REQUEST = \"INVALID_REQUEST\";\nexports.METHOD_NOT_FOUND = \"METHOD_NOT_FOUND\";\nexports.INVALID_PARAMS = \"INVALID_PARAMS\";\nexports.INTERNAL_ERROR = \"INTERNAL_ERROR\";\nexports.SERVER_ERROR = \"SERVER_ERROR\";\nexports.RESERVED_ERROR_CODES = [-32700, -32600, -32601, -32602, -32603];\nexports.SERVER_ERROR_CODE_RANGE = [-32000, -32099];\nexports.STANDARD_ERROR_MAP = {\n    [exports.PARSE_ERROR]: { code: -32700, message: \"Parse error\" },\n    [exports.INVALID_REQUEST]: { code: -32600, message: \"Invalid Request\" },\n    [exports.METHOD_NOT_FOUND]: { code: -32601, message: \"Method not found\" },\n    [exports.INVALID_PARAMS]: { code: -32602, message: \"Invalid params\" },\n    [exports.INTERNAL_ERROR]: { code: -32603, message: \"Internal error\" },\n    [exports.SERVER_ERROR]: { code: -32000, message: \"Server error\" },\n};\nexports.DEFAULT_ERROR = exports.SERVER_ERROR;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.downloadUrl = exports.okxDeeplink = exports.tonConnectSdkVersion = exports.standardDeeplink = exports.standardUniversalLink = exports.NameSpaceKeyTron = exports.NameSpaceKeyCosmos = exports.NameSpaceKeyAptos = exports.NameSpaceKeyBtc = exports.NameSpaceKeySui = exports.NameSpaceKeyTON = exports.NameSpaceKeySOL = exports.NameSpaceKeyEip155 = void 0;\n__exportStar(require(\"./error\"), exports);\nvar misc_1 = require(\"./misc\");\nObject.defineProperty(exports, \"NameSpaceKeyEip155\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyEip155; } });\nObject.defineProperty(exports, \"NameSpaceKeySOL\", { enumerable: true, get: function () { return misc_1.NameSpaceKeySOL; } });\nObject.defineProperty(exports, \"NameSpaceKeyTON\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyTON; } });\nObject.defineProperty(exports, \"NameSpaceKeySui\", { enumerable: true, get: function () { return misc_1.NameSpaceKeySui; } });\nObject.defineProperty(exports, \"NameSpaceKeyBtc\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyBtc; } });\nObject.defineProperty(exports, \"NameSpaceKeyAptos\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyAptos; } });\nObject.defineProperty(exports, \"NameSpaceKeyCosmos\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyCosmos; } });\nObject.defineProperty(exports, \"NameSpaceKeyTron\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyTron; } });\nvar constants_1 = require(\"./constants\");\nObject.defineProperty(exports, \"standardUniversalLink\", { enumerable: true, get: function () { return constants_1.standardUniversalLink; } });\nObject.defineProperty(exports, \"standardDeeplink\", { enumerable: true, get: function () { return constants_1.standardDeeplink; } });\nObject.defineProperty(exports, \"tonConnectSdkVersion\", { enumerable: true, get: function () { return constants_1.tonConnectSdkVersion; } });\nObject.defineProperty(exports, \"okxDeeplink\", { enumerable: true, get: function () { return constants_1.okxDeeplink; } });\nObject.defineProperty(exports, \"downloadUrl\", { enumerable: true, get: function () { return constants_1.downloadUrl; } });\n__exportStar(require(\"./connect\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NameSpaceKeyTron = exports.NameSpaceKeyCosmos = exports.NameSpaceKeyAptos = exports.NameSpaceKeyBtc = exports.NameSpaceKeySui = exports.NameSpaceKeyTON = exports.NameSpaceKeySOL = exports.NameSpaceKeyEip155 = void 0;\nexports.NameSpaceKeyEip155 = \"eip155\";\nexports.NameSpaceKeySOL = \"solana\";\nexports.NameSpaceKeyTON = \"ton\";\nexports.NameSpaceKeySui = \"sui\";\nexports.NameSpaceKeyBtc = \"btc\";\nexports.NameSpaceKeyAptos = \"aptos\";\nexports.NameSpaceKeyCosmos = \"cosmos\";\nexports.NameSpaceKeyTron = \"tron\";\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.callForSuccess = callForSuccess;\nexports.delay = delay;\n/**\n * Function to call ton api until we get response.\n * Because ton network is pretty unstable we need to make sure response is final.\n * @param {T} fn - function to call\n * @param {CallForSuccessOptions} [options] - optional configuration options\n */\nfunction callForSuccess(fn, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b;\n        const attempts = (_a = options === null || options === void 0 ? void 0 : options.attempts) !== null && _a !== void 0 ? _a : 3;\n        const delayMs = (_b = options === null || options === void 0 ? void 0 : options.delayMs) !== null && _b !== void 0 ? _b : 800;\n        if (typeof fn !== 'function') {\n            throw new Error(`Expected a function, got ${typeof fn}`);\n        }\n        let i = 0;\n        let lastError;\n        while (i < attempts) {\n            try {\n                return yield fn();\n            }\n            catch (err) {\n                lastError = err;\n                i++;\n                if (i < attempts) {\n                    yield delay(delayMs);\n                }\n            }\n        }\n        throw lastError;\n    });\n}\n/**\n * Delays the execution of code for a specified number of milliseconds.\n * @param {number} timeout - The number of milliseconds to delay the execution.\n * @param {DelayOptions} [options] - Optional configuration options for the delay.\n * @return {Promise<void>} - A promise that resolves after the specified delay, or rejects if the delay is aborted.\n */\nfunction delay(timeout, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            var _a, _b;\n            if ((_a = options === null || options === void 0 ? void 0 : options.signal) === null || _a === void 0 ? void 0 : _a.aborted) {\n                reject(new Error('Delay aborted'));\n                return;\n            }\n            const timeoutId = setTimeout(() => resolve(), timeout);\n            (_b = options === null || options === void 0 ? void 0 : options.signal) === null || _b === void 0 ? void 0 : _b.addEventListener('abort', () => {\n                clearTimeout(timeoutId);\n                reject(new Error('Delay aborted'));\n            });\n        });\n    });\n}\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.versionCompare = exports.isBrowser = exports.isOS = exports.isMobileUserAgent = exports.openDeeplinkWithFallback = exports.openLinkBlank = exports.openLink = exports.useShortLink = exports.toSafeBase64FromBase64 = exports.isValidObject = exports.isIos = exports.base64decode = exports.base64encode = exports.splitToUint8Arrays = exports.concatUint8Arrays = exports.toHexString = exports.hexToByteArray = exports.getOKXLink = exports.openOKXUniversalLink = exports.getAppWalletShortDeepLink = exports.encodeTWAConnectURLParams = exports.encodeConnectParams = exports.openOKXTMAWalletlinkWithFallback = exports.getTelegramWalletTWAUrl = exports.getAppWalletDeepLink = exports.encodeTelegramUrlParameters = exports.isTelegramUrl = exports.openOKXDeeplinkWithFallback = exports.openOKXDeeplink = exports.getUniversalLink = exports.safeJsonStringify = exports.safeJsonParse = exports.getDefaultReporter = exports.reportEvent = exports.reportLog = exports.logWarning = exports.logError = exports.logDebug = exports.callForSuccess = void 0;\nvar call_for_success_1 = require(\"./call-for-success\");\nObject.defineProperty(exports, \"callForSuccess\", { enumerable: true, get: function () { return call_for_success_1.callForSuccess; } });\nvar log_1 = require(\"./log\");\nObject.defineProperty(exports, \"logDebug\", { enumerable: true, get: function () { return log_1.logDebug; } });\nObject.defineProperty(exports, \"logError\", { enumerable: true, get: function () { return log_1.logError; } });\nObject.defineProperty(exports, \"logWarning\", { enumerable: true, get: function () { return log_1.logWarning; } });\nObject.defineProperty(exports, \"reportLog\", { enumerable: true, get: function () { return log_1.reportLog; } });\nObject.defineProperty(exports, \"reportEvent\", { enumerable: true, get: function () { return log_1.reportEvent; } });\nObject.defineProperty(exports, \"getDefaultReporter\", { enumerable: true, get: function () { return log_1.getDefaultReporter; } });\n__exportStar(require(\"./reportconstants\"), exports);\n__exportStar(require(\"./report\"), exports);\nvar safejson_1 = require(\"./safejson\");\nObject.defineProperty(exports, \"safeJsonParse\", { enumerable: true, get: function () { return safejson_1.safeJsonParse; } });\nObject.defineProperty(exports, \"safeJsonStringify\", { enumerable: true, get: function () { return safejson_1.safeJsonStringify; } });\nvar url_1 = require(\"./url\");\nObject.defineProperty(exports, \"getUniversalLink\", { enumerable: true, get: function () { return url_1.getUniversalLink; } });\nObject.defineProperty(exports, \"openOKXDeeplink\", { enumerable: true, get: function () { return url_1.openOKXDeeplink; } });\nObject.defineProperty(exports, \"openOKXDeeplinkWithFallback\", { enumerable: true, get: function () { return url_1.openOKXDeeplinkWithFallback; } });\nObject.defineProperty(exports, \"isTelegramUrl\", { enumerable: true, get: function () { return url_1.isTelegramUrl; } });\nObject.defineProperty(exports, \"encodeTelegramUrlParameters\", { enumerable: true, get: function () { return url_1.encodeTelegramUrlParameters; } });\nObject.defineProperty(exports, \"getAppWalletDeepLink\", { enumerable: true, get: function () { return url_1.getAppWalletDeepLink; } });\nObject.defineProperty(exports, \"getTelegramWalletTWAUrl\", { enumerable: true, get: function () { return url_1.getTelegramWalletTWAUrl; } });\nObject.defineProperty(exports, \"openOKXTMAWalletlinkWithFallback\", { enumerable: true, get: function () { return url_1.openOKXTMAWalletlinkWithFallback; } });\nObject.defineProperty(exports, \"encodeConnectParams\", { enumerable: true, get: function () { return url_1.encodeConnectParams; } });\nObject.defineProperty(exports, \"encodeTWAConnectURLParams\", { enumerable: true, get: function () { return url_1.encodeTWAConnectURLParams; } });\nObject.defineProperty(exports, \"getAppWalletShortDeepLink\", { enumerable: true, get: function () { return url_1.getAppWalletShortDeepLink; } });\nObject.defineProperty(exports, \"openOKXUniversalLink\", { enumerable: true, get: function () { return url_1.openOKXUniversalLink; } });\nObject.defineProperty(exports, \"getOKXLink\", { enumerable: true, get: function () { return url_1.getOKXLink; } });\nvar utils_1 = require(\"./utils\");\nObject.defineProperty(exports, \"hexToByteArray\", { enumerable: true, get: function () { return utils_1.hexToByteArray; } });\nObject.defineProperty(exports, \"toHexString\", { enumerable: true, get: function () { return utils_1.toHexString; } });\nObject.defineProperty(exports, \"concatUint8Arrays\", { enumerable: true, get: function () { return utils_1.concatUint8Arrays; } });\nObject.defineProperty(exports, \"splitToUint8Arrays\", { enumerable: true, get: function () { return utils_1.splitToUint8Arrays; } });\nObject.defineProperty(exports, \"base64encode\", { enumerable: true, get: function () { return utils_1.base64encode; } });\nObject.defineProperty(exports, \"base64decode\", { enumerable: true, get: function () { return utils_1.base64decode; } });\nObject.defineProperty(exports, \"isIos\", { enumerable: true, get: function () { return utils_1.isIos; } });\nObject.defineProperty(exports, \"isValidObject\", { enumerable: true, get: function () { return utils_1.isValidObject; } });\nObject.defineProperty(exports, \"toSafeBase64FromBase64\", { enumerable: true, get: function () { return utils_1.toSafeBase64FromBase64; } });\nObject.defineProperty(exports, \"useShortLink\", { enumerable: true, get: function () { return utils_1.useShortLink; } });\nvar web_api_1 = require(\"./web-api\");\nObject.defineProperty(exports, \"openLink\", { enumerable: true, get: function () { return web_api_1.openLink; } });\nObject.defineProperty(exports, \"openLinkBlank\", { enumerable: true, get: function () { return web_api_1.openLinkBlank; } });\nObject.defineProperty(exports, \"openDeeplinkWithFallback\", { enumerable: true, get: function () { return web_api_1.openDeeplinkWithFallback; } });\nObject.defineProperty(exports, \"isMobileUserAgent\", { enumerable: true, get: function () { return web_api_1.isMobileUserAgent; } });\nObject.defineProperty(exports, \"isOS\", { enumerable: true, get: function () { return web_api_1.isOS; } });\nObject.defineProperty(exports, \"isBrowser\", { enumerable: true, get: function () { return web_api_1.isBrowser; } });\nvar tma_api_1 = require(\"./tma-api\");\nObject.defineProperty(exports, \"versionCompare\", { enumerable: true, get: function () { return tma_api_1.versionCompare; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getDefaultReporter = getDefaultReporter;\nexports.logDebug = logDebug;\nexports.logError = logError;\nexports.logWarning = logWarning;\nexports.reportEvent = reportEvent;\nexports.reportLog = reportLog;\nconst debug = false;\nconst forceReport = false;\nconst report_1 = require(\"./report\");\nconst defaultReporter = new report_1.OKXReporter();\nfunction getDefaultReporter() {\n    return defaultReporter;\n}\nfunction logDebug(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.log('[OKX_CONNECT_SDK]', ...args);\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction logError(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.error('[OKX_CONNECT_SDK]', ...args);\n            }\n            if (forceReport || !debug) {\n                let content = '';\n                content += [...args].reduce((result, item) => {\n                    if (typeof item == 'string') {\n                        result += ',' + item;\n                    }\n                    else if (typeof item == 'object') {\n                        result += JSON.stringify(item);\n                    }\n                });\n                defaultReporter.sendRecordContent(content, report_1.OKXReportType.LOG, '');\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction logWarning(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.warn('[OKX_CONNECT_SDK]', ...args);\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction reportEvent(type, action, content) {\n    return __awaiter(this, void 0, void 0, function* () {\n        yield defaultReporter.sendRecordContent(content, type, action);\n    });\n}\nfunction reportLog(content_1) {\n    return __awaiter(this, arguments, void 0, function* (content, action = 'default') {\n        // await defaultReporter.sendRecordContent(content, OKXReportType.LOG, action)\n    });\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXReporter = exports.OKXReportSide = exports.OKXReportType = exports.versionStr = void 0;\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nconst log_1 = require(\"./log\");\nconst url_1 = require(\"./url\");\nconst utils_1 = require(\"../utils\");\nconst localforage_1 = __importDefault(require(\"localforage\"));\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nexports.versionStr = '1.5.2';\nconst reportApiList = [\n    'https://www.okx.com/dappstat/wallet-connect',\n    'https://www.okx.ac/dappstat/wallet-connect'\n];\nconst reportCacheKey = 'OKX_RP_CK';\nconst reportUUIDKey = 'OKX_RP_UUID_CK';\nconst MAX_LIMIT_REPORTCOUNT = 100;\nconst DEFAULT_HTTP_HEADERS = {\n    Accept: \"*/*\",\n    \"Content-Type\": \"text/plain\",\n};\nconst DEFAULT_HTTP_METHOD = \"POST\";\nconst DEFAULT_FETCH_OPTS = {\n    headers: DEFAULT_HTTP_HEADERS,\n    method: DEFAULT_HTTP_METHOD,\n};\nexports.OKXReportType = {\n    PAGE_IN: 'page_in',\n    PAGE_OUT: 'page_out',\n    CLICK: 'click',\n    LOG: 'log',\n};\nexports.OKXReportSide = {\n    DAPP: 'dapp',\n    WALLET: 'wallet',\n};\nclass IReporter {\n}\nconst fetchWithTimeout = (url, options, timeout = 5000) => {\n    const controller = new AbortController();\n    const signal = controller.signal;\n    const fetchPromise = (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, options), { signal }));\n    const timeoutPromise = new Promise((_, reject) => setTimeout(() => {\n        controller.abort();\n        reject(new Error('Request timed out'));\n    }, timeout));\n    return Promise.race([fetchPromise, timeoutPromise]);\n};\nconst fetchListWithTimeout = (urls_1, ...args_1) => __awaiter(void 0, [urls_1, ...args_1], void 0, function* (urls, options = {}, timeout = 5000) {\n    for (const url of urls) {\n        try {\n            const controller = new AbortController();\n            const signal = controller.signal;\n            const fetchPromise = (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, options), { signal }));\n            const timeoutPromise = new Promise((_, reject) => setTimeout(() => {\n                controller.abort();\n                reject(new Error('Request timed out'));\n            }, timeout));\n            const response = yield Promise.race([fetchPromise, timeoutPromise]);\n            if (response.ok) {\n                return response;\n            }\n            if (response.status == 502) {\n                console.error(`Fetch error status 502`, url);\n                return response;\n            }\n        }\n        catch (error) {\n            console.error(`Fetch error for ${url}:`, error);\n        }\n    }\n    console.error(`'All fetch attempts failed.'`);\n    throw new Error('All fetch attempts failed.');\n});\nclass OKXReporter {\n    constructor() {\n        this.currentSide = exports.OKXReportSide.DAPP;\n        this.currentVersion = exports.versionStr;\n        this.storage = localforage_1.default.createInstance({\n            name: \"OKXReporter\"\n        });\n        this.recordList = new Array();\n        this.currentUUID = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(16));\n    }\n    configVersionAndSide(version, side, appname) {\n        this.currentVersion = version;\n        this.currentSide = side;\n        this.appName = appname;\n    }\n    get recordCacheKey() {\n        return reportCacheKey + \"@\" + this.appName;\n    }\n    get reportPlatform() {\n        if ((0, utils_1.isMobileUserAgent)()) {\n            if ((0, utils_1.isIos)()) {\n                return 'iOS';\n            }\n            else {\n                return 'android';\n            }\n        }\n        else {\n            return 'pc';\n        }\n    }\n    beginReport() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.startErrorCatching();\n            let records = yield this.storage.getItem(this.recordCacheKey);\n            let uuid = yield this.storage.getItem(reportUUIDKey);\n            if (uuid) {\n                this.currentUUID = uuid;\n            }\n            else {\n                this.storage.setItem(reportUUIDKey, this.currentUUID);\n            }\n            if (records) {\n                this.recordList = records;\n                (0, log_1.logDebug)('resume records from cache length: ', this.recordList.length);\n                yield this.sendCachedRecords();\n            }\n        });\n    }\n    startErrorCatching() {\n        let window = (0, url_1.getWindow)();\n        if (window) {\n            (0, log_1.logDebug)('begin capture console error');\n            // window.onerror = (event: Event | string, source?: string, lineno?: number, colno?: number, error?: Error) => {\n            //     logDebug('capture error info:', error, source)\n            //     this.markRecord(error?.message+'/'+error?.name+'/'+error?.stack, OKXReportType.LOG, '', this.currentSide)\n            // }\n        }\n    }\n    cachedErrors() {\n        return this.recordList;\n    }\n    sendRecord(record) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    const body = JSON.stringify(record);\n                    (0, log_1.logDebug)('[REPORT] record: ', body);\n                    const res = yield fetchListWithTimeout(reportApiList, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body: body }));\n                    (0, log_1.logDebug)('[REPORT] get rsp:', res);\n                    if (res && res.status && res.status == 200) {\n                        this.recordList = this.recordList.filter((item) => {\n                            return item.timestamp != record.timestamp || item.content != record.content;\n                        });\n                        yield this.storage.setItem(this.recordCacheKey, this.recordList);\n                        resolve(true);\n                    }\n                    else {\n                        reject(false);\n                    }\n                }\n                catch (e) {\n                    (0, log_1.logDebug)('send record error:', e);\n                    resolve(true);\n                    // reject(e)\n                }\n            }));\n        });\n    }\n    sendRecordContent(content, type, action) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            let path = (_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.location.pathname;\n            let location = (_b = (0, url_1.getWindow)()) === null || _b === void 0 ? void 0 : _b.location.origin;\n            if (path && location) {\n                location = location + path;\n            }\n            let language = (_c = (0, url_1.getWindow)()) === null || _c === void 0 ? void 0 : _c.navigator.language;\n            let ua = (_d = (0, url_1.getWindow)()) === null || _d === void 0 ? void 0 : _d.navigator.userAgent;\n            let platform = this.reportPlatform;\n            let reportItem = {\n                uuid: this.currentUUID,\n                version: this.currentVersion,\n                content: content,\n                action: action,\n                side: this.currentSide,\n                timestamp: new Date().getTime(),\n                url: location,\n                lang: language,\n                type: type,\n                platform: platform,\n                \"user-agent\": ua\n            };\n            yield this.markRecordItem(reportItem);\n            yield this.sendRecord(reportItem);\n        });\n    }\n    sendCachedRecords() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let sendList = this.recordList.map(record => this.sendRecord(record));\n                (0, log_1.logDebug)('[REPORT] submit & clean recorded caches begin @', new Date().toUTCString());\n                Promise.allSettled(sendList).then((results) => {\n                    (0, log_1.logDebug)('[REPORT] submit & clean recorded caches ends @', new Date().toUTCString());\n                    let keepIndex = [];\n                    results.forEach((result, index) => {\n                        if (result.status == \"rejected\") {\n                            keepIndex.push(index);\n                        }\n                    });\n                    this.recordList = this.recordList.filter((_, index) => !keepIndex.includes(index));\n                    this.storage.setItem(this.recordCacheKey, this.recordList).then(function (value) {\n                        resolve();\n                    }).catch(function (err) {\n                        reject(err);\n                    });\n                });\n            }));\n        });\n    }\n    markRecordItem(item) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.recordList.push(item);\n            if (this.recordList.length > MAX_LIMIT_REPORTCOUNT) {\n                let offset = this.recordList.length - MAX_LIMIT_REPORTCOUNT;\n                this.recordList.splice(0, offset);\n            }\n            return new Promise((resolve, reject) => {\n                this.storage.setItem(this.recordCacheKey, this.recordList).then(function (value) {\n                    resolve(item);\n                }).catch(function (err) {\n                    reject(err);\n                });\n            });\n        });\n    }\n    markRecord(content, type, action, side) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            let path = (_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.location.pathname;\n            let location = (_b = (0, url_1.getWindow)()) === null || _b === void 0 ? void 0 : _b.location.origin;\n            if (path && location) {\n                location = location + path;\n            }\n            let language = (_c = (0, url_1.getWindow)()) === null || _c === void 0 ? void 0 : _c.navigator.language;\n            let platform = this.reportPlatform;\n            let ua = (_d = (0, url_1.getWindow)()) === null || _d === void 0 ? void 0 : _d.navigator.userAgent;\n            let reportItem = {\n                uuid: this.currentUUID,\n                version: this.currentVersion,\n                content: content,\n                action: action,\n                side: side,\n                timestamp: new Date().getTime(),\n                url: location,\n                lang: language,\n                type: type,\n                platform: platform,\n                \"user-agent\": ua\n            };\n            return yield this.markRecordItem(reportItem);\n        });\n    }\n}\nexports.OKXReporter = OKXReporter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Report_WalletType_Key = exports.Report_Proceed_QRCode_Click = exports.Report_ChooseType_Download_Click = exports.Report_ChooseType_ConnectWallet_Click = exports.Report_Proceed_Retry_Click = exports.Report_ChooseType_ConnectWallet_View = exports.Report_Loading_ConnectWallet_View = exports.Report_Proceed_QRCode_View = exports.Report_Proceed_Proceed_View = void 0;\nexports.Report_Proceed_Proceed_View = \"OKXConnectSDK_Proceed_Proceed_View\";\nexports.Report_Proceed_QRCode_View = \"OKXConnectSDK_Proceed_QRCode_View\";\nexports.Report_Loading_ConnectWallet_View = \"OKXConnectSDK_Loading_ConnectWallet_View\";\nexports.Report_ChooseType_ConnectWallet_View = \"OKXConnectSDK_ChooseType_ConnectWallet_View\";\nexports.Report_Proceed_Retry_Click = \"OKXConnectSDK_Proceed_Retry_Click\";\nexports.Report_ChooseType_ConnectWallet_Click = \"OKXConnectSDK_ChooseType_ConnectWallet_Click\";\nexports.Report_ChooseType_Download_Click = \"OKXConnectSDK_ChooseType_Download_Click\";\nexports.Report_Proceed_QRCode_Click = \"OKXConnectSDK_Proceed_QRCode_Click\";\nexports.Report_WalletType_Key = 'wallet_type';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.safeJsonParse = safeJsonParse;\nexports.safeJsonStringify = safeJsonStringify;\nconst log_1 = require(\"./log\");\nconst JSONStringify = (data) => JSON.stringify(data, (_, value) => (typeof value === \"bigint\" ? value.toString() + \"n\" : value));\n/*\n  Function to parse JSON.\n  If JSON has values in our custom format BigInt (strings with \"n\" character at the end), we just parse them to BigInt values.\n  If JSON has big number values, but not in our custom format, we copy it, and in a copy we convert those values to our custom format,\n  then parse them to BigInt values.\n  Other values (not big numbers and not our custom format BigInt values) are not affected and parsed as native JSON.parse() would parse them.\n*/\nconst JSONParse = (json) => {\n    /*\n      Big numbers are found and marked using Regex with this condition:\n      Number's length is bigger than 16 || Number's length is 16 and any numerical digit of the number is greater than that of the Number.MAX_SAFE_INTEGER\n      Additionally, it skips values that are strings (between double quotes).\n      */\n    // prettier-ignore\n    // eslint-disable-next-line no-useless-escape\n    const numbersBiggerThanMaxInt = /:(\\b\\d{17,}|\\b(?:[9](?:[1-9]07199254740991|0[1-9]7199254740991|00[8-9]199254740991|007[2-9]99254740991|007199[3-9]54740991|0071992[6-9]4740991|00719925[5-9]740991|007199254[8-9]40991|0071992547[5-9]0991|00719925474[1-9]991|00719925474099[2-9])))(?=[,\\}\\]]|$)/g;\n    const serializedData = json.replace(numbersBiggerThanMaxInt, (match, group) => `:\"${group}n\"`);\n    try {\n        return JSON.parse(serializedData, (_, value) => {\n            const isCustomFormatBigInt = typeof value === \"string\" && value.match(/^\\d+n$/);\n            if (isCustomFormatBigInt)\n                return BigInt(value.substring(0, value.length - 1));\n            return value;\n        });\n    }\n    catch (e) {\n        return JSON.parse(json);\n    }\n};\nfunction safeJsonParse(value) {\n    if (typeof value !== \"string\") {\n        (0, log_1.logDebug)(value);\n        throw new Error(`Cannot safe json parse value of type ${typeof value}`);\n    }\n    try {\n        return JSONParse(value);\n    }\n    catch (e) {\n        // eslint-disable-next-line no-console\n        console.error(\"safeJsonParse error:\", e);\n        return value;\n    }\n}\nfunction safeJsonStringify(value) {\n    return typeof value === \"string\" ? value : JSONStringify(value) || \"\";\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.okxfromString = okxfromString;\nexports.okxtoString = okxtoString;\nexports.alloc = alloc;\nexports.allocUnsafe = allocUnsafe;\nconst basics_1 = require(\"multiformats/basics\");\nconst log_1 = require(\"../utils/log\");\nfunction okxfromString(string, encoding = 'utf8') {\n    const base = BASES[encoding];\n    (0, log_1.logDebug)(\"okxfromstring ====> \");\n    if (!base) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    return base.decoder.decode(`${base.prefix}${string}`);\n}\nfunction okxtoString(array, encoding = 'utf8') {\n    const base = BASES[encoding];\n    (0, log_1.logDebug)(\"okxtoString ====> \");\n    if (!base) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    return base.encoder.encode(array).substring(1);\n}\nfunction alloc(size = 0) {\n    return new Uint8Array(size);\n}\nfunction allocUnsafe(size = 0) {\n    return new Uint8Array(size);\n}\nfunction createCodec(name, prefix, encode, decode) {\n    return {\n        name,\n        prefix,\n        encoder: {\n            name,\n            prefix,\n            encode\n        },\n        decoder: { decode }\n    };\n}\nconst string = createCodec('utf8', 'u', buf => {\n    const decoder = new TextDecoder('utf8');\n    return 'u' + decoder.decode(buf);\n}, str => {\n    const encoder = new TextEncoder();\n    return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', buf => {\n    let result = 'a';\n    for (let i = 0; i < buf.length; i++) {\n        let bufNum = buf[i];\n        if (bufNum && String.fromCharCode(bufNum)) {\n            result += String.fromCharCode(bufNum);\n        }\n    }\n    return result;\n}, str => {\n    str = str.substring(1);\n    const buf = allocUnsafe(str.length);\n    for (let i = 0; i < str.length; i++) {\n        buf[i] = str.charCodeAt(i);\n    }\n    return buf;\n});\nconst BASES = Object.assign({ utf8: string, 'utf-8': string, hex: basics_1.bases.base16, latin1: ascii, ascii: ascii, binary: ascii }, basics_1.bases);\n","\"use strict\";\nvar _a, _b, _c, _d, _e, _f, _g;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isTmaPlatform = isTmaPlatform;\nexports.isInTMA = isInTMA;\nexports.isInTelegramBrowser = isInTelegramBrowser;\nexports.sendExpand = sendExpand;\nexports.sendOpenTelegramLink = sendOpenTelegramLink;\nexports.versionCompare = versionCompare;\nconst url_1 = require(\"./url\");\nconst log_1 = require(\"./log\");\nconst protocol_1 = require(\"../protocol\");\nconst web_api_1 = require(\"./web-api\");\nlet initParams = {};\ntry {\n    let locationHash = location.hash.toString();\n    initParams = urlParseHashParams(locationHash);\n}\ncatch (e) { }\nlet tmaPlatform = 'unknown';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppPlatform) {\n    tmaPlatform = (_a = initParams.tgWebAppPlatform) !== null && _a !== void 0 ? _a : 'unknown';\n}\nif (tmaPlatform === 'unknown') {\n    const window = (0, url_1.getWindow)();\n    tmaPlatform = (_d = (_c = (_b = window === null || window === void 0 ? void 0 : window.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) === null || _c === void 0 ? void 0 : _c.platform) !== null && _d !== void 0 ? _d : 'unknown';\n}\nlet webAppVersion = '6.0';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppVersion) {\n    webAppVersion = initParams.tgWebAppVersion;\n}\nif (!webAppVersion) {\n    const window = (0, url_1.getWindow)();\n    webAppVersion = (_g = (_f = (_e = window === null || window === void 0 ? void 0 : window.Telegram) === null || _e === void 0 ? void 0 : _e.WebApp) === null || _f === void 0 ? void 0 : _f.version) !== null && _g !== void 0 ? _g : '6.0';\n}\n/**\n * Returns true if the app is running in TMA on the specified platform.\n * @param platforms\n */\nfunction isTmaPlatform(...platforms) {\n    return platforms.includes(tmaPlatform);\n}\n/**\n * Returns true if the app is running in TMA.\n */\nfunction isInTMA() {\n    var _a;\n    return tmaPlatform !== 'unknown' || !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n}\n/**\n * Returns true if the app is running in the Telegram browser.\n */\nfunction isInTelegramBrowser() {\n    var _a;\n    const isTelegramWebview = !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebview);\n    return (isInTMA() || isTelegramWebview) && tmaPlatform === 'unknown';\n}\n/**\n * Expand the app window.\n */\nfunction sendExpand() {\n    postEvent('web_app_expand', {});\n}\n/**\n * Opens link in TMA or in new tab and returns a function that closes the tab.\n * @param link The link to open.\n * @param fallback The function to call if the link can't be opened in TMA.\n */\nfunction sendOpenTelegramLink(link, fallback) {\n    const url = new URL(link);\n    if (url.protocol !== 'http:' && url.protocol !== 'https:') {\n        if (fallback) {\n            return fallback();\n        }\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Url protocol is not supported: ${url}`);\n    }\n    if (url.hostname !== 't.me') {\n        if (fallback) {\n            return fallback();\n        }\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Url host is not supported: ${url}`);\n    }\n    const pathFull = url.pathname + url.search;\n    if (isIframe() || versionAtLeast('6.1')) {\n        postEvent('web_app_open_tg_link', { path_full: pathFull });\n    }\n    else {\n        (0, web_api_1.openLinkBlank)('https://t.me' + pathFull);\n    }\n}\nfunction isIframe() {\n    try {\n        const window = (0, url_1.getWindow)();\n        if (!window) {\n            return false;\n        }\n        return window.parent != null && window !== window.parent;\n    }\n    catch (e) {\n        return false;\n    }\n}\nfunction postEvent(eventType, eventData) {\n    try {\n        const window = (0, url_1.getWindow)();\n        if (!window) {\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Can't post event to parent window: window is not defined`);\n        }\n        if (window.TelegramWebviewProxy !== undefined) {\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.TelegramWebviewProxy.postEvent(eventType, JSON.stringify(eventData));\n        }\n        else if (window.external && 'notify' in window.external) {\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.external.notify(JSON.stringify({ eventType: eventType, eventData: eventData }));\n        }\n        else if (isIframe()) {\n            const trustedTarget = '*';\n            const message = JSON.stringify({ eventType: eventType, eventData: eventData });\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.parent.postMessage(message, trustedTarget);\n        }\n        else {\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Can't post event to TMA`);\n        }\n    }\n    catch (e) {\n        (0, log_1.logError)(`Can't post event to parent window: ${e}`);\n    }\n}\nfunction urlParseHashParams(locationHash) {\n    locationHash = locationHash.replace(/^#/, '');\n    let params = {};\n    if (!locationHash.length) {\n        return params;\n    }\n    if (locationHash.indexOf('=') < 0 && locationHash.indexOf('?') < 0) {\n        params._path = urlSafeDecode(locationHash);\n        return params;\n    }\n    let qIndex = locationHash.indexOf('?');\n    if (qIndex >= 0) {\n        let pathParam = locationHash.substr(0, qIndex);\n        params._path = urlSafeDecode(pathParam);\n        locationHash = locationHash.substr(qIndex + 1);\n    }\n    let query_params = urlParseQueryString(locationHash);\n    for (let k in query_params) {\n        params[k] = query_params[k];\n    }\n    return params;\n}\nfunction urlSafeDecode(urlencoded) {\n    try {\n        urlencoded = urlencoded.replace(/\\+/g, '%20');\n        return decodeURIComponent(urlencoded);\n    }\n    catch (e) {\n        return urlencoded;\n    }\n}\nfunction urlParseQueryString(queryString) {\n    let params = {};\n    if (!queryString.length) {\n        return params;\n    }\n    let queryStringParams = queryString.split('&');\n    let i, param, paramName, paramValue;\n    for (i = 0; i < queryStringParams.length; i++) {\n        param = queryStringParams[i].split('=');\n        paramName = urlSafeDecode(param[0]);\n        paramValue = param[1] == null ? null : urlSafeDecode(param[1]);\n        params[paramName] = paramValue;\n    }\n    return params;\n}\nfunction versionCompare(v1, v2) {\n    if (typeof v1 !== 'string')\n        v1 = '';\n    if (typeof v2 !== 'string')\n        v2 = '';\n    let v1List = v1.replace(/^\\s+|\\s+$/g, '').split('.');\n    let v2List = v2.replace(/^\\s+|\\s+$/g, '').split('.');\n    let a, i, p1, p2;\n    a = Math.max(v1List.length, v2List.length);\n    for (i = 0; i < a; i++) {\n        p1 = parseInt(v1List[i]) || 0;\n        p2 = parseInt(v2List[i]) || 0;\n        if (p1 === p2)\n            continue;\n        if (p1 > p2)\n            return 1;\n        return -1;\n    }\n    return 0;\n}\nfunction versionAtLeast(ver) {\n    return versionCompare(webAppVersion, ver) >= 0;\n}\n","\"use strict\";\nvar _a, _b, _c, _d;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.removeUrlLastSlash = removeUrlLastSlash;\nexports.addPathToUrl = addPathToUrl;\nexports.getUniversalLink = getUniversalLink;\nexports.openOKXDeeplink = openOKXDeeplink;\nexports.openOKXUniversalLink = openOKXUniversalLink;\nexports.openOKXDeeplinkWithFallback = openOKXDeeplinkWithFallback;\nexports.getWindow = getWindow;\nexports.isTelegramUrl = isTelegramUrl;\nexports.encodeTelegramUrlParameters = encodeTelegramUrlParameters;\nexports.encodeConnectParams = encodeConnectParams;\nexports.encodeTWAConnectURLParams = encodeTWAConnectURLParams;\nexports.getAppWalletDeepLink = getAppWalletDeepLink;\nexports.getAppWalletShortDeepLink = getAppWalletShortDeepLink;\nexports.getTelegramWalletTWAUrl = getTelegramWalletTWAUrl;\nexports.openOKXTMAWalletlinkWithFallback = openOKXTMAWalletlinkWithFallback;\nexports.isInTMA = isInTMA;\nexports.isInTelegramBrowser = isInTelegramBrowser;\nexports.getOKXLink = getOKXLink;\nconst protocol_1 = require(\"../protocol\");\nconst log_1 = require(\"./log\");\nconst constants_1 = require(\"../protocol/constants\");\nconst utils_1 = require(\"./utils\");\nconst tma_api_1 = require(\"./tma-api\");\nfunction removeUrlLastSlash(url) {\n    if (url.slice(-1) === '/') {\n        return url.slice(0, -1);\n    }\n    return url;\n}\nfunction addPathToUrl(url, path) {\n    return removeUrlLastSlash(url) + '/' + path;\n}\nfunction getUniversalLink(deeplinkUrl) {\n    const deeplinkEncodeUrl = encodeURIComponent(deeplinkUrl);\n    console.log(\"getUniversalLink standardUniversalLink:\", protocol_1.standardUniversalLink);\n    return `${protocol_1.standardUniversalLink}?deeplink=${deeplinkEncodeUrl}`;\n}\nfunction openOKXDeeplink(deeplinkUrl) {\n    var _a;\n    const fullUrl = getUniversalLink(deeplinkUrl);\n    const isTelegram = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n    console.log(\"openOKXDeeplink fullUrl:\", fullUrl);\n    if (!(0, utils_1.isIos)()) {\n        let newWindow = null;\n        if (isTelegram) {\n            newWindow = window.open(deeplinkUrl, '_blank');\n        }\n        else {\n            window.location.href = deeplinkUrl;\n        }\n    }\n    else {\n        openOKXUniversalLink(fullUrl);\n    }\n}\nfunction openOKXUniversalLink(fullUrl) {\n    if (!(0, utils_1.isIos)()) {\n        // if (isTelegram) {\n        window.open(fullUrl, '_blank');\n        // } else {\n        //     window.location.href = fullUrl;\n        // }\n    }\n    else {\n        if (isInTMA()) {\n            window.open(fullUrl, '_blank');\n        }\n        else {\n            console.log(\"windowOpen[before]: \", Date.now());\n            if (window === null || window === void 0 ? void 0 : window.okxLogDebug) {\n                window.open(fullUrl, '_blank');\n            }\n            else {\n                window.open(fullUrl, '_self');\n            }\n            console.log(\"windowOpen[after]: \", Date.now());\n        }\n    }\n}\nfunction openOKXDeeplinkWithFallback(deeplinkUrl) {\n    var _a;\n    const fullUrl = getUniversalLink(deeplinkUrl);\n    const isTelegram = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n    console.log(\"openOKXDeeplinkWithFallback fullUrl:\", fullUrl);\n    let deepLinkOpened = false;\n    const timeoutDuration = 3000; // 1.5秒的等待时间\n    const downloadUrl = protocol_1.standardUniversalLink;\n    console.log(\"openOKXDeeplinkWithFallback standardUniversalLink:\", protocol_1.standardUniversalLink);\n    if (!(0, utils_1.isIos)()) {\n        let newWindow = null;\n        var fallbackToDownloadPage = () => {\n            if (!deepLinkOpened) {\n                if (newWindow) {\n                    newWindow.open(downloadUrl, '_self');\n                }\n                else {\n                    window.open(downloadUrl, '_blank');\n                }\n            }\n        };\n        if (isTelegram) {\n            newWindow = window.open(deeplinkUrl, '_blank');\n        }\n        else {\n            window.location.href = deeplinkUrl;\n        }\n        setTimeout(fallbackToDownloadPage, timeoutDuration);\n        window.addEventListener('blur', () => {\n            deepLinkOpened = true;\n        }, { once: true });\n        document.addEventListener('visibilitychange', () => {\n            if (document.visibilityState === 'hidden') {\n                deepLinkOpened = true;\n            }\n        });\n    }\n    else {\n        if (isTelegram) {\n            window.open(fullUrl, '_blank');\n        }\n        else {\n            console.log(\"windowOpen[before]: \", Date.now());\n            if (window === null || window === void 0 ? void 0 : window.okxLogDebug) {\n                window.open(fullUrl, '_blank');\n            }\n            else {\n                window.open(fullUrl, '_self');\n            }\n            console.log(\"windowOpen[after]: \", Date.now());\n        }\n    }\n}\nfunction getWindow() {\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    return undefined;\n}\nfunction isTelegramUrl(link) {\n    if (!link) {\n        return false;\n    }\n    const url = new URL(link);\n    return url.protocol === 'tg:' || url.hostname === 't.me';\n}\nfunction encodeTelegramUrlParameters(parameters) {\n    let encodedParameters = parameters;\n    encodedParameters = encodedParameters.replace(/\\./g, '%2E');\n    encodedParameters = encodedParameters.replace(/-/g, '%2D');\n    encodedParameters = encodedParameters.replace(/_/g, '%5F');\n    encodedParameters = encodedParameters.replace(/&/g, '-');\n    encodedParameters = encodedParameters.replace(/=/g, '__');\n    encodedParameters = encodedParameters.replace(/%/g, '--');\n    return encodedParameters;\n}\nfunction encodeConnectParams(connectRequest) {\n    const connectRequestStr = JSON.stringify(connectRequest);\n    (0, log_1.logDebug)(\"url encodeConnectParams connectRequestStr \", connectRequestStr);\n    const utf8Array = new TextEncoder().encode(connectRequestStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    // .replace(/\\+/g, '-')\n    // .replace(/\\//g, '_')\n    // .replace(/=+$/, ''); //Compatible with older versions of iOS. Cannot be added directly  (Base64 URL Safe)\n    (0, log_1.logDebug)(\"url encodeConnectParams base64Encoded \", base64Encoded);\n    return base64Encoded;\n}\nfunction encodeTWAConnectURLParams(connectRequest) {\n    const connectRequestStr = JSON.stringify({ topic: connectRequest.topic, clientId: connectRequest.clientId });\n    (0, log_1.logDebug)(\"url encodeConnectParams connectRequestStr\", connectRequestStr);\n    const utf8Array = new TextEncoder().encode(connectRequestStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    return base64Encoded;\n}\nfunction getAppWalletDeepLink(connectParam) {\n    return `${protocol_1.standardDeeplink}?param=${connectParam}`;\n}\nfunction getAppWalletShortDeepLink(topic, clientId) {\n    return `${constants_1.shortUniversalLink}?topic=${topic}${(0, utils_1.getLastSixMd5Hash)(clientId)}`;\n}\n//  make telegram okx wallet TWA url\nfunction getTelegramWalletTWAUrl(connectParam, redirectStr) {\n    let base64Content = { okxconnect: \"\", redirect: \"\", extraparams: \"\" };\n    if (connectParam) {\n        base64Content.okxconnect = connectParam;\n    }\n    if (redirectStr) {\n        base64Content.redirect = redirectStr;\n    }\n    let base64ContentStr = JSON.stringify(base64Content);\n    const utf8Array = new TextEncoder().encode(base64ContentStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    const urlSafeBase64 = (0, utils_1.toSafeBase64FromBase64)(base64Encoded);\n    (0, log_1.logDebug)('[TWA] open link:', base64Content, base64Encoded);\n    if (connectParam || redirectStr) {\n        if (!isInTMA()) {\n            // return `http://localhost:5173?tgWebAppStartParam=${urlSafeBase64}`\n            return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}&startapp=${urlSafeBase64}`;\n        }\n        else {\n            return `https://t.me/${constants_1.tgwalletName}/start?startapp=${urlSafeBase64}`;\n        }\n    }\n    if (!isInTMA()) {\n        // return \"http://localhost:5173\"\n        return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}`;\n    }\n    else {\n        return `https://t.me/${constants_1.tgwalletName}/start`;\n    }\n}\n//  open TWA url in telegram\nfunction openOKXTMAWalletlinkWithFallback(twaDeepLink) {\n    var _a, _b, _c, _d, _e;\n    (0, log_1.logDebug)('[TWA] open link:', twaDeepLink, \"isInTMA ==> \", isInTMA());\n    if (!isInTMA()) {\n        window.open(twaDeepLink, '_self');\n    }\n    else {\n        if ((_b = (_a = getWindow()) === null || _a === void 0 ? void 0 : _a.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) {\n            (_e = (_d = (_c = getWindow()) === null || _c === void 0 ? void 0 : _c.Telegram) === null || _d === void 0 ? void 0 : _d.WebApp) === null || _e === void 0 ? void 0 : _e.openTelegramLink(twaDeepLink);\n        }\n        else {\n            (0, tma_api_1.sendOpenTelegramLink)(twaDeepLink);\n        }\n    }\n}\n/**\n * Returns true if the app is running in TMA.\n */\nfunction urlSafeDecode(urlencoded) {\n    try {\n        urlencoded = urlencoded.replace(/\\+/g, '%20');\n        return decodeURIComponent(urlencoded);\n    }\n    catch (e) {\n        return urlencoded;\n    }\n}\nfunction urlParseQueryString(queryString) {\n    let params = {};\n    if (!queryString.length) {\n        return params;\n    }\n    let queryStringParams = queryString.split('&');\n    let i, param, paramName, paramValue;\n    for (i = 0; i < queryStringParams.length; i++) {\n        param = queryStringParams[i].split('=');\n        paramName = urlSafeDecode(param[0]);\n        paramValue = param[1] == null ? null : urlSafeDecode(param[1]);\n        params[paramName] = paramValue;\n    }\n    return params;\n}\nfunction urlParseHashParams(locationHash) {\n    locationHash = locationHash.replace(/^#/, '');\n    let params = {};\n    if (!locationHash.length) {\n        return params;\n    }\n    if (locationHash.indexOf('=') < 0 && locationHash.indexOf('?') < 0) {\n        params._path = urlSafeDecode(locationHash);\n        return params;\n    }\n    let qIndex = locationHash.indexOf('?');\n    if (qIndex >= 0) {\n        let pathParam = locationHash.substr(0, qIndex);\n        params._path = urlSafeDecode(pathParam);\n        locationHash = locationHash.substr(qIndex + 1);\n    }\n    let query_params = urlParseQueryString(locationHash);\n    for (let k in query_params) {\n        params[k] = query_params[k];\n    }\n    return params;\n}\nlet initParams = {};\ntry {\n    let locationHash = location.hash.toString();\n    initParams = urlParseHashParams(locationHash);\n}\ncatch (e) { }\nlet tmaPlatform = 'unknown';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppPlatform) {\n    tmaPlatform = (_a = initParams.tgWebAppPlatform) !== null && _a !== void 0 ? _a : 'unknown';\n}\nif (tmaPlatform === 'unknown') {\n    const window = getWindow();\n    tmaPlatform = (_d = (_c = (_b = window === null || window === void 0 ? void 0 : window.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) === null || _c === void 0 ? void 0 : _c.platform) !== null && _d !== void 0 ? _d : 'unknown';\n}\nfunction isInTMA() {\n    var _a;\n    return tmaPlatform !== 'unknown' || !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n}\n/**\n * Returns true if the app is running in the Telegram browser.\n */\nfunction isInTelegramBrowser() {\n    var _a;\n    const isTelegramWebview = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebview);\n    return (isInTMA() || isTelegramWebview) && tmaPlatform === 'unknown';\n}\nfunction getOKXLink(connectRequest, useMini = false, tmaReturnUrl) {\n    (0, log_1.logDebug)(`url  getOKXLink() called connectRequest==> ${JSON.stringify(connectRequest)}  useMini=> ${useMini}  tmaReturnUrl==> ${tmaReturnUrl}`);\n    if (useMini) {\n        var encodeTGParams = encodeTWAConnectURLParams(connectRequest);\n        return getTelegramWalletTWAUrl(encodeTGParams, tmaReturnUrl !== null && tmaReturnUrl !== void 0 ? tmaReturnUrl : \"back\");\n    }\n    else {\n        if ((0, utils_1.useShortLink)()) {\n            return getAppWalletShortDeepLink(connectRequest.topic, connectRequest.clientId);\n        }\n        else {\n            const base64Encoded = encodeConnectParams(connectRequest);\n            return `${protocol_1.standardDeeplink}?param=${base64Encoded}`;\n        }\n    }\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isValidObject = exports.RANDOM_LENGTH = exports.isBrowser = exports.resolveLocalStorage = exports.hasLocalStorage = exports.hasBuiltInWebSocket = exports.resolveWebSocketImplementation = void 0;\nexports.hexToByteArray = hexToByteArray;\nexports.toHexString = toHexString;\nexports.concatUint8Arrays = concatUint8Arrays;\nexports.splitToUint8Arrays = splitToUint8Arrays;\nexports.base64encode = base64encode;\nexports.base64decode = base64decode;\nexports.checkWSUrl = checkWSUrl;\nexports.hashKey = hashKey;\nexports.generateRandomBytes32 = generateRandomBytes32;\nexports.generateTopic = generateTopic;\nexports.isIos = isIos;\nexports.getLastSixMd5Hash = getLastSixMd5Hash;\nexports.toSafeBase64FromBase64 = toSafeBase64FromBase64;\nexports.useShortLink = useShortLink;\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst tweetnacl_util_1 = __importDefault(require(\"tweetnacl-util\"));\nconst to_string_1 = require(\"uint8arrays/to-string\");\nconst sha256_1 = require(\"@stablelib/sha256\");\nconst safejson_1 = require(\"./safejson\");\nconst log_1 = require(\"./log\");\nconst stringUtils_1 = require(\"../utils/stringUtils\");\nconst crypto_js_1 = __importDefault(require(\"crypto-js\"));\nconst BASE16 = \"base16\";\nfunction hexToByteArray(hexString) {\n    if (hexString.length % 2 !== 0) {\n        throw new Error(`Cannot convert ${hexString} to bytesArray`);\n    }\n    const result = new Uint8Array(hexString.length / 2);\n    for (let i = 0; i < hexString.length; i += 2) {\n        result[i / 2] = parseInt(hexString.slice(i, i + 2), 16);\n    }\n    return result;\n}\nfunction toHexString(byteArray) {\n    let hexString = '';\n    byteArray.forEach(byte => {\n        hexString += ('0' + (byte & 0xff).toString(16)).slice(-2);\n    });\n    return hexString;\n}\nfunction concatUint8Arrays(buffer1, buffer2) {\n    const mergedArray = new Uint8Array(buffer1.length + buffer2.length);\n    mergedArray.set(buffer1);\n    mergedArray.set(buffer2, buffer1.length);\n    return mergedArray;\n}\nfunction splitToUint8Arrays(array, index) {\n    if (index >= array.length) {\n        throw new Error('Index is out of buffer');\n    }\n    const subArray1 = array.slice(0, index);\n    const subArray2 = array.slice(index);\n    return [subArray1, subArray2];\n}\nfunction encodeUint8Array(value, urlSafe) {\n    const encoded = tweetnacl_util_1.default.encodeBase64(value);\n    if (!urlSafe) {\n        return encoded;\n    }\n    return encodeURIComponent(encoded);\n}\nfunction decodeToUint8Array(value, urlSafe) {\n    if (urlSafe) {\n        value = decodeURIComponent(value);\n    }\n    return tweetnacl_util_1.default.decodeBase64(value);\n}\nfunction base64encode(value, urlSafe) {\n    let uint8Array;\n    if (value instanceof Uint8Array) {\n        uint8Array = value;\n    }\n    else {\n        if (typeof value !== 'string') {\n            value = (0, safejson_1.safeJsonStringify)(value);\n        }\n        uint8Array = tweetnacl_util_1.default.decodeUTF8(value);\n    }\n    return encodeUint8Array(uint8Array, urlSafe);\n}\nfunction base64decode(value, urlSafe) {\n    const decodedUint8Array = decodeToUint8Array(value, urlSafe);\n    return {\n        toString() {\n            return tweetnacl_util_1.default.encodeUTF8(decodedUint8Array);\n        },\n        toObject() {\n            try {\n                return (0, safejson_1.safeJsonParse)(tweetnacl_util_1.default.encodeUTF8(decodedUint8Array));\n            }\n            catch (e) {\n                return null;\n            }\n        },\n        toUint8Array() {\n            return decodedUint8Array;\n        }\n    };\n}\nfunction checkWSUrl(url) {\n    const match = url.match(new RegExp(/^\\w+:/, \"gi\"));\n    if (!match || !match.length) {\n        return false;\n    }\n    let scheme = match[0];\n    if (scheme === undefined) {\n        return false;\n    }\n    return new RegExp(\"^wss?:\").test(scheme);\n}\nconst resolveWebSocketImplementation = () => {\n    if (typeof WebSocket !== \"undefined\") {\n        return WebSocket;\n    }\n    else if (typeof global !== \"undefined\" && typeof global.WebSocket !== \"undefined\") {\n        return global.WebSocket;\n    }\n    else if (typeof window !== \"undefined\" && typeof window.WebSocket !== \"undefined\") {\n        return window.WebSocket;\n    }\n    else if (typeof self !== \"undefined\" && typeof self.WebSocket !== \"undefined\") {\n        return self.WebSocket;\n    }\n    return WebSocket;\n    //\n    // return require(\"ws\");\n};\nexports.resolveWebSocketImplementation = resolveWebSocketImplementation;\nconst hasBuiltInWebSocket = () => typeof WebSocket !== \"undefined\" ||\n    (typeof global !== \"undefined\" && typeof global.WebSocket !== \"undefined\") ||\n    (typeof window !== \"undefined\" && typeof window.WebSocket !== \"undefined\") ||\n    (typeof self !== \"undefined\" && typeof self.WebSocket !== \"undefined\");\nexports.hasBuiltInWebSocket = hasBuiltInWebSocket;\nconst hasLocalStorage = () => (typeof global !== \"undefined\" && (typeof global.localStorage !== \"undefined\")) ||\n    (typeof window !== \"undefined\" && typeof window.localStorage !== \"undefined\");\nexports.hasLocalStorage = hasLocalStorage;\nconst resolveLocalStorage = () => {\n    if (typeof global !== \"undefined\" && typeof global.localStorage !== \"undefined\") {\n        return global.localStorage;\n    }\n    else if (typeof window !== \"undefined\" && typeof window.localStorage !== \"undefined\") {\n        return window.localStorage;\n    }\n    return localStorage;\n};\nexports.resolveLocalStorage = resolveLocalStorage;\nconst isBrowser = () => typeof window !== \"undefined\";\nexports.isBrowser = isBrowser;\nexports.RANDOM_LENGTH = 32;\nfunction hashKey(key, encode = BASE16) {\n    (0, log_1.logDebug)(`hash key called ${key}`);\n    const result = (0, sha256_1.hash)((0, stringUtils_1.okxfromString)(key, encode));\n    return (0, to_string_1.toString)(result, encode);\n}\nfunction generateRandomBytes32() {\n    return tweetnacl_1.default.randomBytes(exports.RANDOM_LENGTH);\n}\nfunction generateTopic() {\n    let randomBytes32 = generateRandomBytes32();\n    (0, log_1.logDebug)(`generate topic called ${randomBytes32}`);\n    return hashKey((0, to_string_1.toString)(randomBytes32, BASE16));\n}\nconst isValidObject = (obj) => Object.getPrototypeOf(obj) === Object.prototype && Object.keys(obj).length;\nexports.isValidObject = isValidObject;\nfunction isIos() {\n    const userAgent = navigator.userAgent;\n    const maxTouchPoints = navigator.maxTouchPoints || 0;\n    // 检测 iPhone、iPod 和传统的 iPad\n    const isIOSDevice = /iPad|iPhone|iPod/.test(userAgent) && !window.MSStream;\n    // 针对 iPadOS 13 及以上的设备进行额外判断\n    const isIPadOS = (userAgent.includes('Mac') && maxTouchPoints > 1);\n    (0, log_1.logDebug)(`utils isIos >>>isIOSDevice: ${isIOSDevice}    >> isIPadOS: ${isIPadOS}`);\n    // 如果是 iOS 设备或者是 iPadOS 设备，返回 true\n    return isIOSDevice || isIPadOS;\n}\nfunction getLastSixMd5Hash(input) {\n    // 生成 MD5 哈希\n    const hash = crypto_js_1.default.MD5(input).toString();\n    // 获取最后六位\n    return hash.slice(-6);\n}\nfunction toSafeBase64FromBase64(base64) {\n    return base64\n        .replace(/=/g, \"\")\n        .replace(/\\+/g, \"-\")\n        .replace(/\\//g, \"_\");\n}\nfunction useShortLink() {\n    // return !!(window as any).useShortLink;\n    return true;\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.openLink = openLink;\nexports.openLinkBlank = openLinkBlank;\nexports.openDeeplinkWithFallback = openDeeplinkWithFallback;\nexports.isMobileUserAgent = isMobileUserAgent;\nexports.getUserAgent = getUserAgent;\nexports.isOS = isOS;\nexports.isBrowser = isBrowser;\nconst ua_parser_js_1 = __importDefault(require(\"ua-parser-js\"));\nconst log_1 = require(\"./log\");\nfunction openLink(href, target = '_self') {\n    (0, log_1.logDebug)('openLink', href, target);\n    window.open(href, target, 'noopener noreferrer');\n}\nfunction openLinkBlank(href) {\n    openLink(href, '_blank');\n}\nfunction openDeeplinkWithFallback(href, fallback) {\n    const doFallback = () => {\n        if (isBrowser('safari') || (isOS('android') && isBrowser('firefox'))) {\n            // Safari does not support fallback to direct link.\n            return;\n        }\n        fallback();\n    };\n    const fallbackTimeout = setTimeout(() => doFallback(), 500);\n    window.addEventListener('blur', () => clearTimeout(fallbackTimeout), { once: true });\n    openLink(href, '_self');\n}\nfunction isMobileUserAgent() {\n    let check = false;\n    (function (a) {\n        if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) ||\n            /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.slice(0, 4)))\n            check = true;\n    })(navigator.userAgent ||\n        navigator.vendor ||\n        window.opera);\n    return check;\n}\nfunction getUserAgent() {\n    var _a, _b, _c;\n    const results = new ua_parser_js_1.default().getResult();\n    const osName = (_a = results.os.name) === null || _a === void 0 ? void 0 : _a.toLowerCase();\n    const deviceModel = (_b = results.device.model) === null || _b === void 0 ? void 0 : _b.toLowerCase();\n    let os;\n    switch (true) {\n        case deviceModel === 'ipad':\n            os = 'ipad';\n            break;\n        case osName === 'ios':\n            os = 'ios';\n            break;\n        case osName === 'android':\n            os = 'android';\n            break;\n        case osName === 'mac os':\n            os = 'macos';\n            break;\n        case osName === 'linux':\n            os = 'linux';\n            break;\n        case osName === null || osName === void 0 ? void 0 : osName.includes('windows'):\n            os = 'windows';\n            break;\n    }\n    const browserName = (_c = results.browser.name) === null || _c === void 0 ? void 0 : _c.toLowerCase();\n    let browser;\n    switch (true) {\n        case browserName === 'chrome':\n            browser = 'chrome';\n            break;\n        case browserName === 'firefox':\n            browser = 'firefox';\n            break;\n        case browserName === null || browserName === void 0 ? void 0 : browserName.includes('safari'):\n            browser = 'safari';\n            break;\n        case browserName === null || browserName === void 0 ? void 0 : browserName.includes('opera'):\n            browser = 'opera';\n            break;\n    }\n    return {\n        os,\n        browser\n    };\n}\nfunction isOS(...os) {\n    return os.includes(getUserAgent().os);\n}\nfunction isBrowser(...browser) {\n    return browser.includes(getUserAgent().browser);\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXBtcProvider = void 0;\nconst _1 = require(\"./\");\nclass OKXBtcProvider {\n    constructor(provider) {\n        this.caip = [\n            \"btc:mainnet\",\n            \"fractal:mainnet\"\n        ];\n        this.provider = provider;\n    }\n    getAddressForChainId(chainId) {\n        var _a, _b;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let accounts = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['btc']) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        });\n        if (accounts == undefined || accounts.length < 0) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `no connected account`);\n        }\n        let account = accounts[0];\n        const address = account.split(':')[2];\n        return address;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let extra = (_c = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[ns]) === null || _b === void 0 ? void 0 : _b.extra) === null || _c === void 0 ? void 0 : _c[chainId];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n        }\n        return {\n            address: this.getAddressForChainId(chainId),\n            publicKey: publicKey\n        };\n    }\n    /**\n     *\n     * @param signStr\n     * @param chainId\n     * @param type\n     * @returns\n     */\n    signMessage(chainId, signStr, type) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (signStr === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signMessage parmas error`);\n            }\n            let params = {\n                signStr: signStr,\n                from: this.getAddressForChainId(chainId)\n            };\n            if (type) {\n                params.type = type;\n            }\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signMessage\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param toAddress\n     * @param satoshis\n     * @param options { feeRate: 0 }\n     * @returns\n     */\n    sendBitcoin(chainId, toAddress, satoshis, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            let params = {\n                from: this.getAddressForChainId(chainId),\n                to: toAddress,\n                value: (satoshis / 100000000).toString(),\n            };\n            if (options === null || options === void 0 ? void 0 : options.feeRate) {\n                params[\"satBytes\"] = options.feeRate.toString();\n            }\n            let result = yield this.send(chainId, params);\n            if (result !== undefined && ('txhash' in result)) {\n                // return txhash directly\n                return result.txhash;\n            }\n            // or return unexpected result\n            return result;\n        });\n    }\n    //  from - string：当前连接的钱包的 BTC 地址\n    //  to - string：接受 BTC 的地址\n    //  value - string：发送 BTC 的数量\n    //  satBytes - string： (可选) 自定义费率\n    //  memo - string： (可选) 指定 outputs OP_RETURN 内容 示例\n    //  memoPos - number： (可选) 指定 outputs OP_RETURN 输出位置，如果传了 memo 则必须传入 memoPos 指定位置，否则 memo 不生效\n    send(chainId, input) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (!this.checkParameters(input, 'to', 'value')) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send parmas  error`);\n            }\n            input[\"from\"] = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: 'btc_send',\n                    params: input\n                }, chainId);\n                if ('result' in ret) {\n                    return {\n                        txhash: ret.result\n                    };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param psbtHex string 要签名的 psbt 的十六进制字符串\n     * @param options object { autoFinalized: 0 }\n     */\n    signPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.signPsbts(chainId, [psbtHex], [options]).then(psbtResults => {\n                    let results = JSON.parse(psbtResults);\n                    resolve(results[0]);\n                }).catch(error => {\n                    reject(error);\n                });\n            });\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHexs Array\n     * @param options Array [{ autoFinalized: 0 }]\n     * @returns\n     */\n    signPsbts(chainId, psbtHexs, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHexs === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHexs: psbtHexs,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signPsbts\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHex string\n     * @param options object\n     * @returns\n     */\n    signAndPushPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHex === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHex: psbtHex,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signAndPushPsbt\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return JSON.parse(ret.result);\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param address string, receiver address\n     * @param inscriptionId string, 铭文 ID + 协议，没有传协议则默认是 Ordinals NFT ，目前仅支持 Ordinals 及 Atomicals 协议\n     * @param options object, { feeRate: number } custom rates\n     */\n    sendInscription(chainId, address, inscriptionId, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let extension = {\n                address: address,\n                inscriptionId: inscriptionId,\n                options: options\n            };\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (address === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method sendInscription params error`);\n            }\n            var feeRate = 0;\n            if (options && ('feeRate' in options)) {\n                feeRate = options.feeRate;\n            }\n            let coinId = '';\n            let from = this.getAddressForChainId(chainId);\n            var protocolId = 7; //ProtocolIdBRCNFT\n            if (inscriptionId !== 'undefined') {\n                let atomicSuffix = \"-Atomicals\";\n                let ordinalsSuffix = \"-Ordinals\";\n                if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(atomicSuffix.toLowerCase())) {\n                    protocolId = 8; //WXRCProtocolIdARCNFT\n                    inscriptionId = this.removeSuffix(inscriptionId, atomicSuffix);\n                }\n                else if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(ordinalsSuffix.toLowerCase())) {\n                    inscriptionId = this.removeSuffix(inscriptionId, ordinalsSuffix);\n                }\n            }\n            let params = {\n                scenario: 5,\n                feeRate: feeRate,\n                txType: \"20\",\n                to: address,\n                batchBean: [\n                    {\n                        coinAmount: \"1\",\n                        nftId: inscriptionId,\n                        protocolId: protocolId,\n                        coinId: coinId,\n                        inscriptionId: \"\",\n                        from: from\n                    }\n                ],\n                extension: extension\n            };\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_sendInscription\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    removeSuffix(str, suffix) {\n        if (str.endsWith(suffix)) {\n            return str.slice(0, str.length - suffix.length);\n        }\n        return str;\n    }\n    checkParameters(params, ...keys) {\n        var unexistKeys = [];\n        keys.forEach(key => {\n            if (!(`${key}` in params)) {\n                unexistKeys.push(key);\n            }\n        });\n        if (unexistKeys.length > 0) {\n            console.log('not find key: ', unexistKeys.join(\",\"));\n            return false;\n        }\n        return true;\n    }\n    /**\n     *\n     * @param chainId eg. btc:mainnet\n     * @returns eg. btc\n     */\n    checkChainId(chainId) {\n        if (this.caip.includes(chainId)) {\n            let [namespaceKey, _] = chainId.split(\":\");\n            return namespaceKey;\n        }\n        return undefined;\n    }\n}\nexports.OKXBtcProvider = OKXBtcProvider;\nexports.default = OKXBtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCosmosProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXCosmosProvider {\n    constructor(provider) {\n        this.provider = provider;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e, _f;\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount chainId:\", chainId);\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount namespaces:\", JSON.stringify((_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces));\n        let account = (_c = (_b = this.provider.session) === null || _b === void 0 ? void 0 : _b.namespaces[core_1.NameSpaceKeyCosmos]) === null || _c === void 0 ? void 0 : _c.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount account:\", JSON.stringify(account));\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount address:\", address);\n        let extra = (_f = (_e = (_d = this.provider.session) === null || _d === void 0 ? void 0 : _d.namespaces[core_1.NameSpaceKeyCosmos]) === null || _e === void 0 ? void 0 : _e.extra) === null || _f === void 0 ? void 0 : _f[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n            console.log(\"aptos_publicKey\", publicKey);\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            algo: \"secp256k1\",\n            address: address,\n            bech32Address: address,\n            pubKey: this.hexToUint8Array(publicKey),\n        };\n    }\n    signArbitrary(chainId, signerAddress, data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const base64Encoded = window.btoa(data);\n            const signDoc = {\n                chain_id: \"\",\n                account_number: \"0\",\n                sequence: \"0\",\n                fee: {\n                    gas: \"0\",\n                    amount: []\n                },\n                msgs: [{\n                        \"type\": \"sign/MsgSignData\",\n                        \"value\": {\n                            \"signer\": signerAddress,\n                            \"data\": base64Encoded\n                        }\n                    }],\n                memo: \"\"\n            };\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signArbitrary\",\n                \"params\": {\n                    \"signer\": signerAddress,\n                    \"chain_id\": chainId.split(\":\")[1],\n                    \"data\": signDoc\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    if (typeof ret.result == \"string\") {\n                        return JSON.parse(ret.result);\n                    }\n                    else {\n                        return ret.result;\n                    }\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signAmino(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (signDoc.msgs[0].type == \"sign/MsgSignData\") {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signArbitrary\",\n                    \"params\": {\n                        \"signer\": signerAddress,\n                        \"chain_id\": chainId.split(\":\")[1],\n                        \"data\": signDoc\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        return ret.result;\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    return error;\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                }\n            }\n            else {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signAmino\",\n                    \"params\": {\n                        \"signer\": signerAddress,\n                        \"chainId\": chainId.split(\":\")[1],\n                        \"sign_doc\": signDoc,\n                        \"signOptions\": signOptions\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        const resData = JSON.parse(ret.result);\n                        console.log(\"signdoc\", signDoc, resData.signDoc);\n                        signDoc.fee = resData.signDoc.fee;\n                        return { signed: signDoc, signature: resData.signature };\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                    return error;\n                }\n            }\n        });\n    }\n    signDirect(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const object = {\n                bodyBytes: this.bufferToHex(signDoc.bodyBytes),\n                authInfoBytes: this.bufferToHex(signDoc.authInfoBytes),\n                chainId: signDoc.chainId,\n                accountNumber: signDoc.accountNumber ? signDoc.accountNumber.toString() : null,\n                signOptions: signOptions ? signOptions : null\n            };\n            let data = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signDirect\",\n                \"params\": {\n                    \"signer\": signerAddress,\n                    \"chainId\": chainId.split(\":\")[1],\n                    \"sign_doc\": object,\n                }\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    const res = JSON.parse(ret.result);\n                    console.log(\"signdirect result\", res);\n                    signDoc.authInfoBytes = this.messageToBuffer(res.signDoc.authInfoBytes);\n                    return { signed: signDoc, signature: res.signature };\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    messageToBuffer(message) {\n        var buffer = Uint8Array.from([]);\n        try {\n            if (typeof message === \"string\") {\n                buffer = this.hexToUint8Array(message.replace(\"0x\", \"\"));\n            }\n            else {\n                buffer = Uint8Array.from(message);\n            }\n        }\n        catch (err) {\n            console.log(`messageToBuffer error: ${err}`);\n        }\n        return buffer;\n    }\n    bufferToHex(arr) {\n        let output = [...new Uint8Array(arr)]\n            .map(x => x.toString(16).padStart(2, '0'))\n            .join('');\n        return '0x' + output;\n    }\n    hexToUint8Array(hexString) {\n        if (hexString.length % 2 !== 0) {\n            throw \"Invalid hexString\";\n        }\n        var arrayBuffer = new Uint8Array(hexString.length / 2);\n        for (var i = 0; i < hexString.length; i += 2) {\n            var byteValue = parseInt(hexString.substr(i, 2), 16);\n            if (isNaN(byteValue)) {\n                throw \"Invalid hexString\";\n            }\n            arrayBuffer[i / 2] = byteValue;\n        }\n        return arrayBuffer;\n    }\n}\nexports.OKXCosmosProvider = OKXCosmosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTonProvider = void 0;\nconst _1 = require(\"./\");\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXTonProvider {\n    constructor(generator) {\n        this.statusChangeSubscriptions = [];\n        this.statusChangeErrorSubscriptions = [];\n        this.provider = generator;\n        this.provider.on(\"connect\", () => {\n            let tonWallet = this.wallet();\n            (0, core_1.logDebug)(\"OKXTONProvider event connect:\", JSON.stringify(tonWallet));\n            this.statusChangeSubscriptions.forEach(callback => callback(tonWallet));\n        });\n        this.provider.on(\"reconnect\", () => {\n            let tonWallet = this.wallet();\n            (0, core_1.logDebug)(\"OKXTONProvider event reconnect:\", JSON.stringify(tonWallet));\n            this.statusChangeSubscriptions.forEach(callback => callback(tonWallet));\n        });\n        this.provider.on(\"disconnect\", () => {\n            (0, core_1.logDebug)(\"OKXTONProvider event disconnect:\");\n            this.statusChangeSubscriptions.forEach(callback => callback(null));\n        });\n        this.provider.on(\"connect_error\", (error) => {\n            (0, core_1.logDebug)(\"OKXTONProvider event connect_error:\", JSON.stringify(error));\n            this.statusChangeErrorSubscriptions.forEach(errorsHandler => errorsHandler(error));\n        });\n    }\n    connected() {\n        if (this.provider.connected()) {\n            return !!this.provider.session.namespaces[\"ton\"];\n        }\n        return false;\n    }\n    account() {\n        try {\n            if (!this.provider.session) {\n                return null;\n            }\n            let tonNameSpace = this.provider.session.namespaces['ton'];\n            if (!tonNameSpace || !tonNameSpace.payload || !tonNameSpace.payload.ton_addr) {\n                return null;\n            }\n            let ton_addr = tonNameSpace.payload.ton_addr;\n            return {\n                address: ton_addr.address,\n                chain: ton_addr.network,\n                walletStateInit: ton_addr.walletStateInit,\n                publicKey: ton_addr.publicKey,\n            };\n        }\n        catch (e) {\n            (0, core_1.logDebug)(\"OKXTONProvider account  error:\", JSON.stringify(e));\n            return null;\n        }\n    }\n    wallet() {\n        if (this.connected()) {\n            try {\n                let sessionWallet = this.provider.session.wallet;\n                let tonDeviceInfo = {\n                    platform: sessionWallet.platform,\n                    appName: sessionWallet.appName,\n                    appVersion: sessionWallet.appVersion,\n                    maxProtocolVersion: sessionWallet.maxProtocolVersion,\n                    features: ['ton_sendTransaction'],\n                };\n                const wallet = {\n                    device: tonDeviceInfo,\n                    provider: \"http\",\n                    account: this.account()\n                };\n                let tonNameSpace = this.provider.session.namespaces['ton'];\n                if (tonNameSpace && tonNameSpace.payload && tonNameSpace.payload.ton_proof) {\n                    wallet.connectItems = {\n                        tonProof: tonNameSpace.payload.ton_proof\n                    };\n                }\n                (0, core_1.logDebug)(\"OKXTONProvider wallet :\", JSON.stringify(wallet));\n                return wallet;\n            }\n            catch (e) {\n                (0, core_1.logDebug)(\"OKXTONProvider wallet  error:\", JSON.stringify(e));\n                return null;\n            }\n        }\n        return null;\n    }\n    onStatusChange(callback, errorsHandler) {\n        this.statusChangeSubscriptions.push(callback);\n        if (errorsHandler) {\n            this.statusChangeErrorSubscriptions.push(errorsHandler);\n        }\n        return () => {\n            this.statusChangeSubscriptions = this.statusChangeSubscriptions.filter(item => item !== callback);\n            if (errorsHandler) {\n                this.statusChangeErrorSubscriptions = this.statusChangeErrorSubscriptions.filter(item => item !== errorsHandler);\n            }\n        };\n    }\n    sendTransaction(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (transaction.network && transaction.network !== core_1.TONCHAIN.MAINNET) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, 'OKXTONProvider sendTransaction network error');\n            }\n            if (!transaction.network) {\n                transaction.network = core_1.TONCHAIN.MAINNET;\n            }\n            if (this.provider.session) {\n                if (!transaction.from) {\n                    const accounts = this.provider.requestAccountsWithNamespace('ton');\n                    transaction.from = accounts[0];\n                }\n            }\n            const requestParams = {\n                method: \"ton_sendTransaction\",\n                params: transaction,\n            };\n            let chain = 'ton:' + core_1.TONCHAIN.MAINNET;\n            (0, core_1.logDebug)(\"OKXTONProvider sendTransaction transaction----:\", chain, JSON.stringify(requestParams));\n            return this.provider.request(requestParams, chain);\n        });\n    }\n}\nexports.OKXTonProvider = OKXTonProvider;\nexports.default = OKXTonProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTronProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXTronProvider {\n    constructor(provider) {\n        this.TRON_CHAIN_ID = \"tron:mainnet\";\n        this.provider = provider;\n    }\n    getChain(chainId) {\n        if (chainId == null) {\n            chainId = this.TRON_CHAIN_ID;\n        }\n        if (chainId != this.TRON_CHAIN_ID) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, \"The chainId:\" + chainId + \"is wrong for OKXTronProvider\");\n        }\n        return chainId;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e;\n        chainId = this.getChain(chainId);\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[core_1.NameSpaceKeyTron]) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        let extra = (_e = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces[core_1.NameSpaceKeyTron]) === null || _d === void 0 ? void 0 : _d.extra) === null || _e === void 0 ? void 0 : _e[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address\n        };\n    }\n    stringToHex(str) {\n        let hex = '';\n        for (let i = 0; i < str.length; i++) {\n            hex += str.charCodeAt(i).toString(16).padStart(2, '0');\n        }\n        return hex;\n    }\n    signMessage(data, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"tron_signMessage\",\n                \"params\": {\n                    \"message\": this.stringToHex(data)\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signMessageV2(data, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"tron_signMessageV2\",\n                \"params\": {\n                    \"message\": data\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let data = {\n                \"method\": \"tron_signTransaction\",\n                \"params\": transaction\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    let signedTx;\n                    if (typeof ret.result == \"string\") {\n                        signedTx = JSON.parse(ret.result);\n                    }\n                    else {\n                        signedTx = ret.result;\n                    }\n                    let realSignTx = {};\n                    realSignTx.visible = signedTx.visible;\n                    realSignTx.txID = signedTx.txID;\n                    let rawData = {};\n                    rawData.contract = signedTx.raw_data.contract;\n                    rawData.expiration = signedTx.raw_data.expiration;\n                    rawData.ref_block_bytes = signedTx.raw_data.ref_block_bytes;\n                    rawData.ref_block_hash = signedTx.raw_data.ref_block_hash;\n                    rawData.timestamp = signedTx.raw_data.timestamp;\n                    realSignTx.raw_data = rawData;\n                    realSignTx.raw_data_hex = signedTx.raw_data_hex;\n                    realSignTx.signature = signedTx.signature;\n                    return realSignTx;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signAndSendTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let data = {\n                \"method\": \"tron_signAndSendTransaction\",\n                \"params\": transaction\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n}\nexports.OKXTronProvider = OKXTronProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXUniversalProvider = void 0;\nconst eip155_1 = require(\"./provider/providers/eip155\");\nconst sui_1 = require(\"./provider/providers/sui\");\nconst constants_1 = require(\"./provider/constants\");\nconst eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\nconst client_1 = require(\"./packages/sign-client/client\");\nconst core_1 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"./packages/utils/namespaces\");\nconst solana_1 = __importDefault(require(\"./provider/providers/solana\"));\nconst btc_1 = __importDefault(require(\"./provider/providers/btc\"));\nconst aptos_1 = __importDefault(require(\"./provider/providers/aptos\"));\nconst ton_1 = __importDefault(require(\"./provider/providers/ton\"));\nconst cosmos_1 = __importDefault(require(\"./provider/providers/cosmos\"));\nconst tron_1 = __importDefault(require(\"./provider/providers/tron\"));\nconst utils_1 = require(\"./provider/utils\");\nconst packages_1 = require(\"./packages\");\nconst provider_1 = require(\"./provider\");\nclass OKXUniversalProvider {\n    static init(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider init() called');\n            // ignore rpc provider check by default\n            (0, utils_1.setGlobal)('disableProviderPing', true);\n            let provider;\n            if (window && window.okxConnectUniversalinwindow && window.okxConnectUniversalinwindow instanceof OKXUniversalProvider) {\n                (0, core_1.logDebug)('OKXUniversalConnect init() old called');\n                provider = window.okxConnectUniversalinwindow;\n            }\n            else {\n                (0, core_1.logDebug)('OKXUniversalConnect init() new called');\n                provider = new OKXUniversalProvider(opts);\n                yield provider.initialize();\n                if (window) {\n                    window.okxConnectUniversalinwindow = provider;\n                }\n            }\n            (0, core_1.getDefaultReporter)().configVersionAndSide('universalprovider-1.5.2', 'dapp', provider.providerOpts.dappMetaData.name);\n            return provider;\n        });\n    }\n    constructor(opts) {\n        this.rpcProviders = {};\n        this.events = new eventemitter3_1.default();\n        this.providerOpts = opts;\n    }\n    request(args, chain) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider request() called');\n            (0, core_1.reportLog)('OKXUniversalProvider request() called');\n            if (!this.connected()) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return yield this.getProvider(namespace).request(requestParam);\n        });\n    }\n    buildRequestParamFromRequest(args, chain) {\n        var _a;\n        (0, core_1.logDebug)(\"UniversalProvider request args >>>>>>>: \", chain, JSON.stringify(args));\n        let [namespace, chainId] = this.validateChain(chain);\n        if (!this.session) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Please call connect() before request()\");\n        }\n        let keyArr = Object.keys(this.session.namespaces);\n        if (!chain && keyArr && keyArr.length > 1) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Multiple chains have been linked, the request method requires chain`);\n        }\n        if (namespace == \"aptos\" && chainId == \"mainnet\") {\n            namespace = \"aptos\";\n            chainId = \"637\";\n        }\n        if (namespace == \"movement\" && chainId == \"testnet\") {\n            namespace = \"aptos\";\n            chainId = \"70000060\";\n        }\n        const requestParam = Object.assign(Object.assign({}, args), { chainId: `${namespace}:${chainId}`, redirect: (_a = args.redirect) !== null && _a !== void 0 ? _a : this.sessionConfig.redirect });\n        return { namespace, requestParam };\n    }\n    enable() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.client) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (!this.session) {\n                if (this.connectOpts) {\n                    yield this.connect(this.connectOpts);\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n                }\n            }\n            const accounts = yield this.requestAccounts();\n            return accounts;\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider disconnect() called');\n            (0, core_1.reportLog)('provider disconnect called');\n            if (!this.session) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n                let called = false;\n                const onRequestSent = () => __awaiter(this, void 0, void 0, function* () {\n                    if (!called) {\n                        called = true;\n                        yield this.disconnectAndEmit();\n                        yield this.cleanup();\n                        resolve();\n                        (0, core_1.logDebug)(\"UniversalProvider disconnect Disconnected\");\n                        (0, core_1.reportLog)('provider disconnect disconnected');\n                    }\n                });\n                try {\n                    yield this.client.disconnect();\n                    yield onRequestSent();\n                }\n                catch (e) {\n                    yield onRequestSent();\n                }\n            }));\n        });\n    }\n    disconnectAndEmit() {\n        var _a, _b;\n        this.client.engine.disconnect();\n        this.events.emit(\"disconnect\", { topic: (_a = this.session) === null || _a === void 0 ? void 0 : _a.topic });\n        this.events.emit(\"session_delete\", { topic: (_b = this.session) === null || _b === void 0 ? void 0 : _b.topic });\n    }\n    aptosChainNameToGeneralId(chainId) {\n        if (chainId == \"aptos:mainnet\") {\n            return \"aptos:637\";\n        }\n        else if (chainId == \"movement:testnet\") {\n            return \"aptos:70000060\";\n        }\n        else {\n            return chainId;\n        }\n    }\n    replaceAptos(opts) {\n        var _a, _b;\n        let aptosNameSpace = (_a = opts.namespaces) === null || _a === void 0 ? void 0 : _a[\"aptos\"];\n        if (aptosNameSpace != undefined) {\n            let realNS = this.replaceAptosInner(aptosNameSpace);\n            if (opts.namespaces != undefined && \"aptos\" in opts.namespaces && realNS != undefined) {\n                opts.namespaces.aptos = realNS;\n            }\n        }\n        let optionAptosNameSpace = (_b = opts.optionalNamespaces) === null || _b === void 0 ? void 0 : _b[\"aptos\"];\n        if (optionAptosNameSpace != undefined) {\n            let realOptionNS = this.replaceAptosInner(optionAptosNameSpace);\n            if (opts.optionalNamespaces != undefined && \"aptos\" in opts.optionalNamespaces && realOptionNS != undefined) {\n                opts.optionalNamespaces.aptos = realOptionNS;\n            }\n        }\n        return opts;\n    }\n    replaceAptosInner(aptosNameSpace) {\n        var _a;\n        if (aptosNameSpace != undefined) {\n            aptosNameSpace.chains = (_a = aptosNameSpace.chains) === null || _a === void 0 ? void 0 : _a.map(chainId => {\n                return this.aptosChainNameToGeneralId(chainId);\n            });\n            if (aptosNameSpace.defaultChain != undefined) {\n                aptosNameSpace.defaultChain = this.aptosChainNameToGeneralId(aptosNameSpace.defaultChain);\n            }\n        }\n        return aptosNameSpace;\n    }\n    replaceAptosGeneralIdWithNetName(chainId) {\n        if (chainId.includes(\"aptos:637\")) {\n            chainId = chainId.replace(\"aptos:637\", \"aptos:mainnet\");\n        }\n        else if (chainId.includes(\"aptos:70000060\")) {\n            chainId = chainId.replace(\"aptos:70000060\", \"movement:testnet\");\n        }\n        return chainId;\n    }\n    replaceSessionAptos(session) {\n        var _a;\n        let namespaces = (_a = session === null || session === void 0 ? void 0 : session.namespaces) === null || _a === void 0 ? void 0 : _a[\"aptos\"];\n        if (namespaces != undefined && namespaces.chains != undefined) {\n            namespaces.chains = namespaces.chains.map(chain => {\n                return this.replaceAptosGeneralIdWithNetName(chain);\n            });\n            namespaces.accounts = namespaces.accounts.map((account) => {\n                return this.replaceAptosGeneralIdWithNetName(account);\n            });\n            let extra = {};\n            Object.keys(namespaces.extra || {}).forEach((key, index) => {\n                let newKey = this.replaceAptosGeneralIdWithNetName(key);\n                extra[this.replaceAptosGeneralIdWithNetName(key)] = Object.values((session === null || session === void 0 ? void 0 : session.namespaces[\"aptos\"].extra) || {})[index];\n            });\n            namespaces.extra = extra;\n        }\n        (0, core_1.logDebug)(\"replaceSessionAptos\", session);\n    }\n    connected() {\n        (0, core_1.logDebug)('OKXUniversalProvider connected() called');\n        (0, core_1.reportLog)('provider connected called');\n        let disconnectInner = () => {\n            try {\n                this.cleanup();\n                this.client.engine.connectManagerDisconnect();\n            }\n            catch (e) {\n                (0, core_1.logDebug)(\"Error during disconnect:\", e);\n            }\n        };\n        try {\n            if (!this.session)\n                return false;\n            if (!this.client.engine.getCurrentConnectionReady()) {\n                disconnectInner();\n                return false;\n            }\n            return true;\n        }\n        catch (e) {\n            disconnectInner();\n            return false;\n        }\n    }\n    connectAndSign(opts, signRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() called');\n            const updatedOpts = Object.assign(Object.assign({}, opts), { signRequest });\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() opts:', JSON.stringify(opts));\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() signRequest:', JSON.stringify(signRequest));\n            return yield this.connect(updatedOpts);\n        });\n    }\n    connect(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider connect() called');\n            (0, core_1.reportLog)('provider connect called');\n            if (!this.client) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (this.connected()) {\n                return this.session;\n            }\n            opts = this.replaceAptos(opts);\n            (0, core_1.logDebug)(`OKXUniversalProvider connect >>>>`, JSON.stringify(opts));\n            if (opts.sessionConfig === undefined) {\n                opts.sessionConfig = {};\n            }\n            if (opts.sessionConfig.openUniversalUrl === undefined) {\n                opts.sessionConfig.openUniversalUrl = (0, core_1.isMobileUserAgent)();\n            }\n            this.setNamespaces(opts);\n            try {\n                (0, core_1.logDebug)(`UniversalProvider connect opts.stringify ====> ${JSON.stringify(opts)}`);\n                let session = yield this.client.connect(opts);\n                this.replaceSessionAptos(session);\n                (0, core_1.logDebug)(`UniversalProvider connect success ====> ${JSON.stringify(session)}`);\n                if (session) {\n                    this.session = session;\n                    this.client.session = session;\n                    (0, core_1.logDebug)(`OKXUniversalProvider connect success opts>>>>`, JSON.stringify(opts));\n                    this.onConnect();\n                    if (opts.signRequest && opts.signRequest.length > 0) {\n                        let requestItem = opts.signRequest[0];\n                        let signResponseList = [];\n                        if (typeof window !== \"undefined\" && window && window.okxConnectUniversalUIinwindow) { //from UI\n                            (0, core_1.logDebug)(`OKXUniversalProvider connect success, us UI SDK>>>>`);\n                            if (this.session.signResponse && this.session.signResponse.length > 0) { // >=6.96\n                                signResponseList = this.session.signResponse;\n                            }\n                        }\n                        else {\n                            (0, core_1.logDebug)(`OKXUniversalProvider connect success, us Universal SDK>>>>`);\n                            if (this.session.signResponse && this.session.signResponse.length > 0) { // >=6.96\n                                signResponseList = this.session.signResponse;\n                            }\n                            else {\n                                signResponseList.push((0, packages_1.creatNotSupportMethodItemReplay)(requestItem));\n                            }\n                        }\n                        (0, core_1.logDebug)(`UniversalProvider connect success connectRequestReply ====> ${JSON.stringify(signResponseList)}`);\n                        setTimeout(() => {\n                            this.events.emit(\"connect_signResponse\", signResponseList);\n                        }, 100);\n                    }\n                    return session;\n                }\n                return undefined;\n            }\n            catch (error) {\n                (0, core_1.logDebug)(`UniversalProvider connect error ====> `, JSON.stringify(error));\n                throw error;\n            }\n        });\n    }\n    syncAllAddresses() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if ((0, provider_1.syncAddressAvailable)(this.session.wallet)) {\n                return this.client.syncAllAddress();\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n            }\n        });\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    setDefaultChain(chain, rpcUrl) {\n        (0, core_1.logDebug)('OKXUniversalProvider setDefaultChain() called');\n        // chain = this.aptosChainNameToGeneralId(chain)\n        try {\n            // ignore without active session\n            if (!this.connected())\n                return;\n            const [namespace, chainId] = this.validateChain(chain);\n            const provider = this.getProvider(namespace);\n            provider.setDefaultChain(chainId, rpcUrl);\n        }\n        catch (error) {\n            // ignore the error if the fx is used prematurely before namespaces are set\n            if (!/Please call connect/.test(error.message))\n                throw error;\n        }\n    }\n    checkStorage() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let sessionInfoStr = yield this.getFromStore(\"connectSession\");\n            (0, core_1.logDebug)(sessionInfoStr);\n            if (sessionInfoStr) {\n                let sessionInfo = sessionInfoStr;\n                this.session = sessionInfo;\n                this.client.session = this.session;\n                this.sessionConfig = sessionInfo.sessionConfig;\n                this.client.sessionConfig = this.sessionConfig;\n                (0, core_1.logDebug)('[evm u-provider] do reconnection', this.session);\n                yield this.client.restoreconnect(sessionInfo);\n                this.createProviders();\n                this.registerEventListeners();\n                setTimeout(() => {\n                    this.events.emit(\"reconnect\", { session: this.session });\n                }, 100);\n                this.registerEventListeners();\n            }\n        });\n    }\n    initialize() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider initialize() called');\n            (0, core_1.reportLog)('provider initialize called');\n            const data = Object.assign({ url: window.location.hostname, origin: window.location.origin }, this.providerOpts.dappMetaData);\n            this.client = new client_1.SignClient(data, this.events);\n            yield this.checkStorage();\n        });\n    }\n    createProviders() {\n        if (!this.client) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n        }\n        if (!this.connected()) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Session not initialized. Please call connect() before enable()\");\n        }\n        const providersToCreate = [\n            ...new Set(Object.keys(this.session.namespaces).map((namespace) => (0, namespaces_1.parseNamespaceKey)(namespace))),\n        ];\n        providersToCreate.forEach((namespace) => {\n            if (!this.session)\n                return;\n            const namespacesValue = this.session.namespaces;\n            const currentNameSpace = namespacesValue[namespace];\n            (0, core_1.logDebug)(\"init eip155 >> \", currentNameSpace);\n            switch (namespace) {\n                case \"eip155\":\n                    const opts = {\n                        namespace: currentNameSpace\n                    };\n                    this.rpcProviders[namespace] = new eip155_1.Eip155Provider(opts, this.client, this.events);\n                    break;\n                case \"solana\":\n                    const opts1 = {\n                        namespace: currentNameSpace\n                    };\n                    let solanaProvider = new solana_1.default(opts1, \"solana\", this.client, this.events);\n                    this.rpcProviders[namespace] = solanaProvider;\n                    let sonicProvider = new solana_1.default(opts1, \"sonic\", this.client, this.events);\n                    this.rpcProviders['sonic'] = sonicProvider;\n                    let svmProvider = new solana_1.default(opts1, \"svm\", this.client, this.events);\n                    this.rpcProviders['svm'] = svmProvider;\n                    // this.rpcProviders[namespace] = new SolanaProvider(opts1, () => { return this.session; });\n                    break;\n                case \"ton\":\n                    const optsTon = {\n                        namespace: currentNameSpace\n                    };\n                    let tonProvider = new ton_1.default(optsTon, this.client, this.events);\n                    this.rpcProviders[namespace] = tonProvider;\n                    break;\n                case \"sui\":\n                    const optsSui = {\n                        namespace: currentNameSpace\n                    };\n                    let suiProvider = new sui_1.SuiProvider(optsSui, this.client, this.events);\n                    suiProvider.name = \"sui\";\n                    this.rpcProviders[namespace] = suiProvider;\n                    break;\n                case \"btc\":\n                    const optsBtc = {\n                        namespace: currentNameSpace\n                    };\n                    let btcProvider = new btc_1.default(optsBtc, \"btc\", this.client, this.events);\n                    this.rpcProviders[\"btc\"] = btcProvider;\n                    let fbProvider = new btc_1.default(optsBtc, \"fractal\", this.client, this.events);\n                    this.rpcProviders[\"fractal\"] = fbProvider;\n                    break;\n                case \"aptos\":\n                    let aptosProvider = new aptos_1.default({\n                        namespace: currentNameSpace\n                    }, \"aptos\", this.client, this.events);\n                    this.rpcProviders[namespace] = aptosProvider;\n                    let moveProvider = new aptos_1.default({\n                        namespace: currentNameSpace\n                    }, \"movement\", this.client, this.events);\n                    this.rpcProviders[\"movement\"] = moveProvider;\n                    break;\n                case \"cosmos\":\n                    let cosmosProvider = new cosmos_1.default({\n                        namespace: currentNameSpace\n                    }, this.client, this.events);\n                    this.rpcProviders[namespace] = cosmosProvider;\n                    break;\n                case \"tron\":\n                    let tronProvider = new tron_1.default({\n                        namespace: currentNameSpace\n                    }, this.client, this.events);\n                    this.rpcProviders[namespace] = tronProvider;\n                    break;\n            }\n        });\n    }\n    registerEventListeners() {\n        if (typeof this.client === \"undefined\") {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client is not initialized\");\n        }\n        this.client.engine.addDisconnectListener(() => {\n            this.disconnectAndEmit();\n            this.cleanup();\n        });\n        this.on(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, (caip2ChainId) => {\n            this.onChainChanged(caip2ChainId);\n        });\n        this.on(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, (nameSpaces) => {\n            if (nameSpaces) {\n                const nameSpacekey = Object.keys(nameSpaces)[0];\n                if (this.session) {\n                    this.session.namespaces[nameSpacekey] = nameSpaces[nameSpacekey];\n                    if (this.session) {\n                        this.persist(\"connectSession\", this.session);\n                        this.events.emit(\"session_update\", this.session);\n                    }\n                    (0, core_1.logDebug)(\"PROVIDER_EVENTS.UPDATE_NAMESPACES this.session... ->>>\", JSON.stringify(this.session));\n                }\n            }\n        });\n    }\n    getProvider(namespace) {\n        (0, core_1.logDebug)('current get providers', this.rpcProviders);\n        (0, core_1.logDebug)('query namespace: ', namespace);\n        return this.rpcProviders[namespace];\n    }\n    setNamespaces(params) {\n        this.connectOpts = params;\n        const { namespaces, sessionConfig } = params;\n        const data = {\n            origin: window.location.origin,\n            url: window.location.hostname,\n            name: this.providerOpts.dappMetaData.name,\n            icon: this.providerOpts.dappMetaData.icon,\n        };\n        this.sessionConfig = Object.assign({ dappInfo: data }, sessionConfig);\n        (0, core_1.logDebug)(\"setNamespaces sessionConfig>>>\", this.sessionConfig);\n        this.client.sessionConfig = this.sessionConfig;\n        this.persist(\"sessionConfig\", sessionConfig);\n    }\n    validateChain(chain) {\n        var _a;\n        let [namespace, chainId] = (chain === null || chain === void 0 ? void 0 : chain.split(\":\")) || [\"\", \"\"];\n        if (!this.session || !this.session.namespaces || !Object.keys(this.session.namespaces).length) {\n            (0, core_1.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        if (namespace) {\n            if (!this.isChainNamespaceInSession(namespace)) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace '${namespace}' is not configured. Please call connect() first with namespace config.`);\n            }\n            if (chainId && chain) {\n                (0, core_1.logDebug)('this.session.namespaces -->> ', namespace, JSON.stringify(this.session.namespaces));\n                const chainsArr = (_a = this.session.namespaces[namespace]) === null || _a === void 0 ? void 0 : _a.chains;\n                (0, core_1.logDebug)('get chainsArr & chain', JSON.stringify(chainsArr), chain);\n                if (chainsArr && !chainsArr.includes(chain)) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace not include the chain '${chain}'`);\n                }\n            }\n        }\n        if (namespace && chainId) {\n            (0, core_1.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        let defaultNamespace = (0, namespaces_1.parseNamespaceKey)(Object.keys(this.session.namespaces)[0]);\n        const defaultChain = this.rpcProviders[defaultNamespace].getDefaultChain();\n        (0, core_1.logDebug)('get default chain:', defaultChain);\n        return [defaultNamespace, defaultChain];\n    }\n    isChainNamespaceInSession(namespaceStr) {\n        var _a, _b;\n        if (Object.keys(((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces) || {})\n            .map((key) => (0, namespaces_1.parseNamespaceKey)(key))\n            .includes(namespaceStr)) {\n            return true;\n        }\n        let isChainNamespaceInSession = false;\n        Object.values(((_b = this.session) === null || _b === void 0 ? void 0 : _b.namespaces) || {})\n            .forEach(namespace => {\n            namespace.chains.forEach(chain => {\n                if (chain.split(\":\")[0] == namespaceStr) {\n                    isChainNamespaceInSession = true;\n                }\n            });\n        });\n        return isChainNamespaceInSession;\n    }\n    requestAccountsWithNamespace(namespace) {\n        return this.getProvider(namespace).requestAccounts();\n    }\n    requestDefaultChainWithNamespace(namespace) {\n        return this.getProvider(namespace).getDefaultChain();\n    }\n    requestAccounts() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const [namespace] = this.validateChain();\n            return yield this.getProvider(namespace).requestAccounts();\n        });\n    }\n    onChainChanged(caip2Chain) {\n        var _a;\n        if (!((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces))\n            return;\n        const [namespace, chainId] = this.validateChain(caip2Chain);\n        if (!chainId)\n            return;\n        if (this.session.namespaces[namespace]) {\n            this.session.namespaces[namespace].defaultChain = chainId;\n            this.persist(\"connectSession\", this.session);\n        }\n        this.events.emit(\"chainChanged\", chainId);\n    }\n    onConnect() {\n        this.createProviders();\n        if (this.session) {\n            this.persist(\"connectSession\", this.session);\n        }\n        this.events.emit(\"connect\", { session: this.session });\n        this.registerEventListeners();\n    }\n    cleanup() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.session = undefined;\n            this.client.session = undefined;\n            this.sessionProperties = undefined;\n            this.persist(\"optionalNamespaces\", undefined);\n            this.persist(\"sessionProperties\", undefined);\n            this.persist(\"connectSession\", undefined);\n        });\n    }\n    persist(key, data) {\n        (0, core_1.logDebug)('[evm u-provider] persisit data', key, data);\n        return this.client.engine.saveSessionContent(key, data);\n    }\n    getFromStore(key) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.client.engine.getSessionContent(key);\n        });\n    }\n    showRequestModal(args, chain) {\n        try {\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return this.getProvider(namespace).showRequestModal(requestParam);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    injectConnect(connectionRequest) {\n        this.client.engine.injectConnect(connectionRequest);\n    }\n}\nexports.OKXUniversalProvider = OKXUniversalProvider;\nexports.default = OKXUniversalProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTronProvider = exports.OKXTonProvider = exports.OKXCosmosProvider = exports.OKXBtcProvider = exports.OKXUniversalProvider = void 0;\n__exportStar(require(\"./provider/types\"), exports);\n__exportStar(require(\"./packages\"), exports);\nvar OKXUniversalProvider_1 = require(\"./OKXUniversalProvider\");\nObject.defineProperty(exports, \"OKXUniversalProvider\", { enumerable: true, get: function () { return OKXUniversalProvider_1.OKXUniversalProvider; } });\nvar OKXBtcProvider_1 = require(\"./OKXBtcProvider\");\nObject.defineProperty(exports, \"OKXBtcProvider\", { enumerable: true, get: function () { return OKXBtcProvider_1.OKXBtcProvider; } });\nvar OKXCosmosProvider_1 = require(\"./OKXCosmosProvider\");\nObject.defineProperty(exports, \"OKXCosmosProvider\", { enumerable: true, get: function () { return OKXCosmosProvider_1.OKXCosmosProvider; } });\nvar OKXTonProvider_1 = require(\"./OKXTonProvider\");\nObject.defineProperty(exports, \"OKXTonProvider\", { enumerable: true, get: function () { return OKXTonProvider_1.OKXTonProvider; } });\nvar OKXTronProvider_1 = require(\"./OKXTronProvider\");\nObject.defineProperty(exports, \"OKXTronProvider\", { enumerable: true, get: function () { return OKXTronProvider_1.OKXTronProvider; } });\n__exportStar(require(\"@okxconnect/core\"), exports);\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./utils\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SignClient = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"../utils/namespaces\");\nconst ConnectMethodUtils_1 = require(\"../utils/ConnectMethodUtils\");\nconst constants_1 = require(\"../../provider/constants\");\nclass SignClient extends core_1.ISignClient {\n    constructor(metaData, events) {\n        super(metaData);\n        // ---------- Engine ----------------------------------------------- //\n        this.connect = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    var connectRequest = [];\n                    (0, core_1.logDebug)(`client connect params >>>`, JSON.stringify(params));\n                    var requestAccountItem = {\n                        name: \"requestAccounts\",\n                        requiredNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.namespaces),\n                        optionalNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.optionalNamespaces),\n                    };\n                    this.engine.setSessionConnectingListener(() => {\n                        (0, core_1.logDebug)(`sessionConnectingListener >>>`);\n                        this.events.emit(constants_1.PROVIDER_EVENTS.SESSION_CONNECTING);\n                    });\n                    if (params.signRequest) {\n                        requestAccountItem.connectRequestMethods = yield (0, ConnectMethodUtils_1.connectMethodsToConnectWalletMethods)(params.signRequest, requestAccountItem.requiredNamespaces);\n                    }\n                    connectRequest.push(requestAccountItem);\n                    (0, core_1.logDebug)(`client connect connectRequest >>>`, JSON.stringify(connectRequest));\n                    this.engine.universalConnect(connectRequest, Object.assign({ dappInfo: this.metadata }, params.sessionConfig), (info) => {\n                        if (info && info.connectRequest) {\n                            (0, core_1.logDebug)(`universalConect info.connectRequest :`, info.connectRequest);\n                            (0, core_1.logDebug)(`universalConect url:`, (0, core_1.getOKXLink)(info.connectRequest, this.sessionConfig.useMini));\n                            this.events.emit(\"display_uri\", (0, core_1.getOKXLink)(info.connectRequest, this.sessionConfig.useMini));\n                            this.events.emit(\"short_display_uri\", (0, core_1.getAppWalletShortDeepLink)(info.connectRequest.topic, info.connectRequest.clientId));\n                            (0, core_1.logDebug)(`universalConect EngineConnectInfo  ${JSON.stringify(info)}`);\n                            this.events.emit(\"okx_engine_connect_params\", info);\n                        }\n                    }).then((session) => __awaiter(this, void 0, void 0, function* () {\n                        (0, namespaces_1.fillParamsToSession)(session, params.namespaces, params.optionalNamespaces, this.sessionConfig);\n                        (0, core_1.logDebug)(`signClient: connect: session ${JSON.stringify(session)}`);\n                        if (params.signRequest) {\n                            yield (0, ConnectMethodUtils_1.connectMethodsResponseUpdate)(session, params.signRequest);\n                        }\n                        resolve(session);\n                    })).catch((e) => {\n                        (0, core_1.logDebug)(`signClient: connect: catch ${JSON.stringify(e)}`);\n                        this.events.emit(\"connect_error\", e);\n                        reject(e);\n                    });\n                }\n                catch (error) {\n                    (0, core_1.logDebug)(`signClient: connect:  ${JSON.stringify(error)}`);\n                    reject(error);\n                }\n            }));\n        });\n        this.restoreconnect = (sessionConfig) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.restoreconnect(sessionConfig, (session) => {\n                    resolve(session);\n                });\n            });\n        });\n        this.reject = (params) => __awaiter(this, void 0, void 0, function* () {\n            //   try {\n            //     return await this.engine.reject(params);\n            //   } catch (error: any) {\n            //     this.logger.error(error.message);\n            //     throw error;\n            //   }\n        });\n        //\n        // public update: ISignClient[\"update\"] = async (params) => {\n        //   return\n        // //   try {\n        // //     return await this.engine.update(params);\n        // //   } catch (error: any) {\n        // //     this.logger.error(error.message);\n        // //     throw error;\n        // //   }\n        // };\n        this.request = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                (0, core_1.logDebug)(\"clint request --params>>>> >\", this.engine.getCurrentConnectionReady(), (_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl, JSON.stringify(params));\n                try {\n                    // this.sessionConfig\n                    if (((_b = this.sessionConfig) === null || _b === void 0 ? void 0 : _b.openUniversalUrl) && (0, core_1.isIos)()) {\n                        this.openOKXWallet();\n                    }\n                    yield this.engine.send(params, {\n                        resolve: (response) => {\n                            delete response.requestId;\n                            (0, core_1.logDebug)(\"clint request --response >\", JSON.stringify(response));\n                            if (('error' in response) && response.error) {\n                                let error = response.error;\n                                reject(new core_1.OKXConnectError(response.error.code, response.method + \":\" + error.message));\n                            }\n                            else {\n                                resolve(response);\n                            }\n                        },\n                        onAck: () => {\n                            var _a;\n                            if (!(0, core_1.isIos)() && ((_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl)) {\n                                this.openOKXWallet();\n                            }\n                        }\n                    });\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }));\n        });\n        // public emit: ISignClient[\"emit\"] = async (params) => {\n        //     try {\n        //         // return await this.engine.emit(params);\n        //     } catch (error: any) {\n        //         throw error;\n        //     }\n        // };\n        this.disconnect = () => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.send({\n                    method: \"disconnect\"\n                }, {\n                    onAck: () => {\n                        resolve();\n                    }\n                }, undefined, 86400000).catch((error) => {\n                    console.log(`disconnect : ${JSON.stringify(error)}`);\n                    reject(error);\n                });\n            });\n        });\n        this.engine = new core_1.Engine(metaData.name);\n        this.events = events;\n        this.metadata = metaData;\n    }\n    openOKXWallet() {\n        var _a;\n        // if (this.openUniversalUrl){\n        (0, core_1.logDebug)('bridge-provider ==>> connect_5');\n        if ((_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.useMini) {\n            let url = (0, core_1.getTelegramWalletTWAUrl)(undefined, this.sessionConfig.tmaReturnUrl);\n            (0, core_1.openOKXTMAWalletlinkWithFallback)(url);\n        }\n        else {\n            (0, core_1.openOKXDeeplink)(core_1.standardDeeplink);\n        }\n        // }\n    }\n    syncAllAddress() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.send({\n                    method: \"sync_all_addresses\"\n                }, {\n                    resolve: (response) => {\n                        delete response.requestId;\n                        (0, core_1.logDebug)(\"clint syncAllAddress --response >\", JSON.stringify(response));\n                        if (('error' in response) && response.error) {\n                            let error = response.error;\n                            reject(new core_1.OKXConnectError(response.error.code, response.method + \":\" + error.message));\n                        }\n                        else {\n                            let allAddressStr = response.result;\n                            resolve((0, ConnectMethodUtils_1.syncResoonseToRequire)(allAddressStr));\n                        }\n                    }\n                }).catch((error) => {\n                    console.log(`disconnect : ${JSON.stringify(error)}`);\n                    reject(error);\n                });\n            });\n        });\n    }\n}\nexports.SignClient = SignClient;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.connectSupportMethods = void 0;\nexports.creatNotSupportMethodItemReplay = creatNotSupportMethodItemReplay;\nexports.connectMethodsAdaptOldVersion = connectMethodsAdaptOldVersion;\nexports.connectMethodsResponseUpdate = connectMethodsResponseUpdate;\nexports.connectMethodsToConnectWalletMethods = connectMethodsToConnectWalletMethods;\nexports.syncResoonseToRequire = syncResoonseToRequire;\nconst core_1 = require(\"@okxconnect/core\");\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst uint8array_extras_1 = require(\"uint8array-extras\");\nconst provider_1 = require(\"../../provider\");\nfunction isArray(value) {\n    return typeof value === \"object\" && value !== null && Array.isArray(value);\n}\nfunction isRecord(value) {\n    return typeof value === \"object\" && value !== null && !Array.isArray(value);\n}\n// \"wallet_addEthereumChain\",\nexports.connectSupportMethods = Object.freeze([\n    \"personal_sign\",\n    \"solana_signMessage\",\n    \"sui_signMessage\",\n    \"sui_signPersonalMessage\",\n    \"btc_signMessage\",\n    \"aptos_signMessage\",\n    \"cosmos_signArbitrary\",\n    \"tron_signMessage\",\n    \"tron_signMessageV2\",\n    \"sync_all_addresses\"\n]);\nfunction creatNotSupportMethodItemReplay(requestParams) {\n    let notSupportError = new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n    var errorItem = {\n        method: requestParams.method,\n        chainId: requestParams.chainId,\n        error: {\n            code: notSupportError.code,\n            message: notSupportError.message\n        },\n    };\n    return errorItem;\n}\nfunction connectMethodsAdaptOldVersion(requestParams, session) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b, _c, _d, _e;\n        try {\n            (0, core_1.logDebug)(\"connectMethodsAdaptOldVersion start params :\", JSON.stringify(requestParams));\n            let callBackParams = {};\n            if (requestParams.method === \"solana_signMessage\") {\n                let solAccount = (_a = session.namespaces[core_1.NameSpaceKeySOL]) === null || _a === void 0 ? void 0 : _a.accounts.filter(function (account1) {\n                    return account1.startsWith(requestParams.chainId);\n                })[0];\n                const solAddress = (0, provider_1.fromAccountToAddress)(solAccount);\n                if (requestParams.params && solAddress && \"message\" in requestParams.params) {\n                    let realMessage = requestParams.params.message;\n                    if (((_b = session.wallet) === null || _b === void 0 ? void 0 : _b.appName) == \"OKX Wallet\") {\n                        realMessage = bs58_1.default.encode((0, uint8array_extras_1.stringToUint8Array)(realMessage));\n                    }\n                    requestParams.params = {\n                        message: realMessage,\n                        \"pubkey\": solAddress\n                    };\n                    callBackParams = {\n                        publicKey: solAddress\n                    };\n                    (0, core_1.logDebug)(\"solana_signMessage account and address:\", JSON.stringify(solAccount), solAddress);\n                    (0, core_1.logDebug)(\"solana_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"sui_signMessage\" || requestParams.method === \"sui_signPersonalMessage\") {\n                if (\"message\" in requestParams.params && requestParams.params.message) {\n                    let suiMessage = JSON.parse(JSON.stringify(requestParams.params.message));\n                    let convertedArray = Object.values(suiMessage);\n                    let uint8Array = new Uint8Array(convertedArray);\n                    let decoder = new TextDecoder(\"utf8\");\n                    let b64encoded = btoa(decoder.decode(uint8Array));\n                    requestParams.params = {\n                        message: atob(b64encoded),\n                    };\n                    console.log(\"sui_signMessag suiMessagee suiMessageb64:>>>>\", JSON.stringify(requestParams.params), b64encoded);\n                    if (requestParams.method === \"sui_signMessage\") {\n                        callBackParams = {\n                            \"messageBytes\": b64encoded,\n                            \"signature\": \"\"\n                        };\n                    }\n                    else if (requestParams.method === \"sui_signPersonalMessage\") {\n                        callBackParams = {\n                            \"bytes\": b64encoded,\n                            \"signature\": \"\"\n                        };\n                    }\n                    (0, core_1.logDebug)(\"sui_signMessage/sui_signPersonalMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"btc_signMessage\") {\n                let btcAccounts = (_c = session.namespaces[core_1.NameSpaceKeyBtc]) === null || _c === void 0 ? void 0 : _c.accounts.filter(function (account2) {\n                    return account2.startsWith(requestParams.chainId);\n                });\n                let btcAccount = btcAccounts[0];\n                const btcAddress = (0, provider_1.fromAccountToAddress)(btcAccount);\n                (0, core_1.logDebug)(\"btc_signMessage account and address:\", JSON.stringify(btcAccount), btcAddress);\n                if (btcAddress) {\n                    requestParams.params[\"from\"] = btcAddress;\n                    (0, core_1.logDebug)(\"btc_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"aptos_signMessage\") {\n                let paramData = requestParams.params;\n                let aptosAccount = (_d = session.namespaces[core_1.NameSpaceKeyAptos]) === null || _d === void 0 ? void 0 : _d.accounts.filter(function (account3) {\n                    return account3.startsWith(requestParams.chainId);\n                })[0];\n                let aptosAddress = (0, provider_1.fromAccountToAddress)(aptosAccount);\n                if (paramData && aptosAddress) {\n                    let prefix = \"APTOS\";\n                    let message = \"\", nonce = \"\";\n                    var fullMessage = prefix;\n                    let application = window.location.protocol + \"//\" + window.location.hostname;\n                    if (\"address\" in paramData && paramData.address) {\n                        fullMessage += \"\\naddress: \" + aptosAddress;\n                    }\n                    if (\"application\" in paramData && paramData.application) {\n                        fullMessage += \"\\napplication: \" + application;\n                    }\n                    let aptosChainId = 1;\n                    if (\"chainId\" in paramData && paramData.chainId) {\n                        if (paramData.chainId == \"aptos:mainnet\") {\n                            aptosChainId = 1;\n                        }\n                        else if (paramData.chainId == \"movement:testnet\") {\n                            aptosChainId = 2;\n                        }\n                        fullMessage += \"\\nchainId: \" + aptosChainId;\n                    }\n                    if (\"message\" in paramData) {\n                        fullMessage += \"\\nmessage: \" + paramData.message;\n                        message = paramData.message;\n                    }\n                    if (\"nonce\" in paramData) {\n                        fullMessage += \"\\nnonce: \" + paramData.nonce;\n                        nonce = paramData.nonce;\n                    }\n                    const utf8Array = new TextEncoder().encode(fullMessage);\n                    const hex = Array.from(utf8Array)\n                        .map(byte => byte.toString(16).padStart(2, \"0\"))\n                        .join(\"\");\n                    requestParams.params = {\n                        \"message\": hex,\n                    };\n                    (0, core_1.logDebug)(\"aptos_signMessage requestParams:\", JSON.stringify(requestParams));\n                    callBackParams = {\n                        address: aptosAddress,\n                        application: application,\n                        chainId: aptosChainId,\n                        fullMessage: fullMessage,\n                        message: message,\n                        nonce: nonce,\n                        prefix: prefix,\n                        signature: \"\",\n                    };\n                    (0, core_1.logDebug)(\"aptos_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"cosmos_signArbitrary\") {\n                let cosmosAccount = (_e = session === null || session === void 0 ? void 0 : session.namespaces[core_1.NameSpaceKeyCosmos]) === null || _e === void 0 ? void 0 : _e.accounts.filter(function (account_cosmos) {\n                    return account_cosmos.startsWith(requestParams.chainId);\n                })[0];\n                const cosmosAddress = (0, provider_1.fromAccountToAddress)(cosmosAccount);\n                let cosmosData = requestParams.params[\"message\"];\n                const cosmosBase64Encoded = (0, uint8array_extras_1.stringToBase64)(cosmosData);\n                (0, core_1.logDebug)(\"cosmos_signArbitrary account and address:\", JSON.stringify(cosmosAccount), cosmosAddress);\n                (0, core_1.logDebug)(\"cosmos_signArbitrary cosmosBase64Encoded:\", cosmosBase64Encoded);\n                if (cosmosData && cosmosAddress) {\n                    const signDoc = {\n                        chain_id: \"\",\n                        account_number: \"0\",\n                        sequence: \"0\",\n                        fee: {\n                            gas: \"0\",\n                            amount: []\n                        },\n                        msgs: [{\n                                \"type\": \"sign/MsgSignData\",\n                                \"value\": {\n                                    \"signer\": cosmosAddress,\n                                    \"data\": cosmosBase64Encoded\n                                }\n                            }],\n                        memo: \"\"\n                    };\n                    requestParams.params = {\n                        \"signer\": cosmosAddress,\n                        \"chain_id\": requestParams.chainId.split(\":\")[1],\n                        \"data\": signDoc\n                    };\n                    (0, core_1.logDebug)(\"cosmos_signArbitrary callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            (0, core_1.logDebug)(\"sol_handleSignatureData end params:\", JSON.stringify(requestParams));\n        }\n        catch (error) {\n            throw error;\n        }\n    });\n}\nfunction connectMethodsResponseUpdate(session, requestParams) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a;\n        try {\n            if (session.signResponse) {\n                (0, core_1.logDebug)(\"connectMethodsResponseUpdate signResponse:\", JSON.stringify(session.signResponse));\n                (0, core_1.logDebug)(\"connectMethodsResponseUpdate session.namespaces:\", JSON.stringify(session.namespaces));\n                for (const methodItem of session.signResponse) {\n                    (0, core_1.logDebug)(\"connectMethodsResponseUpdate methodItem:\", JSON.stringify(methodItem));\n                    if (\"result\" in methodItem) {\n                        if (methodItem.method === \"solana_signMessage\") {\n                            let solanaSuccessData = methodItem.result;\n                            (0, core_1.logDebug)(\"solana_signMessage methodItem.chainId:\", methodItem.chainId);\n                            let account = (_a = session.namespaces[core_1.NameSpaceKeySOL]) === null || _a === void 0 ? void 0 : _a.accounts.filter(function (account) {\n                                (0, core_1.logDebug)(\"solana_signMessage account:\", account);\n                                return account.startsWith(methodItem.chainId);\n                            })[0];\n                            (0, core_1.logDebug)(\"solana_signMessage result account:\", solanaSuccessData, account);\n                            if (solanaSuccessData && account) {\n                                methodItem.result = {\n                                    \"signature\": bs58_1.default.decode(solanaSuccessData),\n                                    \"publicKey\": (0, provider_1.fromAccountToAddress)(account)\n                                };\n                            }\n                        }\n                        else if (methodItem.method === \"sui_signMessage\" || methodItem.method === \"sui_signPersonalMessage\") {\n                            let suiMethod = requestParams.filter(function (requestMethod) {\n                                return requestMethod.method === methodItem.method;\n                            })[0];\n                            if (suiMethod && suiMethod.params && \"message\" in suiMethod.params) {\n                                let suiMessage = suiMethod.params.message;\n                                let suiMessageb64 = btoa(suiMessage);\n                                console.log(\"sui_signMessag suiMessagee suiMessageb64:>>>>\", suiMessage, suiMessageb64);\n                                if (methodItem.method === \"sui_signMessage\") {\n                                    methodItem.result = {\n                                        \"messageBytes\": suiMessageb64,\n                                        \"signature\": methodItem.result\n                                    };\n                                }\n                                else if (methodItem.method === \"sui_signPersonalMessage\") {\n                                    methodItem.result = {\n                                        \"bytes\": suiMessageb64,\n                                        \"signature\": methodItem.result\n                                    };\n                                }\n                            }\n                        }\n                        else if (methodItem.method === \"aptos_signMessage\") {\n                            if (methodItem.chainId === \"aptos:637\") {\n                                methodItem.chainId = \"aptos:mainnet\";\n                            }\n                            else if (methodItem.chainId === \"aptos:70000060\") {\n                                methodItem.chainId = \"movement:testnet\";\n                            }\n                            methodItem.result = JSON.parse(methodItem.result);\n                            console.log(\"aptos_signMessage result methodItem.result before:>>>>\", JSON.stringify(methodItem.result));\n                            if (methodItem.result && \"signature\" in methodItem.result) {\n                                let aptosSignature = methodItem.result.signature;\n                                if (aptosSignature && aptosSignature.startsWith(\"0x\")) {\n                                    aptosSignature = aptosSignature.slice(2, aptosSignature.length);\n                                    methodItem.result.signature = aptosSignature;\n                                }\n                            }\n                            console.log(\"aptos_signMessage result methodItem.result after:>>>>\", JSON.stringify(methodItem.result));\n                        }\n                        else if (methodItem.method === \"cosmos_signArbitrary\") {\n                            methodItem.result = JSON.parse(methodItem.result);\n                        }\n                        else if (methodItem.method == 'sync_all_addresses') {\n                            methodItem.result = syncResoonseToRequire(methodItem.result);\n                        }\n                    }\n                }\n            }\n        }\n        catch (error) {\n            (0, core_1.logDebug)(\"connectMethodsResponseUpdate signResponse Error:\", JSON.stringify(error));\n            throw error;\n        }\n    });\n}\nfunction connectMethodsToConnectWalletMethods(params, requireNameSpace) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            (0, core_1.logDebug)(\"connectMethodsToConnectWalletMethods requestMethods:\", JSON.stringify(params));\n            const result = [];\n            //TODO  后面需要打开限制\n            if (params && params.length > 1) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect requestMethods only support one data`);\n            }\n            if (!requireNameSpace && params && params.length > 0) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error , RequestMethods cannot be added when the NameSpace is empty`);\n            }\n            // check chianId\n            for (const methodItem of params) {\n                if (methodItem.method === \"aptos_signMessage\") { //update chainId\n                    if (methodItem.chainId === \"aptos:mainnet\") {\n                        methodItem.chainId = \"aptos:637\";\n                    }\n                    else if (methodItem.chainId === \"movement:testnet\") {\n                        methodItem.chainId = \"aptos:70000060\";\n                    }\n                }\n                // check chianId\n                if (methodItem.method === \"wallet_addEthereumChain\") {\n                    var includeEip155 = requireNameSpace === null || requireNameSpace === void 0 ? void 0 : requireNameSpace.some(space => space.namespace.includes(\"eip155\"));\n                    if (!includeEip155) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error, When using '${methodItem.method}', the EVM chain needs to be included in the NameSpace`);\n                    }\n                }\n                else if (methodItem.method === \"sync_all_addresses\") {\n                    if ((0, provider_1.syncAddressHostAvailable)()) {\n                        methodItem.chainId = \"\";\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                    }\n                }\n                else {\n                    const includeChain = !!(requireNameSpace === null || requireNameSpace === void 0 ? void 0 : requireNameSpace.some(space => space.chains.some(chain => chain.includes(`${methodItem.chainId}`))));\n                    if (!includeChain) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error, When using '${methodItem.method}', NameSpace must contain '${methodItem.chainId}'`);\n                    }\n                }\n            }\n            for (const item of params) {\n                if (!exports.connectSupportMethods.includes(item.method)) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect requestMethods not support method, method: '${item.method}'`);\n                }\n                if (item.method === \"wallet_addEthereumChain\") {\n                    if (Array.isArray(item.params)) {\n                        const paramsArr = item.params;\n                        if (paramsArr && paramsArr.length === 1) {\n                            const firstParam = paramsArr[0];\n                            if (isRecord(firstParam)) {\n                                item.params = firstParam;\n                            }\n                        }\n                        else if (paramsArr && paramsArr.length > 1) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params only support one data, method: '${item.method}'`);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is nil, method: '${item.method}'`);\n                        }\n                    }\n                }\n                else if (item.method === \"personal_sign\") {\n                    if (isArray(item.params)) {\n                        if (item.params && item.params.length !== 1) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params error,  method: '${item.method}' `);\n                        }\n                        let firstObj = item.params[0];\n                        if (firstObj && typeof firstObj === 'string') {\n                            item.params = {\n                                message: firstObj\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                }\n                else if (item.method === \"sui_signMessage\" || item.method === \"sui_signPersonalMessage\") {\n                    if (isRecord(item.params) && 'message' in item.params) {\n                        if (item.params.message) {\n                            (0, core_1.logDebug)(\"sui_signMessage item.params.message :\", item.params.message);\n                            let message = JSON.parse(JSON.stringify(item.params.message));\n                            let convertedArray = Object.values(message);\n                            let uint8Array = new Uint8Array(convertedArray);\n                            let decoder = new TextDecoder(\"utf8\");\n                            let b64encoded = btoa(decoder.decode(uint8Array));\n                            item.params.message = atob(b64encoded);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"solana_signMessage\") {\n                    if (isRecord(item.params) && 'message' in item.params) {\n                        if (item.params.message && typeof item.params.message === 'string') {\n                            item.params[\"bs58Message\"] = bs58_1.default.encode((0, uint8array_extras_1.stringToUint8Array)(item.params.message));\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"aptos_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (item.chainId && (item.chainId === \"aptos:637\" || item.chainId === \"aptos:70000060\")) {\n                            var aptosParams = item.params;\n                            var currentURL = window.location.protocol + \"//\" + window.location.hostname;\n                            let signChainId = 1;\n                            if (item.chainId === \"aptos:637\") {\n                            }\n                            else if (item.chainId === \"aptos:70000060\") {\n                                signChainId = 2;\n                            }\n                            item.params = {\n                                data: aptosParams,\n                                applicationUrl: currentURL,\n                                prefix: \"APTOS\",\n                                aptosChainId: signChainId\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params chainId is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"cosmos_signArbitrary\") {\n                    if (isRecord(item.params)) {\n                        if (item.params.message && typeof item.params.message === 'string') {\n                            const base64Encoded = (0, uint8array_extras_1.stringToBase64)(item.params.message);\n                            let cosmosChain = item.chainId.split(\":\")[1];\n                            if (cosmosChain) {\n                                item.params = {\n                                    chain_id: cosmosChain,\n                                    data: {\n                                        chain_id: \"\",\n                                        account_number: \"0\",\n                                        sequence: \"0\",\n                                        fee: {\n                                            gas: \"0\",\n                                            amount: []\n                                        },\n                                        msgs: [{\n                                                \"type\": \"sign/MsgSignData\",\n                                                \"value\": {\n                                                    \"signer\": \"\", //address\n                                                    \"data\": base64Encoded\n                                                }\n                                            }],\n                                        memo: \"\"\n                                    }\n                                };\n                            }\n                            else {\n                                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params chainId is error,  method: '${item.method}' `);\n                            }\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params message is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method == \"tron_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (\"message\" in item.params && item.params.message && typeof item.params.message === 'string') {\n                            item.params.message = stringToHex(item.params.message);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                (0, core_1.logDebug)(\"connectMethodsToConnectWalletMethods item:\", JSON.stringify(item));\n                result.push(item);\n            }\n            return result;\n        }\n        catch (error) {\n            throw error;\n        }\n    });\n}\nfunction stringToHex(str) {\n    let hex = '';\n    for (let i = 0; i < str.length; i++) {\n        hex += str.charCodeAt(i).toString(16).padStart(2, '0');\n    }\n    return hex;\n}\nfunction syncResoonseToRequire(responseAddressStr) {\n    const allAddress = JSON.parse(responseAddressStr);\n    const result = {\n        type: allAddress.type,\n        isEvm: allAddress.isEvm,\n        walletName: allAddress.walletName,\n        deriveName: allAddress.deriveName,\n        addresses: allAddress.addresses.map((addr) => ({\n            coinId: addr.ci,\n            address: addr.a && addr.a !== 'null' ? addr.a : allAddress.evmAddress,\n        })),\n    };\n    return result;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.creatNotSupportMethodItemReplay = exports.connectMethodsAdaptOldVersion = void 0;\nvar ConnectMethodUtils_1 = require(\"./ConnectMethodUtils\");\nObject.defineProperty(exports, \"connectMethodsAdaptOldVersion\", { enumerable: true, get: function () { return ConnectMethodUtils_1.connectMethodsAdaptOldVersion; } });\nObject.defineProperty(exports, \"creatNotSupportMethodItemReplay\", { enumerable: true, get: function () { return ConnectMethodUtils_1.creatNotSupportMethodItemReplay; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAccountsChains = getAccountsChains;\nexports.nameSpaceToConnectWalletNameSpace = nameSpaceToConnectWalletNameSpace;\nexports.fillParamsToSession = fillParamsToSession;\nexports.isCaipNamespace = isCaipNamespace;\nexports.parseNamespaceKey = parseNamespaceKey;\nconst core_1 = require(\"@okxconnect/core\");\nfunction getAccountsChains(accounts) {\n    const chains = [];\n    accounts.forEach((account) => {\n        const [chain, chainId] = account.split(\":\");\n        chains.push(`${chain}:${chainId}`);\n    });\n    return chains;\n}\nfunction nameSpaceToConnectWalletNameSpace(namespaces) {\n    var result = [];\n    if (!namespaces) {\n        return result;\n    }\n    Object.keys(namespaces).forEach((key) => {\n        if (key === core_1.NameSpaceKeyEip155 || key === core_1.NameSpaceKeySOL || key === core_1.NameSpaceKeySui || key === core_1.NameSpaceKeyAptos\n            || key == core_1.NameSpaceKeyBtc || key === core_1.NameSpaceKeyTON || key === core_1.NameSpaceKeyCosmos || key === core_1.NameSpaceKeyTron) {\n            if (namespaces[key].chains) {\n                result.push({\n                    namespace: key,\n                    chains: namespaces[key].chains,\n                    params: namespaces[key].params\n                });\n            }\n        }\n    });\n    return result;\n}\nfunction fillParamsToSession(session, namespaces, optionalNamespaces, sessionConfig) {\n    // Helper function to merge rpcMaps\n    const mergeRpcMap = (targetRpcMap, sourceRpcMap) => {\n        Object.assign(targetRpcMap, sourceRpcMap);\n    };\n    // Merge function for namespaces\n    const mergeNamespaces = (target, source) => {\n        for (const key in source) {\n            if (source.hasOwnProperty(key) && source[key].rpcMap) {\n                if (source[key].rpcMap) {\n                    if (!target[key].rpcMap) {\n                        target[key].rpcMap = {};\n                    }\n                    // 合并 rpcMap\n                    mergeRpcMap(target[key].rpcMap, source[key].rpcMap);\n                }\n                if (source[key].defaultChain && target[key].defaultChain === undefined) {\n                    //defaultChain need in session nameSpace\n                    if (target[key].chains.some(chain => chain.split(\":\")[1] === source[key].defaultChain)) {\n                        target[key].defaultChain = source[key].defaultChain;\n                    }\n                }\n            }\n        }\n    };\n    // 合并 namespaces\n    if (namespaces) {\n        mergeNamespaces(session.namespaces, namespaces);\n    }\n    // 合并 optionalNamespaces\n    if (optionalNamespaces) {\n        mergeNamespaces(session.namespaces, optionalNamespaces);\n    }\n    session.sessionConfig = sessionConfig;\n}\n/**\n * util designed for Wallets that builds namespaces structure by provided supported chains, methods, events & accounts.\n * It takes required & optional namespaces provided in the session proposal\n * along with the supported chains/methods/events/accounts by the wallet and returns a structured namespaces object\n * @param {BuildApprovedNamespacesParams} params\n * @returns {SessionTypes.Namespaces}\n */\n// export function buildApprovedNamespaces(\n//   params: BuildApprovedNamespacesParams,\n// ): SessionTypes.Namespaces {\n//   const {\n//     proposal: { requiredNamespaces, optionalNamespaces = {} },\n//     supportedNamespaces,\n//   } = params;\n//   const normalizedRequired = normalizeNamespaces(requiredNamespaces);\n//   const normalizedOptional = normalizeNamespaces(optionalNamespaces);\n//\n//   // build approved namespaces\n//   const namespaces = {};\n//   Object.keys(supportedNamespaces).forEach((namespace) => {\n//     const supportedChains = supportedNamespaces[namespace].chains;\n//     const supportedMethods = supportedNamespaces[namespace].methods;\n//     const supportedEvents = supportedNamespaces[namespace].events;\n//     const supportedAccounts = supportedNamespaces[namespace].accounts;\n//\n//     supportedChains.forEach((chain) => {\n//       if (!supportedAccounts.some((account) => account.includes(chain))) {\n//         throw new Error(`No accounts provided for chain ${chain} in namespace ${namespace}`);\n//       }\n//     });\n//\n//     namespaces[namespace] = {\n//       chains: supportedChains,\n//       methods: supportedMethods,\n//       events: supportedEvents,\n//       accounts: supportedAccounts,\n//     };\n//   });\n//\n//   // verify all required namespaces are supported\n//   const err = isConformingNamespaces(requiredNamespaces, namespaces, \"approve()\");\n//   if (err) throw new Error(err.message);\n//\n//   const approvedNamespaces = {};\n//\n//   // if both required & optional namespaces are empty, return all supported namespaces by the wallet\n//   if (!Object.keys(requiredNamespaces).length && !Object.keys(optionalNamespaces).length)\n//     return namespaces;\n//\n//   // assign accounts for the required namespaces\n//   Object.keys(normalizedRequired).forEach((requiredNamespace) => {\n//     const chains = supportedNamespaces[requiredNamespace].chains.filter((chain) =>\n//       normalizedRequired[requiredNamespace]?.chains?.includes(chain),\n//     );\n//     const methods = supportedNamespaces[requiredNamespace].methods.filter((method) =>\n//       normalizedRequired[requiredNamespace]?.methods?.includes(method),\n//     );\n//     const events = supportedNamespaces[requiredNamespace].events.filter((event) =>\n//       normalizedRequired[requiredNamespace]?.events?.includes(event),\n//     );\n//\n//     const accounts = chains\n//       .map((chain: string) =>\n//         supportedNamespaces[requiredNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[requiredNamespace] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   });\n//\n//   // add optional namespaces\n//   Object.keys(normalizedOptional).forEach((optionalNamespace) => {\n//     if (!supportedNamespaces[optionalNamespace]) return;\n//\n//     const chainsToAdd = normalizedOptional[optionalNamespace]?.chains?.filter((chain) =>\n//       supportedNamespaces[optionalNamespace].chains.includes(chain),\n//     );\n//     const methodsToAdd = supportedNamespaces[optionalNamespace].methods.filter((method) =>\n//       normalizedOptional[optionalNamespace]?.methods?.includes(method),\n//     );\n//     const eventsToAdd = supportedNamespaces[optionalNamespace].events.filter((event) =>\n//       normalizedOptional[optionalNamespace]?.events?.includes(event),\n//     );\n//\n//     const accountsToAdd = chainsToAdd\n//       ?.map((chain: string) =>\n//         supportedNamespaces[optionalNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[optionalNamespace] = {\n//       chains: mergeArrays(approvedNamespaces[optionalNamespace]?.chains, chainsToAdd),\n//       methods: mergeArrays(approvedNamespaces[optionalNamespace]?.methods, methodsToAdd),\n//       events: mergeArrays(approvedNamespaces[optionalNamespace]?.events, eventsToAdd),\n//       accounts: mergeArrays(approvedNamespaces[optionalNamespace]?.accounts, accountsToAdd),\n//     };\n//   });\n//\n//   return approvedNamespaces;\n// }\nfunction isCaipNamespace(namespace) {\n    return namespace.includes(\":\");\n}\nfunction parseNamespaceKey(namespace) {\n    return isCaipNamespace(namespace) ? namespace.split(\":\")[0] : namespace;\n}\n/**\n * Converts\n * ```\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * ```\n * into\n * ```\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *```\n */\n// export function normalizeNamespaces(\n//   namespaces: ProposalTypes.RequiredNamespaces,\n// ): ProposalTypes.RequiredNamespaces {\n//   const normalizedNamespaces = {} as ProposalTypes.RequiredNamespaces;\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       methods: mergeArrays(methods, normalizedNamespaces[normalizedKey]?.methods),\n//       events: mergeArrays(events, normalizedNamespaces[normalizedKey]?.events),\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n// export function getNamespacesFromAccounts(accounts: string[]) {\n//   const namespaces = {};\n//   accounts?.forEach((account) => {\n//     const [namespace, chainId] = account.split(\":\");\n//     if (!namespaces[namespace]) {\n//       namespaces[namespace] = {\n//         accounts: [],\n//         chains: [],\n//         events: [],\n//       };\n//     }\n//     namespaces[namespace].accounts.push(account);\n//     namespaces[namespace].chains.push(`${namespace}:${chainId}`);\n//   });\n//\n//   return namespaces;\n// }\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PROVIDER_EVENTS = void 0;\nexports.PROVIDER_EVENTS = {\n    DEFAULT_CHAIN_CHANGED: \"default_chain_changed\",\n    UPDATE_NAMESPACES: \"update_name_spaces\",\n    SESSION_CONNECTING: \"session_connecting\"\n};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./values\"), exports);\n__exportStar(require(\"./events\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GENERIC_SUBPROVIDER_NAME = exports.RPC_URL = exports.STORAGE = exports.CONTEXT = exports.WC_VERSION = exports.PROTOCOL = exports.RELAY_URL = exports.LOGGER = void 0;\nexports.LOGGER = \"error\";\nexports.RELAY_URL = \"wss://relay.walletconnect.com\";\nexports.PROTOCOL = \"wc\";\nexports.WC_VERSION = 2;\nexports.CONTEXT = \"universal_provider\";\nexports.STORAGE = `${exports.PROTOCOL}@${exports.WC_VERSION}:${exports.CONTEXT}:`;\nexports.RPC_URL = \"https://rpc.walletconnect.com/v1/\";\nexports.GENERIC_SUBPROVIDER_NAME = \"generic\";\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./types\"), exports);\n__exportStar(require(\"./utils\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass AptosProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"aptos\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"solana request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"solana provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = AptosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass BtcProvider {\n    constructor(opts, name, client, events) {\n        this.name = core_1.NameSpaceKeyBtc;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"btc request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"btc provider namespace: \", JSON.stringify(this.namespace));\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = BtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass CosmosProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyCosmos;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"cosmos request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"cosmos provider namespace: \", JSON.stringify(this.namespace));\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = CosmosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Eip155Provider = void 0;\nconst utils_1 = require(\"../utils\");\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nclass Eip155Provider {\n    constructor(opts, client, events) {\n        this.name = \"eip155\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = parseInt(this.getDefaultChain());\n        // rpc\n        this.httpProviders = this.createHttpProviders();\n        (0, core_1.logDebug)(\"eip155 constructor --opts.namespace-->\", opts.namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    isArray(value) {\n        return typeof value === \"object\" && value !== null && Array.isArray(value);\n    }\n    updateRequestParams(args) {\n        let isDic = args.params && typeof args.params === 'object' && !Array.isArray(args.params);\n        if (args.method === 'wallet_switchEthereumChain') {\n            const switchChainId = args.chainId.split(\":\")[1];\n            // const hexChainId = parseInt(switchChainId, 16);\n            const decimalNumber = parseInt(switchChainId, 10);\n            if (isNaN(decimalNumber)) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid decimal number,  chainId: '${switchChainId}' `);\n            }\n            if (!args.params) {\n                args.params = { chainId: '0x' + decimalNumber.toString(16) };\n            }\n            else if (isDic) { //为 Record<string, unknown>\n                let params = args.params;\n                if (!('chainId' in params)) {\n                    params['chainId'] = '0x' + decimalNumber.toString(16);\n                    args.params = params;\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params error ,  method: '${args.method}' `);\n            }\n        }\n        else if (args.method === 'personal_sign'\n            || args.method === 'eth_signTypedData_v4'\n            || args.method === 'eth_sendTransaction'\n            || args.method === 'wallet_watchAsset') {\n            if (!args.params) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params is nil, method: '${args.method}'`);\n            }\n            if (this.isRecord(args.params)) {\n                let params = args.params;\n                (0, core_1.logDebug)(\"eip155 updateRequestParams params>\", JSON.stringify(params));\n                if ('chainId' in params) {\n                    const selectedChainId = args.chainId.split(\":\")[1];\n                    const chainNum = parseInt(selectedChainId, 10);\n                    let paramsChainString = String(params.chainId);\n                    let paramsChainId;\n                    if (paramsChainString.startsWith(this.name) && args.chainId === paramsChainString) { //为\n                        paramsChainId = chainNum;\n                    }\n                    else if (paramsChainString.startsWith(\"0x\")) {\n                        paramsChainId = parseInt(paramsChainString, 16);\n                    }\n                    else if (!isNaN(Number(paramsChainString))) { //数字\n                        paramsChainId = parseInt(paramsChainString, 10);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid params.chainId format, method: '${args.method}'`);\n                    }\n                    if (chainNum !== paramsChainId) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params.chainId not equal chain,  method: '${args.method}' `);\n                    }\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid request params type, method: '${args.method}'`);\n            }\n        }\n    }\n    //adapt array\n    adaptArray(args) {\n        if (args.method === 'wallet_switchEthereumChain'\n            || args.method === 'wallet_addEthereumChain'\n            || args.method === 'wallet_watchAsset'\n            || args.method === 'eth_sendTransaction') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr) {\n                    if (paramsArr.length === 1) {\n                        let firstParam = args.params[0];\n                        if (this.isRecord(firstParam)) {\n                            args.params = firstParam;\n                        }\n                    }\n                    else if (paramsArr.length > 1) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                    }\n                }\n            }\n        }\n        else if (args.method === 'eth_signTypedData_v4') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr && paramsArr.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                }\n                else if (paramsArr && paramsArr.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let messageObj = {};\n                if (paramsArr && paramsArr.length === 2) {\n                    let addressObj = args.params[0]; //address\n                    if (addressObj && typeof addressObj === 'string') { //check address\n                        let isEqual = false;\n                        this.namespace.accounts.forEach((account) => {\n                            let chainAddress = (0, utils_1.fromAccountToAddress)(account);\n                            if (chainAddress.toLowerCase() === addressObj.toLowerCase()) {\n                                isEqual = true;\n                            }\n                        });\n                        (0, core_1.logDebug)(\"eip155 adaptArray eth_signTypedData_v4 >>>isEqual: \", isEqual);\n                        if (!isEqual) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error, not equal,  method: '${args.method}' `);\n                        }\n                        if (this.isRecord(args.params[1])) {\n                            messageObj = args.params[1];\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error , not string,  method: '${args.method}' `);\n                    }\n                }\n                else if (paramsArr && paramsArr.length === 1) {\n                    if (this.isRecord(args.params[0])) {\n                        messageObj = args.params[0];\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                    }\n                }\n                try {\n                    let messages = JSON.stringify(messageObj);\n                    args.params = {\n                        typedDataJson: messages\n                    };\n                }\n                catch (err) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params call JSON.stringify() failed,  method: '${args.method}' `);\n                }\n            }\n        }\n        else if (args.method === 'personal_sign') {\n            if (this.isArray(args.params)) {\n                if (args.params && args.params.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params error,  method: '${args.method}' `);\n                }\n                else if (args.params && args.params.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let firstObj = args.params[0];\n                let secondObj = args.params[1];\n                if (secondObj && typeof secondObj === 'string') { //check address\n                    let isEqual = false;\n                    this.namespace.accounts.forEach((account) => {\n                        let chainAddress = (0, utils_1.fromAccountToAddress)(account);\n                        if (chainAddress.toLowerCase() === secondObj.toLowerCase()) {\n                            isEqual = true;\n                        }\n                    });\n                    (0, core_1.logDebug)(\"eip155 adaptArray personal_sign >>>isEqual: \", isEqual);\n                    if (!isEqual) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error,  method: '${args.method}' `);\n                    }\n                }\n                if (firstObj && typeof firstObj === 'string') {\n                    args.params = {\n                        message: firstObj\n                    };\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is error,  method: '${args.method}' `);\n                }\n            }\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"eth_requestAccounts\":\n            case \"eth_accounts\":\n            case \"eth_chainId\":\n                return false;\n            case \"eth_sendTransaction\":\n            case \"eth_signTransaction\":\n            case \"eth_sign\":\n            case \"personal_sign\":\n            case \"eth_signTypedData\":\n            case \"wallet_addEthereumChain\":\n            case \"wallet_watchAsset\":\n            case \"eth_signTypedData_v4\":\n                return true;\n            case \"wallet_switchEthereumChain\": {\n                this.adaptArray(args);\n                this.updateRequestParams(args);\n                const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n                return !this.isChainApproved(parsedChainId);\n            }\n            default:\n                return false;\n        }\n        return false;\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.adaptArray(args);\n            (0, core_1.logDebug)(\"eip155 request --args--string>\", JSON.stringify(args));\n            this.updateRequestParams(args);\n            (0, core_1.logDebug)(\"eip155 request --params--string>\", JSON.stringify(args));\n            switch (args.method) {\n                case \"eth_requestAccounts\":\n                    return this.getAccounts();\n                case \"eth_accounts\":\n                    return this.getAccounts();\n                case \"eth_chainId\":\n                    return parseInt(this.getDefaultChain());\n                case \"wallet_switchEthereumChain\": {\n                    return (yield this.handleSwitchChain(args));\n                }\n                case \"wallet_addEthereumChain\":\n                    return this.addEthereumChain(args);\n                default:\n                    break;\n            }\n            if (this.namespace.methods.includes(args.method)) {\n                // personal_sign\n                // eth_signTypedData_v4\n                // eth_sendTransaction\n                // wallet_watchAsset\n                try {\n                    this.namespace.accounts.forEach((account) => {\n                        if (account.includes(args.chainId)) {\n                            args.address = (0, utils_1.fromAccountToAddress)(account);\n                        }\n                    });\n                    const response = yield this.client.request(args);\n                    (0, core_1.logDebug)(\"eip155 request --response----string>\", JSON.stringify(response));\n                    if (this.isRecord(response)) {\n                        if ('result' in response) {\n                            let result = response.result;\n                            if (result && typeof result === 'string' && (result === \"true\" || result === \"false\")) {\n                                (0, core_1.logDebug)(\"eip155 request --wallet_watchAsset>>>>\", result === \"true\");\n                                return (result === \"true\");\n                            }\n                            return response.result;\n                        }\n                    }\n                    return response;\n                }\n                catch (e) {\n                    (0, core_1.logDebug)(`eip155 request --response --error--string> e instanceof OKXConnectError ${e instanceof core_1.OKXConnectError}`, JSON.stringify(e));\n                    throw e;\n                }\n            }\n            else {\n                (0, core_1.logDebug)('[RPC] request begin');\n                return yield this.getHttpProvider().request(args);\n            }\n        });\n    }\n    addEthereumChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let resultData = (yield this.client.request(args));\n            try {\n                if ('result' in resultData) {\n                    let successData = resultData;\n                    let account = resultData.result;\n                    if (account) {\n                        const nameSpace = account.split(\":\")[0];\n                        const chainId = account.split(\":\")[1];\n                        const chain = nameSpace + ':' + chainId;\n                        let newNameSpace = this.namespace;\n                        this.namespace.accounts.push(account);\n                        this.namespace.chains.push(chain);\n                        if (this.isRecord(args.params)) {\n                            if (\"rpcUrls\" in args.params) {\n                                let rpcUrls = args.params.rpcUrls;\n                                let rpcUrl = rpcUrls ? rpcUrls[0] : undefined;\n                                if (rpcUrl) {\n                                    if (this.namespace.rpcMap) {\n                                        this.namespace.rpcMap[chainId] = rpcUrl;\n                                    }\n                                    else {\n                                        this.namespace.rpcMap = {\n                                            [chainId]: rpcUrl\n                                        };\n                                    }\n                                    this.setHttpProvider(chainId, rpcUrl);\n                                }\n                            }\n                        }\n                        this.events.emit(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, {\n                            eip155: this.namespace\n                        });\n                    }\n                }\n                else {\n                    new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request error`);\n                }\n            }\n            catch (error) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request  error`);\n            }\n            return null;\n        });\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        this.chainId = parseInt(chainId);\n        // set rpc\n        if (!this.httpProviders[chainId]) {\n            const rpc = rpcUrl || (0, utils_1.getRpcUrl)(`${this.name}:${chainId}`, this.namespace);\n            if (!rpc) {\n                // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n                (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            }\n            else {\n                this.setHttpProvider(chainId, rpc);\n            }\n        }\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId.toString();\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // ---------- Private ----------------------------------------------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"eip155 getAccounts \", accounts, this.chainId);\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => {\n                return (0, utils_1.fromAccountToAddress)(account);\n            })),\n        ];\n    }\n    getHexChainIdFromRequest(args) {\n        let params = args.params;\n        let hexChainId = \"0x0\";\n        if (params && \"chainId\" in params) {\n            hexChainId = params.chainId;\n        }\n        hexChainId = hexChainId.startsWith(\"0x\") ? hexChainId : `0x${hexChainId}`;\n        (0, core_1.logDebug)(\"handleSwitchChain -->args \", args);\n        (0, core_1.logDebug)(\"handleSwitchChain -->hexChainId \", hexChainId);\n        const parsedChainId = parseInt(hexChainId, 16);\n        (0, core_1.logDebug)(\"handleSwitchChain -->parsedChainId \", parsedChainId);\n        return { parsedChainId, hexChainId };\n    }\n    handleSwitchChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n            if (this.isChainApproved(parsedChainId)) {\n                this.setDefaultChain(`${parsedChainId}`);\n            }\n            else {\n                const resultData = (yield this.client.request({\n                    method: \"wallet_switchEthereumChain\",\n                    chainId: args.chainId,\n                    params: {\n                        chainId: hexChainId,\n                    },\n                }));\n                try {\n                    if ('result' in resultData) {\n                        let successData = resultData;\n                        let account = resultData.result;\n                        if (account) {\n                            const nameSpace = account.split(\":\")[0];\n                            const chainId = account.split(\":\")[1];\n                            const chain = nameSpace + ':' + chainId;\n                            let newNameSpace = this.namespace;\n                            this.namespace.accounts.push(account);\n                            this.namespace.chains.push(chain);\n                            (0, core_1.logDebug)(\"handleSwitchChain -->wallet_switchEthereumChain \", resultData);\n                            this.setDefaultChain(`${parsedChainId}`);\n                            this.events.emit(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, {\n                                eip155: this.namespace\n                            });\n                        }\n                    }\n                    else {\n                        new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request error`);\n                    }\n                }\n                catch (error) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request  error`);\n                }\n            }\n            return null;\n        });\n    }\n    isChainApproved(chainId) {\n        return this.namespace.chains.includes(`${this.name}:${chainId}`);\n    }\n    // rpc\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            //   throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            (0, core_1.logDebug)('get parsed chain and rpc:', parsedChainId, parsedRpc);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        (0, core_1.logDebug)('get http providermap:', http);\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n}\nexports.Eip155Provider = Eip155Provider;\nexports.default = Eip155Provider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcConnection = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nconst DEFAULT_HTTP_HEADERS = {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n};\nconst DEFAULT_HTTP_METHOD = \"POST\";\nconst DEFAULT_FETCH_OPTS = {\n    headers: DEFAULT_HTTP_HEADERS,\n    method: DEFAULT_HTTP_METHOD,\n};\n// Source: https://nodejs.org/api/events.html#emittersetmaxlistenersn\nconst EVENT_EMITTER_MAX_LISTENERS_DEFAULT = 10;\nclass JsonRpcConnection {\n    constructor(url, disableProviderPing = false) {\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n        this.events = new eventemitter3_1.EventEmitter();\n        this.isAvailable = false;\n        this.registering = false;\n        if (!(0, core_2.isHttpUrl)(url)) {\n            throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n        }\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n    }\n    get connected() {\n        return this.isAvailable;\n    }\n    get connecting() {\n        return this.registering;\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            yield this.register(url);\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                throw new Error(\"Connection already closed\");\n            }\n            this.onClose();\n        });\n    }\n    send(payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                yield this.register();\n            }\n            try {\n                const body = (0, core_1.safeJsonStringify)(payload);\n                const res = yield (0, cross_fetch_1.default)(this.url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                const data = yield res.json();\n                this.onPayload({ data });\n            }\n            catch (e) {\n                this.onError(payload.id, e);\n            }\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    register() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            if (!(0, core_2.isHttpUrl)(url)) {\n                throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n            }\n            if (this.registering) {\n                return new Promise((resolve, reject) => {\n                    this.events.once(\"register_error\", (error) => {\n                        reject(error);\n                    });\n                    this.events.once(\"open\", () => {\n                        if (typeof this.isAvailable === \"undefined\") {\n                            return reject(new Error(\"HTTP connection is missing or invalid\"));\n                        }\n                        resolve();\n                    });\n                });\n            }\n            this.url = url;\n            this.registering = true;\n            try {\n                if (!this.disableProviderPing) {\n                    const body = (0, core_1.safeJsonStringify)({ id: 1, jsonrpc: \"2.0\", method: \"test\", params: [] });\n                    yield (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                }\n                this.onOpen();\n            }\n            catch (e) {\n                const error = this.parseError(e);\n                this.events.emit(\"register_error\", error);\n                this.onClose();\n                throw error;\n            }\n        });\n    }\n    onOpen() {\n        this.isAvailable = true;\n        this.registering = false;\n        this.events.emit(\"open\");\n    }\n    onClose() {\n        this.isAvailable = false;\n        this.registering = false;\n        this.events.emit(\"close\");\n    }\n    onPayload(e) {\n        if (typeof e.data === \"undefined\")\n            return;\n        const payload = typeof e.data === \"string\" ? (0, core_1.safeJsonParse)(e.data) : e.data;\n        this.events.emit(\"payload\", payload);\n    }\n    onError(id, e) {\n        const error = this.parseError(e);\n        const message = error.message || error.toString();\n        const payload = (0, core_2.formatJsonRpcError)(id, message);\n        this.events.emit(\"payload\", payload);\n    }\n    parseError(e, url = this.url) {\n        return (0, core_2.parseConnectionError)(e, url, \"HTTP\");\n    }\n}\nexports.JsonRpcConnection = JsonRpcConnection;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcProvider = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst types_1 = require(\"../../types\");\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nclass JsonRpcProvider extends types_1.IJSONRpcProvider {\n    constructor(connection) {\n        super(connection);\n        this.events = new eventemitter3_1.EventEmitter();\n        this.connected = false;\n        this.connecting = false;\n        this.hasRegisteredEventListeners = false;\n        this.connection = this.setConnection(connection);\n        if (this.connection.connected) {\n            this.registerEventListeners();\n        }\n    }\n    connect() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            yield this.open(connection);\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.close();\n        });\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    request(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.requestStrict((0, core_1.formatJsonRpcRequest)(request.method, request.params || [], (0, core_1.getBigIntRpcId)().toString()), // casting to any is required in order to use BigInt as rpcId\n            context);\n        });\n    }\n    // ---------- Protected ----------------------------------------------- //\n    requestStrict(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                if (!this.connection.connected) {\n                    try {\n                        yield this.open();\n                    }\n                    catch (e) {\n                        reject(e);\n                    }\n                }\n                this.events.on(`${request.id}`, (response) => {\n                    if ((0, core_1.isJsonRpcError)(response)) {\n                        reject(response.error);\n                    }\n                    else {\n                        resolve(response.result);\n                    }\n                });\n                try {\n                    (0, core_2.logDebug)('[RPC] >>> send request', request, context);\n                    yield this.connection.send(request, context);\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }));\n        });\n    }\n    setConnection(connection = this.connection) {\n        return connection;\n    }\n    onPayload(payload) {\n        this.events.emit(\"payload\", payload);\n        if ((0, core_1.isJsonRpcResponse)(payload)) {\n            this.events.emit(`${payload.id}`, payload);\n        }\n        else {\n            this.events.emit(\"message\", {\n                type: payload.method,\n                data: payload.params,\n            });\n        }\n    }\n    onClose(event) {\n        // Code 3000 indicates an abnormal closure signalled by the relay -> emit an error in this case.\n        if (event && event.code === 3000) {\n            this.events.emit(\"error\", new Error(`WebSocket connection closed abnormally with code: ${event.code} ${event.reason ? `(${event.reason})` : \"\"}`));\n        }\n        this.events.emit(\"disconnect\");\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            if (this.connection === connection && this.connection.connected)\n                return;\n            if (this.connection.connected)\n                this.close();\n            if (typeof connection === \"string\") {\n                yield this.connection.open(connection);\n                connection = this.connection;\n            }\n            this.connection = this.setConnection(connection);\n            yield this.connection.open();\n            this.registerEventListeners();\n            this.events.emit(\"connect\");\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.connection.close();\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    registerEventListeners() {\n        if (this.hasRegisteredEventListeners)\n            return;\n        this.connection.on(\"payload\", (payload) => this.onPayload(payload));\n        this.connection.on(\"close\", (event) => this.onClose(event));\n        this.connection.on(\"error\", (error) => this.events.emit(\"error\", error));\n        this.connection.on(\"register_error\", (_error) => this.onClose());\n        this.hasRegisteredEventListeners = true;\n    }\n}\nexports.JsonRpcProvider = JsonRpcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SolanaProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SolanaProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"solana\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"solana request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"solana provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    //   {\n    //     \"chains\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\" ],\n    //     \"accounts\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp:F7wnJc5wiBGy1k87jv6gyNwE3jMEWd18oTQiYsF1xVG7\"],\n    //     \"methods\": [\n    //         \"solana_signTransaction\",\n    //         \"solana_signMessage\"\n    //     ],\n    //     \"defaultChain\": \"5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\"\n    // }\n    // TODO:确认上面的defaultChain是否正确（没有solana前缀）\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"solana\"))) {\n                chainId = `solana:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.SolanaProvider = SolanaProvider;\nexports.default = SolanaProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SuiProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SuiProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeySui;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"sui request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"sui provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"sui\"))) {\n                chainId = `sui:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"sui_signMessage\":\n            case \"sui_signPersonalMessage\":\n            case \"sui_signTransactionBlock\":\n            case \"sui_signAndExecuteTransactionBlock\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.SuiProvider = SuiProvider;\nexports.default = SuiProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass TONProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyTON;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            (0, core_1.logDebug)(\"TONProvider request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"TONProvider request provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                if (!args.params) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params is nil\");\n                }\n                if (this.isRecord(args.params)) {\n                    const _e = args.params, { validUntil } = _e, newParams = __rest(_e, [\"validUntil\"]);\n                    let fromAddress = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n                    if ('from' in newParams) {\n                        fromAddress = newParams.from || ((_d = (_c = this.namespace.payload) === null || _c === void 0 ? void 0 : _c.ton_addr) === null || _d === void 0 ? void 0 : _d.address);\n                    }\n                    args.params['from'] = fromAddress;\n                    args.params['network'] = this.getDefaultChain();\n                    args.params['valid_until'] = validUntil;\n                    let response = yield this.client.request(args);\n                    if (this.isRecord(response) && 'result' in response) {\n                        const result = {\n                            boc: response.result.toString()\n                        };\n                        (0, core_1.logDebug)(\"TONProvider request provider response: \", JSON.stringify(response));\n                        (0, core_1.logDebug)(\"TONProvider request provider result: \", JSON.stringify(result));\n                        return result;\n                    }\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton_send request response is nil\");\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params type add nil\");\n                }\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        var _a, _b;\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"ton getAccounts accounts :\", accounts);\n        (0, core_1.logDebug)(\"ton getAccounts .namespace :\", JSON.stringify(this.namespace));\n        if (!accounts) {\n            return [];\n        }\n        let address = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n        (0, core_1.logDebug)(\"ton getAccounts address :\", address);\n        if (address) {\n            return [\n                address\n            ];\n        }\n        return [];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"ton_sendTransaction\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.default = TONProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass TronProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyTron;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"tron request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"tron provider namespace: \", JSON.stringify(this.namespace));\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = TronProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./providers\"), exports);\n__exportStar(require(\"./misc\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IJSONRpcProvider = exports.IJSONRpcConnection = void 0;\nclass IJSONRpcConnection {\n}\nexports.IJSONRpcConnection = IJSONRpcConnection;\nclass IJSONRpcProvider {\n    constructor(opt) {\n    }\n}\nexports.IJSONRpcProvider = IJSONRpcProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setGlobal = exports.getGlobal = void 0;\nconst globals = {};\nconst getGlobal = (key) => {\n    return globals[key];\n};\nexports.getGlobal = getGlobal;\nconst setGlobal = (key, value) => {\n    globals[key] = value;\n};\nexports.setGlobal = setGlobal;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./misc\"), exports);\n__exportStar(require(\"./globals\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRpcUrl = getRpcUrl;\nexports.getChainId = getChainId;\nexports.fromAccountToAddress = fromAccountToAddress;\nexports.convertChainIdToNumber = convertChainIdToNumber;\nexports.parseChainId = parseChainId;\nexports.mergeArrays = mergeArrays;\nexports.syncAddressAvailable = syncAddressAvailable;\nexports.syncAddressHostAvailable = syncAddressHostAvailable;\nconst core_1 = require(\"@okxconnect/core\");\nfunction getRpcUrl(chainId, rpc, projectId) {\n    var _a;\n    const chain = parseChainId(chainId);\n    // no default\n    return (((_a = rpc.rpcMap) === null || _a === void 0 ? void 0 : _a[chain.reference]) ||\n        ``);\n}\nfunction getChainId(chain) {\n    return chain.includes(\":\") ? chain.split(\":\")[1] : chain;\n}\nfunction fromAccountToAddress(account) {\n    if (!account) {\n        return \"\";\n    }\n    try {\n        let addressArr = account.split(\":\").slice(2);\n        let address = addressArr.length > 0 ? addressArr.join(\":\") : \"\";\n        (0, core_1.logDebug)(\"fromAccountToAddress address and account:\", address, account);\n        return address;\n    }\n    catch (e) {\n        (0, core_1.logError)(\"fromAccountToAddress error:\", account);\n        return \"\";\n    }\n}\n// export function validateChainApproval(chain: string, chains: string[]): void {\n//   if (!chains.includes(chain)) {\n//     throw new Error(\n//       `Chain '${chain}' not approved. Please use one of the following: ${chains.toString()}`,\n//     );\n//   }\n// }\n// export function getChainsFromApprovedSession(accounts: string[]): string[] {\n//   return accounts.map((address) => `${address.split(\":\")[0]}:${address.split(\":\")[1]}`);\n// }\n// export function getAccountsFromSession(namespace: string, session: SessionTypes.Struct): string[] {\n//   // match namespaces e.g. eip155 with eip155:1\n//   const matchedNamespaceKeys = Object.keys(session.namespaces).filter((key) =>\n//     key.includes(namespace),\n//   );\n//   if (!matchedNamespaceKeys.length) return [];\n//   const accounts: string[] = [];\n//   matchedNamespaceKeys.forEach((key) => {\n//     const accountsForNamespace = session.namespaces[key].accounts;\n//     accounts.push(...accountsForNamespace);\n//   });\n//   return accounts;\n// }\n// export function mergeRequiredOptionalNamespaces(\n//   required: NamespaceConfig = {},\n//   optional: NamespaceConfig = {},\n// ){\n//   const requiredNamespaces = normalizeNamespaces(required);\n//   const optionalNamespaces = normalizeNamespaces(optional);\n//    return merge.merge(requiredNamespaces,optionalNamespaces)\n// }\n/**\n * Converts\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * into\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *\n */\n// export function normalizeNamespaces(namespaces: NamespaceConfig): NamespaceConfig {\n//   const normalizedNamespaces: NamespaceConfig = {};\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const rpcMap = values.rpcMap || {};\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       ...values,\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       rpcMap: { ...rpcMap, ...normalizedNamespaces[normalizedKey]?.rpcMap },\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n//\n// export function parseCaip10Account(caip10Account: string): string {\n//   return caip10Account.includes(\":\") ? caip10Account.split(\":\")[2] : caip10Account;\n// }\n/**\n * Populates the chains array for each namespace with the chains extracted from the accounts if are otherwise missing\n */\n// export function populateNamespacesChains(\n//   namespaces: SessionTypes.Namespaces,\n// ): Record<string, SessionTypes.Namespace> {\n//   const parsedNamespaces: Record<string, SessionTypes.Namespace> = {};\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const accounts = values.accounts || [];\n//     // If the key includes a CAIP separator `:` we know it's a namespace + chainId (e.g. `eip155:1`)\n//     const chains = isCaipNamespace(key)\n//       ? [key]\n//       : values.chains\n//       ? values.chains\n//       : getChainsFromApprovedSession(values.accounts);\n//     parsedNamespaces[key] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   }\n//   return parsedNamespaces;\n// }\nfunction convertChainIdToNumber(chainId) {\n    if (typeof chainId === \"number\")\n        return chainId;\n    if (chainId.includes(\"0x\")) {\n        return parseInt(chainId, 16);\n    }\n    chainId = chainId.includes(\":\") ? chainId.split(\":\")[1] : chainId;\n    return isNaN(Number(chainId)) ? chainId : Number(chainId);\n}\nconst CAIP_DELIMITER = \":\";\nfunction parseChainId(chain) {\n    const [namespace, reference] = chain.split(CAIP_DELIMITER);\n    return { namespace, reference };\n}\nfunction mergeArrays(a = [], b = []) {\n    return [...new Set([...a, ...b])];\n}\nfunction syncAddressAvailable(wallet) {\n    if (!wallet) {\n        return false;\n    }\n    if (wallet.appName !== 'OKX Wallet') {\n        return false;\n    }\n    if ((0, core_1.versionCompare)('6.97.0', wallet.appVersion) > 0) {\n        return false;\n    }\n    return syncAddressHostAvailable();\n}\nfunction syncAddressHostAvailable() {\n    try {\n        return !!(window.okxGlobal);\n    }\n    catch (e) {\n        return false;\n    }\n}\n","<template>\n  <div id=\"app\">\n    <el-container>\n      <el-header>OKX Connect</el-header>\n      <el-main>\n        <el-card class=\"wallet-info\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Wallet Info</div>\n          </template>\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Wallet Address:</strong> {{ getWalletAddress }}\n            </el-col>\n          </el-row>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Status :</strong> {{ currentStatus }}\n            </el-col>\n          </el-row>\n\n        </el-card>\n\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Connect Params</div>\n          </template>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"12\">\n              <el-checkbox v-model=\"withUI\" @change=\"handleWithUI\">\n                Show UI</el-checkbox>\n            </el-col>\n\n            <el-col :span=\"12\">\n              <el-checkbox v-model=\"universalToTG\" @change=\"handleUniversalToTG\">\n                Use mini wallet</el-checkbox>\n            </el-col>\n          </el-row>\n\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Modals</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"modals\" placeholder=\"Modals\" @change=\"handleModalsSelect\" multiple>\n                <el-option label=\"Before\" value=\"before\" />\n                <el-option label=\"Success\" value=\"success\" />\n                <el-option label=\"Error\" value=\"error\" />\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center; justify-content: space-between;\">\n            <el-col :span=\"6\" style=\"gap: 2px\">\n              <p style=\"font-size: 11pt; margin: 0px\">Return Strategy</p>\n              <p style=\"font-size: 9pt; margin: 0px\">(Mobile only)</p>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-select\n                v-model=\"returnStrategy\"\n                @change=\"handleReturnStrategySelect\"\n                placeholder=\"Return Strategy\"\n              >\n                <el-option\n                  v-for=\"strategy in returnStrategies\"\n                  :key=\"`return-strategy-select-option-${strategy}`\"\n                  :label=\"strategy\"\n                  :value=\"strategy\"\n                />\n              </el-select>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-input\n                v-if=\"returnStrategy === 'deeplink'\"\n                v-model=\"deeplink\"\n                @change=\"handleReturnStrategyDeeplink\"\n                placeholder=\"Deeplink\"\n                :disabled=\"returnStrategy !== 'deeplink'\"\n                style=\"margin: 0px\"\n              />\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Lang</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"language\" @change=\"handleLanguageSelect\" placeholder=\"Language\">\n                <el-option v-for=\"locale in locales\" :key=\"`language-select-option-${locale}`\" :label=\"locale\"\n                  :value=\"locale\" />\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Theme</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"theme\" @change=\"handleThemeSelect\" placeholder=\"Theme\">\n                <el-option label=\"LIGHT\" :value=\"THEME.LIGHT\" />\n                <el-option label=\"DARK\" :value=\"THEME.DARK\" />\n              </el-select>\n            </el-col>\n          </el-row>\n\n<!--          <el-row>-->\n<!--          <el-row style=\"align-items: center\">-->\n<!--            <el-col :span=\"4\">-->\n<!--              <p style=\"font-size: 11pt\">Connect</p>-->\n<!--              <p style=\"font-size: 11pt\">Methods</p>-->\n<!--            </el-col>-->\n<!--            <el-col :span=\"20\">-->\n<!--              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" placeholder=\"Methods\">-->\n<!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n<!--                           :value=\"methods\" />-->\n\n<!--              </el-select>-->\n<!--            </el-col>-->\n<!--          </el-row>-->\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Connect</p>\n              <p style=\"font-size: 11pt\">Methods</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" multiple placeholder=\"methods\">\n                <el-option\n                    v-for=\"item in connectMethods\"\n                    :key=\"item\"\n                    :label=\"item\"\n                    :value=\"item\">\n                </el-option>\n              </el-select>\n\n\n<!--              <el-select v-model=\"selectedMethod\" placeholder=\"Methods\" @change=\"handleConnectMethodsSelect\" multiple>-->\n<!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n<!--                           :value=\"methods\" />-->\n<!--              </el-select>-->\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">ton_proof</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-input v-model=\"tonProofValue\"  placeholder=\"input ton_proof\"></el-input>\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" align=\"middle\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Required Chains</div>\n            </el-col>\n            <el-col\n              :span=\"6\"\n              v-for=\"item in Object.keys(availableChains)\"\n              :key=\"item\"\n            >\n              <el-checkbox\n                v-model=\"availableChains[item].checked\"\n                :disabled=\"!areChainsInit\"\n                >{{ availableChains[item].name }}</el-checkbox\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" align=\"middle\" style=\"margin-top: 20px\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Optional Chains</div>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(43114)\" @change=\"() => handleOptionChange(43114)\">\n                AVAX</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(10)\" @change=\"() => handleOptionChange(10)\">OP</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(8453)\" @change=\"() => handleOptionChange(8453)\">\n                BASE</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(99781165)\"\n                @change=\"() => handleOptionChange(99781165)\">Nonexist</el-checkbox>\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"initBtnClicked\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectInitStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                type=\"primary\"\n                @click=\"connectBtnClicked\"\n                icon=\"el-icon-connection\"\n                :disabled=\"!areChainsInit\"\n                >{{ connectStatusStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"syncAllAddressClick\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ syncAllAddressStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                type=\"danger\"\n                @click=\"disconnectAction\"\n                icon=\"el-icon-switch-button\"\n                :disabled=\"!areChainsInit || walletAddress.length == 0\"\n                >{{ disconnectStatusStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n          <teleport to=\"body\">\n            <div v-if=\"showModal\" class=\"modal-overlay\" @click=\"closeModal\">\n              <div class=\"modal-content\" @click.stop>\n                <button class=\"close-button\" @click=\"closeModal\">\n                  &times;\n                </button>\n                <h2>Scan to connect</h2>\n                <qrcode-vue :value=\"qrValue\" :size=\"350\" level=\"L\" />\n              </div>\n            </div>\n          </teleport>\n        </el-card>\n\n        <!-- 发送交易 -->\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Transactions</div>\n          </template>\n\n          <el-tabs v-model=\"activeTab\" type=\"border-card\" @tab-click=\"clickActiveTab\">\n            <!-- ETH -->\n            <el-tab-pane label=\"ETH\" name=\"eip155:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to ETH)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve TONCoin)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(eth mint\n                    nft)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add SPX6900)\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TON\" name=\"ton:-239\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_getAccount\">ton_getAccount</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_sendTransaction\">ton_sendTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- solana -->\n            <el-tab-pane label=\"Sol\" name=\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- Sui-->\n            <el-tab-pane label=\"Sui\" name=\"sui:mainnet\">\n              <SuiPanel @generateTransactionParams=\"sui_generateTransactionParams\" />\n            </el-tab-pane>\n            <!-- BTC -->\n            <el-tab-pane label=\"BTC\" name=\"btc:mainnet\">\n              <BTCPanel @generateTransactionParams=\"btc_generateTransactionParams\" />\n            </el-tab-pane>\n\n            <!-- Fractal BTC -->\n            <el-tab-pane label=\"Fractal\" name=\"fractal:mainnet\">\n              <FractalPanel @generateTransactionParams=\"fractal_generateTransactionParams\" />\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Tron\" name=\"tron:mainnet\">\n              <TronTransactionPanel\n                  @generateTransactionParams=\"tron_generateTransactionParams\"\n                  @generateTransactionResult=\"tron_getTransactionResult\" />\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Aptos\" name=\"aptos:mainnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signTransaction\">aptos_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"aptos_signAndSubmitTransaction\">aptos_signAndSubmitTransaction</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Cosmos\" name=\"cosmos:cosmoshub-4\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <!-- Polygon-->\n            <el-tab-pane label=\"Polygon\" name=\"eip155:137\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send POL)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve sushi)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(polygon mint\n                    nft)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add LGNS)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_testRpc()\">wallet_testRpc(Polygon)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\"\n                  >eth_sendTransaction(转账FUSE)</el-button\n                  >\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\"\n                  >eth_sendTransaction(授权USDC)</el-button\n                  >\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- BSC-->\n            <el-tab-pane label=\"BNB\" name=\"eip155:56\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to BNB)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve POSI)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add FET)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_testRpc()\">wallet_testRpc(check balance on eth)</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Fuse\" name=\"eip155:122\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_swap\">eth_sendTransaction(Swap)</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Sonic testnet\" name=\"svm:70000062\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Movement\" name=\"movement:testnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"move_signTransaction\">move_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"move_signAndSubmitTransaction\">move_signAndSubmitTransaction</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n\n            <el-tab-pane label=\"osmos\" name=\"cosmos:osmosis-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"SEI\" name=\"cosmos:pacific-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TEST \" name=\"test:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"testBase64UrlSafe\">testBase64UrlSafe</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n          </el-tabs>\n\n          <el-col :xs=\"24\" :sm=\"24\" style=\"margin: 16px 0px;\">\n            <el-row style=\"align-items: center; justify-content: space-between; margin-bottom: 8px;\">\n              <el-col :span=\"4\">\n                <p style=\"font-size: 11pt; margin: 0px; text-align: start\">Redirect param (only for ETH, Polygon, BNB, Fuse)</p>\n              </el-col>\n              <el-col :span=\"9\">\n                <el-select\n                  v-model=\"redirect\"\n                  @change=\"handleRedirectSelect\"\n                  placeholder=\"Return Strategy\"\n                  :disabled=\"!canChainAddRedirectParam()\"\n                  >\n                  <el-option\n                    v-for=\"strategy in returnStrategies\"\n                    :key=\"`return-strategy-select-option-${strategy}`\"\n                    :label=\"strategy\"\n                    :value=\"strategy\"\n                  />\n                </el-select>\n              </el-col>\n              <el-col :span=\"10\">\n                <el-input\n                  v-if=\"redirect === 'deeplink'\"\n                  v-model=\"redirectDeeplink\"\n                  @change=\"handleRedirectDeeplink\"\n                  placeholder=\"Deeplink\"\n                  :disabled=\"!canChainAddRedirectParam() || redirect !== 'deeplink'\"\n                  style=\"margin: 0px\"\n                />\n              </el-col>\n            </el-row>\n            <el-button\n              type=\"primary\" @click=\"addRedirectParam()\"\n              :disabled=\"!canChainAddRedirectParam() || !testTransaction\"\n            >\n              Add redirect param to data\n            </el-button>\n          </el-col>\n\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Data:</div>\n            <el-input v-model=\"testTransaction\" type=\"textarea\" :rows=\"5\" placeholder=\"sendTransactions\"></el-input>\n          </el-col>\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Result :</div>\n            <el-input v-model=\"testboc\" type=\"textarea\" :rows=\"5\" placeholder=\"boc\"></el-input>\n          </el-col>\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button type=\"primary\" @click=\"sendTransaction()\">{{\n                testTransactionStr\n                }}</el-button>\n            </el-col>\n          </el-row>\n        </el-card>\n      </el-main>\n    </el-container>\n  </div>\n</template>\n\n<style scoped>\n/* 重置全局边距和内边距 */\nbody,\nhtml {\n  margin: 0;\n  padding: 0;\n  height: 100%;\n}\n\n/* 确保 app 容器占满整个视口 */\n#app {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin: 0 auto;\n  /* 居中 */\n  max-width: 600px;\n  /* 设置最大宽度 */\n  padding: 0 20px;\n  /* 添加一些左右内边距 */\n}\n\n/* 调整 el-container 样式 */\n.el-container {\n  min-height: 100vh;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n}\n\n/* 调整 el-header 样式 */\n.el-header {\n  background-color: #333333;\n  color: white;\n  height: 50px;\n  line-height: 50px;\n  font-size: 18px;\n  font-weight: bold;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1000;\n}\n\n/* 调整 el-main 样式 */\n.el-main {\n  padding: 70px 0 20px;\n  /* 增加顶部内边距以避免被固定header遮挡 */\n  flex-grow: 1;\n}\n\n.el-card {\n  margin-bottom: 20px;\n}\n\n.info-row {\n  margin-bottom: 10px;\n}\n\n.input-label {\n  margin-bottom: 5px;\n  text-align: left;\n}\n\n.el-input {\n  margin-bottom: 10px;\n}\n\n/* 通用按钮样式 */\n.wallet-actions .el-button,\n.transaction .el-button,\n.clear-cache .el-button {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 40px;\n}\n\n.wallet-actions .el-button span,\n.transaction .el-button span,\n.clear-cache .el-button span {\n  margin: 0 auto;\n}\n\n/* 按钮行间距 */\n.wallet-actions .button-row,\n.transaction .button-row {\n  margin-bottom: 8px;\n}\n\n.wallet-actions .button-row:last-child,\n.transaction .button-row:last-child {\n  margin-bottom: 0;\n}\n\n/* 调整图标和文字的对齐 */\n.wallet-actions .el-button [class^=\"el-icon-\"],\n.transaction .el-button [class^=\"el-icon-\"],\n.clear-cache .el-button [class^=\"el-icon-\"] {\n  margin-right: 5px;\n  vertical-align: middle;\n}\n\n/* 新增：调整发送交易按钮与输入框的间距 */\n.transaction .el-row:not(:last-child) {\n  margin-bottom: 10px;\n}\n\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.modal-content {\n  background-color: white;\n  padding: 20px;\n  border-radius: 8px;\n  text-align: center;\n  position: relative;\n  max-width: 90%;\n  width: 400px;\n}\n\n.close-button {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  font-size: 24px;\n  border: none;\n  background: none;\n  cursor: pointer;\n}\n\n/* 响应式调整 */\n@media (max-width: 600px) {\n  #app {\n    padding: 0 10px;\n  }\n\n  .el-main {\n    padding: 60px 0 10px;\n  }\n}\n</style>\n<script>\nimport {OKX_CONNECT_ERROR_CODES, safeJsonStringify,getAppWalletDeepLink,getUniversalLink} from \"@okxconnect/core\"\nimport {\n  OKXBtcProvider,\n  OKXUniversalProvider,\n  OKXCosmosProvider,\n  OKXTonProvider,\n  OKXTronProvider\n} from \"@okxconnect/universal-provider\"\nimport {OKXSolanaProvider} from \"@okxconnect/solana-provider\";\nimport {\n  Connection,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n  TransactionMessage,\n  VersionedTransaction\n} from '@solana/web3.js';\nimport {OKXSuiProvider as SuiAdapter} from \"@okxconnect/sui-provider\"\nimport QrcodeVue from 'qrcode.vue'\n\nimport {OKXAptosProvider} from \"@okxconnect/aptos-provider\";\nimport {Aptos, AptosConfig, Network} from \"@aptos-labs/ts-sdk\";\n\nimport BTCPanel from \"./components/BtcTransactionPanel.vue\";\nimport FractalPanel from \"./components/FractalTransactionPanel.vue\"\nimport SuiPanel from \"./components/SuiTransactionPanel.vue\";\n\nimport {OKXUniversalConnectUI, THEME} from \"@okxconnect/ui\";\nimport { ethers } from 'ethers';\nimport VConsole from 'vconsole';\nimport nacl from \"tweetnacl\";\nconst { verifyADR36Amino } = require('@keplr-wallet/cosmos')\nconst { fromBech32 } = require('@cosmjs/encoding')\nimport { verifyPersonalMessageSignature } from '@mysten/sui/verify';\nimport {useShortLink} from \"@okxconnect/core\";\nimport TronTransactionPanel from \"@/components/TronTransactionPanel.vue\";\nimport {TronWeb} from \"tronweb\";\nnew VConsole();\n\nconst allChains = {\n  1: { name: \"Eth\", checked: false },\n  56: { name: \"BNB\", checked: false },\n  137: { name: \"Polygon\", checked: false },\n  122: { name: \"Fuse\", checked: false },\n  \"ton:-239\":{name: \"TON\",checked: false},\n  \"btc:mainnet\": { name: \"BTC\", checked: false },\n  \"sui:mainnet\": { name: \"Sui\", checked: false },\n  \"aptos:mainnet\": { name: \"Aptos\", checked: false },\n  \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\": {\n    name: \"Solana\",\n    checked: false,\n  },\n  \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\": {\n    name: \"Sol testnet\",\n    checked: false,\n  },\n  \"svm:70000062\": {\n    name: \"Sonic testnet\",\n    checked: false,\n  },\n  \"movement:testnet\": { name: \"Movement\", checked: false },\n  \"fractal:mainnet\": { name: \"Fractal\", checked: false },\n  \"cosmos:osmosis-1\": {name: \"Osmos\", checked: false},\n  \"cosmos:cosmoshub-4\": {name: \"Cosmos\", checked: false},\n  \"cosmos:pacific-1\": {name: \"SEI\", checked: false},\n  \"cosmos:abvdefg\": {name: \"cosmos:abvdefg\", checked: false},\n  \"tron:mainnet\": {name: \"tron\", checked: false},\n  997865: { name: \"Non Exist chain\", checked: false },\n};\n\nconst chainsThatCanAddRedirectParam = [\n  \"eip\"\n]\n\nvar optionChains = new Set([]);\nvar selectedModals = [\"before\", \"success\", \"error\"];\nvar selectedReturnStrategy = \"none\";\nvar selectedDeepLink = \"tg://resolve\";\nvar selectedLanguage = \"en_US\";\nvar selectedTheme = THEME.LIGHT;\n\n// import QrcodeVue from 'qrcode.vue'\nexport default {\n  name: \"App\",\n  components: {\n    TronTransactionPanel,\n    QrcodeVue,\n    BTCPanel,\n    FractalPanel,\n    SuiPanel\n  },\n\n  data: () => {\n    return {\n      activeTab: \"eip155:1\",\n      testTopic: \"\",\n      testPublicKey: \"\",\n      testProofPayload: \"\",\n      tonProofValue:\"\",\n      pendingDeepLink: \"-\",\n      logList: [],\n      connectReady: false,\n      connectStatusStr: \"Connect\",\n      syncAllAddressStr: \"syncAllAddress\",\n      connectInitStr: \"init test\",\n      disconnectStatusStr: \"Disconnect\",\n      localPubKey: \"\",\n      localSecKey: \"\",\n      testTransaction: \"\",\n      selectedChain: \"eip155:1\",\n      testTransactionStr: \"Send\",\n      walletAddress: \"\",\n      testboc: \"\",\n      ProofPayloadVerify: \"\",\n      showModal: false,\n      showVerifyRow: false,\n      qrValue: \"https://www.okx.com/download\",\n      currentStatus: \"\",\n      areChainsInit: false,\n      availableChains: allChains,\n      isOptionalChecked: (chainId) => {\n        return optionChains.has(chainId);\n      },\n      withUI: localStorage.getItem(\"autoRefresh\") != \"false\",\n      universalToTG: localStorage.getItem(\"universalToTG\") != \"false\",\n      modals: selectedModals,\n      returnStrategies: [\"none\", \"back\", \"deeplink\"],\n      returnStrategy: selectedReturnStrategy,\n      deeplink: selectedDeepLink,\n      locales: [\n        \"en_US\",\n        \"ru_RU\",\n        \"zh_CN\",\n        \"zh\",\n        \"ar_AE\",\n        \"cs_CZ\",\n        \"de_DE\",\n        \"es_ES\",\n        \"es_LAT\",\n        \"fr_FR\",\n        \"id_ID\",\n        \"it_IT\",\n        \"nl_NL\",\n        \"pl_PL\",\n        \"pt_BR\",\n        \"pt_PT\",\n        \"ro_RO\",\n        \"tr_TR\",\n        \"uk_UA\",\n        \"vi_VN\",\n        \"zh_TW\"\n      ],\n      selectedMethod:[],\n      selectedMethodData:[],\n      connectMethods:[\n        \"wallet_addEthereumChain(ETH)\",\n        \"personal_sign(ETH)\",\n        \"solana_signMessage(Sol mainnet)\",\n        \"sui_signMessage(Sui mainnet)\",\n        \"sui_signPersonalMessage(Sui mainnet)\",\n        \"btc_signMessage(BTC)\",\n        \"aptos_signMessage(aptos mainnet)\",\n        \"cosmos_signArbitrary(cosmoshub)\",\n        \"test_noSupport_eth(ETH)\",\n        \"tron_signMessage\",\n        \"tron_signMessageV2\",\n        \"sync_all_addresses\"\n      ],\n\n      language: selectedLanguage,\n      theme: selectedTheme,\n      THEME: THEME,\n      redirect: selectedReturnStrategy,\n      redirectDeeplink: selectedDeepLink,\n      handleWithUI: (isChecked) => {\n        localStorage.setItem(\"autoRefresh\", `${isChecked}`);\n        location.reload();\n      },\n      handleUniversalToTG: (isChecked) => {\n        localStorage.setItem(\"universalToTG\", `${isChecked}`);\n      },\n      handleOptionChange: (chainId) => {\n        if (optionChains.has(chainId)) {\n          optionChains.delete(chainId);\n        } else {\n          optionChains.add(chainId);\n        }\n      },\n    };\n  },\n  computed: {\n    getWalletAddress: function () {\n      return this.walletAddress;\n    },\n  },\n  methods: {\n    isChecked(chainId) {\n      return this.selectedChains.has(chainId);\n    },\n\n    initChains(newChains) {\n      if (newChains.length > 0) {\n        const updatedChains = Object.assign({}, this.availableChains);\n        for (const chainId of newChains) {\n          if (updatedChains[chainId]){\n            updatedChains[chainId].checked = !updatedChains[chainId].checked;\n          }\n        }\n        this.availableChains = updatedChains;\n      }\n\n      this.areChainsInit = true;\n    },\n\n    async clickActiveTab(tab) {\n      const tabName = tab.props ? tab.props.name : tab.name;\n      this.selectedChain = tabName;\n      console.log(`已切换到链 :`, tabName);\n\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      window.provider.setDefaultChain(this.selectedChain);\n    },\n\n    async initBtnClicked() {\n      var initCall;\n      if (!this.withUI) {\n        initCall = OKXUniversalProvider.init({\n          dappMetaData: {\n            name: \"univer test dapp\",\n            icon: \"https://avatars.githubusercontent.com/u/37784886\",\n          },\n        });\n      } else {\n        initCall = OKXUniversalConnectUI.init({\n          dappMetaData: {\n            icon: \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\",\n            name: \"OKX WalletConnect UI Demo\",\n          },\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: [\"success\", \"error\"],\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme\n          },\n        });\n      }\n\n      initCall.then((provider) => {\n        window.provider = provider;\n        window.tonProvider = new OKXTonProvider(window.provider);\n        window.tonProvider.onStatusChange((walletInfo) => {\n              console.log('TONConnection onStatusChange:', JSON.stringify(walletInfo));\n            }, (err) => {\n              console.log('TONConnection onStatusChange error:', err);\n            }\n        )\n\n        if (window.provider instanceof OKXUniversalConnectUI) {\n          window.provider.onModalStateChange((state)=>{\n            console.log(`onModalStateChange   ${JSON.stringify(state)}`)\n          })\n        }\n\n        console.log(\"init finished:\", provider);\n        console.log(\"init finished session:\", JSON.stringify(provider.session));\n\n        if (provider.session?.namespaces) {\n          const newChains = [];\n          console.log(\"namespaces\", provider.session.namespaces);\n          Object.entries(provider.session.namespaces).forEach(([key, value]) => {\n            if (key === \"eip155\") {\n              value.chains.forEach((chain) => {\n                newChains.push(parseInt(chain.substring(7)));\n              });\n            }\n            else {\n              value.chains.forEach((chain) => {\n                newChains.push(chain);\n              });\n            }\n          });\n\n          console.log(\"existing chains:\", newChains);\n          this.initChains(newChains);\n        } else {\n          this.initChains([]);\n        }\n\n        provider.on(\"display_uri\", (uri) => {\n          if (!useShortLink()){\n            if (this.isPC()) {\n              if (uri && !this.withUI && !this.universalToTG) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          }\n          console.log(\"通知>>>display_uri  ==> \", uri);\n        });\n\n        provider.on(\"connect_signResponse\", (items) => {\n          console.log(\"通知>>>connect_signResponse  ==> \", JSON.stringify(items));\n          this.verifyMessage(items)\n        })\n\n        provider.on(\"short_display_uri\", (uri) => {\n          if (useShortLink()){\n            if (this.isPC()) {\n              if (uri && !this.withUI && !this.universalToTG) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          }\n          console.log(\"通知>>>short_display_uri  ==> \", uri);\n        });\n\n\n        provider.on(\"session_connecting\", () => {\n          if (useShortLink()){\n            alert(\"session_connecting\")\n          }\n          console.log(\"通知>>>session_connecting  ==> \");\n        });\n\n        provider.on(\"connect\", (session) => {\n          console.log(\"通知>>>get connect session\", session);\n        });\n        provider.on(\"reconnect\", (session) => {\n          console.log(\"通知>>>get reconnect session\", session);\n          this.walletAddress = \"connected\";\n        });\n        provider.on(\"disconnect\", ({ topic }) => {\n          console.log(`通知>>>get disconnect  ${topic}`);\n          this.walletAddress = \"disconnecteddddd\";\n        });\n        provider.on(\"session_delete\", ({ topic }) => {\n          console.log(`通知>>>get session_delete  ${topic}`);\n        });\n        provider.on(\"session_update\", (session) => {\n          console.log(`通知>>>get session_update `, JSON.stringify(session));\n        });\n      });\n    },\n\n    async connectBtnClicked() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        this.testTonSdk();\n      } else {\n        console.log(`connectBtnClicked provider not finish init`);\n      }\n    },\n\n    async syncAllAddressClick() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        if (window.provider instanceof OKXUniversalProvider){\n          if (window.provider.connected()){\n            try {\n              let message = await window.provider.syncAllAddresses()\n              if (typeof message == \"string\") {\n                this.testboc = message\n              } else {\n                this.testboc = JSON.stringify(message)\n              }\n            }catch (e) {\n              this.testboc = JSON.stringify(e)\n            }\n          }else{\n            this.testboc = \"not connected\"\n          }\n        }\n\n      } else {\n        console.log(`syncAllAddress provider not finish init`);\n      }\n    },\n\n    async disconnectAction() {\n      try {\n        console.log(\"get disconnect wallet btn clicked\");\n        // await TON.disconnect();\n        var provider = window.provider;\n        await provider.disconnect();\n        this.walletAddress = \"disconnected\";\n      } catch (error) {\n        console.log(\"Disconnect  error ==>> \", error.message);\n        this.currentStatus = error.message;\n      }\n    },\n\n    async eth_requestAccounts() {\n      var data = { method: \"eth_requestAccounts\" };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_chainId() {\n      var data = { method: \"eth_chainId\" };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async wallet_switchEthereumChain() {\n      var data = { method: \"wallet_switchEthereumChain\" };\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async wallet_addEthereumChain() {\n      var data = {\n        method: \"wallet_addEthereumChain\",\n        params: {\n          blockExplorerUrls: [\"https://explorer.fuse.io\"],\n          chainId: \"0x7a\",\n          chainName: \"Fuse\",\n          nativeCurrency: { name: \"Fuse\", symbol: \"FUSE\", decimals: 18 },\n          rpcUrls: [\"https://rpc.fuse.io\"],\n        },\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n    async personal_sign() {\n      if (this.selectedChain === \"eip155:1\") {\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0x1ca023f10e157d148deed210f8bee193657a1eaa7f187909e20a9dc3b071dbc364c41fde37960c05093359f410a061ec8a7dca8c0c39fc7c1e24de8a3329775d1b\n\n        var accounts = await window.provider.request(\n          { method: \"eth_requestAccounts\" },\n          \"eip155:1\"\n        );\n        var address = accounts[0];\n        console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n        var dataETH = {\n          method: \"personal_sign\",\n          params: [\n            \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n            address,\n          ],\n        };\n\n        this.testTransaction = JSON.stringify(dataETH);\n      } else if (\n        this.selectedChain === \"eip155:137\" ||\n        this.selectedChain === \"eip155:122\"\n      ) {\n        // method\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0xebda9cfa2af43999058dffa0107031d1ef7fc0252dca85dcbd22ea097af922ca39b64d509ef61ce42b7641c5840b8a80337ffd1411b13e87e2260a3f1b6c151c1b\n\n        var dataPolygon = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n        this.testTransaction = JSON.stringify(dataPolygon);\n      } else if (this.selectedChain === \"eip155:56\") {\n        var data = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n\n        this.testTransaction = JSON.stringify(data);\n      }\n    },\n\n    async eth_sendTransaction_swap() {\n      var data = {\n        method: \"eth_sendTransaction\",\n        chainId: \"eip155:122\",\n        params: {\n          value: \"0x38d7ea4c68000\",\n          gas: \"0x2665f\",\n          to: \"0xf2614A233c7C3e7f08b1F887Ba133a13f1eb2c55\",\n          from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n          data: \"0x2646478b000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee00000000000000000000000000000000000000000000000000038d7ea4c68000000000000000000000000000620fd5fa44be6af63715ef4e65ddfa0387ad13f5000000000000000000000000000000000000000000000000000000000000001b000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000700301ffff0201602352A9Eb5234466Eac23E59e7B99bCaE79C39c0BE9e53fd7EDaC9F859882AfdDa116645287C629040BE9e53fd7EDaC9F859882AfdDa116645287C62900602352A9Eb5234466Eac23E59e7B99bCaE79C39c01f2F3e73be57031114dd1f4E75c1DD87658be7F0E000bb800000000000000000000000000000000\",\n        },\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_signTypedData_v4() {\n      // method\n      // eth_signTypedData\n      // address\n      // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n      // valid\n      // true\n      // result\n      // 0xa8bb3c6b33a119d2d567c7632195c21988df778006082742125a591f5c633f716107883a37f7de6531a6312a5f69022135bf46fe5ab77905b62c82b3395f985e1b\n      //\n\n      // var data = {\n      //   \"method\": \"eth_signTypedData_v4\",\n      //   \"params\": {\n      //     \"typedDataJson\":\"{\\\"types\\\":{\\\"EIP712Domain\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"version\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"chainId\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"name\\\":\\\"verifyingContract\\\",\\\"type\\\":\\\"address\\\"}],\\\"Person\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"wallet\\\",\\\"type\\\":\\\"address\\\"}],\\\"Mail\\\":[{\\\"name\\\":\\\"from\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"to\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"contents\\\",\\\"type\\\":\\\"string\\\"}]},\\\"primaryType\\\":\\\"Mail\\\",\\\"domain\\\":{\\\"name\\\":\\\"Ether Mail\\\",\\\"version\\\":\\\"1\\\",\\\"chainId\\\":1,\\\"verifyingContract\\\":\\\"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\\\"},\\\"message\\\":{\\\"from\\\":{\\\"name\\\":\\\"Cow\\\",\\\"wallet\\\":\\\"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\\\"},\\\"to\\\":{\\\"name\\\":\\\"Bob\\\",\\\"wallet\\\":\\\"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\\\"},\\\"contents\\\":\\\"Hello, Bob!\\\"}}\"\n      // }}\n\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n        \"eip155\"\n      );\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n      var data = {\n        method: \"eth_signTypedData_v4\",\n        params: [\n          address,\n          {\n            types: {\n              EIP712Domain: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"version\",\n                  type: \"string\",\n                },\n                {\n                  name: \"chainId\",\n                  type: \"uint256\",\n                },\n                {\n                  name: \"verifyingContract\",\n                  type: \"address\",\n                },\n              ],\n              Person: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"wallet\",\n                  type: \"address\",\n                },\n              ],\n              Mail: [\n                {\n                  name: \"from\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"to\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"contents\",\n                  type: \"string\",\n                },\n              ],\n            },\n            primaryType: \"Mail\",\n            domain: {\n              name: \"Ether Mail\",\n              version: \"1\",\n              chainId: 1,\n              verifyingContract: \"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\",\n            },\n            message: {\n              from: {\n                name: \"Cow\",\n                wallet: \"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\",\n              },\n              to: {\n                name: \"Bob\",\n                wallet: \"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\",\n              },\n              contents: \"Hello, Bob!\",\n            },\n          },\n        ],\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_sendTransaction_transfer() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            chainId: \"0x1\",\n            to: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            value: \"0x5af3107a4000\",\n            maxPriorityFeePerGas: \"0x3b9aca00\",\n            gas: \"0x5e56\",\n            maxFeePerGas: \"0x2643b9db8\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gasPrice: \"0x17003f6530\",\n            nonce: \"0x0d30\",\n            data: \"0x\",\n            value: \"0x00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasLimit: \"0x5208\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x5e56\",\n            value: \"0x5af3107a4000\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasPrice: \"0x3b9aca00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            chainId: \"0x38\",\n          },\n        };\n      }else if(this.selectedChain === \"eip155:122\"){\n         data =   {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            value: \"0x0\",\n            chainId: \"0x7a\",\n          }\n        }\n      }\n\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n        \"eip155\"\n      );\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"to\"] = address;\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_approve() {\n      var data = {};\n\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000000000000022d473030f116ddee9f6b43ac78ba3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x582d872a1b094fc48f5de31d3b73f2d9be47def1\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000f6f8096ac575b0\",\n            to: \"0x0b3F868E0BE5597D5DB7fEB59E1CADBb0fdDa50a\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            value: \"0x0\",\n            gas: \"0xe117\",\n            gasPrice: \"0xb2d05e00\",\n            data: \"0x095ea7b300000000000000000000000031c2f6fcff4f8759b3bd5bf0e1084a055615c768ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x5CA42204cDaa70d5c773946e69dE942b85CA6706\",\n          },\n        };\n      }else if (this.selectedChain === 'eip155:122'){\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000000000000013b3\",\n            to: \"0x620fd5fa44BE6af63715Ef4E65DDFA0387aD13F5\",\n          },\n        };\n      }\n\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n        \"eip155\"\n      );\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_mint() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x4cacb\",\n            data: \"0xa64dfa75000000000000000000000000ed688002f3797599db8b4feacfe8b1dda0df1c8d000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cecb15396825a895ff8da8fc2d2c77a234dccee00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f6261667962656968643737366b6177706e71336f6f6a6635693274787a76617737737164656b34616a776472637472703261366f626b70723773792f7b69647da3078303030303030303030303030303030303030303030303030303030303030303030303030303030300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001\",\n            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x30795\",\n            data: \"0xa64dfa75000000000000000000000000341b3687f0309778f08f29336b2c4b9c38b9f110000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f62616679626569686a6279676b68747a71376b68377434336266686e676e793236337668766f6578716a6d6e377161716166366e717a64743777712f7b69647dan            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      }\n\n      let str = JSON.stringify(data);\n      console.log(\"-----长度--->\", str.length);\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n        \"eip155\"\n      );\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async wallet_testRpc() {\n      let provider = window.provider;\n      provider.setDefaultChain(\n        `eip155:56`,\n        `https://eth-mainnet.g.alchemy.com/v2/NxUfYJUr-TQtEpLmSXhhD5pXn70GwsyV`\n      );\n      var data = {\n        method: \"eth_getBalance\",\n        params: [\"0x8D97689C9818892B700e27F316cc3E41e17fBeb9\", \"latest\"],\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async wallet_watchAsset() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xe0f63a424a4439cbe457d80e4f4b51ad25b2c56c\",\n              symbol: \"SPX6900\",\n              image:\n                \"https://assets.coingecko.com/coins/images/31401/standard/sticker_%281%29.jpg?1702371083\",\n              decimals: 8,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xeB51D9A39AD5EEF215dC0Bf39a8821ff804A0F01\",\n              symbol: \"LGNS\",\n              image: \"https://polygonscan.com/token/images/originlgns_32.png\",\n              decimals: 9,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0x031b41e504677879370e9dbcf937283a8691fa7f\",\n              symbol: \"FET\",\n              image: \"https://bscscan.com/token/images/fetch_32.png\",\n              decimals: 18,\n            },\n          },\n        };\n      }\n\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async ton_sendTransaction() {\n      var data  = {\n        \"messages\":[{\"address\":\"EQARULUYsmJq1RiZ-YiH-IJLcAZUVkVff-KBPwEmmaQGH6aC\",\"amount\":\"205000000\",\"payload\":\"te6cckEBAgEAhwABbQ+KfqUAAADNgG7tIEATEtAIAO87mQKicbKgHIk4pSPP4k5xhHqutqYgAB7USnesDnCcECwbgQMBAJUlk4VhgBD3JEg1TUr75iTijBghOKm/sxNDXUBl7CD6WMut0Q85x4RafwA/Es89DBXoTxuqxVFxyBbzt9Rav2HBUKl7hmkvLuKHLBCW57aK\"}],\n        \"validUntil\":1792481054,\n        \"network\":'-239'}\n      this.testTransaction = JSON.stringify(data)\n    },\n    ton_getAccount() {\n      this.testTransaction = \"这里是同步获取 不再需要点击 <<发送交易>>\"\n      let result =   window.tonProvider.account()\n      if (result) {\n        this.testboc = JSON.stringify(result);\n      } else {\n        this.testboc = 'null'\n      }\n    },\n\n    async tonUniversalLog() {\n      console.log(\"ton 信息: tonProvider  connected:\",window.tonProvider.connected())\n      console.log(\"ton 信息: tonProvider  account:\",JSON.stringify(window.tonProvider.account()))\n      console.log(\"ton 信息: tonProvider  wallet:\",JSON.stringify(window.tonProvider.wallet()))\n    },\n\n    async sendTransactionAlert() {\n      //\n      const response = await fetch(`https://apitest.fireverse.ai/oauth/okx/getNonce?publicAddress=0x0cecb15396825a895ff8da8fc2d2c77a234dccee`);\n      const data = await response.json();\n      console.log(\"请求数据----\",JSON.stringify(data))\n      await this.personal_sign()\n      if (confirm(\"Are you want to sign message?\")) {\n        this.sendTransaction();\n      }\n\n      // window.open(\"https://www.okx.com/download?deeplink=okx%3A%2F%2Fweb3%2Fwallet%2Fconnect\",'_self')\n    },\n\n    async sendTransaction() {\n      if (this.selectedChain.startsWith(\"aptos\")\n          || this.selectedChain.startsWith(\"movement\")\n          || this.selectedChain.startsWith(\"solana\")\n          || this.selectedChain.startsWith(\"sonic\")\n          || this.selectedChain.startsWith(\"cosmos\")) {\n        return\n      }\n      console.log(\"sendTransaction\", window.provider);\n      console.log(\"sendTransaction内容11------\", this.testTransaction);\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      if (this.testTransaction && window.provider) {\n        // eslint-disable-next-line no-undef\n        const sendData = JSON.parse(this.testTransaction);\n        try {\n          console.log(\"sendTransaction-----22method>>\", sendData.method);\n\n          let chainId = \"eip155:1\";\n          if (this.selectedChain) {\n            chainId = this.selectedChain;\n            console.log(\n              \"sendTransaction-----this.selectedChain>>\",\n              this.selectedChain\n            );\n          }\n          console.log(\"windowOpen[click_1]: \", Date.now());\n          if (chainId == \"sui:mainnet\") {\n            const adapter = new SuiAdapter(window.provider);\n            var suiResult = \"invalid result\";\n            if (this.currentSuiMethod == 'sui_getAccount') {\n              let result = adapter.getAccount()\n              if (typeof result == \"string\") {\n                this.testboc = result\n              } else {\n                this.testboc = JSON.stringify(result)\n              }\n            }\n            if (this.currentSuiMethod == \"sui_signTransaction\") {\n              suiResult = await adapter.signTransaction(\n                this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signAndExecuteTransaction\") {\n              suiResult = await adapter.signAndExecuteTransaction(\n                this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signMessage\") {\n              console.log(\"signMessage----\", this.currentSuiTransaction);\n              suiResult = await adapter.signMessage(this.currentSuiTransaction);\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_signPersonalMessage\") {\n              console.log(\n                \"signPersonalMessage----\",\n                this.currentSuiTransaction\n              );\n              suiResult = await adapter.signPersonalMessage(\n                this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_testRpc\") {\n              console.log(\"test rpc----\", this.currentSuiTransaction);\n              console.log(\n                `请求数据发送 rpc ----->> ${JSON.stringify(sendData)}`\n              );\n              const res = await window.provider.request(sendData, chainId);\n              console.log(`请求数据回调 rpc ----->> ${JSON.stringify(result)}`);\n              if (typeof res == \"string\") {\n                this.testboc = res;\n              } else {\n                this.testboc = JSON.stringify(res);\n              }\n            }\n            console.log(\"windowOpen[click_2]: \", Date.now());\n            return;\n          }else if(chainId === \"ton:-239\"){\n            console.log(\n                `请求数据发送 sendTransaction ---ton-->> ${JSON.stringify(sendData)}`\n            );\n            let result =  await window.tonProvider.sendTransaction(sendData)\n            console.log(\n                `请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`\n            );\n            if (typeof result == \"string\") {\n              this.testboc = result;\n            } else {\n              this.testboc = JSON.stringify(result);\n            }\n            return\n          }\n\n          if (chainId == 'btc:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var btcResult = 'invalid result'\n\n            if (this.currentBtcMethod == 'btc_signMessage') {\n              btcResult = await btcAdapter.signMessage(chainId, this.currentBtcTransaction[\"signStr\"])\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_send') {\n              btcResult = await btcAdapter.send(chainId, this.currentBtcTransaction)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signPsbt') {\n              btcResult = await btcAdapter.signPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n\n              this.hexToBase64(btcResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentBtcMethod == 'btc_signPsbts') {\n              btcResult = await btcAdapter.signPsbts(chainId, this.currentBtcTransaction.psbtHexs, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_sendInscription') {\n              btcResult = await btcAdapter.sendInscription(chainId, this.currentBtcTransaction.address, this.currentBtcTransaction.inscriptionId, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signAndPushPsbt') {\n              btcResult = await btcAdapter.signAndPushPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            }else if (this.currentBtcMethod == 'btc_sendBitcoin') {\n              btcResult = await btcAdapter.sendBitcoin(chainId, this.currentBtcTransaction.toAddress, this.currentBtcTransaction.satoshis, this.currentBtcTransaction.options)\n\n              this.testboc = JSON.stringify(btcResult)\n            }\n            return\n          }\n\n          if (chainId == 'fractal:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var fractalResult = 'invalid result'\n\n            if (this.currentFractalMethod == 'fractal_signMessage') {\n              fractalResult = await btcAdapter.signMessage(chainId, this.currentFractalTransaction['signStr'])\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_send') {\n              fractalResult = await btcAdapter.send(chainId, this.currentFractalTransaction)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signPsbt') {\n              fractalResult = await btcAdapter.signPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.hexToBase64(fractalResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentFractalMethod == 'fractal_signPsbts') {\n              fractalResult = await btcAdapter.signPsbts(chainId, this.currentFractalTransaction.psbtHexs, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_sendInscription') {\n              fractalResult = await btcAdapter.sendInscription(chainId, this.currentFractalTransaction.address, this.currentFractalTransaction.inscriptionId, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signAndPushPsbt') {\n              fractalResult = await btcAdapter.signAndPushPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            }else if (this.currentFractalMethod == 'fractal_sendBitcoin') {\n              fractalResult = await btcAdapter.sendBitcoin(chainId, this.currentFractalTransaction.toAddress, this.currentFractalTransaction.satoshis, this.currentFractalTransaction.options)\n\n              this.testboc = JSON.stringify(fractalResult)\n            }\n\n            return\n          }\n\n          console.log(`请求数据发送 sendTransaction ----->> ${JSON.stringify(sendData)}`)\n          var result = await window.provider.request(sendData, chainId)\n          console.log(`请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`)\n\n          console.log(\"windowOpen[click_3]: \", Date.now());\n          if (typeof result == \"string\") {\n            this.testboc = result;\n          } else {\n            this.testboc = JSON.stringify(result);\n          }\n          console.log(\"方法数据回调 --this.testboc--\", this.testboc);\n        } catch (error) {\n          console.error(\"方法数据回调失败 --Error--\", error.message);\n\n          if (error.code === OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n            this.testboc = error.message;\n          } else {\n            this.testboc = \"wrong signature！\" + error.message;\n          }\n        }\n      } else {\n        alert(\"Please input transaction data\");\n      }\n    },\n\n    hexToBase64(hexStr) {\n      var bytes = [];\n      for (var i = 0; i < hexStr.length; i += 2) {\n        bytes.push(parseInt(hexStr.substr(i, 2), 16));\n      }\n      const buffer = new Uint8Array(bytes)\n      const blob = new Blob([buffer]);\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = function (e) {\n          var base64Data = e.target.result.split(\",\")[1]\n          resolve(base64Data);\n        };\n        reader.onerror = function (e) {\n          reject(e);\n        };\n        reader.readAsDataURL(blob);\n      });\n    },\n    testBase64UrlSafe(){\n      let datatest = {\"protocolVer\":1,\"topic\":\"8a7a4c3be73802d0ae2587123ade7bb79f27433b9aa3ca589a2208a2089eecfd\",\"clientId\":\"5f1bbf9eac92160affa7ef04d0a710817ddb6d8c22ebbd6263e86f059930b404\",\"requestId\":\"1731383250054\",\"dAppInfo\":{\"url\":\"connect.oker.vip\",\"origin\":\"https://connect.oker.vip\",\"name\":\"univer test dapp\",\"icon\":\"https://avatars.githubusercontent.com/u/37784886\"},\"requests\":[{\"name\":\"requestAccounts\",\"requiredNamespaces\":[{\"namespace\":\"aptos\",\"chains\":[\"aptos:637\"]}],\"optionalNamespaces\":[],\"connectRequestMethods\":[{\"chainId\":\"aptos:637\",\"method\":\"aptos_signMessage\",\"params\":{\"data\":{\"address\":true,\"application\":true,\"chainId\":true,\"message\":\"123 中文测试!\",\"nonce\":\"1234\"},\"applicationUrl\":\"https://connect.oker.vip\",\"prefix\":\"APTOS\",\"aptosChainId\":\"1\"}}]}],\"redirect\":\"none\"}\n      let json = JSON.stringify(datatest)\n      const utf8Array = new TextEncoder().encode(json);\n      let binary = '';\n      utf8Array.forEach(byte => {\n        binary += String.fromCharCode(byte);\n      });\n\n      let firstStr =  btoa(binary)\n      console.log(\"字符串编码1>>>>\",firstStr)\n      firstStr = firstStr.replace(/\\+/g, '-')  // 替换 '+'\n      console.log(\"字符串编码2>>>>\",firstStr)\n      firstStr = firstStr.replace(/\\//g, '_')  // 替换 '/'\n      console.log(\"字符串编码3>>>>\",firstStr)\n      firstStr = firstStr.replace(/=+$/, '');  // 移除 '=';\n      console.log(\"字符串编码4>>>>\",firstStr)\n\n      let showUrl =  getUniversalLink(getAppWalletDeepLink(firstStr))\n      console.log(\"字符串编码5>>>>\",showUrl)\n      this.qrValue = showUrl;\n      this.showModal = true;\n    },\n\n\n    async testTonSdk() {\n      // 1. connect\n      //  create sub providers for each namespace/chain\n      let nameSpacesChains = [];\n      let optSpaceChains = [];\n\n      let solanaChains = [\n        \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n        \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n        \"svm:70000062\",\n      ];\n      let hasEip155, hasSolana, hasSui, hasBtc, hasAptos, hasTon, hasCosmos, hasTron = false\n\n      let suiChains = [\n        \"sui:mainnet\",\n      ];\n\n      let btcChains = [\n        \"btc:mainnet\",\n        \"fractal:mainnet\"\n      ];\n\n      const chains = Object.entries(this.availableChains)\n          .filter((chain) => chain[1].checked)\n          .map((chain) => chain[0]);\n      console.log(`chains  ===> ${chains.values()}`)\n      chains.forEach(function (chainId) {\n        console.log(`chains.forEach chainId  ===> ${chainId}`)\n\n        if (solanaChains.includes(chainId)) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"ton\")) {\n          nameSpacesChains.push(chainId)\n          hasTon = true\n          return\n        }\n        if (typeof chainId == 'string' && (chainId.startsWith(\"aptos\") || chainId.startsWith(\"movement\"))) {\n          nameSpacesChains.push(chainId)\n          hasAptos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId)\n          hasSolana = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"cosmos\")) {\n          nameSpacesChains.push(chainId)\n          hasCosmos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"tron\")) {\n          nameSpacesChains.push(chainId)\n          hasTron = true\n          return\n        }\n\n        if (suiChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`);\n          nameSpacesChains.push(chainId);\n          hasSui = true;\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`)\n          nameSpacesChains.push(chainId)\n          hasBtc = true\n          return\n        }\n\n        hasEip155 = true\n        nameSpacesChains.push(`eip155:${chainId}`)\n      })\n\n\n      optionChains.forEach(function (chainId) {\n        if (solanaChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n        if (typeof chainId == \"string\" && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (suiChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          optSpaceChains.push(chainId)\n          return\n        }\n\n        optSpaceChains.push(`eip155:${chainId}`)\n      })\n\n      console.log(`namespaceChains  ===> ${JSON.stringify(nameSpacesChains)}`);\n      var connectData = {};\n      if (nameSpacesChains && nameSpacesChains.length > 0) {\n        var requireData = {};\n\n        if (hasEip155) {\n          requireData.eip155 = {\n            chains: nameSpacesChains.filter((item) =>\n              item.startsWith(\"eip155\")\n            ),\n            defaultChain: nameSpacesChains.filter((item) =>\n              item.startsWith(\"eip155\")\n            )[0],\n          };\n        }\n        if (hasSolana) {\n          requireData.solana = {\n            chains: nameSpacesChains.filter(\n              (item) =>\n                item.startsWith(\"solana\") ||\n                item.startsWith(\"sonic\") ||\n                item.startsWith(\"svm\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n              (item) =>\n                item.startsWith(\"solana\") ||\n                item.startsWith(\"sonic\") ||\n                item.startsWith(\"svm\")\n            )[0],\n          };\n        }\n\n        if (hasCosmos) {\n          requireData.cosmos = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            )[0],\n          }\n        }\n        if (hasTron) {\n          requireData.tron = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            )[0],\n          }\n        }\n        if (hasTon) {\n\n          //\n          let tonParams = {\n            ton_addr:{\n              name: 'ton_addr',\n            }\n          };\n          if (this.tonProofValue){\n            tonParams = {\n              ton_addr:{\n                name: 'ton_addr',\n              },\n              ton_proof:{\n                name: 'ton_proof',\n                payload: this.tonProofValue,\n              }\n            };\n          }\n\n\n          requireData.ton = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"ton\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"ton\"))[0],\n            params:tonParams\n          };\n        }\n\n        if (hasSui) {\n          requireData.sui = {\n            chains: nameSpacesChains.filter((item) => item.startsWith(\"sui\")),\n            defaultChain: nameSpacesChains.filter((item) =>\n              item.startsWith(\"sui\")\n            )[0],\n            rpcMap: {\n              \"sui:mainnet\": \"https://www.okx.com/fullnode/sui/discover/rpc\"\n            }\n          };\n        }\n        if (hasAptos) {\n          requireData.aptos = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\"))[0]\n          }\n        }\n\n        if (hasBtc) {\n          let btcChains = nameSpacesChains.filter(item => item.startsWith(\"btc\") || item.startsWith(\"fractal\"))\n          requireData.btc = {\n            chains: btcChains,\n            defaultChain: btcChains[0]\n          }\n        }\n        console.log(`requireData  ===> ${JSON.stringify(requireData)}`)\n        connectData['namespaces'] = requireData;\n        console.log(JSON.stringify(connectData))\n      }\n\n      if (optSpaceChains && optSpaceChains.length > 0) {\n        var optData = {\n          eip155: {\n            chains: optSpaceChains.filter((item) => item.startsWith(\"eip155\")),\n            defaultChain: optSpaceChains.filter((item) =>\n              item.startsWith(\"eip155\")\n            )[0],\n          },\n        };\n        connectData[\"optionalNamespaces\"] = optData;\n      }\n\n      if (nameSpacesChains.length === 0 && optSpaceChains.length === 0) {\n        //未选择链\n        alert(\"Please select a chain from above to continue\");\n        return;\n      }\n      console.log(\"=====>connectData \");\n      console.log(connectData);\n\n      var connectMethod;\n      let signMethods = this.getCurrentSelectedMethodData();\n      if (window.provider instanceof OKXUniversalConnectUI) {\n        if (signMethods && signMethods.length>0){\n          connectMethod = window.provider.openModalAndSign(connectData,signMethods);\n        }else {\n          connectMethod = window.provider.openModal(connectData);\n        }\n      } else {\n        if (this.universalToTG){\n          connectData.sessionConfig = {\n            useMini:true,\n            openUniversalUrl:true,\n            tmaReturnUrl:'back'\n          }\n        }else{\n          connectData.sessionConfig = {\n            redirect: selectedReturnStrategy\n          }\n        }\n        if (signMethods && signMethods.length>0){\n          connectMethod = window.provider.connectAndSign(connectData,signMethods);\n        }else {\n          connectMethod = window.provider.connect(connectData);\n        }\n      }\n\n      await connectMethod\n        .then((result) => {\n          // 2. set defaul chain\n          this.walletAddress = \"connected\";\n          if (this.isPC()) {\n            this.showModal = false;\n          }\n          if (result){\n            this.testboc = JSON.stringify(result)\n          }\n\n          if (window.provider.session && window.provider.session.namespaces){\n            let ton = window.provider.session.namespaces[\"ton\"];\n          console.log(\"是否包含ton\",ton)\n            if (ton){\n              this.tonUniversalLog()\n            }\n          }\n\n\n\n        })\n        .catch((error) => {\n          if (error.message){\n            alert(error.message)\n          }\n\n          console.error(\"发生了错误：\", error);\n        });\n    },\n\n    getCurrentSelectedMethodData(){// 连接签名\n      var methodList = [];\n      this.selectedMethod.forEach(method =>{\n        switch (method) {\n          case \"wallet_addEthereumChain(ETH)\":\n            methodList.push({\n              method: \"wallet_addEthereumChain\",\n              chainId:\"eip155:1\",\n              params: {\n                blockExplorerUrls: [\"https://explorer.fuse.io\"],\n                chainId: \"0x7a\",\n                chainName: \"Fuse\",\n                nativeCurrency: { name: \"Fuse\", symbol: \"FUSE\", decimals: 18 },\n                rpcUrls: [\"https://rpc.fuse.io\"],\n              },\n            })\n            break;\n          case \"personal_sign(ETH)\":\n            methodList.push(\n              {\n                method: \"personal_sign\",\n                chainId: \"eip155:1\",\n                params: [\n                  \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n                ],\n              });\n            break;\n          case \"solana_signMessage(Sol mainnet)\":\n            methodList.push(\n              {\n                \"chainId\": \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n                \"method\": \"solana_signMessage\",\n                \"params\": {\n                  \"message\": \"Hello Solana\",\n                }\n              }\n            );\n            break;\n          case \"sui_signMessage(Sui mainnet)\":\n          case \"sui_signPersonalMessage(Sui mainnet)\": {\n            let suiData = [\n              76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n              109, 111, 118, 101,\n            ];\n            let uint8Array = new Uint8Array(suiData);\n            let currentMethod = \"sui_signMessage\";\n            this.currentSuiTransaction = {\n              message:uint8Array\n            }\n\n            if(method.startsWith(\"sui_signPersonalMessage\")){\n              currentMethod = \"sui_signPersonalMessage\";\n            }\n            methodList.push(\n                {\n                  method: currentMethod,\n                  chainId: \"sui:mainnet\",\n                  params: {\n                    message: uint8Array,\n                  }\n                }\n            );\n            break;\n          }\n          case \"btc_signMessage(BTC)\":\n            methodList.push(\n              {\n                method: \"btc_signMessage\",\n                chainId: \"btc:mainnet\",\n                params: {\n                  signStr: \"Welcome to BTC\"\n                }\n              }\n            )\n            break;\n          case \"aptos_signMessage(aptos mainnet)\":\n            methodList.push(\n              {\n                \"chainId\": \"aptos:mainnet\",\n                \"method\": \"aptos_signMessage\",\n                \"params\": {\n                  address: true,\n                  application: true,\n                  chainId: true,\n                  message: \"Hello Aptos\",\n                  nonce: \"1234\"\n                }\n              }\n            )\n            break;\n          case \"cosmos_signArbitrary(cosmoshub)\":\n            methodList.push(\n                {\n                  \"chainId\": \"cosmos:cosmoshub-4\",\n                  \"method\": \"cosmos_signArbitrary\",\n                  \"params\": {\n                    message: \"test cosmos\"\n                  }\n                }\n            )\n\n            break;\n          case \"test_noSupport_eth(ETH)\":\n            methodList.push(\n                {\n                  chainId: \"eip155:1\",\n                  method: \"test_noSupport_eth\",\n                  params: {\n                    message: \"test hello\",\n                  }\n                }\n            )\n            break;\n          case \"sync_all_addresses\":\n            methodList.push(\n                {\n                  method: \"sync_all_addresses\",\n                });\n            break;\n          case \"tron_signMessage\":\n            methodList.push(\n                {\n                  chainId:\"tron:mainnet\",\n                  method: \"tron_signMessage\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n          case \"tron_signMessageV2\":\n            methodList.push(\n                {\n                  chainId:\"tron:mainnet\",\n                  method: \"tron_signMessageV2\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n            //\n          default:\n\n            break;\n        }\n      })\n      this.selectedMethodData = methodList\n      return methodList\n\n    },\n\n\n    closeModal() {\n      this.showModal = false;\n    },\n\n    isPC() {\n      const userAgentInfo = navigator.userAgent;\n      console.log(\"current device ua is ===>\", userAgentInfo);\n\n      const Agents = [\n        \"Android\",\n        \"iPhone\",\n        \"SymbianOS\",\n        \"Windows Phone\",\n        \"iPad\",\n        \"iPod\",\n      ];\n      let flag = true;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = false;\n          break;\n        }\n      }\n      return flag;\n    },\n    isSafariOrChrome() {\n      const userAgentInfo = navigator.userAgent;\n      const Agents = [\"Safari\", \"Chrome\"];\n      let flag = false;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = true;\n          break;\n        }\n      }\n      return flag;\n    },\n\n    /// solana\n    async sol_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      let data = {\n        method: \"solana_signMessage\",\n        params: {\n          message: \"Hello Solana\",\n          pubkey: \"\",\n        },\n      };\n      this.testTransaction = JSON.stringify(data);\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let message = await provider.signMessage(\n          \"Hello Solana\",\n          this.selectedChain\n      );\n      console.log(\"solana_signMessage Result:\",JSON.stringify(message))\n      const result1 = nacl.sign.detached.verify(\n          new TextEncoder().encode(\"Hello Solana\"),\n          message.signature,\n          new PublicKey(message.publicKey).toBytes()\n      );\n      console.log(result1)\n\n      if (typeof message == \"string\") {\n        this.testboc = result1;\n      } else {\n        this.testboc = result1;\n      }\n    },\n\n    async aptos_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      let data = {\n        address: true,\n        application: true,\n        chainId: true,\n        message: \"Hello Aptos\",\n        nonce: \"1234\"\n      }\n\n      let provider = new OKXAptosProvider(window.provider)\n      let message = await provider.signMessage(data, this.selectedChain)\n      this.testTransaction = JSON.stringify(data)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n          functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async move_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async move_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n          functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n        },\n      });\n\n      // let data = {\n      //   \"arguments\": [\"100000\",[\"0\",\"0\",\"10533\"],[\"10\",\"5\",\"5\"],[\"false\",\"false\",\"true\"]],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x3\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\",\"0x73eb84966be67e4697fc5ae75173ca6c35089e802650f75422ab49a8729704ec::coin::DooDoo\",\"0x53a30a6e5936c0a4c5140daed34de39d17ca7fcae08f947c02e979cef98a3719::coin::LSD\",\"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::CurveV1\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x54cb0bb2c18564b86e34539b9f89cfe1186e39d89fce54e1cd007b8e61673a85::bin_steps::X80\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async sol_signVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(\n        provider.getAccount(\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\").address\n      );\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n         recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signTransaction(\n        transaction,\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAndSendVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n        transaction,\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllVersionedTransactions() {\n      let provider = new OKXSolanaProvider(window.provider);\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n        [transaction],\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signTransaction() {\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n         recentBlockhash: blockhash,\n      }).add(\n        SystemProgram.transfer({\n          fromPubkey: new PublicKey(provider.getAccount().address),\n          toPubkey: new PublicKey(provider.getAccount().address),\n          lamports: 1000,\n        })\n      );\n\n      this.testTransaction = safeJsonStringify(transaction)\n      let result = await provider.signTransaction(\n        transaction,\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllTransactions() {\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n        SystemProgram.transfer({\n          fromPubkey: new PublicKey(provider.getAccount().address),\n          toPubkey: new PublicKey(provider.getAccount().address),\n          lamports: \"100\",\n        })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n        [transaction],\n        this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    getSolConnect() {\n      let rpc = \"https://www.okx.com/fullnode/sol/discover/rpc\"\n      if (this.selectedChain === \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\") {\n        rpc = \"https://www.okx.com//fullnode/sol/discover/rpc\"\n      } else if (this.selectedChain === \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\"){\n        rpc = \"https://www.okx.com/fullnode/soltestnet/discover/rpc\"\n      } else if (this.selectedChain === \"svm:70000062\") {\n        rpc = \"https://www.okx.com/fullnode/sonic/testnet/discover/rpc\"\n      }\n      return rpc\n    },\n\n    async sol_signAndSendTransaction() {\n\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n        SystemProgram.transfer({\n          fromPubkey: new PublicKey(provider.getAccount().address),\n          toPubkey: new PublicKey(provider.getAccount().address),\n          lamports: \"100\",\n        })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n        transaction,\n        this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async cosmos_signArbitrary() {\n      let provider = new OKXCosmosProvider(window.provider)\n      let message = await provider.signArbitrary(this.selectedChain, provider.getAccount(this.selectedChain).address, \"test cosmos\")\n      if (typeof message == \"string\") {\n        this.testboc = message;\n      } else {\n        let isValid =  await this.cosmos_verifySignArbitrary(provider.getAccount(this.selectedChain).address,\"test cosmos\",message.signature, message.pub_key.value)\n        console.log(\"verify\",isValid)\n        this.testboc = \"verify:\" + isValid + JSON.stringify(message);\n      }\n    },\n\n    async cosmos_verifySignArbitrary(signer, data, signature, pubkey) {\n      try {\n        console.log(\"cosmos_verifySignArbitrary signer:\",signer)\n        console.log(\"cosmos_verifySignArbitrary data:\",JSON.stringify(data))\n        console.log(\"cosmos_verifySignArbitrary signature:\",signature)\n        console.log(\"cosmos_verifySignArbitrary pubkey:\",pubkey)\n\n        // 将bech32地址转换为公钥\n        const {prefix: prefixStr} = fromBech32(signer)\n\n        const signatureBuffer = Buffer.from(signature, 'base64');\n\n        const uint8Signature = new Uint8Array(signatureBuffer); // Convert the buffer to an Uint8Array\n\n        const pubKeyValueBuffer = Buffer.from(pubkey, 'base64'); // Decode the base64 encoded value\n\n        const pubKeyUint8Array = new Uint8Array(pubKeyValueBuffer); // Convert the buffer to an Uint8Array\n\n        // 验证签名\n        return await verifyADR36Amino(\n            prefixStr,\n            signer,\n            data,\n            pubKeyUint8Array,\n            uint8Signature\n        )\n      } catch (err) {\n        console.error('Verification failed:', err)\n        return false\n      }\n    },\n\n    async cosmos_signAmino(){\n      let provider = new OKXCosmosProvider(window.provider)\n      // const rpcUrl = 'https://osmosis-rpc.publicnode.com:443';\n      // const client = await StargateClient.connect(rpcUrl);\n      // const height = await client.getHeight();\n      // let address = provider.getAccount(this.selectedChain).address\n      // const sequence = await client.getSequence(address)\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      // let signDoc = makeSignDoc(\n      //     transaction.msgs,\n      //     transaction.fee,\n      //     this.selectedChain.split(\":\")[1],\n      //     transaction.memo,\n      //     transaction.accountNumber,\n      //     transaction.sequence,\n      // )\n      let signDoc = {\n        \"chain_id\": \"osmosis-1\",\n        \"account_number\": \"630104\",\n        \"sequence\": \"480\",\n        \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]},\n        \"msgs\": [{\n          \"type\": \"osmosis/poolmanager/swap-exact-amount-in\",\n          \"value\": {\n            \"sender\": \"osmo1u6lts9ng4etxj0zdaxsada6zgl8dudpgelmuyu\",\n            \"routes\": [{\n              \"pool_id\": \"1096\",\n              \"token_out_denom\": \"ibc/987C17B11ABC2B20019178ACE62929FE9840202CE79498E29FE8E5CB02B7C0A4\"\n            }, {\n              \"pool_id\": \"611\",\n              \"token_out_denom\": \"ibc/27394FB092D2ECCD56123C74F36E4C1F926001CEADA9CA97EA622B25F41E5EB2\"\n            }],\n            \"token_in\": {\"denom\": \"uosmo\", \"amount\": \"100\"},\n            \"token_out_min_amount\": \"8\"\n          }\n        }],\n        \"memo\": \"FE\",\n        \"timeout_height\": \"23603788\",\n        \"signOptions\": {\n          \"useOneClickTrading\": false,\n          \"preferNoSetFee\": true,\n          \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]}\n        }\n      }\n\n\n\n\n\n\n\n      // let signOption = {\n      //   memo: true, // optional\n      //   fee: true, // optional\n      //   gasRate: {\n      //     // optional\n      //     average: \"0.2\",\n      //     low: \"0.02\",\n      //     tiny: \"0.002\",\n      //   },\n      // }\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signAmino(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, signDoc)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    messageToBuffer(message) {\n      var buffer = Buffer.from([]);\n      try {\n        if (typeof message === \"string\") {\n          buffer = Buffer.from(message.replace(\"0x\", \"\"), \"hex\");\n        } else {\n          buffer = Buffer.from(message);\n        }\n      } catch (err) {\n        console.log(`messageToBuffer error: ${err}`);\n      }\n      return buffer;\n    },\n\n\n\n    async cosmos_signDirect() {\n      let provider = new OKXCosmosProvider(window.provider)\n\n      let signDoc = {\n        \"bodyBytes\": this.messageToBuffer(\"0x0ac1010a292f6962632e6170706c69636174696f6e732e7472616e736665722e76312e4d73675472616e736665721293010a087472616e7366657212096368616e6e656c2d301a0d0a05756f736d6f120431303030222b6f736d6f3175366c7473396e67346574786a307a64617873616461367a676c386475647067656c6d7579752a2d636f736d6f733175366c7473396e67346574786a307a64617873616461367a676c386475647067337967766a773207080410ebe3f90a3880b0bcafd18cec8218\"),\n        \"authInfoBytes\": this.messageToBuffer(\"0x0a510a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a2102446e19e94ac0e83ea896d2712507577eb39fbdd2d6ae9f0fc0b9759f1fbaba9012040a02080118e00312140a0e0a05756f736d6f1205323530303010859a11\"),\n        \"chainId\": \"osmosis-1\",\n        \"accountNumber\": \"630104\",\n      }\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signDirect(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, transaction)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    sui_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentSuiTransaction = params\n      this.currentSuiMethod = flag\n    },\n\n    btc_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentBtcTransaction = params\n      this.currentBtcMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n\n    fractal_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentFractalTransaction = params\n      this.currentFractalMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n    tron_getTransactionResult(result) {\n      if (typeof result == \"string\") {\n        this.testboc = result\n      } else {\n        this.testboc = JSON.stringify(result)\n      }\n    },\n    tron_generateTransactionParams(params){\n      if (typeof params == \"string\") {\n        this.testTransaction = params\n      } else {\n        this.testTransaction = JSON.stringify(params)\n      }\n    },\n    handleModalsSelect(modals) {\n      selectedModals = modals;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: modals.length === 3 ? \"all\" : modals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n\n    handleReturnStrategySelect(returnStrategy) {\n      selectedReturnStrategy = returnStrategy === \"deeplink\" ? this.deeplink : returnStrategy;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      } else {\n        if (window.provider.sessionConfig) {\n          window.provider.sessionConfig.redirect = selectedReturnStrategy;\n        } else {\n          window.provider.sessionConfig = {\n            redirect: selectedReturnStrategy\n          };\n        }\n      }\n    },\n\n    handleReturnStrategyDeeplink(deeplink) {\n      console.log('handleReturnStrategyDeeplink', deeplink)\n      selectedReturnStrategy = deeplink;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: deeplink,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      } else {\n        if (window.provider.sessionConfig) {\n          window.provider.sessionConfig.redirect = deeplink;\n        } else {\n          window.provider.sessionConfig = {\n            redirect: deeplink\n          };\n        }\n      }\n    },\n\n    handleLanguageSelect(language) {\n      selectedLanguage = language;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: language,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n    handleConnectMethodsSelect() {\n      console.log(\"当前的方法 this.selectedMethod>>>>\",this.selectedMethod);\n    },\n\n    eth_verifyMessage(message, signature,ethAddress) {\n      console.log(\"eth_verifyMessage   message>>>\",message)\n      console.log(\"eth_verifyMessage   signature>>>\",signature)\n      console.log(\"eth_verifyMessage   ethAddress>>>\",ethAddress)\n      if (!message || !signature){\n        return \"\"\n      }\n      let originalMessage = message\n      if (message.startsWith(\"0x\")){\n        originalMessage = originalMessage.replace(/^0x/, '');\n        let str = '';\n        for (let i = 0; i < originalMessage.length; i += 2) {\n          const byte = originalMessage.slice(i, i + 2);\n          str += String.fromCharCode(parseInt(byte, 16));\n        }\n        originalMessage = str\n      }\n      console.log(\"eth_verifyMessage   originalMessage>>>\",originalMessage)\n\n      // const messageHash = ethers.utils.hashMessage(originalMessage);\n      const recoveredAddress = ethers.utils.verifyMessage(originalMessage, signature);\n      console.log(\"eth_verifyMessage recoveredAddress:\", recoveredAddress);\n      return recoveredAddress.toLowerCase() === ethAddress.toLowerCase();\n    },\n\n    async verifyMessage(list){ //连接验签\n\n        if (window.provider && window.provider.session && list && list.length>0){\n          let verifyList = {}\n          for (let methodItem of list){\n            if (\"result\" in methodItem && \"method\" in methodItem){\n              let requestItme = this.selectedMethodData.filter(item => item.method === methodItem.method)[0];\n              console.log(\"验证签名 请求>>>:\", JSON.stringify(requestItme));\n              console.log(\"验证签名 结果>>>:\", JSON.stringify(methodItem));\n              if (methodItem.method === \"personal_sign\"){\n                let ethAddress = await window.provider.request({ method: \"eth_requestAccounts\" },methodItem.chainId)\n                ethAddress = ethAddress[0];\n                console.log(\"验证eth 钱包地址>>>:\", ethAddress);\n                let ethMessage = requestItme.params[0]\n                console.log(\"验证eth 签名消息体>>:\", JSON.stringify(ethMessage));\n                verifyList[methodItem.method] = this.eth_verifyMessage(ethMessage,methodItem.result,ethAddress)\n              }else if(methodItem.method === \"solana_signMessage\"){\n                let solanaMessage = methodItem.result\n                if (\"signature\" in solanaMessage && \"publicKey\" in solanaMessage){\n                  const verifySol = nacl.sign.detached.verify(\n                      new TextEncoder().encode(\"Hello Solana\"),\n                      solanaMessage.signature,\n                      new PublicKey(solanaMessage.publicKey).toBytes()\n                  );\n                  verifyList[methodItem.method] = verifySol\n                }else {\n                  verifyList[methodItem.method] = false\n                }\n              }else if(methodItem.method === \"sui_signPersonalMessage\" || methodItem.method === \"sui_signMessage\"){\n                let suiResult =  this.sui_verifySignature(methodItem.result);\n                  verifyList[methodItem.method] = (await suiResult).result\n              }else if(methodItem.method === \"btc_signMessage\"){\n\n                verifyList[methodItem.method] = \"Not verified yet\"\n\n              }else if(methodItem.method === \"aptos_signMessage\"){\n                let aptosMessage = methodItem.result\n                let aptosProvider = new OKXAptosProvider(window.provider)\n                let  aptosPublicKey  = aptosProvider.getAccount(methodItem.chainId)?.publicKey\n\n                let signStr = aptosMessage.signature\n                if (signStr.startsWith(\"0x\")) {\n                  signStr = signStr.slice(2, signStr.length)\n                }\n\n                console.log(\"aptos_signMessage aptosPublicKey And signStr\",aptosPublicKey,signStr)\n                verifyList[methodItem.method] = nacl.sign.detached.verify(\n                    Buffer.from(aptosMessage.fullMessage),\n                    Buffer.from(signStr, 'hex'),\n                    Buffer.from(aptosPublicKey, 'hex'),\n                );\n              }else if(methodItem.method === \"cosmos_signArbitrary\"){\n                let cosmosProvider = new OKXCosmosProvider(window.provider)\n                let cosmosAddress = cosmosProvider.getAccount(methodItem.chainId)?.address\n                let cosmosMessage = methodItem.result\n                let isValid =  await this.cosmos_verifySignArbitrary(cosmosAddress,\"test cosmos\",cosmosMessage.signature, cosmosMessage.pub_key.value)\n                verifyList[methodItem.method] = isValid\n\n              }else if (methodItem.method === \"tron_signMessage\") {\n                let tronMessage = methodItem.result\n                let tronWeb = new TronWeb({\n                  \"fullHost\": 'https://api.trongrid.io',\n                  \"headers\": {},\n                  \"privateKey\": ''\n                })\n                let provider = new OKXTronProvider(window.provider)\n                verifyList[methodItem.method] = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), tronMessage, provider.getAccount(\"tron:mainnet\").address)\n              } else if (methodItem.method === \"tron_signMessageV2\") {\n                let tronMessage = methodItem.result\n                let tronWeb = new TronWeb({\n                  \"fullHost\": 'https://api.trongrid.io',\n                  \"headers\": {},\n                  \"privateKey\": ''\n                })\n                const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", tronMessage);\n                let provider = new OKXTronProvider(window.provider)\n\n                verifyList[methodItem.method] = base58Address === provider.getAccount(\"tron:mainnet\").address\n              }\n              else {\n                verifyList[methodItem.method] = \"Not verified yet\"\n\n              }\n            }else if(\"method\" in methodItem && \"error\" in methodItem) {\n              verifyList[methodItem.method] = methodItem.error\n            }\n\n          }\n\n          console.log(\"验证签名 最后的结果>>>:\", JSON.stringify(verifyList));\n          this.testTransaction = \"签名验证结果如下: \\n\" + JSON.stringify(verifyList)\n        }else {\n          console.log(\"验证签名 window.provider.session.connectMethodsReply 为空:\");\n\n        }\n\n    },\n\n    handleThemeSelect(theme) {\n      selectedTheme = theme;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: theme,\n          },\n        };\n      }\n    },\n\n    async sui_verifySignature(signatureResult) {\n      let resultObj = signatureResult\n      let result = false\n      let msg = ''\n      try {\n        /// 获取当前account\n        const adapter = new SuiAdapter(window.provider);\n        let account = adapter.getAccount()\n        console.log(`Account中获取的address：${account.address}`)\n\n        /// 验证签名\n        let pubKey = await verifyPersonalMessageSignature(this.currentSuiTransaction.message, resultObj.signature)\n        let address = pubKey.toSuiAddress()\n        console.log(`验签结果计算得到address：${address}`)\n\n        /// 对比pubKey\n        console.log(`account pubkey: ${account.publicKey}`,)\n        console.log(`result pubkey: ${pubKey.toBase64()}`)\n        result = (account.address === address) && (account.publicKey === pubKey.toBase64())\n\n        msg = `address verify: ${account.address === address}\\npublicKey verify: ${account.publicKey === pubKey.toBase64()}`\n        console.log(\"signature verify success: \", pubKey)\n      } catch (e) {\n        console.log(\"signature verify failed: \", e)\n      }\n      return {\n        result,\n        msg\n      }\n    },\n\n\n    handleRedirectSelect(input) {\n      this.redirect = input;\n    },\n\n    handleRedirectDeeplink(input) {\n      this.redirectDeeplink = input;\n    },\n\n    addRedirectParam() {\n      if (this.testTransaction) {\n        const newTransaction = JSON.parse(this.testTransaction);\n        newTransaction.redirect = this.redirect === 'deeplink' ? this.redirectDeeplink : this.redirect;\n        this.testTransaction = JSON.stringify(newTransaction);\n      }\n    },\n\n    canChainAddRedirectParam() {\n      return chainsThatCanAddRedirectParam.some((c) => this.selectedChain.startsWith(c));\n    }\n  },\n  created() {\n    // for (const eventName of Object.values(OKX_TON_CONNECTION_AND_TRANSACTION_EVENT)) {\n    //   console.log(eventName);\n    //   window.addEventListener(eventName, (event) => {\n    //     console.log(eventName,event.detail)\n    //     this.currentStatus = eventName\n    //   });\n    // }\n  },\n\n  mounted() {\n\n    var scriptTag = document.createElement(\"script\");\n    scriptTag.src = \"https://telegram.org/js/telegram-web-app.js\";\n    scriptTag.id = \"tgsdk\";\n    document.getElementsByTagName('head')[0].appendChild(scriptTag);\n\n    this.connectReady = true;\n    document.title = \"OKX Connect\";\n    this.initBtnClicked()\n  },\n};\n</script>\n","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signMessage()\">signMessage(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_send()\">send(BTC)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendBitcoin()\">sendBitcoin(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signPsbt_up()\">signPsbt(上架NFT)</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"btc_signAndPushPsbt_up()\">signAndPushPsbt(上架NFT)</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在OKX App选择要上架的Btc NFT，点击【上架】\n        </li>\n        <li>\n          2. 弹出签名面板，点开高级选项，查看\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出上架流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendInscription()\">sendInscription(BTC)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Btc NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount\n    }\n  },\n  methods: {\n    btc_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to BTC\"\n      };\n      this.$emit('generateTransactionParams', params, \"btc_signMessage\")\n    },\n\n    btc_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"btc_send\")\n    },\n\n    btc_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"btc_sendBitcoin\")\n    },\n\n    btc_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"btc_signPsbt\")\n    },\n\n    btc_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"btc_signAndPushPsbt\")\n    },\n\n    btc_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"btc_sendInscription\")\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./BtcTransactionPanel.vue?vue&type=template&id=b2c51436&scoped=true\"\nimport script from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./BtcTransactionPanel.vue?vue&type=style&index=0&id=b2c51436&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-b2c51436\"]])\n\nexport default __exports__","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signMessage()\">signMessage(Fractal)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_send()\">send(Fractal)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_sendBitcoin()\">sendBitcoin(Fractal)</el-button>\n\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signPsbt_up()\">signPsbt(上架NFT)</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_signAndPushPsbt_up()\">signAndPushPsbt(上架NFT)</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在OKX App选择要上架的Fractal NFT，点击【上架】\n        </li>\n        <li>\n          2. 弹出签名面板，点开高级选项，查看\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出上架流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_sendInscription()\">sendInscription(Fractal)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Fractal NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount\n    }\n  },\n  methods: {\n    fractal_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to UniSat!\\n\\nClick to sign in and accept the UniSat Terms of Service (https://unisat.io/terms-of-service.html) and Privacy Policy (https://unisat.io/privacy-policy.html).\\n    \\nThis request will not trigger a blockchain transaction.\\n    \\nYour authentication status will reset after 24 hours.\\n    \\nWallet address:\\nbc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\\n    \\nNonce:\\n162d70e3-8c21-4cfd-9a22-9bf0a4b7be51\\n\"\n      };\n      this.$emit('generateTransactionParams', params, \"fractal_signMessage\")\n    },\n\n    fractal_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_send\")\n    },\n\n    fractal_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_sendBitcoin\")\n    },\n\n    fractal_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"fractal_signPsbt\")\n    },\n\n    fractal_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"fractal_signAndPushPsbt\")\n    },\n\n    fractal_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"fractal_sendInscription\")\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./FractalTransactionPanel.vue?vue&type=template&id=02b5b8a5&scoped=true\"\nimport script from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./FractalTransactionPanel.vue?vue&type=style&index=0&id=02b5b8a5&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-02b5b8a5\"]])\n\nexport default __exports__","<script>\n\nimport {getFullnodeUrl, SuiClient} from \"@mysten/sui/client\";\nimport {Transaction as SuiTransaction} from '@mysten/sui/transactions';\n\nexport default {\n  name: \"SuiTransactionPanel\",\n  methods: {\n    sui_getAccount() {\n      this.$emit('generateTransactionParams', '', \"sui_getAccount\")\n    },\n\n    //对单个交易签名（不发送)\n    async sui_signMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signMessage\")\n    },\n\n    async sui_signPersonalMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signPersonalMessage\")\n    },\n\n    sui_signTransaction2() {\n      // 定义要转移的金额和目标地址\n      const amount = 109; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    async sui_requestRpc() {\n      let provider = window.provider;\n      provider.setDefaultChain(\n          `sui:mainnet`,\n          `https://fullnode.mainnet.sui.io:443`\n      );\n      var data = {\n        method: \"suix_getBalance\",\n        params: [\n          \"0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae\",\n          \"0x168da5bf1f48dafc111b0a488fa454aca95e0b5e::usdc::USDC\",\n        ],\n      };\n\n      this.$emit(\"generateTransactionParams\", data, \"sui_testRpc\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 102; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signAndExecuteTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n      this.$emit(\"generateTransactionParams\", input, \"sui_signAndExecuteTransaction\")\n    },\n\n    /// generate txBytes and txSerialize\n    async generateTsBytesAndSerizlize(input) {\n      /// txBytes and txSerialize may be constructed in advance by the dapp side\n      let resultTuple = [\"\", \"\"];\n      if (\n          \"txBytes\" in input &&\n          input.txBytes.length > 0 &&\n          \"txSerialize\" in input &&\n          input.txSerialize.length > 0\n      ) {\n        resultTuple = [input.txBytes, input.txSerialize];\n      }\n\n      /// Otherwise, a transactionBlock parameter is required.\n      if (!(\"transactionBlock\" in input)) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      // if (this.walletAddress != \"connected\") {\n      //   alert(\"请先连接钱包\");\n      //   return new Promise((resolve) => {\n      //     resolve(resultTuple);\n      //   });\n      // }\n\n      let senderAccounts = window.provider.requestAccountsWithNamespace(\"sui\");\n      if (senderAccounts.length == 0) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      try {\n        let rpcUrl = getFullnodeUrl(\"mainnet\");\n        rpcUrl = \"https://www.okx.com/fullnode/sui/discover/rpc\"\n        const suiClient = new SuiClient({ url: rpcUrl });\n\n        /// sender is required\n        input.transactionBlock.setSender(senderAccounts[0]);\n        const result = await input.transactionBlock.build({\n          client: suiClient,\n        });\n        const txBytes = Buffer(result).toString(\"base64\");\n        const txSerialize = await SuiTransaction.from(txBytes).toJSON();\n        resultTuple = [txBytes, txSerialize];\n      } catch (error) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      return new Promise((resolve) => {\n        resolve(resultTuple)\n      })\n    },\n\n    //签名并发送交易\n    sui_signAndExecuteTransaction() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n        \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.testTransaction = JSON.stringify(input);\n      this.currentSuiTransaction = input;\n      this.currentSuiMethod = \"sui_signAndExecuteTransaction\";\n    },\n  },\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_getAccount()\">getAccount(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signMessage()\">signMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signPersonalMessage()\">signPersonalMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signTransaction2()\">signTransaction(Sui)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signAndExecuteTransaction()\">sendTransaction(Sui)</el-button>\n      <div style=\"font-size: 12px; color: gray;\">(send to Rally Tiger account)</div>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_requestRpc()\">RPC_getBalance</el-button>\n      <div style=\"font-size: 12px; color: gray;\">get USDC balance of address:</div>\n      <div style=\"font-size: 12px; color: gray\">0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae</div>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signTransaction_pre_execution()\">signTransaction(prepared data)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signAndExecuteTransaction_pre_execution()\">sendTransaction(prepared data)</el-button>\n    </el-col>\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./SuiTransactionPanel.vue?vue&type=template&id=56a8eddf&scoped=true\"\nimport script from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./SuiTransactionPanel.vue?vue&type=style&index=0&id=56a8eddf&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-56a8eddf\"]])\n\nexport default __exports__","<script>\n\n\nimport {OKXTronProvider} from \"@okxconnect/universal-provider\";\nimport {TronWeb} from \"tronweb\";\n\nexport default {\n  name: \"TronTransactionPanel\",\n  methods: {\n\n    async tron_signMessage() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessage(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n\n      const verify = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), res, provider.getAccount(\"tron:mainnet\").address)\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" + res, \"tron_signMessage\")\n    },\n\n    async tron_signMessageV2() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessageV2(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", res);\n      console.log(\"tron_signMessageV2_base58Address\", base58Address)\n      console.log(\"tron_signMessageV2_address\", provider.getAccount(\"tron:mainnet\").address)\n      const verify = base58Address === provider.getAccount(\"tron:mainnet\").address\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" +  res, \"tron_signMessage\")\n    },\n\n    async tron_signTransaction(isOnlySign) {\n      let provider = new OKXTronProvider(window.provider)\n        let tronWeb = new TronWeb({\n          \"fullHost\": 'https://api.trongrid.io',\n          \"headers\": {},\n          \"privateKey\": ''\n        })\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const transaction = await tronWeb.transactionBuilder.sendTrx(\"TGBcVLMnVtvJzjPWZpPiYBgwwb7th1w3BF\", 1000, address);\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let res = await provider.signTransaction( transaction, \"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", res, \"tron_signTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async getContract() {\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41e95812d8d5b5412d2b9f3a4d5a87ca15c5c51f33\"\n      \n      try {\n        const contract = await tronWeb.trx.getContract(contractAddress)\n        const abi = contract.abi.entrys;\n        console.log(\"获取到的合约：\")\n        console.log(abi)\n      } catch (error) {\n        console.log(\"Error getting contract ABI:\", error);\n      }\n    },\n    \n    async tron_signAndSendTransactionContract(isOnlySign) {\n      // this.getContract()\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41e95812d8d5b5412d2b9f3a4d5a87ca15c5c51f33\"\n      let provider = new OKXTronProvider(window.provider)\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const parameter = [\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n      ]\n      const ret = await tronWeb.transactionBuilder.triggerSmartContract(contractAddress, \"quote(uint256,uint256,uint256)\", {}, parameter, address);\n      console.log(\"=====>transaction: \")\n      console.log(ret);\n      this.$emit(\"generateTransactionParams\", ret.transaction)\n      if (isOnlySign) {\n        let tx = await provider.signTransaction( ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async tron_signAndSendTransactionApprove(isOnlySign) {\n      let provider = new OKXTronProvider(window.provider)\n\n      let transaction = {\n        \"visible\": false,\n        \"txID\": \"d1ed31b6abd2c37e248254681d3ee61b2e628fbd776def753b5592712ebd98c5\",\n        \"raw_data\": {\n          \"contract\": [{\n            \"parameter\": {\n              \"value\": {\n                \"data\": \"095ea7b3000000000000000000000000e95812d8d5b5412d2b9f3a4d5a87ca15c5c51f33ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n                \"owner_address\": \"4157c140be01fa2bbabf7f055ab879d0c05725293c\",\n                \"contract_address\": \"41b4a428ab7092c2f1395f376ce297033b3bb446c1\"\n              },\n              \"type_url\": \"type.googleapis.com/protocol.TriggerSmartContract\"\n            },\n            \"type\": \"TriggerSmartContract\"\n          }],\n          \"ref_block_bytes\": \"1bde\",\n          \"ref_block_hash\": \"af71fa1aa01b5bd1\",\n          \"expiration\": Date.now() + 60000,\n          \"fee_limit\": 250000000,\n          \"timestamp\": Date.now()\n        },\n        \"raw_data_hex\": \"0a021bde2208af71fa1aa01b5bd140f8b1fa98b4325aae01081f12a9010a31747970652e676f6f676c65617069732e636f6d2f70726f746f636f6c2e54726967676572536d617274436f6e747261637412740a154157c140be01fa2bbabf7f055ab879d0c05725293c121541b4a428ab7092c2f1395f376ce297033b3bb446c12244095ea7b3000000000000000000000000e95812d8d5b5412d2b9f3a4d5a87ca15c5c51f33ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff70f1e6f698b432900180e59a77\"\n      }\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let tx = await provider.signTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n\n    }\n\n  }\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessage()\">tron_signMessage</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessageV2()\">tron_signMessageV2</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(true)\">\n        tron_signTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(true)\">\n        tron_signTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(true)\">\n        tron_signTransaction(Approve)\n      </el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(false)\">\n        tron_signAndSendTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(false)\">\n        tron_signAndSendTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(false)\">\n        tron_signAndSendTransaction(approve)\n      </el-button>\n    </el-col>\n\n\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./TronTransactionPanel.vue?vue&type=template&id=eaaccc08&scoped=true\"\nimport script from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./TronTransactionPanel.vue?vue&type=style&index=0&id=eaaccc08&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-eaaccc08\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=b826684a&scoped=true\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=b826684a&scoped=true&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-b826684a\"]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport ElementPlus from 'element-plus'\nimport 'element-plus/dist/index.css'\nimport App from './App.vue'\n\nconst app = createApp(App)\n\napp.use(ElementPlus)\napp.mount('#app')","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkokxconnectdemo\"] = self[\"webpackChunkokxconnectdemo\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(35391); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["require","__awaiter","this","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","WSEngine","connectionManager_1","safejson_1","log_1","protocol_1","utils_1","sessionUtils_1","url_1","constructor","appName","pendingRequest","disconnectListener","pendingRequests","connectionManager","ConnectionManager","getDefaultReporter","beginReport","addListener","event","msg","jsonResponse","safeJsonParse","logDebug","handleResponse","setSessionConnectingListener","sessionConnectingListener","addDisconnectListener","disconnecter","push","disconnect","clear","connectManagerDisconnect","arguments","fromRestore","universalConnect","request","sessionConfig","connectInfoAndUrl","_a","_b","_c","_d","_e","JSON","stringify","tonRequest","universalRequest","forEach","item","name","startsWith","connectInfo","getConnectInfo","requestId","getRequestId","openUniversalLink","openUniversalUrl","universalConnectRequest","protocolVer","Number","tonConnectSdkVersion","topic","channelId","clientId","dAppInfo","dappInfo","requests","redirect","base64Encoded","encodeConnectParams","tonConnectRequest","isFromTonSDK","length","defaultConnectRequest","openOKXLink","getOKXLink","useMini","tmaReturnUrl","openMethod","openOKXTMAWalletlinkWithFallback","useShortLink","openOKXDeeplinkWithFallback","openOKXUniversalLink","isIOS","isIos","bindRequestForPromise","response","connectResponse","method","namespaces","buildNameSpacesByConnectResponse","OKXConnectError","OKX_CONNECT_ERROR_CODES","UNKNOWN_ERROR","walletName","payload","responses","session","wallet","assign","methodsResponse","find","connectRequestMethods","signResponse","code","connect","sendSession","info","connectRequest","error","sessionInfo","params","sendRaw","set","send","requestAnswer","ttl","packageId","events","once","toString","safeJsonStringify","onAck","call","restoreconnect","onConnectResult","restoreConnect","restoreconnectFromTopic","Date","now","get","delete","listener","undefined","getCurrentConnectionReady","saveSessionContent","key","data","getSessionContent","CONNECT_METHOD_BATCH_FETCHMSG","CONNECT_METHOD_FETCHMSG","CONNECT_METHOD_RECEIVE","CONNECT_METHOD_UNSUB","CONNECT_METHOD_SUB","CONNECT_METHOD_PUBLISH","CONNECT_METHOD_LOGIN","CONNECT_METHOD_PUSH","__createBinding","create","o","m","k","k2","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","__setModuleDefault","v","__importStar","mod","prototype","hasOwnProperty","OKXWalletConnector","constants_1","storageconstants_1","storage_1","utils_2","eventemitter3_1","log","WS","resolveWebSocketImplementation","url","EventEmitter","state","ConnectorState","InitState","selectedUrlIndex","retryCount","timeOutLimit","checkWSUrl","Error","heartbeatTimer","connectionTimeoutTimer","connectURLStorage","Storage","OKXCONNECTOR_CACHE_KEY","connecting","Connecting","onPayload","rsp","emit","onClose","socket","onError","id","onopen","onmessage","onclose","Connected","emitError","errorEvent","heartbeat","clearTimeout","OnError","readyState","WebSocket","OPEN","setTimeout","bind","tryRegistOpen","logError","registOpen","inRetry","toUTCString","URLSearchParams","startTimeOutTimer","hasBuiltInWebSocket","onerror","close","on","resetTimeOutTimer","OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE","FINISHED","checkMaxRetry","OKXCONNECTOR_WS_URL_LIST","connectionTryNext","nextUrl","getNextSelectUrl","CANCELED","pendingSocket","TIME_OUT","cacheSuccessUrlSelect","saveContent","onVisibleChanged","document","visibilityState","err","CONNECTION_ERROR","removeEventListener","addEventListener","Disconnected","currentStatus","decrypt","success","failed","listenPayloadHandler","removeListener","parsedEvent","rawMsg","message","failHandler","addPackageParse","callback","payloadHandler","param","off","doLogin","getMsgPayloadFromHistory","tmpMsg","jsonstr","onOpen","openHandler","connect_1","commands_1","jwtconstants_1","crypto_1","jwt_1","report_1","appname","connectStorage","OKXCONNECTOR_CACHE_KEY_DAPP","crypto","SessionCrypto","inTMA","isInTMA","reportLog","keyPairInfo","getCachedCryptoKeyPair","jwtKeyPair","getCachedJWTKeyPair","saveJWTKeyPair","connector","OKXCONNECTOR_WS_URL_1","connectedWalletPK","currentTopic","refreshPackageId","saveCryptoKeyPair","keyPair","cacheInfo","encryptStoreMsg","OKXCONNECTOR_CRYPTO_KEY","kp","getAndDecrypt","content","clearCache","strkeyPair","publicKey","toHexString","secretKey","OKXCONNECTOR_JWT_KEY","strKeyPairInfo","hexToByteArray","generateKeyPair","isWalletPKReady","makeJWT","signJWT","OKXCONNECTOR_JWT_SIDE","OKXCONNECTOR_JWT_TTL","parsePackage","input_1","input","ignoreACK","sendACK","getItem","OKXCONNECTOR_TOKEN_CACHE","inputObj","messageId","sendReceive","generateTopic","stringifyKeypair","timeLog","getTime","lastConnectId","cachedSenderPublicKey","OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE","jwtToken","timeOne","timeF","sendFetchAndConsumeMessages","timeTh","catch","jsonrpc","CONNECT_JSONRPC_VER","token","replace","parsedMessage","fail","msgObj","trimStart","OKXCONNECTOR_MESSAGE_TTL","msg_1","encrypt","reportEvent","OKXReportType","LOG","msgId_1","success_1","msgId","reason","sendConnectSessionInfo","fetchedMessages","hasMore","receivedMsgs","i","timeFive","cleanCache","OKXCONNECTOR_SESSION_PREFIX_KEY","jsonData","jsonStr","object","OKXCONNECTOR_WS_URL_IDX_KEY","OKXCONNECTOR_WS_URL_3","OKXCONNECTOR_WS_URL_2","EVENT_EMITTER_MAX_LISTENERS","Engine","WSEngine_1","InjectEngine_1","Map","isConnectInject","wsEngine","injectEngine","InjectEngine","isInject","injectConnect","connectionRequest","resopnse","option","WalletConnectionManager","walletConnectionManager_1","engine_1","__importDefault","MULTICODEC_ED25519_LENGTH","MULTICODEC_ED25519_HEADER","MULTICODEC_ED25519_BASE","MULTICODEC_ED25519_ENCODING","DID_METHOD","DID_PREFIX","DID_DELIMITER","KEY_PAIR_SEED_LENGTH","DATA_ENCODING","JSON_ENCODING","JWT_ENCODING","JWT_DELIMITER","JWT_IRIDIUM_TYP","JWT_IRIDIUM_ALG","JWTHeaderType","decodeJSON","encodeJSON","encodeIss","decodeIss","encodeSig","decodeSig","encodeData","decodeData","encodeJWT","decodeJWT","verifyJWT","ed25519","tweetnacl_1","stringUtils_1","default","sign","str","okxtoString","okxfromString","val","publicKeyStr","join","issuer","prefix","multicodec","split","bytes","encoded","header","signature","jwt","slice","sub_1","aud_1","ttl_1","keyPair_1","sub","aud","iat","Math","floor","alg","typ","iss","exp","act","detached","verify","OKXCONNECTOR_JWT_WALLET_SIDE","buildRequestAccountNameSpacesByConnectResponse","requestAccountNameSpaces","universalResponse","tonAddress","tonProof","address","network","ton_addr","ton_proof","accounts","namespace","addresses","methods","extra","chains","addressItem","addressArr","chain","utils_3","crypto_js_1","subKey","beforeKey","localStorage","resolveLocalStorage","checkAndUpgradeCache","storeKey","cipherIV","cacheStr","cacheKey","cache","cacheObj","fromCacheKey","toCacheKey","setItem","removeItem","timestamp","saveItem","localKey","totalCacheStr","getCachedPBKDF2InfoKey","pwLen","saltLen","pw","iv","salt","OKXCONNECTOR_STORAGER_CRYPTO_SALT","randomBytes","OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD","OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV","ivBuffer","PBKDF2","iterations","storeInfo","AES","enc","Utf8","OKXCONNECTOR_STORAGE_CIPHER_METHOD","OKXCONNECTOR_TON_KEY","WalletConnectionManagerEvent","WalletConnectionManagerTopicInfoCacheKey","RECEIVE_REQUEST","walletConnectionConstants_1","communicateEvents","sessionCryptoInfoMap","inLogin","isLogined","offset","topicId","isTopicPublicKeyExist","timestampStr","parseInternalMsg","internalMsg","internalObj","origin","originContent","base64decode","updateClientId","cid","lastCheck","dappPublicKey","syncCacheSessionInfo","topic_1","_f","_g","_h","_j","_k","_l","isInternalData","inner_message","inner_topic","messageObj","sessionInfoString","base64Content","inner_connection","toObject","decryptWallet","recovrySessionInfoFromCache","cacheMap","topicItem","cryptoItem","cryptoKeyPair","cacheSessionInfo","sync","duplicatedTopics","includes","appendTopic","sessionPublicKey","subscribeTopics","Array","from","confirmAppendingTopics","size","keys","getSessionPublicKey","getCurrentCachedTopicIdList","needPublicKey","useRaw","connectedDappPK","cryptoObject","encryptWallet","sendUnsubscribe","sendBatchFetchAndConsumeMessages","topicIdList","topics","withInternalData","finishCount","idx","nonceLength","sessionKeyPair","createKeypairFromString","createKeypair","box","createNonce","receiverPublicKey","encodedMessage","TextEncoder","encode","nonce","encrypted","concatInfo","concatUint8Arrays","hexResult","encodedResult","base64encode","senderPublicKey","messageByteArray","toUint8Array","internalMessage","splitToUint8Arrays","decrypted","open","TextDecoder","decode","__exportStar","p","provider_1","eip155Pro","Eip155Provider","window","okxwallet","BAD_REQUEST_ERROR","eip155","requestAccounts","requiredNamespaces","nameSpace","optionalNamespaces","platform","responseItem","walletInfo","requestWallets","walletInfoFirst","connectAccounts","chainId","idNum","eip155Account","newRequest","CHAIN_NOT_SUPPORTED","hasOKXInjectedProvider","getWindowProviderNamespace","providerSearch","provider","property","path","_provider","resultMe","IEngine","ISignClient","ISignClientEvents","IEngineEvents","super","client","creatOKXMiniAppWalletInfo","creatOKXWalletInfo","getBigIntRpcId","formatJsonRpcRequest","isJsonRpcError","isJsonRpcResponse","parseConnectionError","isHttpUrl","formatJsonRpcError","json_rpc_1","wallet_info_1","isJsonRpcPayload","isJsonRpcRequest","isJsonRpcResult","payloadId","formatJsonRpcResult","isReservedErrorCode","getError","getErrorByCode","formatErrorMessage","isWsUrl","okx_connect_error_1","IncrementalRandomGenerator","bits","Uint8Array","Uint16Array","Uint32Array","initialValue","getNextValue","uint8Generator","uint16Generator","date","BigInt","RESERVED_ERROR_CODES","type","STANDARD_ERROR_MAP","DEFAULT_ERROR","match","values","INTERNAL_ERROR","SERVER_ERROR","getUrlProtocol","matches","RegExp","matchRegexProtocol","regex","protocol","test","CONNECT_ITEM_ERROR_CODES","TONCHAIN","connect_wallet_1","connect_event_1","downloadUrl","standardUniversalLink","standardDeeplink","tgwalletName","tgwalletAppName","shortUniversalLink","okxDeeplink","location","hostname","SERVER_ERROR_CODE_RANGE","INVALID_PARAMS","METHOD_NOT_FOUND","INVALID_REQUEST","PARSE_ERROR","getDefaultMessageByCode","setPrototypeOf","toJSON","ALREADY_CONNECTED_ERROR","NOT_CONNECTED_ERROR","UNKNOWN_APP_ERROR","USER_REJECTS_ERROR","METHOD_NOT_SUPPORTED","NameSpaceKeyTron","NameSpaceKeyCosmos","NameSpaceKeyAptos","NameSpaceKeyBtc","NameSpaceKeySui","NameSpaceKeyTON","NameSpaceKeySOL","NameSpaceKeyEip155","misc_1","callForSuccess","fn","options","attempts","delayMs","lastError","delay","timeout","signal","aborted","timeoutId","versionCompare","isBrowser","isOS","isMobileUserAgent","openDeeplinkWithFallback","openLinkBlank","openLink","toSafeBase64FromBase64","isValidObject","getAppWalletShortDeepLink","encodeTWAConnectURLParams","getTelegramWalletTWAUrl","getAppWalletDeepLink","encodeTelegramUrlParameters","isTelegramUrl","openOKXDeeplink","getUniversalLink","logWarning","call_for_success_1","web_api_1","tma_api_1","debug","forceReport","defaultReporter","OKXReporter","args","console","okxLogDebug","reduce","sendRecordContent","warn","action","content_1","OKXReportSide","versionStr","cross_fetch_1","localforage_1","reportApiList","reportCacheKey","reportUUIDKey","MAX_LIMIT_REPORTCOUNT","DEFAULT_HTTP_HEADERS","Accept","DEFAULT_HTTP_METHOD","DEFAULT_FETCH_OPTS","headers","PAGE_IN","PAGE_OUT","CLICK","DAPP","WALLET","fetchListWithTimeout","urls_1","args_1","urls","controller","AbortController","fetchPromise","timeoutPromise","_","abort","race","ok","status","currentSide","currentVersion","storage","createInstance","recordList","currentUUID","configVersionAndSide","version","side","recordCacheKey","reportPlatform","startErrorCatching","records","uuid","sendCachedRecords","getWindow","cachedErrors","sendRecord","record","body","res","filter","pathname","language","navigator","ua","userAgent","reportItem","lang","markRecordItem","sendList","map","allSettled","results","keepIndex","index","splice","markRecord","Report_WalletType_Key","Report_Proceed_QRCode_Click","Report_ChooseType_Download_Click","Report_ChooseType_ConnectWallet_Click","Report_Proceed_Retry_Click","Report_ChooseType_ConnectWallet_View","Report_Loading_ConnectWallet_View","Report_Proceed_QRCode_View","Report_Proceed_Proceed_View","JSONStringify","JSONParse","json","numbersBiggerThanMaxInt","serializedData","group","parse","isCustomFormatBigInt","substring","alloc","allocUnsafe","basics_1","string","encoding","base","BASES","decoder","array","encoder","createCodec","buf","ascii","bufNum","String","fromCharCode","charCodeAt","utf8","hex","bases","base16","latin1","binary","isTmaPlatform","isInTelegramBrowser","sendExpand","sendOpenTelegramLink","initParams","locationHash","hash","urlParseHashParams","tmaPlatform","tgWebAppPlatform","Telegram","WebApp","webAppVersion","tgWebAppVersion","platforms","TelegramWebviewProxy","isTelegramWebview","TelegramWebview","postEvent","link","fallback","URL","pathFull","search","isIframe","versionAtLeast","path_full","parent","eventType","eventData","external","notify","trustedTarget","postMessage","indexOf","_path","urlSafeDecode","qIndex","pathParam","substr","query_params","urlParseQueryString","urlencoded","decodeURIComponent","queryString","paramName","paramValue","queryStringParams","v1","v2","a","p1","p2","v1List","v2List","max","parseInt","ver","removeUrlLastSlash","addPathToUrl","deeplinkUrl","deeplinkEncodeUrl","encodeURIComponent","fullUrl","isTelegram","newWindow","href","deepLinkOpened","timeoutDuration","fallbackToDownloadPage","parameters","encodedParameters","connectRequestStr","utf8Array","btoa","connectParam","getLastSixMd5Hash","redirectStr","okxconnect","extraparams","base64ContentStr","urlSafeBase64","twaDeepLink","openTelegramLink","encodeTGParams","RANDOM_LENGTH","hasLocalStorage","hashKey","generateRandomBytes32","tweetnacl_util_1","to_string_1","sha256_1","BASE16","hexString","byteArray","byte","buffer1","buffer2","mergedArray","subArray1","subArray2","encodeUint8Array","urlSafe","encodeBase64","decodeToUint8Array","decodeBase64","uint8Array","decodeUTF8","decodedUint8Array","encodeUTF8","scheme","global","self","randomBytes32","obj","getPrototypeOf","maxTouchPoints","isIOSDevice","MSStream","isIPadOS","MD5","base64","getUserAgent","ua_parser_js_1","target","doFallback","fallbackTimeout","check","vendor","opera","getResult","osName","os","toLowerCase","deviceModel","device","model","browserName","browser","OKXBtcProvider","_1","caip","getAddressForChainId","ns","checkChainId","account","getAccount","signMessage","signStr","ret","errorData","sendBitcoin","toAddress","satoshis","to","feeRate","txhash","checkParameters","signPsbt","psbtHex","signPsbts","psbtResults","psbtHexs","signAndPushPsbt","sendInscription","inscriptionId","extension","coinId","protocolId","atomicSuffix","ordinalsSuffix","endsWith","removeSuffix","scenario","txType","batchBean","coinAmount","nftId","suffix","unexistKeys","namespaceKey","OKXCosmosProvider","core_1","accountArray","algo","bech32Address","pubKey","hexToUint8Array","signArbitrary","signerAddress","signDoc","chain_id","account_number","sequence","fee","gas","amount","msgs","memo","signData","signAmino","signOptions","resData","signed","signDirect","bodyBytes","bufferToHex","authInfoBytes","accountNumber","messageToBuffer","buffer","arr","output","x","padStart","arrayBuffer","byteValue","isNaN","OKXTonProvider","statusChangeSubscriptions","statusChangeErrorSubscriptions","tonWallet","errorsHandler","connected","tonNameSpace","walletStateInit","sessionWallet","tonDeviceInfo","appVersion","maxProtocolVersion","features","connectItems","onStatusChange","sendTransaction","transaction","MAINNET","requestAccountsWithNamespace","requestParams","OKXTronProvider","TRON_CHAIN_ID","getChain","stringToHex","signMessageV2","signTransaction","signedTx","realSignTx","visible","txID","rawData","contract","raw_data","expiration","ref_block_bytes","ref_block_hash","raw_data_hex","signAndSendTransaction","OKXUniversalProvider","eip155_1","sui_1","client_1","namespaces_1","solana_1","btc_1","aptos_1","ton_1","cosmos_1","tron_1","packages_1","init","opts","setGlobal","okxConnectUniversalinwindow","initialize","providerOpts","dappMetaData","rpcProviders","requestParam","buildRequestParamFromRequest","getProvider","validateChain","keyArr","enable","connectOpts","called","onRequestSent","disconnectAndEmit","cleanup","engine","aptosChainNameToGeneralId","replaceAptos","aptosNameSpace","realNS","replaceAptosInner","aptos","optionAptosNameSpace","realOptionNS","defaultChain","replaceAptosGeneralIdWithNetName","replaceSessionAptos","disconnectInner","connectAndSign","signRequest","updatedOpts","setNamespaces","onConnect","requestItem","signResponseList","okxConnectUniversalUIinwindow","creatNotSupportMethodItemReplay","syncAllAddresses","syncAddressAvailable","syncAllAddress","setDefaultChain","rpcUrl","checkStorage","sessionInfoStr","getFromStore","createProviders","registerEventListeners","SignClient","providersToCreate","Set","parseNamespaceKey","namespacesValue","currentNameSpace","opts1","solanaProvider","sonicProvider","svmProvider","optsTon","tonProvider","optsSui","suiProvider","SuiProvider","optsBtc","btcProvider","fbProvider","aptosProvider","moveProvider","cosmosProvider","tronProvider","PROVIDER_EVENTS","DEFAULT_CHAIN_CHANGED","caip2ChainId","onChainChanged","UPDATE_NAMESPACES","nameSpaces","nameSpacekey","persist","icon","isChainNamespaceInSession","chainsArr","defaultNamespace","getDefaultChain","namespaceStr","requestDefaultChainWithNamespace","caip2Chain","sessionProperties","showRequestModal","OKXUniversalProvider_1","OKXBtcProvider_1","OKXCosmosProvider_1","OKXTonProvider_1","OKXTronProvider_1","ConnectMethodUtils_1","metaData","requestAccountItem","nameSpaceToConnectWalletNameSpace","SESSION_CONNECTING","connectMethodsToConnectWalletMethods","metadata","fillParamsToSession","connectMethodsResponseUpdate","openOKXWallet","allAddressStr","syncResoonseToRequire","connectSupportMethods","connectMethodsAdaptOldVersion","bs58_1","uint8array_extras_1","isArray","isRecord","notSupportError","errorItem","callBackParams","solAccount","account1","solAddress","fromAccountToAddress","realMessage","stringToUint8Array","suiMessage","convertedArray","b64encoded","atob","btcAccounts","account2","btcAccount","btcAddress","paramData","aptosAccount","account3","aptosAddress","fullMessage","application","aptosChainId","cosmosAccount","account_cosmos","cosmosAddress","cosmosData","cosmosBase64Encoded","stringToBase64","methodItem","solanaSuccessData","suiMethod","requestMethod","suiMessageb64","aptosSignature","requireNameSpace","includeEip155","some","space","syncAddressHostAvailable","includeChain","paramsArr","firstParam","firstObj","aptosParams","currentURL","signChainId","applicationUrl","cosmosChain","responseAddressStr","allAddress","isEvm","deriveName","addr","ci","evmAddress","freeze","getAccountsChains","isCaipNamespace","mergeRpcMap","targetRpcMap","sourceRpcMap","mergeNamespaces","source","rpcMap","GENERIC_SUBPROVIDER_NAME","RPC_URL","STORAGE","CONTEXT","WC_VERSION","PROTOCOL","RELAY_URL","LOGGER","JsonRpcConnection_1","JsonRpcProvider_1","AptosProvider","httpProviders","createHttpProviders","updateNamespace","getAccounts","setHttpProvider","http","parsedChainId","getChainId","parsedRpc","getRpcUrl","httpProvider","createHttpProvider","getHttpProvider","rpc","JsonRpcProvider","JsonRpcConnection","getGlobal","BtcProvider","CosmosProvider","updateRequestParams","isDic","switchChainId","decimalNumber","selectedChainId","chainNum","paramsChainId","paramsChainString","adaptArray","addressObj","isEqual","chainAddress","messages","typedDataJson","secondObj","hexChainId","getHexChainIdFromRequest","isChainApproved","handleSwitchChain","addEthereumChain","resultData","rpcUrls","core_2","disableProviderPing","isAvailable","registering","register","parseError","types_1","IJSONRpcProvider","connection","hasRegisteredEventListeners","setConnection","context","requestStrict","_error","SolanaProvider","getPubkey","getWalletAddress","components","__rest","s","t","getOwnPropertySymbols","propertyIsEnumerable","TONProvider","validUntil","newParams","fromAddress","boc","TronProvider","IJSONRpcConnection","opt","globals","convertChainIdToNumber","parseChainId","mergeArrays","projectId","reference","CAIP_DELIMITER","b","okxGlobal","_createElementBlock","_hoisted_1","_createVNode","_component_el_container","_withCtx","_component_el_header","_cache","_createTextVNode","_component_el_main","_component_el_card","class","_createElementVNode","style","_component_el_row","_component_el_col","span","_toDisplayString","$options","_ctx","_component_el_checkbox","modelValue","withUI","$event","onChange","handleWithUI","universalToTG","handleUniversalToTG","_component_el_select","modals","placeholder","handleModalsSelect","multiple","_component_el_option","label","returnStrategy","handleReturnStrategySelect","_Fragment","_renderList","returnStrategies","strategy","_createBlock","_component_el_input","deeplink","handleReturnStrategyDeeplink","disabled","_createCommentVNode","handleLanguageSelect","locales","locale","theme","handleThemeSelect","THEME","LIGHT","DARK","selectedMethod","handleConnectMethodsSelect","connectMethods","tonProofValue","gutter","align","availableChains","checked","areChainsInit","isOptionalChecked","handleOptionChange","_component_el_button","onClick","initBtnClicked","connectInitStr","connectBtnClicked","connectStatusStr","syncAllAddressClick","syncAllAddressStr","disconnectAction","walletAddress","disconnectStatusStr","_Teleport","showModal","closeModal","_withModifiers","_component_qrcode_vue","qrValue","level","_component_el_tabs","activeTab","onTabClick","clickActiveTab","_component_el_tab_pane","eth_requestAccounts","eth_chainId","wallet_switchEthereumChain","wallet_addEthereumChain","personal_sign","eth_signTypedData_v4","eth_sendTransaction_transfer","eth_sendTransaction_approve","eth_sendTransaction_mint","wallet_watchAsset","ton_getAccount","ton_sendTransaction","sol_signMessage","sol_signTransaction","sol_signVersionedTransaction","sol_signAllTransactions","sol_signAllVersionedTransactions","sol_signAndSendTransaction","sol_signAndSendVersionedTransaction","_component_SuiPanel","onGenerateTransactionParams","sui_generateTransactionParams","_component_BTCPanel","btc_generateTransactionParams","_component_FractalPanel","fractal_generateTransactionParams","_component_TronTransactionPanel","tron_generateTransactionParams","onGenerateTransactionResult","tron_getTransactionResult","aptos_signMessage","aptos_signTransaction","aptos_signAndSubmitTransaction","cosmos_signArbitrary","cosmos_signAmino","cosmos_signDirect","wallet_testRpc","eth_sendTransaction_swap","move_signTransaction","move_signAndSubmitTransaction","testBase64UrlSafe","xs","sm","handleRedirectSelect","canChainAddRedirectParam","redirectDeeplink","handleRedirectDeeplink","addRedirectParam","testTransaction","rows","testboc","testTransactionStr","btc_signMessage","$setup","sendAmount","clearable","btc_send","sendSatoshisAmount","btc_sendBitcoin","btc_signPsbt_up","btc_signAndPushPsbt_up","receiver","btc_sendInscription","props","setup","ref","$emit","alert","autoFinalized","__exports__","fractal_signMessage","fractal_send","fractal_sendBitcoin","fractal_signPsbt_up","fractal_signAndPushPsbt_up","fractal_sendInscription","sui_getAccount","sui_signMessage","sui_signPersonalMessage","sui_signTransaction2","sui_signAndExecuteTransaction","sui_requestRpc","sui_signTransaction_pre_execution","sui_signAndExecuteTransaction_pre_execution","recipientAddress","tx","SuiTransaction","coin","splitCoins","transferObjects","transactionBlock","showEffects","txBytes","txSerialize","generateTsBytesAndSerizlize","resultTuple","senderAccounts","getFullnodeUrl","suiClient","SuiClient","setSender","build","Buffer","currentSuiTransaction","currentSuiMethod","tron_signMessage","tron_signMessageV2","tron_signTransaction","tron_signAndSendTransactionContract","tron_signAndSendTransactionApprove","tronWeb","TronWeb","trx","verifyMessage","base58Address","verifyMessageV2","isOnlySign","transactionBuilder","sendTrx","getContract","contractAddress","abi","entrys","parameter","triggerSmartContract","verifyADR36Amino","fromBech32","VConsole","allChains","chainsThatCanAddRedirectParam","optionChains","selectedModals","selectedReturnStrategy","selectedDeepLink","selectedLanguage","selectedTheme","TronTransactionPanel","QrcodeVue","BTCPanel","FractalPanel","SuiPanel","testTopic","testPublicKey","testProofPayload","pendingDeepLink","logList","connectReady","localPubKey","localSecKey","selectedChain","ProofPayloadVerify","showVerifyRow","has","selectedMethodData","isChecked","reload","add","computed","selectedChains","initChains","newChains","updatedChains","tab","tabName","initCall","OKXUniversalConnectUI","actionsConfiguration","uiPreferences","onModalStateChange","entries","uri","isPC","items","testTonSdk","blockExplorerUrls","chainName","nativeCurrency","symbol","decimals","dataETH","dataPolygon","types","EIP712Domain","Person","Mail","primaryType","domain","verifyingContract","contents","maxPriorityFeePerGas","maxFeePerGas","gasPrice","gasLimit","image","tonUniversalLog","sendTransactionAlert","fetch","confirm","sendData","adapter","SuiAdapter","suiResult","signAndExecuteTransaction","sui_verifySignature","signPersonalMessage","btcAdapter","btcResult","currentBtcMethod","currentBtcTransaction","hexToBase64","bs64Str","fractalResult","currentFractalMethod","currentFractalTransaction","hexStr","blob","Blob","reader","FileReader","onload","base64Data","readAsDataURL","datatest","firstStr","showUrl","hasEip155","hasSolana","hasSui","hasBtc","hasAptos","hasTon","hasCosmos","nameSpacesChains","optSpaceChains","solanaChains","hasTron","suiChains","btcChains","connectMethod","connectData","requireData","solana","cosmos","tron","tonParams","ton","sui","btc","optData","signMethods","getCurrentSelectedMethodData","openModalAndSign","openModal","methodList","suiData","currentMethod","userAgentInfo","Agents","flag","isSafariOrChrome","pubkey","OKXSolanaProvider","result1","nacl","PublicKey","toBytes","OKXAptosProvider","config","AptosConfig","Network","Aptos","simple","sender","function","typeArguments","functionArguments","signAndSubmitTransaction","Connection","getSolConnect","blockhash","getLatestBlockhash","versionedTransactionMessage","TransactionMessage","payerKey","recentBlockhash","instructions","SystemProgram","transfer","fromPubkey","toPubkey","lamports","compileToV0Message","VersionedTransaction","signAllTransactions","Transaction","feePayer","isValid","cosmos_verifySignArbitrary","pub_key","signer","prefixStr","signatureBuffer","uint8Signature","pubKeyValueBuffer","pubKeyUint8Array","uiOptions","eth_verifyMessage","ethAddress","originalMessage","recoveredAddress","ethers","list","verifyList","requestItme","ethMessage","solanaMessage","verifySol","aptosMessage","aptosPublicKey","cosmosMessage","tronMessage","signatureResult","resultObj","verifyPersonalMessageSignature","toSuiAddress","toBase64","newTransaction","c","created","mounted","scriptTag","createElement","src","getElementsByTagName","appendChild","title","render","app","createApp","App","use","ElementPlus","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","loaded","__webpack_modules__","amdO","deferred","O","chunkIds","priority","notFulfilled","Infinity","j","every","r","n","getter","d","definition","g","globalThis","Function","prop","Symbol","toStringTag","nmd","paths","children","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}