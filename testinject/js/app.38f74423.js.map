{"version":3,"file":"js/app.38f74423.js","mappings":"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","sources":["webpack://okxconnectdemo/../packages/aptos-provider/src/AptosUtils.js","webpack://okxconnectdemo/../packages/aptos-provider/src/OKXAptosProvider.js","webpack://okxconnectdemo/../packages/aptos-provider/src/index.js","webpack://okxconnectdemo/../packages/core/src/connect/commands.js","webpack://okxconnectdemo/../packages/core/src/connect/connect.js","webpack://okxconnectdemo/../packages/core/src/connect/connectionManager.js","webpack://okxconnectdemo/../packages/core/src/connect/constants.js","webpack://okxconnectdemo/../packages/core/src/connect/engine.js","webpack://okxconnectdemo/../packages/core/src/connect/index.js","webpack://okxconnectdemo/../packages/core/src/connect/jwt.js","webpack://okxconnectdemo/../packages/core/src/connect/jwtconstants.js","webpack://okxconnectdemo/../packages/core/src/connect/sessionUtils.js","webpack://okxconnectdemo/../packages/core/src/connect/storage.js","webpack://okxconnectdemo/../packages/core/src/connect/storageconstants.js","webpack://okxconnectdemo/../packages/core/src/connect/walletConnectionConstants.js","webpack://okxconnectdemo/../packages/core/src/connect/walletConnectionManager.js","webpack://okxconnectdemo/../packages/core/src/connector/appwallet-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/iconnector.js","webpack://okxconnectdemo/../packages/core/src/connector/index.js","webpack://okxconnectdemo/../packages/core/src/connector/inject-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/okxwallet-inject-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/tgwallet-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/ws-connector.js","webpack://okxconnectdemo/../packages/core/src/crypto/crypto.js","webpack://okxconnectdemo/../packages/core/src/index.js","webpack://okxconnectdemo/../packages/core/src/inject/InjectUtils.js","webpack://okxconnectdemo/../packages/core/src/inject/index.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/AptosPrivider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/SolProvider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/eip155Provider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/chains.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/engine.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/json-rpc.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/connect-event.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/connect-wallet.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/wallet-info.js","webpack://okxconnectdemo/../packages/core/src/protocol/constants.js","webpack://okxconnectdemo/../packages/core/src/protocol/error/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/error/okx-connect.error.js","webpack://okxconnectdemo/../packages/core/src/protocol/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/misc.js","webpack://okxconnectdemo/../packages/core/src/utils/call-for-success.js","webpack://okxconnectdemo/../packages/core/src/utils/index.js","webpack://okxconnectdemo/../packages/core/src/utils/log.js","webpack://okxconnectdemo/../packages/core/src/utils/media.js","webpack://okxconnectdemo/../packages/core/src/utils/report.js","webpack://okxconnectdemo/../packages/core/src/utils/reportconstants.js","webpack://okxconnectdemo/../packages/core/src/utils/request.js","webpack://okxconnectdemo/../packages/core/src/utils/safejson.js","webpack://okxconnectdemo/../packages/core/src/utils/stringUtils.js","webpack://okxconnectdemo/../packages/core/src/utils/tma-api.js","webpack://okxconnectdemo/../packages/core/src/utils/url.js","webpack://okxconnectdemo/../packages/core/src/utils/utils.js","webpack://okxconnectdemo/../packages/core/src/utils/web-api.js","webpack://okxconnectdemo/../packages/solana-provider/src/OKXSolanaProvider.js","webpack://okxconnectdemo/../packages/solana-provider/src/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXBtcProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXCosmosProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXTonProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXTronProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXUniversalProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/sign-client/client.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/ConnectMethodUtils.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/namespaces.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/events.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/values.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/aptos.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/btc.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/cosmos.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/eip155.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcConnection.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/solana.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/sui.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/ton.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/tron.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/misc.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/providers.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/globals.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/misc.js","webpack://okxconnectdemo/./src/App.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue?1b44","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue?e4fb","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue?aa83","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue?089a","webpack://okxconnectdemo/./src/App.vue?7ccd","webpack://okxconnectdemo/./src/main.js","webpack://okxconnectdemo/webpack/bootstrap","webpack://okxconnectdemo/webpack/runtime/amd options","webpack://okxconnectdemo/webpack/runtime/chunk loaded","webpack://okxconnectdemo/webpack/runtime/compat get default export","webpack://okxconnectdemo/webpack/runtime/define property getters","webpack://okxconnectdemo/webpack/runtime/global","webpack://okxconnectdemo/webpack/runtime/hasOwnProperty shorthand","webpack://okxconnectdemo/webpack/runtime/make namespace object","webpack://okxconnectdemo/webpack/runtime/node module decorator","webpack://okxconnectdemo/webpack/runtime/jsonp chunk loading","webpack://okxconnectdemo/webpack/startup"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AptosUtils = void 0;\nclass AptosUtils {\n    static getTransaction(o) {\n        if (\"rawTransaction\" in o) {\n            let transaction = o;\n            if (\"entryFunction\" in transaction.rawTransaction.payload) {\n                let entryFunction = transaction.rawTransaction.payload.entryFunction;\n                let typeArgs = entryFunction.type_args;\n                let typeArguments = new Array();\n                typeArgs.forEach(typeTag => {\n                    typeArguments.push(typeTag.toString());\n                });\n                let realArguments = new Array();\n                this.getTypeArguments(entryFunction.args, realArguments);\n                let i = {\n                    arguments: realArguments,\n                    function: `${entryFunction.module_name.address.data ? entryFunction.module_name.address.toString() : entryFunction.module_name.address}::${entryFunction.module_name.name.identifier ? entryFunction.module_name.name.identifier : entryFunction.module_name.name}::${entryFunction.function_name.identifier ? entryFunction.function_name.identifier : entryFunction.function_name}`,\n                    type: \"entry_function_payload\",\n                    type_arguments: typeArguments\n                };\n                return this.getArguments(i);\n            }\n        }\n        return o;\n    }\n    static getTypeArguments(args, array) {\n        for (let j = 0; j < args.length; j++) {\n            let y = args[j];\n            if (\"values\" in y && y.values != null && y.values instanceof Array) {\n                let subArray = new Array();\n                array.push(subArray);\n                this.getTypeArguments(y.values, subArray);\n            }\n            else {\n                this.dealArrayElements(y, array);\n            }\n        }\n    }\n    static dealArrayElements(e, array) {\n        if (\"value\" in e && e.value != null) {\n            array.push(e.value.toString());\n        }\n        else if (\"data\" in e && e.data != null && e.data instanceof Uint8Array) {\n            return array.push(e.toString());\n        }\n        else {\n            return array.push(e.toString());\n        }\n    }\n    static getArguments(e) {\n        if (\"arguments\" in e) {\n            let t = e.arguments;\n            if (Array.isArray(t)) {\n                let r = new Array();\n                t.forEach(n => {\n                    if (n instanceof Uint8Array) {\n                        let o = new Array();\n                        n.forEach(i => {\n                            o.push(i);\n                        });\n                        r.push(o);\n                    }\n                    else\n                        r.push(n);\n                });\n                e = Object.assign(Object.assign({}, e), { arguments: r });\n            }\n        }\n        return e;\n    }\n}\nexports.AptosUtils = AptosUtils;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXAptosProvider = void 0;\nconst buffer_1 = require(\"buffer\");\nconst AptosUtils_1 = require(\"./AptosUtils\");\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXAptosProvider {\n    constructor(provider) {\n        this.chainsSet = new Set();\n        this.provider = provider;\n        this.getConnectedNamespace();\n    }\n    get defaultNetwork() {\n        let network = this.provider.requestDefaultChainWithNamespace(core_1.NameSpaceKeyAptos);\n        return network;\n    }\n    get currentChainId() {\n        return `aptos:${this.defaultNetwork}`;\n    }\n    getRealChainId(chainId) {\n        // if (chainId == \"aptos:mainnet\") {\n        //     return \"aptos:637\"\n        // } else if (chainId == \"movement:testnet\") {\n        //     return \"aptos:70000060\"\n        // }\n        if (chainId == null) {\n            if (this.chainsSet.size == 1) {\n                return this.currentChainId;\n            }\n            else {\n                throw new Error(\"connected to multiple aptos chains,chainId can not be null\");\n            }\n        }\n        else {\n            return chainId;\n        }\n    }\n    getConnectedNamespace() {\n        var _a, _b, _c;\n        (_c = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces) === null || _b === void 0 ? void 0 : _b['aptos']) === null || _c === void 0 ? void 0 : _c.chains.forEach(chain => {\n            this.chainsSet.add(chain);\n        });\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n        chainId = this.getRealChainId(chainId);\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['aptos']) === null || _b === void 0 ? void 0 : _b.accounts[0];\n        if (chainId != null) {\n            account = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces['aptos']) === null || _d === void 0 ? void 0 : _d.accounts.filter(function (account) {\n                return account.startsWith(chainId);\n            })[0];\n        }\n        (0, core_1.logDebug)(\"getAccount\", account);\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        console.log(\"aptos_publicKey\", (_f = (_e = this.provider.session) === null || _e === void 0 ? void 0 : _e.namespaces['aptos']) === null || _f === void 0 ? void 0 : _f.extra);\n        let extra = (_j = (_h = (_g = this.provider.session) === null || _g === void 0 ? void 0 : _g.namespaces['aptos']) === null || _h === void 0 ? void 0 : _h.extra) === null || _j === void 0 ? void 0 : _j[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n            if (publicKey != undefined && publicKey.startsWith(\"0x\")) {\n                publicKey = publicKey.substring(2);\n            }\n            console.log(\"aptos_publicKey\", publicKey);\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address,\n            publicKey: publicKey\n        };\n    }\n    signMessage(payload, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            let realChain = this.getRealChainId(chainId);\n            try {\n                let prefix = \"APTOS\";\n                let address = (_a = this.getAccount(realChain)) === null || _a === void 0 ? void 0 : _a.address;\n                let message = \"\", nonce = \"\";\n                var fullMessage = prefix;\n                let application = window.location.protocol + \"//\" + window.location.hostname;\n                if (\"address\" in payload && payload.address) {\n                    fullMessage += \"\\naddress: \" + address;\n                }\n                if (\"application\" in payload && payload.application) {\n                    fullMessage += \"\\napplication: \" + application;\n                }\n                if (\"chainId\" in payload && payload.chainId) {\n                    let chainId = 1;\n                    if (realChain == \"aptos:mainnet\") {\n                        chainId = 1;\n                    }\n                    else if (realChain == \"movement:testnet\") {\n                        chainId = 2;\n                    }\n                    fullMessage += \"\\nchainId: \" + chainId;\n                }\n                if (\"message\" in payload) {\n                    fullMessage += \"\\nmessage: \" + payload.message;\n                    message = payload.message;\n                }\n                if (\"nonce\" in payload) {\n                    fullMessage += \"\\nnonce: \" + payload.nonce;\n                    nonce = payload.nonce;\n                }\n                console.log(\"signMessage\", fullMessage);\n                const buffer = buffer_1.Buffer.from(fullMessage);\n                const hex = this.bufferToHex(buffer);\n                let data = {\n                    \"chainId\": realChain,\n                    \"method\": \"aptos_signMessage\",\n                    \"params\": {\n                        \"message\": hex,\n                    },\n                    injectParams: payload,\n                };\n                let signedMessage = yield this.provider.request(data, realChain);\n                if ('result' in signedMessage) {\n                    let successData = signedMessage.result;\n                    let signStr = successData;\n                    if (successData.startsWith(\"0x\")) {\n                        signStr = successData.slice(2, successData.length);\n                    }\n                    // try {\n                    //     let publicKey = this.getAccount(realChain)?.publicKey\n                    //     if (publicKey != undefined) {\n                    //         console.log(\"apt_signMessage\", Buffer.from(successData, 'hex'))\n                    //         console.log(\"apt_signMessage\", successData)\n                    //\n                    //         const verified = nacl.sign.detached.verify(\n                    //             Buffer.from(fullMessage),\n                    //             Buffer.from(signStr, 'hex'),\n                    //             Buffer.from(publicKey, 'hex'),\n                    //         );\n                    //         console.log(\"signMessage\", verified);\n                    //     }\n                    // } catch (_) {\n                    // }\n                    return new Promise((resolve, reject) => {\n                        resolve({\n                            address: address,\n                            application: application,\n                            chainId: realChain,\n                            fullMessage: fullMessage,\n                            message: message,\n                            nonce: nonce,\n                            prefix: prefix,\n                            signature: signStr,\n                            // verified:verified\n                        });\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        if (\"error\" in signedMessage) {\n                            resolve(signedMessage.error);\n                        }\n                    });\n                }\n            }\n            catch (error) {\n                console.error('方法数据回调失败 --Error--', error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    signTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let tx = AptosUtils_1.AptosUtils.getTransaction(transaction);\n            console.log(\"signTransaction\", tx);\n            let realChain = this.getRealChainId(chainId);\n            try {\n                let signature = yield this.provider.request({\n                    \"method\": \"aptos_signTransaction\",\n                    \"params\": tx\n                }, realChain);\n                if ('result' in signature) {\n                    let successData = signature.result;\n                    return new Promise((resolve, reject) => {\n                        resolve(buffer_1.Buffer.from(successData));\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        reject(signature);\n                    });\n                }\n            }\n            catch (error) {\n                (0, core_1.logDebug)(\"getSignedTransaction\", error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    signAndSubmitTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let tx = AptosUtils_1.AptosUtils.getTransaction(transaction);\n            console.log(\"signAndSubmitTransaction\", tx);\n            let realChain = this.getRealChainId(chainId);\n            try {\n                let signature = yield this.provider.request({\n                    \"method\": \"aptos_signAndSubmitTransaction\",\n                    \"params\": tx\n                }, realChain);\n                if ('result' in signature) {\n                    let successData = signature.result;\n                    return new Promise((resolve, reject) => {\n                        resolve(successData);\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        reject(signature);\n                    });\n                }\n            }\n            catch (error) {\n                (0, core_1.logDebug)(\"getSignedTransaction\", error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    bufferToHex(buf) {\n        return \"0x\" + buffer_1.Buffer.from(buf).toString(\"hex\");\n    }\n}\nexports.OKXAptosProvider = OKXAptosProvider;\nexports.default = OKXAptosProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXAptosProvider = void 0;\nvar OKXAptosProvider_1 = require(\"./OKXAptosProvider\");\nObject.defineProperty(exports, \"OKXAptosProvider\", { enumerable: true, get: function () { return OKXAptosProvider_1.OKXAptosProvider; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_METHOD_BATCH_FETCHMSG = exports.CONNECT_METHOD_FETCHMSG = exports.CONNECT_METHOD_RECEIVE = exports.CONNECT_METHOD_UNSUB = exports.CONNECT_METHOD_SUB = exports.CONNECT_METHOD_PUBLISH = exports.CONNECT_METHOD_LOGIN = exports.CONNECT_METHOD_PUSH = void 0;\n// --------------- ws methods -------------\nexports.CONNECT_METHOD_PUSH = \"push\";\nexports.CONNECT_METHOD_LOGIN = \"login\";\nexports.CONNECT_METHOD_PUBLISH = \"publish\";\nexports.CONNECT_METHOD_SUB = \"subscribe\";\nexports.CONNECT_METHOD_UNSUB = \"unsubscribe\";\nexports.CONNECT_METHOD_RECEIVE = \"receive\";\nexports.CONNECT_METHOD_FETCHMSG = \"fetchMessages\";\nexports.CONNECT_METHOD_BATCH_FETCHMSG = \"batchFetchMessages\";\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXWalletConnector = void 0;\nconst constants_1 = require(\"./constants\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils\");\nconst utils_2 = require(\"../utils/utils\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst log = __importStar(require(\"../utils/log\"));\nconst protocol_1 = require(\"../protocol\");\nconst WS = (0, utils_2.resolveWebSocketImplementation)();\nclass OKXWalletConnector {\n    constructor(url) {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.state = constants_1.ConnectorState.InitState;\n        this.selectedUrlIndex = 0;\n        // reconnect\n        this.retryCount = 0;\n        // default timeout limit: 8 sec\n        this.timeOutLimit = 8000;\n        if (!(0, utils_2.checkWSUrl)(url)) {\n            throw new Error(`CONNECTOR: invalid url ${url}`);\n        }\n        this.url = url;\n        this.heartbeatTimer = null;\n        this.connectionTimeoutTimer = null;\n        this.connectURLStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY + storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n    }\n    get connecting() {\n        return this.state == constants_1.ConnectorState.Connecting;\n    }\n    // ------------------------------------------------------\n    onPayload(e) {\n        if (typeof e.data === \"undefined\")\n            return;\n        log.logDebug('get received data');\n        log.logDebug(e);\n        if (typeof e.data === \"string\") {\n            let rsp = e.data;\n            if (rsp === \"pong\") {\n                log.logDebug(`CONNECT: receive pong ${Date.now().toString()}`);\n                return;\n            }\n        }\n        this.events.emit(\"payload\", e.data);\n    }\n    onClose(event) {\n        var _a;\n        log.logDebug('socket get closed: ', (_a = this.socket) === null || _a === void 0 ? void 0 : _a.url, event.code);\n        this.socket = undefined;\n        this.events.emit(\"close\", event);\n    }\n    onError(id, e) {\n        const payload = { id: id, msg: e.toString() };\n        this.events.emit(\"payload\", payload);\n    }\n    onopen(socket) {\n        socket.onmessage = (event) => this.onPayload(event);\n        socket.onclose = (event) => this.onClose(event);\n        this.socket = socket;\n        this.state = constants_1.ConnectorState.Connected;\n        this.events.emit(\"open\");\n    }\n    // ------------------------------------------------------\n    emitError(errorEvent) {\n        this.events.emit(\"fail\", errorEvent);\n    }\n    // ------------------------------------------------------\n    heartbeat() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.heartbeatTimer) {\n                clearTimeout(this.heartbeatTimer);\n            }\n            if (this.state != constants_1.ConnectorState.Connected && this.state != constants_1.ConnectorState.OnError) {\n                log.logDebug('heart beat close');\n                return;\n            }\n            if (!this.socket) {\n                log.logDebug('socket not exist');\n                if (this.state == constants_1.ConnectorState.Connected || this.state == constants_1.ConnectorState.OnError) {\n                    log.logDebug('socket reconnect by heartbeat');\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                        this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n                    }\n                }\n                return;\n            }\n            if (this.socket.readyState !== WebSocket.OPEN) {\n                log.logDebug('socket not ready');\n                if (this.state == constants_1.ConnectorState.Connected || this.state == constants_1.ConnectorState.OnError) {\n                    log.logDebug('socket reconnect by heartbeat with state', this.state, this.socket.readyState);\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                        this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n                    }\n                }\n                return;\n            }\n            log.logDebug(`send ping heart beat: ${Date.now().toString()}, ${this.socket}`);\n            this.socket.send(\"ping\");\n            this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n        });\n    }\n    registOpen(url = this.url, inRetry = false) {\n        if (!(0, utils_2.checkWSUrl)(url)) {\n            throw new Error(`CONNECTOR: invalid url ${url}`);\n        }\n        this.url = url;\n        if (!inRetry) {\n            log.logDebug('Connection connect:', this.url, new Date().toUTCString());\n        }\n        this.state = constants_1.ConnectorState.Connecting;\n        const origin = new URLSearchParams(url).get(\"origin\");\n        return new Promise((resolve, reject) => {\n            const socket = new WS(url, []);\n            log.logDebug('Connection connect Begin:', this.url, new Date().toUTCString());\n            this.startTimeOutTimer(socket);\n            if ((0, utils_2.hasBuiltInWebSocket)()) {\n                log.logDebug('Add socket error handler');\n                socket.onerror = () => {\n                    reject(new Error('socket error'));\n                    socket.close();\n                };\n            }\n            else {\n                log.logDebug('Add socket error handler');\n                socket.on(\"error\", () => {\n                    reject(new Error('socket error'));\n                    socket.close();\n                });\n            }\n            socket.onopen = () => {\n                log.logDebug('socket opened');\n                this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.FINISHED);\n                this.onopen(socket);\n                this.heartbeat();\n                resolve(socket);\n            };\n        });\n    }\n    checkMaxRetry() {\n        log.logDebug('current retry count:', this.retryCount, 'of', constants_1.OKXCONNECTOR_WS_URL_LIST.length);\n        return this.retryCount > constants_1.OKXCONNECTOR_WS_URL_LIST.length;\n    }\n    connectionTryNext() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.checkMaxRetry()) {\n                //TODO: mark descent\n                this.retryCount += 1;\n                let nextUrl = this.getNextSelectUrl();\n                log.logDebug('Connection retry:', nextUrl, new Date().toUTCString());\n                return this.registOpen(nextUrl, true);\n            }\n            else {\n                log.logDebug('Max Connection retry ', this.retryCount, new Date().toUTCString());\n            }\n        });\n    }\n    startTimeOutTimer(socket) {\n        if (this.connectionTimeoutTimer) {\n            this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.CANCELED);\n        }\n        this.pendingSocket = socket;\n        this.connectionTimeoutTimer = setTimeout(() => {\n            if (this.pendingSocket) {\n                this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.TIME_OUT);\n            }\n        }, this.timeOutLimit);\n    }\n    resetTimeOutTimer(code) {\n        var _a;\n        // 1. cancel connecting pending sockets\n        if (code != constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.FINISHED) {\n            (_a = this.pendingSocket) === null || _a === void 0 ? void 0 : _a.close(code);\n        }\n        this.pendingSocket = undefined;\n        // 2. remove timer\n        clearTimeout(this.connectionTimeoutTimer);\n    }\n    cacheSuccessUrlSelect() {\n        this.connectURLStorage.saveContent(this.selectedUrlIndex.toString(), storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n    }\n    // private getSuccessUrlSelect(): string {\n    //     let selectIndex = this.connectURLStorage.getItem(OKXCONNECTOR_CACHE_KEY)?.content\n    //     let index = 0\n    //     if (selectIndex) {\n    //         index = Number(selectIndex)\n    //     }\n    //     this.selectedUrlIndex = index\n    //     return OKXCONNECTOR_WS_URL_LIST[index]\n    // }\n    getNextSelectUrl() {\n        this.selectedUrlIndex += 1;\n        this.selectedUrlIndex = this.selectedUrlIndex % constants_1.OKXCONNECTOR_WS_URL_LIST.length;\n        return constants_1.OKXCONNECTOR_WS_URL_LIST[this.selectedUrlIndex];\n    }\n    // ------------------------------------------------------\n    onVisibleChanged() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (document.visibilityState === 'visible') {\n                // check and restore\n                log.logDebug(`get changed ${this.state}, ${this.socket}`);\n                if (this.state == constants_1.ConnectorState.Connected && typeof this.socket === \"undefined\") {\n                    log.logDebug('CONNECTION need reopen');\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                    }\n                    return;\n                }\n            }\n        });\n    }\n    tryRegistOpen() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            if (this.connecting) {\n                log.logDebug('tryRegistOpen => connecting state');\n                return new Promise((resolve, reject) => {\n                    this.events.once('fail', (e) => {\n                        log.logDebug('tryRegistOpen => connecting fail listener', e);\n                        return reject(e);\n                    });\n                    this.events.once(\"open\", () => {\n                        if (typeof this.socket == \"undefined\") {\n                            return reject(new Error(\"Connect lost\"));\n                        }\n                        return resolve(this.socket);\n                    });\n                });\n            }\n            log.logDebug('tryRegistOpen => try registOpen until retry limit is hit');\n            let inRetry = false;\n            while (!this.checkMaxRetry() && !this.socket) {\n                try {\n                    log.logDebug('tryRegistOpen => call registOpen, try count:', this.retryCount, inRetry);\n                    yield this.registOpen(url, inRetry);\n                }\n                catch (err) {\n                    log.logDebug('tryRegistOpen => registOpen failed', err);\n                    this.retryCount += 1;\n                    url = this.getNextSelectUrl();\n                    inRetry = true;\n                }\n            }\n            log.logDebug('tryRegistOpen => exit while loop', this.retryCount, this.socket);\n            if (!this.socket && this.checkMaxRetry()) {\n                log.logDebug('tryRegistOpen => failed to open a socket', this.retryCount, this.socket);\n                this.retryCount = 0;\n                this.state = constants_1.ConnectorState.OnError;\n                this.emitError(new Error('tryRegistOpen failed'));\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CONNECTION_ERROR, \"Failed to connect\");\n            }\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this.tryRegistOpen();\n                // listener for reconnect\n                document.removeEventListener('visibilitychange', this.onVisibleChanged.bind(this));\n                document.addEventListener('visibilitychange', this.onVisibleChanged.bind(this));\n            }\n            catch (e) {\n                log.logDebug('connect => failed to connect', e);\n                throw e;\n            }\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.state = constants_1.ConnectorState.Disconnected;\n            return new Promise((resolve, reject) => {\n                if (typeof this.socket === \"undefined\") {\n                    // reject(new Error(\"CONNECTION closed\"))\n                    resolve();\n                    return;\n                }\n                this.socket.onclose = (event) => {\n                    this.onClose(event);\n                    resolve();\n                };\n                this.socket.close();\n                if (this.heartbeatTimer) {\n                    clearTimeout(this.heartbeatTimer);\n                }\n            });\n        });\n    }\n    currentStatus() {\n        return {\n            state: this.state,\n            url: this.url\n        };\n    }\n    // event will be jsonstr\n    /// @params Promise\n    /// @params success/failed callback\n    addListener(event, decrypt, success, failed) {\n        if (this.listenPayloadHandler) {\n            this.events.removeListener(\"payload\", this.listenPayloadHandler);\n        }\n        this.listenPayloadHandler = (e) => {\n            var _a;\n            log.logDebug(`<<< get payload ${e}`);\n            let parsedEvent = (0, utils_1.safeJsonParse)(e);\n            // parse the data to chose success or failed\n            if (parsedEvent.params && parsedEvent.params.data) {\n                let rawMsg = (_a = parsedEvent.params.data) === null || _a === void 0 ? void 0 : _a.message;\n                if (rawMsg) {\n                    try {\n                        let msg = decrypt(rawMsg);\n                        if (msg === undefined) {\n                            log.logDebug(`CONNECT: decrypt undefined`);\n                            failed(event, 'Decrypt undefined');\n                        }\n                        else {\n                            success(event, msg);\n                        }\n                    }\n                    catch (e) {\n                        log.logDebug(`CONNECT: decrypt failed: ${e}`);\n                        failed(event, e.message);\n                    }\n                }\n            }\n        };\n        this.events.on(\"payload\", this.listenPayloadHandler);\n        if (this.failHandler) {\n            this.events.removeListener(\"fail\", this.failHandler);\n        }\n        this.failHandler = (e) => {\n            if (e) {\n                log.logDebug(`CONNECT failed: ${e}`);\n                failed(event, e.message);\n            }\n            else {\n                failed(event, \"Unkonow error\");\n            }\n        };\n        this.events.on(\"fail\", this.failHandler);\n    }\n    addPackageParse(callback) {\n        if (this.payloadHandler) {\n            this.events.removeListener(\"payload\", this.payloadHandler);\n        }\n        this.payloadHandler = (e) => __awaiter(this, void 0, void 0, function* () {\n            // parse the data to chose success or failed\n            log.logDebug(`CONNECTION @[${new Date().toUTCString()}] <<<< received e:${e}`);\n            let param = (0, utils_1.safeJsonParse)(e);\n            yield callback(param);\n        });\n        this.events.on(\"payload\", this.payloadHandler);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    send(doLogin, payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (typeof this.socket === \"undefined\") {\n                    log.logDebug(`>>> send payload undefined ${payload}`);\n                    // this.socket = await this.registOpen();\n                    yield doLogin();\n                }\n                log.logDebug(`CONNECTION @[${new Date().toUTCString()}]>>> send payload ${(0, utils_1.safeJsonStringify)(payload)}`);\n                if (this.socket) {\n                    this.socket.send((0, utils_1.safeJsonStringify)(payload));\n                }\n            }\n            catch (e) {\n                this.onError(payload.id, e);\n            }\n        });\n    }\n    getMsgPayloadFromHistory(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof msg === \"undefined\")\n                return;\n            let tmpMsg = {\n                params: {\n                    data: msg\n                }\n            };\n            let jsonstr = (0, utils_1.safeJsonStringify)(msg);\n            log.logDebug('get received data from history');\n            log.logDebug(jsonstr);\n            jsonstr = (0, utils_1.safeJsonStringify)(tmpMsg);\n            this.events.emit(\"payload\", jsonstr);\n        });\n    }\n    onOpen(callback) {\n        if (this.openHandler) {\n            this.events.removeListener(\"open\", this.openHandler);\n        }\n        this.openHandler = () => __awaiter(this, void 0, void 0, function* () {\n            log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> ws opened: `);\n            yield callback();\n        });\n        this.events.on(\"open\", this.openHandler);\n        this.cacheSuccessUrlSelect();\n    }\n}\nexports.OKXWalletConnector = OKXWalletConnector;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionManager = void 0;\nconst connect_1 = require(\"./connect\");\nconst commands_1 = require(\"./commands\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst jwtconstants_1 = require(\"./jwtconstants\");\nconst constants_1 = require(\"./constants\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils/utils\");\nconst crypto_1 = require(\"../crypto/crypto\");\nconst jwt_1 = require(\"./jwt\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst report_1 = require(\"../utils/report\");\nconst url_1 = require(\"../utils/url\");\nclass ConnectionManager {\n    constructor(appname = undefined) {\n        this.events = new eventemitter3_1.EventEmitter();\n        // local storage\n        this.connectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY_DAPP + appname, storageconstants_1.OKXCONNECTOR_CACHE_KEY_DAPP);\n        this.crypto = new crypto_1.SessionCrypto();\n        let inTMA = (0, url_1.isInTMA)();\n        (0, log_1.logDebug)('do init:', inTMA);\n        log.reportLog('connection manager do init');\n        if (inTMA) {\n            // recovery from cache\n            const keyPairInfo = this.getCachedCryptoKeyPair();\n            (0, log_1.logDebug)('use same pk:', keyPairInfo);\n            this.crypto = new crypto_1.SessionCrypto(keyPairInfo);\n        }\n        this.jwtKeyPair = this.getCachedJWTKeyPair();\n        this.saveJWTKeyPair(this.jwtKeyPair);\n        // wss connection\n        this.connector = new connect_1.OKXWalletConnector(constants_1.OKXCONNECTOR_WS_URL_1);\n        this.packageId = Date.now();\n        // connection state\n        this.connectedWalletPK = '';\n        this.currentTopic = '';\n        log.logDebug(`this.connectedWalletPK  constructor   ${this.connectedWalletPK}`);\n    }\n    refreshPackageId() {\n        this.packageId = Date.now();\n    }\n    saveCryptoKeyPair(keyPair) {\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(keyPair);\n        // encrypt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_CRYPTO_KEY);\n    }\n    getCachedCryptoKeyPair() {\n        // decrypt kp\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_CRYPTO_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            log.logDebug('get cached crypto key:');\n            log.logDebug(content);\n            let keyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            return keyPairInfo;\n        }\n        else {\n            this.connectStorage.clearCache();\n        }\n        return null;\n    }\n    saveJWTKeyPair(keyPair) {\n        var strkeyPair = {\n            publicKey: (0, utils_1.toHexString)(keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(keyPair.secretKey)\n        };\n        log.logDebug('save jwt kp');\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(strkeyPair);\n        log.logDebug(cacheInfo);\n        // encrypt jwt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_JWT_KEY);\n    }\n    getCachedJWTKeyPair() {\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            // TODO: decrypt jwt kp\n            log.logDebug('get cached jwt kp:');\n            log.logDebug(content);\n            let strKeyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            log.logDebug('save jwt kp');\n            log.logDebug(strKeyPairInfo);\n            var keyPair = {\n                publicKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.publicKey),\n                secretKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.secretKey)\n            };\n            return keyPair;\n        }\n        else {\n            return (0, jwt_1.generateKeyPair)();\n        }\n    }\n    isWalletPKReady() {\n        log.logDebug(`isWalletPKReady  ===> ${this.connectedWalletPK}`);\n        return this.connectedWalletPK.length > 0;\n    }\n    makeJWT(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, jwt_1.signJWT)(topic, jwtconstants_1.OKXCONNECTOR_JWT_SIDE, jwtconstants_1.OKXCONNECTOR_JWT_TTL, // 24h\n            this.jwtKeyPair);\n        });\n    }\n    parsePackage(input_1) {\n        return __awaiter(this, arguments, void 0, function* (input, ignoreACK = false) {\n            var _a, _b, _c, _d, _e;\n            this.events.emit(input.id, input);\n            // send back ACK\n            if (!ignoreACK) {\n                yield this.sendACK(input.id, true);\n                let topic = (_a = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE)) === null || _a === void 0 ? void 0 : _a.content;\n                if (topic) {\n                    let inputObj = input;\n                    if ((_c = (_b = inputObj.params) === null || _b === void 0 ? void 0 : _b.data) === null || _c === void 0 ? void 0 : _c.messageId) {\n                        this.refreshPackageId();\n                        yield this.sendReceive(this.packageId.toString(), (_e = (_d = inputObj.params) === null || _d === void 0 ? void 0 : _d.data) === null || _e === void 0 ? void 0 : _e.messageId, topic);\n                    }\n                }\n            }\n        });\n    }\n    restoreConnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.reportLog('connection manager restore connection');\n            log.logDebug(`connectionManager  restoreConenct   ${topic}`);\n            if ((typeof topic !== 'string') || topic.length === 0) {\n                throw new Error('CONNECTION: invalid topic');\n            }\n            log.logDebug(`connectionManager  restoreConenct   disconnect`);\n            yield this.disconnect(true);\n            this.connectStorage.saveContent(topic, storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`connectionManager  restoreConenct   conect`);\n            yield this.connect(true);\n        });\n    }\n    getConnectInfo() {\n        var topic = (0, utils_1.generateTopic)();\n        log.logDebug(`generate topic token: ${topic}`);\n        log.reportLog('connection manager generate connection info');\n        this.currentTopic = topic;\n        const info = {\n            channelId: topic,\n            clientId: this.crypto.stringifyKeypair().publicKey,\n        };\n        return info;\n    }\n    connect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            this.timeLog = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---enter->\", this.timeLog);\n            log.reportLog('connection manager begin connect');\n            let lastConnectId = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            //1. generate topic & jwt\n            var topic = this.currentTopic;\n            log.logDebug(`generate topic token: ${topic}`);\n            // crypto keypair\n            if (fromRestore) {\n                if (typeof lastConnectId !== 'undefined' && lastConnectId !== null) {\n                    log.logDebug(`read last connect id: ${lastConnectId}`);\n                    topic = lastConnectId.content;\n                }\n                var cachedSenderPublicKey = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                if (cachedSenderPublicKey) {\n                    this.connectedWalletPK = cachedSenderPublicKey.content;\n                    (0, log_1.logDebug)(`connectionManager connect() this.connectedWalletPK : ${this.connectedWalletPK}`);\n                }\n                log.reportLog('connection manager do restore connection');\n            }\n            if (fromRestore) {\n                // recovery from cache\n                const keyPairInfo = this.getCachedCryptoKeyPair();\n                if (keyPairInfo) {\n                    this.crypto = new crypto_1.SessionCrypto(keyPairInfo);\n                }\n            }\n            log.logDebug(`use crypto client id: ${this.crypto.stringifyKeypair().publicKey}`);\n            // cache topic\n            this.connectStorage.saveContent(topic, storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            var jwtToken = yield this.makeJWT(topic);\n            log.logDebug(`generate jwt token: ${jwtToken}`);\n            this.connectStorage.saveContent(jwtToken, 'jwt');\n            return new Promise((resolve, reject) => {\n                // 1. when websocket opened\n                this.connector.onOpen(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug(`1. connector on open`);\n                    log.reportLog('1. connect ws open');\n                    const timeOne = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---open->\", timeOne - this.timeLog);\n                    //2. send jwt to login\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when login');\n                            log.reportLog('2. connect login failed');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // throw error\n                            reject(error);\n                        }\n                        //3. send subscribe\n                        this.refreshPackageId();\n                        this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                            // ack\n                            if (rsp && rsp.error) {\n                                log.logError('failed when subscribe');\n                                log.reportLog('3. connect subscribe failed');\n                                yield this.connector.disconnect();\n                                var error = new Error();\n                                error.message = rsp.error.message;\n                                error.name = rsp.error.code.toString();\n                                // throw error\n                                reject(error);\n                            }\n                            this.refreshPackageId();\n                            log.logDebug(`4. subscribe callback then send fetch: ${this.packageId}`);\n                            log.reportLog('4. subscribe callback then send fetch');\n                            const timeF = new Date().getTime();\n                            (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n                            // 4. fetch messages\n                            yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                            resolve();\n                        }));\n                        log.logDebug(`3. login callback then send subscribe: ${this.packageId}`);\n                        log.reportLog('3. connect subscribe failed');\n                        const timeTh = new Date().getTime();\n                        (0, log_1.logDebug)(\"ConnectTime---login callback->\", timeTh - this.timeLog);\n                        yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                            log.logDebug('CONNECT: reconnect before send');\n                            yield this.connector.connect()\n                                .catch((err) => {\n                                (0, log_1.logDebug)('ConnectionManager connect error', err);\n                                reject(err);\n                            });\n                        }), {\n                            id: this.packageId.toString(),\n                            jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                            method: commands_1.CONNECT_METHOD_SUB,\n                            params: {\n                                topic: topic\n                            }\n                        });\n                    }));\n                    log.logDebug(`2. login called`);\n                    log.reportLog('2. connection manager connect call login');\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        yield this.connector.connect()\n                            .catch((err) => {\n                            (0, log_1.logDebug)('ConnectionManager connect error', err);\n                            reject(err);\n                        });\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_LOGIN,\n                        params: {\n                            token: jwtToken\n                        }\n                    });\n                    // 4. listen when dapp back to front, receive wallet public key\n                    this.connector.addPackageParse((event) => {\n                        var _a;\n                        log.logDebug(`connect: parse package`);\n                        log.logDebug(event);\n                        if (!(\"params\" in event) || !(\"data\" in event[\"params\"])) {\n                            this.parsePackage(event, true);\n                            return;\n                        }\n                        let rawMsg = (_a = event.params.data) === null || _a === void 0 ? void 0 : _a.message;\n                        if (typeof rawMsg !== 'undefined') {\n                            rawMsg = rawMsg.replace(/'/g, '\"');\n                            let parsedMessage = (0, safejson_1.safeJsonParse)(rawMsg);\n                            if (typeof parsedMessage !== 'string' && \"clientId\" in parsedMessage && parsedMessage.clientId && parsedMessage.clientId.length > 0) {\n                                this.connectedWalletPK = parsedMessage.clientId;\n                                log.logDebug(`this.connectedWalletPK  addPackageParse   ${this.connectedWalletPK}`);\n                                // exchange sender public key\n                                // cache wallet public key\n                                this.connectStorage.saveContent(this.connectedWalletPK, storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                                // cache crypto keypair\n                                this.saveCryptoKeyPair(this.crypto.stringifyKeypair());\n                            }\n                        }\n                        // ignore receive echo\n                        this.parsePackage(event, event.method === commands_1.CONNECT_METHOD_RECEIVE);\n                    });\n                }));\n                this.connector.connect().catch((err) => {\n                    (0, log_1.logDebug)('ConnectionManager connect error', err);\n                    reject(err);\n                });\n            });\n        });\n    }\n    disconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            yield this.connector.disconnect();\n            log.reportLog('connect disconnect');\n            //clean cached topic\n            //如果是恢复连接，就不清理解密public key\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            if (!fromRestore) {\n                this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                this.connectedWalletPK = '';\n                (0, log_1.logDebug)(`connectionManager disconnect() this.connectedWalletPK : ${this.connectedWalletPK}`);\n            }\n        });\n    }\n    addListener(event, success, fail) {\n        this.connector.addListener((0, safejson_1.safeJsonStringify)(event), (rawMsg) => {\n            rawMsg = rawMsg.replace(/'/g, '\"');\n            log.logDebug(`addListener ===> ${rawMsg}`);\n            if (typeof rawMsg !== 'undefined') {\n                var msgObj = (0, safejson_1.safeJsonParse)(rawMsg);\n                var msg = msgObj.message;\n                let result;\n                if (msg.trimStart().startsWith('{')) {\n                    result = msg;\n                }\n                else {\n                    if (msgObj.clientId && msgObj.clientId.length > 0) {\n                        this.connectedWalletPK = msgObj.clientId;\n                        this.connectStorage.saveContent(this.connectedWalletPK, storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                        log.logDebug(`this.connectedWalletPK  addListener   ${this.connectedWalletPK}`);\n                        log.logDebug(`this.cryptoKey  addListener   ${(0, utils_1.toHexString)(this.crypto.keyPair.publicKey)}`);\n                        // cache crypto keypair\n                        this.saveCryptoKeyPair(this.crypto.stringifyKeypair());\n                    }\n                    result = this.crypto.decrypt(msg, this.connectedWalletPK);\n                }\n                log.logDebug(`addListener ===> ${result}`);\n                return result;\n            }\n            return undefined;\n        }, success, fail);\n    }\n    sendRaw(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.logDebug(`message send =====> ${msg}`);\n            log.reportLog('connect send raw msg');\n            let message = msg;\n            log.logDebug(`message send =====encrypt message.length>>>> ${message.length}`);\n            // only one topic\n            let topic = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`message send =====topic>>>> ${topic === null || topic === void 0 ? void 0 : topic.content}`);\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                method: commands_1.CONNECT_METHOD_PUBLISH,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                params: {\n                    message: {\n                        topic: topic === null || topic === void 0 ? void 0 : topic.content,\n                        message: message,\n                        ttl: constants_1.OKXCONNECTOR_MESSAGE_TTL\n                    }\n                } // crypted\n            };\n            this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                // ack\n                if (rsp && rsp.error) {\n                    log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                }\n                else if (rsp && !rsp.error) {\n                    log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                }\n            }));\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n            return this.packageId;\n        });\n    }\n    send(msg_1) {\n        return __awaiter(this, arguments, void 0, function* (msg, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL) {\n            // make send msg payload\n            log.logDebug(`message send =====> ${msg}`);\n            log.reportLog('connect send msg');\n            if (!this.isWalletPKReady()) {\n                // channel not ready\n                throw new Error('connection not finish');\n            }\n            let message = this.crypto.encrypt(msg, this.connectedWalletPK);\n            log.logDebug(`message send =====encrypt message.length>>>> ${message.length}`);\n            log.reportEvent(report_1.OKXReportType.LOG, 'msg_size', message.length.toString());\n            // only one topic\n            let topic = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`message send =====topic>>>> ${topic === null || topic === void 0 ? void 0 : topic.content}`);\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                method: commands_1.CONNECT_METHOD_PUBLISH,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                params: {\n                    message: {\n                        topic: topic === null || topic === void 0 ? void 0 : topic.content,\n                        message: message,\n                        ttl: ttl\n                    }\n                } // crypted\n            };\n            this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                // ack\n                if (rsp && rsp.error) {\n                    log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                }\n                else if (rsp && !rsp.error) {\n                    log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                }\n            }));\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n            return this.packageId;\n        });\n    }\n    sendACK(msgId_1, success_1) {\n        return __awaiter(this, arguments, void 0, function* (msgId, success, reason = undefined) {\n            if (success === true) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    result: true\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n            else if (reason) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    error: {\n                        code: reason.code, //int\n                        message: reason.message\n                    }\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    // send receive\n    sendReceive(msgId, messageId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECEIVE,\n                params: {\n                    data: {\n                        messageId: messageId,\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendConnectSessionInfo(msgId, messageId, topic, params) {\n        return __awaiter(this, void 0, void 0, function* () {\n        });\n    }\n    // send receive\n    // 1. fetch all \n    // 2. send back receive\n    // 3. check has more, if so, repeat from 1st step\n    sendFetchAndConsumeMessages(msgId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(msgId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic == topic) {\n                                let messageId = msg.messageId;\n                                log.reportLog('5. get fetch result');\n                                yield this.connector.getMsgPayloadFromHistory(msg);\n                                // send receive command to relay server\n                                this.refreshPackageId();\n                                yield this.sendReceive(this.packageId.toString(), messageId, topic);\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            log.reportLog('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_FETCHMSG,\n                params: {\n                    data: {\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    cleanCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.reportLog('connection cache clean called');\n            this.connectStorage.clearCache();\n        });\n    }\n    saveSessionContent(key, data) {\n        if (!data) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(data);\n        this.connectStorage.encryptStoreMsg(jsonData, storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n    }\n    getSessionContent(key) {\n        let jsonStr = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        if (jsonStr) {\n            let object = (0, safejson_1.safeJsonParse)(jsonStr);\n            return object;\n        }\n        return undefined;\n    }\n    getCurrentConnectionReady() {\n        return this.isWalletPKReady();\n    }\n}\nexports.ConnectionManager = ConnectionManager;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectorState = exports.CONNECT_JSONRPC_VER = exports.OKXCONNECTOR_MESSAGE_TTL = exports.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE = exports.OKXCONNECTOR_WS_URL_LIST = exports.OKXCONNECTOR_WS_URL_IDX_KEY = exports.OKXCONNECTOR_WS_URL_3 = exports.OKXCONNECTOR_WS_URL_2 = exports.OKXCONNECTOR_WS_URL_1 = exports.EVENT_EMITTER_MAX_LISTENERS = void 0;\nexports.EVENT_EMITTER_MAX_LISTENERS = 10;\nexports.OKXCONNECTOR_WS_URL_1 = \"wss://wsdexpri.okx.com/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_2 = \"wss://wsdexpri.okx.ac/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_3 = \"wss://wsdexpri.coinall.ltd/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_IDX_KEY = \"wuik\";\nexports.OKXCONNECTOR_WS_URL_LIST = [\n    exports.OKXCONNECTOR_WS_URL_1,\n    exports.OKXCONNECTOR_WS_URL_2,\n    exports.OKXCONNECTOR_WS_URL_3,\n];\nexports.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE = {\n    TIME_OUT: 3990,\n    CANCELED: 3991,\n    FINISHED: 3992,\n};\nexports.OKXCONNECTOR_MESSAGE_TTL = 300000;\n// --------------- JSON RPC ---------------\nexports.CONNECT_JSONRPC_VER = \"2.0\";\nexports.ConnectorState = {\n    InitState: 0,\n    Connecting: 1,\n    Connected: 2,\n    Disconnected: 3,\n    OnError: 4,\n};\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Engine = void 0;\nconst protocol_1 = require(\"../protocol\");\nconst utils_1 = require(\"../utils\");\nconst iconnector_1 = require(\"../connector/iconnector\");\nconst ws_connector_1 = require(\"../connector/ws-connector\");\nconst connectionManager_1 = require(\"./connectionManager\");\nconst sessionUtils_1 = require(\"./sessionUtils\");\nconst connector_1 = require(\"../connector\");\nconst wallet_info_1 = require(\"../protocol/connect/wallet-info\");\nclass Engine {\n    constructor(appName) {\n        this.connectors = [];\n        this.useConnector = undefined;\n        this.connectionManager = new connectionManager_1.ConnectionManager(appName);\n    }\n    isInject() {\n        return this.getConnector() instanceof connector_1.InjectConnector;\n    }\n    getConnector() {\n        if (this.useConnector) {\n            return this.useConnector;\n        }\n    }\n    registerConnector(connectors) {\n        this.connectors = connectors;\n        for (const connector of connectors) {\n            if (connector instanceof ws_connector_1.WsConnector) {\n                connector.setConnectionManager(this.connectionManager);\n            }\n        }\n    }\n    hasWsConnector() {\n        for (const connector of this.connectors) {\n            if (connector instanceof ws_connector_1.WsConnector) {\n                return true;\n            }\n        }\n        return false;\n    }\n    universalConnect(request, sessionConfig, connectInfoAndUrl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b, _c, _d, _e;\n                try {\n                    (0, utils_1.logDebug)(\"engine universalConnect request :\", JSON.stringify(request));\n                    (0, utils_1.logDebug)(\"engine universalConnect sessionConfig :\", JSON.stringify(sessionConfig));\n                    let tonRequest = [];\n                    let universalRequest = [];\n                    request.forEach((item) => {\n                        let name = item.name;\n                        if (name.startsWith(\"requestAccounts\")) {\n                            universalRequest.push(item);\n                        }\n                        else if (name.startsWith(\"ton\")) {\n                            tonRequest.push(item);\n                        }\n                    });\n                    (0, utils_1.logDebug)(\"engine universalConnect tonRequest :\", JSON.stringify(tonRequest));\n                    (0, utils_1.logDebug)(\"engine universalConnect universalRequest :\", JSON.stringify(universalRequest));\n                    const connectInfo = this.connectionManager.getConnectInfo();\n                    const requestId = Date.now().toString();\n                    let openUniversalLink = (_a = sessionConfig.openUniversalUrl) !== null && _a !== void 0 ? _a : false;\n                    const universalConnectRequest = {\n                        protocolVer: Number(protocol_1.tonConnectSdkVersion),\n                        topic: connectInfo.channelId,\n                        clientId: connectInfo.clientId,\n                        requestId: requestId,\n                        dAppInfo: sessionConfig.dappInfo,\n                        requests: universalRequest,\n                        redirect: (_b = sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect) !== null && _b !== void 0 ? _b : \"none\"\n                    };\n                    const universalConnectRequestbase64Encoded = (0, utils_1.encodeConnectParams)(universalConnectRequest);\n                    universalConnectRequest.redirect = (_c = sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect) !== null && _c !== void 0 ? _c : \"none\";\n                    const tonConnectRequest = {\n                        protocolVer: Number(protocol_1.tonConnectSdkVersion),\n                        topic: connectInfo.channelId,\n                        clientId: connectInfo.clientId,\n                        requestId: requestId,\n                        dAppInfo: sessionConfig.dappInfo,\n                        requests: tonRequest,\n                        redirect: (_d = sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect) !== null && _d !== void 0 ? _d : \"none\"\n                    };\n                    let isFromTonSDK = false;\n                    if (tonRequest.length > 0) { //from tonsdk\n                        isFromTonSDK = true;\n                    }\n                    let defaultConnectRequest = isFromTonSDK ? tonConnectRequest : universalConnectRequest;\n                    (0, utils_1.logDebug)('engine universalConnect ==>>defaultConnectRequest:', isFromTonSDK, JSON.stringify(defaultConnectRequest));\n                    var openOKXLink = \"\";\n                    // open app wallet\n                    if (openUniversalLink) {\n                        openOKXLink = (0, utils_1.getOKXLink)(defaultConnectRequest, sessionConfig.useMini, sessionConfig.tmaReturnUrl);\n                        (0, utils_1.logDebug)('engine universalConnect ==>>openOKXLink:', openOKXLink);\n                    }\n                    const openMethod = () => {\n                        if (this.connectors.length == 1 && this.connectors[0] instanceof connector_1.OkxwalletInjectConnector) {\n                            return this.connectors[0].openWallet({\n                                connectRequest: universalConnectRequest\n                            });\n                        }\n                        else {\n                            if (sessionConfig.useMini) {\n                                return (0, utils_1.openOKXTMAWalletlinkWithFallback)(openOKXLink);\n                            }\n                            if ((0, utils_1.useShortLink)()) {\n                                return (0, utils_1.openOKXUniversalLink)(openOKXLink);\n                            }\n                            return (0, utils_1.openOKXDeeplinkWithFallback)(openOKXLink);\n                        }\n                    };\n                    (0, utils_1.logDebug)('engine universalConnect ==>>openOKXLink:', openOKXLink);\n                    const isIOS = (0, utils_1.isIos)();\n                    if (isIOS && openUniversalLink) {\n                        (0, utils_1.logDebug)(`engine universalConnect ==>>isIOS: ${isIOS}   openUniversalLink: ${openUniversalLink}`);\n                        openMethod();\n                    }\n                    this.addOnConnectResultListener((response, connector) => {\n                        var _a, _b, _c;\n                        try {\n                            let connectResponse = response;\n                            if (connectResponse.method == \"connect\") {\n                                (0, utils_1.logDebug)(\"engin  universalConnect success connectResponse:>>>\", JSON.stringify(connectResponse));\n                                let namespaces = (0, sessionUtils_1.buildNameSpacesByConnectResponse)(connectResponse);\n                                if (namespaces) {\n                                    let walletName = undefined;\n                                    if (((_b = (_a = connectResponse.payload) === null || _a === void 0 ? void 0 : _a.responses) === null || _b === void 0 ? void 0 : _b[0]) && \"walletName\" in connectResponse.payload.responses[0]) {\n                                        walletName = connectResponse.payload.responses[0]['walletName'];\n                                    }\n                                    let session = Object.assign({ topic: connectInfo.channelId, sessionConfig: sessionConfig, namespaces: namespaces }, (connectResponse.payload && {\n                                        wallet: Object.assign(Object.assign({}, connectResponse.payload.wallet), { walletName: walletName })\n                                    }));\n                                    let methodsResponse = connectResponse.payload.responses.find(item => item.name === 'requestAccounts');\n                                    if (methodsResponse && methodsResponse.connectRequestMethods) {\n                                        session.signResponse = methodsResponse.connectRequestMethods;\n                                    }\n                                    (0, utils_1.logDebug)(\"engin  universalConnect success session:>>>\", JSON.stringify(session));\n                                    resolve(session);\n                                    this.useConnector = connector;\n                                }\n                                else {\n                                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n                                }\n                            }\n                            else if (connectResponse.method == \"connect_error\" && ((_c = connectResponse.payload) === null || _c === void 0 ? void 0 : _c.code)) {\n                                throw new protocol_1.OKXConnectError(connectResponse.payload.code);\n                            }\n                        }\n                        catch (e) {\n                            reject(e);\n                        }\n                    });\n                    if (this.hasWsConnector()) {\n                        yield ((_e = this.connectionManager) === null || _e === void 0 ? void 0 : _e.disconnect(false));\n                        try {\n                            yield this.connectionManager.connect();\n                        }\n                        catch (e) {\n                            (0, utils_1.logDebug)('Engine universalConnect error', e);\n                            throw e;\n                        }\n                        (0, utils_1.logDebug)('engin  universalConnect ==>> connectInfoAndUrl:', connectInfoAndUrl);\n                        this.sendSession(universalConnectRequestbase64Encoded);\n                    }\n                    if (!isIOS && openUniversalLink) {\n                        openMethod();\n                    }\n                    if (connectInfoAndUrl) {\n                        const info = {\n                            connectRequest: universalConnectRequest,\n                            redirect: sessionConfig.redirect,\n                            tmaReturnUrl: sessionConfig.tmaReturnUrl,\n                        };\n                        if (isFromTonSDK) {\n                            info.tonConnectRequest = tonConnectRequest;\n                        }\n                        (0, utils_1.logDebug)(\"universalConnect connectInfoAndUrl info :\", JSON.stringify(info));\n                        connectInfoAndUrl(info);\n                    }\n                }\n                catch (error) {\n                    (0, utils_1.logDebug)(\"Engine universalConnect catch error\", error);\n                    reject(error);\n                }\n            }));\n        });\n    }\n    addOnConnectResultListener(connectResultListener) {\n        for (const connector of this.connectors) {\n            connector.setOnConnectResultListener(connectResultListener);\n        }\n    }\n    openWallet(engineConnectInfo, connector) {\n        var _a;\n        if (connector) {\n            connector.openWallet(engineConnectInfo);\n        }\n        else {\n            (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.openWallet(engineConnectInfo);\n        }\n    }\n    send(request, requestAnswer, ttl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            return (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.send(request, requestAnswer, ttl);\n        });\n    }\n    clearData() {\n        var _a;\n        (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.clearData();\n    }\n    addDisconnectListener(disconnecter) {\n        var _a;\n        (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.addDisconnectListener(disconnecter);\n    }\n    saveSessionContent(key, data) {\n        this.connectionManager.saveSessionContent(key, data);\n    }\n    getSessionContent(key) {\n        var _a;\n        var session = this.connectionManager.getSessionContent(key);\n        if (session) {\n            var tag = \"\";\n            if (typeof session === \"object\") {\n                tag = this.getTagByappName((_a = session.wallet) === null || _a === void 0 ? void 0 : _a.appName);\n            }\n            if (this.connectors.find((connector) => {\n                return connector.getTag() === tag;\n            })) {\n                return session;\n            }\n        }\n        return undefined;\n    }\n    getTagByappName(appName) {\n        var tag = '';\n        if (appName) {\n            switch (appName) {\n                case wallet_info_1.OKXWalletName:\n                    tag = iconnector_1.OKX_APP_WALLET;\n                    break;\n                case wallet_info_1.OKXMiniWalletName:\n                    tag = iconnector_1.OKX_TG_WALLET;\n                    break;\n                case wallet_info_1.OKXInjectWalletName:\n                    tag = iconnector_1.OKX_INJECT_WALLET;\n            }\n        }\n        return tag;\n    }\n    setConnectConnector(wallet) {\n        var tag = this.getTagByappName(wallet === null || wallet === void 0 ? void 0 : wallet.appName);\n        if (!tag)\n            return;\n        this.useConnector = this.connectors.find((connector) => {\n            return connector.getTag() === tag;\n        });\n    }\n    // for es connect\n    setSessionConnectingListener(sessionConnectingListener) {\n        if (this.getConnector() instanceof ws_connector_1.WsConnector) {\n            this.getConnector().setSessionConnectingListener(sessionConnectingListener);\n        }\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.restoreconnect(sessionInfo, onConnectResult));\n        });\n    }\n    restoreconnectFromTopic(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.getConnector() instanceof ws_connector_1.WsConnector) {\n                yield this.getConnector().restoreconnectFromTopic(topic);\n            }\n        });\n    }\n    getCurrentConnectionReady(namespaceKeys) {\n        var _a;\n        return !!((_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.getCurrentConnectionReady(namespaceKeys));\n    }\n    connectManagerDisconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            var _a;\n            yield ((_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.connectManagerDisconnect(fromRestore));\n        });\n    }\n    sendSession(sessionInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, utils_1.logDebug)('[Connect] sendSession called:', sessionInfo);\n            const requestId = Date.now().toString();\n            let request = {\n                method: 'session_info',\n                params: { sessionInfo: sessionInfo }\n            };\n            yield this.connectionManager.sendRaw(JSON.stringify(Object.assign(Object.assign({}, request), { requestId: requestId })));\n        });\n    }\n}\nexports.Engine = Engine;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Storage = exports.Engine = exports.WalletConnectionManager = exports.ConnectionManager = exports.OKXWalletConnector = void 0;\nvar connect_1 = require(\"./connect\");\nObject.defineProperty(exports, \"OKXWalletConnector\", { enumerable: true, get: function () { return connect_1.OKXWalletConnector; } });\nvar connectionManager_1 = require(\"./connectionManager\");\nObject.defineProperty(exports, \"ConnectionManager\", { enumerable: true, get: function () { return connectionManager_1.ConnectionManager; } });\nvar walletConnectionManager_1 = require(\"./walletConnectionManager\");\nObject.defineProperty(exports, \"WalletConnectionManager\", { enumerable: true, get: function () { return walletConnectionManager_1.WalletConnectionManager; } });\nvar engine_1 = require(\"./engine\");\nObject.defineProperty(exports, \"Engine\", { enumerable: true, get: function () { return engine_1.Engine; } });\nvar storage_1 = require(\"./storage\");\nObject.defineProperty(exports, \"Storage\", { enumerable: true, get: function () { return storage_1.Storage; } });\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MULTICODEC_ED25519_LENGTH = exports.MULTICODEC_ED25519_HEADER = exports.MULTICODEC_ED25519_BASE = exports.MULTICODEC_ED25519_ENCODING = exports.DID_METHOD = exports.DID_PREFIX = exports.DID_DELIMITER = exports.KEY_PAIR_SEED_LENGTH = exports.DATA_ENCODING = exports.JSON_ENCODING = exports.JWT_ENCODING = exports.JWT_DELIMITER = exports.JWT_IRIDIUM_TYP = exports.JWT_IRIDIUM_ALG = exports.JWTHeaderType = void 0;\nexports.generateKeyPair = generateKeyPair;\nexports.decodeJSON = decodeJSON;\nexports.encodeJSON = encodeJSON;\nexports.encodeIss = encodeIss;\nexports.decodeIss = decodeIss;\nexports.encodeSig = encodeSig;\nexports.decodeSig = decodeSig;\nexports.encodeData = encodeData;\nexports.decodeData = decodeData;\nexports.encodeJWT = encodeJWT;\nexports.decodeJWT = decodeJWT;\nexports.signJWT = signJWT;\nexports.verifyJWT = verifyJWT;\nconst ed25519 = __importStar(require(\"@stablelib/ed25519\"));\nconst safejson_1 = require(\"../utils/safejson\");\nconst utils_1 = require(\"../utils/utils\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst log = __importStar(require(\"../utils/log\"));\nconst stringUtils_1 = require(\"../utils/stringUtils\");\nexports.JWTHeaderType = \"dapp\";\nexports.JWT_IRIDIUM_ALG = \"EdDSA\";\nexports.JWT_IRIDIUM_TYP = \"JWT\";\nexports.JWT_DELIMITER = \".\";\nexports.JWT_ENCODING = \"base64url\";\nexports.JSON_ENCODING = \"utf8\";\nexports.DATA_ENCODING = \"utf8\";\nexports.KEY_PAIR_SEED_LENGTH = 32;\nexports.DID_DELIMITER = \":\";\nexports.DID_PREFIX = \"did\";\nexports.DID_METHOD = \"key\";\nexports.MULTICODEC_ED25519_ENCODING = \"base58btc\";\nexports.MULTICODEC_ED25519_BASE = \"z\";\nexports.MULTICODEC_ED25519_HEADER = \"K36\";\nexports.MULTICODEC_ED25519_LENGTH = 32;\nfunction generateKeyPair() {\n    // let local_seed = randomBytes(KEY_PAIR_SEED_LENGTH)\n    // return ed25519.generateKeyPairFromSeed(local_seed);\n    return tweetnacl_1.default.sign.keyPair();\n}\nfunction decodeJSON(str) {\n    return (0, safejson_1.safeJsonParse)((0, stringUtils_1.okxtoString)((0, stringUtils_1.okxfromString)(str, exports.JWT_ENCODING), exports.JSON_ENCODING));\n}\nfunction encodeJSON(val) {\n    return (0, stringUtils_1.okxtoString)((0, stringUtils_1.okxfromString)((0, safejson_1.safeJsonStringify)(val), exports.JSON_ENCODING), exports.JWT_ENCODING);\n}\nfunction encodeIss(publicKey) {\n    log.logDebug(`publicKey: ${(0, utils_1.toHexString)(publicKey)}`);\n    var publicKeyStr = (0, stringUtils_1.okxtoString)(publicKey, exports.MULTICODEC_ED25519_ENCODING);\n    return [exports.DID_PREFIX, exports.DID_METHOD, publicKeyStr].join(exports.DID_DELIMITER);\n}\nfunction decodeIss(issuer) {\n    const [prefix, method, multicodec] = issuer.split(exports.DID_DELIMITER);\n    if (prefix !== exports.DID_PREFIX || method !== exports.DID_METHOD) {\n        throw new Error(`Issuer must be a DID with method \"key\"`);\n    }\n    if (multicodec === undefined) {\n        throw new Error('multicodec is undefined');\n    }\n    const publicKey = (0, stringUtils_1.okxfromString)(multicodec, exports.MULTICODEC_ED25519_ENCODING);\n    if (publicKey === undefined || publicKey.length !== exports.MULTICODEC_ED25519_LENGTH) {\n        throw new Error(`Issuer must be a public key with length 32 bytes`);\n    }\n    return publicKey;\n}\n// ---------- Signature ----------------------------------------------- //\nfunction encodeSig(bytes) {\n    return (0, stringUtils_1.okxtoString)(bytes, exports.JWT_ENCODING);\n}\nfunction decodeSig(encoded) {\n    return (0, stringUtils_1.okxfromString)(encoded, exports.JWT_ENCODING);\n}\n// ---------- Data ----------------------------------------------- //\nfunction encodeData(params) {\n    return (0, stringUtils_1.okxfromString)([encodeJSON(params.header), encodeJSON(params.payload)].join(exports.JWT_DELIMITER), exports.DATA_ENCODING);\n}\nfunction decodeData(data) {\n    var _a, _b;\n    const params = (0, stringUtils_1.okxtoString)(data, exports.DATA_ENCODING).split(exports.JWT_DELIMITER);\n    const header = decodeJSON((_a = params[0]) !== null && _a !== void 0 ? _a : '{}');\n    const payload = decodeJSON((_b = params[1]) !== null && _b !== void 0 ? _b : '{}');\n    return { header, payload };\n}\n// ---------- JWT ----------------------------------------------- //\nfunction encodeJWT(params) {\n    return [encodeJSON(params.header), encodeJSON(params.payload), encodeSig(params.signature)].join(exports.JWT_DELIMITER);\n}\nfunction decodeJWT(jwt) {\n    var _a, _b, _c;\n    const params = jwt.split(exports.JWT_DELIMITER);\n    const header = decodeJSON((_a = params[0]) !== null && _a !== void 0 ? _a : '{}');\n    const payload = decodeJSON((_b = params[1]) !== null && _b !== void 0 ? _b : '{}');\n    const signature = decodeSig((_c = params[2]) !== null && _c !== void 0 ? _c : '{}');\n    const data = (0, stringUtils_1.okxfromString)(params.slice(0, 2).join(exports.JWT_DELIMITER), exports.DATA_ENCODING);\n    return { header, payload, signature, data };\n}\nfunction signJWT(sub_1, aud_1, ttl_1, keyPair_1) {\n    return __awaiter(this, arguments, void 0, function* (sub, aud, ttl, keyPair, iat = Math.floor(Date.now())) {\n        const header = { alg: exports.JWT_IRIDIUM_ALG, typ: exports.JWT_IRIDIUM_TYP };\n        const iss = encodeIss(keyPair.publicKey);\n        const exp = iat + ttl;\n        const act = \"authenticate user\";\n        const payload = { iss, sub, aud, act, iat, exp };\n        const data = encodeData({ header, payload });\n        // const signature = ed25519.sign(keyPair.secretKey, data);\n        log.logDebug(`get sec kp: ${keyPair.secretKey} {${keyPair.secretKey.length}}`);\n        const signature = tweetnacl_1.default.sign.detached(data, keyPair.secretKey);\n        return encodeJWT({ header, payload, signature });\n    });\n}\nfunction verifyJWT(jwt) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { header, payload, data, signature } = decodeJWT(jwt);\n        if (header.alg !== exports.JWT_IRIDIUM_ALG || header.typ !== exports.JWT_IRIDIUM_TYP) {\n            throw new Error(\"JWT must use EdDSA algorithm\");\n        }\n        const publicKey = decodeIss(payload.iss);\n        return ed25519.verify(publicKey, data, signature);\n    });\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCONNECTOR_JWT_TTL = exports.OKXCONNECTOR_JWT_WALLET_SIDE = exports.OKXCONNECTOR_JWT_SIDE = void 0;\nexports.OKXCONNECTOR_JWT_SIDE = \"wallet\";\nexports.OKXCONNECTOR_JWT_WALLET_SIDE = \"dapp\";\nexports.OKXCONNECTOR_JWT_TTL = 86400000;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.buildNameSpacesByConnectResponse = buildNameSpacesByConnectResponse;\nexports.buildRequestAccountNameSpacesByConnectResponse = buildRequestAccountNameSpacesByConnectResponse;\nconst log_1 = require(\"../utils/log\");\nfunction buildNameSpacesByConnectResponse(connectResponse) {\n    let requestAccountNameSpaces = buildRequestAccountNameSpacesByConnectResponse(connectResponse);\n    return requestAccountNameSpaces;\n}\nfunction buildRequestAccountNameSpacesByConnectResponse(connectResponse) {\n    let result = {};\n    (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start connectResponse>>', JSON.stringify(connectResponse));\n    let universalResponse = connectResponse.payload.responses.find(item => item.name === 'requestAccounts');\n    const tonAddress = connectResponse.payload.responses.find(item => item.name === 'ton_addr');\n    const tonProof = connectResponse.payload.responses.find(item => item.name === 'ton_proof');\n    if (tonAddress && !universalResponse) { //adapt tonsdk\n        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse adapt ton data >>');\n        let address = tonAddress.address;\n        address = 'ton:' + tonAddress.network + \":\" + address;\n        let data = {\n            ton_addr: tonAddress\n        };\n        if (tonProof) {\n            data.ton_proof = tonProof;\n        }\n        universalResponse = {\n            name: \"requestAccounts\",\n            accounts: [{\n                    namespace: 'ton',\n                    addresses: [address],\n                    methods: ['ton_sendTransaction'],\n                    extra: {},\n                    data: data,\n                }]\n        };\n    }\n    (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse end universalResponse>>>', JSON.stringify(universalResponse));\n    universalResponse.accounts.forEach(item => {\n        var chains = [];\n        var accounts = [];\n        item.addresses.forEach(addressItem => {\n            var addressArr = addressItem.split(\":\");\n            (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse addressArr>>', addressArr.length);\n            if (addressArr.length >= 3) {\n                let chain = addressArr.slice(0, 2).join(\":\");\n                chains.push(chain);\n                accounts.push(addressItem);\n                (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse chain:>>', chain, \"addressItem:\", addressItem);\n            }\n        });\n        if (item.data && item.data.ton_addr) {\n            item.data.ton_addr.name = 'ton_addr';\n        }\n        if (item.data && item.data.ton_proof) {\n            item.data.ton_proof.name = 'ton_proof';\n        }\n        result[item.namespace] = {\n            chains: chains,\n            accounts: accounts,\n            methods: item.methods,\n            extra: item.extra,\n            payload: item.data\n        };\n        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse result>>', JSON.stringify(result));\n    });\n    return result;\n}\n/*export function buildTonNameSpaceByConnectResponse(connectResponse: ConnectResponseSuccess): Namespaces | undefined {\n    const tonAddrItem: TonAddressItemReply = connectResponse.payload.responses.find(\n        item => item.name === 'ton_addr'\n    ) as TonAddressItemReply;\n\n    const tonProfItem: TonProofItemReply = connectResponse.payload.responses.find(\n        item => item.name === 'ton_proof'\n    ) as TonProofItemReply;\n\n    if (!tonAddrItem) {\n        return undefined\n    }\n\n    return {\n        NameSpaceKeyTON: {\n            chains: [tonAddrItem.network],\n            accounts: [],\n            methods: connectResponse.payload.wallet.features?.ton,\n            payload: {\n                tonAccount: {\n                    address: tonAddrItem.address,\n                    chain: tonAddrItem.network,\n                    walletStateInit: tonAddrItem.walletStateInit,\n                    publicKey: tonAddrItem.publicKey\n                },\n                tonProof: tonProfItem\n            }\n        }\n    }\n}*/\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Storage = void 0;\nconst storageconstants_1 = require(\"./storageconstants\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst utils_1 = require(\"../utils/utils\");\nconst utils_2 = require(\"../utils\");\nconst log = __importStar(require(\"../utils/log\"));\nconst utils_3 = require(\"../utils\");\nconst crypto_js_1 = require(\"crypto-js\");\nclass Storage {\n    constructor(subKey, beforeKey = undefined) {\n        const localStorage = (0, utils_1.resolveLocalStorage)();\n        // 0. check and upgrade beforeKey\n        log.logDebug('------ update before cache ------');\n        if (beforeKey) {\n            this.checkAndUpgradeCache(beforeKey, subKey);\n        }\n        // 1. load data from local storage\n        this.storeKey = '';\n        this.cipherIV = '';\n        this.subKey = subKey;\n        log.logDebug('--------get current local storage --------');\n        log.logDebug(localStorage);\n        const cacheStr = localStorage.getItem(Storage.cacheKey + subKey);\n        if (typeof cacheStr === \"undefined\" || cacheStr === null) {\n            log.logDebug(\"with no cache\");\n            this.cache = {};\n            return;\n        }\n        log.logDebug(cacheStr);\n        if ((cacheStr === null || cacheStr === void 0 ? void 0 : cacheStr.length) > 0) {\n            var cacheObj = (0, utils_2.safeJsonParse)(cacheStr);\n            this.cache = cacheObj;\n        }\n        log.logDebug(`get cache obj: ${this.cache}`);\n        if (typeof this.cache === 'undefined' || this.cache == null) {\n            this.cache = {};\n        }\n    }\n    checkAndUpgradeCache(fromCacheKey, toCacheKey) {\n        if (fromCacheKey && fromCacheKey.length > 0 && toCacheKey && toCacheKey.length > 0) {\n            // 1. get all infos from from-cache-key\n            log.logDebug('--------get current local storage --------');\n            log.logDebug(localStorage);\n            const cacheStr = localStorage.getItem(Storage.cacheKey + fromCacheKey);\n            if (typeof cacheStr === \"undefined\" || cacheStr === null) {\n                log.logDebug(\"no pre cache content\");\n                return;\n            }\n            log.logDebug(cacheStr);\n            if ((cacheStr === null || cacheStr === void 0 ? void 0 : cacheStr.length) > 0) {\n                // 2. save to to-cache-key\n                log.logDebug(\"write in cache content: \", fromCacheKey, '->', toCacheKey);\n                localStorage.setItem(Storage.cacheKey + toCacheKey, cacheStr);\n                // 3. clean from item\n                log.logDebug(\"clean in cache content: \", fromCacheKey);\n                localStorage.removeItem(Storage.cacheKey + fromCacheKey);\n            }\n        }\n        else {\n            log.logDebug('no pre cache key:', fromCacheKey);\n        }\n    }\n    saveContent(content, key, id = '-') {\n        let item = {\n            id: id,\n            timestamp: Date.now().toString(),\n            content: content\n        };\n        this.saveItem(item, key);\n    }\n    saveItem(item, key) {\n        let localKey = Storage.cacheKey + this.subKey;\n        const localStorage = (0, utils_1.resolveLocalStorage)();\n        log.logDebug(this.cache);\n        log.logDebug(`get cache obj: ${this.cache}, ${key}, ${item}`);\n        this.cache[key] = item;\n        let totalCacheStr = (0, utils_2.safeJsonStringify)(this.cache);\n        log.logDebug(`STORAGE: ${key} @ ${this.cache}`);\n        localStorage.setItem(localKey, totalCacheStr);\n    }\n    getItem(key) {\n        log.logDebug(`STORAGE >> getItem: ${key} @ ${this.cache}`);\n        return this.cache[key];\n    }\n    getCachedPBKDF2InfoKey() {\n        var _a, _b, _c, _d;\n        const pwLen = 32;\n        const saltLen = 24;\n        if (this.storeKey.length > 0 && ((_a = this.cipherIV) === null || _a === void 0 ? void 0 : _a.length) > 0) {\n            return {\n                pw: this.storeKey,\n                iv: this.cipherIV\n            };\n        }\n        let salt = (_b = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGER_CRYPTO_SALT)) === null || _b === void 0 ? void 0 : _b.content;\n        if (!salt) {\n            salt = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(saltLen));\n            this.saveContent(salt, storageconstants_1.OKXCONNECTOR_STORAGER_CRYPTO_SALT);\n        }\n        let pw = (_c = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD)) === null || _c === void 0 ? void 0 : _c.content;\n        if (!pw) {\n            pw = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(pwLen));\n            this.saveContent(pw, storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD);\n        }\n        let cipherIV = (_d = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV)) === null || _d === void 0 ? void 0 : _d.content;\n        if (!cipherIV) {\n            // let ivBuffer = Buffer.from(nacl.randomBytes(16))\n            let ivBuffer = tweetnacl_1.default.randomBytes(16);\n            cipherIV = (0, utils_1.toHexString)(ivBuffer);\n            this.saveContent(cipherIV, storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV);\n        }\n        this.cipherIV = cipherIV;\n        this.storeKey = (0, crypto_js_1.PBKDF2)(pw, salt, { iterations: 10 }).toString();\n        return {\n            pw: this.storeKey,\n            iv: this.cipherIV\n        };\n    }\n    encryptStoreMsg(msg, key) {\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg start ${Date.now()}`);\n        let storeInfo = this.getCachedPBKDF2InfoKey();\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg mid ${Date.now()}`);\n        var result = crypto_js_1.AES.encrypt(msg, storeInfo.pw).toString();\n        this.saveContent(result, key);\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg end ${Date.now()}`);\n    }\n    getAndDecrypt(key) {\n        (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt start ${Date.now()}`);\n        let item = this.getItem(key);\n        if (item && item.content) {\n            let storeInfo = this.getCachedPBKDF2InfoKey();\n            (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt mid ${Date.now()}`);\n            let result = crypto_js_1.AES.decrypt(item.content, storeInfo.pw).toString(crypto_js_1.enc.Utf8);\n            (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt end ${Date.now()}`);\n            return result;\n        }\n        return null;\n    }\n    clearCache(key = undefined) {\n        if (key === undefined) {\n            // clean all\n            this.cache = {};\n            let localKey = Storage.cacheKey + this.subKey;\n            localStorage.setItem(localKey, '');\n        }\n        else {\n            let localKey = Storage.cacheKey + this.subKey;\n            const localStorage = (0, utils_1.resolveLocalStorage)();\n            log.logDebug(this.cache);\n            this.cache[key] = null;\n            let totalCacheStr = (0, utils_2.safeJsonStringify)(this.cache);\n            log.logDebug(`STORAGE: clean key ${key} @ ${this.cache}`);\n            localStorage.setItem(localKey, totalCacheStr);\n        }\n    }\n}\nexports.Storage = Storage;\nStorage.cacheKey = 'OKXStorageKey';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCONNECTOR_STORAGE_CIPHER_METHOD = exports.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV = exports.OKXCONNECTOR_STORAGER_CRYPTO_SALT = exports.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD = exports.OKXCONNECTOR_TON_KEY = exports.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE = exports.OKXCONNECTOR_TOKEN_CACHE = exports.OKXCONNECTOR_JWT_KEY = exports.OKXCONNECTOR_SESSION_PREFIX_KEY = exports.OKXCONNECTOR_CRYPTO_KEY = exports.OKXCONNECTOR_CACHE_KEY_DAPP = exports.OKXCONNECTOR_CACHE_KEY = void 0;\nexports.OKXCONNECTOR_CACHE_KEY = \"ck\";\nexports.OKXCONNECTOR_CACHE_KEY_DAPP = \"ck_dapp\";\nexports.OKXCONNECTOR_CRYPTO_KEY = \"cck_k\";\nexports.OKXCONNECTOR_SESSION_PREFIX_KEY = \"cspk_\";\nexports.OKXCONNECTOR_JWT_KEY = \"cjk_k\";\nexports.OKXCONNECTOR_TOKEN_CACHE = \"ct\";\nexports.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE = \"csp\";\nexports.OKXCONNECTOR_TON_KEY = \"OKXStorage_ctc\";\nexports.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD = \"scp\";\nexports.OKXCONNECTOR_STORAGER_CRYPTO_SALT = \"scs\";\nexports.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV = \"scpc\";\nexports.OKXCONNECTOR_STORAGE_CIPHER_METHOD = \"aes-256-cbc\";\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletConnectionManagerEvent = exports.WalletConnectionManagerTopicInfoCacheKey = void 0;\nexports.WalletConnectionManagerTopicInfoCacheKey = \"wcmtic\";\nexports.WalletConnectionManagerEvent = {\n    RECEIVE_REQUEST: \"payload\"\n};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletConnectionManager = void 0;\nconst connect_1 = require(\"./connect\");\nconst commands_1 = require(\"./commands\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst jwtconstants_1 = require(\"./jwtconstants\");\nconst constants_1 = require(\"./constants\");\nconst walletConnectionConstants_1 = require(\"./walletConnectionConstants\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils/utils\");\nconst crypto_1 = require(\"../crypto/crypto\");\nconst jwt_1 = require(\"./jwt\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst utils_2 = require(\"../utils\");\nclass WalletConnectionManager {\n    constructor() {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.communicateEvents = new eventemitter3_1.EventEmitter();\n        log.logDebug('connect manager construct');\n        // local storage\n        this.connectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n        // this.crypto = new SessionCrypto()\n        this.jwtKeyPair = this.getCachedJWTKeyPair();\n        this.saveJWTKeyPair(this.jwtKeyPair);\n        // wss connection\n        this.connector = new connect_1.OKXWalletConnector(constants_1.OKXCONNECTOR_WS_URL_1);\n        this.packageId = Date.now();\n        // connection state\n        this.sessionCryptoInfoMap = new Map();\n        // log.logDebug(`this.connectedWalletPK  constructor   ${this.connectedWalletPK}`)\n        this.inLogin = false;\n        this.isLogined = false;\n    }\n    refreshPackageId(offset = 0) {\n        this.packageId = Date.now() + offset;\n    }\n    saveCryptoKeyPair(topicId, keyPair) {\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(keyPair);\n        // encrypt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_CRYPTO_KEY + topicId);\n    }\n    getCachedCryptoKeyPair(topicId) {\n        // decrypt kp\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_CRYPTO_KEY + topicId);\n        const content = kp;\n        if (typeof content == 'string') {\n            log.logDebug('get cached crypto key:');\n            log.logDebug(content);\n            let keyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            return keyPairInfo;\n        }\n        else {\n            this.connectStorage.clearCache();\n        }\n        return null;\n    }\n    saveJWTKeyPair(keyPair) {\n        var strkeyPair = {\n            publicKey: (0, utils_1.toHexString)(keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(keyPair.secretKey)\n        };\n        log.logDebug('save jwt kp');\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(strkeyPair);\n        log.logDebug(cacheInfo);\n        // encrypt jwt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        log.logDebug('after save jwt kp');\n    }\n    getCachedJWTKeyPair() {\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            // TODO: decrypt jwt kp\n            log.logDebug('get cached jwt kp:');\n            log.logDebug(content);\n            let strKeyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            log.logDebug('save jwt kp');\n            log.logDebug(strKeyPairInfo);\n            var keyPair = {\n                publicKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.publicKey),\n                secretKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.secretKey)\n            };\n            return keyPair;\n        }\n        else {\n            return (0, jwt_1.generateKeyPair)();\n        }\n    }\n    isTopicPublicKeyExist(topicId) {\n        log.logDebug(`isTopicPublicKeyExist  ===> ${topicId}`);\n        return this.sessionCryptoInfoMap.get(topicId);\n    }\n    makeJWT(timestampStr) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, jwt_1.signJWT)(timestampStr, jwtconstants_1.OKXCONNECTOR_JWT_WALLET_SIDE, jwtconstants_1.OKXCONNECTOR_JWT_TTL, // 24h\n            this.jwtKeyPair);\n        });\n    }\n    parseInternalMsg(internalMsg) {\n        try {\n            let internalObj = (0, safejson_1.safeJsonParse)(internalMsg);\n            let origin = internalObj['ivur-igbfft-ptjip'];\n            if (origin && origin.length > 0) {\n                let originContent = (0, utils_2.base64decode)(origin, true);\n                return originContent.toString();\n            }\n        }\n        catch (error) {\n            log.logError('parse internal msg', error);\n        }\n    }\n    updateClientId(topic, clientId) {\n        let sessionInfo = this.sessionCryptoInfoMap.get(topic);\n        (0, log_1.logDebug)('updateClientId', sessionInfo, topic, clientId);\n        if (sessionInfo && clientId && clientId.length > 0) {\n            if (sessionInfo.cid) {\n                // check\n                let lastCheck = (0, utils_1.getLastSixMd5Hash)(clientId);\n                if (sessionInfo.cid == lastCheck) {\n                    sessionInfo.dappPublicKey = clientId;\n                }\n                else {\n                    log.logError('cid check failed', sessionInfo, topic, clientId);\n                }\n            }\n            else {\n                sessionInfo.dappPublicKey = clientId;\n            }\n            // \n            this.syncCacheSessionInfo();\n        }\n        return false;\n    }\n    parsePackage(topic_1, input_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, input, ignoreACK = false) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;\n            this.events.emit(input.id, input);\n            // emit event\n            let sessionInfo = this.sessionCryptoInfoMap.get(topic);\n            log.logDebug('get sessionInfo for decrypt topic:', topic);\n            log.logDebug('get sessionInfo for decrypt:', input.id, topic, sessionInfo, this.sessionCryptoInfoMap);\n            if (sessionInfo && input.params.data) {\n                if ((_a = input.params.data) === null || _a === void 0 ? void 0 : _a.message) {\n                    // try parse internal message\n                    if ((_b = input.params.data) === null || _b === void 0 ? void 0 : _b.isInternalData) {\n                        let inner_message = (_c = input.params.data) === null || _c === void 0 ? void 0 : _c.message;\n                        let inner_topic = (_d = input.params.data) === null || _d === void 0 ? void 0 : _d.topic;\n                        let originContent = this.parseInternalMsg(inner_message);\n                        (0, log_1.logDebug)('parse internal origin: ', originContent);\n                        if (originContent && originContent.length > 0) {\n                            this.communicateEvents.emit(\"origin\", originContent, inner_topic);\n                        }\n                    }\n                    else {\n                        // try parse message base64\n                        try {\n                            let message = (_e = input.params.data) === null || _e === void 0 ? void 0 : _e.message;\n                            if (message.trimStart().startsWith('{')) {\n                                let messageObj = (0, safejson_1.safeJsonParse)(message);\n                                if (messageObj.method) {\n                                    if (messageObj.method == 'session_info') {\n                                        let sessionInfoString = messageObj.params.sessionInfo;\n                                        let base64Content = (0, utils_2.base64decode)(sessionInfoString, false);\n                                        (0, log_1.logDebug)(\"wallet connection manager requset base64Content:\", base64Content);\n                                        (0, log_1.logDebug)(\"base64Content:\" + base64Content);\n                                        let inner_connection = base64Content.toObject();\n                                        this.updateClientId(topic, inner_connection.clientId);\n                                    }\n                                    (0, log_1.logDebug)('<<< parse raw msg:', topic, messageObj);\n                                    this.communicateEvents.emit(topic, message);\n                                }\n                            }\n                            else {\n                                let message = sessionInfo.crypto.decryptWallet((_f = input.params.data) === null || _f === void 0 ? void 0 : _f.message, sessionInfo.dappPublicKey);\n                                (0, log_1.logDebug)('<<< receive msg:', topic, message);\n                                this.communicateEvents.emit(topic, message);\n                            }\n                        }\n                        catch (error) {\n                            let message = sessionInfo.crypto.decryptWallet((_g = input.params.data) === null || _g === void 0 ? void 0 : _g.message, sessionInfo.dappPublicKey);\n                            (0, log_1.logDebug)('<<< receive msg:', topic, message);\n                            this.communicateEvents.emit(topic, message);\n                        }\n                    }\n                }\n                else {\n                }\n            }\n            // send back ACK\n            if (!ignoreACK) {\n                yield this.sendACK(input.id, true);\n                if (topic) {\n                    let inputObj = input;\n                    if ((_j = (_h = inputObj.params) === null || _h === void 0 ? void 0 : _h.data) === null || _j === void 0 ? void 0 : _j.messageId) {\n                        this.refreshPackageId();\n                        yield this.sendReceive(this.packageId.toString(), (_l = (_k = inputObj.params) === null || _k === void 0 ? void 0 : _k.data) === null || _l === void 0 ? void 0 : _l.messageId, topic);\n                    }\n                }\n            }\n        });\n    }\n    recovrySessionInfoFromCache() {\n        // get topic ids and keys from session\n        // WalletConnectionCryptoCacheMap\n        // {[topicId]: {cryptoKeypair: {publicKey:string, secretKey:string}, dappPublicKey:clientId}}\n        let jsonStr = this.connectStorage.getAndDecrypt(walletConnectionConstants_1.WalletConnectionManagerTopicInfoCacheKey);\n        log.logDebug('get cached sessionInfos:', jsonStr);\n        if (jsonStr) {\n            let cacheMap = (0, safejson_1.safeJsonParse)(jsonStr);\n            for (let topicId in cacheMap) {\n                let topicItem = cacheMap[topicId];\n                log.logDebug('make topicItem:', topicItem);\n                let cryptoItem = {\n                    topic: topicId,\n                    crypto: new crypto_1.SessionCrypto({\n                        publicKey: topicItem.cryptoKeyPair.publicKey,\n                        secretKey: topicItem.cryptoKeyPair.secretKey\n                    }),\n                    dappPublicKey: topicItem.dappPublicKey,\n                    cid: topicItem.cid\n                };\n                this.sessionCryptoInfoMap.set(topicId, cryptoItem);\n            }\n        }\n        log.logDebug('get cached sessionInfos map:', this.sessionCryptoInfoMap);\n    }\n    syncCacheSessionInfo() {\n        let cacheMap = {};\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            log.logDebug('for each Keys', topicId);\n            if (cryptoItem) {\n                cacheMap[topicId] = {\n                    cryptoKeyPair: cryptoItem.crypto.stringifyKeypair(),\n                    dappPublicKey: cryptoItem.dappPublicKey,\n                    cid: cryptoItem.cid\n                };\n            }\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(cacheMap);\n        log.logDebug('sync cache sessionInfos:', jsonData);\n        this.connectStorage.encryptStoreMsg(jsonData, walletConnectionConstants_1.WalletConnectionManagerTopicInfoCacheKey);\n    }\n    cacheSessionInfo(topic, sessionInfo, sync = true) {\n        let dappPublicKey = sessionInfo.dappPublicKey;\n        // 1. search dapp public related topic ids\n        let duplicatedTopics = [];\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            log.logDebug('for each Keys', topicId);\n            if (cryptoItem.dappPublicKey == dappPublicKey) {\n                log.logDebug('duplicated dapp public key:', topicId, dappPublicKey);\n                duplicatedTopics.push(topicId);\n            }\n        }\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            if (duplicatedTopics.includes(topicId)) {\n                this.sessionCryptoInfoMap.delete(topicId);\n            }\n        }\n        // discard useless topics\n        log.logDebug('cleaned connect session cache:', this.sessionCryptoInfoMap);\n        // 2. remove previous connected topic ids\n        // 3. write in current topic\n        this.sessionCryptoInfoMap.set(topic, sessionInfo);\n        // TODO: search domain info and then delete \n        log.logDebug('cache sessionInfo:', topic, sessionInfo, this.sessionCryptoInfoMap);\n        if (sync) {\n            this.syncCacheSessionInfo();\n        }\n        return duplicatedTopics;\n    }\n    // add and subscribe topic\n    appendTopic(topic, sessionPublicKey, cid) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('4.1. get append Topic:', topic);\n            // 1. check if connected\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                if (!this.isLogined) {\n                    var error = new Error();\n                    error.message = \"connection is not logined\";\n                    error.name = \"append error\";\n                    // throw error\n                    reject(error);\n                    return;\n                }\n                // 2. subscribe topic and session public key\n                let cryptoItem = {\n                    topic: topic,\n                    crypto: new crypto_1.SessionCrypto(),\n                    dappPublicKey: sessionPublicKey ? sessionPublicKey : \"\",\n                    cid: cid\n                };\n                let duplicatedTopics = this.cacheSessionInfo(topic, cryptoItem, false);\n                // make sure cache session info before subscribe\n                yield this.subscribeTopics(Array.from([topic]));\n                this.refreshPackageId();\n                log.logDebug(`5. subscribe callback then fetch append message: ${this.packageId}, ${topic}`);\n                log.reportLog(`5. subscribe callback then fetch append message`);\n                const timeF = new Date().getTime();\n                (0, log_1.logDebug)(\"Append --subscribe callback->\", timeF - this.timeLog);\n                resolve(duplicatedTopics);\n            }));\n        });\n    }\n    confirmAppendingTopics() {\n        this.syncCacheSessionInfo();\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.timeLog = new Date().getTime();\n            (0, log_1.logDebug)(\"[Wallet] ConnectTime---enter->\", this.timeLog);\n            log.reportLog('wallet connect connect called');\n            // 0. get cached topics and infos\n            let timestampStr = Date.now().toString();\n            var jwtToken = yield this.makeJWT(timestampStr);\n            log.logDebug(`generate jwt token: ${jwtToken}`);\n            this.connectStorage.saveContent(jwtToken, 'jwt');\n            this.recovrySessionInfoFromCache();\n            // 1.\n            return new Promise((resolve, reject) => {\n                // 1. when websocket opened\n                this.inLogin = true;\n                this.connector.onOpen(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug(`1. connector on open`);\n                    log.reportLog('1. wallet connect connect on open');\n                    const timeOne = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---open->\", timeOne - this.timeLog);\n                    //2. send jwt to login\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when login');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // throw error\n                            reject(error);\n                        }\n                        else {\n                            this.isLogined = true;\n                            resolve();\n                            // 3. subscribe cached topics\n                            log.logDebug('3. subscribe cached topics', this.sessionCryptoInfoMap);\n                            log.reportLog('3. wallet connect connect subscribe cached topics');\n                            if (this.sessionCryptoInfoMap.size > 0) {\n                                yield this.subscribeTopics(Array.from(this.sessionCryptoInfoMap.keys()));\n                            }\n                        }\n                    }));\n                    log.logDebug(`2. login called`);\n                    log.reportLog('2. wallet connect login called');\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        return yield this.connector.connect();\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_LOGIN,\n                        params: {\n                            token: jwtToken\n                        }\n                    });\n                }));\n                this.connector.connect().catch((err) => {\n                    (0, log_1.logDebug)('WalletConnectionManager connect error', err);\n                    reject(err);\n                });\n                // add callback\n                this.connector.addPackageParse((event) => {\n                    var _a, _b;\n                    log.logDebug(`connect: parse package`);\n                    log.logDebug(event);\n                    if (!(\"params\" in event) || !(\"data\" in event[\"params\"])) {\n                        this.parsePackage(\"\", event, true);\n                        return;\n                    }\n                    // ignore receive echo\n                    if ((_a = event.params.data) === null || _a === void 0 ? void 0 : _a.topic) {\n                        this.parsePackage((_b = event.params.data) === null || _b === void 0 ? void 0 : _b.topic, event, event.method === commands_1.CONNECT_METHOD_RECEIVE);\n                    }\n                });\n                // this.connector.addListener(safeJsonStringify(event), (rawMsg: string)=> {\n                //    rawMsg = rawMsg.replace(/'/g, '\"')\n                //    log.logDebug(`addListener ===> ${rawMsg}`)\n                //    if (typeof rawMsg !== 'undefined') {\n                //       var msgObj = safeJsonParse(rawMsg)\n                //       var msg = msgObj.message\n                //       let crypto = \n                //       var result = this.crypto.decrypt(msg, this.connectedWalletPK)\n                //       log.logDebug(`addListener ===> ${result}`)\n                //       return result\n                //    }\n                //    return undefined\n                // }, ()=>{\n                //    // emit success\n                // }, ()=>{\n                //    // emit fail\n                // })\n            });\n        });\n    }\n    // 获取对应topic session下的钱包公钥\n    // 在返回approve时需要填充到clientId字段中\n    getSessionPublicKey(topicId) {\n        if (this.isTopicPublicKeyExist(topicId)) {\n            let item = this.sessionCryptoInfoMap.get(topicId);\n            if (item) {\n                return (0, utils_1.toHexString)(item.crypto.keyPair.publicKey);\n            }\n        }\n        return undefined;\n    }\n    getCurrentCachedTopicIdList() {\n        return Array.from(this.sessionCryptoInfoMap.keys());\n    }\n    disconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            yield this.connector.disconnect();\n            //clean cached topic\n            //如果是恢复连接，就不清理解密public key\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            if (!fromRestore) {\n                this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n            }\n        });\n    }\n    send(topic_1, msg_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, msg, needPublicKey = false, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL, useRaw = false) {\n            var _a, _b;\n            // make send msg payload\n            log.logDebug(`message send =====> ${msg}`);\n            if (!this.isTopicPublicKeyExist(topic)) {\n                // channel not ready\n                throw new Error('connection not finish');\n            }\n            let connectedDappPK = (_a = this.sessionCryptoInfoMap.get(topic)) === null || _a === void 0 ? void 0 : _a.dappPublicKey;\n            let cryptoObject = (_b = this.sessionCryptoInfoMap.get(topic)) === null || _b === void 0 ? void 0 : _b.crypto;\n            let messageObj = undefined;\n            if (useRaw) {\n                messageObj = {\n                    message: msg,\n                };\n            }\n            if (cryptoObject && connectedDappPK && !useRaw) {\n                let message = cryptoObject.encryptWallet(msg, connectedDappPK);\n                messageObj = {\n                    message: message,\n                };\n            }\n            if (messageObj) {\n                if (needPublicKey && cryptoObject) {\n                    messageObj.clientId = (0, utils_1.toHexString)(cryptoObject.keyPair.publicKey);\n                    // let privateKey = toHexString(cryptoObject.keyPair.secretKey)\n                    // log.logDebug(`message send use dapp publicKey =====> ${connectedDappPK}`)\n                    // log.logDebug(`message send use publicKey =====> ${messageObj.clientId}`)\n                    // log.logDebug(`message send use secretKey =====> ${privateKey}`)\n                }\n                this.refreshPackageId();\n                const payload = {\n                    id: this.packageId.toString(),\n                    method: commands_1.CONNECT_METHOD_PUBLISH,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    params: {\n                        message: {\n                            topic: topic,\n                            message: (0, safejson_1.safeJsonStringify)(messageObj),\n                            ttl: ttl\n                        }\n                    } // crypted\n                };\n                this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                    // ack\n                    if (rsp && rsp.error) {\n                        log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                    }\n                    else if (rsp && !rsp.error) {\n                        log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                    }\n                }));\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n                return this.packageId;\n            }\n        });\n    }\n    sendACK(msgId_1, success_1) {\n        return __awaiter(this, arguments, void 0, function* (msgId, success, reason = undefined) {\n            if (success === true) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    result: true\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n            else if (reason) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    error: {\n                        code: reason.code, //int\n                        message: reason.message\n                    }\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    // send receive\n    sendReceive(msgId, messageId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECEIVE,\n                params: {\n                    data: {\n                        messageId: messageId,\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendUnsubscribe(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO: make disconnect payload\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), {\n                id: this.packageId.toString(),\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_UNSUB,\n                params: {\n                    topic: topic\n                }\n            });\n            // remove topicId\n            this.sessionCryptoInfoMap.delete(topic);\n            this.syncCacheSessionInfo();\n        });\n    }\n    // send receive\n    // 1. fetch all \n    // 2. send back receive\n    // 3. check has more, if so, repeat from 1st step\n    sendFetchAndConsumeMessages(msgId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(msgId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic == topic) {\n                                let messageId = msg.messageId;\n                                yield this.connector.getMsgPayloadFromHistory(msg);\n                                // send receive command to relay server\n                                this.refreshPackageId();\n                                yield this.sendReceive(this.packageId.toString(), messageId, topic);\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_FETCHMSG,\n                params: {\n                    data: {\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendBatchFetchAndConsumeMessages(packageId, topicIdList) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(packageId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic) {\n                                let messageId = msg.messageId;\n                                yield this.connector.getMsgPayloadFromHistory(msg);\n                                // send receive command to relay server\n                                this.refreshPackageId(i);\n                                yield this.sendReceive(this.packageId.toString(), messageId, msg.topic);\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendBatchFetchAndConsumeMessages(this.packageId.toString(), topicIdList);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            log.reportLog('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: packageId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_BATCH_FETCHMSG,\n                params: {\n                    topics: topicIdList,\n                    withInternalData: true\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                yield this.connector.connect();\n            }), payload);\n        });\n    }\n    cleanCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.connectStorage.clearCache();\n        });\n    }\n    saveSessionContent(key, data) {\n        if (!data) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(data);\n        this.connectStorage.encryptStoreMsg(jsonData, storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n    }\n    getSessionContent(key) {\n        let jsonStr = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        if (jsonStr) {\n            let object = (0, safejson_1.safeJsonParse)(jsonStr);\n            return object;\n        }\n        return undefined;\n    }\n    // subscribe then fetch messages for each topics\n    subscribeTopics(topicIdList) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)(\"4. topicid list\", topicIdList);\n            log.reportLog(\"4. topicid list\");\n            this.refreshPackageId();\n            const timeF = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let finishCount = 0;\n                //3. send subscribe\n                for (let idx = 0; idx < topicIdList.length; ++idx) {\n                    let topicId = topicIdList[idx];\n                    this.refreshPackageId(idx);\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when subscribe');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // reject(error)\n                            finishCount += 1;\n                            if (finishCount == topicIdList.length) {\n                                resolve();\n                            }\n                        }\n                        this.refreshPackageId(idx);\n                        const timeF = new Date().getTime();\n                        (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n                        finishCount += 1;\n                        if (finishCount == topicIdList.length) {\n                            // 4. fetch messages\n                            log.logDebug(`5. send fetch msg: ${this.packageId}, ${topicId}`);\n                            yield this.sendBatchFetchAndConsumeMessages(this.packageId.toString(), topicIdList);\n                            resolve();\n                        }\n                    }));\n                    log.logDebug(`3. login callback then send subscribe: ${this.packageId}, ${topicId}`);\n                    log.reportLog('3. login callback then send subscribe');\n                    const timeTh = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---login callback->\", timeTh - this.timeLog);\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        return yield this.connector.connect();\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_SUB,\n                        params: {\n                            topic: topicId\n                        }\n                    });\n                }\n            }));\n        });\n    }\n}\nexports.WalletConnectionManager = WalletConnectionManager;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AppwalletConnector = void 0;\nconst ws_connector_1 = require(\"./ws-connector\");\nconst iconnector_1 = require(\"./iconnector\");\nconst utils_1 = require(\"../utils\");\nconst constants_1 = require(\"../protocol/constants\");\nclass AppwalletConnector extends ws_connector_1.WsConnector {\n    static getConnector() {\n        if (!this.instance) {\n            this.instance = new AppwalletConnector();\n        }\n        return this.instance;\n    }\n    constructor() {\n        super();\n        this.walletName = 'OKX App Wallet';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectApp';\n    }\n    getTag() {\n        return iconnector_1.OKX_APP_WALLET;\n    }\n    openWallet(engineConnectInfo) {\n        var _a;\n        if (engineConnectInfo) {\n            var connectRequest = engineConnectInfo.connectRequest;\n            var tonConnectRequest = engineConnectInfo.tonConnectRequest;\n            if (!tonConnectRequest) {\n                connectRequest = tonConnectRequest;\n            }\n            if ((0, utils_1.useShortLink)()) {\n                var shortUniversalLink = (0, utils_1.getOKXLink)(connectRequest);\n                (0, utils_1.openOKXUniversalLink)(shortUniversalLink);\n            }\n            else {\n                var appConnectEncodeParams = (0, utils_1.encodeConnectParams)(Object.assign(Object.assign({}, connectRequest), { redirect: (_a = engineConnectInfo.redirect) !== null && _a !== void 0 ? _a : \"none\" }));\n                var appDeepLink = (0, utils_1.getAppWalletDeepLink)(appConnectEncodeParams);\n                (0, utils_1.openOKXDeeplinkWithFallback)(appDeepLink);\n            }\n        }\n        else {\n            if ((0, utils_1.isOS)('android')) {\n                (0, utils_1.openDeeplinkWithFallback)(constants_1.stackDeepLink, () => { });\n            }\n            else {\n                (0, utils_1.openLinkBlank)(constants_1.standardUniversalLink);\n            }\n        }\n    }\n}\nexports.AppwalletConnector = AppwalletConnector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_TG_WALLET = exports.OKX_APP_WALLET = exports.OKX_INJECT_WALLET = void 0;\nexports.OKX_INJECT_WALLET = \"okx_inject_wallet\";\nexports.OKX_APP_WALLET = \"okx_app_wallet\";\nexports.OKX_TG_WALLET = \"okx_tg_wallet\";\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OkxwalletInjectConnector = exports.WsConnector = exports.TgwalletConnector = exports.InjectConnector = exports.OKX_INJECT_WALLET = exports.OKX_APP_WALLET = exports.OKX_TG_WALLET = exports.AppwalletConnector = void 0;\nvar appwallet_connector_1 = require(\"./appwallet-connector\");\nObject.defineProperty(exports, \"AppwalletConnector\", { enumerable: true, get: function () { return appwallet_connector_1.AppwalletConnector; } });\nvar iconnector_1 = require(\"./iconnector\");\nObject.defineProperty(exports, \"OKX_TG_WALLET\", { enumerable: true, get: function () { return iconnector_1.OKX_TG_WALLET; } });\nObject.defineProperty(exports, \"OKX_APP_WALLET\", { enumerable: true, get: function () { return iconnector_1.OKX_APP_WALLET; } });\nObject.defineProperty(exports, \"OKX_INJECT_WALLET\", { enumerable: true, get: function () { return iconnector_1.OKX_INJECT_WALLET; } });\nvar inject_connector_1 = require(\"./inject-connector\");\nObject.defineProperty(exports, \"InjectConnector\", { enumerable: true, get: function () { return inject_connector_1.InjectConnector; } });\nvar tgwallet_connector_1 = require(\"./tgwallet-connector\");\nObject.defineProperty(exports, \"TgwalletConnector\", { enumerable: true, get: function () { return tgwallet_connector_1.TgwalletConnector; } });\nvar ws_connector_1 = require(\"./ws-connector\");\nObject.defineProperty(exports, \"WsConnector\", { enumerable: true, get: function () { return ws_connector_1.WsConnector; } });\nvar okxwallet_inject_connector_1 = require(\"./okxwallet-inject-connector\");\nObject.defineProperty(exports, \"OkxwalletInjectConnector\", { enumerable: true, get: function () { return okxwallet_inject_connector_1.OkxwalletInjectConnector; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InjectConnector = void 0;\nconst protocol_1 = require(\"../protocol\");\nconst utils_1 = require(\"../utils\");\nconst provider_1 = require(\"../inject/provider\");\nconst iconnector_1 = require(\"./iconnector\");\nconst SolProvider_1 = require(\"../inject/provider/SolProvider\");\nconst wallet_info_1 = require(\"../protocol/connect/wallet-info\");\nconst inject_1 = require(\"../inject\");\nconst AptosPrivider_1 = require(\"../inject/provider/AptosPrivider\");\nconst media_1 = require(\"../utils/media\");\nclass InjectConnector {\n    constructor() {\n        this.disconnectListener = [];\n        this.providerMap = new Map();\n        this.walletName = \"\";\n        this.walletNameKey = '';\n        this.enable = true;\n        this.providerMap.set(protocol_1.NameSpaceKeyEip155, new provider_1.Eip155Provider());\n        this.providerMap.set(protocol_1.NameSpaceKeySOL, new SolProvider_1.SolProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeyAptos, new AptosPrivider_1.AptosProvider());\n    }\n    getInjectProvider(nameSpace) {\n        for (const [mapKey, value] of this.providerMap.entries()) {\n            if (nameSpace.includes(mapKey)) {\n                return value;\n            }\n        }\n        return undefined;\n    }\n    openWallet(engineConnectInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            (0, utils_1.logDebug)(\"InjectEngine connect begin:\", JSON.stringify(engineConnectInfo));\n            if (!engineConnectInfo) {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR);\n            }\n            var universalConnectRequest = engineConnectInfo.connectRequest;\n            try {\n                if (window && window.okxwallet) {\n                    if (universalConnectRequest.requests) {\n                        let requestAccounts = universalConnectRequest.requests\n                            .find(item => item.name === \"requestAccounts\");\n                        let nameSpaceArr = [...((_a = requestAccounts.requiredNamespaces) !== null && _a !== void 0 ? _a : []), ...((_b = requestAccounts.optionalNamespaces) !== null && _b !== void 0 ? _b : [])];\n                        let result = {\n                            method: \"connect\",\n                            requestId: universalConnectRequest.requestId,\n                            payload: {\n                                wallet: {\n                                    platform: \"ios\",\n                                    appName: wallet_info_1.OKXInjectWalletName,\n                                    appVersion: \"0\",\n                                    maxProtocolVersion: 1,\n                                },\n                                responses: []\n                            },\n                        };\n                        let responseItem = {\n                            name: \"requestAccounts\",\n                            accounts: [],\n                        };\n                        result.payload.responses.push(responseItem);\n                        yield window.okxwallet.disconnect();\n                        var walletInfo = [];\n                        if ((0, media_1.isDevice)(\"mobile\")) {\n                            var requiredNamespaces = engineConnectInfo.connectRequest.requests[0].requiredNamespaces;\n                            var optionalNamespaces = engineConnectInfo.connectRequest.requests[0].optionalNamespaces;\n                            var walletInfoItem = yield window.okxwallet.requestWallets(true, {\n                                requiredNamespaces: requiredNamespaces,\n                                optionalNamespaces: optionalNamespaces\n                            });\n                            walletInfo.push(walletInfoItem);\n                        }\n                        else {\n                            walletInfo = (yield window.okxwallet.requestWallets(true));\n                        }\n                        let walletInfoFirst = walletInfo[0];\n                        (0, utils_1.logDebug)(\"InjectEngine connect connectAccounts:\", JSON.stringify(walletInfoFirst));\n                        if (nameSpaceArr && walletInfoFirst && walletInfoFirst.address) {\n                            for (let i = 0; i < nameSpaceArr.length; i++) {\n                                let item = nameSpaceArr[i];\n                                let addresses = [];\n                                let itemChains = item.chains;\n                                switch (item.namespace) {\n                                    case protocol_1.NameSpaceKeyEip155:\n                                        {\n                                            itemChains.forEach((chainStr) => {\n                                                let currentChain = (0, utils_1.getChainId)(chainStr);\n                                                let selectedAddress = walletInfoFirst.address.find((addressItem) => {\n                                                    return (addressItem.chainId === currentChain && addressItem.coinType === 60)\n                                                        || (addressItem.namespaceChainId === chainStr);\n                                                });\n                                                if (selectedAddress) {\n                                                    addresses.push(chainStr + \":\" + selectedAddress.address);\n                                                }\n                                            });\n                                            if (addresses && addresses.length > 0) {\n                                                let nameSpaceResponse = {\n                                                    namespace: item.namespace,\n                                                    addresses: addresses,\n                                                    methods: [...inject_1.Eip55Methods],\n                                                    extra: {}\n                                                };\n                                                responseItem.accounts.push(nameSpaceResponse);\n                                                (_c = this.getInjectProvider(protocol_1.NameSpaceKeyEip155)) === null || _c === void 0 ? void 0 : _c.resotreConnect();\n                                            }\n                                        }\n                                        break;\n                                    case protocol_1.NameSpaceKeySOL:\n                                        {\n                                            itemChains.forEach((chainStr) => {\n                                                let selectedAddress = walletInfoFirst.address.find((addressItem) => {\n                                                    return (addressItem.chainId === \"501\" && addressItem.coinType === 501)\n                                                        || (addressItem.namespaceChainId === chainStr);\n                                                });\n                                                if (selectedAddress) {\n                                                    addresses.push(chainStr + \":\" + selectedAddress.address);\n                                                }\n                                            });\n                                            if (addresses && addresses.length > 0) {\n                                                let nameSpaceResponse = {\n                                                    namespace: item.namespace,\n                                                    addresses: addresses,\n                                                    methods: [...inject_1.SOLANAMethods],\n                                                    extra: {}\n                                                };\n                                                responseItem.accounts.push(nameSpaceResponse);\n                                                (_d = this.getInjectProvider(protocol_1.NameSpaceKeySOL)) === null || _d === void 0 ? void 0 : _d.resotreConnect();\n                                            }\n                                        }\n                                        break;\n                                    case protocol_1.NameSpaceKeyAptos:\n                                        {\n                                            itemChains.forEach((chainStr) => {\n                                                let selectedAddress = walletInfoFirst.address.find((addressItem) => {\n                                                    return addressItem.chainId === \"637\" && addressItem.coinType === 637;\n                                                });\n                                                if (selectedAddress) {\n                                                    addresses.push(chainStr + \":\" + selectedAddress.address);\n                                                }\n                                            });\n                                            if (addresses && addresses.length > 0) {\n                                                let nameSpaceResponse = {\n                                                    namespace: item.namespace,\n                                                    addresses: addresses,\n                                                    methods: [...inject_1.AptosMethods],\n                                                    extra: {}\n                                                };\n                                                responseItem.accounts.push(nameSpaceResponse);\n                                            }\n                                        }\n                                        break;\n                                    default:\n                                        break;\n                                }\n                            }\n                            if (responseItem.accounts.length === 0) {\n                                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"connect connectAccounts is null\");\n                            }\n                        }\n                        else {\n                            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"connect requestWallets is null\");\n                        }\n                        if (this.connectResultListener) {\n                            this.connectResultListener(result, this);\n                        }\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR);\n                }\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n    disconnect() {\n    }\n    getRequestId() {\n        const requestId = Date.now().toString();\n        (0, utils_1.logDebug)('InjectEngine ==>> getRequestId ==>', requestId);\n        return requestId;\n    }\n    send(request, requestAnswer) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                (0, utils_1.logDebug)(\"InjectEngine send  > request:\", (0, utils_1.safeJsonStringify)(request));\n                let newRequest = request;\n                if (newRequest.method === 'disconnect') {\n                    //todu\n                    this.disconnect();\n                    (_a = requestAnswer.onAck) === null || _a === void 0 ? void 0 : _a.call(requestAnswer);\n                    return;\n                }\n                const injectProvider = this.getInjectProvider(newRequest.chainId);\n                if (injectProvider) {\n                    injectProvider.send(newRequest).then(result => {\n                        var _a;\n                        (0, utils_1.logDebug)(\"InjectEngine ==>> send > result:\", result);\n                        (_a = requestAnswer.resolve) === null || _a === void 0 ? void 0 : _a.call(requestAnswer, result);\n                    }).catch(error => {\n                        var _a;\n                        let code = error.code;\n                        if (code === 4001) {\n                            code = protocol_1.OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR;\n                        }\n                        let errorResponse = {\n                            requestId: this.getRequestId(),\n                            method: request.method,\n                            error: {\n                                code: code,\n                                message: error.message\n                            }\n                        };\n                        (0, utils_1.logDebug)(\"InjectEngine ==>> send > errorResponse:\", JSON.stringify(errorResponse));\n                        (_a = requestAnswer.resolve) === null || _a === void 0 ? void 0 : _a.call(requestAnswer, errorResponse);\n                    });\n                    return;\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"InjectEngine ==>> send  ===> error:\", error);\n                return Promise.reject(error);\n            }\n        });\n    }\n    clearData() {\n        this.connectResultListener = undefined;\n    }\n    addDisconnectListener(disconnecter) {\n        this.disconnectListener.push(disconnecter);\n    }\n    setOnConnectResultListener(connectResultListener) {\n        this.connectResultListener = connectResultListener;\n    }\n    connectManagerDisconnect() {\n        return __awaiter(this, arguments, void 0, function* (_ = false) {\n        });\n    }\n    getCurrentConnectionReady(namespaceKeys) {\n        if (!namespaceKeys) {\n            return false;\n        }\n        const allReady = namespaceKeys.every(namespaceKey => { var _a; return (_a = this.getInjectProvider(namespaceKey)) === null || _a === void 0 ? void 0 : _a.connectReady(); });\n        return allReady;\n    }\n    getTag() {\n        return iconnector_1.OKX_INJECT_WALLET;\n    }\n    toJSON() {\n        return \"inject-connector\";\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        var _a;\n        for (let namespacesKey in sessionInfo.namespaces) {\n            (_a = this.getInjectProvider(namespacesKey)) === null || _a === void 0 ? void 0 : _a.resotreConnect();\n        }\n        onConnectResult(sessionInfo);\n    }\n}\nexports.InjectConnector = InjectConnector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OkxwalletInjectConnector = void 0;\nconst inject_connector_1 = require(\"./inject-connector\");\nclass OkxwalletInjectConnector extends inject_connector_1.InjectConnector {\n    static getConnector() {\n        if (!this.instance) {\n            this.instance = new OkxwalletInjectConnector();\n        }\n        return this.instance;\n    }\n    constructor() {\n        super();\n        this.walletName = 'Connect OKX Wallet';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectInject';\n    }\n}\nexports.OkxwalletInjectConnector = OkxwalletInjectConnector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TgwalletConnector = void 0;\nconst ws_connector_1 = require(\"./ws-connector\");\nconst iconnector_1 = require(\"./iconnector\");\nconst utils_1 = require(\"../utils\");\nclass TgwalletConnector extends ws_connector_1.WsConnector {\n    static getConnector() {\n        if (!this.instance) {\n            this.instance = new TgwalletConnector();\n        }\n        return this.instance;\n    }\n    constructor() {\n        super();\n        this.walletName = 'OKX Mini Wallet';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectMini';\n    }\n    getTag() {\n        return iconnector_1.OKX_TG_WALLET;\n    }\n    openWallet(engineConnectInfo) {\n        var _a;\n        var encodeTGParams;\n        if (engineConnectInfo && engineConnectInfo.connectRequest) {\n            encodeTGParams = (0, utils_1.encodeTWAConnectURLParams)(Object.assign(Object.assign({}, engineConnectInfo.connectRequest), { redirect: \"none\" }));\n        }\n        var tgUrl = (0, utils_1.getTelegramWalletTWAUrl)(encodeTGParams, (_a = engineConnectInfo === null || engineConnectInfo === void 0 ? void 0 : engineConnectInfo.tmaReturnUrl) !== null && _a !== void 0 ? _a : \"back\");\n        (0, utils_1.openOKXTMAWalletlinkWithFallback)(tgUrl);\n    }\n}\nexports.TgwalletConnector = TgwalletConnector;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WsConnector = void 0;\nconst safejson_1 = require(\"../utils/safejson\");\nconst log_1 = require(\"../utils/log\");\nclass WsConnector {\n    constructor() {\n        this.disconnectListener = [];\n        this.walletName = '';\n        this.walletNameKey = '';\n        this.enable = true;\n        this.pendingRequests = new Map();\n        // report api begin\n        (0, log_1.getDefaultReporter)().beginReport();\n    }\n    setConnectionManager(connectionManager) {\n        this.connectionManager = connectionManager;\n        this.connectionManager.addListener(\"sdk_response\", (event, msg) => {\n            var jsonResponse = (0, safejson_1.safeJsonParse)(msg);\n            (0, log_1.logDebug)(`Engine ==>> addListener ==> success ==> ${jsonResponse}`);\n            this.handleResponse(event, jsonResponse);\n        }, function () {\n        });\n    }\n    setSessionConnectingListener(sessionConnectingListener) {\n        this.sessionConnectingListener = sessionConnectingListener;\n    }\n    addDisconnectListener(disconnecter) {\n        this.disconnectListener.push(disconnecter);\n    }\n    connectManagerDisconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.disconnect(fromRestore));\n        });\n    }\n    universalConnect(connectParams) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.disconnect(false));\n            try {\n                yield ((_b = this.connectionManager) === null || _b === void 0 ? void 0 : _b.connect());\n            }\n            catch (e) {\n                (0, log_1.logDebug)('Engine universalConnect error', e);\n                throw e;\n            }\n            (0, log_1.logDebug)('engin  universalConnect ==>> connectParams:', JSON.stringify(connectParams));\n            this.sendSession(connectParams);\n        });\n    }\n    openWallet(engineConnectInfo) {\n    }\n    sendSession(sessionInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            (0, log_1.logDebug)('[Connect] sendSession called:', sessionInfo);\n            const requestId = this.getRequestId();\n            let request = {\n                method: 'session_info',\n                params: { sessionInfo: sessionInfo }\n            };\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.sendRaw(JSON.stringify(Object.assign(Object.assign({}, request), { requestId: requestId }))));\n        });\n    }\n    bindRequestForPromise(requestId, resolve) {\n        this.pendingRequests.set(requestId, resolve);\n    }\n    send(request, requestAnswer, ttl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b;\n            (0, log_1.logDebug)('Engine ==>> send  request==>', JSON.stringify(request));\n            const requestId = this.getRequestId();\n            try {\n                let packageId = yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.send(JSON.stringify(Object.assign(Object.assign({}, request), { requestId: requestId })), ttl));\n                if (packageId) {\n                    (_b = this.connectionManager) === null || _b === void 0 ? void 0 : _b.events.once(packageId.toString(), (event) => {\n                        var _a;\n                        (0, log_1.logDebug)(`Engine ==> send => onAck => ${(0, safejson_1.safeJsonStringify)(event)}`);\n                        if (event && event.result) {\n                            (_a = requestAnswer.onAck) === null || _a === void 0 ? void 0 : _a.call(requestAnswer);\n                        }\n                    });\n                }\n                if (requestAnswer.resolve) {\n                    this.bindRequestForPromise(requestId, requestAnswer.resolve);\n                }\n            }\n            catch (e) {\n                return Promise.reject(e);\n            }\n        });\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.restoreConnect(sessionInfo.topic));\n            onConnectResult(sessionInfo);\n        });\n    }\n    restoreconnectFromTopic(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.restoreConnect(topic));\n        });\n    }\n    getRequestId() {\n        const requestId = Date.now().toString();\n        (0, log_1.logDebug)('Engine ==>> getRequestId ==>', requestId);\n        return requestId;\n    }\n    handleResponse(event, response) {\n        (0, log_1.logDebug)(`Engine ==>> handleResponse_1  ======>response: ${(0, safejson_1.safeJsonStringify)(response)}`, event);\n        if (\"requestId\" in response) {\n            (0, log_1.logDebug)(\"Engine ==>> handleResponse_2  ===> in response\");\n            let requestId = response.requestId;\n            const resolve = this.pendingRequests.get(requestId);\n            if (resolve) {\n                (0, log_1.logDebug)(\"Engine ==>> handleResponse_3  ===> find resolve:\", resolve);\n                resolve(response);\n                // 从pendingRequests中删除这个Promise\n                this.pendingRequests.delete(requestId);\n            }\n            else {\n                (0, log_1.logDebug)(\"Engine ==>> handleResponse_3  ===> not find resolve:\");\n                if (response.method === 'connect') {\n                    if (this.connectResultListener) {\n                        this.connectResultListener(response, this);\n                    }\n                }\n                else if (response.method === \"disconnect\") {\n                    this.disconnectListener.forEach(listener => listener());\n                    this.disconnectListener = [];\n                    this.clearData();\n                }\n                else if (response.method === \"session_connecting\") {\n                    (0, log_1.logDebug)(\"Engine ==>> handleResponse_4  ===> sessionConnectingListener\");\n                    if (this.sessionConnectingListener) {\n                        (0, log_1.logDebug)(\"Engine ==>> handleResponse_4  ===> sessionConnectingListener not null\");\n                        this.sessionConnectingListener();\n                        this.sessionConnectingListener = undefined;\n                    }\n                }\n            }\n        }\n    }\n    getCurrentConnectionReady() {\n        var _a;\n        return !!((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getCurrentConnectionReady());\n    }\n    saveSessionContent(key, data) {\n        var _a;\n        (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.saveSessionContent(key, data);\n    }\n    getSessionContent(key) {\n        var _a;\n        return (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getSessionContent(key);\n    }\n    setOnConnectResultListener(connectResultListener) {\n        this.connectResultListener = connectResultListener;\n    }\n    getTag() {\n        return \"\";\n    }\n    toJSON() {\n        return \"ws-connector\";\n    }\n    clearData() {\n        this.pendingRequests.clear();\n    }\n}\nexports.WsConnector = WsConnector;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SessionCrypto = void 0;\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst utils_1 = require(\"../utils/utils\");\nclass SessionCrypto {\n    constructor(keyPair = undefined) {\n        this.nonceLength = 24;\n        this.sessionKeyPair = keyPair ? this.createKeypairFromString(keyPair) : this.createKeypair();\n    }\n    createKeypair() {\n        return tweetnacl_1.default.box.keyPair();\n    }\n    createKeypairFromString(keyPair) {\n        return {\n            publicKey: (0, utils_1.hexToByteArray)(keyPair.publicKey),\n            secretKey: (0, utils_1.hexToByteArray)(keyPair.secretKey),\n        };\n    }\n    createNonce() {\n        return tweetnacl_1.default.randomBytes(this.nonceLength);\n    }\n    get keyPair() {\n        return this.sessionKeyPair;\n    }\n    // dapp 加密:\n    // base64(hex（nonce+加密内容）)\n    encrypt(message, receiverPublicKey) {\n        const encodedMessage = new TextEncoder().encode(message);\n        const nonce = this.createNonce();\n        const encrypted = tweetnacl_1.default.box(encodedMessage, nonce, (0, utils_1.hexToByteArray)(receiverPublicKey), this.keyPair.secretKey);\n        let concatInfo = (0, utils_1.concatUint8Arrays)(nonce, encrypted);\n        var hexResult = (0, utils_1.toHexString)(concatInfo);\n        var encodedResult = new TextEncoder().encode(hexResult);\n        return (0, utils_1.base64encode)(encodedResult, false);\n    }\n    // 钱包加密内容\n    // 注意：没有中间hex的环节\n    // base64（nonce+加密内容)\n    encryptWallet(message, receiverPublicKey) {\n        const encodedMessage = new TextEncoder().encode(message);\n        const nonce = this.createNonce();\n        const encrypted = tweetnacl_1.default.box(encodedMessage, nonce, (0, utils_1.hexToByteArray)(receiverPublicKey), this.keyPair.secretKey);\n        let concatInfo = (0, utils_1.concatUint8Arrays)(nonce, encrypted);\n        return (0, utils_1.base64encode)(concatInfo, false);\n    }\n    // dapp 解密\n    // base64(split(nonce+加密内容))\n    decrypt(message, senderPublicKey) {\n        let base64Content = (0, utils_1.base64decode)(message, true);\n        let messageByteArray = base64Content.toUint8Array();\n        const [nonce, internalMessage] = (0, utils_1.splitToUint8Arrays)(messageByteArray, this.nonceLength);\n        const decrypted = tweetnacl_1.default.box.open(internalMessage, nonce, (0, utils_1.hexToByteArray)(senderPublicKey), this.keyPair.secretKey);\n        if (!decrypted) {\n            throw new Error(`Decryption error: \\n message: ${message.toString()} \\n sender pubkey: ${senderPublicKey.toString()} \\n keypair pubkey: ${(0, utils_1.toHexString)(this.keyPair.publicKey)} \\n keypair secretkey: ${(0, utils_1.toHexString)(this.keyPair.secretKey)}`);\n        }\n        return new TextDecoder().decode(decrypted);\n    }\n    // dapp 解密\n    // base64(hextoByte(split(nonce+加密内容)))\n    decryptWallet(message, senderPublicKey) {\n        let base64Content = (0, utils_1.base64decode)(message, true);\n        let messageByteArray = (0, utils_1.hexToByteArray)(base64Content.toString());\n        const [nonce, internalMessage] = (0, utils_1.splitToUint8Arrays)(messageByteArray, this.nonceLength);\n        const decrypted = tweetnacl_1.default.box.open(internalMessage, nonce, (0, utils_1.hexToByteArray)(senderPublicKey), this.keyPair.secretKey);\n        if (!decrypted) {\n            throw new Error(`Decryption error: \\n message: ${message.toString()} \\n sender pubkey: ${senderPublicKey.toString()} \\n keypair pubkey: ${(0, utils_1.toHexString)(this.keyPair.publicKey)} \\n keypair secretkey: ${(0, utils_1.toHexString)(this.keyPair.secretKey)}`);\n        }\n        return new TextDecoder().decode(decrypted);\n    }\n    stringifyKeypair() {\n        return {\n            publicKey: (0, utils_1.toHexString)(this.keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(this.keyPair.secretKey)\n        };\n    }\n}\nexports.SessionCrypto = SessionCrypto;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./connect\"), exports);\n__exportStar(require(\"./protocol\"), exports);\n__exportStar(require(\"./utils\"), exports);\n__exportStar(require(\"./inject\"), exports);\n__exportStar(require(\"./connector\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AptosMethods = exports.SOLANAMethods = exports.Eip55Methods = void 0;\nexports.hasOKXInjectedProvider = hasOKXInjectedProvider;\nfunction hasOKXInjectedProvider() {\n    if (typeof getWindowProviderNamespace(\"okxwallet\") !== 'undefined') {\n        return true;\n    }\n    return false;\n}\nfunction getWindowProviderNamespace(namespace) {\n    const providerSearch = (provider, namespace) => {\n        const [property, ...path] = namespace.split('.');\n        const _provider = provider[property];\n        if (_provider) {\n            if (path.length === 0)\n                return _provider;\n            return providerSearch(_provider, path.join('.'));\n        }\n    };\n    if (typeof window !== 'undefined')\n        return providerSearch(window, namespace);\n}\nexports.Eip55Methods = [\n    \"personal_sign\",\n    \"eth_signTypedData_v4\",\n    \"eth_sendTransaction\",\n    \"wallet_addEthereumChain\",\n    \"wallet_watchAsset\",\n    \"wallet_switchEthereumChain\",\n    \"eth_requestAccounts\",\n    \"eth_accounts\",\n    \"eth_chainId\"\n];\nexports.SOLANAMethods = [\n    \"solana_signTransaction\",\n    \"solana_signMessage\",\n    \"solana_signAllTransactions\",\n    \"solana_signAndSendTransaction\"\n];\nexports.AptosMethods = [\n    \"aptos_signMessage\",\n    \"aptos_signTransaction\",\n    \"aptos_signAndSubmitTransaction\"\n];\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./InjectUtils\"), exports);\n__exportStar(require(\"./provider\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AptosProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nclass AptosProvider {\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                (0, utils_1.logDebug)(\"AptosProvider send request:\", (0, utils_1.safeJsonStringify)(request));\n                const method = request.method;\n                let result;\n                switch (method) {\n                    case \"aptos_signMessage\":\n                        {\n                            if (request.injectParams) {\n                                let message = yield window.okxwallet.aptos.signMessage(request.injectParams);\n                                result = {\n                                    method: request.method,\n                                    result: message.signature,\n                                };\n                                (0, utils_1.logDebug)(\"AptosProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                                return result;\n                            }\n                            else {\n                                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `param is error method: '${method}'`);\n                            }\n                        }\n                        break;\n                    case \"aptos_signTransaction\":\n                        {\n                            (0, utils_1.logDebug)(\"AptosProvider Method>>>> :\", method);\n                            let message = yield window.okxwallet.aptos.signTransaction(request.params);\n                            result = {\n                                method: request.method,\n                                result: message,\n                            };\n                            (0, utils_1.logDebug)(\"AptosProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                            return result;\n                        }\n                        break;\n                    case \"aptos_signAndSubmitTransaction\":\n                        {\n                            (0, utils_1.logDebug)(\"AptosProvider Method>>>> :\", method);\n                            let message = yield window.okxwallet.aptos.signAndSubmitTransaction(request.params);\n                            result = {\n                                method: request.method,\n                                result: message.hash,\n                            };\n                            (0, utils_1.logDebug)(\"AptosProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                            return result;\n                        }\n                        break;\n                    default:\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, ` method: '${method}'`);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"AptosProvider send error:\", error);\n                throw error;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    disconnect() {\n    }\n    resotreConnect() {\n        return Promise.resolve(undefined);\n    }\n}\nexports.AptosProvider = AptosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SolProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst media_1 = require(\"../../utils/media\");\nclass SolProvider {\n    // TOOD\n    // 问题: 是否需要切链  不切链, 主网 测试网络  sonic 如何区别\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                (0, utils_1.logDebug)(\"SolProvider send request:\", JSON.stringify(request));\n                const method = request.method;\n                let result;\n                if (request.injectParams) {\n                    switch (method) {\n                        case \"solana_signMessage\":\n                            {\n                                if (request.injectParams && typeof request.injectParams === 'object' && 'message' in request.injectParams) {\n                                    var message = (_a = request.injectParams) === null || _a === void 0 ? void 0 : _a.message;\n                                    const encodedMessage = new TextEncoder().encode(message);\n                                    const signedMessage = yield window.okxwallet.solana.signMessage(encodedMessage, \"utf8\");\n                                    result = {\n                                        method: request.method,\n                                        result: bs58_1.default.encode(signedMessage.signature),\n                                    };\n                                    (0, utils_1.logDebug)(\"SolProvider send result:\", JSON.stringify(signedMessage));\n                                    return result;\n                                }\n                                else {\n                                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `param is error method: '${method}'`);\n                                }\n                            }\n                            break;\n                        case \"solana_signTransaction\":\n                            {\n                                let bufferResult = yield window.okxwallet.solana.signTransaction(request.injectParams);\n                                (0, utils_1.logDebug)(\"SolProvider send bufferResult:\", JSON.stringify(bufferResult));\n                                result = {\n                                    method: request.method,\n                                    injectResult: bufferResult,\n                                };\n                                (0, utils_1.logDebug)(\"SolProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                                return result;\n                            }\n                            break;\n                        case \"solana_signAllTransactions\":\n                            {\n                                let allResult = yield window.okxwallet.solana.signAllTransactions(request.injectParams);\n                                (0, utils_1.logDebug)(\"SolProvider send result:\", (0, utils_1.safeJsonStringify)(allResult));\n                                result = {\n                                    method: request.method,\n                                    injectResult: allResult,\n                                };\n                                return result;\n                            }\n                            break;\n                        case \"solana_signAndSendTransaction\":\n                            {\n                                var signAndSendResult = yield window.okxwallet.solana.signAndSendTransaction(request.injectParams);\n                                (0, utils_1.logDebug)(\"SolProvider send result:\", (0, utils_1.safeJsonStringify)(signAndSendResult));\n                                result = {\n                                    method: request.method,\n                                    injectResult: signAndSendResult,\n                                };\n                                return result;\n                            }\n                            break;\n                        default:\n                            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, `method: '${method}'`);\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `param is error method: '${method}'`);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"SolProvider send error:\", error);\n                throw error;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    disconnect() {\n    }\n    resotreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            const provider = window.okxwallet.solana;\n            return provider.connect();\n        }\n        return Promise.resolve();\n    }\n}\nexports.SolProvider = SolProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Eip155Provider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst media_1 = require(\"../../utils/media\");\nclass Eip155Provider {\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                (0, utils_1.logDebug)(\"Eip155Provider send request:\", (0, utils_1.safeJsonStringify)(request));\n                let ethParams = null;\n                switch (request.method) {\n                    case \"personal_sign\":\n                        if (request.params && \"message\" in request.params) {\n                            ethParams = {\n                                method: request.method,\n                                params: [\n                                    request.params.message,\n                                    request.address,\n                                ],\n                            };\n                        }\n                        break;\n                    case \"eth_sendTransaction\":\n                    case \"wallet_addEthereumChain\":\n                    case \"wallet_switchEthereumChain\":\n                        {\n                            if (request.params) {\n                                ethParams = {\n                                    method: request.method,\n                                    params: [request.params],\n                                };\n                            }\n                        }\n                        break;\n                    case \"eth_signTypedData_v4\":\n                        {\n                            if (request.params && \"typedDataJson\" in request.params && ((_a = request.params) === null || _a === void 0 ? void 0 : _a.typedDataJson) && typeof request.params.typedDataJson === \"string\") {\n                                ethParams = {\n                                    method: request.method,\n                                    params: [\n                                        request.address,\n                                        request.params.typedDataJson,\n                                    ],\n                                };\n                            }\n                        }\n                        break;\n                    case \"wallet_watchAsset\":\n                        {\n                            if (request.params) {\n                                ethParams = {\n                                    method: request.method,\n                                    params: request.params,\n                                };\n                            }\n                        }\n                        break;\n                    default:\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n                if (ethParams) {\n                    // 特殊处理 \"wallet_switchEthereumChain\"\n                    if ((request.method === \"wallet_switchEthereumChain\" || request.method === \"wallet_addEthereumChain\")\n                        && request.params\n                        && \"chainId\" in request.params) {\n                        (0, utils_1.logDebug)(\"Eip155Provider send request switch requestParams:\", (0, utils_1.safeJsonStringify)(ethParams));\n                        const switchChainId = parseInt(request.params.chainId, 16).toString();\n                        yield window.okxwallet.request(ethParams);\n                        const resultSwitch = `eip155:${switchChainId}:${request.address}`;\n                        (0, utils_1.logDebug)(\"Eip155Provider send request switch result:\", resultSwitch);\n                        return {\n                            result: resultSwitch,\n                            method: request.method,\n                        };\n                    }\n                    else {\n                        const chain = (0, utils_1.getChainId)(request.chainId);\n                        const chainHex = `0x${Number(chain).toString(16)}`;\n                        (0, utils_1.logDebug)(\"Eip155Provider current chainId:\", chain, chainHex);\n                        if (chainHex) {\n                            yield window.okxwallet.request({\n                                method: \"wallet_switchEthereumChain\",\n                                params: [{ chainId: chainHex }],\n                            });\n                            (0, utils_1.logDebug)(\"Eip155Provider send request requestParams:\", chainHex, (0, utils_1.safeJsonStringify)(ethParams));\n                            const resultMe = yield window.okxwallet.request(ethParams);\n                            (0, utils_1.logDebug)(\"Eip155Provider send request result:\", (0, utils_1.safeJsonStringify)(resultMe));\n                            return {\n                                result: resultMe,\n                                method: request.method,\n                            };\n                        }\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"Eip155Provider encountered an error:\", error);\n                throw error;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    disconnect() {\n    }\n    resotreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return window.okxwallet.request({ method: 'eth_requestAccounts' });\n        }\n        return Promise.resolve();\n    }\n}\nexports.Eip155Provider = Eip155Provider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./eip155Provider\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HIDE_INJECTED_WALLET_CHAINS = exports.TON_CHAINS = exports.COSMOS_CHAINS = exports.APTOS_CHAINS = exports.SUI_CHAINS = exports.SOLANA_CHAINS = exports.BTC_CHAINS = void 0;\nexports.BTC_CHAINS = {\n    MAINNET: 'btc:mainnet',\n    FRACTAL: 'fractal:mainnet',\n};\nexports.SOLANA_CHAINS = {\n    MAINNET: 'solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp',\n    TESTNET: 'solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z',\n    SONIC_TESTNET: 'sonic:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z'\n};\nexports.SUI_CHAINS = {\n    MAINNET: 'sui:mainnet'\n};\nexports.APTOS_CHAINS = {\n    MAINNET: 'aptos:mainnet' // aptos mainnet\n};\nexports.COSMOS_CHAINS = {\n    COSMOS_MAINNET: 'cosmos:cosmoshub-4'\n};\nexports.TON_CHAINS = {\n    MAINNET: 'ton:-239', // mainnet\n};\nexports.HIDE_INJECTED_WALLET_CHAINS = [\n    exports.SOLANA_CHAINS.SONIC_TESTNET,\n    exports.SOLANA_CHAINS.TESTNET\n];\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IEngine = exports.ISignClient = exports.ISignClientEvents = exports.IEngineEvents = void 0;\nconst eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\nclass IEngineEvents extends eventemitter3_1.default {\n    constructor() {\n        super();\n    }\n}\nexports.IEngineEvents = IEngineEvents;\nclass ISignClientEvents extends eventemitter3_1.default {\n    constructor() {\n        super();\n    }\n}\nexports.ISignClientEvents = ISignClientEvents;\nclass ISignClient {\n    constructor(data) {\n        this.data = data;\n    }\n}\nexports.ISignClient = ISignClient;\nclass IEngine {\n    constructor(client) {\n        this.client = client;\n    }\n}\nexports.IEngine = IEngine;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.creatOKXInjectWalletInfo = exports.creatOKXMiniAppWalletInfo = exports.creatOKXWalletInfo = exports.ISignClientEvents = exports.IEngine = exports.IEngineEvents = exports.ISignClient = exports.getBigIntRpcId = exports.formatJsonRpcRequest = exports.isJsonRpcError = exports.isJsonRpcResponse = exports.parseConnectionError = exports.isHttpUrl = exports.formatJsonRpcError = void 0;\nvar json_rpc_1 = require(\"./json-rpc\");\nObject.defineProperty(exports, \"formatJsonRpcError\", { enumerable: true, get: function () { return json_rpc_1.formatJsonRpcError; } });\nObject.defineProperty(exports, \"isHttpUrl\", { enumerable: true, get: function () { return json_rpc_1.isHttpUrl; } });\nObject.defineProperty(exports, \"parseConnectionError\", { enumerable: true, get: function () { return json_rpc_1.parseConnectionError; } });\nObject.defineProperty(exports, \"isJsonRpcResponse\", { enumerable: true, get: function () { return json_rpc_1.isJsonRpcResponse; } });\nObject.defineProperty(exports, \"isJsonRpcError\", { enumerable: true, get: function () { return json_rpc_1.isJsonRpcError; } });\nObject.defineProperty(exports, \"formatJsonRpcRequest\", { enumerable: true, get: function () { return json_rpc_1.formatJsonRpcRequest; } });\nObject.defineProperty(exports, \"getBigIntRpcId\", { enumerable: true, get: function () { return json_rpc_1.getBigIntRpcId; } });\nvar engine_1 = require(\"./engine\");\nObject.defineProperty(exports, \"ISignClient\", { enumerable: true, get: function () { return engine_1.ISignClient; } });\nObject.defineProperty(exports, \"IEngineEvents\", { enumerable: true, get: function () { return engine_1.IEngineEvents; } });\nObject.defineProperty(exports, \"IEngine\", { enumerable: true, get: function () { return engine_1.IEngine; } });\nObject.defineProperty(exports, \"ISignClientEvents\", { enumerable: true, get: function () { return engine_1.ISignClientEvents; } });\n__exportStar(require(\"./ton\"), exports);\nvar wallet_info_1 = require(\"./wallet-info\");\nObject.defineProperty(exports, \"creatOKXWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXWalletInfo; } });\nObject.defineProperty(exports, \"creatOKXMiniAppWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXMiniAppWalletInfo; } });\nObject.defineProperty(exports, \"creatOKXInjectWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXInjectWalletInfo; } });\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isJsonRpcPayload = isJsonRpcPayload;\nexports.isJsonRpcRequest = isJsonRpcRequest;\nexports.isJsonRpcResponse = isJsonRpcResponse;\nexports.isJsonRpcResult = isJsonRpcResult;\nexports.isJsonRpcError = isJsonRpcError;\nexports.payloadId = payloadId;\nexports.getBigIntRpcId = getBigIntRpcId;\nexports.formatJsonRpcRequest = formatJsonRpcRequest;\nexports.formatJsonRpcResult = formatJsonRpcResult;\nexports.formatJsonRpcError = formatJsonRpcError;\nexports.isReservedErrorCode = isReservedErrorCode;\nexports.getError = getError;\nexports.getErrorByCode = getErrorByCode;\nexports.formatErrorMessage = formatErrorMessage;\nexports.isHttpUrl = isHttpUrl;\nexports.isWsUrl = isWsUrl;\nexports.parseConnectionError = parseConnectionError;\nfunction isJsonRpcPayload(payload) {\n    return (typeof payload === \"object\" &&\n        \"id\" in payload &&\n        \"jsonrpc\" in payload &&\n        payload.jsonrpc === \"2.0\");\n}\nfunction isJsonRpcRequest(payload) {\n    return isJsonRpcPayload(payload) && \"method\" in payload;\n}\nfunction isJsonRpcResponse(payload) {\n    return isJsonRpcPayload(payload) && (isJsonRpcResult(payload) || isJsonRpcError(payload));\n}\nfunction isJsonRpcResult(payload) {\n    return \"result\" in payload;\n}\nfunction isJsonRpcError(payload) {\n    return \"error\" in payload;\n}\nconst okx_connect_error_1 = require(\"../error/okx-connect.error\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nclass IncrementalRandomGenerator {\n    constructor(bits) {\n        this.i = 1;\n        const typedArray = bits === 8 ? new Uint8Array(1) : bits === 16 ? new Uint16Array(1) : new Uint32Array(1);\n        if (bits) {\n            this.initialValue = tweetnacl_1.default.randomBytes(bits / 8)[0];\n        }\n        else {\n            this.initialValue = 0;\n        }\n    }\n    getNextValue() {\n        return this.initialValue + this.i++;\n    }\n}\nconst uint8Generator = new IncrementalRandomGenerator(8);\nconst uint16Generator = new IncrementalRandomGenerator(16);\nfunction payloadId() {\n    const date = Date.now() * 1000;\n    const extra = uint8Generator.getNextValue();\n    return date + extra;\n}\nfunction getBigIntRpcId() {\n    const date = BigInt(Date.now()) * BigInt(1000000);\n    const extra = BigInt(uint16Generator.getNextValue());\n    return date + extra;\n}\nfunction formatJsonRpcRequest(method, params, id) {\n    return {\n        id: id || payloadId(),\n        jsonrpc: \"2.0\",\n        method,\n        params,\n    };\n}\nfunction formatJsonRpcResult(id, result) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        result,\n    };\n}\nfunction formatJsonRpcError(id, error, data) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        error: formatErrorMessage(error, data),\n    };\n}\nfunction isReservedErrorCode(code) {\n    return okx_connect_error_1.RESERVED_ERROR_CODES.includes(code);\n}\nfunction getError(type) {\n    if (!Object.keys(okx_connect_error_1.STANDARD_ERROR_MAP).includes(type)) {\n        return okx_connect_error_1.STANDARD_ERROR_MAP[okx_connect_error_1.DEFAULT_ERROR];\n    }\n    return okx_connect_error_1.STANDARD_ERROR_MAP[type];\n}\nfunction getErrorByCode(code) {\n    const match = Object.values(okx_connect_error_1.STANDARD_ERROR_MAP).find((e) => e.code === code);\n    if (!match) {\n        return okx_connect_error_1.STANDARD_ERROR_MAP[okx_connect_error_1.DEFAULT_ERROR];\n    }\n    return match;\n}\nfunction formatErrorMessage(error, data) {\n    if (typeof error === \"undefined\") {\n        return getError(okx_connect_error_1.INTERNAL_ERROR);\n    }\n    if (typeof error === \"string\") {\n        error = Object.assign(Object.assign({}, getError(okx_connect_error_1.SERVER_ERROR)), { message: error });\n    }\n    if (typeof data !== \"undefined\") {\n        error.data = data;\n    }\n    if (isReservedErrorCode(error.code)) {\n        error = getErrorByCode(error.code);\n    }\n    return error;\n}\nfunction getUrlProtocol(url) {\n    const matches = url.match(new RegExp(/^\\w+:/, \"gi\"));\n    if (!matches || !matches.length)\n        return;\n    return matches[0];\n}\nfunction matchRegexProtocol(url, regex) {\n    const protocol = getUrlProtocol(url);\n    if (typeof protocol === \"undefined\")\n        return false;\n    return new RegExp(regex).test(protocol);\n}\nfunction isHttpUrl(url) {\n    return matchRegexProtocol(url, \"^https?:\");\n}\nfunction isWsUrl(url) {\n    return matchRegexProtocol(url, \"^wss?:\");\n}\nfunction parseConnectionError(e, url, type) {\n    return e.message.includes(\"getaddrinfo ENOTFOUND\") || e.message.includes(\"connect ECONNREFUSED\")\n        ? new Error(`Unavailable ${type} RPC url at ${url}`)\n        : e;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_ITEM_ERROR_CODES = void 0;\nvar CONNECT_ITEM_ERROR_CODES;\n(function (CONNECT_ITEM_ERROR_CODES) {\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n})(CONNECT_ITEM_ERROR_CODES || (exports.CONNECT_ITEM_ERROR_CODES = CONNECT_ITEM_ERROR_CODES = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TONCHAIN = void 0;\nvar TONCHAIN;\n(function (TONCHAIN) {\n    TONCHAIN[\"MAINNET\"] = \"-239\";\n})(TONCHAIN || (exports.TONCHAIN = TONCHAIN = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_ITEM_ERROR_CODES = exports.TONCHAIN = void 0;\nvar connect_wallet_1 = require(\"./connect-wallet\");\nObject.defineProperty(exports, \"TONCHAIN\", { enumerable: true, get: function () { return connect_wallet_1.TONCHAIN; } });\nvar connect_event_1 = require(\"./connect-event\");\nObject.defineProperty(exports, \"CONNECT_ITEM_ERROR_CODES\", { enumerable: true, get: function () { return connect_event_1.CONNECT_ITEM_ERROR_CODES; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXInjectWalletName = exports.OKXMiniWalletName = exports.OKXWalletName = void 0;\nexports.creatOKXWalletInfo = creatOKXWalletInfo;\nexports.creatOKXMiniAppWalletInfo = creatOKXMiniAppWalletInfo;\nexports.creatOKXInjectWalletInfo = creatOKXInjectWalletInfo;\nexports.OKXWalletName = \"OKX Wallet\";\nexports.OKXMiniWalletName = \"OKX Mini Wallet\";\nexports.OKXInjectWalletName = \"OKX Inject Wallet\";\nfunction creatOKXWalletInfo() {\n    return {\n        \"appName\": \"okxAppWallet\",\n        \"name\": exports.OKXWalletName,\n        \"imageUrl\": \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\"\n    };\n}\nfunction creatOKXMiniAppWalletInfo() {\n    return {\n        \"appName\": \"okxMiniApp\",\n        \"name\": exports.OKXMiniWalletName,\n        \"imageUrl\": \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\"\n    };\n}\nfunction creatOKXInjectWalletInfo() {\n    return {\n        \"appName\": \"okxInjectWallet\",\n        \"name\": exports.OKXInjectWalletName,\n        \"imageUrl\": \"\"\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.stackDeepLink = exports.tgwalletAppName = exports.tgwalletName = exports.tonConnectSdkVersion = exports.shortUniversalLink = exports.standardDeeplink = exports.downloadUrl = exports.standardUniversalLink = exports.okxDeeplink = void 0;\nexports.getTestTwaUrl = getTestTwaUrl;\nexports.getTestTgTwaUrl = getTestTgTwaUrl;\nexports.okxDeeplink = 'okx://web3';\nexports.standardUniversalLink = typeof window !== \"undefined\" && window.location.hostname.includes(\"okx.com\")\n    ? \"https://link.okx.com/download\"\n    : \"https://www.okx.com/download\";\nexports.downloadUrl = \"https://www.okx.com/download\";\n// export const standardUniversalLink = 'http://localhost:5173';\nexports.standardDeeplink = `${exports.okxDeeplink}/wallet/connect`;\nexports.shortUniversalLink = `https://www.okx.com/ul/connect`;\n// export const standardDeeplink = 'http://localhost:5173';\nexports.tonConnectSdkVersion = '1';\n// export const tgwalletName: string = \"TCTestqdqwdqwdqBot\"\nexports.tgwalletName = \"OKX_WALLET_BOT\";\nexports.tgwalletAppName = \"start\";\n// https://t.me/OKX_WALLET_BOT/start\nexports.stackDeepLink = 'okx://web3?stack=true';\nfunction getTestTwaUrl() {\n    return window.okxTesttwaUrl;\n}\nfunction getTestTgTwaUrl() {\n    return window.okxTestTgtwaUrl;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_CONNECT_ERROR_CODES = exports.OKXConnectError = void 0;\nvar okx_connect_error_1 = require(\"./okx-connect.error\");\nObject.defineProperty(exports, \"OKXConnectError\", { enumerable: true, get: function () { return okx_connect_error_1.OKXConnectError; } });\nObject.defineProperty(exports, \"OKX_CONNECT_ERROR_CODES\", { enumerable: true, get: function () { return okx_connect_error_1.OKX_CONNECT_ERROR_CODES; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEFAULT_ERROR = exports.STANDARD_ERROR_MAP = exports.SERVER_ERROR_CODE_RANGE = exports.RESERVED_ERROR_CODES = exports.SERVER_ERROR = exports.INTERNAL_ERROR = exports.INVALID_PARAMS = exports.METHOD_NOT_FOUND = exports.INVALID_REQUEST = exports.PARSE_ERROR = exports.OKX_CONNECT_ERROR_CODES = exports.OKXConnectError = void 0;\nclass OKXConnectError extends Error {\n    constructor(code, message) {\n        if (message == undefined) {\n            message = getDefaultMessageByCode(code);\n        }\n        super(message);\n        this.code = code;\n        this.message = `${OKXConnectError.prefix} ${message ? '\\n' + message : ''}`;\n        Object.setPrototypeOf(this, OKXConnectError.prototype);\n    }\n    toJSON() {\n        return {\n            message: this.message,\n            code: this.code\n        };\n    }\n}\nexports.OKXConnectError = OKXConnectError;\nOKXConnectError.prefix = '[OKX_CONNECT_SDK_ERROR]';\nfunction getDefaultMessageByCode(code) {\n    if (code == OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR) {\n        return \"unknown error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR) {\n        return \"bad request error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.ALREADY_CONNECTED_ERROR) {\n        return \"already connected error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR) {\n        return \"not connected error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.UNKNOWN_APP_ERROR) {\n        return \"unknown app error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n        return \"user rejects error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED) {\n        return \"method not supported\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.CONNECTION_ERROR) {\n        return \"connect error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED) {\n        return \"chain not supported\";\n    }\n    return \"unknown error\";\n}\nvar OKX_CONNECT_ERROR_CODES;\n(function (OKX_CONNECT_ERROR_CODES) {\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"BAD_REQUEST_ERROR\"] = 1] = \"BAD_REQUEST_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"ALREADY_CONNECTED_ERROR\"] = 11] = \"ALREADY_CONNECTED_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"NOT_CONNECTED_ERROR\"] = 12] = \"NOT_CONNECTED_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"UNKNOWN_APP_ERROR\"] = 100] = \"UNKNOWN_APP_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"USER_REJECTS_ERROR\"] = 300] = \"USER_REJECTS_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"CHAIN_NOT_SUPPORTED\"] = 500] = \"CHAIN_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"WALLET_NOT_SUPPORTED\"] = 600] = \"WALLET_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"CONNECTION_ERROR\"] = 700] = \"CONNECTION_ERROR\";\n})(OKX_CONNECT_ERROR_CODES || (exports.OKX_CONNECT_ERROR_CODES = OKX_CONNECT_ERROR_CODES = {}));\nexports.PARSE_ERROR = \"PARSE_ERROR\";\nexports.INVALID_REQUEST = \"INVALID_REQUEST\";\nexports.METHOD_NOT_FOUND = \"METHOD_NOT_FOUND\";\nexports.INVALID_PARAMS = \"INVALID_PARAMS\";\nexports.INTERNAL_ERROR = \"INTERNAL_ERROR\";\nexports.SERVER_ERROR = \"SERVER_ERROR\";\nexports.RESERVED_ERROR_CODES = [-32700, -32600, -32601, -32602, -32603];\nexports.SERVER_ERROR_CODE_RANGE = [-32000, -32099];\nexports.STANDARD_ERROR_MAP = {\n    [exports.PARSE_ERROR]: { code: -32700, message: \"Parse error\" },\n    [exports.INVALID_REQUEST]: { code: -32600, message: \"Invalid Request\" },\n    [exports.METHOD_NOT_FOUND]: { code: -32601, message: \"Method not found\" },\n    [exports.INVALID_PARAMS]: { code: -32602, message: \"Invalid params\" },\n    [exports.INTERNAL_ERROR]: { code: -32603, message: \"Internal error\" },\n    [exports.SERVER_ERROR]: { code: -32000, message: \"Server error\" },\n};\nexports.DEFAULT_ERROR = exports.SERVER_ERROR;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HIDE_INJECTED_WALLET_CHAINS = exports.TON_CHAINS = exports.COSMOS_CHAINS = exports.APTOS_CHAINS = exports.SUI_CHAINS = exports.SOLANA_CHAINS = exports.BTC_CHAINS = exports.downloadUrl = exports.okxDeeplink = exports.tonConnectSdkVersion = exports.standardDeeplink = exports.standardUniversalLink = exports.NameSpaceKeyTron = exports.NameSpaceKeyCosmos = exports.NameSpaceKeyAptos = exports.NameSpaceKeyBtc = exports.NameSpaceKeySui = exports.NameSpaceKeyTON = exports.NameSpaceKeySOL = exports.NameSpaceKeyEip155 = void 0;\n__exportStar(require(\"./error\"), exports);\nvar misc_1 = require(\"./misc\");\nObject.defineProperty(exports, \"NameSpaceKeyEip155\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyEip155; } });\nObject.defineProperty(exports, \"NameSpaceKeySOL\", { enumerable: true, get: function () { return misc_1.NameSpaceKeySOL; } });\nObject.defineProperty(exports, \"NameSpaceKeyTON\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyTON; } });\nObject.defineProperty(exports, \"NameSpaceKeySui\", { enumerable: true, get: function () { return misc_1.NameSpaceKeySui; } });\nObject.defineProperty(exports, \"NameSpaceKeyBtc\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyBtc; } });\nObject.defineProperty(exports, \"NameSpaceKeyAptos\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyAptos; } });\nObject.defineProperty(exports, \"NameSpaceKeyCosmos\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyCosmos; } });\nObject.defineProperty(exports, \"NameSpaceKeyTron\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyTron; } });\nvar constants_1 = require(\"./constants\");\nObject.defineProperty(exports, \"standardUniversalLink\", { enumerable: true, get: function () { return constants_1.standardUniversalLink; } });\nObject.defineProperty(exports, \"standardDeeplink\", { enumerable: true, get: function () { return constants_1.standardDeeplink; } });\nObject.defineProperty(exports, \"tonConnectSdkVersion\", { enumerable: true, get: function () { return constants_1.tonConnectSdkVersion; } });\nObject.defineProperty(exports, \"okxDeeplink\", { enumerable: true, get: function () { return constants_1.okxDeeplink; } });\nObject.defineProperty(exports, \"downloadUrl\", { enumerable: true, get: function () { return constants_1.downloadUrl; } });\n__exportStar(require(\"./connect\"), exports);\nvar chains_1 = require(\"./chains\");\nObject.defineProperty(exports, \"BTC_CHAINS\", { enumerable: true, get: function () { return chains_1.BTC_CHAINS; } });\nObject.defineProperty(exports, \"SOLANA_CHAINS\", { enumerable: true, get: function () { return chains_1.SOLANA_CHAINS; } });\nObject.defineProperty(exports, \"SUI_CHAINS\", { enumerable: true, get: function () { return chains_1.SUI_CHAINS; } });\nObject.defineProperty(exports, \"APTOS_CHAINS\", { enumerable: true, get: function () { return chains_1.APTOS_CHAINS; } });\nObject.defineProperty(exports, \"COSMOS_CHAINS\", { enumerable: true, get: function () { return chains_1.COSMOS_CHAINS; } });\nObject.defineProperty(exports, \"TON_CHAINS\", { enumerable: true, get: function () { return chains_1.TON_CHAINS; } });\nObject.defineProperty(exports, \"HIDE_INJECTED_WALLET_CHAINS\", { enumerable: true, get: function () { return chains_1.HIDE_INJECTED_WALLET_CHAINS; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NameSpaceKeyTron = exports.NameSpaceKeyCosmos = exports.NameSpaceKeyAptos = exports.NameSpaceKeyBtc = exports.NameSpaceKeySui = exports.NameSpaceKeyTON = exports.NameSpaceKeySOL = exports.NameSpaceKeyEip155 = void 0;\nexports.NameSpaceKeyEip155 = \"eip155\";\nexports.NameSpaceKeySOL = \"solana\";\nexports.NameSpaceKeyTON = \"ton\";\nexports.NameSpaceKeySui = \"sui\";\nexports.NameSpaceKeyBtc = \"btc\";\nexports.NameSpaceKeyAptos = \"aptos\";\nexports.NameSpaceKeyCosmos = \"cosmos\";\nexports.NameSpaceKeyTron = \"tron\";\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.callForSuccess = callForSuccess;\nexports.delay = delay;\n/**\n * Function to call ton api until we get response.\n * Because ton network is pretty unstable we need to make sure response is final.\n * @param {T} fn - function to call\n * @param {CallForSuccessOptions} [options] - optional configuration options\n */\nfunction callForSuccess(fn, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b;\n        const attempts = (_a = options === null || options === void 0 ? void 0 : options.attempts) !== null && _a !== void 0 ? _a : 3;\n        const delayMs = (_b = options === null || options === void 0 ? void 0 : options.delayMs) !== null && _b !== void 0 ? _b : 800;\n        if (typeof fn !== 'function') {\n            throw new Error(`Expected a function, got ${typeof fn}`);\n        }\n        let i = 0;\n        let lastError;\n        while (i < attempts) {\n            try {\n                return yield fn();\n            }\n            catch (err) {\n                lastError = err;\n                i++;\n                if (i < attempts) {\n                    yield delay(delayMs);\n                }\n            }\n        }\n        throw lastError;\n    });\n}\n/**\n * Delays the execution of code for a specified number of milliseconds.\n * @param {number} timeout - The number of milliseconds to delay the execution.\n * @param {DelayOptions} [options] - Optional configuration options for the delay.\n * @return {Promise<void>} - A promise that resolves after the specified delay, or rejects if the delay is aborted.\n */\nfunction delay(timeout, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            var _a, _b;\n            if ((_a = options === null || options === void 0 ? void 0 : options.signal) === null || _a === void 0 ? void 0 : _a.aborted) {\n                reject(new Error('Delay aborted'));\n                return;\n            }\n            const timeoutId = setTimeout(() => resolve(), timeout);\n            (_b = options === null || options === void 0 ? void 0 : options.signal) === null || _b === void 0 ? void 0 : _b.addEventListener('abort', () => {\n                clearTimeout(timeoutId);\n                reject(new Error('Delay aborted'));\n            });\n        });\n    });\n}\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkMetaData = exports.versionCompare = exports.isBrowser = exports.isOS = exports.isMobileUserAgent = exports.openDeeplinkWithFallback = exports.openLinkBlank = exports.openLink = exports.getChainId = exports.useShortLink = exports.toSafeBase64FromBase64 = exports.isValidObject = exports.isIos = exports.base64decode = exports.base64encode = exports.splitToUint8Arrays = exports.concatUint8Arrays = exports.toHexString = exports.hexToByteArray = exports.getOKXLink = exports.openOKXUniversalLink = exports.getAppWalletShortDeepLink = exports.encodeTWAConnectURLParams = exports.encodeConnectParams = exports.openOKXTMAWalletlinkWithFallback = exports.getTelegramWalletTWAUrl = exports.getAppWalletDeepLink = exports.encodeTelegramUrlParameters = exports.isTelegramUrl = exports.openOKXDeeplinkWithFallback = exports.openOKXDeeplink = exports.getUniversalLink = exports.safeJsonStringify = exports.safeJsonParse = exports.getDefaultReporter = exports.reportEvent = exports.reportLog = exports.logWarning = exports.logError = exports.logDebug = exports.callForSuccess = void 0;\nvar call_for_success_1 = require(\"./call-for-success\");\nObject.defineProperty(exports, \"callForSuccess\", { enumerable: true, get: function () { return call_for_success_1.callForSuccess; } });\nvar log_1 = require(\"./log\");\nObject.defineProperty(exports, \"logDebug\", { enumerable: true, get: function () { return log_1.logDebug; } });\nObject.defineProperty(exports, \"logError\", { enumerable: true, get: function () { return log_1.logError; } });\nObject.defineProperty(exports, \"logWarning\", { enumerable: true, get: function () { return log_1.logWarning; } });\nObject.defineProperty(exports, \"reportLog\", { enumerable: true, get: function () { return log_1.reportLog; } });\nObject.defineProperty(exports, \"reportEvent\", { enumerable: true, get: function () { return log_1.reportEvent; } });\nObject.defineProperty(exports, \"getDefaultReporter\", { enumerable: true, get: function () { return log_1.getDefaultReporter; } });\n__exportStar(require(\"./reportconstants\"), exports);\n__exportStar(require(\"./report\"), exports);\nvar safejson_1 = require(\"./safejson\");\nObject.defineProperty(exports, \"safeJsonParse\", { enumerable: true, get: function () { return safejson_1.safeJsonParse; } });\nObject.defineProperty(exports, \"safeJsonStringify\", { enumerable: true, get: function () { return safejson_1.safeJsonStringify; } });\nvar url_1 = require(\"./url\");\nObject.defineProperty(exports, \"getUniversalLink\", { enumerable: true, get: function () { return url_1.getUniversalLink; } });\nObject.defineProperty(exports, \"openOKXDeeplink\", { enumerable: true, get: function () { return url_1.openOKXDeeplink; } });\nObject.defineProperty(exports, \"openOKXDeeplinkWithFallback\", { enumerable: true, get: function () { return url_1.openOKXDeeplinkWithFallback; } });\nObject.defineProperty(exports, \"isTelegramUrl\", { enumerable: true, get: function () { return url_1.isTelegramUrl; } });\nObject.defineProperty(exports, \"encodeTelegramUrlParameters\", { enumerable: true, get: function () { return url_1.encodeTelegramUrlParameters; } });\nObject.defineProperty(exports, \"getAppWalletDeepLink\", { enumerable: true, get: function () { return url_1.getAppWalletDeepLink; } });\nObject.defineProperty(exports, \"getTelegramWalletTWAUrl\", { enumerable: true, get: function () { return url_1.getTelegramWalletTWAUrl; } });\nObject.defineProperty(exports, \"openOKXTMAWalletlinkWithFallback\", { enumerable: true, get: function () { return url_1.openOKXTMAWalletlinkWithFallback; } });\nObject.defineProperty(exports, \"encodeConnectParams\", { enumerable: true, get: function () { return url_1.encodeConnectParams; } });\nObject.defineProperty(exports, \"encodeTWAConnectURLParams\", { enumerable: true, get: function () { return url_1.encodeTWAConnectURLParams; } });\nObject.defineProperty(exports, \"getAppWalletShortDeepLink\", { enumerable: true, get: function () { return url_1.getAppWalletShortDeepLink; } });\nObject.defineProperty(exports, \"openOKXUniversalLink\", { enumerable: true, get: function () { return url_1.openOKXUniversalLink; } });\nObject.defineProperty(exports, \"getOKXLink\", { enumerable: true, get: function () { return url_1.getOKXLink; } });\nvar utils_1 = require(\"./utils\");\nObject.defineProperty(exports, \"hexToByteArray\", { enumerable: true, get: function () { return utils_1.hexToByteArray; } });\nObject.defineProperty(exports, \"toHexString\", { enumerable: true, get: function () { return utils_1.toHexString; } });\nObject.defineProperty(exports, \"concatUint8Arrays\", { enumerable: true, get: function () { return utils_1.concatUint8Arrays; } });\nObject.defineProperty(exports, \"splitToUint8Arrays\", { enumerable: true, get: function () { return utils_1.splitToUint8Arrays; } });\nObject.defineProperty(exports, \"base64encode\", { enumerable: true, get: function () { return utils_1.base64encode; } });\nObject.defineProperty(exports, \"base64decode\", { enumerable: true, get: function () { return utils_1.base64decode; } });\nObject.defineProperty(exports, \"isIos\", { enumerable: true, get: function () { return utils_1.isIos; } });\nObject.defineProperty(exports, \"isValidObject\", { enumerable: true, get: function () { return utils_1.isValidObject; } });\nObject.defineProperty(exports, \"toSafeBase64FromBase64\", { enumerable: true, get: function () { return utils_1.toSafeBase64FromBase64; } });\nObject.defineProperty(exports, \"useShortLink\", { enumerable: true, get: function () { return utils_1.useShortLink; } });\nObject.defineProperty(exports, \"getChainId\", { enumerable: true, get: function () { return utils_1.getChainId; } });\nvar web_api_1 = require(\"./web-api\");\nObject.defineProperty(exports, \"openLink\", { enumerable: true, get: function () { return web_api_1.openLink; } });\nObject.defineProperty(exports, \"openLinkBlank\", { enumerable: true, get: function () { return web_api_1.openLinkBlank; } });\nObject.defineProperty(exports, \"openDeeplinkWithFallback\", { enumerable: true, get: function () { return web_api_1.openDeeplinkWithFallback; } });\nObject.defineProperty(exports, \"isMobileUserAgent\", { enumerable: true, get: function () { return web_api_1.isMobileUserAgent; } });\nObject.defineProperty(exports, \"isOS\", { enumerable: true, get: function () { return web_api_1.isOS; } });\nObject.defineProperty(exports, \"isBrowser\", { enumerable: true, get: function () { return web_api_1.isBrowser; } });\nvar tma_api_1 = require(\"./tma-api\");\nObject.defineProperty(exports, \"versionCompare\", { enumerable: true, get: function () { return tma_api_1.versionCompare; } });\nvar request_1 = require(\"./request\");\nObject.defineProperty(exports, \"checkMetaData\", { enumerable: true, get: function () { return request_1.checkMetaData; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getDefaultReporter = getDefaultReporter;\nexports.logDebug = logDebug;\nexports.logError = logError;\nexports.logWarning = logWarning;\nexports.reportEvent = reportEvent;\nexports.reportLog = reportLog;\nconst debug = false;\nconst forceReport = false;\nconst report_1 = require(\"./report\");\nconst defaultReporter = new report_1.OKXReporter();\nfunction getDefaultReporter() {\n    return defaultReporter;\n}\nconst packageJson = require('../../package.json');\nconst version = packageJson.version;\nfunction logDebug(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.log(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction logError(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.error(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n            if (forceReport || !debug) {\n                let content = '';\n                content += [...args].reduce((result, item) => {\n                    if (typeof item == 'string') {\n                        result += ',' + item;\n                    }\n                    else if (typeof item == 'object') {\n                        result += JSON.stringify(item);\n                    }\n                });\n                defaultReporter.sendRecordContent(content, report_1.OKXReportType.LOG, '');\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction logWarning(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.warn(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction reportEvent(type, action, content) {\n    return __awaiter(this, void 0, void 0, function* () {\n        yield defaultReporter.sendRecordContent(content, type, action);\n    });\n}\nfunction reportLog(content_1) {\n    return __awaiter(this, arguments, void 0, function* (content, action = 'default') {\n        // await defaultReporter.sendRecordContent(content, OKXReportType.LOG, action)\n    });\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mediaNotTouch = exports.mediaTouch = exports.maxWidth = void 0;\nexports.isDevice = isDevice;\nexports.media = media;\nexports.mediaMin = mediaMin;\nexports.mediaMax = mediaMax;\nexports.mediaMinMax = mediaMinMax;\nconst web_api_1 = require(\"../utils/web-api\");\nconst tma_api_1 = require(\"../utils/tma-api\");\nconst url_1 = require(\"./url\");\nconst log_1 = require(\"./log\");\nexports.maxWidth = {\n    mobile: 440,\n    tablet: 1020\n};\nfunction isDevice(device) {\n    var _a;\n    const window = (0, url_1.getWindow)();\n    if (!window) {\n        return device === 'desktop';\n    }\n    // TODO: remove this check when weba will fix viewport width\n    if ((0, tma_api_1.isTmaPlatform)('weba')) {\n        return true;\n    }\n    const width = window.innerWidth;\n    switch (device) {\n        case 'desktop':\n            return width > exports.maxWidth.tablet;\n        case 'tablet':\n            return width > exports.maxWidth.mobile;\n        default:\n        case 'mobile':\n            let isMobile = width <= exports.maxWidth.mobile || (0, web_api_1.isOS)('ios', 'android', 'ipad');\n            if (isMobile) {\n                const isTelegram = !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n                const maxTouchPoints = navigator.maxTouchPoints || 0;\n                if (isTelegram && maxTouchPoints === 0) {\n                    isMobile = false;\n                }\n                (0, log_1.logDebug)(\"isDevice mobile isTelegram and maxTouchPoints:\", isMobile, isTelegram, maxTouchPoints);\n            }\n            return isMobile;\n    }\n}\nfunction media(device) {\n    switch (device) {\n        case 'mobile':\n            return `@media (max-width: ${exports.maxWidth.mobile}px)`;\n        case 'tablet':\n            return `@media (max-width: ${exports.maxWidth.tablet}px) (min-width: ${exports.maxWidth.mobile}px)`;\n        default:\n        case 'desktop':\n            return `@media (min-width: ${exports.maxWidth.tablet}px)`;\n    }\n}\nfunction mediaMin(px) {\n    return `@media (min-width: ${px}px)`;\n}\nfunction mediaMax(px) {\n    return `@media (max-width: ${px}px)`;\n}\nfunction mediaMinMax(pxMin, pxMax) {\n    return `@media (min-width: ${pxMin}px) and (max-width: ${pxMax}px)`;\n}\nexports.mediaTouch = '@media (hover: none)';\nexports.mediaNotTouch = '@media not all and (hover: none)';\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXReporter = exports.OKXReportSide = exports.OKXReportType = exports.versionStr = void 0;\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nconst log_1 = require(\"./log\");\nconst url_1 = require(\"./url\");\nconst utils_1 = require(\"../utils\");\nconst localforage_1 = __importDefault(require(\"localforage\"));\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nexports.versionStr = '1.6.0';\nconst reportApiList = [\n    'https://www.okx.com/dappstat/wallet-connect',\n    'https://www.okx.ac/dappstat/wallet-connect'\n];\nconst reportCacheKey = 'OKX_RP_CK';\nconst reportUUIDKey = 'OKX_RP_UUID_CK';\nconst MAX_LIMIT_REPORTCOUNT = 100;\nconst DEFAULT_HTTP_HEADERS = {\n    Accept: \"*/*\",\n    \"Content-Type\": \"text/plain\",\n};\nconst DEFAULT_HTTP_METHOD = \"POST\";\nconst DEFAULT_FETCH_OPTS = {\n    headers: DEFAULT_HTTP_HEADERS,\n    method: DEFAULT_HTTP_METHOD,\n};\nexports.OKXReportType = {\n    PAGE_IN: 'page_in',\n    PAGE_OUT: 'page_out',\n    CLICK: 'click',\n    LOG: 'log',\n};\nexports.OKXReportSide = {\n    DAPP: 'dapp',\n    WALLET: 'wallet',\n};\nclass IReporter {\n}\nconst fetchWithTimeout = (url, options, timeout = 5000) => {\n    const controller = new AbortController();\n    const signal = controller.signal;\n    const fetchPromise = (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, options), { signal }));\n    const timeoutPromise = new Promise((_, reject) => setTimeout(() => {\n        controller.abort();\n        reject(new Error('Request timed out'));\n    }, timeout));\n    return Promise.race([fetchPromise, timeoutPromise]);\n};\nconst fetchListWithTimeout = (urls_1, ...args_1) => __awaiter(void 0, [urls_1, ...args_1], void 0, function* (urls, options = {}, timeout = 5000) {\n    for (const url of urls) {\n        try {\n            const controller = new AbortController();\n            const signal = controller.signal;\n            const fetchPromise = (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, options), { signal }));\n            const timeoutPromise = new Promise((_, reject) => setTimeout(() => {\n                controller.abort();\n                reject(new Error('Request timed out'));\n            }, timeout));\n            const response = yield Promise.race([fetchPromise, timeoutPromise]);\n            if (response.ok) {\n                return response;\n            }\n            if (response.status == 502) {\n                console.error(`Fetch error status 502`, url);\n                return response;\n            }\n        }\n        catch (error) {\n            console.error(`Fetch error for ${url}:`, error);\n        }\n    }\n    console.error(`'All fetch attempts failed.'`);\n    throw new Error('All fetch attempts failed.');\n});\nclass OKXReporter {\n    constructor() {\n        this.currentSide = exports.OKXReportSide.DAPP;\n        this.currentVersion = exports.versionStr;\n        this.storage = localforage_1.default.createInstance({\n            name: \"OKXReporter\"\n        });\n        this.recordList = new Array();\n        this.currentUUID = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(16));\n    }\n    configVersionAndSide(version, side, appname) {\n        this.currentVersion = version;\n        this.currentSide = side;\n        this.appName = appname;\n    }\n    get recordCacheKey() {\n        return reportCacheKey + \"@\" + this.appName;\n    }\n    get reportPlatform() {\n        if ((0, utils_1.isMobileUserAgent)()) {\n            if ((0, utils_1.isIos)()) {\n                return 'iOS';\n            }\n            else {\n                return 'android';\n            }\n        }\n        else {\n            return 'pc';\n        }\n    }\n    beginReport() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.startErrorCatching();\n            let records = yield this.storage.getItem(this.recordCacheKey);\n            let uuid = yield this.storage.getItem(reportUUIDKey);\n            if (uuid) {\n                this.currentUUID = uuid;\n            }\n            else {\n                this.storage.setItem(reportUUIDKey, this.currentUUID);\n            }\n            if (records) {\n                this.recordList = records;\n                (0, log_1.logDebug)('resume records from cache length: ', this.recordList.length);\n                yield this.sendCachedRecords();\n            }\n        });\n    }\n    startErrorCatching() {\n        let window = (0, url_1.getWindow)();\n        if (window) {\n            (0, log_1.logDebug)('begin capture console error');\n            // window.onerror = (event: Event | string, source?: string, lineno?: number, colno?: number, error?: Error) => {\n            //     logDebug('capture error info:', error, source)\n            //     this.markRecord(error?.message+'/'+error?.name+'/'+error?.stack, OKXReportType.LOG, '', this.currentSide)\n            // }\n        }\n    }\n    cachedErrors() {\n        return this.recordList;\n    }\n    sendRecord(record) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    const body = JSON.stringify(record);\n                    (0, log_1.logDebug)('[REPORT] record: ', body);\n                    const res = yield fetchListWithTimeout(reportApiList, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body: body }));\n                    (0, log_1.logDebug)('[REPORT] get rsp:', res);\n                    if (res && res.status && res.status == 200) {\n                        this.recordList = this.recordList.filter((item) => {\n                            return item.timestamp != record.timestamp || item.content != record.content;\n                        });\n                        yield this.storage.setItem(this.recordCacheKey, this.recordList);\n                        resolve(true);\n                    }\n                    else {\n                        reject(false);\n                    }\n                }\n                catch (e) {\n                    (0, log_1.logDebug)('send record error:', e);\n                    resolve(true);\n                    // reject(e)\n                }\n            }));\n        });\n    }\n    sendRecordContent(content, type, action) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            let path = (_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.location.pathname;\n            let location = (_b = (0, url_1.getWindow)()) === null || _b === void 0 ? void 0 : _b.location.origin;\n            if (path && location) {\n                location = location + path;\n            }\n            let language = (_c = (0, url_1.getWindow)()) === null || _c === void 0 ? void 0 : _c.navigator.language;\n            let ua = (_d = (0, url_1.getWindow)()) === null || _d === void 0 ? void 0 : _d.navigator.userAgent;\n            let platform = this.reportPlatform;\n            let reportItem = {\n                uuid: this.currentUUID,\n                version: this.currentVersion,\n                content: content,\n                action: action,\n                side: this.currentSide,\n                timestamp: new Date().getTime(),\n                url: location,\n                lang: language,\n                type: type,\n                platform: platform,\n                \"user-agent\": ua\n            };\n            yield this.markRecordItem(reportItem);\n            yield this.sendRecord(reportItem);\n        });\n    }\n    sendCachedRecords() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let sendList = this.recordList.map(record => this.sendRecord(record));\n                (0, log_1.logDebug)('[REPORT] submit & clean recorded caches begin @', new Date().toUTCString());\n                Promise.allSettled(sendList).then((results) => {\n                    (0, log_1.logDebug)('[REPORT] submit & clean recorded caches ends @', new Date().toUTCString());\n                    let keepIndex = [];\n                    results.forEach((result, index) => {\n                        if (result.status == \"rejected\") {\n                            keepIndex.push(index);\n                        }\n                    });\n                    this.recordList = this.recordList.filter((_, index) => !keepIndex.includes(index));\n                    this.storage.setItem(this.recordCacheKey, this.recordList).then(function (value) {\n                        resolve();\n                    }).catch(function (err) {\n                        reject(err);\n                    });\n                });\n            }));\n        });\n    }\n    markRecordItem(item) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.recordList.push(item);\n            if (this.recordList.length > MAX_LIMIT_REPORTCOUNT) {\n                let offset = this.recordList.length - MAX_LIMIT_REPORTCOUNT;\n                this.recordList.splice(0, offset);\n            }\n            return new Promise((resolve, reject) => {\n                this.storage.setItem(this.recordCacheKey, this.recordList).then(function (value) {\n                    resolve(item);\n                }).catch(function (err) {\n                    reject(err);\n                });\n            });\n        });\n    }\n    markRecord(content, type, action, side) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            let path = (_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.location.pathname;\n            let location = (_b = (0, url_1.getWindow)()) === null || _b === void 0 ? void 0 : _b.location.origin;\n            if (path && location) {\n                location = location + path;\n            }\n            let language = (_c = (0, url_1.getWindow)()) === null || _c === void 0 ? void 0 : _c.navigator.language;\n            let platform = this.reportPlatform;\n            let ua = (_d = (0, url_1.getWindow)()) === null || _d === void 0 ? void 0 : _d.navigator.userAgent;\n            let reportItem = {\n                uuid: this.currentUUID,\n                version: this.currentVersion,\n                content: content,\n                action: action,\n                side: side,\n                timestamp: new Date().getTime(),\n                url: location,\n                lang: language,\n                type: type,\n                platform: platform,\n                \"user-agent\": ua\n            };\n            return yield this.markRecordItem(reportItem);\n        });\n    }\n}\nexports.OKXReporter = OKXReporter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Report_WalletType_Key = exports.Report_Proceed_QRCode_Click = exports.Report_ChooseType_Download_Click = exports.Report_ChooseType_ConnectWallet_Click = exports.Report_Proceed_Retry_Click = exports.Report_ChooseType_ConnectWallet_View = exports.Report_Loading_ConnectWallet_View = exports.Report_Proceed_QRCode_View = exports.Report_Proceed_Proceed_View = void 0;\nexports.Report_Proceed_Proceed_View = \"OKXConnectSDK_Proceed_Proceed_View\";\nexports.Report_Proceed_QRCode_View = \"OKXConnectSDK_Proceed_QRCode_View\";\nexports.Report_Loading_ConnectWallet_View = \"OKXConnectSDK_Loading_ConnectWallet_View\";\nexports.Report_ChooseType_ConnectWallet_View = \"OKXConnectSDK_ChooseType_ConnectWallet_View\";\nexports.Report_Proceed_Retry_Click = \"OKXConnectSDK_Proceed_Retry_Click\";\nexports.Report_ChooseType_ConnectWallet_Click = \"OKXConnectSDK_ChooseType_ConnectWallet_Click\";\nexports.Report_ChooseType_Download_Click = \"OKXConnectSDK_ChooseType_Download_Click\";\nexports.Report_Proceed_QRCode_Click = \"OKXConnectSDK_Proceed_QRCode_Click\";\nexports.Report_WalletType_Key = 'wallet_type';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkMetaData = checkMetaData;\nconst protocol_1 = require(\"../protocol\");\nfunction checkMetaData(dappMetaData) {\n    if (!dappMetaData) {\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"You have to specify a `dappMetaData`in the options.\");\n    }\n    if (!dappMetaData.name) {\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"dappName is required\");\n    }\n    if (!dappMetaData.icon) {\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"icon is required\");\n    }\n    return true;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.safeJsonParse = safeJsonParse;\nexports.safeJsonStringify = safeJsonStringify;\nconst log_1 = require(\"./log\");\nconst JSONStringify = (data) => JSON.stringify(data, (_, value) => (typeof value === \"bigint\" ? value.toString() + \"n\" : value));\n/*\n  Function to parse JSON.\n  If JSON has values in our custom format BigInt (strings with \"n\" character at the end), we just parse them to BigInt values.\n  If JSON has big number values, but not in our custom format, we copy it, and in a copy we convert those values to our custom format,\n  then parse them to BigInt values.\n  Other values (not big numbers and not our custom format BigInt values) are not affected and parsed as native JSON.parse() would parse them.\n*/\nconst JSONParse = (json) => {\n    /*\n      Big numbers are found and marked using Regex with this condition:\n      Number's length is bigger than 16 || Number's length is 16 and any numerical digit of the number is greater than that of the Number.MAX_SAFE_INTEGER\n      Additionally, it skips values that are strings (between double quotes).\n      */\n    // prettier-ignore\n    // eslint-disable-next-line no-useless-escape\n    const numbersBiggerThanMaxInt = /:(\\b\\d{17,}|\\b(?:[9](?:[1-9]07199254740991|0[1-9]7199254740991|00[8-9]199254740991|007[2-9]99254740991|007199[3-9]54740991|0071992[6-9]4740991|00719925[5-9]740991|007199254[8-9]40991|0071992547[5-9]0991|00719925474[1-9]991|00719925474099[2-9])))(?=[,\\}\\]]|$)/g;\n    const serializedData = json.replace(numbersBiggerThanMaxInt, (match, group) => `:\"${group}n\"`);\n    try {\n        return JSON.parse(serializedData, (_, value) => {\n            const isCustomFormatBigInt = typeof value === \"string\" && value.match(/^\\d+n$/);\n            if (isCustomFormatBigInt)\n                return BigInt(value.substring(0, value.length - 1));\n            return value;\n        });\n    }\n    catch (e) {\n        return JSON.parse(json);\n    }\n};\nfunction safeJsonParse(value) {\n    if (typeof value !== \"string\") {\n        (0, log_1.logDebug)(value);\n        throw new Error(`Cannot safe json parse value of type ${typeof value}`);\n    }\n    try {\n        return JSONParse(value);\n    }\n    catch (e) {\n        // eslint-disable-next-line no-console\n        console.error(\"safeJsonParse error:\", e);\n        return value;\n    }\n}\nfunction safeJsonStringify(value) {\n    return typeof value === \"string\" ? value : JSONStringify(value) || \"\";\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.okxfromString = okxfromString;\nexports.okxtoString = okxtoString;\nexports.alloc = alloc;\nexports.allocUnsafe = allocUnsafe;\nconst basics_1 = require(\"multiformats/basics\");\nconst log_1 = require(\"../utils/log\");\nfunction okxfromString(string, encoding = 'utf8') {\n    const base = BASES[encoding];\n    (0, log_1.logDebug)(\"okxfromstring ====> \");\n    if (!base) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    return base.decoder.decode(`${base.prefix}${string}`);\n}\nfunction okxtoString(array, encoding = 'utf8') {\n    const base = BASES[encoding];\n    (0, log_1.logDebug)(\"okxtoString ====> \");\n    if (!base) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    return base.encoder.encode(array).substring(1);\n}\nfunction alloc(size = 0) {\n    return new Uint8Array(size);\n}\nfunction allocUnsafe(size = 0) {\n    return new Uint8Array(size);\n}\nfunction createCodec(name, prefix, encode, decode) {\n    return {\n        name,\n        prefix,\n        encoder: {\n            name,\n            prefix,\n            encode\n        },\n        decoder: { decode }\n    };\n}\nconst string = createCodec('utf8', 'u', buf => {\n    const decoder = new TextDecoder('utf8');\n    return 'u' + decoder.decode(buf);\n}, str => {\n    const encoder = new TextEncoder();\n    return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', buf => {\n    let result = 'a';\n    for (let i = 0; i < buf.length; i++) {\n        let bufNum = buf[i];\n        if (bufNum && String.fromCharCode(bufNum)) {\n            result += String.fromCharCode(bufNum);\n        }\n    }\n    return result;\n}, str => {\n    str = str.substring(1);\n    const buf = allocUnsafe(str.length);\n    for (let i = 0; i < str.length; i++) {\n        buf[i] = str.charCodeAt(i);\n    }\n    return buf;\n});\nconst BASES = Object.assign({ utf8: string, 'utf-8': string, hex: basics_1.bases.base16, latin1: ascii, ascii: ascii, binary: ascii }, basics_1.bases);\n","\"use strict\";\nvar _a, _b, _c, _d, _e, _f, _g;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isTmaPlatform = isTmaPlatform;\nexports.isInTMA = isInTMA;\nexports.inTg = inTg;\nexports.isInTelegramBrowser = isInTelegramBrowser;\nexports.sendExpand = sendExpand;\nexports.sendOpenTelegramLink = sendOpenTelegramLink;\nexports.versionCompare = versionCompare;\nconst url_1 = require(\"./url\");\nconst log_1 = require(\"./log\");\nconst protocol_1 = require(\"../protocol\");\nconst web_api_1 = require(\"./web-api\");\nlet initParams = {};\ntry {\n    let locationHash = location.hash.toString();\n    initParams = urlParseHashParams(locationHash);\n}\ncatch (e) { }\nlet tmaPlatform = 'unknown';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppPlatform) {\n    tmaPlatform = (_a = initParams.tgWebAppPlatform) !== null && _a !== void 0 ? _a : 'unknown';\n}\nif (tmaPlatform === 'unknown') {\n    const window = (0, url_1.getWindow)();\n    tmaPlatform = (_d = (_c = (_b = window === null || window === void 0 ? void 0 : window.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) === null || _c === void 0 ? void 0 : _c.platform) !== null && _d !== void 0 ? _d : 'unknown';\n}\nlet webAppVersion = '6.0';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppVersion) {\n    webAppVersion = initParams.tgWebAppVersion;\n}\nif (!webAppVersion) {\n    const window = (0, url_1.getWindow)();\n    webAppVersion = (_g = (_f = (_e = window === null || window === void 0 ? void 0 : window.Telegram) === null || _e === void 0 ? void 0 : _e.WebApp) === null || _f === void 0 ? void 0 : _f.version) !== null && _g !== void 0 ? _g : '6.0';\n}\n/**\n * Returns true if the app is running in TMA on the specified platform.\n * @param platforms\n */\nfunction isTmaPlatform(...platforms) {\n    return platforms.includes(tmaPlatform);\n}\n/**\n * Returns true if the app is running in TMA.\n */\nfunction isInTMA() {\n    var _a;\n    return tmaPlatform !== 'unknown' || !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n}\nfunction inTg() {\n    // return true\n    return isInTelegramBrowser() || isInTMA();\n}\n/**\n * Returns true if the app is running in the Telegram browser.\n */\nfunction isInTelegramBrowser() {\n    var _a;\n    const isTelegramWebview = !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebview);\n    return (isInTMA() || isTelegramWebview) && tmaPlatform === 'unknown';\n}\n/**\n * Expand the app window.\n */\nfunction sendExpand() {\n    postEvent('web_app_expand', {});\n}\n/**\n * Opens link in TMA or in new tab and returns a function that closes the tab.\n * @param link The link to open.\n * @param fallback The function to call if the link can't be opened in TMA.\n */\nfunction sendOpenTelegramLink(link, fallback) {\n    const url = new URL(link);\n    if (url.protocol !== 'http:' && url.protocol !== 'https:') {\n        if (fallback) {\n            return fallback();\n        }\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Url protocol is not supported: ${url}`);\n    }\n    if (url.hostname !== 't.me') {\n        if (fallback) {\n            return fallback();\n        }\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Url host is not supported: ${url}`);\n    }\n    const pathFull = url.pathname + url.search;\n    if (isIframe() || versionAtLeast('6.1')) {\n        postEvent('web_app_open_tg_link', { path_full: pathFull });\n    }\n    else {\n        (0, web_api_1.openLinkBlank)('https://t.me' + pathFull);\n    }\n}\nfunction isIframe() {\n    try {\n        const window = (0, url_1.getWindow)();\n        if (!window) {\n            return false;\n        }\n        return window.parent != null && window !== window.parent;\n    }\n    catch (e) {\n        return false;\n    }\n}\nfunction postEvent(eventType, eventData) {\n    try {\n        const window = (0, url_1.getWindow)();\n        if (!window) {\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Can't post event to parent window: window is not defined`);\n        }\n        if (window.TelegramWebviewProxy !== undefined) {\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.TelegramWebviewProxy.postEvent(eventType, JSON.stringify(eventData));\n        }\n        else if (window.external && 'notify' in window.external) {\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.external.notify(JSON.stringify({ eventType: eventType, eventData: eventData }));\n        }\n        else if (isIframe()) {\n            const trustedTarget = '*';\n            const message = JSON.stringify({ eventType: eventType, eventData: eventData });\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.parent.postMessage(message, trustedTarget);\n        }\n        else {\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Can't post event to TMA`);\n        }\n    }\n    catch (e) {\n        (0, log_1.logError)(`Can't post event to parent window: ${e}`);\n    }\n}\nfunction urlParseHashParams(locationHash) {\n    locationHash = locationHash.replace(/^#/, '');\n    let params = {};\n    if (!locationHash.length) {\n        return params;\n    }\n    if (locationHash.indexOf('=') < 0 && locationHash.indexOf('?') < 0) {\n        params._path = urlSafeDecode(locationHash);\n        return params;\n    }\n    let qIndex = locationHash.indexOf('?');\n    if (qIndex >= 0) {\n        let pathParam = locationHash.substr(0, qIndex);\n        params._path = urlSafeDecode(pathParam);\n        locationHash = locationHash.substr(qIndex + 1);\n    }\n    let query_params = urlParseQueryString(locationHash);\n    for (let k in query_params) {\n        params[k] = query_params[k];\n    }\n    return params;\n}\nfunction urlSafeDecode(urlencoded) {\n    try {\n        urlencoded = urlencoded.replace(/\\+/g, '%20');\n        return decodeURIComponent(urlencoded);\n    }\n    catch (e) {\n        return urlencoded;\n    }\n}\nfunction urlParseQueryString(queryString) {\n    let params = {};\n    if (!queryString.length) {\n        return params;\n    }\n    let queryStringParams = queryString.split('&');\n    let i, param, paramName, paramValue;\n    for (i = 0; i < queryStringParams.length; i++) {\n        param = queryStringParams[i].split('=');\n        paramName = urlSafeDecode(param[0]);\n        paramValue = param[1] == null ? null : urlSafeDecode(param[1]);\n        params[paramName] = paramValue;\n    }\n    return params;\n}\nfunction versionCompare(v1, v2) {\n    if (typeof v1 !== 'string')\n        v1 = '';\n    if (typeof v2 !== 'string')\n        v2 = '';\n    let v1List = v1.replace(/^\\s+|\\s+$/g, '').split('.');\n    let v2List = v2.replace(/^\\s+|\\s+$/g, '').split('.');\n    let a, i, p1, p2;\n    a = Math.max(v1List.length, v2List.length);\n    for (i = 0; i < a; i++) {\n        p1 = parseInt(v1List[i]) || 0;\n        p2 = parseInt(v2List[i]) || 0;\n        if (p1 === p2)\n            continue;\n        if (p1 > p2)\n            return 1;\n        return -1;\n    }\n    return 0;\n}\nfunction versionAtLeast(ver) {\n    return versionCompare(webAppVersion, ver) >= 0;\n}\n","\"use strict\";\nvar _a, _b, _c, _d;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.removeUrlLastSlash = removeUrlLastSlash;\nexports.addPathToUrl = addPathToUrl;\nexports.getUniversalLink = getUniversalLink;\nexports.openOKXDeeplink = openOKXDeeplink;\nexports.openOKXUniversalLink = openOKXUniversalLink;\nexports.openOKXDeeplinkWithFallback = openOKXDeeplinkWithFallback;\nexports.getWindow = getWindow;\nexports.isTelegramUrl = isTelegramUrl;\nexports.encodeTelegramUrlParameters = encodeTelegramUrlParameters;\nexports.encodeConnectParams = encodeConnectParams;\nexports.encodeTWAConnectURLParams = encodeTWAConnectURLParams;\nexports.getAppWalletDeepLink = getAppWalletDeepLink;\nexports.getAppWalletShortDeepLink = getAppWalletShortDeepLink;\nexports.getTelegramWalletTWAUrl = getTelegramWalletTWAUrl;\nexports.openOKXTMAWalletlinkWithFallback = openOKXTMAWalletlinkWithFallback;\nexports.isInTMA = isInTMA;\nexports.isInTelegramBrowser = isInTelegramBrowser;\nexports.getOKXLink = getOKXLink;\nconst protocol_1 = require(\"../protocol\");\nconst log_1 = require(\"./log\");\nconst constants_1 = require(\"../protocol/constants\");\nconst utils_1 = require(\"./utils\");\nconst tma_api_1 = require(\"./tma-api\");\nfunction removeUrlLastSlash(url) {\n    if (url.slice(-1) === '/') {\n        return url.slice(0, -1);\n    }\n    return url;\n}\nfunction addPathToUrl(url, path) {\n    return removeUrlLastSlash(url) + '/' + path;\n}\nfunction getUniversalLink(deeplinkUrl, useStandardUniversalLink = false) {\n    console.log(\"getUniversalLink deeplinkUrl:\", deeplinkUrl, \", useStandardUniversalLink:\", useStandardUniversalLink);\n    const replaceStrWithParam = `${protocol_1.standardDeeplink}?param=`;\n    if (!useStandardUniversalLink && deeplinkUrl.startsWith(replaceStrWithParam)) {\n        const cleanUrl = deeplinkUrl.replace(replaceStrWithParam, '');\n        (0, log_1.logDebug)(\"getUniversalLink cleanUrl:\", cleanUrl);\n        const deeplinkEncodeUrl = encodeURIComponent(cleanUrl);\n        (0, log_1.logDebug)(\"getUniversalLink standardUniversalLink:\", protocol_1.standardUniversalLink);\n        (0, log_1.logDebug)(\"getUniversalLink `${shortUniversalLink}?param=${deeplinkEncodeUrl}`:\", `${constants_1.shortUniversalLink}?param=${deeplinkEncodeUrl}`);\n        return `${constants_1.shortUniversalLink}?param=${deeplinkEncodeUrl}`;\n    }\n    else if (!useStandardUniversalLink && deeplinkUrl == protocol_1.standardDeeplink) {\n        (0, log_1.logDebug)(\"getUniversalLink shortUniversalLink:\", constants_1.shortUniversalLink);\n        return constants_1.shortUniversalLink;\n    }\n    else {\n        const deeplinkEncodeUrl = encodeURIComponent(deeplinkUrl);\n        console.log(\"getUniversalLink standardUniversalLink:\", protocol_1.standardUniversalLink);\n        return `${protocol_1.standardUniversalLink}?deeplink=${deeplinkEncodeUrl}`;\n    }\n}\nfunction openOKXDeeplink(deeplinkUrl) {\n    var _a;\n    const fullUrl = getUniversalLink(deeplinkUrl);\n    const isTelegram = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n    console.log(\"openOKXDeeplink fullUrl:\", fullUrl);\n    if (!(0, utils_1.isIos)()) {\n        let newWindow = null;\n        if (isTelegram) {\n            newWindow = window.open(deeplinkUrl, '_blank');\n        }\n        else {\n            window.location.href = deeplinkUrl;\n        }\n    }\n    else {\n        openOKXUniversalLink(fullUrl);\n    }\n}\nfunction openOKXUniversalLink(fullUrl) {\n    if (!(0, utils_1.isIos)()) {\n        // if (isTelegram) {\n        window.open(fullUrl, '_blank');\n        // } else {\n        //     window.location.href = fullUrl;\n        // }\n    }\n    else {\n        if (isInTMA()) {\n            window.open(fullUrl, '_blank');\n        }\n        else {\n            console.log(\"windowOpen[before]: \", Date.now());\n            if (window === null || window === void 0 ? void 0 : window.okxLogDebug) {\n                window.open(fullUrl, '_blank');\n            }\n            else {\n                window.open(fullUrl, '_self');\n            }\n            console.log(\"windowOpen[after]: \", Date.now());\n        }\n    }\n}\nfunction openOKXDeeplinkWithFallback(deeplinkUrl) {\n    var _a;\n    const fullUrl = getUniversalLink(deeplinkUrl);\n    const isTelegram = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n    console.log(\"openOKXDeeplinkWithFallback fullUrl:\", fullUrl);\n    let deepLinkOpened = false;\n    const timeoutDuration = 3000; // 1.5秒的等待时间\n    const downloadUrl = protocol_1.standardUniversalLink;\n    console.log(\"openOKXDeeplinkWithFallback standardUniversalLink:\", protocol_1.standardUniversalLink);\n    if (!(0, utils_1.isIos)()) {\n        let newWindow = null;\n        var fallbackToDownloadPage = () => {\n            if (!deepLinkOpened) {\n                if (newWindow) {\n                    newWindow.open(fullUrl, '_self');\n                }\n                else {\n                    window.open(fullUrl, '_blank');\n                }\n            }\n        };\n        if (isTelegram) {\n            newWindow = window.open(deeplinkUrl, '_blank');\n        }\n        else {\n            window.location.href = deeplinkUrl;\n        }\n        setTimeout(fallbackToDownloadPage, timeoutDuration);\n        window.addEventListener('blur', () => {\n            deepLinkOpened = true;\n        }, { once: true });\n        document.addEventListener('visibilitychange', () => {\n            if (document.visibilityState === 'hidden') {\n                deepLinkOpened = true;\n            }\n        });\n    }\n    else {\n        if (isTelegram) {\n            window.open(fullUrl, '_blank');\n        }\n        else {\n            console.log(\"windowOpen[before]: \", Date.now());\n            if (window === null || window === void 0 ? void 0 : window.okxLogDebug) {\n                window.open(fullUrl, '_blank');\n            }\n            else {\n                window.open(fullUrl, '_self');\n            }\n            console.log(\"windowOpen[after]: \", Date.now());\n        }\n    }\n}\nfunction getWindow() {\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    return undefined;\n}\nfunction isTelegramUrl(link) {\n    if (!link) {\n        return false;\n    }\n    const url = new URL(link);\n    return url.protocol === 'tg:' || url.hostname === 't.me';\n}\nfunction encodeTelegramUrlParameters(parameters) {\n    let encodedParameters = parameters;\n    encodedParameters = encodedParameters.replace(/\\./g, '%2E');\n    encodedParameters = encodedParameters.replace(/-/g, '%2D');\n    encodedParameters = encodedParameters.replace(/_/g, '%5F');\n    encodedParameters = encodedParameters.replace(/&/g, '-');\n    encodedParameters = encodedParameters.replace(/=/g, '__');\n    encodedParameters = encodedParameters.replace(/%/g, '--');\n    return encodedParameters;\n}\nfunction encodeConnectParams(connectRequest) {\n    const connectRequestStr = JSON.stringify(connectRequest);\n    (0, log_1.logDebug)(\"url encodeConnectParams connectRequestStr \", connectRequestStr);\n    const utf8Array = new TextEncoder().encode(connectRequestStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    // .replace(/\\+/g, '-')\n    // .replace(/\\//g, '_')\n    // .replace(/=+$/, ''); //Compatible with older versions of iOS. Cannot be added directly  (Base64 URL Safe)\n    (0, log_1.logDebug)(\"url encodeConnectParams base64Encoded \", base64Encoded);\n    return base64Encoded;\n}\nfunction encodeTWAConnectURLParams(connectRequest) {\n    const connectRequestStr = JSON.stringify({ topic: connectRequest.topic, clientId: connectRequest.clientId });\n    (0, log_1.logDebug)(\"url encodeConnectParams connectRequestStr\", connectRequestStr);\n    const utf8Array = new TextEncoder().encode(connectRequestStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    return base64Encoded;\n}\nfunction getAppWalletDeepLink(connectParam) {\n    return `${protocol_1.standardDeeplink}?param=${connectParam}`;\n}\nfunction getAppWalletShortDeepLink(topic, clientId) {\n    return `${constants_1.shortUniversalLink}?topic=${topic}${(0, utils_1.getLastSixMd5Hash)(clientId)}`;\n}\n//  make telegram okx wallet TWA url\nfunction getTelegramWalletTWAUrl(connectParam, redirectStr) {\n    let base64Content = { okxconnect: \"\", redirect: \"\", extraparams: \"\" };\n    if (connectParam) {\n        base64Content.okxconnect = connectParam;\n    }\n    if (redirectStr) {\n        base64Content.redirect = redirectStr;\n    }\n    let base64ContentStr = JSON.stringify(base64Content);\n    const utf8Array = new TextEncoder().encode(base64ContentStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    const urlSafeBase64 = (0, utils_1.toSafeBase64FromBase64)(base64Encoded);\n    (0, log_1.logDebug)('[TWA] open link:', base64Content, base64Encoded);\n    if (connectParam || redirectStr) {\n        if (!isInTMA()) {\n            // return `http://localhost:5173?tgWebAppStartParam=${urlSafeBase64}`\n            if ((0, constants_1.getTestTwaUrl)()) {\n                return `${(0, constants_1.getTestTwaUrl)()}?tgWebAppStartParam=${urlSafeBase64}`;\n            }\n            else {\n                return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}&startapp=${urlSafeBase64}`;\n            }\n        }\n        else {\n            if ((0, constants_1.getTestTgTwaUrl)()) {\n                return `${(0, constants_1.getTestTgTwaUrl)()}?startapp=${urlSafeBase64}`;\n            }\n            else {\n                return `https://t.me/${constants_1.tgwalletName}/start?startapp=${urlSafeBase64}`;\n            }\n        }\n    }\n    if (!isInTMA()) {\n        // return \"http://localhost:5173\"\n        if ((0, constants_1.getTestTwaUrl)()) {\n            return `${(0, constants_1.getTestTwaUrl)()}`;\n        }\n        else {\n            return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}`;\n        }\n    }\n    else {\n        if ((0, constants_1.getTestTgTwaUrl)()) {\n            return `${(0, constants_1.getTestTgTwaUrl)()}`;\n        }\n        else {\n            return `https://t.me/${constants_1.tgwalletName}/start`;\n        }\n    }\n}\n//  open TWA url in telegram\nfunction openOKXTMAWalletlinkWithFallback(twaDeepLink) {\n    var _a, _b, _c, _d, _e;\n    (0, log_1.logDebug)('[TWA] open link:', twaDeepLink, \"isInTMA ==> \", isInTMA());\n    if (!isInTMA()) {\n        if ((0, constants_1.getTestTwaUrl)()) {\n            window.open(twaDeepLink, '_blank');\n        }\n        else {\n            window.open(twaDeepLink, '_self');\n        }\n    }\n    else {\n        if ((_b = (_a = getWindow()) === null || _a === void 0 ? void 0 : _a.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) {\n            (_e = (_d = (_c = getWindow()) === null || _c === void 0 ? void 0 : _c.Telegram) === null || _d === void 0 ? void 0 : _d.WebApp) === null || _e === void 0 ? void 0 : _e.openTelegramLink(twaDeepLink);\n        }\n        else {\n            (0, tma_api_1.sendOpenTelegramLink)(twaDeepLink);\n        }\n    }\n}\n/**\n * Returns true if the app is running in TMA.\n */\nfunction urlSafeDecode(urlencoded) {\n    try {\n        urlencoded = urlencoded.replace(/\\+/g, '%20');\n        return decodeURIComponent(urlencoded);\n    }\n    catch (e) {\n        return urlencoded;\n    }\n}\nfunction urlParseQueryString(queryString) {\n    let params = {};\n    if (!queryString.length) {\n        return params;\n    }\n    let queryStringParams = queryString.split('&');\n    let i, param, paramName, paramValue;\n    for (i = 0; i < queryStringParams.length; i++) {\n        param = queryStringParams[i].split('=');\n        paramName = urlSafeDecode(param[0]);\n        paramValue = param[1] == null ? null : urlSafeDecode(param[1]);\n        params[paramName] = paramValue;\n    }\n    return params;\n}\nfunction urlParseHashParams(locationHash) {\n    locationHash = locationHash.replace(/^#/, '');\n    let params = {};\n    if (!locationHash.length) {\n        return params;\n    }\n    if (locationHash.indexOf('=') < 0 && locationHash.indexOf('?') < 0) {\n        params._path = urlSafeDecode(locationHash);\n        return params;\n    }\n    let qIndex = locationHash.indexOf('?');\n    if (qIndex >= 0) {\n        let pathParam = locationHash.substr(0, qIndex);\n        params._path = urlSafeDecode(pathParam);\n        locationHash = locationHash.substr(qIndex + 1);\n    }\n    let query_params = urlParseQueryString(locationHash);\n    for (let k in query_params) {\n        params[k] = query_params[k];\n    }\n    return params;\n}\nlet initParams = {};\ntry {\n    let locationHash = location.hash.toString();\n    initParams = urlParseHashParams(locationHash);\n}\ncatch (e) { }\nlet tmaPlatform = 'unknown';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppPlatform) {\n    tmaPlatform = (_a = initParams.tgWebAppPlatform) !== null && _a !== void 0 ? _a : 'unknown';\n}\nif (tmaPlatform === 'unknown') {\n    const window = getWindow();\n    tmaPlatform = (_d = (_c = (_b = window === null || window === void 0 ? void 0 : window.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) === null || _c === void 0 ? void 0 : _c.platform) !== null && _d !== void 0 ? _d : 'unknown';\n}\nfunction isInTMA() {\n    var _a;\n    return tmaPlatform !== 'unknown' || !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n}\n/**\n * Returns true if the app is running in the Telegram browser.\n */\nfunction isInTelegramBrowser() {\n    var _a;\n    const isTelegramWebview = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebview);\n    return (isInTMA() || isTelegramWebview) && tmaPlatform === 'unknown';\n}\nfunction getOKXLink(connectRequest, useMini = false, tmaReturnUrl) {\n    (0, log_1.logDebug)(`url  getOKXLink() called connectRequest==> ${JSON.stringify(connectRequest)}  useMini=> ${useMini}  tmaReturnUrl==> ${tmaReturnUrl}`);\n    if (useMini) {\n        var encodeTGParams = encodeTWAConnectURLParams(connectRequest);\n        return getTelegramWalletTWAUrl(encodeTGParams, tmaReturnUrl !== null && tmaReturnUrl !== void 0 ? tmaReturnUrl : \"back\");\n    }\n    else {\n        if ((0, utils_1.useShortLink)()) {\n            return getAppWalletShortDeepLink(connectRequest.topic, connectRequest.clientId);\n        }\n        else {\n            const base64Encoded = encodeConnectParams(connectRequest);\n            return `${protocol_1.standardDeeplink}?param=${base64Encoded}`;\n        }\n    }\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isValidObject = exports.RANDOM_LENGTH = exports.isBrowser = exports.resolveLocalStorage = exports.hasLocalStorage = exports.hasBuiltInWebSocket = exports.resolveWebSocketImplementation = void 0;\nexports.hexToByteArray = hexToByteArray;\nexports.getChainId = getChainId;\nexports.toHexString = toHexString;\nexports.concatUint8Arrays = concatUint8Arrays;\nexports.splitToUint8Arrays = splitToUint8Arrays;\nexports.base64encode = base64encode;\nexports.base64decode = base64decode;\nexports.checkWSUrl = checkWSUrl;\nexports.hashKey = hashKey;\nexports.generateRandomBytes32 = generateRandomBytes32;\nexports.generateTopic = generateTopic;\nexports.isIos = isIos;\nexports.getLastSixMd5Hash = getLastSixMd5Hash;\nexports.toSafeBase64FromBase64 = toSafeBase64FromBase64;\nexports.useShortLink = useShortLink;\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst tweetnacl_util_1 = __importDefault(require(\"tweetnacl-util\"));\nconst to_string_1 = require(\"uint8arrays/to-string\");\nconst sha256_1 = require(\"@stablelib/sha256\");\nconst safejson_1 = require(\"./safejson\");\nconst log_1 = require(\"./log\");\nconst stringUtils_1 = require(\"../utils/stringUtils\");\nconst crypto_js_1 = __importDefault(require(\"crypto-js\"));\nconst BASE16 = \"base16\";\nfunction hexToByteArray(hexString) {\n    if (hexString.length % 2 !== 0) {\n        throw new Error(`Cannot convert ${hexString} to bytesArray`);\n    }\n    const result = new Uint8Array(hexString.length / 2);\n    for (let i = 0; i < hexString.length; i += 2) {\n        result[i / 2] = parseInt(hexString.slice(i, i + 2), 16);\n    }\n    return result;\n}\nfunction getChainId(chain) {\n    return chain.includes(\":\") ? chain.split(\":\")[1] : chain;\n}\nfunction toHexString(byteArray) {\n    let hexString = '';\n    byteArray.forEach(byte => {\n        hexString += ('0' + (byte & 0xff).toString(16)).slice(-2);\n    });\n    return hexString;\n}\nfunction concatUint8Arrays(buffer1, buffer2) {\n    const mergedArray = new Uint8Array(buffer1.length + buffer2.length);\n    mergedArray.set(buffer1);\n    mergedArray.set(buffer2, buffer1.length);\n    return mergedArray;\n}\nfunction splitToUint8Arrays(array, index) {\n    if (index >= array.length) {\n        throw new Error('Index is out of buffer');\n    }\n    const subArray1 = array.slice(0, index);\n    const subArray2 = array.slice(index);\n    return [subArray1, subArray2];\n}\nfunction encodeUint8Array(value, urlSafe) {\n    const encoded = tweetnacl_util_1.default.encodeBase64(value);\n    if (!urlSafe) {\n        return encoded;\n    }\n    return encodeURIComponent(encoded);\n}\nfunction decodeToUint8Array(value, urlSafe) {\n    if (urlSafe) {\n        value = decodeURIComponent(value);\n    }\n    return tweetnacl_util_1.default.decodeBase64(value);\n}\nfunction base64encode(value, urlSafe) {\n    let uint8Array;\n    if (value instanceof Uint8Array) {\n        uint8Array = value;\n    }\n    else {\n        if (typeof value !== 'string') {\n            value = (0, safejson_1.safeJsonStringify)(value);\n        }\n        uint8Array = tweetnacl_util_1.default.decodeUTF8(value);\n    }\n    return encodeUint8Array(uint8Array, urlSafe);\n}\nfunction base64decode(value, urlSafe) {\n    const decodedUint8Array = decodeToUint8Array(value, urlSafe);\n    return {\n        toString() {\n            return tweetnacl_util_1.default.encodeUTF8(decodedUint8Array);\n        },\n        toObject() {\n            try {\n                return (0, safejson_1.safeJsonParse)(tweetnacl_util_1.default.encodeUTF8(decodedUint8Array));\n            }\n            catch (e) {\n                return null;\n            }\n        },\n        toUint8Array() {\n            return decodedUint8Array;\n        }\n    };\n}\nfunction checkWSUrl(url) {\n    const match = url.match(new RegExp(/^\\w+:/, \"gi\"));\n    if (!match || !match.length) {\n        return false;\n    }\n    let scheme = match[0];\n    if (scheme === undefined) {\n        return false;\n    }\n    return new RegExp(\"^wss?:\").test(scheme);\n}\nconst resolveWebSocketImplementation = () => {\n    if (typeof WebSocket !== \"undefined\") {\n        return WebSocket;\n    }\n    else if (typeof global !== \"undefined\" && typeof global.WebSocket !== \"undefined\") {\n        return global.WebSocket;\n    }\n    else if (typeof window !== \"undefined\" && typeof window.WebSocket !== \"undefined\") {\n        return window.WebSocket;\n    }\n    else if (typeof self !== \"undefined\" && typeof self.WebSocket !== \"undefined\") {\n        return self.WebSocket;\n    }\n    return WebSocket;\n    //\n    // return require(\"ws\");\n};\nexports.resolveWebSocketImplementation = resolveWebSocketImplementation;\nconst hasBuiltInWebSocket = () => typeof WebSocket !== \"undefined\" ||\n    (typeof global !== \"undefined\" && typeof global.WebSocket !== \"undefined\") ||\n    (typeof window !== \"undefined\" && typeof window.WebSocket !== \"undefined\") ||\n    (typeof self !== \"undefined\" && typeof self.WebSocket !== \"undefined\");\nexports.hasBuiltInWebSocket = hasBuiltInWebSocket;\nconst hasLocalStorage = () => (typeof global !== \"undefined\" && (typeof global.localStorage !== \"undefined\")) ||\n    (typeof window !== \"undefined\" && typeof window.localStorage !== \"undefined\");\nexports.hasLocalStorage = hasLocalStorage;\nconst resolveLocalStorage = () => {\n    if (typeof global !== \"undefined\" && typeof global.localStorage !== \"undefined\") {\n        return global.localStorage;\n    }\n    else if (typeof window !== \"undefined\" && typeof window.localStorage !== \"undefined\") {\n        return window.localStorage;\n    }\n    return localStorage;\n};\nexports.resolveLocalStorage = resolveLocalStorage;\nconst isBrowser = () => typeof window !== \"undefined\";\nexports.isBrowser = isBrowser;\nexports.RANDOM_LENGTH = 32;\nfunction hashKey(key, encode = BASE16) {\n    (0, log_1.logDebug)(`hash key called ${key}`);\n    const result = (0, sha256_1.hash)((0, stringUtils_1.okxfromString)(key, encode));\n    return (0, to_string_1.toString)(result, encode);\n}\nfunction generateRandomBytes32() {\n    return tweetnacl_1.default.randomBytes(exports.RANDOM_LENGTH);\n}\nfunction generateTopic() {\n    let randomBytes32 = generateRandomBytes32();\n    (0, log_1.logDebug)(`generate topic called ${randomBytes32}`);\n    return hashKey((0, to_string_1.toString)(randomBytes32, BASE16));\n}\nconst isValidObject = (obj) => Object.getPrototypeOf(obj) === Object.prototype && Object.keys(obj).length;\nexports.isValidObject = isValidObject;\nfunction isIos() {\n    const userAgent = navigator.userAgent;\n    const maxTouchPoints = navigator.maxTouchPoints || 0;\n    // 检测 iPhone、iPod 和传统的 iPad\n    const isIOSDevice = /iPad|iPhone|iPod/.test(userAgent) && !window.MSStream;\n    // 针对 iPadOS 13 及以上的设备进行额外判断\n    const isIPadOS = (userAgent.includes('Mac') && maxTouchPoints > 1);\n    (0, log_1.logDebug)(`utils isIos >>>isIOSDevice: ${isIOSDevice}    >> isIPadOS: ${isIPadOS}`);\n    // 如果是 iOS 设备或者是 iPadOS 设备，返回 true\n    return isIOSDevice || isIPadOS;\n}\nfunction getLastSixMd5Hash(input) {\n    // 生成 MD5 哈希\n    const hash = crypto_js_1.default.MD5(input).toString();\n    // 获取最后六位\n    return hash.slice(-6);\n}\nfunction toSafeBase64FromBase64(base64) {\n    return base64\n        .replace(/=/g, \"\")\n        .replace(/\\+/g, \"-\")\n        .replace(/\\//g, \"_\");\n}\nfunction useShortLink() {\n    return !!window.useShortLink;\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.openLink = openLink;\nexports.openLinkBlank = openLinkBlank;\nexports.openDeeplinkWithFallback = openDeeplinkWithFallback;\nexports.isMobileUserAgent = isMobileUserAgent;\nexports.getUserAgent = getUserAgent;\nexports.isOS = isOS;\nexports.isBrowser = isBrowser;\nconst ua_parser_js_1 = __importDefault(require(\"ua-parser-js\"));\nconst log_1 = require(\"./log\");\nconst tma_api_1 = require(\"./tma-api\");\nfunction openLink(href, target = '_self') {\n    (0, log_1.logDebug)('openLink', href, target);\n    window.open(href, target, 'noopener noreferrer');\n}\nfunction openLinkBlank(href) {\n    openLink(href, '_blank');\n}\nfunction openDeeplinkWithFallback(href, fallback) {\n    const doFallback = () => {\n        if (isBrowser('safari') || (isOS('android') && isBrowser('firefox'))) {\n            // Safari does not support fallback to direct link.\n            return;\n        }\n        fallback();\n    };\n    const fallbackTimeout = setTimeout(() => doFallback(), 500);\n    window.addEventListener('blur', () => clearTimeout(fallbackTimeout), { once: true });\n    if (isOS('android') && (0, tma_api_1.inTg)()) {\n        openLink(href, '_blank');\n    }\n    else {\n        openLink(href, '_self');\n    }\n}\nfunction isMobileUserAgent() {\n    let check = false;\n    (function (a) {\n        if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) ||\n            /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.slice(0, 4)))\n            check = true;\n    })(navigator.userAgent ||\n        navigator.vendor ||\n        window.opera);\n    return check;\n}\nfunction getUserAgent() {\n    var _a, _b, _c;\n    const results = new ua_parser_js_1.default().getResult();\n    const osName = (_a = results.os.name) === null || _a === void 0 ? void 0 : _a.toLowerCase();\n    const deviceModel = (_b = results.device.model) === null || _b === void 0 ? void 0 : _b.toLowerCase();\n    let os;\n    switch (true) {\n        case deviceModel === 'ipad':\n            os = 'ipad';\n            break;\n        case osName === 'ios':\n            os = 'ios';\n            break;\n        case osName === 'android':\n            os = 'android';\n            break;\n        case osName === 'mac os':\n            os = 'macos';\n            break;\n        case osName === 'linux':\n            os = 'linux';\n            break;\n        case osName === null || osName === void 0 ? void 0 : osName.includes('windows'):\n            os = 'windows';\n            break;\n    }\n    const browserName = (_c = results.browser.name) === null || _c === void 0 ? void 0 : _c.toLowerCase();\n    let browser;\n    switch (true) {\n        case browserName === 'chrome':\n            browser = 'chrome';\n            break;\n        case browserName === 'firefox':\n            browser = 'firefox';\n            break;\n        case browserName === null || browserName === void 0 ? void 0 : browserName.includes('safari'):\n            browser = 'safari';\n            break;\n        case browserName === null || browserName === void 0 ? void 0 : browserName.includes('opera'):\n            browser = 'opera';\n            break;\n    }\n    return {\n        os,\n        browser\n    };\n}\nfunction isOS(...os) {\n    return os.includes(getUserAgent().os);\n}\nfunction isBrowser(...browser) {\n    return browser.includes(getUserAgent().browser);\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXSolanaProvider = void 0;\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXSolanaProvider {\n    getRealChainId(chainId) {\n        if (chainId == null) {\n            if (this.chainsSet.size == 1) {\n                let realChain = \"\";\n                let map = this.defaultChainMap;\n                this.chainsSet.forEach(function (chain) {\n                    if (map.has(chain)) {\n                        realChain = map.get(chain);\n                    }\n                });\n                if (realChain == \"\") {\n                    throw new Error(\"unsupported chainId\");\n                }\n                else {\n                    return realChain;\n                }\n            }\n            else {\n                throw new Error(\"connected to multiple solana chains,chainId can not be null\");\n            }\n        }\n        else {\n            if (chainId.startsWith(\"svm\")) {\n                return chainId;\n            }\n            else {\n                if (this.caip.includes(chainId)) {\n                    return chainId;\n                }\n                else {\n                    throw new Error(\"wrong chainId\");\n                }\n            }\n        }\n    }\n    getConnectedNamespace() {\n        var _a, _b, _c;\n        (_c = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces) === null || _b === void 0 ? void 0 : _b['solana']) === null || _c === void 0 ? void 0 : _c.chains.forEach(chain => {\n            this.chainsSet.add(chain.split(\":\")[0]);\n        });\n    }\n    constructor(provider) {\n        this.chainsSet = new Set();\n        this.caip = [\n            \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n            \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n            \"sonic:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n            \"sonic:EtWTRABZaYq6iMfeYKouRu166VU2xqa1\"\n        ];\n        this.defaultChainMap = new Map();\n        this.provider = provider;\n        this.defaultChainMap.set(\"solana\", \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\");\n        this.defaultChainMap.set(\"sonic\", \"sonic:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\");\n        this.getConnectedNamespace();\n    }\n    signMessage(message, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            let realMessage = message;\n            if (((_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.wallet) === null || _b === void 0 ? void 0 : _b.appName) == \"OKX Wallet\") {\n                realMessage = bs58_1.default.encode(new TextEncoder().encode(message));\n            }\n            else {\n                realMessage = message;\n            }\n            chainId = this.getRealChainId(chainId);\n            try {\n                let data = {\n                    \"chainId\": chainId,\n                    \"method\": \"solana_signMessage\",\n                    \"params\": {\n                        \"message\": realMessage,\n                        \"pubkey\": (_c = this.getAccount(chainId)) === null || _c === void 0 ? void 0 : _c.address\n                    },\n                    injectParams: {\n                        message: message,\n                        pubkey: (_d = this.getAccount(chainId)) === null || _d === void 0 ? void 0 : _d.address\n                    }\n                };\n                let signedMessage = yield this.provider.request(data, chainId);\n                (0, core_1.logDebug)(\"signMessage111\", signedMessage);\n                if ('result' in signedMessage) {\n                    let successData = signedMessage.result;\n                    return new Promise((resolve, reject) => {\n                        var _a;\n                        resolve({\n                            \"signature\": bs58_1.default.decode(successData),\n                            \"publicKey\": (_a = this.getAccount(chainId)) === null || _a === void 0 ? void 0 : _a.address\n                        });\n                    });\n                }\n                else {\n                    (0, core_1.logDebug)(\"signMessage111\", signedMessage);\n                    return new Promise((resolve, reject) => {\n                        resolve(signedMessage.error);\n                    });\n                }\n            }\n            catch (error) {\n                console.error('方法数据回调失败 --Error--', error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d;\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['solana']) === null || _b === void 0 ? void 0 : _b.accounts[0];\n        if (chainId != null) {\n            account = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces['solana']) === null || _d === void 0 ? void 0 : _d.accounts.filter(function (account) {\n                return account.startsWith(chainId);\n            })[0];\n        }\n        (0, core_1.logDebug)(\"getAccount\", account);\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const address = account.split(':')[2];\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address,\n            publicKey: new web3_js_1.PublicKey(address)\n        };\n    }\n    signTransaction(transaction, chainId) {\n        var _a, _b;\n        (0, core_1.logDebug)(\"OKXSolanaProvider\", typeof transaction);\n        chainId = this.getRealChainId(chainId);\n        try {\n            let serializedMessage = transaction.serialize({\n                requireAllSignatures: false,\n                verifySignatures: false,\n            });\n            let data = { \"data\": bs58_1.default.encode(serializedMessage), \"from\": (_a = this.getAccount(chainId)) === null || _a === void 0 ? void 0 : _a.address };\n            return this.getSignedTransaction(\"solana_signTransaction\", data, chainId, transaction);\n        }\n        catch (e) {\n            let serializedMessage = transaction.serialize();\n            let data = { \"data\": bs58_1.default.encode(serializedMessage), \"from\": (_b = this.getAccount(chainId)) === null || _b === void 0 ? void 0 : _b.address };\n            return this.getSignedTransaction(\"solana_signTransaction\", data, chainId, transaction);\n        }\n    }\n    signAllTransactions(transactions, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getRealChainId(chainId);\n            try {\n                var array = transactions.map((tx) => {\n                    var _a;\n                    var serializedMessage;\n                    if (tx instanceof web3_js_1.VersionedTransaction) {\n                        serializedMessage = tx.serialize();\n                    }\n                    else {\n                        serializedMessage = tx.serialize({\n                            requireAllSignatures: false,\n                            verifySignatures: false,\n                        });\n                    }\n                    return { \"data\": bs58_1.default.encode(serializedMessage), \"from\": (_a = this.getAccount(chainId)) === null || _a === void 0 ? void 0 : _a.address };\n                });\n                const response = yield this.provider.request({\n                    \"method\": \"solana_signAllTransactions\",\n                    \"params\": {\n                        \"transactions\": array\n                    },\n                    injectParams: transactions\n                }, chainId);\n                if (\"result\" in response) {\n                    let result = response.result;\n                    let newTransactions = JSON.parse(result).map((s) => {\n                        let c = bs58_1.default.decode(s);\n                        try {\n                            let transaction = web3_js_1.Transaction.from(c);\n                            (0, core_1.logDebug)(\"verifySignatures\", transaction.verifySignatures());\n                            return transaction;\n                        }\n                        catch (error) {\n                            return web3_js_1.VersionedTransaction.deserialize(c);\n                        }\n                    });\n                    return new Promise((resolve, reject) => {\n                        resolve(newTransactions);\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        resolve(response);\n                    });\n                }\n            }\n            catch (error) {\n                (0, core_1.logDebug)(\"getSignedTransaction\", error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    signAndSendTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b;\n            chainId = this.getRealChainId(chainId);\n            try {\n                let data = {};\n                try {\n                    let serializedMessage = transaction.serialize({\n                        requireAllSignatures: false,\n                        verifySignatures: false,\n                    });\n                    data = { \"data\": bs58_1.default.encode(serializedMessage), \"from\": (_a = this.getAccount(chainId)) === null || _a === void 0 ? void 0 : _a.address };\n                }\n                catch (e) {\n                    let serializedMessage = transaction.serialize();\n                    data = { \"data\": bs58_1.default.encode(serializedMessage), \"from\": (_b = this.getAccount(chainId)) === null || _b === void 0 ? void 0 : _b.address };\n                }\n                let signature = yield this.provider.request({\n                    \"method\": \"solana_signAndSendTransaction\",\n                    \"params\": data,\n                    injectParams: transaction\n                }, chainId);\n                if ('result' in signature) {\n                    let successData = signature.result;\n                    return new Promise((resolve, reject) => {\n                        resolve(successData);\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        resolve(signature);\n                    });\n                }\n            }\n            catch (error) {\n                (0, core_1.logDebug)(\"getSignedTransaction\", error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    getSignedTransaction(method, transactionStr, chainId, transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let signature = yield this.provider.request({\n                    \"method\": method,\n                    \"params\": transactionStr,\n                    injectParams: transaction\n                }, chainId);\n                if ('result' in signature) {\n                    let successData = signature.result;\n                    let c = bs58_1.default.decode(successData);\n                    let resultTx;\n                    try {\n                        resultTx = web3_js_1.Transaction.from(c);\n                    }\n                    catch (error) {\n                        resultTx = web3_js_1.VersionedTransaction.deserialize(c);\n                    }\n                    if (!(resultTx instanceof web3_js_1.VersionedTransaction)) {\n                        (0, core_1.logDebug)(\"verifySignatures\", resultTx.verifySignatures());\n                    }\n                    return new Promise((resolve, reject) => {\n                        resolve(resultTx);\n                    });\n                }\n                else if (\"injectResult\" in signature) {\n                    (0, core_1.logDebug)(\"getSignedTransaction injectResult\");\n                    let resultTx = signature.injectResult;\n                    return new Promise((resolve, reject) => {\n                        resolve(resultTx);\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        reject(signature);\n                    });\n                }\n            }\n            catch (error) {\n                (0, core_1.logDebug)(\"getSignedTransaction\", error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n}\nexports.OKXSolanaProvider = OKXSolanaProvider;\nexports.default = OKXSolanaProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXSolanaProvider = void 0;\nvar OKXSolanaProvider_1 = require(\"./OKXSolanaProvider\");\nObject.defineProperty(exports, \"OKXSolanaProvider\", { enumerable: true, get: function () { return OKXSolanaProvider_1.OKXSolanaProvider; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXBtcProvider = void 0;\nconst _1 = require(\"./\");\nclass OKXBtcProvider {\n    constructor(provider) {\n        this.caip = [\n            \"btc:mainnet\",\n            \"fractal:mainnet\"\n        ];\n        this.provider = provider;\n    }\n    getAddressForChainId(chainId) {\n        var _a, _b;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let accounts = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['btc']) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        });\n        if (accounts == undefined || accounts.length < 0) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `no connected account`);\n        }\n        let account = accounts[0];\n        const address = account.split(':')[2];\n        return address;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let extra = (_c = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['btc']) === null || _b === void 0 ? void 0 : _b.extra) === null || _c === void 0 ? void 0 : _c[chainId];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"compressedPublicKey\"];\n        }\n        return {\n            address: this.getAddressForChainId(chainId),\n            publicKey: publicKey\n        };\n    }\n    /**\n     *\n     * @param signStr\n     * @param chainId\n     * @param type\n     * @returns\n     */\n    signMessage(chainId, signStr, type) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (signStr === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signMessage parmas error`);\n            }\n            let params = {\n                signStr: signStr,\n                from: this.getAddressForChainId(chainId)\n            };\n            if (type) {\n                params.type = type;\n            }\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signMessage\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param toAddress\n     * @param satoshis\n     * @param options { feeRate: 0 }\n     * @returns\n     */\n    sendBitcoin(chainId, toAddress, satoshis, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            let params = {\n                from: this.getAddressForChainId(chainId),\n                to: toAddress,\n                value: (satoshis / 100000000).toString(),\n            };\n            if (options === null || options === void 0 ? void 0 : options.feeRate) {\n                params[\"satBytes\"] = options.feeRate.toString();\n            }\n            let result = yield this.send(chainId, params);\n            if (result !== undefined && ('txhash' in result)) {\n                // return txhash directly\n                return result.txhash;\n            }\n            // or return unexpected result\n            return result;\n        });\n    }\n    //  from - string：当前连接的钱包的 BTC 地址\n    //  to - string：接受 BTC 的地址\n    //  value - string：发送 BTC 的数量\n    //  satBytes - string： (可选) 自定义费率\n    //  memo - string： (可选) 指定 outputs OP_RETURN 内容 示例\n    //  memoPos - number： (可选) 指定 outputs OP_RETURN 输出位置，如果传了 memo 则必须传入 memoPos 指定位置，否则 memo 不生效\n    send(chainId, input) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (!this.checkParameters(input, 'to', 'value')) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send parmas  error`);\n            }\n            input[\"from\"] = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: 'btc_send',\n                    params: input\n                }, chainId);\n                if ('result' in ret) {\n                    return {\n                        txhash: ret.result\n                    };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param psbtHex string 要签名的 psbt 的十六进制字符串\n     * @param options object { autoFinalized: 0 }\n     */\n    signPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.signPsbts(chainId, [psbtHex], [options]).then(psbtResults => {\n                    let results = JSON.parse(psbtResults);\n                    resolve(results[0]);\n                }).catch(error => {\n                    reject(error);\n                });\n            });\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHexs Array\n     * @param options Array [{ autoFinalized: 0 }]\n     * @returns\n     */\n    signPsbts(chainId, psbtHexs, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHexs === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHexs: psbtHexs,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signPsbts\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHex string\n     * @param options object\n     * @returns\n     */\n    signAndPushPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHex === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHex: psbtHex,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signAndPushPsbt\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return JSON.parse(ret.result);\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param address string, receiver address\n     * @param inscriptionId string, 铭文 ID + 协议，没有传协议则默认是 Ordinals NFT ，目前仅支持 Ordinals 及 Atomicals 协议\n     * @param options object, { feeRate: number } custom rates\n     */\n    sendInscription(chainId, address, inscriptionId, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let extension = {\n                address: address,\n                inscriptionId: inscriptionId,\n                options: options\n            };\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (address === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method sendInscription params error`);\n            }\n            var feeRate = 0;\n            if (options && ('feeRate' in options)) {\n                feeRate = options.feeRate;\n            }\n            let coinId = '';\n            let from = this.getAddressForChainId(chainId);\n            var protocolId = 7; //ProtocolIdBRCNFT\n            if (inscriptionId !== 'undefined') {\n                let atomicSuffix = \"-Atomicals\";\n                let ordinalsSuffix = \"-Ordinals\";\n                if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(atomicSuffix.toLowerCase())) {\n                    protocolId = 8; //WXRCProtocolIdARCNFT\n                    inscriptionId = this.removeSuffix(inscriptionId, atomicSuffix);\n                }\n                else if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(ordinalsSuffix.toLowerCase())) {\n                    inscriptionId = this.removeSuffix(inscriptionId, ordinalsSuffix);\n                }\n            }\n            let params = {\n                scenario: 5,\n                feeRate: feeRate,\n                txType: \"20\",\n                to: address,\n                batchBean: [\n                    {\n                        coinAmount: \"1\",\n                        nftId: inscriptionId,\n                        protocolId: protocolId,\n                        coinId: coinId,\n                        inscriptionId: \"\",\n                        from: from\n                    }\n                ],\n                extension: extension\n            };\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_sendInscription\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    removeSuffix(str, suffix) {\n        if (str.endsWith(suffix)) {\n            return str.slice(0, str.length - suffix.length);\n        }\n        return str;\n    }\n    checkParameters(params, ...keys) {\n        var unexistKeys = [];\n        keys.forEach(key => {\n            if (!(`${key}` in params)) {\n                unexistKeys.push(key);\n            }\n        });\n        if (unexistKeys.length > 0) {\n            console.log('not find key: ', unexistKeys.join(\",\"));\n            return false;\n        }\n        return true;\n    }\n    /**\n     *\n     * @param chainId eg. btc:mainnet\n     * @returns eg. btc\n     */\n    checkChainId(chainId) {\n        if (this.caip.includes(chainId)) {\n            let [namespaceKey, _] = chainId.split(\":\");\n            return namespaceKey;\n        }\n        return undefined;\n    }\n}\nexports.OKXBtcProvider = OKXBtcProvider;\nexports.default = OKXBtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCosmosProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXCosmosProvider {\n    constructor(provider) {\n        this.provider = provider;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e, _f;\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount chainId:\", chainId);\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount namespaces:\", JSON.stringify((_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces));\n        let account = (_c = (_b = this.provider.session) === null || _b === void 0 ? void 0 : _b.namespaces[core_1.NameSpaceKeyCosmos]) === null || _c === void 0 ? void 0 : _c.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount account:\", JSON.stringify(account));\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount address:\", address);\n        let extra = (_f = (_e = (_d = this.provider.session) === null || _d === void 0 ? void 0 : _d.namespaces[core_1.NameSpaceKeyCosmos]) === null || _e === void 0 ? void 0 : _e.extra) === null || _f === void 0 ? void 0 : _f[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n            console.log(\"aptos_publicKey\", publicKey);\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            algo: \"secp256k1\",\n            address: address,\n            bech32Address: address,\n            pubKey: this.hexToUint8Array(publicKey),\n        };\n    }\n    signArbitrary(chainId, signerAddress, data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const base64Encoded = window.btoa(data);\n            const signDoc = {\n                chain_id: \"\",\n                account_number: \"0\",\n                sequence: \"0\",\n                fee: {\n                    gas: \"0\",\n                    amount: []\n                },\n                msgs: [{\n                        \"type\": \"sign/MsgSignData\",\n                        \"value\": {\n                            \"signer\": signerAddress,\n                            \"data\": base64Encoded\n                        }\n                    }],\n                memo: \"\"\n            };\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signArbitrary\",\n                \"params\": {\n                    \"signer\": signerAddress,\n                    \"chain_id\": chainId.split(\":\")[1],\n                    \"data\": signDoc\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    if (typeof ret.result == \"string\") {\n                        return JSON.parse(ret.result);\n                    }\n                    else {\n                        return ret.result;\n                    }\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signAmino(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (signDoc.msgs[0].type == \"sign/MsgSignData\") {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signArbitrary\",\n                    \"params\": {\n                        \"signer\": signerAddress,\n                        \"chain_id\": chainId.split(\":\")[1],\n                        \"data\": signDoc\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        return ret.result;\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    return error;\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                }\n            }\n            else {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signAmino\",\n                    \"params\": {\n                        \"signer\": signerAddress,\n                        \"chainId\": chainId.split(\":\")[1],\n                        \"sign_doc\": signDoc,\n                        \"signOptions\": signOptions\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        const resData = JSON.parse(ret.result);\n                        console.log(\"signdoc\", signDoc, resData.signDoc);\n                        signDoc.fee = resData.signDoc.fee;\n                        return { signed: signDoc, signature: resData.signature };\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                    return error;\n                }\n            }\n        });\n    }\n    signDirect(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const object = {\n                bodyBytes: this.bufferToHex(signDoc.bodyBytes),\n                authInfoBytes: this.bufferToHex(signDoc.authInfoBytes),\n                chainId: signDoc.chainId,\n                accountNumber: signDoc.accountNumber ? signDoc.accountNumber.toString() : null,\n                signOptions: signOptions ? signOptions : null\n            };\n            let data = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signDirect\",\n                \"params\": {\n                    \"signer\": signerAddress,\n                    \"chainId\": chainId.split(\":\")[1],\n                    \"sign_doc\": object,\n                }\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    const res = JSON.parse(ret.result);\n                    console.log(\"signdirect result\", res);\n                    signDoc.authInfoBytes = this.messageToBuffer(res.signDoc.authInfoBytes);\n                    return { signed: signDoc, signature: res.signature };\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    messageToBuffer(message) {\n        var buffer = Uint8Array.from([]);\n        try {\n            if (typeof message === \"string\") {\n                buffer = this.hexToUint8Array(message.replace(\"0x\", \"\"));\n            }\n            else {\n                buffer = Uint8Array.from(message);\n            }\n        }\n        catch (err) {\n            console.log(`messageToBuffer error: ${err}`);\n        }\n        return buffer;\n    }\n    bufferToHex(arr) {\n        let output = [...new Uint8Array(arr)]\n            .map(x => x.toString(16).padStart(2, '0'))\n            .join('');\n        return '0x' + output;\n    }\n    hexToUint8Array(hexString) {\n        if (hexString.length % 2 !== 0) {\n            throw \"Invalid hexString\";\n        }\n        var arrayBuffer = new Uint8Array(hexString.length / 2);\n        for (var i = 0; i < hexString.length; i += 2) {\n            var byteValue = parseInt(hexString.substr(i, 2), 16);\n            if (isNaN(byteValue)) {\n                throw \"Invalid hexString\";\n            }\n            arrayBuffer[i / 2] = byteValue;\n        }\n        return arrayBuffer;\n    }\n}\nexports.OKXCosmosProvider = OKXCosmosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTonProvider = void 0;\nconst _1 = require(\"./\");\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXTonProvider {\n    constructor(generator) {\n        this.statusChangeSubscriptions = [];\n        this.statusChangeErrorSubscriptions = [];\n        this.provider = generator;\n        this.provider.on(\"connect\", () => {\n            let tonWallet = this.wallet();\n            (0, core_1.logDebug)(\"OKXTONProvider event connect:\", JSON.stringify(tonWallet));\n            this.statusChangeSubscriptions.forEach(callback => callback(tonWallet));\n        });\n        this.provider.on(\"reconnect\", () => {\n            let tonWallet = this.wallet();\n            (0, core_1.logDebug)(\"OKXTONProvider event reconnect:\", JSON.stringify(tonWallet));\n            this.statusChangeSubscriptions.forEach(callback => callback(tonWallet));\n        });\n        this.provider.on(\"disconnect\", () => {\n            (0, core_1.logDebug)(\"OKXTONProvider event disconnect:\");\n            this.statusChangeSubscriptions.forEach(callback => callback(null));\n        });\n        this.provider.on(\"connect_error\", (error) => {\n            (0, core_1.logDebug)(\"OKXTONProvider event connect_error:\", JSON.stringify(error));\n            this.statusChangeErrorSubscriptions.forEach(errorsHandler => errorsHandler(error));\n        });\n    }\n    connected() {\n        if (this.provider.connected()) {\n            return !!this.provider.session.namespaces[\"ton\"];\n        }\n        return false;\n    }\n    account() {\n        try {\n            if (!this.provider.session) {\n                return null;\n            }\n            let tonNameSpace = this.provider.session.namespaces['ton'];\n            if (!tonNameSpace || !tonNameSpace.payload || !tonNameSpace.payload.ton_addr) {\n                return null;\n            }\n            let ton_addr = tonNameSpace.payload.ton_addr;\n            return {\n                address: ton_addr.address,\n                chain: ton_addr.network,\n                walletStateInit: ton_addr.walletStateInit,\n                publicKey: ton_addr.publicKey,\n            };\n        }\n        catch (e) {\n            (0, core_1.logDebug)(\"OKXTONProvider account  error:\", JSON.stringify(e));\n            return null;\n        }\n    }\n    wallet() {\n        if (this.connected()) {\n            try {\n                let sessionWallet = this.provider.session.wallet;\n                let tonDeviceInfo = {\n                    platform: sessionWallet.platform,\n                    appName: sessionWallet.appName,\n                    appVersion: sessionWallet.appVersion,\n                    maxProtocolVersion: sessionWallet.maxProtocolVersion,\n                    features: ['ton_sendTransaction'],\n                };\n                const wallet = {\n                    device: tonDeviceInfo,\n                    provider: \"http\",\n                    account: this.account()\n                };\n                let tonNameSpace = this.provider.session.namespaces['ton'];\n                if (tonNameSpace && tonNameSpace.payload && tonNameSpace.payload.ton_proof) {\n                    wallet.connectItems = {\n                        tonProof: tonNameSpace.payload.ton_proof\n                    };\n                }\n                (0, core_1.logDebug)(\"OKXTONProvider wallet :\", JSON.stringify(wallet));\n                return wallet;\n            }\n            catch (e) {\n                (0, core_1.logDebug)(\"OKXTONProvider wallet  error:\", JSON.stringify(e));\n                return null;\n            }\n        }\n        return null;\n    }\n    onStatusChange(callback, errorsHandler) {\n        this.statusChangeSubscriptions.push(callback);\n        if (errorsHandler) {\n            this.statusChangeErrorSubscriptions.push(errorsHandler);\n        }\n        return () => {\n            this.statusChangeSubscriptions = this.statusChangeSubscriptions.filter(item => item !== callback);\n            if (errorsHandler) {\n                this.statusChangeErrorSubscriptions = this.statusChangeErrorSubscriptions.filter(item => item !== errorsHandler);\n            }\n        };\n    }\n    sendTransaction(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (transaction.network && transaction.network !== core_1.TONCHAIN.MAINNET) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, 'OKXTONProvider sendTransaction network error');\n            }\n            if (!transaction.network) {\n                transaction.network = core_1.TONCHAIN.MAINNET;\n            }\n            if (this.provider.session) {\n                if (!transaction.from) {\n                    const accounts = this.provider.requestAccountsWithNamespace('ton');\n                    transaction.from = accounts[0];\n                }\n            }\n            const requestParams = {\n                method: \"ton_sendTransaction\",\n                params: transaction,\n            };\n            let chain = 'ton:' + core_1.TONCHAIN.MAINNET;\n            (0, core_1.logDebug)(\"OKXTONProvider sendTransaction transaction----:\", chain, JSON.stringify(requestParams));\n            return this.provider.request(requestParams, chain);\n        });\n    }\n}\nexports.OKXTonProvider = OKXTonProvider;\nexports.default = OKXTonProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTronProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXTronProvider {\n    constructor(provider) {\n        this.TRON_CHAIN_ID = \"tron:mainnet\";\n        this.provider = provider;\n    }\n    getChain(chainId) {\n        if (chainId == null) {\n            chainId = this.TRON_CHAIN_ID;\n        }\n        if (chainId != this.TRON_CHAIN_ID) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, \"The chainId:\" + chainId + \"is wrong for OKXTronProvider\");\n        }\n        return chainId;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e;\n        chainId = this.getChain(chainId);\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[core_1.NameSpaceKeyTron]) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        let extra = (_e = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces[core_1.NameSpaceKeyTron]) === null || _d === void 0 ? void 0 : _d.extra) === null || _e === void 0 ? void 0 : _e[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address\n        };\n    }\n    stringToHex(str) {\n        let hex = '';\n        for (let i = 0; i < str.length; i++) {\n            hex += str.charCodeAt(i).toString(16).padStart(2, '0');\n        }\n        return hex;\n    }\n    signMessage(data, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"tron_signMessage\",\n                \"params\": {\n                    \"message\": this.stringToHex(data)\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signMessageV2(data, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"tron_signMessageV2\",\n                \"params\": {\n                    \"message\": data\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let data = {\n                \"method\": \"tron_signTransaction\",\n                \"params\": transaction\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    let signedTx;\n                    if (typeof ret.result == \"string\") {\n                        signedTx = JSON.parse(ret.result);\n                    }\n                    else {\n                        signedTx = ret.result;\n                    }\n                    let realSignTx = {};\n                    realSignTx.visible = signedTx.visible;\n                    realSignTx.txID = signedTx.txID;\n                    let rawData = {};\n                    rawData.contract = signedTx.raw_data.contract;\n                    rawData.expiration = signedTx.raw_data.expiration;\n                    rawData.ref_block_bytes = signedTx.raw_data.ref_block_bytes;\n                    rawData.fee_limit = signedTx.raw_data.fee_limit;\n                    rawData.ref_block_hash = signedTx.raw_data.ref_block_hash;\n                    rawData.timestamp = signedTx.raw_data.timestamp;\n                    realSignTx.raw_data = rawData;\n                    realSignTx.raw_data_hex = signedTx.raw_data_hex;\n                    realSignTx.signature = signedTx.signature;\n                    return realSignTx;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signAndSendTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let data = {\n                \"method\": \"tron_signAndSendTransaction\",\n                \"params\": transaction\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n}\nexports.OKXTronProvider = OKXTronProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXUniversalProvider = void 0;\nconst eip155_1 = require(\"./provider/providers/eip155\");\nconst sui_1 = require(\"./provider/providers/sui\");\nconst constants_1 = require(\"./provider/constants\");\nconst eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\nconst client_1 = require(\"./packages/sign-client/client\");\nconst core_1 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"./packages/utils/namespaces\");\nconst solana_1 = __importDefault(require(\"./provider/providers/solana\"));\nconst btc_1 = __importDefault(require(\"./provider/providers/btc\"));\nconst aptos_1 = __importDefault(require(\"./provider/providers/aptos\"));\nconst ton_1 = __importDefault(require(\"./provider/providers/ton\"));\nconst cosmos_1 = __importDefault(require(\"./provider/providers/cosmos\"));\nconst tron_1 = __importDefault(require(\"./provider/providers/tron\"));\nconst utils_1 = require(\"./provider/utils\");\nconst packages_1 = require(\"./packages\");\nconst provider_1 = require(\"./provider\");\nclass OKXUniversalProvider {\n    static init(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider init() called');\n            (0, core_1.checkMetaData)(opts.dappMetaData);\n            // ignore rpc provider check by default\n            (0, utils_1.setGlobal)('disableProviderPing', true);\n            let provider;\n            if (window && window.okxConnectUniversalinwindow && window.okxConnectUniversalinwindow instanceof OKXUniversalProvider) {\n                (0, core_1.logDebug)('OKXUniversalConnect init() old called');\n                provider = window.okxConnectUniversalinwindow;\n            }\n            else {\n                (0, core_1.logDebug)('OKXUniversalConnect init() new called');\n                provider = new OKXUniversalProvider(opts);\n                yield provider.initialize();\n                if (window) {\n                    window.okxConnectUniversalinwindow = provider;\n                }\n            }\n            (0, core_1.getDefaultReporter)().configVersionAndSide('universalprovider-1.5.2', 'dapp', provider.providerOpts.dappMetaData.name);\n            return provider;\n        });\n    }\n    constructor(opts) {\n        this.rpcProviders = {};\n        this.events = new eventemitter3_1.default();\n        if (!opts.connector || opts.connector.length == 0) {\n            opts.connector = [core_1.AppwalletConnector.getConnector(), core_1.TgwalletConnector.getConnector()];\n        }\n        this.providerOpts = opts;\n    }\n    request(args, chain) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider request() called');\n            (0, core_1.reportLog)('OKXUniversalProvider request() called');\n            if (!this.connected()) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            (0, core_1.logDebug)('OKXUniversalProvider request()  connected ');\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return yield this.getProvider(namespace).request(requestParam);\n        });\n    }\n    buildRequestParamFromRequest(args, chain) {\n        var _a;\n        (0, core_1.logDebug)(\"UniversalProvider request args >>>>>>>: \", chain, (0, core_1.safeJsonStringify)(args));\n        let [namespace, chainId] = this.validateChain(chain);\n        if (!this.session) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Please call connect() before request()\");\n        }\n        let keyArr = Object.keys(this.session.namespaces);\n        if (!chain && keyArr && keyArr.length > 1) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Multiple chains have been linked, the request method requires chain`);\n        }\n        if (namespace == \"aptos\" && chainId == \"mainnet\") {\n            namespace = \"aptos\";\n            chainId = \"637\";\n        }\n        if (namespace == \"movement\" && chainId == \"testnet\") {\n            namespace = \"aptos\";\n            chainId = \"70000060\";\n        }\n        const requestParam = Object.assign(Object.assign({}, args), { chainId: `${namespace}:${chainId}`, redirect: (_a = args.redirect) !== null && _a !== void 0 ? _a : this.sessionConfig.redirect });\n        return { namespace, requestParam };\n    }\n    enable() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.client) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (!this.session) {\n                if (this.connectOpts) {\n                    yield this.connect(this.connectOpts);\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n                }\n            }\n            const accounts = yield this.requestAccounts();\n            return accounts;\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider disconnect() called');\n            (0, core_1.reportLog)('provider disconnect called');\n            if (!this.session) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n                let called = false;\n                const onRequestSent = () => __awaiter(this, void 0, void 0, function* () {\n                    if (!called) {\n                        called = true;\n                        yield this.disconnectAndEmit();\n                        yield this.cleanup();\n                        resolve();\n                        (0, core_1.logDebug)(\"UniversalProvider disconnect Disconnected\");\n                        (0, core_1.reportLog)('provider disconnect disconnected');\n                    }\n                });\n                try {\n                    yield this.client.disconnect();\n                    yield onRequestSent();\n                }\n                catch (e) {\n                    yield onRequestSent();\n                }\n            }));\n        });\n    }\n    disconnectAndEmit() {\n        var _a, _b;\n        this.client.engine.clearData();\n        this.events.emit(\"disconnect\", { topic: (_a = this.session) === null || _a === void 0 ? void 0 : _a.topic });\n        this.events.emit(\"session_delete\", { topic: (_b = this.session) === null || _b === void 0 ? void 0 : _b.topic });\n    }\n    aptosChainNameToGeneralId(chainId) {\n        if (chainId == \"aptos:mainnet\") {\n            return \"aptos:637\";\n        }\n        else if (chainId == \"movement:testnet\") {\n            return \"aptos:70000060\";\n        }\n        else {\n            return chainId;\n        }\n    }\n    replaceAptos(opts) {\n        var _a, _b;\n        let aptosNameSpace = (_a = opts.namespaces) === null || _a === void 0 ? void 0 : _a[\"aptos\"];\n        if (aptosNameSpace != undefined) {\n            let realNS = this.replaceAptosInner(aptosNameSpace);\n            if (opts.namespaces != undefined && \"aptos\" in opts.namespaces && realNS != undefined) {\n                opts.namespaces.aptos = realNS;\n            }\n        }\n        let optionAptosNameSpace = (_b = opts.optionalNamespaces) === null || _b === void 0 ? void 0 : _b[\"aptos\"];\n        if (optionAptosNameSpace != undefined) {\n            let realOptionNS = this.replaceAptosInner(optionAptosNameSpace);\n            if (opts.optionalNamespaces != undefined && \"aptos\" in opts.optionalNamespaces && realOptionNS != undefined) {\n                opts.optionalNamespaces.aptos = realOptionNS;\n            }\n        }\n        return opts;\n    }\n    replaceAptosInner(aptosNameSpace) {\n        var _a;\n        if (aptosNameSpace != undefined) {\n            aptosNameSpace.chains = (_a = aptosNameSpace.chains) === null || _a === void 0 ? void 0 : _a.map(chainId => {\n                return this.aptosChainNameToGeneralId(chainId);\n            });\n            if (aptosNameSpace.defaultChain != undefined) {\n                aptosNameSpace.defaultChain = this.aptosChainNameToGeneralId(aptosNameSpace.defaultChain);\n            }\n        }\n        return aptosNameSpace;\n    }\n    replaceAptosGeneralIdWithNetName(chainId) {\n        if (chainId.includes(\"aptos:637\")) {\n            chainId = chainId.replace(\"aptos:637\", \"aptos:mainnet\");\n        }\n        else if (chainId.includes(\"aptos:70000060\")) {\n            chainId = chainId.replace(\"aptos:70000060\", \"movement:testnet\");\n        }\n        return chainId;\n    }\n    replaceSessionAptos(session) {\n        var _a;\n        let namespaces = (_a = session === null || session === void 0 ? void 0 : session.namespaces) === null || _a === void 0 ? void 0 : _a[\"aptos\"];\n        if (namespaces != undefined && namespaces.chains != undefined) {\n            namespaces.chains = namespaces.chains.map(chain => {\n                return this.replaceAptosGeneralIdWithNetName(chain);\n            });\n            namespaces.accounts = namespaces.accounts.map((account) => {\n                return this.replaceAptosGeneralIdWithNetName(account);\n            });\n            let extra = {};\n            Object.keys(namespaces.extra || {}).forEach((key, index) => {\n                let newKey = this.replaceAptosGeneralIdWithNetName(key);\n                extra[this.replaceAptosGeneralIdWithNetName(key)] = Object.values((session === null || session === void 0 ? void 0 : session.namespaces[\"aptos\"].extra) || {})[index];\n            });\n            namespaces.extra = extra;\n        }\n        (0, core_1.logDebug)(\"replaceSessionAptos\", session);\n    }\n    connected() {\n        (0, core_1.logDebug)('OKXUniversalProvider connected() called');\n        (0, core_1.reportLog)('provider connected called');\n        let disconnectInner = () => {\n            try {\n                this.cleanup();\n                this.client.engine.connectManagerDisconnect();\n            }\n            catch (e) {\n                (0, core_1.logDebug)(\"Error during disconnect:\", e);\n            }\n        };\n        try {\n            if (!this.session)\n                return false;\n            if (!this.client.engine.getCurrentConnectionReady(Object.keys(this.session.namespaces))) {\n                disconnectInner();\n                return false;\n            }\n            return true;\n        }\n        catch (e) {\n            disconnectInner();\n            return false;\n        }\n    }\n    connectAndSign(opts, signRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() called');\n            const updatedOpts = Object.assign(Object.assign({}, opts), { signRequest });\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() opts:', JSON.stringify(opts));\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() signRequest:', JSON.stringify(signRequest));\n            return yield this.connect(updatedOpts);\n        });\n    }\n    connect(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider connect() called');\n            (0, core_1.reportLog)('provider connect called');\n            if (!this.client) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (this.connected()) {\n                return this.session;\n            }\n            opts = this.replaceAptos(opts);\n            (0, core_1.logDebug)(`OKXUniversalProvider connect >>>>`, JSON.stringify(opts));\n            if (opts.sessionConfig === undefined) {\n                opts.sessionConfig = {};\n            }\n            if (opts.sessionConfig.openUniversalUrl === undefined) {\n                opts.sessionConfig.openUniversalUrl = (0, core_1.isMobileUserAgent)();\n            }\n            this.setNamespaces(opts);\n            try {\n                (0, core_1.logDebug)(`UniversalProvider connect opts.stringify ====> ${JSON.stringify(opts)}`);\n                let session = yield this.client.connect(opts);\n                this.replaceSessionAptos(session);\n                (0, core_1.logDebug)(`UniversalProvider connect success ====> ${JSON.stringify(session)}`);\n                if (session) {\n                    this.session = session;\n                    this.client.session = session;\n                    this.setConnectConnector();\n                    (0, core_1.logDebug)(`OKXUniversalProvider connect success opts>>>>`, JSON.stringify(opts));\n                    this.onConnect();\n                    if (opts.signRequest && opts.signRequest.length > 0) {\n                        let requestItem = opts.signRequest[0];\n                        let signResponseList = [];\n                        if (typeof window !== \"undefined\" && window && window.okxConnectUniversalUIinwindow) { //from UI\n                            (0, core_1.logDebug)(`OKXUniversalProvider connect success, us UI SDK>>>>`);\n                            if (this.session.signResponse && this.session.signResponse.length > 0) { // >=6.96\n                                signResponseList = this.session.signResponse;\n                            }\n                        }\n                        else {\n                            (0, core_1.logDebug)(`OKXUniversalProvider connect success, us Universal SDK>>>>`);\n                            if (this.session.signResponse && this.session.signResponse.length > 0) { // >=6.96\n                                signResponseList = this.session.signResponse;\n                            }\n                            else {\n                                signResponseList.push((0, packages_1.creatNotSupportMethodItemReplay)(requestItem));\n                            }\n                        }\n                        (0, core_1.logDebug)(`UniversalProvider connect success connectRequestReply ====> ${JSON.stringify(signResponseList)}`);\n                        setTimeout(() => {\n                            this.events.emit(\"connect_signResponse\", signResponseList);\n                        }, 100);\n                    }\n                    return session;\n                }\n                return undefined;\n            }\n            catch (error) {\n                (0, core_1.logDebug)(`UniversalProvider connect error ====> `, JSON.stringify(error));\n                throw error;\n            }\n        });\n    }\n    syncAllAddresses() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if ((0, provider_1.syncAddressAvailable)(this.session.wallet)) {\n                return this.client.syncAllAddress();\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n            }\n        });\n    }\n    setConnectConnector() {\n        var _a;\n        this.client.setConnectConnector((_a = this.session) === null || _a === void 0 ? void 0 : _a.wallet);\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    setDefaultChain(chain, rpcUrl) {\n        (0, core_1.logDebug)('OKXUniversalProvider setDefaultChain() called');\n        // chain = this.aptosChainNameToGeneralId(chain)\n        try {\n            // ignore without active session\n            if (!this.connected())\n                return;\n            const [namespace, chainId] = this.validateChain(chain);\n            const provider = this.getProvider(namespace);\n            provider.setDefaultChain(chainId, rpcUrl);\n        }\n        catch (error) {\n            // ignore the error if the fx is used prematurely before namespaces are set\n            if (!/Please call connect/.test(error.message))\n                throw error;\n        }\n    }\n    checkStorage() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let sessionInfoStr = yield this.getFromStore(\"connectSession\");\n            (0, core_1.logDebug)(sessionInfoStr);\n            if (sessionInfoStr) {\n                let sessionInfo = sessionInfoStr;\n                this.session = sessionInfo;\n                this.client.session = this.session;\n                this.setConnectConnector();\n                this.sessionConfig = sessionInfo.sessionConfig;\n                this.client.sessionConfig = this.sessionConfig;\n                (0, core_1.logDebug)('[evm u-provider] do reconnection', this.session);\n                yield this.client.restoreconnect(sessionInfo);\n                this.createProviders();\n                this.registerEventListeners();\n                setTimeout(() => {\n                    this.events.emit(\"reconnect\", { session: this.session });\n                }, 100);\n                this.registerEventListeners();\n            }\n        });\n    }\n    initialize() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider initialize() called');\n            (0, core_1.reportLog)('provider initialize called');\n            const data = Object.assign({ url: window.location.hostname, origin: window.location.origin }, this.providerOpts.dappMetaData);\n            this.client = new client_1.SignClient(data, this.events);\n            this.registerConnector(this.providerOpts.connector);\n            yield this.checkStorage();\n        });\n    }\n    createProviders() {\n        if (!this.client) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n        }\n        if (!this.connected()) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Session not initialized. Please call connect() before enable()\");\n        }\n        const providersToCreate = [\n            ...new Set(Object.keys(this.session.namespaces)\n                .filter((namespace) => { var _a, _b; return ((_b = (_a = this.session.namespaces[namespace]) === null || _a === void 0 ? void 0 : _a.accounts) === null || _b === void 0 ? void 0 : _b.length) > 0; })\n                .map((namespace) => (0, namespaces_1.parseNamespaceKey)(namespace))),\n        ];\n        providersToCreate.forEach((namespace) => {\n            if (!this.session)\n                return;\n            const namespacesValue = this.session.namespaces;\n            const currentNameSpace = namespacesValue[namespace];\n            (0, core_1.logDebug)(\"init eip155 >> \", currentNameSpace);\n            switch (namespace) {\n                case \"eip155\":\n                    const opts = {\n                        namespace: currentNameSpace\n                    };\n                    this.rpcProviders[namespace] = new eip155_1.Eip155Provider(opts, this.client, this.events);\n                    break;\n                case \"solana\":\n                    const opts1 = {\n                        namespace: currentNameSpace\n                    };\n                    let solanaProvider = new solana_1.default(opts1, \"solana\", this.client, this.events);\n                    this.rpcProviders[namespace] = solanaProvider;\n                    let sonicProvider = new solana_1.default(opts1, \"sonic\", this.client, this.events);\n                    this.rpcProviders['sonic'] = sonicProvider;\n                    let svmProvider = new solana_1.default(opts1, \"svm\", this.client, this.events);\n                    this.rpcProviders['svm'] = svmProvider;\n                    // this.rpcProviders[namespace] = new SolanaProvider(opts1, () => { return this.session; });\n                    break;\n                case \"ton\":\n                    const optsTon = {\n                        namespace: currentNameSpace\n                    };\n                    let tonProvider = new ton_1.default(optsTon, this.client, this.events);\n                    this.rpcProviders[namespace] = tonProvider;\n                    break;\n                case \"sui\":\n                    const optsSui = {\n                        namespace: currentNameSpace\n                    };\n                    let suiProvider = new sui_1.SuiProvider(optsSui, this.client, this.events);\n                    suiProvider.name = \"sui\";\n                    this.rpcProviders[namespace] = suiProvider;\n                    break;\n                case \"btc\":\n                    const optsBtc = {\n                        namespace: currentNameSpace\n                    };\n                    let btcProvider = new btc_1.default(optsBtc, \"btc\", this.client, this.events);\n                    this.rpcProviders[\"btc\"] = btcProvider;\n                    let fbProvider = new btc_1.default(optsBtc, \"fractal\", this.client, this.events);\n                    this.rpcProviders[\"fractal\"] = fbProvider;\n                    break;\n                case \"aptos\":\n                    let aptosProvider = new aptos_1.default({\n                        namespace: currentNameSpace\n                    }, \"aptos\", this.client, this.events);\n                    this.rpcProviders[namespace] = aptosProvider;\n                    let moveProvider = new aptos_1.default({\n                        namespace: currentNameSpace\n                    }, \"movement\", this.client, this.events);\n                    this.rpcProviders[\"movement\"] = moveProvider;\n                    break;\n                case \"cosmos\":\n                    let cosmosProvider = new cosmos_1.default({\n                        namespace: currentNameSpace\n                    }, this.client, this.events);\n                    this.rpcProviders[namespace] = cosmosProvider;\n                    break;\n                case \"tron\":\n                    let tronProvider = new tron_1.default({\n                        namespace: currentNameSpace\n                    }, this.client, this.events);\n                    this.rpcProviders[namespace] = tronProvider;\n                    break;\n            }\n        });\n    }\n    registerEventListeners() {\n        if (typeof this.client === \"undefined\") {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client is not initialized\");\n        }\n        this.client.engine.addDisconnectListener(() => {\n            this.disconnectAndEmit();\n            this.cleanup();\n        });\n        this.on(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, (caip2ChainId) => {\n            this.onChainChanged(caip2ChainId);\n        });\n        this.on(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, (nameSpaces) => {\n            if (nameSpaces) {\n                const nameSpacekey = Object.keys(nameSpaces)[0];\n                if (this.session) {\n                    this.session.namespaces[nameSpacekey] = nameSpaces[nameSpacekey];\n                    if (this.session) {\n                        this.persist(\"connectSession\", this.session);\n                        this.events.emit(\"session_update\", this.session);\n                    }\n                    (0, core_1.logDebug)(\"PROVIDER_EVENTS.UPDATE_NAMESPACES this.session... ->>>\", JSON.stringify(this.session));\n                }\n            }\n        });\n    }\n    getProvider(namespace) {\n        (0, core_1.logDebug)('current get providers', this.rpcProviders);\n        (0, core_1.logDebug)('query namespace: ', namespace);\n        return this.rpcProviders[namespace];\n    }\n    setNamespaces(params) {\n        this.connectOpts = params;\n        const { namespaces, sessionConfig } = params;\n        const data = {\n            origin: window.location.origin,\n            url: window.location.hostname,\n            name: this.providerOpts.dappMetaData.name,\n            icon: this.providerOpts.dappMetaData.icon,\n        };\n        this.sessionConfig = Object.assign({ dappInfo: data }, sessionConfig);\n        (0, core_1.logDebug)(\"setNamespaces sessionConfig>>>\", this.sessionConfig);\n        this.client.sessionConfig = this.sessionConfig;\n        this.persist(\"sessionConfig\", sessionConfig);\n    }\n    validateChain(chain) {\n        var _a;\n        let [namespace, chainId] = (chain === null || chain === void 0 ? void 0 : chain.split(\":\")) || [\"\", \"\"];\n        if (!this.session || !this.session.namespaces || !Object.keys(this.session.namespaces).length) {\n            (0, core_1.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        if (namespace) {\n            if (!this.isChainNamespaceInSession(namespace)) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace '${namespace}' is not configured. Please call connect() first with namespace config.`);\n            }\n            if (chainId && chain) {\n                (0, core_1.logDebug)('this.session.namespaces -->> ', namespace, JSON.stringify(this.session.namespaces));\n                const chainsArr = (_a = this.session.namespaces[namespace]) === null || _a === void 0 ? void 0 : _a.chains;\n                (0, core_1.logDebug)('get chainsArr & chain', JSON.stringify(chainsArr), chain);\n                if (chainsArr && !chainsArr.includes(chain)) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace not include the chain '${chain}'`);\n                }\n            }\n        }\n        if (namespace && chainId) {\n            (0, core_1.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        let defaultNamespace = (0, namespaces_1.parseNamespaceKey)(Object.keys(this.session.namespaces)[0]);\n        const defaultChain = this.rpcProviders[defaultNamespace].getDefaultChain();\n        (0, core_1.logDebug)('get default chain:', defaultChain);\n        return [defaultNamespace, defaultChain];\n    }\n    isChainNamespaceInSession(namespaceStr) {\n        var _a, _b;\n        if (Object.keys(((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces) || {})\n            .map((key) => (0, namespaces_1.parseNamespaceKey)(key))\n            .includes(namespaceStr)) {\n            return true;\n        }\n        let isChainNamespaceInSession = false;\n        Object.values(((_b = this.session) === null || _b === void 0 ? void 0 : _b.namespaces) || {})\n            .forEach(namespace => {\n            namespace.chains.forEach(chain => {\n                if (chain.split(\":\")[0] == namespaceStr) {\n                    isChainNamespaceInSession = true;\n                }\n            });\n        });\n        return isChainNamespaceInSession;\n    }\n    requestAccountsWithNamespace(namespace) {\n        return this.getProvider(namespace).requestAccounts();\n    }\n    requestDefaultChainWithNamespace(namespace) {\n        return this.getProvider(namespace).getDefaultChain();\n    }\n    requestAccounts() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const [namespace] = this.validateChain();\n            return yield this.getProvider(namespace).requestAccounts();\n        });\n    }\n    onChainChanged(caip2Chain) {\n        var _a;\n        if (!((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces))\n            return;\n        const [namespace, chainId] = this.validateChain(caip2Chain);\n        if (!chainId)\n            return;\n        if (this.session.namespaces[namespace]) {\n            this.session.namespaces[namespace].defaultChain = chainId;\n            this.persist(\"connectSession\", this.session);\n        }\n        this.events.emit(\"chainChanged\", chainId);\n    }\n    onConnect() {\n        this.createProviders();\n        if (this.session) {\n            this.persist(\"connectSession\", this.session);\n        }\n        this.events.emit(\"connect\", { session: this.session });\n        this.registerEventListeners();\n    }\n    cleanup() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.session = undefined;\n            this.client.session = undefined;\n            this.setConnectConnector();\n            this.sessionProperties = undefined;\n            this.persist(\"optionalNamespaces\", undefined);\n            this.persist(\"sessionProperties\", undefined);\n            this.persist(\"connectSession\", undefined);\n        });\n    }\n    persist(key, data) {\n        (0, core_1.logDebug)('[evm u-provider] persisit data', key, data);\n        return this.client.engine.saveSessionContent(key, data);\n    }\n    getFromStore(key) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.client.engine.getSessionContent(key);\n        });\n    }\n    showRequestModal(args, chain) {\n        try {\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return this.getProvider(namespace).showRequestModal(requestParam);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    openWallet(engineConnectInfo, connector) {\n        this.client.openWallet(engineConnectInfo, connector);\n    }\n    registerConnector(connectors) {\n        this.client.registerConnector(connectors);\n    }\n}\nexports.OKXUniversalProvider = OKXUniversalProvider;\nexports.default = OKXUniversalProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTronProvider = exports.OKXTonProvider = exports.OKXCosmosProvider = exports.OKXBtcProvider = exports.OKXUniversalProvider = void 0;\n__exportStar(require(\"./provider/types\"), exports);\n__exportStar(require(\"./packages\"), exports);\nvar OKXUniversalProvider_1 = require(\"./OKXUniversalProvider\");\nObject.defineProperty(exports, \"OKXUniversalProvider\", { enumerable: true, get: function () { return OKXUniversalProvider_1.OKXUniversalProvider; } });\nvar OKXBtcProvider_1 = require(\"./OKXBtcProvider\");\nObject.defineProperty(exports, \"OKXBtcProvider\", { enumerable: true, get: function () { return OKXBtcProvider_1.OKXBtcProvider; } });\nvar OKXCosmosProvider_1 = require(\"./OKXCosmosProvider\");\nObject.defineProperty(exports, \"OKXCosmosProvider\", { enumerable: true, get: function () { return OKXCosmosProvider_1.OKXCosmosProvider; } });\nvar OKXTonProvider_1 = require(\"./OKXTonProvider\");\nObject.defineProperty(exports, \"OKXTonProvider\", { enumerable: true, get: function () { return OKXTonProvider_1.OKXTonProvider; } });\nvar OKXTronProvider_1 = require(\"./OKXTronProvider\");\nObject.defineProperty(exports, \"OKXTronProvider\", { enumerable: true, get: function () { return OKXTronProvider_1.OKXTronProvider; } });\n__exportStar(require(\"@okxconnect/core\"), exports);\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./utils\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SignClient = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"../utils/namespaces\");\nconst ConnectMethodUtils_1 = require(\"../utils/ConnectMethodUtils\");\nconst constants_1 = require(\"../../provider/constants\");\nclass SignClient extends core_1.ISignClient {\n    constructor(metaData, events) {\n        super(metaData);\n        // ---------- Engine ----------------------------------------------- //\n        this.connect = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    var connectRequest = [];\n                    (0, core_1.logDebug)(`client connect params >>>`, JSON.stringify(params));\n                    var requestAccountItem = {\n                        name: \"requestAccounts\",\n                        requiredNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.namespaces),\n                        optionalNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.optionalNamespaces),\n                    };\n                    this.engine.setSessionConnectingListener(() => {\n                        (0, core_1.logDebug)(`sessionConnectingListener >>>`);\n                        this.events.emit(constants_1.PROVIDER_EVENTS.SESSION_CONNECTING);\n                    });\n                    if (params.signRequest) {\n                        requestAccountItem.connectRequestMethods = yield (0, ConnectMethodUtils_1.connectMethodsToConnectWalletMethods)(params.signRequest, requestAccountItem.requiredNamespaces);\n                    }\n                    connectRequest.push(requestAccountItem);\n                    (0, core_1.logDebug)(`client connect connectRequest >>>`, JSON.stringify(connectRequest));\n                    this.engine.universalConnect(connectRequest, Object.assign({ dappInfo: this.metadata }, params.sessionConfig), (info) => {\n                        if (info && info.connectRequest) {\n                            (0, core_1.logDebug)(`universalConect info.connectRequest :`, info.connectRequest);\n                            (0, core_1.logDebug)(`universalConect url:`, (0, core_1.getOKXLink)(info.connectRequest, this.sessionConfig.useMini));\n                            this.events.emit(\"display_uri\", (0, core_1.getOKXLink)(info.connectRequest, this.sessionConfig.useMini));\n                            this.events.emit(\"short_display_uri\", (0, core_1.getAppWalletShortDeepLink)(info.connectRequest.topic, info.connectRequest.clientId));\n                            (0, core_1.logDebug)(`universalConect EngineConnectInfo  ${JSON.stringify(info)}`);\n                            this.events.emit(\"okx_engine_connect_params\", info);\n                        }\n                    }).then((session) => __awaiter(this, void 0, void 0, function* () {\n                        (0, namespaces_1.fillParamsToSession)(session, params.namespaces, params.optionalNamespaces, this.sessionConfig);\n                        (0, core_1.logDebug)(`signClient: connect: session ${JSON.stringify(session)}`);\n                        if (params.signRequest) {\n                            yield (0, ConnectMethodUtils_1.connectMethodsResponseUpdate)(session, params.signRequest);\n                        }\n                        resolve(session);\n                    })).catch((e) => {\n                        (0, core_1.logDebug)(`signClient: connect: catch ${JSON.stringify(e)}`);\n                        this.events.emit(\"connect_error\", e);\n                        reject(e);\n                    });\n                }\n                catch (error) {\n                    (0, core_1.logDebug)(`signClient: connect:  ${JSON.stringify(error)}`);\n                    reject(error);\n                }\n            }));\n        });\n        this.restoreconnect = (sessionConfig) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.restoreconnect(sessionConfig, (session) => {\n                    resolve(session);\n                });\n            });\n        });\n        this.reject = (params) => __awaiter(this, void 0, void 0, function* () {\n        });\n        this.request = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                (0, core_1.logDebug)(\"clint request --params>>>> >\", (_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl, (0, core_1.safeJsonStringify)(params));\n                try {\n                    // this.sessionConfig\n                    if (((_b = this.sessionConfig) === null || _b === void 0 ? void 0 : _b.openUniversalUrl) && (0, core_1.isIos)()) {\n                        this.openOKXWallet();\n                    }\n                    yield this.engine.send(params, {\n                        resolve: (response) => {\n                            delete response.requestId;\n                            (0, core_1.logDebug)(\"clint request --response >\", (0, core_1.safeJsonStringify)(response));\n                            if (('error' in response) && response.error) {\n                                let error = response.error;\n                                reject(new core_1.OKXConnectError(response.error.code, response.method + \":\" + error.message));\n                            }\n                            else {\n                                resolve(response);\n                            }\n                        },\n                        onAck: () => {\n                            var _a;\n                            if (!(0, core_1.isIos)() && ((_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl)) {\n                                this.openOKXWallet();\n                            }\n                        }\n                    });\n                }\n                catch (e) {\n                    (0, core_1.logDebug)(\"clint request --error:\", e);\n                    reject(e);\n                }\n            }));\n        });\n        this.disconnect = () => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.send({\n                    method: \"disconnect\"\n                }, {\n                    onAck: () => {\n                        resolve();\n                    }\n                }, 86400000).catch((error) => {\n                    console.log(`disconnect : ${JSON.stringify(error)}`);\n                    reject(error);\n                });\n            });\n        });\n        this.engine = new core_1.Engine(metaData.name);\n        this.events = events;\n        this.metadata = metaData;\n    }\n    openOKXWallet() {\n        // if (this.openUniversalUrl){\n        (0, core_1.logDebug)('bridge-provider ==>> connect_5');\n        this.engine.openWallet({ tmaReturnUrl: this.sessionConfig.tmaReturnUrl });\n        // if (this.sessionConfig?.useMini){\n        //     let url = getTelegramWalletTWAUrl(undefined,this.sessionConfig.tmaReturnUrl)\n        //     openOKXTMAWalletlinkWithFallback(url)\n        // }else{\n        //     openOKXDeeplink(standardDeeplink);\n        // }\n        // }\n    }\n    syncAllAddress() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.send({\n                    method: \"sync_all_addresses\"\n                }, {\n                    resolve: (response) => {\n                        delete response.requestId;\n                        (0, core_1.logDebug)(\"clint syncAllAddress --response >\", JSON.stringify(response));\n                        if (('error' in response) && response.error) {\n                            let error = response.error;\n                            reject(new core_1.OKXConnectError(response.error.code, response.method + \":\" + error.message));\n                        }\n                        else {\n                            let allAddressStr = response.result;\n                            resolve((0, ConnectMethodUtils_1.syncResoonseToRequire)(allAddressStr));\n                        }\n                    }\n                }).catch((error) => {\n                    console.log(`disconnect : ${JSON.stringify(error)}`);\n                    reject(error);\n                });\n            });\n        });\n    }\n    registerConnector(connectors) {\n        this.engine.registerConnector(connectors);\n    }\n    openWallet(engineConnectInfo, connector) {\n        this.engine.openWallet(engineConnectInfo, connector);\n    }\n    setConnectConnector(wallet) {\n        this.engine.setConnectConnector(wallet);\n    }\n}\nexports.SignClient = SignClient;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.connectSupportMethods = void 0;\nexports.creatNotSupportMethodItemReplay = creatNotSupportMethodItemReplay;\nexports.connectMethodsAdaptOldVersion = connectMethodsAdaptOldVersion;\nexports.connectMethodsResponseUpdate = connectMethodsResponseUpdate;\nexports.connectMethodsToConnectWalletMethods = connectMethodsToConnectWalletMethods;\nexports.syncResoonseToRequire = syncResoonseToRequire;\nconst core_1 = require(\"@okxconnect/core\");\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst uint8array_extras_1 = require(\"uint8array-extras\");\nconst provider_1 = require(\"../../provider\");\nfunction isArray(value) {\n    return typeof value === \"object\" && value !== null && Array.isArray(value);\n}\nfunction isRecord(value) {\n    return typeof value === \"object\" && value !== null && !Array.isArray(value);\n}\n// \"wallet_addEthereumChain\",\nexports.connectSupportMethods = Object.freeze([\n    \"personal_sign\",\n    \"solana_signMessage\",\n    \"sui_signMessage\",\n    \"sui_signPersonalMessage\",\n    \"btc_signMessage\",\n    \"aptos_signMessage\",\n    \"cosmos_signArbitrary\",\n    \"tron_signMessage\",\n    \"tron_signMessageV2\",\n    \"sync_all_addresses\"\n]);\nfunction creatNotSupportMethodItemReplay(requestParams) {\n    let notSupportError = new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n    var errorItem = {\n        method: requestParams.method,\n        chainId: requestParams.chainId,\n        error: {\n            code: notSupportError.code,\n            message: notSupportError.message\n        },\n    };\n    return errorItem;\n}\nfunction connectMethodsAdaptOldVersion(requestParams, session) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b, _c, _d, _e;\n        try {\n            (0, core_1.logDebug)(\"connectMethodsAdaptOldVersion start params :\", JSON.stringify(requestParams));\n            let callBackParams = {};\n            if (requestParams.method === \"solana_signMessage\") {\n                let solAccount = (_a = session.namespaces[core_1.NameSpaceKeySOL]) === null || _a === void 0 ? void 0 : _a.accounts.filter(function (account1) {\n                    return account1.startsWith(requestParams.chainId);\n                })[0];\n                const solAddress = (0, provider_1.fromAccountToAddress)(solAccount);\n                if (requestParams.params && solAddress && \"message\" in requestParams.params) {\n                    let realMessage = requestParams.params.message;\n                    if (((_b = session.wallet) === null || _b === void 0 ? void 0 : _b.appName) == \"OKX Wallet\") {\n                        realMessage = bs58_1.default.encode((0, uint8array_extras_1.stringToUint8Array)(realMessage));\n                    }\n                    requestParams.params = {\n                        message: realMessage,\n                        \"pubkey\": solAddress\n                    };\n                    callBackParams = {\n                        publicKey: solAddress\n                    };\n                    (0, core_1.logDebug)(\"solana_signMessage account and address:\", JSON.stringify(solAccount), solAddress);\n                    (0, core_1.logDebug)(\"solana_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"sui_signMessage\" || requestParams.method === \"sui_signPersonalMessage\") {\n                if (\"message\" in requestParams.params && requestParams.params.message) {\n                    let suiMessage = JSON.parse(JSON.stringify(requestParams.params.message));\n                    let convertedArray = Object.values(suiMessage);\n                    let uint8Array = new Uint8Array(convertedArray);\n                    let decoder = new TextDecoder(\"utf8\");\n                    let b64encoded = btoa(decoder.decode(uint8Array));\n                    requestParams.params = {\n                        message: atob(b64encoded),\n                    };\n                    console.log(\"sui_signMessag suiMessagee suiMessageb64:>>>>\", JSON.stringify(requestParams.params), b64encoded);\n                    if (requestParams.method === \"sui_signMessage\") {\n                        callBackParams = {\n                            \"messageBytes\": b64encoded,\n                            \"signature\": \"\"\n                        };\n                    }\n                    else if (requestParams.method === \"sui_signPersonalMessage\") {\n                        callBackParams = {\n                            \"bytes\": b64encoded,\n                            \"signature\": \"\"\n                        };\n                    }\n                    (0, core_1.logDebug)(\"sui_signMessage/sui_signPersonalMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"btc_signMessage\") {\n                let btcAccounts = (_c = session.namespaces[core_1.NameSpaceKeyBtc]) === null || _c === void 0 ? void 0 : _c.accounts.filter(function (account2) {\n                    return account2.startsWith(requestParams.chainId);\n                });\n                let btcAccount = btcAccounts[0];\n                const btcAddress = (0, provider_1.fromAccountToAddress)(btcAccount);\n                (0, core_1.logDebug)(\"btc_signMessage account and address:\", JSON.stringify(btcAccount), btcAddress);\n                if (btcAddress) {\n                    if (\"message\" in requestParams.params && requestParams.params.message && typeof requestParams.params.message === 'string') {\n                        requestParams.params = {\n                            from: btcAddress,\n                            signStr: requestParams.params.message\n                        };\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                    }\n                    requestParams.params[\"from\"] = btcAddress;\n                    (0, core_1.logDebug)(\"btc_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"aptos_signMessage\") {\n                let paramData = requestParams.params;\n                let aptosAccount = (_d = session.namespaces[core_1.NameSpaceKeyAptos]) === null || _d === void 0 ? void 0 : _d.accounts.filter(function (account3) {\n                    return account3.startsWith(requestParams.chainId);\n                })[0];\n                let aptosAddress = (0, provider_1.fromAccountToAddress)(aptosAccount);\n                if (paramData && aptosAddress) {\n                    let prefix = \"APTOS\";\n                    let message = \"\", nonce = \"\";\n                    var fullMessage = prefix;\n                    let application = window.location.protocol + \"//\" + window.location.hostname;\n                    if (\"address\" in paramData && paramData.address) {\n                        fullMessage += \"\\naddress: \" + aptosAddress;\n                    }\n                    if (\"application\" in paramData && paramData.application) {\n                        fullMessage += \"\\napplication: \" + application;\n                    }\n                    let aptosChainId = 1;\n                    if (\"chainId\" in paramData && paramData.chainId) {\n                        if (paramData.chainId == \"aptos:mainnet\") {\n                            aptosChainId = 1;\n                        }\n                        else if (paramData.chainId == \"movement:testnet\") {\n                            aptosChainId = 2;\n                        }\n                        fullMessage += \"\\nchainId: \" + aptosChainId;\n                    }\n                    if (\"message\" in paramData) {\n                        fullMessage += \"\\nmessage: \" + paramData.message;\n                        message = paramData.message;\n                    }\n                    if (\"nonce\" in paramData) {\n                        fullMessage += \"\\nnonce: \" + paramData.nonce;\n                        nonce = paramData.nonce;\n                    }\n                    const utf8Array = new TextEncoder().encode(fullMessage);\n                    const hex = Array.from(utf8Array)\n                        .map(byte => byte.toString(16).padStart(2, \"0\"))\n                        .join(\"\");\n                    requestParams.params = {\n                        \"message\": hex,\n                    };\n                    (0, core_1.logDebug)(\"aptos_signMessage requestParams:\", JSON.stringify(requestParams));\n                    callBackParams = {\n                        address: aptosAddress,\n                        application: application,\n                        chainId: aptosChainId,\n                        fullMessage: fullMessage,\n                        message: message,\n                        nonce: nonce,\n                        prefix: prefix,\n                        signature: \"\",\n                    };\n                    (0, core_1.logDebug)(\"aptos_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"cosmos_signArbitrary\") {\n                let cosmosAccount = (_e = session === null || session === void 0 ? void 0 : session.namespaces[core_1.NameSpaceKeyCosmos]) === null || _e === void 0 ? void 0 : _e.accounts.filter(function (account_cosmos) {\n                    return account_cosmos.startsWith(requestParams.chainId);\n                })[0];\n                const cosmosAddress = (0, provider_1.fromAccountToAddress)(cosmosAccount);\n                let cosmosData = requestParams.params[\"message\"];\n                const cosmosBase64Encoded = (0, uint8array_extras_1.stringToBase64)(cosmosData);\n                (0, core_1.logDebug)(\"cosmos_signArbitrary account and address:\", JSON.stringify(cosmosAccount), cosmosAddress);\n                (0, core_1.logDebug)(\"cosmos_signArbitrary cosmosBase64Encoded:\", cosmosBase64Encoded);\n                if (cosmosData && cosmosAddress) {\n                    const signDoc = {\n                        chain_id: \"\",\n                        account_number: \"0\",\n                        sequence: \"0\",\n                        fee: {\n                            gas: \"0\",\n                            amount: []\n                        },\n                        msgs: [{\n                                \"type\": \"sign/MsgSignData\",\n                                \"value\": {\n                                    \"signer\": cosmosAddress,\n                                    \"data\": cosmosBase64Encoded\n                                }\n                            }],\n                        memo: \"\"\n                    };\n                    requestParams.params = {\n                        \"signer\": cosmosAddress,\n                        \"chain_id\": requestParams.chainId.split(\":\")[1],\n                        \"data\": signDoc\n                    };\n                    (0, core_1.logDebug)(\"cosmos_signArbitrary callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            (0, core_1.logDebug)(\"sol_handleSignatureData end params:\", JSON.stringify(requestParams));\n        }\n        catch (error) {\n            throw error;\n        }\n    });\n}\nfunction connectMethodsResponseUpdate(session, requestParams) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a;\n        try {\n            if (session.signResponse) {\n                (0, core_1.logDebug)(\"connectMethodsResponseUpdate signResponse:\", JSON.stringify(session.signResponse));\n                (0, core_1.logDebug)(\"connectMethodsResponseUpdate session.namespaces:\", JSON.stringify(session.namespaces));\n                for (const methodItem of session.signResponse) {\n                    (0, core_1.logDebug)(\"connectMethodsResponseUpdate methodItem:\", JSON.stringify(methodItem));\n                    if (\"result\" in methodItem) {\n                        if (methodItem.method === \"solana_signMessage\") {\n                            let solanaSuccessData = methodItem.result;\n                            (0, core_1.logDebug)(\"solana_signMessage methodItem.chainId:\", methodItem.chainId);\n                            let account = (_a = session.namespaces[core_1.NameSpaceKeySOL]) === null || _a === void 0 ? void 0 : _a.accounts.filter(function (account) {\n                                (0, core_1.logDebug)(\"solana_signMessage account:\", account);\n                                return account.startsWith(methodItem.chainId);\n                            })[0];\n                            (0, core_1.logDebug)(\"solana_signMessage result account:\", solanaSuccessData, account);\n                            if (solanaSuccessData && account) {\n                                methodItem.result = {\n                                    \"signature\": bs58_1.default.decode(solanaSuccessData),\n                                    \"publicKey\": (0, provider_1.fromAccountToAddress)(account)\n                                };\n                            }\n                        }\n                        else if (methodItem.method === \"sui_signMessage\" || methodItem.method === \"sui_signPersonalMessage\") {\n                            let suiMethod = requestParams.filter(function (requestMethod) {\n                                return requestMethod.method === methodItem.method;\n                            })[0];\n                            if (suiMethod && suiMethod.params && \"message\" in suiMethod.params) {\n                                let suiMessage = suiMethod.params.message;\n                                let suiMessageb64 = btoa(suiMessage);\n                                console.log(\"sui_signMessag suiMessagee suiMessageb64:>>>>\", suiMessage, suiMessageb64);\n                                if (methodItem.method === \"sui_signMessage\") {\n                                    methodItem.result = {\n                                        \"messageBytes\": suiMessageb64,\n                                        \"signature\": methodItem.result\n                                    };\n                                }\n                                else if (methodItem.method === \"sui_signPersonalMessage\") {\n                                    methodItem.result = {\n                                        \"bytes\": suiMessageb64,\n                                        \"signature\": methodItem.result\n                                    };\n                                }\n                            }\n                        }\n                        else if (methodItem.method === \"aptos_signMessage\") {\n                            if (methodItem.chainId === \"aptos:637\") {\n                                methodItem.chainId = \"aptos:mainnet\";\n                            }\n                            else if (methodItem.chainId === \"aptos:70000060\") {\n                                methodItem.chainId = \"movement:testnet\";\n                            }\n                            methodItem.result = JSON.parse(methodItem.result);\n                            console.log(\"aptos_signMessage result methodItem.result before:>>>>\", JSON.stringify(methodItem.result));\n                            if (methodItem.result && \"signature\" in methodItem.result) {\n                                let aptosSignature = methodItem.result.signature;\n                                if (aptosSignature && aptosSignature.startsWith(\"0x\")) {\n                                    aptosSignature = aptosSignature.slice(2, aptosSignature.length);\n                                    methodItem.result.signature = aptosSignature;\n                                }\n                            }\n                            console.log(\"aptos_signMessage result methodItem.result after:>>>>\", JSON.stringify(methodItem.result));\n                        }\n                        else if (methodItem.method === \"cosmos_signArbitrary\") {\n                            methodItem.result = JSON.parse(methodItem.result);\n                        }\n                        else if (methodItem.method == 'sync_all_addresses') {\n                            methodItem.result = syncResoonseToRequire(methodItem.result);\n                        }\n                    }\n                }\n            }\n        }\n        catch (error) {\n            (0, core_1.logDebug)(\"connectMethodsResponseUpdate signResponse Error:\", JSON.stringify(error));\n            throw error;\n        }\n    });\n}\nfunction connectMethodsToConnectWalletMethods(params, requireNameSpace) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            (0, core_1.logDebug)(\"connectMethodsToConnectWalletMethods requestMethods:\", JSON.stringify(params));\n            const result = [];\n            //TODO  后面需要打开限制\n            if (params && params.length > 1) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connectAndSign/openModalAndSign signRequest only support one data`);\n            }\n            if (!requireNameSpace && params && params.length > 0) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error , RequestMethods cannot be added when the NameSpace is empty`);\n            }\n            // check chianId\n            for (const methodItem of params) {\n                if (methodItem.method === \"aptos_signMessage\") { //update chainId\n                    if (methodItem.chainId === \"aptos:mainnet\") {\n                        methodItem.chainId = \"aptos:637\";\n                    }\n                    else if (methodItem.chainId === \"movement:testnet\") {\n                        methodItem.chainId = \"aptos:70000060\";\n                    }\n                }\n                // check chianId\n                if (methodItem.method === \"wallet_addEthereumChain\") {\n                    var includeEip155 = requireNameSpace === null || requireNameSpace === void 0 ? void 0 : requireNameSpace.some(space => space.namespace.includes(\"eip155\"));\n                    if (!includeEip155) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error, When using '${methodItem.method}', the EVM chain needs to be included in the NameSpace`);\n                    }\n                }\n                else if (methodItem.method === \"sync_all_addresses\") {\n                    if ((0, provider_1.syncAddressHostAvailable)()) {\n                        methodItem.chainId = \"\";\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                    }\n                }\n                else {\n                    const includeChain = !!(requireNameSpace === null || requireNameSpace === void 0 ? void 0 : requireNameSpace.some(space => space.chains.some(chain => chain.includes(`${methodItem.chainId}`))));\n                    if (!includeChain) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error, When using '${methodItem.method}', NameSpace must contain '${methodItem.chainId}'`);\n                    }\n                }\n            }\n            for (const item of params) {\n                if (!exports.connectSupportMethods.includes(item.method)) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect requestMethods not support method, method: '${item.method}'`);\n                }\n                if (item.method === \"wallet_addEthereumChain\") {\n                    if (Array.isArray(item.params)) {\n                        const paramsArr = item.params;\n                        if (paramsArr && paramsArr.length === 1) {\n                            const firstParam = paramsArr[0];\n                            if (isRecord(firstParam)) {\n                                item.params = firstParam;\n                            }\n                        }\n                        else if (paramsArr && paramsArr.length > 1) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params only support one data, method: '${item.method}'`);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is nil, method: '${item.method}'`);\n                        }\n                    }\n                }\n                else if (item.method === \"personal_sign\") {\n                    if (isArray(item.params)) {\n                        if (item.params && item.params.length !== 1) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params error,  method: '${item.method}' `);\n                        }\n                        let firstObj = item.params[0];\n                        if (firstObj && typeof firstObj === 'string') {\n                            item.params = {\n                                message: firstObj\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                }\n                else if (item.method === \"sui_signMessage\" || item.method === \"sui_signPersonalMessage\") {\n                    if (isRecord(item.params) && 'message' in item.params) {\n                        if (item.params.message) {\n                            (0, core_1.logDebug)(\"sui_signMessage item.params.message :\", item.params.message);\n                            let message = JSON.parse(JSON.stringify(item.params.message));\n                            let convertedArray = Object.values(message);\n                            let uint8Array = new Uint8Array(convertedArray);\n                            let decoder = new TextDecoder(\"utf8\");\n                            let b64encoded = btoa(decoder.decode(uint8Array));\n                            item.params.message = atob(b64encoded);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"solana_signMessage\") {\n                    if (isRecord(item.params) && 'message' in item.params) {\n                        if (item.params.message && typeof item.params.message === 'string') {\n                            item.params[\"bs58Message\"] = bs58_1.default.encode((0, uint8array_extras_1.stringToUint8Array)(item.params.message));\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"aptos_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (item.chainId && (item.chainId === \"aptos:637\" || item.chainId === \"aptos:70000060\")) {\n                            var aptosParams = item.params;\n                            var currentURL = window.location.protocol + \"//\" + window.location.hostname;\n                            let signChainId = 1;\n                            if (item.chainId === \"aptos:637\") {\n                            }\n                            else if (item.chainId === \"aptos:70000060\") {\n                                signChainId = 2;\n                            }\n                            item.params = {\n                                data: aptosParams,\n                                applicationUrl: currentURL,\n                                prefix: \"APTOS\",\n                                aptosChainId: signChainId\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params chainId is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"cosmos_signArbitrary\") {\n                    if (isRecord(item.params)) {\n                        if (item.params.message && typeof item.params.message === 'string') {\n                            const base64Encoded = (0, uint8array_extras_1.stringToBase64)(item.params.message);\n                            let cosmosChain = item.chainId.split(\":\")[1];\n                            if (cosmosChain) {\n                                item.params = {\n                                    chain_id: cosmosChain,\n                                    data: {\n                                        chain_id: \"\",\n                                        account_number: \"0\",\n                                        sequence: \"0\",\n                                        fee: {\n                                            gas: \"0\",\n                                            amount: []\n                                        },\n                                        msgs: [{\n                                                \"type\": \"sign/MsgSignData\",\n                                                \"value\": {\n                                                    \"signer\": \"\", //address\n                                                    \"data\": base64Encoded\n                                                }\n                                            }],\n                                        memo: \"\"\n                                    }\n                                };\n                            }\n                            else {\n                                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params chainId is error,  method: '${item.method}' `);\n                            }\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params message is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method == \"tron_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (\"message\" in item.params && item.params.message && typeof item.params.message === 'string') {\n                            item.params.message = stringToHex(item.params.message);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method == \"btc_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (\"message\" in item.params && item.params.message && typeof item.params.message === 'string') {\n                            item.params = {\n                                signStr: item.params.message\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                (0, core_1.logDebug)(\"connectMethodsToConnectWalletMethods item:\", JSON.stringify(item));\n                result.push(item);\n            }\n            return result;\n        }\n        catch (error) {\n            throw error;\n        }\n    });\n}\nfunction stringToHex(str) {\n    let hex = '';\n    for (let i = 0; i < str.length; i++) {\n        hex += str.charCodeAt(i).toString(16).padStart(2, '0');\n    }\n    return hex;\n}\nfunction syncResoonseToRequire(responseAddressStr) {\n    const allAddress = JSON.parse(responseAddressStr);\n    const result = {\n        type: allAddress.type,\n        isEvm: allAddress.isEvm,\n        walletName: allAddress.walletName,\n        deriveName: allAddress.deriveName,\n        addresses: allAddress.addresses.map((addr) => ({\n            coinId: addr.ci,\n            address: addr.a && addr.a !== 'null' ? addr.a : allAddress.evmAddress,\n        })),\n    };\n    return result;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.creatNotSupportMethodItemReplay = exports.connectMethodsAdaptOldVersion = void 0;\nvar ConnectMethodUtils_1 = require(\"./ConnectMethodUtils\");\nObject.defineProperty(exports, \"connectMethodsAdaptOldVersion\", { enumerable: true, get: function () { return ConnectMethodUtils_1.connectMethodsAdaptOldVersion; } });\nObject.defineProperty(exports, \"creatNotSupportMethodItemReplay\", { enumerable: true, get: function () { return ConnectMethodUtils_1.creatNotSupportMethodItemReplay; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAccountsChains = getAccountsChains;\nexports.nameSpaceToConnectWalletNameSpace = nameSpaceToConnectWalletNameSpace;\nexports.fillParamsToSession = fillParamsToSession;\nexports.isCaipNamespace = isCaipNamespace;\nexports.parseNamespaceKey = parseNamespaceKey;\nconst core_1 = require(\"@okxconnect/core\");\nfunction getAccountsChains(accounts) {\n    const chains = [];\n    accounts.forEach((account) => {\n        const [chain, chainId] = account.split(\":\");\n        chains.push(`${chain}:${chainId}`);\n    });\n    return chains;\n}\nfunction nameSpaceToConnectWalletNameSpace(namespaces) {\n    var result = [];\n    if (!namespaces) {\n        return result;\n    }\n    Object.keys(namespaces).forEach((key) => {\n        if (key === core_1.NameSpaceKeyEip155 || key === core_1.NameSpaceKeySOL || key === core_1.NameSpaceKeySui || key === core_1.NameSpaceKeyAptos\n            || key == core_1.NameSpaceKeyBtc || key === core_1.NameSpaceKeyTON || key === core_1.NameSpaceKeyCosmos || key === core_1.NameSpaceKeyTron) {\n            if (namespaces[key].chains) {\n                result.push({\n                    namespace: key,\n                    chains: namespaces[key].chains,\n                    params: namespaces[key].params\n                });\n            }\n        }\n    });\n    return result;\n}\nfunction fillParamsToSession(session, namespaces, optionalNamespaces, sessionConfig) {\n    // Helper function to merge rpcMaps\n    const mergeRpcMap = (targetRpcMap, sourceRpcMap) => {\n        Object.assign(targetRpcMap, sourceRpcMap);\n    };\n    // Merge function for namespaces\n    const mergeNamespaces = (target, source) => {\n        for (const key in source) {\n            if (source.hasOwnProperty(key) && source[key].rpcMap) {\n                if (source[key].rpcMap) {\n                    if (!target[key].rpcMap) {\n                        target[key].rpcMap = {};\n                    }\n                    // 合并 rpcMap\n                    mergeRpcMap(target[key].rpcMap, source[key].rpcMap);\n                }\n                if (source[key].defaultChain && target[key].defaultChain === undefined) {\n                    //defaultChain need in session nameSpace\n                    if (target[key].chains.some(chain => chain.split(\":\")[1] === source[key].defaultChain)) {\n                        target[key].defaultChain = source[key].defaultChain;\n                    }\n                }\n            }\n        }\n    };\n    // 合并 namespaces\n    if (namespaces) {\n        mergeNamespaces(session.namespaces, namespaces);\n    }\n    // 合并 optionalNamespaces\n    if (optionalNamespaces) {\n        mergeNamespaces(session.namespaces, optionalNamespaces);\n    }\n    for (const key in session.namespaces) {\n        const namespace = session.namespaces[key];\n        if (!(namespace === null || namespace === void 0 ? void 0 : namespace.accounts) || namespace.accounts.length === 0) {\n            delete session.namespaces[key];\n        }\n    }\n    session.sessionConfig = sessionConfig;\n}\n/**\n * util designed for Wallets that builds namespaces structure by provided supported chains, methods, events & accounts.\n * It takes required & optional namespaces provided in the session proposal\n * along with the supported chains/methods/events/accounts by the wallet and returns a structured namespaces object\n * @param {BuildApprovedNamespacesParams} params\n * @returns {SessionTypes.Namespaces}\n */\n// export function buildApprovedNamespaces(\n//   params: BuildApprovedNamespacesParams,\n// ): SessionTypes.Namespaces {\n//   const {\n//     proposal: { requiredNamespaces, optionalNamespaces = {} },\n//     supportedNamespaces,\n//   } = params;\n//   const normalizedRequired = normalizeNamespaces(requiredNamespaces);\n//   const normalizedOptional = normalizeNamespaces(optionalNamespaces);\n//\n//   // build approved namespaces\n//   const namespaces = {};\n//   Object.keys(supportedNamespaces).forEach((namespace) => {\n//     const supportedChains = supportedNamespaces[namespace].chains;\n//     const supportedMethods = supportedNamespaces[namespace].methods;\n//     const supportedEvents = supportedNamespaces[namespace].events;\n//     const supportedAccounts = supportedNamespaces[namespace].accounts;\n//\n//     supportedChains.forEach((chain) => {\n//       if (!supportedAccounts.some((account) => account.includes(chain))) {\n//         throw new Error(`No accounts provided for chain ${chain} in namespace ${namespace}`);\n//       }\n//     });\n//\n//     namespaces[namespace] = {\n//       chains: supportedChains,\n//       methods: supportedMethods,\n//       events: supportedEvents,\n//       accounts: supportedAccounts,\n//     };\n//   });\n//\n//   // verify all required namespaces are supported\n//   const err = isConformingNamespaces(requiredNamespaces, namespaces, \"approve()\");\n//   if (err) throw new Error(err.message);\n//\n//   const approvedNamespaces = {};\n//\n//   // if both required & optional namespaces are empty, return all supported namespaces by the wallet\n//   if (!Object.keys(requiredNamespaces).length && !Object.keys(optionalNamespaces).length)\n//     return namespaces;\n//\n//   // assign accounts for the required namespaces\n//   Object.keys(normalizedRequired).forEach((requiredNamespace) => {\n//     const chains = supportedNamespaces[requiredNamespace].chains.filter((chain) =>\n//       normalizedRequired[requiredNamespace]?.chains?.includes(chain),\n//     );\n//     const methods = supportedNamespaces[requiredNamespace].methods.filter((method) =>\n//       normalizedRequired[requiredNamespace]?.methods?.includes(method),\n//     );\n//     const events = supportedNamespaces[requiredNamespace].events.filter((event) =>\n//       normalizedRequired[requiredNamespace]?.events?.includes(event),\n//     );\n//\n//     const accounts = chains\n//       .map((chain: string) =>\n//         supportedNamespaces[requiredNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[requiredNamespace] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   });\n//\n//   // add optional namespaces\n//   Object.keys(normalizedOptional).forEach((optionalNamespace) => {\n//     if (!supportedNamespaces[optionalNamespace]) return;\n//\n//     const chainsToAdd = normalizedOptional[optionalNamespace]?.chains?.filter((chain) =>\n//       supportedNamespaces[optionalNamespace].chains.includes(chain),\n//     );\n//     const methodsToAdd = supportedNamespaces[optionalNamespace].methods.filter((method) =>\n//       normalizedOptional[optionalNamespace]?.methods?.includes(method),\n//     );\n//     const eventsToAdd = supportedNamespaces[optionalNamespace].events.filter((event) =>\n//       normalizedOptional[optionalNamespace]?.events?.includes(event),\n//     );\n//\n//     const accountsToAdd = chainsToAdd\n//       ?.map((chain: string) =>\n//         supportedNamespaces[optionalNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[optionalNamespace] = {\n//       chains: mergeArrays(approvedNamespaces[optionalNamespace]?.chains, chainsToAdd),\n//       methods: mergeArrays(approvedNamespaces[optionalNamespace]?.methods, methodsToAdd),\n//       events: mergeArrays(approvedNamespaces[optionalNamespace]?.events, eventsToAdd),\n//       accounts: mergeArrays(approvedNamespaces[optionalNamespace]?.accounts, accountsToAdd),\n//     };\n//   });\n//\n//   return approvedNamespaces;\n// }\nfunction isCaipNamespace(namespace) {\n    return namespace.includes(\":\");\n}\nfunction parseNamespaceKey(namespace) {\n    return isCaipNamespace(namespace) ? namespace.split(\":\")[0] : namespace;\n}\n/**\n * Converts\n * ```\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * ```\n * into\n * ```\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *```\n */\n// export function normalizeNamespaces(\n//   namespaces: ProposalTypes.RequiredNamespaces,\n// ): ProposalTypes.RequiredNamespaces {\n//   const normalizedNamespaces = {} as ProposalTypes.RequiredNamespaces;\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       methods: mergeArrays(methods, normalizedNamespaces[normalizedKey]?.methods),\n//       events: mergeArrays(events, normalizedNamespaces[normalizedKey]?.events),\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n// export function getNamespacesFromAccounts(accounts: string[]) {\n//   const namespaces = {};\n//   accounts?.forEach((account) => {\n//     const [namespace, chainId] = account.split(\":\");\n//     if (!namespaces[namespace]) {\n//       namespaces[namespace] = {\n//         accounts: [],\n//         chains: [],\n//         events: [],\n//       };\n//     }\n//     namespaces[namespace].accounts.push(account);\n//     namespaces[namespace].chains.push(`${namespace}:${chainId}`);\n//   });\n//\n//   return namespaces;\n// }\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PROVIDER_EVENTS = void 0;\nexports.PROVIDER_EVENTS = {\n    DEFAULT_CHAIN_CHANGED: \"default_chain_changed\",\n    UPDATE_NAMESPACES: \"update_name_spaces\",\n    SESSION_CONNECTING: \"session_connecting\"\n};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./values\"), exports);\n__exportStar(require(\"./events\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GENERIC_SUBPROVIDER_NAME = exports.RPC_URL = exports.STORAGE = exports.CONTEXT = exports.WC_VERSION = exports.PROTOCOL = exports.RELAY_URL = exports.LOGGER = void 0;\nexports.LOGGER = \"error\";\nexports.RELAY_URL = \"wss://relay.walletconnect.com\";\nexports.PROTOCOL = \"wc\";\nexports.WC_VERSION = 2;\nexports.CONTEXT = \"universal_provider\";\nexports.STORAGE = `${exports.PROTOCOL}@${exports.WC_VERSION}:${exports.CONTEXT}:`;\nexports.RPC_URL = \"https://rpc.walletconnect.com/v1/\";\nexports.GENERIC_SUBPROVIDER_NAME = \"generic\";\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./types\"), exports);\n__exportStar(require(\"./utils\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass AptosProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"aptos\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"aptos request --args--string>\", (0, core_1.safeJsonStringify)(args));\n            (0, core_1.logDebug)(\"aptos provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = AptosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass BtcProvider {\n    constructor(opts, name, client, events) {\n        this.name = core_1.NameSpaceKeyBtc;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"btc request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"btc provider namespace: \", JSON.stringify(this.namespace));\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = BtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass CosmosProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyCosmos;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"cosmos request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"cosmos provider namespace: \", JSON.stringify(this.namespace));\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = CosmosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Eip155Provider = void 0;\nconst utils_1 = require(\"../utils\");\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nclass Eip155Provider {\n    constructor(opts, client, events) {\n        this.name = \"eip155\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = parseInt(this.getDefaultChain());\n        // rpc\n        this.httpProviders = this.createHttpProviders();\n        (0, core_1.logDebug)(\"eip155 constructor --opts.namespace-->\", opts.namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    isArray(value) {\n        return typeof value === \"object\" && value !== null && Array.isArray(value);\n    }\n    updateRequestParams(args) {\n        let isDic = args.params && typeof args.params === 'object' && !Array.isArray(args.params);\n        if (args.method === 'wallet_switchEthereumChain') {\n            const switchChainId = args.chainId.split(\":\")[1];\n            // const hexChainId = parseInt(switchChainId, 16);\n            const decimalNumber = parseInt(switchChainId, 10);\n            if (isNaN(decimalNumber)) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid decimal number,  chainId: '${switchChainId}' `);\n            }\n            if (!args.params) {\n                args.params = { chainId: '0x' + decimalNumber.toString(16) };\n            }\n            else if (isDic) { //为 Record<string, unknown>\n                let params = args.params;\n                if (!('chainId' in params)) {\n                    params['chainId'] = '0x' + decimalNumber.toString(16);\n                    args.params = params;\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params error ,  method: '${args.method}' `);\n            }\n        }\n        else if (args.method === 'personal_sign'\n            || args.method === 'eth_signTypedData_v4'\n            || args.method === 'eth_sendTransaction'\n            || args.method === 'wallet_watchAsset') {\n            if (!args.params) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params is nil, method: '${args.method}'`);\n            }\n            if (this.isRecord(args.params)) {\n                let params = args.params;\n                (0, core_1.logDebug)(\"eip155 updateRequestParams params>\", JSON.stringify(params));\n                if ('chainId' in params) {\n                    const selectedChainId = args.chainId.split(\":\")[1];\n                    const chainNum = parseInt(selectedChainId, 10);\n                    let paramsChainString = String(params.chainId);\n                    let paramsChainId;\n                    if (paramsChainString.startsWith(this.name) && args.chainId === paramsChainString) { //为\n                        paramsChainId = chainNum;\n                    }\n                    else if (paramsChainString.startsWith(\"0x\")) {\n                        paramsChainId = parseInt(paramsChainString, 16);\n                    }\n                    else if (!isNaN(Number(paramsChainString))) { //数字\n                        paramsChainId = parseInt(paramsChainString, 10);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid params.chainId format, method: '${args.method}'`);\n                    }\n                    if (chainNum !== paramsChainId) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params.chainId not equal chain,  method: '${args.method}' `);\n                    }\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid request params type, method: '${args.method}'`);\n            }\n        }\n    }\n    //adapt array\n    adaptArray(args) {\n        if (args.method === 'wallet_switchEthereumChain'\n            || args.method === 'wallet_addEthereumChain'\n            || args.method === 'wallet_watchAsset'\n            || args.method === 'eth_sendTransaction') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr) {\n                    if (paramsArr.length === 1) {\n                        let firstParam = args.params[0];\n                        if (this.isRecord(firstParam)) {\n                            args.params = firstParam;\n                        }\n                    }\n                    else if (paramsArr.length > 1) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                    }\n                }\n            }\n        }\n        else if (args.method === 'eth_signTypedData_v4') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr && paramsArr.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                }\n                else if (paramsArr && paramsArr.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let messageObj = {};\n                if (paramsArr && paramsArr.length === 2) {\n                    let addressObj = args.params[0]; //address\n                    if (addressObj && typeof addressObj === 'string') { //check address\n                        let isEqual = false;\n                        this.namespace.accounts.forEach((account) => {\n                            let chainAddress = (0, utils_1.fromAccountToAddress)(account);\n                            if (chainAddress.toLowerCase() === addressObj.toLowerCase()) {\n                                isEqual = true;\n                            }\n                        });\n                        (0, core_1.logDebug)(\"eip155 adaptArray eth_signTypedData_v4 >>>isEqual: \", isEqual);\n                        if (!isEqual) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error, not equal,  method: '${args.method}' `);\n                        }\n                        if (this.isRecord(args.params[1])) {\n                            messageObj = args.params[1];\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error , not string,  method: '${args.method}' `);\n                    }\n                }\n                else if (paramsArr && paramsArr.length === 1) {\n                    if (this.isRecord(args.params[0])) {\n                        messageObj = args.params[0];\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                    }\n                }\n                try {\n                    let messages = JSON.stringify(messageObj);\n                    args.params = {\n                        typedDataJson: messages\n                    };\n                }\n                catch (err) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params call JSON.stringify() failed,  method: '${args.method}' `);\n                }\n            }\n        }\n        else if (args.method === 'personal_sign') {\n            if (this.isArray(args.params)) {\n                if (args.params && args.params.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params error,  method: '${args.method}' `);\n                }\n                else if (args.params && args.params.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let firstObj = args.params[0];\n                let secondObj = args.params[1];\n                if (secondObj && typeof secondObj === 'string') { //check address\n                    let isEqual = false;\n                    this.namespace.accounts.forEach((account) => {\n                        let chainAddress = (0, utils_1.fromAccountToAddress)(account);\n                        if (chainAddress.toLowerCase() === secondObj.toLowerCase()) {\n                            isEqual = true;\n                        }\n                    });\n                    (0, core_1.logDebug)(\"eip155 adaptArray personal_sign >>>isEqual: \", isEqual);\n                    if (!isEqual) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error,  method: '${args.method}' `);\n                    }\n                }\n                if (firstObj && typeof firstObj === 'string') {\n                    args.params = {\n                        message: firstObj\n                    };\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is error,  method: '${args.method}' `);\n                }\n            }\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"eth_requestAccounts\":\n            case \"eth_accounts\":\n            case \"eth_chainId\":\n                return false;\n            case \"eth_sendTransaction\":\n            case \"eth_signTransaction\":\n            case \"eth_sign\":\n            case \"personal_sign\":\n            case \"eth_signTypedData\":\n            case \"wallet_addEthereumChain\":\n            case \"wallet_watchAsset\":\n            case \"eth_signTypedData_v4\":\n                return true;\n            case \"wallet_switchEthereumChain\": {\n                this.adaptArray(args);\n                this.updateRequestParams(args);\n                const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n                return !this.isChainApproved(parsedChainId);\n            }\n            default:\n                return false;\n        }\n        return false;\n    }\n    configAddressAdaptInjectWallet(args) {\n        this.namespace.accounts.forEach((account) => {\n            if (account.includes(args.chainId)) {\n                args.address = (0, utils_1.fromAccountToAddress)(account);\n            }\n        });\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.adaptArray(args);\n            (0, core_1.logDebug)(\"eip155 request --args--string>\", JSON.stringify(args));\n            this.updateRequestParams(args);\n            (0, core_1.logDebug)(\"eip155 request --params--string>\", JSON.stringify(args));\n            this.configAddressAdaptInjectWallet(args);\n            switch (args.method) {\n                case \"eth_requestAccounts\":\n                    return this.getAccounts();\n                case \"eth_accounts\":\n                    return this.getAccounts();\n                case \"eth_chainId\":\n                    return parseInt(this.getDefaultChain());\n                case \"wallet_switchEthereumChain\": {\n                    return (yield this.handleSwitchChain(args));\n                }\n                case \"wallet_addEthereumChain\":\n                    return this.addEthereumChain(args);\n                default:\n                    break;\n            }\n            if (this.namespace.methods.includes(args.method)) {\n                // personal_sign\n                // eth_signTypedData_v4\n                // eth_sendTransaction\n                // wallet_watchAsset\n                try {\n                    const response = yield this.client.request(args);\n                    (0, core_1.logDebug)(\"eip155 request --response----string>\", JSON.stringify(response));\n                    if (this.isRecord(response)) {\n                        if ('result' in response) {\n                            let result = response.result;\n                            if (result && typeof result === 'string' && (result === \"true\" || result === \"false\")) {\n                                (0, core_1.logDebug)(\"eip155 request --wallet_watchAsset>>>>\", result === \"true\");\n                                return (result === \"true\");\n                            }\n                            return response.result;\n                        }\n                    }\n                    return response;\n                }\n                catch (e) {\n                    (0, core_1.logDebug)(`eip155 request --response --error--string> e instanceof OKXConnectError ${e instanceof core_1.OKXConnectError}`, JSON.stringify(e));\n                    throw e;\n                }\n            }\n            else {\n                (0, core_1.logDebug)('[RPC] request begin');\n                return yield this.getHttpProvider().request(args);\n            }\n        });\n    }\n    addEthereumChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let resultData = (yield this.client.request(args));\n            try {\n                if ('result' in resultData) {\n                    let successData = resultData;\n                    let account = resultData.result;\n                    if (account) {\n                        const nameSpace = account.split(\":\")[0];\n                        const chainId = account.split(\":\")[1];\n                        const chain = nameSpace + ':' + chainId;\n                        let newNameSpace = this.namespace;\n                        this.namespace.accounts.push(account);\n                        this.namespace.chains.push(chain);\n                        if (this.isRecord(args.params)) {\n                            if (\"rpcUrls\" in args.params) {\n                                let rpcUrls = args.params.rpcUrls;\n                                let rpcUrl = rpcUrls ? rpcUrls[0] : undefined;\n                                if (rpcUrl) {\n                                    if (this.namespace.rpcMap) {\n                                        this.namespace.rpcMap[chainId] = rpcUrl;\n                                    }\n                                    else {\n                                        this.namespace.rpcMap = {\n                                            [chainId]: rpcUrl\n                                        };\n                                    }\n                                    this.setHttpProvider(chainId, rpcUrl);\n                                }\n                            }\n                        }\n                        this.events.emit(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, {\n                            eip155: this.namespace\n                        });\n                    }\n                }\n                else {\n                    new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request error`);\n                }\n            }\n            catch (error) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request  error`);\n            }\n            return null;\n        });\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        this.chainId = parseInt(chainId);\n        // set rpc\n        if (!this.httpProviders[chainId]) {\n            const rpc = rpcUrl || (0, utils_1.getRpcUrl)(`${this.name}:${chainId}`, this.namespace);\n            if (!rpc) {\n                // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n                (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            }\n            else {\n                this.setHttpProvider(chainId, rpc);\n            }\n        }\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId.toString();\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // ---------- Private ----------------------------------------------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"eip155 getAccounts \", accounts, this.chainId);\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => {\n                return (0, utils_1.fromAccountToAddress)(account);\n            })),\n        ];\n    }\n    getHexChainIdFromRequest(args) {\n        let params = args.params;\n        let hexChainId = \"0x0\";\n        if (params && \"chainId\" in params) {\n            hexChainId = params.chainId;\n        }\n        hexChainId = hexChainId.startsWith(\"0x\") ? hexChainId : `0x${hexChainId}`;\n        (0, core_1.logDebug)(\"handleSwitchChain -->args \", args);\n        (0, core_1.logDebug)(\"handleSwitchChain -->hexChainId \", hexChainId);\n        const parsedChainId = parseInt(hexChainId, 16);\n        (0, core_1.logDebug)(\"handleSwitchChain -->parsedChainId \", parsedChainId);\n        return { parsedChainId, hexChainId };\n    }\n    handleSwitchChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n            if (this.isChainApproved(parsedChainId)) {\n                this.setDefaultChain(`${parsedChainId}`);\n            }\n            else {\n                try {\n                    const resultData = (yield this.client.request(Object.assign(Object.assign({}, args), { params: {\n                            chainId: hexChainId,\n                        } })));\n                    if ('result' in resultData) {\n                        let successData = resultData;\n                        let account = resultData.result;\n                        if (account) {\n                            const nameSpace = account.split(\":\")[0];\n                            const chainId = account.split(\":\")[1];\n                            const chain = nameSpace + ':' + chainId;\n                            let newNameSpace = this.namespace;\n                            this.namespace.accounts.push(account);\n                            this.namespace.chains.push(chain);\n                            (0, core_1.logDebug)(\"handleSwitchChain -->wallet_switchEthereumChain \", resultData);\n                            this.setDefaultChain(`${parsedChainId}`);\n                            this.events.emit(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, {\n                                eip155: this.namespace\n                            });\n                        }\n                    }\n                    else {\n                        new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request error`);\n                    }\n                }\n                catch (error) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request  error`);\n                }\n            }\n            return null;\n        });\n    }\n    isChainApproved(chainId) {\n        return this.namespace.chains.includes(`${this.name}:${chainId}`);\n    }\n    // rpc\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            //   throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            (0, core_1.logDebug)('get parsed chain and rpc:', parsedChainId, parsedRpc);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        (0, core_1.logDebug)('get http providermap:', http);\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n}\nexports.Eip155Provider = Eip155Provider;\nexports.default = Eip155Provider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcConnection = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nconst DEFAULT_HTTP_HEADERS = {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n};\nconst DEFAULT_HTTP_METHOD = \"POST\";\nconst DEFAULT_FETCH_OPTS = {\n    headers: DEFAULT_HTTP_HEADERS,\n    method: DEFAULT_HTTP_METHOD,\n};\n// Source: https://nodejs.org/api/events.html#emittersetmaxlistenersn\nconst EVENT_EMITTER_MAX_LISTENERS_DEFAULT = 10;\nclass JsonRpcConnection {\n    constructor(url, disableProviderPing = false) {\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n        this.events = new eventemitter3_1.EventEmitter();\n        this.isAvailable = false;\n        this.registering = false;\n        if (!(0, core_2.isHttpUrl)(url)) {\n            throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n        }\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n    }\n    get connected() {\n        return this.isAvailable;\n    }\n    get connecting() {\n        return this.registering;\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            yield this.register(url);\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                throw new Error(\"Connection already closed\");\n            }\n            this.onClose();\n        });\n    }\n    send(payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                yield this.register();\n            }\n            try {\n                const body = (0, core_1.safeJsonStringify)(payload);\n                const res = yield (0, cross_fetch_1.default)(this.url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                const data = yield res.json();\n                this.onPayload({ data });\n            }\n            catch (e) {\n                this.onError(payload.id, e);\n            }\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    register() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            if (!(0, core_2.isHttpUrl)(url)) {\n                throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n            }\n            if (this.registering) {\n                return new Promise((resolve, reject) => {\n                    this.events.once(\"register_error\", (error) => {\n                        reject(error);\n                    });\n                    this.events.once(\"open\", () => {\n                        if (typeof this.isAvailable === \"undefined\") {\n                            return reject(new Error(\"HTTP connection is missing or invalid\"));\n                        }\n                        resolve();\n                    });\n                });\n            }\n            this.url = url;\n            this.registering = true;\n            try {\n                if (!this.disableProviderPing) {\n                    const body = (0, core_1.safeJsonStringify)({ id: 1, jsonrpc: \"2.0\", method: \"test\", params: [] });\n                    yield (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                }\n                this.onOpen();\n            }\n            catch (e) {\n                const error = this.parseError(e);\n                this.events.emit(\"register_error\", error);\n                this.onClose();\n                throw error;\n            }\n        });\n    }\n    onOpen() {\n        this.isAvailable = true;\n        this.registering = false;\n        this.events.emit(\"open\");\n    }\n    onClose() {\n        this.isAvailable = false;\n        this.registering = false;\n        this.events.emit(\"close\");\n    }\n    onPayload(e) {\n        if (typeof e.data === \"undefined\")\n            return;\n        const payload = typeof e.data === \"string\" ? (0, core_1.safeJsonParse)(e.data) : e.data;\n        this.events.emit(\"payload\", payload);\n    }\n    onError(id, e) {\n        const error = this.parseError(e);\n        const message = error.message || error.toString();\n        const payload = (0, core_2.formatJsonRpcError)(id, message);\n        this.events.emit(\"payload\", payload);\n    }\n    parseError(e, url = this.url) {\n        return (0, core_2.parseConnectionError)(e, url, \"HTTP\");\n    }\n}\nexports.JsonRpcConnection = JsonRpcConnection;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcProvider = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst types_1 = require(\"../../types\");\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nclass JsonRpcProvider extends types_1.IJSONRpcProvider {\n    constructor(connection) {\n        super(connection);\n        this.events = new eventemitter3_1.EventEmitter();\n        this.connected = false;\n        this.connecting = false;\n        this.hasRegisteredEventListeners = false;\n        this.connection = this.setConnection(connection);\n        if (this.connection.connected) {\n            this.registerEventListeners();\n        }\n    }\n    connect() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            yield this.open(connection);\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.close();\n        });\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    request(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.requestStrict((0, core_1.formatJsonRpcRequest)(request.method, request.params || [], (0, core_1.getBigIntRpcId)().toString()), // casting to any is required in order to use BigInt as rpcId\n            context);\n        });\n    }\n    // ---------- Protected ----------------------------------------------- //\n    requestStrict(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                if (!this.connection.connected) {\n                    try {\n                        yield this.open();\n                    }\n                    catch (e) {\n                        reject(e);\n                    }\n                }\n                this.events.on(`${request.id}`, (response) => {\n                    if ((0, core_1.isJsonRpcError)(response)) {\n                        reject(response.error);\n                    }\n                    else {\n                        resolve(response.result);\n                    }\n                });\n                try {\n                    (0, core_2.logDebug)('[RPC] >>> send request', request, context);\n                    yield this.connection.send(request, context);\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }));\n        });\n    }\n    setConnection(connection = this.connection) {\n        return connection;\n    }\n    onPayload(payload) {\n        this.events.emit(\"payload\", payload);\n        if ((0, core_1.isJsonRpcResponse)(payload)) {\n            this.events.emit(`${payload.id}`, payload);\n        }\n        else {\n            this.events.emit(\"message\", {\n                type: payload.method,\n                data: payload.params,\n            });\n        }\n    }\n    onClose(event) {\n        // Code 3000 indicates an abnormal closure signalled by the relay -> emit an error in this case.\n        if (event && event.code === 3000) {\n            this.events.emit(\"error\", new Error(`WebSocket connection closed abnormally with code: ${event.code} ${event.reason ? `(${event.reason})` : \"\"}`));\n        }\n        this.events.emit(\"disconnect\");\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            if (this.connection === connection && this.connection.connected)\n                return;\n            if (this.connection.connected)\n                this.close();\n            if (typeof connection === \"string\") {\n                yield this.connection.open(connection);\n                connection = this.connection;\n            }\n            this.connection = this.setConnection(connection);\n            yield this.connection.open();\n            this.registerEventListeners();\n            this.events.emit(\"connect\");\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.connection.close();\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    registerEventListeners() {\n        if (this.hasRegisteredEventListeners)\n            return;\n        this.connection.on(\"payload\", (payload) => this.onPayload(payload));\n        this.connection.on(\"close\", (event) => this.onClose(event));\n        this.connection.on(\"error\", (error) => this.events.emit(\"error\", error));\n        this.connection.on(\"register_error\", (_error) => this.onClose());\n        this.hasRegisteredEventListeners = true;\n    }\n}\nexports.JsonRpcProvider = JsonRpcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SolanaProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SolanaProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"solana\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"solana request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"solana provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    //   {\n    //     \"chains\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\" ],\n    //     \"accounts\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp:F7wnJc5wiBGy1k87jv6gyNwE3jMEWd18oTQiYsF1xVG7\"],\n    //     \"methods\": [\n    //         \"solana_signTransaction\",\n    //         \"solana_signMessage\"\n    //     ],\n    //     \"defaultChain\": \"5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\"\n    // }\n    // TODO:确认上面的defaultChain是否正确（没有solana前缀）\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"solana\"))) {\n                chainId = `solana:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.SolanaProvider = SolanaProvider;\nexports.default = SolanaProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SuiProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SuiProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeySui;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"sui request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"sui provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"sui\"))) {\n                chainId = `sui:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"sui_signMessage\":\n            case \"sui_signPersonalMessage\":\n            case \"sui_signTransactionBlock\":\n            case \"sui_signAndExecuteTransactionBlock\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.SuiProvider = SuiProvider;\nexports.default = SuiProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass TONProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyTON;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            (0, core_1.logDebug)(\"TONProvider request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"TONProvider request provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                if (!args.params) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params is nil\");\n                }\n                if (this.isRecord(args.params)) {\n                    const _e = args.params, { validUntil } = _e, newParams = __rest(_e, [\"validUntil\"]);\n                    let fromAddress = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n                    if ('from' in newParams) {\n                        fromAddress = newParams.from || ((_d = (_c = this.namespace.payload) === null || _c === void 0 ? void 0 : _c.ton_addr) === null || _d === void 0 ? void 0 : _d.address);\n                    }\n                    args.params['from'] = fromAddress;\n                    args.params['network'] = this.getDefaultChain();\n                    args.params['valid_until'] = validUntil;\n                    let response = yield this.client.request(args);\n                    if (this.isRecord(response) && 'result' in response) {\n                        const result = {\n                            boc: response.result.toString()\n                        };\n                        (0, core_1.logDebug)(\"TONProvider request provider response: \", JSON.stringify(response));\n                        (0, core_1.logDebug)(\"TONProvider request provider result: \", JSON.stringify(result));\n                        return result;\n                    }\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton_send request response is nil\");\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params type add nil\");\n                }\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        var _a, _b;\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"ton getAccounts accounts :\", accounts);\n        (0, core_1.logDebug)(\"ton getAccounts .namespace :\", JSON.stringify(this.namespace));\n        if (!accounts) {\n            return [];\n        }\n        let address = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n        (0, core_1.logDebug)(\"ton getAccounts address :\", address);\n        if (address) {\n            return [\n                address\n            ];\n        }\n        return [];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"ton_sendTransaction\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.default = TONProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass TronProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyTron;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"tron request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"tron provider namespace: \", JSON.stringify(this.namespace));\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = TronProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./providers\"), exports);\n__exportStar(require(\"./misc\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IJSONRpcProvider = exports.IJSONRpcConnection = void 0;\nclass IJSONRpcConnection {\n}\nexports.IJSONRpcConnection = IJSONRpcConnection;\nclass IJSONRpcProvider {\n    constructor(opt) {\n    }\n}\nexports.IJSONRpcProvider = IJSONRpcProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setGlobal = exports.getGlobal = void 0;\nconst globals = {};\nconst getGlobal = (key) => {\n    return globals[key];\n};\nexports.getGlobal = getGlobal;\nconst setGlobal = (key, value) => {\n    globals[key] = value;\n};\nexports.setGlobal = setGlobal;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./misc\"), exports);\n__exportStar(require(\"./globals\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRpcUrl = getRpcUrl;\nexports.getChainId = getChainId;\nexports.fromAccountToAddress = fromAccountToAddress;\nexports.convertChainIdToNumber = convertChainIdToNumber;\nexports.parseChainId = parseChainId;\nexports.mergeArrays = mergeArrays;\nexports.syncAddressAvailable = syncAddressAvailable;\nexports.syncAddressHostAvailable = syncAddressHostAvailable;\nconst core_1 = require(\"@okxconnect/core\");\nfunction getRpcUrl(chainId, rpc, projectId) {\n    var _a;\n    const chain = parseChainId(chainId);\n    // no default\n    return (((_a = rpc.rpcMap) === null || _a === void 0 ? void 0 : _a[chain.reference]) ||\n        ``);\n}\nfunction getChainId(chain) {\n    return chain.includes(\":\") ? chain.split(\":\")[1] : chain;\n}\nfunction fromAccountToAddress(account) {\n    if (!account) {\n        return \"\";\n    }\n    try {\n        let addressArr = account.split(\":\").slice(2);\n        let address = addressArr.length > 0 ? addressArr.join(\":\") : \"\";\n        (0, core_1.logDebug)(\"fromAccountToAddress address and account:\", address, account);\n        return address;\n    }\n    catch (e) {\n        (0, core_1.logError)(\"fromAccountToAddress error:\", account);\n        return \"\";\n    }\n}\n// export function validateChainApproval(chain: string, chains: string[]): void {\n//   if (!chains.includes(chain)) {\n//     throw new Error(\n//       `Chain '${chain}' not approved. Please use one of the following: ${chains.toString()}`,\n//     );\n//   }\n// }\n// export function getChainsFromApprovedSession(accounts: string[]): string[] {\n//   return accounts.map((address) => `${address.split(\":\")[0]}:${address.split(\":\")[1]}`);\n// }\n// export function getAccountsFromSession(namespace: string, session: SessionTypes.Struct): string[] {\n//   // match namespaces e.g. eip155 with eip155:1\n//   const matchedNamespaceKeys = Object.keys(session.namespaces).filter((key) =>\n//     key.includes(namespace),\n//   );\n//   if (!matchedNamespaceKeys.length) return [];\n//   const accounts: string[] = [];\n//   matchedNamespaceKeys.forEach((key) => {\n//     const accountsForNamespace = session.namespaces[key].accounts;\n//     accounts.push(...accountsForNamespace);\n//   });\n//   return accounts;\n// }\n// export function mergeRequiredOptionalNamespaces(\n//   required: NamespaceConfig = {},\n//   optional: NamespaceConfig = {},\n// ){\n//   const requiredNamespaces = normalizeNamespaces(required);\n//   const optionalNamespaces = normalizeNamespaces(optional);\n//    return merge.merge(requiredNamespaces,optionalNamespaces)\n// }\n/**\n * Converts\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * into\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *\n */\n// export function normalizeNamespaces(namespaces: NamespaceConfig): NamespaceConfig {\n//   const normalizedNamespaces: NamespaceConfig = {};\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const rpcMap = values.rpcMap || {};\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       ...values,\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       rpcMap: { ...rpcMap, ...normalizedNamespaces[normalizedKey]?.rpcMap },\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n//\n// export function parseCaip10Account(caip10Account: string): string {\n//   return caip10Account.includes(\":\") ? caip10Account.split(\":\")[2] : caip10Account;\n// }\n/**\n * Populates the chains array for each namespace with the chains extracted from the accounts if are otherwise missing\n */\n// export function populateNamespacesChains(\n//   namespaces: SessionTypes.Namespaces,\n// ): Record<string, SessionTypes.Namespace> {\n//   const parsedNamespaces: Record<string, SessionTypes.Namespace> = {};\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const accounts = values.accounts || [];\n//     // If the key includes a CAIP separator `:` we know it's a namespace + chainId (e.g. `eip155:1`)\n//     const chains = isCaipNamespace(key)\n//       ? [key]\n//       : values.chains\n//       ? values.chains\n//       : getChainsFromApprovedSession(values.accounts);\n//     parsedNamespaces[key] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   }\n//   return parsedNamespaces;\n// }\nfunction convertChainIdToNumber(chainId) {\n    if (typeof chainId === \"number\")\n        return chainId;\n    if (chainId.includes(\"0x\")) {\n        return parseInt(chainId, 16);\n    }\n    chainId = chainId.includes(\":\") ? chainId.split(\":\")[1] : chainId;\n    return isNaN(Number(chainId)) ? chainId : Number(chainId);\n}\nconst CAIP_DELIMITER = \":\";\nfunction parseChainId(chain) {\n    const [namespace, reference] = chain.split(CAIP_DELIMITER);\n    return { namespace, reference };\n}\nfunction mergeArrays(a = [], b = []) {\n    return [...new Set([...a, ...b])];\n}\nfunction syncAddressAvailable(wallet) {\n    if (!wallet) {\n        return false;\n    }\n    if (wallet.appName !== 'OKX Wallet') {\n        return false;\n    }\n    if ((0, core_1.versionCompare)('6.97.0', wallet.appVersion) > 0) {\n        return false;\n    }\n    return syncAddressHostAvailable();\n}\nfunction syncAddressHostAvailable() {\n    try {\n        return !!(window.okxGlobal);\n    }\n    catch (e) {\n        return false;\n    }\n}\n","<template>\n  <div id=\"app\">\n    <el-container>\n      <el-header>OKX Connect</el-header>\n      <el-main>\n        <el-card class=\"wallet-info\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Wallet Info</div>\n          </template>\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Wallet Address:</strong> {{ getWalletAddress }}\n            </el-col>\n          </el-row>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Status :</strong> {{ currentStatus }}\n            </el-col>\n          </el-row>\n\n        </el-card>\n\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Connect Params</div>\n          </template>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"12\">\n              <el-checkbox v-model=\"withUI\" @change=\"handleWithUI\">\n                Show UI</el-checkbox>\n            </el-col>\n\n            <el-col :span=\"12\">\n              <el-checkbox v-model=\"universalToTG\" @change=\"handleUniversalToTG\">\n                Use mini wallet</el-checkbox>\n            </el-col>\n          </el-row>\n\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Modals</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"modals\" placeholder=\"Modals\" @change=\"handleModalsSelect\" multiple>\n                <el-option label=\"Before\" value=\"before\" />\n                <el-option label=\"Success\" value=\"success\" />\n                <el-option label=\"Error\" value=\"error\" />\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center; justify-content: space-between;\">\n            <el-col :span=\"6\" style=\"gap: 2px\">\n              <p style=\"font-size: 11pt; margin: 0px\">Return Strategy</p>\n              <p style=\"font-size: 9pt; margin: 0px\">(Mobile only)</p>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-select\n                v-model=\"returnStrategy\"\n                @change=\"handleReturnStrategySelect\"\n                placeholder=\"Return Strategy\"\n              >\n                <el-option\n                  v-for=\"strategy in returnStrategies\"\n                  :key=\"`return-strategy-select-option-${strategy}`\"\n                  :label=\"strategy\"\n                  :value=\"strategy\"\n                />\n              </el-select>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-input\n                v-if=\"returnStrategy === 'deeplink'\"\n                v-model=\"deeplink\"\n                @change=\"handleReturnStrategyDeeplink\"\n                placeholder=\"Deeplink\"\n                :disabled=\"returnStrategy !== 'deeplink'\"\n                style=\"margin: 0px\"\n              />\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Lang</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"language\" @change=\"handleLanguageSelect\" placeholder=\"Language\">\n                <el-option v-for=\"locale in locales\" :key=\"`language-select-option-${locale}`\" :label=\"locale\"\n                  :value=\"locale\" />\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Theme</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"theme\" @change=\"handleThemeSelect\" placeholder=\"Theme\">\n                <el-option label=\"LIGHT\" :value=\"THEME.LIGHT\" />\n                <el-option label=\"DARK\" :value=\"THEME.DARK\" />\n              </el-select>\n            </el-col>\n          </el-row>\n\n<!--          <el-row>-->\n<!--          <el-row style=\"align-items: center\">-->\n<!--            <el-col :span=\"4\">-->\n<!--              <p style=\"font-size: 11pt\">Connect</p>-->\n<!--              <p style=\"font-size: 11pt\">Methods</p>-->\n<!--            </el-col>-->\n<!--            <el-col :span=\"20\">-->\n<!--              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" placeholder=\"Methods\">-->\n<!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n<!--                           :value=\"methods\" />-->\n\n<!--              </el-select>-->\n<!--            </el-col>-->\n<!--          </el-row>-->\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Connect</p>\n              <p style=\"font-size: 11pt\">Methods</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" multiple placeholder=\"methods\">\n                <el-option\n                    v-for=\"item in connectMethods\"\n                    :key=\"item\"\n                    :label=\"item\"\n                    :value=\"item\">\n                </el-option>\n              </el-select>\n\n\n<!--              <el-select v-model=\"selectedMethod\" placeholder=\"Methods\" @change=\"handleConnectMethodsSelect\" multiple>-->\n<!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n<!--                           :value=\"methods\" />-->\n<!--              </el-select>-->\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">ton_proof</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-input v-model=\"tonProofValue\"  placeholder=\"input ton_proof\"></el-input>\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" align=\"middle\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Required Chains</div>\n            </el-col>\n            <el-col\n              :span=\"6\"\n              v-for=\"item in Object.keys(availableChains)\"\n              :key=\"item\"\n            >\n              <el-checkbox\n                v-model=\"availableChains[item].checked\"\n                :disabled=\"!areChainsInit\"\n                >{{ availableChains[item].name }}</el-checkbox\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" align=\"middle\" style=\"margin-top: 20px\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Optional Chains</div>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(43114)\" @change=\"() => handleOptionChange(43114)\">\n                AVAX</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(10)\" @change=\"() => handleOptionChange(10)\">OP</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(8453)\" @change=\"() => handleOptionChange(8453)\">\n                BASE</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(99781165)\"\n                @change=\"() => handleOptionChange(99781165)\">Nonexist</el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp')\" @change=\"() => handleOptionChange('solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp')\">Solana</el-checkbox>\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"initBtnClicked\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectInitStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                type=\"primary\"\n                @click=\"connectBtnClicked\"\n                icon=\"el-icon-connection\"\n                :disabled=\"!areChainsInit\"\n                >{{ connectStatusStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"syncAllAddressClick\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ syncAllAddressStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                type=\"danger\"\n                @click=\"disconnectAction\"\n                icon=\"el-icon-switch-button\"\n                :disabled=\"!areChainsInit || walletAddress.length == 0\"\n                >{{ disconnectStatusStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n          <teleport to=\"body\">\n            <div v-if=\"showModal\" class=\"modal-overlay\" @click=\"closeModal\">\n              <div class=\"modal-content\" @click.stop>\n                <button class=\"close-button\" @click=\"closeModal\">\n                  &times;\n                </button>\n                <h2>Scan to connect</h2>\n                <qrcode-vue :value=\"qrValue\" :size=\"350\" level=\"L\" />\n              </div>\n            </div>\n          </teleport>\n        </el-card>\n\n        <!-- 发送交易 -->\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Transactions</div>\n          </template>\n\n          <el-tabs v-model=\"activeTab\" type=\"border-card\" @tab-click=\"clickActiveTab\">\n            <!-- ETH -->\n            <el-tab-pane label=\"ETH\" name=\"eip155:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to ETH)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve TONCoin)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(eth mint\n                    nft)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add SPX6900)\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TON\" name=\"ton:-239\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_getAccount\">ton_getAccount</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_sendTransaction\">ton_sendTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- solana -->\n            <el-tab-pane label=\"Sol\" name=\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- Sui-->\n            <el-tab-pane label=\"Sui\" name=\"sui:mainnet\">\n              <SuiPanel @generateTransactionParams=\"sui_generateTransactionParams\" />\n            </el-tab-pane>\n            <!-- BTC -->\n            <el-tab-pane label=\"BTC\" name=\"btc:mainnet\">\n              <BTCPanel @generateTransactionParams=\"btc_generateTransactionParams\" />\n            </el-tab-pane>\n\n            <!-- Fractal BTC -->\n            <el-tab-pane label=\"Fractal\" name=\"fractal:mainnet\">\n              <FractalPanel @generateTransactionParams=\"fractal_generateTransactionParams\" />\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Tron\" name=\"tron:mainnet\">\n              <TronTransactionPanel\n                  @generateTransactionParams=\"tron_generateTransactionParams\"\n                  @generateTransactionResult=\"tron_getTransactionResult\" />\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Aptos\" name=\"aptos:mainnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signTransaction\">aptos_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"aptos_signAndSubmitTransaction\">aptos_signAndSubmitTransaction</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Cosmos\" name=\"cosmos:cosmoshub-4\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <!-- Polygon-->\n            <el-tab-pane label=\"Polygon\" name=\"eip155:137\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send POL)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve sushi)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(polygon mint\n                    nft)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add LGNS)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_testRpc()\">wallet_testRpc(Polygon)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\"\n                  >eth_sendTransaction(转账FUSE)</el-button\n                  >\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\"\n                  >eth_sendTransaction(授权USDC)</el-button\n                  >\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- BSC-->\n            <el-tab-pane label=\"BNB\" name=\"eip155:56\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to BNB)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve POSI)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add FET)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_testRpc()\">wallet_testRpc(check balance on eth)</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Fuse\" name=\"eip155:122\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_swap\">eth_sendTransaction(Swap)</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Sonic testnet\" name=\"svm:70000062\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Movement\" name=\"movement:testnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"move_signTransaction\">move_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"move_signAndSubmitTransaction\">move_signAndSubmitTransaction</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n\n            <el-tab-pane label=\"osmos\" name=\"cosmos:osmosis-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"SEI\" name=\"cosmos:pacific-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TEST \" name=\"test:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"testBase64UrlSafe\">testBase64UrlSafe</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n          </el-tabs>\n\n          <el-col :xs=\"24\" :sm=\"24\" style=\"margin: 16px 0px;\">\n            <el-row style=\"align-items: center; justify-content: space-between; margin-bottom: 8px;\">\n              <el-col :span=\"4\">\n                <p style=\"font-size: 11pt; margin: 0px; text-align: start\">Redirect param (only for ETH, Polygon, BNB, Fuse)</p>\n              </el-col>\n              <el-col :span=\"9\">\n                <el-select\n                  v-model=\"redirect\"\n                  @change=\"handleRedirectSelect\"\n                  placeholder=\"Return Strategy\"\n                  :disabled=\"!canChainAddRedirectParam()\"\n                  >\n                  <el-option\n                    v-for=\"strategy in returnStrategies\"\n                    :key=\"`return-strategy-select-option-${strategy}`\"\n                    :label=\"strategy\"\n                    :value=\"strategy\"\n                  />\n                </el-select>\n              </el-col>\n              <el-col :span=\"10\">\n                <el-input\n                  v-if=\"redirect === 'deeplink'\"\n                  v-model=\"redirectDeeplink\"\n                  @change=\"handleRedirectDeeplink\"\n                  placeholder=\"Deeplink\"\n                  :disabled=\"!canChainAddRedirectParam() || redirect !== 'deeplink'\"\n                  style=\"margin: 0px\"\n                />\n              </el-col>\n            </el-row>\n            <el-button\n              type=\"primary\" @click=\"addRedirectParam()\"\n              :disabled=\"!canChainAddRedirectParam() || !testTransaction\"\n            >\n              Add redirect param to data\n            </el-button>\n          </el-col>\n\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Data:</div>\n            <el-input v-model=\"testTransaction\" type=\"textarea\" :rows=\"5\" placeholder=\"sendTransactions\"></el-input>\n          </el-col>\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Result :</div>\n            <el-input v-model=\"testboc\" type=\"textarea\" :rows=\"5\" placeholder=\"boc\"></el-input>\n          </el-col>\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button type=\"primary\" @click=\"sendTransaction()\">{{\n                testTransactionStr\n                }}</el-button>\n            </el-col>\n          </el-row>\n        </el-card>\n      </el-main>\n    </el-container>\n  </div>\n</template>\n\n<style scoped>\n/* 重置全局边距和内边距 */\nbody,\nhtml {\n  margin: 0;\n  padding: 0;\n  height: 100%;\n}\n\n/* 确保 app 容器占满整个视口 */\n#app {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin: 0 auto;\n  /* 居中 */\n  max-width: 600px;\n  /* 设置最大宽度 */\n  padding: 0 20px;\n  /* 添加一些左右内边距 */\n}\n\n/* 调整 el-container 样式 */\n.el-container {\n  min-height: 100vh;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n}\n\n/* 调整 el-header 样式 */\n.el-header {\n  background-color: #333333;\n  color: white;\n  height: 50px;\n  line-height: 50px;\n  font-size: 18px;\n  font-weight: bold;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1000;\n}\n\n/* 调整 el-main 样式 */\n.el-main {\n  padding: 70px 0 20px;\n  /* 增加顶部内边距以避免被固定header遮挡 */\n  flex-grow: 1;\n}\n\n.el-card {\n  margin-bottom: 20px;\n}\n\n.info-row {\n  margin-bottom: 10px;\n}\n\n.input-label {\n  margin-bottom: 5px;\n  text-align: left;\n}\n\n.el-input {\n  margin-bottom: 10px;\n}\n\n/* 通用按钮样式 */\n.wallet-actions .el-button,\n.transaction .el-button,\n.clear-cache .el-button {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 40px;\n}\n\n.wallet-actions .el-button span,\n.transaction .el-button span,\n.clear-cache .el-button span {\n  margin: 0 auto;\n}\n\n/* 按钮行间距 */\n.wallet-actions .button-row,\n.transaction .button-row {\n  margin-bottom: 8px;\n}\n\n.wallet-actions .button-row:last-child,\n.transaction .button-row:last-child {\n  margin-bottom: 0;\n}\n\n/* 调整图标和文字的对齐 */\n.wallet-actions .el-button [class^=\"el-icon-\"],\n.transaction .el-button [class^=\"el-icon-\"],\n.clear-cache .el-button [class^=\"el-icon-\"] {\n  margin-right: 5px;\n  vertical-align: middle;\n}\n\n/* 新增：调整发送交易按钮与输入框的间距 */\n.transaction .el-row:not(:last-child) {\n  margin-bottom: 10px;\n}\n\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.modal-content {\n  background-color: white;\n  padding: 20px;\n  border-radius: 8px;\n  text-align: center;\n  position: relative;\n  max-width: 90%;\n  width: 400px;\n}\n\n.close-button {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  font-size: 24px;\n  border: none;\n  background: none;\n  cursor: pointer;\n}\n\n/* 响应式调整 */\n@media (max-width: 600px) {\n  #app {\n    padding: 0 10px;\n  }\n\n  .el-main {\n    padding: 60px 0 10px;\n  }\n}\n</style>\n<script>\nimport {OKX_CONNECT_ERROR_CODES, safeJsonStringify,getAppWalletDeepLink,getUniversalLink} from \"@okxconnect/core\"\nimport {\n  OKXBtcProvider,\n  OKXUniversalProvider,\n  OKXCosmosProvider,\n  OKXTonProvider,\n  OKXTronProvider\n} from \"@okxconnect/universal-provider\"\nimport {OKXSolanaProvider} from \"@okxconnect/solana-provider\";\nimport {\n  Connection,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n  TransactionMessage,\n  VersionedTransaction\n} from '@solana/web3.js';\nimport {OKXSuiProvider as SuiAdapter} from \"@okxconnect/sui-provider\"\nimport QrcodeVue from 'qrcode.vue'\n\nimport {OKXAptosProvider} from \"@okxconnect/aptos-provider\";\nimport {Aptos, AptosConfig, Network} from \"@aptos-labs/ts-sdk\";\n\nimport BTCPanel from \"./components/BtcTransactionPanel.vue\";\nimport FractalPanel from \"./components/FractalTransactionPanel.vue\"\nimport SuiPanel from \"./components/SuiTransactionPanel.vue\";\n\nimport {OKXUniversalConnectUI, THEME} from \"@okxconnect/ui\";\nimport { ethers } from 'ethers';\nimport VConsole from 'vconsole';\nimport nacl from \"tweetnacl\";\nconst { verifyADR36Amino } = require('@keplr-wallet/cosmos')\nconst { fromBech32 } = require('@cosmjs/encoding')\nimport { verifyPersonalMessageSignature } from '@mysten/sui/verify';\nimport {useShortLink} from \"@okxconnect/core\";\nimport TronTransactionPanel from \"@/components/TronTransactionPanel.vue\";\nimport {TronWeb} from \"tronweb\";\nnew VConsole();\n\nconst allChains = {\n  1: { name: \"Eth\", checked: false },\n  56: { name: \"BNB\", checked: false },\n  137: { name: \"Polygon\", checked: false },\n  122: { name: \"Fuse\", checked: false },\n  \"ton:-239\":{name: \"TON\",checked: false},\n  \"btc:mainnet\": { name: \"BTC\", checked: false },\n  \"sui:mainnet\": { name: \"Sui\", checked: false },\n  \"aptos:mainnet\": { name: \"Aptos\", checked: false },\n  \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\": {\n    name: \"Solana\",\n    checked: false,\n  },\n  \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\": {\n    name: \"Sol testnet\",\n    checked: false,\n  },\n  \"svm:70000062\": {\n    name: \"Sonic testnet\",\n    checked: false,\n  },\n  \"movement:testnet\": { name: \"Movement\", checked: false },\n  \"fractal:mainnet\": { name: \"Fractal\", checked: false },\n  \"cosmos:osmosis-1\": {name: \"Osmos\", checked: false},\n  \"cosmos:cosmoshub-4\": {name: \"Cosmos\", checked: false},\n  \"cosmos:pacific-1\": {name: \"SEI\", checked: false},\n  \"cosmos:abvdefg\": {name: \"cosmos:abvdefg\", checked: false},\n  \"tron:mainnet\": {name: \"tron\", checked: false},\n  997865: { name: \"Non Exist chain\", checked: false },\n  2020: { name: \"Ronin\", checked: false },\n  1666600000: { name: \"Harmony\", checked: false },\n};\n\nconst chainsThatCanAddRedirectParam = [\n  \"eip\"\n]\n\nvar optionChains = new Set([]);\nvar selectedModals = [\"before\", \"success\", \"error\"];\nvar selectedReturnStrategy = \"none\";\nvar selectedDeepLink = \"tg://resolve\";\nvar selectedLanguage = \"en_US\";\nvar selectedTheme = THEME.LIGHT;\n\n// import QrcodeVue from 'qrcode.vue'\nexport default {\n  name: \"App\",\n  components: {\n    TronTransactionPanel,\n    QrcodeVue,\n    BTCPanel,\n    FractalPanel,\n    SuiPanel\n  },\n\n  data: () => {\n    return {\n      activeTab: \"eip155:1\",\n      testTopic: \"\",\n      testPublicKey: \"\",\n      testProofPayload: \"\",\n      tonProofValue:\"\",\n      pendingDeepLink: \"-\",\n      logList: [],\n      connectReady: false,\n      connectStatusStr: \"Connect\",\n      syncAllAddressStr: \"syncAllAddress\",\n      connectInitStr: \"init test\",\n      disconnectStatusStr: \"Disconnect\",\n      localPubKey: \"\",\n      localSecKey: \"\",\n      testTransaction: \"\",\n      selectedChain: \"eip155:1\",\n      testTransactionStr: \"Send\",\n      walletAddress: \"\",\n      testboc: \"\",\n      ProofPayloadVerify: \"\",\n      showModal: false,\n      showVerifyRow: false,\n      qrValue: \"https://www.okx.com/download\",\n      currentStatus: \"\",\n      areChainsInit: false,\n      availableChains: allChains,\n      isOptionalChecked: (chainId) => {\n        return optionChains.has(chainId);\n      },\n      withUI: localStorage.getItem(\"autoRefresh\") != \"false\",\n      universalToTG: localStorage.getItem(\"universalToTG\") != \"false\",\n      modals: selectedModals,\n      returnStrategies: [\"none\", \"back\", \"deeplink\"],\n      returnStrategy: selectedReturnStrategy,\n      deeplink: selectedDeepLink,\n      locales: [\n        \"en_US\",\n        \"ru_RU\",\n        \"zh_CN\",\n        \"zh\",\n        \"ar_AE\",\n        \"cs_CZ\",\n        \"de_DE\",\n        \"es_ES\",\n        \"es_LAT\",\n        \"fr_FR\",\n        \"id_ID\",\n        \"it_IT\",\n        \"nl_NL\",\n        \"pl_PL\",\n        \"pt_BR\",\n        \"pt_PT\",\n        \"ro_RO\",\n        \"tr_TR\",\n        \"uk_UA\",\n        \"vi_VN\",\n        \"zh_TW\"\n      ],\n      selectedMethod:[],\n      selectedMethodData:[],\n      connectMethods:[\n        \"wallet_addEthereumChain(ETH)\",\n        \"personal_sign(ETH)\",\n        \"solana_signMessage(Sol mainnet)\",\n        \"sui_signMessage(Sui mainnet)\",\n        \"sui_signPersonalMessage(Sui mainnet)\",\n        \"btc_signMessage(BTC)\",\n        \"aptos_signMessage(aptos mainnet)\",\n        \"cosmos_signArbitrary(cosmoshub)\",\n        \"test_noSupport_eth(ETH)\",\n        \"tron_signMessage\",\n        \"tron_signMessageV2\",\n        \"sync_all_addresses\"\n      ],\n\n      language: selectedLanguage,\n      theme: selectedTheme,\n      THEME: THEME,\n      redirect: selectedReturnStrategy,\n      redirectDeeplink: selectedDeepLink,\n      handleWithUI: (isChecked) => {\n        localStorage.setItem(\"autoRefresh\", `${isChecked}`);\n        location.reload();\n      },\n      handleUniversalToTG: (isChecked) => {\n        localStorage.setItem(\"universalToTG\", `${isChecked}`);\n      },\n      handleOptionChange: (chainId) => {\n        if (optionChains.has(chainId)) {\n          optionChains.delete(chainId);\n        } else {\n          optionChains.add(chainId);\n        }\n      },\n    };\n  },\n  computed: {\n    getWalletAddress: function () {\n      return this.walletAddress;\n    },\n  },\n  methods: {\n    isChecked(chainId) {\n      return this.selectedChains.has(chainId);\n    },\n\n    initChains(newChains) {\n      if (newChains.length > 0) {\n        const updatedChains = Object.assign({}, this.availableChains);\n        for (const chainId of newChains) {\n          if (updatedChains[chainId]){\n            updatedChains[chainId].checked = !updatedChains[chainId].checked;\n          }\n        }\n        this.availableChains = updatedChains;\n      }\n\n      this.areChainsInit = true;\n    },\n\n    async clickActiveTab(tab) {\n      const tabName = tab.props ? tab.props.name : tab.name;\n      this.selectedChain = tabName;\n      console.log(`已切换到链 :`, tabName);\n\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      window.provider.setDefaultChain(this.selectedChain);\n    },\n\n    async initBtnClicked() {\n      window.okxLogDebug = true\n      var initCall;\n      if (!this.withUI) {\n        initCall = OKXUniversalProvider.init({\n          dappMetaData: {\n            name: \"univer test dapp\",\n            icon: \"https://avatars.githubusercontent.com/u/37784886\",\n          },\n        });\n      } else {\n        initCall = OKXUniversalConnectUI.init({\n          dappMetaData: {\n            icon: \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\",\n            name: \"OKX WalletConnect UI Demo\",\n          },\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: 'all',\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme\n          },\n        });\n      }\n\n      initCall.then((provider) => {\n        window.provider = provider;\n        window.tonProvider = new OKXTonProvider(window.provider);\n        window.tonProvider.onStatusChange((walletInfo) => {\n              console.log('TONConnection onStatusChange:', JSON.stringify(walletInfo));\n            }, (err) => {\n              console.log('TONConnection onStatusChange error:', err);\n            }\n        )\n\n        if (window.provider instanceof OKXUniversalConnectUI) {\n          window.provider.onModalStateChange((state)=>{\n            console.log(`onModalStateChange   ${JSON.stringify(state)}`)\n          })\n        }\n\n        console.log(\"init finished:\", provider);\n        console.log(\"init finished session:\", JSON.stringify(provider.session));\n\n        if (provider.session?.namespaces) {\n          const newChains = [];\n          console.log(\"namespaces\", provider.session.namespaces);\n          Object.entries(provider.session.namespaces).forEach(([key, value]) => {\n            if (key === \"eip155\") {\n              value.chains.forEach((chain) => {\n                newChains.push(parseInt(chain.substring(7)));\n              });\n            }\n            else {\n              value.chains.forEach((chain) => {\n                newChains.push(chain);\n              });\n            }\n          });\n\n          console.log(\"existing chains:\", newChains);\n          this.initChains(newChains);\n        } else {\n          this.initChains([]);\n        }\n\n        provider.on(\"display_uri\", (uri) => {\n          if (!useShortLink()){\n            if (this.isPC()) {\n              if (uri && !this.withUI && !this.universalToTG) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          }\n          console.log(\"通知>>>display_uri  ==> \", uri);\n        });\n\n        provider.on(\"connect_signResponse\", (items) => {\n          console.log(\"通知>>>connect_signResponse  ==> \", JSON.stringify(items));\n          this.verifyMessage(items)\n        })\n\n        provider.on(\"short_display_uri\", (uri) => {\n          if (useShortLink()){\n            if (this.isPC()) {\n              if (uri && !this.withUI && !this.universalToTG) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          }\n          console.log(\"通知>>>short_display_uri  ==> \", uri);\n        });\n\n\n        provider.on(\"session_connecting\", () => {\n          if (useShortLink()){\n            alert(\"session_connecting\")\n          }\n          console.log(\"通知>>>session_connecting  ==> \");\n        });\n\n        provider.on(\"connect\", (session) => {\n          console.log(\"通知>>>get connect session\", session);\n        });\n        provider.on(\"reconnect\", (session) => {\n          console.log(\"通知>>>get reconnect session\", session);\n          this.walletAddress = \"connected\";\n        });\n        provider.on(\"disconnect\", ({ topic }) => {\n          console.log(`通知>>>get disconnect  ${topic}`);\n          this.walletAddress = \"disconnecteddddd\";\n        });\n        provider.on(\"session_delete\", ({ topic }) => {\n          console.log(`通知>>>get session_delete  ${topic}`);\n        });\n        provider.on(\"session_update\", (session) => {\n          console.log(`通知>>>get session_update `, JSON.stringify(session));\n        });\n      });\n    },\n\n    async connectBtnClicked() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        this.testTonSdk();\n      } else {\n        console.log(`connectBtnClicked provider not finish init`);\n      }\n    },\n\n    async syncAllAddressClick() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        if (window.provider instanceof OKXUniversalProvider){\n          if (window.provider.connected()){\n            try {\n              let message = await window.provider.syncAllAddresses()\n              if (typeof message == \"string\") {\n                this.testboc = message\n              } else {\n                this.testboc = JSON.stringify(message)\n              }\n            }catch (e) {\n              this.testboc = JSON.stringify(e)\n            }\n          }else{\n            this.testboc = \"not connected\"\n          }\n        }\n\n      } else {\n        console.log(`syncAllAddress provider not finish init`);\n      }\n    },\n\n    async disconnectAction() {\n      try {\n        console.log(\"get disconnect wallet btn clicked\");\n        // await TON.disconnect();\n        var provider = window.provider;\n        await provider.disconnect();\n        this.walletAddress = \"disconnected\";\n      } catch (error) {\n        console.log(\"Disconnect  error ==>> \", error.message);\n        this.currentStatus = error.message;\n      }\n    },\n\n    async eth_requestAccounts() {\n      var data = { method: \"eth_requestAccounts\" };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_chainId() {\n      var data = { method: \"eth_chainId\" };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async wallet_switchEthereumChain() {\n      var data = { method: \"wallet_switchEthereumChain\" };\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async wallet_addEthereumChain() {\n      var data = {\n        method: \"wallet_addEthereumChain\",\n        params: {\n          blockExplorerUrls: [\"https://explorer.fuse.io\"],\n          chainId: \"0x7a\",\n          chainName: \"Fuse\",\n          nativeCurrency: { name: \"Fuse\", symbol: \"FUSE\", decimals: 18 },\n          rpcUrls: [\"https://rpc.fuse.io\"],\n        },\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n    async personal_sign() {\n      if (this.selectedChain === \"eip155:1\") {\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0x1ca023f10e157d148deed210f8bee193657a1eaa7f187909e20a9dc3b071dbc364c41fde37960c05093359f410a061ec8a7dca8c0c39fc7c1e24de8a3329775d1b\n\n        var accounts = await window.provider.request(\n          { method: \"eth_requestAccounts\" },\n          \"eip155:1\"\n        );\n        var address = accounts[0];\n        console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n        var dataETH = {\n          method: \"personal_sign\",\n          params: [\n            \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n            address,\n          ],\n        };\n\n        this.testTransaction = JSON.stringify(dataETH);\n      } else if (\n        this.selectedChain === \"eip155:137\" ||\n        this.selectedChain === \"eip155:122\"\n      ) {\n        // method\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0xebda9cfa2af43999058dffa0107031d1ef7fc0252dca85dcbd22ea097af922ca39b64d509ef61ce42b7641c5840b8a80337ffd1411b13e87e2260a3f1b6c151c1b\n\n        var dataPolygon = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n        this.testTransaction = JSON.stringify(dataPolygon);\n      } else if (this.selectedChain === \"eip155:56\") {\n        var data = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n\n        this.testTransaction = JSON.stringify(data);\n      }\n    },\n\n    async eth_sendTransaction_swap() {\n      var data = {\n        method: \"eth_sendTransaction\",\n        chainId: \"eip155:122\",\n        params: {\n          value: \"0x38d7ea4c68000\",\n          gas: \"0x2665f\",\n          to: \"0xf2614A233c7C3e7f08b1F887Ba133a13f1eb2c55\",\n          from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n          data: \"0x2646478b000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee00000000000000000000000000000000000000000000000000038d7ea4c68000000000000000000000000000620fd5fa44be6af63715ef4e65ddfa0387ad13f5000000000000000000000000000000000000000000000000000000000000001b000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000700301ffff0201602352A9Eb5234466Eac23E59e7B99bCaE79C39c0BE9e53fd7EDaC9F859882AfdDa116645287C629040BE9e53fd7EDaC9F859882AfdDa116645287C62900602352A9Eb5234466Eac23E59e7B99bCaE79C39c01f2F3e73be57031114dd1f4E75c1DD87658be7F0E000bb800000000000000000000000000000000\",\n        },\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_signTypedData_v4() {\n      // method\n      // eth_signTypedData\n      // address\n      // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n      // valid\n      // true\n      // result\n      // 0xa8bb3c6b33a119d2d567c7632195c21988df778006082742125a591f5c633f716107883a37f7de6531a6312a5f69022135bf46fe5ab77905b62c82b3395f985e1b\n      //\n\n      // var data = {\n      //   \"method\": \"eth_signTypedData_v4\",\n      //   \"params\": {\n      //     \"typedDataJson\":\"{\\\"types\\\":{\\\"EIP712Domain\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"version\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"chainId\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"name\\\":\\\"verifyingContract\\\",\\\"type\\\":\\\"address\\\"}],\\\"Person\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"wallet\\\",\\\"type\\\":\\\"address\\\"}],\\\"Mail\\\":[{\\\"name\\\":\\\"from\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"to\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"contents\\\",\\\"type\\\":\\\"string\\\"}]},\\\"primaryType\\\":\\\"Mail\\\",\\\"domain\\\":{\\\"name\\\":\\\"Ether Mail\\\",\\\"version\\\":\\\"1\\\",\\\"chainId\\\":1,\\\"verifyingContract\\\":\\\"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\\\"},\\\"message\\\":{\\\"from\\\":{\\\"name\\\":\\\"Cow\\\",\\\"wallet\\\":\\\"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\\\"},\\\"to\\\":{\\\"name\\\":\\\"Bob\\\",\\\"wallet\\\":\\\"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\\\"},\\\"contents\\\":\\\"Hello, Bob!\\\"}}\"\n      // }}\n\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n        this.selectedChain\n      );\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n      var data = {\n        method: \"eth_signTypedData_v4\",\n        params: [\n          address,\n          {\n            types: {\n              EIP712Domain: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"version\",\n                  type: \"string\",\n                },\n                {\n                  name: \"chainId\",\n                  type: \"uint256\",\n                },\n                {\n                  name: \"verifyingContract\",\n                  type: \"address\",\n                },\n              ],\n              Person: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"wallet\",\n                  type: \"address\",\n                },\n              ],\n              Mail: [\n                {\n                  name: \"from\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"to\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"contents\",\n                  type: \"string\",\n                },\n              ],\n            },\n            primaryType: \"Mail\",\n            domain: {\n              name: \"Ether Mail\",\n              version: \"1\",\n              chainId: 1,\n              verifyingContract: \"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\",\n            },\n            message: {\n              from: {\n                name: \"Cow\",\n                wallet: \"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\",\n              },\n              to: {\n                name: \"Bob\",\n                wallet: \"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\",\n              },\n              contents: \"Hello, Bob!\",\n            },\n          },\n        ],\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_sendTransaction_transfer() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            chainId: \"0x1\",\n            to: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            value: \"0x5af3107a4000\",\n            maxPriorityFeePerGas: \"0x3b9aca00\",\n            gas: \"0x5e56\",\n            maxFeePerGas: \"0x2643b9db8\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gasPrice: \"0x17003f6530\",\n            nonce: \"0x0d30\",\n            data: \"0x\",\n            value: \"0x00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasLimit: \"0x5208\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x5e56\",\n            value: \"0x5af3107a4000\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasPrice: \"0x3b9aca00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            chainId: \"0x38\",\n          },\n        };\n      }else if(this.selectedChain === \"eip155:122\"){\n         data =   {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            value: \"0x0\",\n            chainId: \"0x7a\",\n          }\n        }\n      }\n\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n        this.selectedChain\n      );\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"to\"] = address;\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_approve() {\n      var data = {};\n\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000000000000022d473030f116ddee9f6b43ac78ba3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x582d872a1b094fc48f5de31d3b73f2d9be47def1\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000f6f8096ac575b0\",\n            to: \"0x0b3F868E0BE5597D5DB7fEB59E1CADBb0fdDa50a\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            value: \"0x0\",\n            gas: \"0xe117\",\n            gasPrice: \"0xb2d05e00\",\n            data: \"0x095ea7b300000000000000000000000031c2f6fcff4f8759b3bd5bf0e1084a055615c768ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x5CA42204cDaa70d5c773946e69dE942b85CA6706\",\n          },\n        };\n      }else if (this.selectedChain === 'eip155:122'){\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000000000000013b3\",\n            to: \"0x620fd5fa44BE6af63715Ef4E65DDFA0387aD13F5\",\n          },\n        };\n      }\n\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n        this.selectedChain\n      );\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_mint() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x4cacb\",\n            data: \"0xa64dfa75000000000000000000000000ed688002f3797599db8b4feacfe8b1dda0df1c8d000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cecb15396825a895ff8da8fc2d2c77a234dccee00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f6261667962656968643737366b6177706e71336f6f6a6635693274787a76617737737164656b34616a776472637472703261366f626b70723773792f7b69647dan            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x30795\",\n            data: \"0xa64dfa75000000000000000000000000341b3687f0309778f08f29336b2c4b9c38b9f110000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f62616679626569686a6279676b68747a71376b68377434336266686e676e793236337668766f6578716a6d6e377161716166366e717a64743777712f7b69647dan            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      }\n\n      let str = JSON.stringify(data);\n      console.log(\"-----长度--->\", str.length);\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n          this.selectedChain\n      );\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async wallet_testRpc() {\n      let provider = window.provider;\n      provider.setDefaultChain(\n        `eip155:56`,\n        `https://eth-mainnet.g.alchemy.com/v2/NxUfYJUr-TQtEpLmSXhhD5pXn70GwsyV`\n      );\n      var data = {\n        method: \"eth_getBalance\",\n        params: [\"0x8D97689C9818892B700e27F316cc3E41e17fBeb9\", \"latest\"],\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async wallet_watchAsset() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xe0f63a424a4439cbe457d80e4f4b51ad25b2c56c\",\n              symbol: \"SPX6900\",\n              image:\n                \"https://assets.coingecko.com/coins/images/31401/standard/sticker_%281%29.jpg?1702371083\",\n              decimals: 8,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xeB51D9A39AD5EEF215dC0Bf39a8821ff804A0F01\",\n              symbol: \"LGNS\",\n              image: \"https://polygonscan.com/token/images/originlgns_32.png\",\n              decimals: 9,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0x031b41e504677879370e9dbcf937283a8691fa7f\",\n              symbol: \"FET\",\n              image: \"https://bscscan.com/token/images/fetch_32.png\",\n              decimals: 18,\n            },\n          },\n        };\n      }\n\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async ton_sendTransaction() {\n      var data  = {\n        \"messages\":[{\"address\":\"EQARULUYsmJq1RiZ-YiH-IJLcAZUVkVff-KBPwEmmaQGH6aC\",\"amount\":\"205000000\",\"payload\":\"te6cckEBAgEAhwABbQ+KfqUAAADNgG7tIEATEtAIAO87mQKicbKgHIk4pSPP4k5xhHqutqYgAB7USnesDnCcECwbgQMBAJUlk4VhgBD3JEg1TUr75iTijBghOKm/sxNDXUBl7CD6WMut0Q85x4RafwA/Es89DBXoTxuqxVFxyBbzt9Rav2HBUKl7hmkvLuKHLBCW57aK\"}],\n        \"validUntil\":1792481054,\n        \"network\":'-239'}\n      this.testTransaction = JSON.stringify(data)\n    },\n    ton_getAccount() {\n      this.testTransaction = \"这里是同步获取 不再需要点击 <<发送交易>>\"\n      let result =   window.tonProvider.account()\n      if (result) {\n        this.testboc = JSON.stringify(result);\n      } else {\n        this.testboc = 'null'\n      }\n    },\n\n    async tonUniversalLog() {\n      console.log(\"ton 信息: tonProvider  connected:\",window.tonProvider.connected())\n      console.log(\"ton 信息: tonProvider  account:\",JSON.stringify(window.tonProvider.account()))\n      console.log(\"ton 信息: tonProvider  wallet:\",JSON.stringify(window.tonProvider.wallet()))\n    },\n\n    async sendTransactionAlert() {\n      //\n      const response = await fetch(`https://apitest.fireverse.ai/oauth/okx/getNonce?publicAddress=0x0cecb15396825a895ff8da8fc2d2c77a234dccee`);\n      const data = await response.json();\n      console.log(\"请求数据----\",JSON.stringify(data))\n      await this.personal_sign()\n      if (confirm(\"Are you want to sign message?\")) {\n        this.sendTransaction();\n      }\n\n      // window.open(\"https://www.okx.com/download?deeplink=okx%3A%2F%2Fweb3%2Fwallet%2Fconnect\",'_self')\n    },\n\n    async sendTransaction() {\n      if (this.selectedChain.startsWith(\"aptos\")\n          || this.selectedChain.startsWith(\"movement\")\n          || this.selectedChain.startsWith(\"solana\")\n          || this.selectedChain.startsWith(\"sonic\")\n          || this.selectedChain.startsWith(\"cosmos\")) {\n        return\n      }\n      console.log(\"sendTransaction\", window.provider);\n      console.log(\"sendTransaction内容11------\", this.testTransaction);\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      if (this.testTransaction && window.provider) {\n        // eslint-disable-next-line no-undef\n        const sendData = JSON.parse(this.testTransaction);\n        try {\n          console.log(\"sendTransaction-----22method>>\", sendData.method);\n\n          let chainId = \"eip155:1\";\n          if (this.selectedChain) {\n            chainId = this.selectedChain;\n            console.log(\n              \"sendTransaction-----this.selectedChain>>\",\n              this.selectedChain\n            );\n          }\n          console.log(\"windowOpen[click_1]: \", Date.now());\n          if (chainId == \"sui:mainnet\") {\n            const adapter = new SuiAdapter(window.provider);\n            var suiResult = \"invalid result\";\n            if (this.currentSuiMethod == 'sui_getAccount') {\n              let result = adapter.getAccount()\n              if (typeof result == \"string\") {\n                this.testboc = result\n              } else {\n                this.testboc = JSON.stringify(result)\n              }\n            }\n            if (this.currentSuiMethod == \"sui_signTransaction\") {\n              suiResult = await adapter.signTransaction(\n                this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signAndExecuteTransaction\") {\n              suiResult = await adapter.signAndExecuteTransaction(\n                this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signMessage\") {\n              console.log(\"signMessage----\", this.currentSuiTransaction);\n              suiResult = await adapter.signMessage(this.currentSuiTransaction);\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_signPersonalMessage\") {\n              console.log(\n                \"signPersonalMessage----\",\n                this.currentSuiTransaction\n              );\n              suiResult = await adapter.signPersonalMessage(\n                this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_testRpc\") {\n              console.log(\"test rpc----\", this.currentSuiTransaction);\n              console.log(\n                `请求数据发送 rpc ----->> ${JSON.stringify(sendData)}`\n              );\n              const res = await window.provider.request(sendData, chainId);\n              console.log(`请求数据回调 rpc ----->> ${JSON.stringify(result)}`);\n              if (typeof res == \"string\") {\n                this.testboc = res;\n              } else {\n                this.testboc = JSON.stringify(res);\n              }\n            }\n            console.log(\"windowOpen[click_2]: \", Date.now());\n            return;\n          }else if(chainId === \"ton:-239\"){\n            console.log(\n                `请求数据发送 sendTransaction ---ton-->> ${JSON.stringify(sendData)}`\n            );\n            let result =  await window.tonProvider.sendTransaction(sendData)\n            console.log(\n                `请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`\n            );\n            if (typeof result == \"string\") {\n              this.testboc = result;\n            } else {\n              this.testboc = JSON.stringify(result);\n            }\n            return\n          }\n\n          if (chainId == 'btc:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var btcResult = 'invalid result'\n\n            if (this.currentBtcMethod == 'btc_signMessage') {\n              btcResult = await btcAdapter.signMessage(chainId, this.currentBtcTransaction[\"signStr\"])\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_send') {\n              btcResult = await btcAdapter.send(chainId, this.currentBtcTransaction)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signPsbt') {\n              btcResult = await btcAdapter.signPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n\n              this.hexToBase64(btcResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentBtcMethod == 'btc_signPsbts') {\n              btcResult = await btcAdapter.signPsbts(chainId, this.currentBtcTransaction.psbtHexs, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_sendInscription') {\n              btcResult = await btcAdapter.sendInscription(chainId, this.currentBtcTransaction.address, this.currentBtcTransaction.inscriptionId, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signAndPushPsbt') {\n              btcResult = await btcAdapter.signAndPushPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            }else if (this.currentBtcMethod == 'btc_sendBitcoin') {\n              btcResult = await btcAdapter.sendBitcoin(chainId, this.currentBtcTransaction.toAddress, this.currentBtcTransaction.satoshis, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            }else if (this.currentBtcMethod == 'btc_getAccount'){\n              btcResult = btcAdapter.getAccount(chainId)\n              this.testboc = JSON.stringify(btcResult)\n            }\n\n            return\n          }\n\n          if (chainId == 'fractal:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var fractalResult = 'invalid result'\n\n            if (this.currentFractalMethod == 'fractal_signMessage') {\n              fractalResult = await btcAdapter.signMessage(chainId, this.currentFractalTransaction['signStr'])\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_send') {\n              fractalResult = await btcAdapter.send(chainId, this.currentFractalTransaction)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signPsbt') {\n              fractalResult = await btcAdapter.signPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.hexToBase64(fractalResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentFractalMethod == 'fractal_signPsbts') {\n              fractalResult = await btcAdapter.signPsbts(chainId, this.currentFractalTransaction.psbtHexs, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_sendInscription') {\n              fractalResult = await btcAdapter.sendInscription(chainId, this.currentFractalTransaction.address, this.currentFractalTransaction.inscriptionId, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signAndPushPsbt') {\n              fractalResult = await btcAdapter.signAndPushPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            }else if (this.currentFractalMethod == 'fractal_sendBitcoin') {\n              fractalResult = await btcAdapter.sendBitcoin(chainId, this.currentFractalTransaction.toAddress, this.currentFractalTransaction.satoshis, this.currentFractalTransaction.options)\n\n              this.testboc = JSON.stringify(fractalResult)\n            }else if (this.currentFractalMethod == 'fractal_getAccount'){\n              fractalResult = btcAdapter.getAccount(chainId)\n              this.testboc = JSON.stringify(fractalResult)\n            }\n\n            return\n          }\n\n          console.log(`请求数据发送 sendTransaction ----->> ${JSON.stringify(sendData)}`)\n          var result = await window.provider.request(sendData, chainId)\n          console.log(`请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`)\n\n          console.log(\"windowOpen[click_3]: \", Date.now());\n          if (typeof result == \"string\") {\n            this.testboc = result;\n          } else {\n            this.testboc = JSON.stringify(result);\n          }\n          console.log(\"方法数据回调 --this.testboc--\", this.testboc);\n        } catch (error) {\n          console.error(\"方法数据回调失败 --Error--\", error.message);\n\n          if (error.code === OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n            this.testboc = error.message;\n          } else {\n            this.testboc = \"wrong signature！\" + error.message;\n          }\n        }\n      } else {\n        alert(\"Please input transaction data\");\n      }\n    },\n\n    hexToBase64(hexStr) {\n      var bytes = [];\n      for (var i = 0; i < hexStr.length; i += 2) {\n        bytes.push(parseInt(hexStr.substr(i, 2), 16));\n      }\n      const buffer = new Uint8Array(bytes)\n      const blob = new Blob([buffer]);\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = function (e) {\n          var base64Data = e.target.result.split(\",\")[1]\n          resolve(base64Data);\n        };\n        reader.onerror = function (e) {\n          reject(e);\n        };\n        reader.readAsDataURL(blob);\n      });\n    },\n    testBase64UrlSafe(){\n      let datatest = {\"protocolVer\":1,\"topic\":\"8a7a4c3be73802d0ae2587123ade7bb79f27433b9aa3ca589a2208a2089eecfd\",\"clientId\":\"5f1bbf9eac92160affa7ef04d0a710817ddb6d8c22ebbd6263e86f059930b404\",\"requestId\":\"1731383250054\",\"dAppInfo\":{\"url\":\"connect.oker.vip\",\"origin\":\"https://connect.oker.vip\",\"name\":\"univer test dapp\",\"icon\":\"https://avatars.githubusercontent.com/u/37784886\"},\"requests\":[{\"name\":\"requestAccounts\",\"requiredNamespaces\":[{\"namespace\":\"aptos\",\"chains\":[\"aptos:637\"]}],\"optionalNamespaces\":[],\"connectRequestMethods\":[{\"chainId\":\"aptos:637\",\"method\":\"aptos_signMessage\",\"params\":{\"data\":{\"address\":true,\"application\":true,\"chainId\":true,\"message\":\"123 中文测试!\",\"nonce\":\"1234\"},\"applicationUrl\":\"https://connect.oker.vip\",\"prefix\":\"APTOS\",\"aptosChainId\":\"1\"}}]}],\"redirect\":\"none\"}\n      let json = JSON.stringify(datatest)\n      const utf8Array = new TextEncoder().encode(json);\n      let binary = '';\n      utf8Array.forEach(byte => {\n        binary += String.fromCharCode(byte);\n      });\n\n      let firstStr =  btoa(binary)\n      console.log(\"字符串编码1>>>>\",firstStr)\n      firstStr = firstStr.replace(/\\+/g, '-')  // 替换 '+'\n      console.log(\"字符串编码2>>>>\",firstStr)\n      firstStr = firstStr.replace(/\\//g, '_')  // 替换 '/'\n      console.log(\"字符串编码3>>>>\",firstStr)\n      firstStr = firstStr.replace(/=+$/, '');  // 移除 '=';\n      console.log(\"字符串编码4>>>>\",firstStr)\n\n      let showUrl =  getUniversalLink(getAppWalletDeepLink(firstStr))\n      console.log(\"字符串编码5>>>>\",showUrl)\n      this.qrValue = showUrl;\n      this.showModal = true;\n    },\n\n\n    async testTonSdk() {\n      // 1. connect\n      //  create sub providers for each namespace/chain\n      let nameSpacesChains = [];\n      let optSpaceChains = [];\n\n      let solanaChains = [\n        \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n        \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n        \"svm:70000062\",\n      ];\n      let hasEip155, hasSolana, hasSui, hasBtc, hasAptos, hasTon, hasCosmos, hasTron = false\n\n      let suiChains = [\n        \"sui:mainnet\",\n      ];\n\n      let btcChains = [\n        \"btc:mainnet\",\n        \"fractal:mainnet\"\n      ];\n\n      const chains = Object.entries(this.availableChains)\n          .filter((chain) => chain[1].checked)\n          .map((chain) => chain[0]);\n      console.log(`chains  ===> ${chains.values()}`)\n      chains.forEach(function (chainId) {\n        console.log(`chains.forEach chainId  ===> ${chainId}`)\n\n        if (solanaChains.includes(chainId)) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"ton\")) {\n          nameSpacesChains.push(chainId)\n          hasTon = true\n          return\n        }\n        if (typeof chainId == 'string' && (chainId.startsWith(\"aptos\") || chainId.startsWith(\"movement\"))) {\n          nameSpacesChains.push(chainId)\n          hasAptos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId)\n          hasSolana = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"cosmos\")) {\n          nameSpacesChains.push(chainId)\n          hasCosmos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"tron\")) {\n          nameSpacesChains.push(chainId)\n          hasTron = true\n          return\n        }\n\n        if (suiChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`);\n          nameSpacesChains.push(chainId);\n          hasSui = true;\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`)\n          nameSpacesChains.push(chainId)\n          hasBtc = true\n          return\n        }\n\n        hasEip155 = true\n        nameSpacesChains.push(`eip155:${chainId}`)\n      })\n\n\n      optionChains.forEach(function (chainId) {\n        if (solanaChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n        if (typeof chainId == \"string\" && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (suiChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          optSpaceChains.push(chainId)\n          return\n        }\n\n        optSpaceChains.push(`eip155:${chainId}`)\n      })\n\n      console.log(`namespaceChains  ===> ${JSON.stringify(nameSpacesChains)}`);\n      var connectData = {};\n      if (nameSpacesChains && nameSpacesChains.length > 0) {\n        var requireData = {};\n\n        if (hasEip155) {\n          requireData.eip155 = {\n            chains: nameSpacesChains.filter((item) =>\n              item.startsWith(\"eip155\")\n            ),\n            defaultChain: nameSpacesChains.filter((item) =>\n              item.startsWith(\"eip155\")\n            )[0],\n          };\n        }\n        if (hasSolana) {\n          requireData.solana = {\n            chains: nameSpacesChains.filter(\n              (item) =>\n                item.startsWith(\"solana\") ||\n                item.startsWith(\"sonic\") ||\n                item.startsWith(\"svm\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n              (item) =>\n                item.startsWith(\"solana\") ||\n                item.startsWith(\"sonic\") ||\n                item.startsWith(\"svm\")\n            )[0],\n          };\n        }\n\n        if (hasCosmos) {\n          requireData.cosmos = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            )[0],\n          }\n        }\n        if (hasTron) {\n          requireData.tron = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            )[0],\n          }\n        }\n        if (hasTon) {\n\n          //\n          let tonParams = {\n            ton_addr:{\n              name: 'ton_addr',\n            }\n          };\n          if (this.tonProofValue){\n            tonParams = {\n              ton_addr:{\n                name: 'ton_addr',\n              },\n              ton_proof:{\n                name: 'ton_proof',\n                payload: this.tonProofValue,\n              }\n            };\n          }\n\n\n          requireData.ton = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"ton\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"ton\"))[0],\n            params:tonParams\n          };\n        }\n\n        if (hasSui) {\n          requireData.sui = {\n            chains: nameSpacesChains.filter((item) => item.startsWith(\"sui\")),\n            defaultChain: nameSpacesChains.filter((item) =>\n              item.startsWith(\"sui\")\n            )[0],\n            rpcMap: {\n              \"sui:mainnet\": \"https://www.okx.com/fullnode/sui/discover/rpc\"\n            }\n          };\n        }\n        if (hasAptos) {\n          requireData.aptos = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\"))[0]\n          }\n        }\n\n        if (hasBtc) {\n          let btcChains = nameSpacesChains.filter(item => item.startsWith(\"btc\") || item.startsWith(\"fractal\"))\n          requireData.btc = {\n            chains: btcChains,\n            defaultChain: btcChains[0]\n          }\n        }\n        console.log(`requireData  ===> ${JSON.stringify(requireData)}`)\n        connectData['namespaces'] = requireData;\n        console.log(JSON.stringify(connectData))\n      }\n\n      if (optSpaceChains && optSpaceChains.length > 0) {\n        const optData = {};\n\n        const eip155Chains = optSpaceChains.filter((item) => item.startsWith(\"eip155\"));\n        if (eip155Chains.length > 0) {\n          optData[\"eip155\"] = {\n            chains: eip155Chains,\n            defaultChain: eip155Chains[0],\n          };\n        }\n\n        const solanaChains = optSpaceChains.filter((item) => item.startsWith(\"solana\"));\n        if (solanaChains.length > 0) {\n          optData[\"solana\"] = {\n            chains: solanaChains,\n            defaultChain: solanaChains[0],\n          };\n        }\n\n        connectData[\"optionalNamespaces\"] = optData;\n      }\n\n      if (nameSpacesChains.length === 0 && optSpaceChains.length === 0) {\n        //未选择链\n        alert(\"Please select a chain from above to continue\");\n        return;\n      }\n      console.log(\"=====>connectData \");\n      console.log(connectData);\n\n      var connectMethod;\n      let signMethods = this.getCurrentSelectedMethodData();\n      if (window.provider instanceof OKXUniversalConnectUI) {\n        if (signMethods && signMethods.length>0){\n          connectMethod = window.provider.openModalAndSign(connectData,JSON.parse(JSON.stringify(signMethods)));\n        }else {\n          connectMethod = window.provider.openModal(connectData);\n        }\n      } else {\n        if (this.universalToTG){\n          connectData.sessionConfig = {\n            useMini:true,\n            openUniversalUrl:true,\n            tmaReturnUrl:'back'\n          }\n        }else{\n          connectData.sessionConfig = {\n            redirect: selectedReturnStrategy\n          }\n        }\n        if (signMethods && signMethods.length>0){\n          connectMethod = window.provider.connectAndSign(connectData,JSON.parse(JSON.stringify(signMethods)));\n        }else {\n          connectMethod = window.provider.connect(connectData);\n        }\n      }\n\n      await connectMethod\n        .then((result) => {\n          // 2. set defaul chain\n          this.walletAddress = \"connected\";\n          if (this.isPC()) {\n            this.showModal = false;\n          }\n          if (result){\n            this.testboc = JSON.stringify(result)\n          }\n\n          if (window.provider.session && window.provider.session.namespaces){\n            let ton = window.provider.session.namespaces[\"ton\"];\n          console.log(\"是否包含ton\",ton)\n            if (ton){\n              this.tonUniversalLog()\n            }\n          }\n\n\n\n        })\n        .catch((error) => {\n          if (error.message){\n            alert(error.message)\n          }\n\n          console.error(\"发生了错误：\", error);\n        });\n    },\n\n    getCurrentSelectedMethodData(){// 连接签名\n      var methodList = [];\n      this.selectedMethod.forEach(method =>{\n        switch (method) {\n          case \"wallet_addEthereumChain(ETH)\":\n            methodList.push({\n              method: \"wallet_addEthereumChain\",\n              chainId:\"eip155:1\",\n              params: {\n                blockExplorerUrls: [\"https://explorer.fuse.io\"],\n                chainId: \"0x7a\",\n                chainName: \"Fuse\",\n                nativeCurrency: { name: \"Fuse\", symbol: \"FUSE\", decimals: 18 },\n                rpcUrls: [\"https://rpc.fuse.io\"],\n              },\n            })\n            break;\n          case \"personal_sign(ETH)\":\n            methodList.push(\n              {\n                method: \"personal_sign\",\n                chainId: \"eip155:1\",\n                params: [\n                  \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n                ],\n              });\n            break;\n          case \"solana_signMessage(Sol mainnet)\":\n            methodList.push(\n              {\n                \"chainId\": \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n                \"method\": \"solana_signMessage\",\n                \"params\": {\n                  \"message\": \"Hello Solana\",\n                }\n              }\n            );\n            break;\n          case \"sui_signMessage(Sui mainnet)\":\n          case \"sui_signPersonalMessage(Sui mainnet)\": {\n            let suiData = [\n              76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n              109, 111, 118, 101,\n            ];\n            let uint8Array = new Uint8Array(suiData);\n            let currentMethod = \"sui_signMessage\";\n            this.currentSuiTransaction = {\n              message:uint8Array\n            }\n\n            if(method.startsWith(\"sui_signPersonalMessage\")){\n              currentMethod = \"sui_signPersonalMessage\";\n            }\n            methodList.push(\n                {\n                  method: currentMethod,\n                  chainId: \"sui:mainnet\",\n                  params: {\n                    message: uint8Array,\n                  }\n                }\n            );\n            break;\n          }\n          case \"btc_signMessage(BTC)\":\n            methodList.push(\n              {\n                method: \"btc_signMessage\",\n                chainId: \"btc:mainnet\",\n                params: {\n                  message: \"Welcome to BTC\"\n                }\n              }\n            )\n            break;\n          case \"aptos_signMessage(aptos mainnet)\":\n            methodList.push(\n              {\n                \"chainId\": \"aptos:mainnet\",\n                \"method\": \"aptos_signMessage\",\n                \"params\": {\n                  address: true,\n                  application: true,\n                  chainId: true,\n                  message: \"Hello Aptos\",\n                  nonce: \"1234\"\n                }\n              }\n            )\n            break;\n          case \"cosmos_signArbitrary(cosmoshub)\":\n            methodList.push(\n                {\n                  \"chainId\": \"cosmos:cosmoshub-4\",\n                  \"method\": \"cosmos_signArbitrary\",\n                  \"params\": {\n                    message: \"test cosmos\"\n                  }\n                }\n            )\n\n            break;\n          case \"test_noSupport_eth(ETH)\":\n            methodList.push(\n                {\n                  chainId: \"eip155:1\",\n                  method: \"test_noSupport_eth\",\n                  params: {\n                    message: \"test hello\",\n                  }\n                }\n            )\n            break;\n          case \"sync_all_addresses\":\n            methodList.push(\n                {\n                  method: \"sync_all_addresses\",\n                });\n            break;\n          case \"tron_signMessage\":\n            methodList.push(\n                {\n                  chainId:\"tron:mainnet\",\n                  method: \"tron_signMessage\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n          case \"tron_signMessageV2\":\n            methodList.push(\n                {\n                  chainId:\"tron:mainnet\",\n                  method: \"tron_signMessageV2\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n            //\n          default:\n\n            break;\n        }\n      })\n      this.selectedMethodData = methodList\n      return methodList\n\n    },\n\n\n    closeModal() {\n      this.showModal = false;\n    },\n\n    isPC() {\n      const userAgentInfo = navigator.userAgent;\n      console.log(\"current device ua is ===>\", userAgentInfo);\n\n      const Agents = [\n        \"Android\",\n        \"iPhone\",\n        \"SymbianOS\",\n        \"Windows Phone\",\n        \"iPad\",\n        \"iPod\",\n      ];\n      let flag = true;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = false;\n          break;\n        }\n      }\n      return flag;\n    },\n    isSafariOrChrome() {\n      const userAgentInfo = navigator.userAgent;\n      const Agents = [\"Safari\", \"Chrome\"];\n      let flag = false;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = true;\n          break;\n        }\n      }\n      return flag;\n    },\n\n    /// solana\n    async sol_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      let data = {\n        method: \"solana_signMessage\",\n        params: {\n          message: \"Hello Solana\",\n          pubkey: \"\",\n        },\n      };\n      this.testTransaction = JSON.stringify(data);\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let message = await provider.signMessage(\n          \"Hello Solana\",\n          this.selectedChain\n      );\n      console.log(\"solana_signMessage Result:\",JSON.stringify(message))\n      const result1 = nacl.sign.detached.verify(\n          new TextEncoder().encode(\"Hello Solana\"),\n          message.signature,\n          new PublicKey(message.publicKey).toBytes()\n      );\n      console.log(result1)\n\n      if (typeof message == \"string\") {\n        this.testboc = result1;\n      } else {\n        this.testboc = result1;\n      }\n    },\n\n    async aptos_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      let data = {\n        address: true,\n        application: true,\n        chainId: true,\n        message: \"Hello Aptos\",\n        nonce: \"1234\"\n      }\n\n      let provider = new OKXAptosProvider(window.provider)\n      let message = await provider.signMessage(data, this.selectedChain)\n      this.testTransaction = JSON.stringify(data)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n          functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async move_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async move_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n          functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n        },\n      });\n\n      // let data = {\n      //   \"arguments\": [\"100000\",[\"0\",\"0\",\"10533\"],[\"10\",\"5\",\"5\"],[\"false\",\"false\",\"true\"]],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x3\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\",\"0x73eb84966be67e4697fc5ae75173ca6c35089e802650f75422ab49a8729704ec::coin::DooDoo\",\"0x53a30a6e5936c0a4c5140daed34de39d17ca7fcae08f947c02e979cef98a3719::coin::LSD\",\"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::CurveV1\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x54cb0bb2c18564b86e34539b9f89cfe1186e39d89fce54e1cd007b8e61673a85::bin_steps::X80\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async sol_signVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(\n        provider.getAccount(\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\").address\n      );\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n         recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signTransaction(\n        transaction,\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAndSendVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n        transaction,\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllVersionedTransactions() {\n      let provider = new OKXSolanaProvider(window.provider);\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n        [transaction],\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signTransaction() {\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n         recentBlockhash: blockhash,\n      }).add(\n        SystemProgram.transfer({\n          fromPubkey: new PublicKey(provider.getAccount().address),\n          toPubkey: new PublicKey(provider.getAccount().address),\n          lamports: 1000,\n        })\n      );\n\n      this.testTransaction = safeJsonStringify(transaction)\n      let result = await provider.signTransaction(\n        transaction,\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllTransactions() {\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n        SystemProgram.transfer({\n          fromPubkey: new PublicKey(provider.getAccount().address),\n          toPubkey: new PublicKey(provider.getAccount().address),\n          lamports: \"100\",\n        })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n        [transaction],\n        this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    getSolConnect() {\n      let rpc = \"https://www.okx.com/fullnode/sol/discover/rpc\"\n      if (this.selectedChain === \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\") {\n        rpc = \"https://www.okx.com//fullnode/sol/discover/rpc\"\n      } else if (this.selectedChain === \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\"){\n        rpc = \"https://www.okx.com/fullnode/soltestnet/discover/rpc\"\n      } else if (this.selectedChain === \"svm:70000062\") {\n        rpc = \"https://www.okx.com/fullnode/sonic/testnet/discover/rpc\"\n      }\n      return rpc\n    },\n\n    async sol_signAndSendTransaction() {\n\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n        SystemProgram.transfer({\n          fromPubkey: new PublicKey(provider.getAccount().address),\n          toPubkey: new PublicKey(provider.getAccount().address),\n          lamports: \"100\",\n        })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n        transaction,\n        this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async cosmos_signArbitrary() {\n      let provider = new OKXCosmosProvider(window.provider)\n      let message = await provider.signArbitrary(this.selectedChain, provider.getAccount(this.selectedChain).address, \"test cosmos\")\n      if (typeof message == \"string\") {\n        this.testboc = message;\n      } else {\n        let isValid =  await this.cosmos_verifySignArbitrary(provider.getAccount(this.selectedChain).address,\"test cosmos\",message.signature, message.pub_key.value)\n        console.log(\"verify\",isValid)\n        this.testboc = \"verify:\" + isValid + JSON.stringify(message);\n      }\n    },\n\n    async cosmos_verifySignArbitrary(signer, data, signature, pubkey) {\n      try {\n        console.log(\"cosmos_verifySignArbitrary signer:\",signer)\n        console.log(\"cosmos_verifySignArbitrary data:\",JSON.stringify(data))\n        console.log(\"cosmos_verifySignArbitrary signature:\",signature)\n        console.log(\"cosmos_verifySignArbitrary pubkey:\",pubkey)\n\n        // 将bech32地址转换为公钥\n        const {prefix: prefixStr} = fromBech32(signer)\n\n        const signatureBuffer = Buffer.from(signature, 'base64');\n\n        const uint8Signature = new Uint8Array(signatureBuffer); // Convert the buffer to an Uint8Array\n\n        const pubKeyValueBuffer = Buffer.from(pubkey, 'base64'); // Decode the base64 encoded value\n\n        const pubKeyUint8Array = new Uint8Array(pubKeyValueBuffer); // Convert the buffer to an Uint8Array\n\n        // 验证签名\n        return await verifyADR36Amino(\n            prefixStr,\n            signer,\n            data,\n            pubKeyUint8Array,\n            uint8Signature\n        )\n      } catch (err) {\n        console.error('Verification failed:', err)\n        return false\n      }\n    },\n\n    async cosmos_signAmino(){\n      let provider = new OKXCosmosProvider(window.provider)\n      // const rpcUrl = 'https://osmosis-rpc.publicnode.com:443';\n      // const client = await StargateClient.connect(rpcUrl);\n      // const height = await client.getHeight();\n      // let address = provider.getAccount(this.selectedChain).address\n      // const sequence = await client.getSequence(address)\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      // let signDoc = makeSignDoc(\n      //     transaction.msgs,\n      //     transaction.fee,\n      //     this.selectedChain.split(\":\")[1],\n      //     transaction.memo,\n      //     transaction.accountNumber,\n      //     transaction.sequence,\n      // )\n      let signDoc = {\n        \"chain_id\": \"osmosis-1\",\n        \"account_number\": \"630104\",\n        \"sequence\": \"480\",\n        \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]},\n        \"msgs\": [{\n          \"type\": \"osmosis/poolmanager/swap-exact-amount-in\",\n          \"value\": {\n            \"sender\": \"osmo1u6lts9ng4etxj0zdaxsada6zgl8dudpgelmuyu\",\n            \"routes\": [{\n              \"pool_id\": \"1096\",\n              \"token_out_denom\": \"ibc/987C17B11ABC2B20019178ACE62929FE9840202CE79498E29FE8E5CB02B7C0A4\"\n            }, {\n              \"pool_id\": \"611\",\n              \"token_out_denom\": \"ibc/27394FB092D2ECCD56123C74F36E4C1F926001CEADA9CA97EA622B25F41E5EB2\"\n            }],\n            \"token_in\": {\"denom\": \"uosmo\", \"amount\": \"100\"},\n            \"token_out_min_amount\": \"8\"\n          }\n        }],\n        \"memo\": \"FE\",\n        \"timeout_height\": \"23603788\",\n        \"signOptions\": {\n          \"useOneClickTrading\": false,\n          \"preferNoSetFee\": true,\n          \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]}\n        }\n      }\n\n\n\n\n\n\n\n      // let signOption = {\n      //   memo: true, // optional\n      //   fee: true, // optional\n      //   gasRate: {\n      //     // optional\n      //     average: \"0.2\",\n      //     low: \"0.02\",\n      //     tiny: \"0.002\",\n      //   },\n      // }\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signAmino(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, signDoc)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    messageToBuffer(message) {\n      var buffer = Buffer.from([]);\n      try {\n        if (typeof message === \"string\") {\n          buffer = Buffer.from(message.replace(\"0x\", \"\"), \"hex\");\n        } else {\n          buffer = Buffer.from(message);\n        }\n      } catch (err) {\n        console.log(`messageToBuffer error: ${err}`);\n      }\n      return buffer;\n    },\n\n\n\n    async cosmos_signDirect() {\n      let provider = new OKXCosmosProvider(window.provider)\n\n      let signDoc = {\n        \"bodyBytes\": this.messageToBuffer(\"0x0ac1010a292f6962632e6170706c69636174696f6e732e7472616e736665722e76312e4d73675472616e736665721293010a087472616e7366657212096368616e6e656c2d301a0d0a05756f736d6f120431303030222b6f736d6f3175366c7473396e67346574786a307a64617873616461367a676c386475647067656c6d7579752a2d636f736d6f733175366c7473396e67346574786a307a64617873616461367a676c386475647067337967766a773207080410ebe3f90a3880b0bcafd18cec8218\"),\n        \"authInfoBytes\": this.messageToBuffer(\"0x0a510a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a2102446e19e94ac0e83ea896d2712507577eb39fbdd2d6ae9f0fc0b9759f1fbaba9012040a02080118e00312140a0e0a05756f736d6f1205323530303010859a11\"),\n        \"chainId\": \"osmosis-1\",\n        \"accountNumber\": \"630104\",\n      }\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signDirect(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, transaction)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    sui_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentSuiTransaction = params\n      this.currentSuiMethod = flag\n    },\n\n    btc_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentBtcTransaction = params\n      this.currentBtcMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n\n    fractal_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentFractalTransaction = params\n      this.currentFractalMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n    tron_getTransactionResult(result) {\n      if (typeof result == \"string\") {\n        this.testboc = result\n      } else {\n        this.testboc = JSON.stringify(result)\n      }\n    },\n    tron_generateTransactionParams(params){\n      if (typeof params == \"string\") {\n        this.testTransaction = params\n      } else {\n        this.testTransaction = JSON.stringify(params)\n      }\n    },\n    handleModalsSelect(modals) {\n      selectedModals = modals;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: modals.length === 3 ? \"all\" : modals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n\n    handleReturnStrategySelect(returnStrategy) {\n      selectedReturnStrategy = returnStrategy === \"deeplink\" ? this.deeplink : returnStrategy;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      } else {\n        if (window.provider.sessionConfig) {\n          window.provider.sessionConfig.redirect = selectedReturnStrategy;\n        } else {\n          window.provider.sessionConfig = {\n            redirect: selectedReturnStrategy\n          };\n        }\n      }\n    },\n\n    handleReturnStrategyDeeplink(deeplink) {\n      console.log('handleReturnStrategyDeeplink', deeplink)\n      selectedReturnStrategy = deeplink;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: deeplink,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      } else {\n        if (window.provider.sessionConfig) {\n          window.provider.sessionConfig.redirect = deeplink;\n        } else {\n          window.provider.sessionConfig = {\n            redirect: deeplink\n          };\n        }\n      }\n    },\n\n    handleLanguageSelect(language) {\n      selectedLanguage = language;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: language,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n    handleConnectMethodsSelect() {\n      console.log(\"当前的方法 this.selectedMethod>>>>\",this.selectedMethod);\n    },\n\n    eth_verifyMessage(message, signature,ethAddress) {\n      console.log(\"eth_verifyMessage   message>>>\",message)\n      console.log(\"eth_verifyMessage   signature>>>\",signature)\n      console.log(\"eth_verifyMessage   ethAddress>>>\",ethAddress)\n      if (!message || !signature){\n        return \"\"\n      }\n      let originalMessage = message\n      if (message.startsWith(\"0x\")){\n        originalMessage = originalMessage.replace(/^0x/, '');\n        let str = '';\n        for (let i = 0; i < originalMessage.length; i += 2) {\n          const byte = originalMessage.slice(i, i + 2);\n          str += String.fromCharCode(parseInt(byte, 16));\n        }\n        originalMessage = str\n      }\n      console.log(\"eth_verifyMessage   originalMessage>>>\",originalMessage)\n\n      // const messageHash = ethers.utils.hashMessage(originalMessage);\n      const recoveredAddress = ethers.utils.verifyMessage(originalMessage, signature);\n      console.log(\"eth_verifyMessage recoveredAddress:\", recoveredAddress);\n      return recoveredAddress.toLowerCase() === ethAddress.toLowerCase();\n    },\n\n    async verifyMessage(list){ //连接验签\n\n        if (window.provider && window.provider.session && list && list.length>0){\n          let verifyList = {}\n          for (let methodItem of list){\n            if (\"result\" in methodItem && \"method\" in methodItem){\n              let requestItme = this.selectedMethodData.filter(item => item.method === methodItem.method)[0];\n              console.log(\"验证签名 请求>>>:\", JSON.stringify(requestItme));\n              console.log(\"验证签名 结果>>>:\", JSON.stringify(methodItem));\n              if (methodItem.method === \"personal_sign\"){\n                let ethAddress = await window.provider.request({ method: \"eth_requestAccounts\" },methodItem.chainId)\n                ethAddress = ethAddress[0];\n                console.log(\"验证eth 钱包地址>>>:\", ethAddress);\n                let ethMessage = requestItme.params[0]\n                console.log(\"验证eth 签名消息体>>:\", JSON.stringify(ethMessage));\n                verifyList[methodItem.method] = this.eth_verifyMessage(ethMessage,methodItem.result,ethAddress)\n              }else if(methodItem.method === \"solana_signMessage\"){\n                let solanaMessage = methodItem.result\n                if (\"signature\" in solanaMessage && \"publicKey\" in solanaMessage){\n                  const verifySol = nacl.sign.detached.verify(\n                      new TextEncoder().encode(\"Hello Solana\"),\n                      solanaMessage.signature,\n                      new PublicKey(solanaMessage.publicKey).toBytes()\n                  );\n                  verifyList[methodItem.method] = verifySol\n                }else {\n                  verifyList[methodItem.method] = false\n                }\n              }else if(methodItem.method === \"sui_signPersonalMessage\" || methodItem.method === \"sui_signMessage\"){\n                let suiResult =  this.sui_verifySignature(methodItem.result);\n                  verifyList[methodItem.method] = (await suiResult).result\n              }else if(methodItem.method === \"btc_signMessage\"){\n\n                verifyList[methodItem.method] = \"Not verified yet\"\n\n              }else if(methodItem.method === \"aptos_signMessage\"){\n                let aptosMessage = methodItem.result\n                let aptosProvider = new OKXAptosProvider(window.provider)\n                let  aptosPublicKey  = aptosProvider.getAccount(methodItem.chainId)?.publicKey\n\n                let signStr = aptosMessage.signature\n                if (signStr.startsWith(\"0x\")) {\n                  signStr = signStr.slice(2, signStr.length)\n                }\n\n                console.log(\"aptos_signMessage aptosPublicKey And signStr\",aptosPublicKey,signStr)\n                verifyList[methodItem.method] = nacl.sign.detached.verify(\n                    Buffer.from(aptosMessage.fullMessage),\n                    Buffer.from(signStr, 'hex'),\n                    Buffer.from(aptosPublicKey, 'hex'),\n                );\n              }else if(methodItem.method === \"cosmos_signArbitrary\"){\n                let cosmosProvider = new OKXCosmosProvider(window.provider)\n                let cosmosAddress = cosmosProvider.getAccount(methodItem.chainId)?.address\n                let cosmosMessage = methodItem.result\n                let isValid =  await this.cosmos_verifySignArbitrary(cosmosAddress,\"test cosmos\",cosmosMessage.signature, cosmosMessage.pub_key.value)\n                verifyList[methodItem.method] = isValid\n\n              }else if (methodItem.method === \"tron_signMessage\") {\n                let tronMessage = methodItem.result\n                let tronWeb = new TronWeb({\n                  \"fullHost\": 'https://api.trongrid.io',\n                  \"headers\": {},\n                  \"privateKey\": ''\n                })\n                let provider = new OKXTronProvider(window.provider)\n                verifyList[methodItem.method] = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), tronMessage, provider.getAccount(\"tron:mainnet\").address)\n              } else if (methodItem.method === \"tron_signMessageV2\") {\n                let tronMessage = methodItem.result\n                let tronWeb = new TronWeb({\n                  \"fullHost\": 'https://api.trongrid.io',\n                  \"headers\": {},\n                  \"privateKey\": ''\n                })\n                const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", tronMessage);\n                let provider = new OKXTronProvider(window.provider)\n\n                verifyList[methodItem.method] = base58Address === provider.getAccount(\"tron:mainnet\").address\n              }\n              else {\n                verifyList[methodItem.method] = \"Not verified yet\"\n\n              }\n            }else if(\"method\" in methodItem && \"error\" in methodItem) {\n              verifyList[methodItem.method] = methodItem.error\n            }\n\n          }\n\n          console.log(\"验证签名 最后的结果>>>:\", JSON.stringify(verifyList));\n          this.testTransaction = \"签名验证结果如下: \\n\" + JSON.stringify(verifyList)\n        }else {\n          console.log(\"验证签名 window.provider.session.connectMethodsReply 为空:\");\n\n        }\n\n    },\n\n    handleThemeSelect(theme) {\n      selectedTheme = theme;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: theme,\n          },\n        };\n      }\n    },\n\n    async sui_verifySignature(signatureResult) {\n      let resultObj = signatureResult\n      let result = false\n      let msg = ''\n      try {\n        /// 获取当前account\n        const adapter = new SuiAdapter(window.provider);\n        let account = adapter.getAccount()\n        console.log(`Account中获取的address：${account.address}`)\n\n        /// 验证签名\n        let pubKey = await verifyPersonalMessageSignature(this.currentSuiTransaction.message, resultObj.signature)\n        let address = pubKey.toSuiAddress()\n        console.log(`验签结果计算得到address：${address}`)\n\n        /// 对比pubKey\n        console.log(`account pubkey: ${account.publicKey}`,)\n        console.log(`result pubkey: ${pubKey.toBase64()}`)\n        result = (account.address === address) && (account.publicKey === pubKey.toBase64())\n\n        msg = `address verify: ${account.address === address}\\npublicKey verify: ${account.publicKey === pubKey.toBase64()}`\n        console.log(\"signature verify success: \", pubKey)\n      } catch (e) {\n        console.log(\"signature verify failed: \", e)\n      }\n      return {\n        result,\n        msg\n      }\n    },\n\n\n    handleRedirectSelect(input) {\n      this.redirect = input;\n    },\n\n    handleRedirectDeeplink(input) {\n      this.redirectDeeplink = input;\n    },\n\n    addRedirectParam() {\n      if (this.testTransaction) {\n        const newTransaction = JSON.parse(this.testTransaction);\n        newTransaction.redirect = this.redirect === 'deeplink' ? this.redirectDeeplink : this.redirect;\n        this.testTransaction = JSON.stringify(newTransaction);\n      }\n    },\n\n    canChainAddRedirectParam() {\n      return chainsThatCanAddRedirectParam.some((c) => this.selectedChain.startsWith(c));\n    }\n  },\n  created() {\n    // for (const eventName of Object.values(OKX_TON_CONNECTION_AND_TRANSACTION_EVENT)) {\n    //   console.log(eventName);\n    //   window.addEventListener(eventName, (event) => {\n    //     console.log(eventName,event.detail)\n    //     this.currentStatus = eventName\n    //   });\n    // }\n  },\n\n  mounted() {\n\n    var scriptTag = document.createElement(\"script\");\n    scriptTag.src = \"https://telegram.org/js/telegram-web-app.js\";\n    scriptTag.id = \"tgsdk\";\n    document.getElementsByTagName('head')[0].appendChild(scriptTag);\n\n    this.connectReady = true;\n    document.title = \"OKX Connect\";\n    this.initBtnClicked()\n  },\n};\n</script>\n","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_getAccount()\">getAccount(BTC)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signMessage()\">signMessage(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_send()\">send(BTC)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendBitcoin()\">sendBitcoin(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signPsbt_up()\">signPsbt(上架NFT)</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"btc_signAndPushPsbt_up()\">signAndPushPsbt(上架NFT)</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在OKX App选择要上架的Btc NFT，点击【上架】\n        </li>\n        <li>\n          2. 弹出签名面板，点开高级选项，查看\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出上架流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendInscription()\">sendInscription(BTC)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Btc NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount\n    }\n  },\n  methods: {\n\n    btc_getAccount() {\n      this.$emit('generateTransactionParams', {}, \"btc_getAccount\")\n    },\n\n    btc_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to BTC\"\n      };\n      this.$emit('generateTransactionParams', params, \"btc_signMessage\")\n    },\n\n    btc_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"btc_send\")\n    },\n\n    btc_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"btc_sendBitcoin\")\n    },\n\n    btc_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"btc_signPsbt\")\n    },\n\n    btc_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"btc_signAndPushPsbt\")\n    },\n\n    btc_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"btc_sendInscription\")\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./BtcTransactionPanel.vue?vue&type=template&id=376d03bc&scoped=true\"\nimport script from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./BtcTransactionPanel.vue?vue&type=style&index=0&id=376d03bc&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-376d03bc\"]])\n\nexport default __exports__","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_getAccount()\">getAccount(Fractal)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signMessage()\">signMessage(Fractal)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_send()\">send(Fractal)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_sendBitcoin()\">sendBitcoin(Fractal)</el-button>\n\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signPsbt_up()\">signPsbt(上架NFT)</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_signAndPushPsbt_up()\">signAndPushPsbt(上架NFT)</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在OKX App选择要上架的Fractal NFT，点击【上架】\n        </li>\n        <li>\n          2. 弹出签名面板，点开高级选项，查看\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出上架流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_sendInscription()\">sendInscription(Fractal)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Fractal NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount\n    }\n  },\n  methods: {\n\n    fractal_getAccount() {\n      this.$emit('generateTransactionParams', {}, \"fractal_getAccount\")\n    },\n\n    fractal_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to UniSat!\\n\\nClick to sign in and accept the UniSat Terms of Service (https://unisat.io/terms-of-service.html) and Privacy Policy (https://unisat.io/privacy-policy.html).\\n    \\nThis request will not trigger a blockchain transaction.\\n    \\nYour authentication status will reset after 24 hours.\\n    \\nWallet address:\\nbc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\\n    \\nNonce:\\n162d70e3-8c21-4cfd-9a22-9bf0a4b7be51\\n\"\n      };\n      this.$emit('generateTransactionParams', params, \"fractal_signMessage\")\n    },\n\n    fractal_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_send\")\n    },\n\n    fractal_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_sendBitcoin\")\n    },\n\n    fractal_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"fractal_signPsbt\")\n    },\n\n    fractal_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"fractal_signAndPushPsbt\")\n    },\n\n    fractal_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"fractal_sendInscription\")\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./FractalTransactionPanel.vue?vue&type=template&id=fb2f7e38&scoped=true\"\nimport script from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./FractalTransactionPanel.vue?vue&type=style&index=0&id=fb2f7e38&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-fb2f7e38\"]])\n\nexport default __exports__","<script>\n\nimport {getFullnodeUrl, SuiClient} from \"@mysten/sui/client\";\nimport {Transaction as SuiTransaction} from '@mysten/sui/transactions';\n\nexport default {\n  name: \"SuiTransactionPanel\",\n  methods: {\n    sui_getAccount() {\n      this.$emit('generateTransactionParams', '', \"sui_getAccount\")\n    },\n\n    //对单个交易签名（不发送)\n    async sui_signMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signMessage\")\n    },\n\n    async sui_signPersonalMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signPersonalMessage\")\n    },\n\n    sui_signTransaction2() {\n      // 定义要转移的金额和目标地址\n      const amount = 109; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    async sui_requestRpc() {\n      let provider = window.provider;\n      provider.setDefaultChain(\n          `sui:mainnet`,\n          `https://fullnode.mainnet.sui.io:443`\n      );\n      var data = {\n        method: \"suix_getBalance\",\n        params: [\n          \"0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae\",\n          \"0x168da5bf1f48dafc111b0a488fa454aca95e0b5e::usdc::USDC\",\n        ],\n      };\n\n      this.$emit(\"generateTransactionParams\", data, \"sui_testRpc\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 102; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signAndExecuteTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n      this.$emit(\"generateTransactionParams\", input, \"sui_signAndExecuteTransaction\")\n    },\n\n    /// generate txBytes and txSerialize\n    async generateTsBytesAndSerizlize(input) {\n      /// txBytes and txSerialize may be constructed in advance by the dapp side\n      let resultTuple = [\"\", \"\"];\n      if (\n          \"txBytes\" in input &&\n          input.txBytes.length > 0 &&\n          \"txSerialize\" in input &&\n          input.txSerialize.length > 0\n      ) {\n        resultTuple = [input.txBytes, input.txSerialize];\n      }\n\n      /// Otherwise, a transactionBlock parameter is required.\n      if (!(\"transactionBlock\" in input)) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      // if (this.walletAddress != \"connected\") {\n      //   alert(\"请先连接钱包\");\n      //   return new Promise((resolve) => {\n      //     resolve(resultTuple);\n      //   });\n      // }\n\n      let senderAccounts = window.provider.requestAccountsWithNamespace(\"sui\");\n      if (senderAccounts.length == 0) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      try {\n        let rpcUrl = getFullnodeUrl(\"mainnet\");\n        rpcUrl = \"https://www.okx.com/fullnode/sui/discover/rpc\"\n        const suiClient = new SuiClient({ url: rpcUrl });\n\n        /// sender is required\n        input.transactionBlock.setSender(senderAccounts[0]);\n        const result = await input.transactionBlock.build({\n          client: suiClient,\n        });\n        const txBytes = Buffer(result).toString(\"base64\");\n        const txSerialize = await SuiTransaction.from(txBytes).toJSON();\n        resultTuple = [txBytes, txSerialize];\n      } catch (error) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      return new Promise((resolve) => {\n        resolve(resultTuple)\n      })\n    },\n\n    //签名并发送交易\n    sui_signAndExecuteTransaction() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n        \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.testTransaction = JSON.stringify(input);\n      this.currentSuiTransaction = input;\n      this.currentSuiMethod = \"sui_signAndExecuteTransaction\";\n    },\n  },\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_getAccount()\">getAccount(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signMessage()\">signMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signPersonalMessage()\">signPersonalMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signTransaction2()\">signTransaction(Sui)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signAndExecuteTransaction()\">sendTransaction(Sui)</el-button>\n      <div style=\"font-size: 12px; color: gray;\">(send to Rally Tiger account)</div>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_requestRpc()\">RPC_getBalance</el-button>\n      <div style=\"font-size: 12px; color: gray;\">get USDC balance of address:</div>\n      <div style=\"font-size: 12px; color: gray\">0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae</div>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signTransaction_pre_execution()\">signTransaction(prepared data)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signAndExecuteTransaction_pre_execution()\">sendTransaction(prepared data)</el-button>\n    </el-col>\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./SuiTransactionPanel.vue?vue&type=template&id=56a8eddf&scoped=true\"\nimport script from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./SuiTransactionPanel.vue?vue&type=style&index=0&id=56a8eddf&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-56a8eddf\"]])\n\nexport default __exports__","<script>\n\n\nimport {OKXTronProvider} from \"@okxconnect/universal-provider\";\nimport {TronWeb} from \"tronweb\";\n\nexport default {\n  name: \"TronTransactionPanel\",\n  methods: {\n\n    async tron_signMessage() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessage(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n\n      const verify = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), res, provider.getAccount(\"tron:mainnet\").address)\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" + res, \"tron_signMessage\")\n    },\n\n    async tron_signMessageV2() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessageV2(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", res);\n      console.log(\"tron_signMessageV2_base58Address\", base58Address)\n      console.log(\"tron_signMessageV2_address\", provider.getAccount(\"tron:mainnet\").address)\n      const verify = base58Address === provider.getAccount(\"tron:mainnet\").address\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" +  res, \"tron_signMessage\")\n    },\n\n    async tron_signTransaction(isOnlySign) {\n      let provider = new OKXTronProvider(window.provider)\n        let tronWeb = new TronWeb({\n          \"fullHost\": 'https://api.trongrid.io',\n          \"headers\": {},\n          \"privateKey\": ''\n        })\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const transaction = await tronWeb.transactionBuilder.sendTrx(\"TGBcVLMnVtvJzjPWZpPiYBgwwb7th1w3BF\", 1000, address);\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let res = await provider.signTransaction( transaction, \"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", res, \"tron_signTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async getContract() {\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41e95812d8d5b5412d2b9f3a4d5a87ca15c5c51f33\"\n      \n      try {\n        const contract = await tronWeb.trx.getContract(contractAddress)\n        const abi = contract.abi.entrys;\n        console.log(\"获取到的合约：\")\n        console.log(abi)\n      } catch (error) {\n        console.log(\"Error getting contract ABI:\", error);\n      }\n    },\n    \n    async tron_signAndSendTransactionContract(isOnlySign) {\n      // this.getContract()\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41e95812d8d5b5412d2b9f3a4d5a87ca15c5c51f33\"\n      let provider = new OKXTronProvider(window.provider)\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const parameter = [\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n      ]\n      const ret = await tronWeb.transactionBuilder.triggerSmartContract(contractAddress, \"quote(uint256,uint256,uint256)\", {}, parameter, address);\n      console.log(\"=====>transaction: \")\n      console.log(ret);\n      this.$emit(\"generateTransactionParams\", ret.transaction)\n      if (isOnlySign) {\n        let tx = await provider.signTransaction( ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async tron_signAndSendTransactionApprove(isOnlySign) {\n      let provider = new OKXTronProvider(window.provider)\n\n      let transaction = {\n        \"visible\": false,\n        \"txID\": \"d1ed31b6abd2c37e248254681d3ee61b2e628fbd776def753b5592712ebd98c5\",\n        \"raw_data\": {\n          \"contract\": [{\n            \"parameter\": {\n              \"value\": {\n                \"data\": \"095ea7b3000000000000000000000000e95812d8d5b5412d2b9f3a4d5a87ca15c5c51f33ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n                \"owner_address\": \"4157c140be01fa2bbabf7f055ab879d0c05725293c\",\n                \"contract_address\": \"41b4a428ab7092c2f1395f376ce297033b3bb446c1\"\n              },\n              \"type_url\": \"type.googleapis.com/protocol.TriggerSmartContract\"\n            },\n            \"type\": \"TriggerSmartContract\"\n          }],\n          \"ref_block_bytes\": \"1bde\",\n          \"ref_block_hash\": \"af71fa1aa01b5bd1\",\n          \"expiration\": Date.now() + 60000,\n          \"fee_limit\": 250000000,\n          \"timestamp\": Date.now()\n        },\n        \"raw_data_hex\": \"0a021bde2208af71fa1aa01b5bd140f8b1fa98b4325aae01081f12a9010a31747970652e676f6f676c65617069732e636f6d2f70726f746f636f6c2e54726967676572536d617274436f6e747261637412740a154157c140be01fa2bbabf7f055ab879d0c05725293c121541b4a428ab7092c2f1395f376ce297033b3bb446c12244095ea7b3000000000000000000000000e95812d8d5b5412d2b9f3a4d5a87ca15c5c51f33ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff70f1e6f698b432900180e59a77\"\n      }\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let tx = await provider.signTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n\n    }\n\n  }\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessage()\">tron_signMessage</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessageV2()\">tron_signMessageV2</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(true)\">\n        tron_signTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(true)\">\n        tron_signTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(true)\">\n        tron_signTransaction(Approve)\n      </el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(false)\">\n        tron_signAndSendTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(false)\">\n        tron_signAndSendTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(false)\">\n        tron_signAndSendTransaction(approve)\n      </el-button>\n    </el-col>\n\n\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./TronTransactionPanel.vue?vue&type=template&id=eaaccc08&scoped=true\"\nimport script from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./TronTransactionPanel.vue?vue&type=style&index=0&id=eaaccc08&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-eaaccc08\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=225206a1&scoped=true\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=225206a1&scoped=true&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-225206a1\"]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport ElementPlus from 'element-plus'\nimport 'element-plus/dist/index.css'\nimport App from './App.vue'\n\nconst app = createApp(App)\n\napp.use(ElementPlus)\napp.mount('#app')","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkokxconnectdemo\"] = self[\"webpackChunkokxconnectdemo\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(61685); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["require","Object","defineProperty","exports","value","AptosUtils","getTransaction","o","transaction","rawTransaction","payload","entryFunction","typeArgs","type_args","typeArguments","Array","forEach","typeTag","push","toString","realArguments","this","getTypeArguments","args","i","arguments","function","module_name","address","data","name","identifier","function_name","type","type_arguments","getArguments","array","j","length","y","values","subArray","dealArrayElements","e","Uint8Array","t","isArray","r","n","assign","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","next","rejected","result","done","then","apply","OKXAptosProvider","buffer_1","AptosUtils_1","core_1","constructor","provider","chainsSet","Set","getConnectedNamespace","defaultNetwork","network","requestDefaultChainWithNamespace","NameSpaceKeyAptos","currentChainId","getRealChainId","chainId","size","Error","_a","_b","_c","session","namespaces","chains","chain","add","getAccount","_d","_e","_f","_g","_h","_j","account","accounts","filter","startsWith","logDebug","accountArray","split","console","log","extra","publicKey","undefined","substring","signMessage","realChain","prefix","message","nonce","fullMessage","application","window","location","protocol","hostname","buffer","Buffer","from","hex","bufferToHex","injectParams","signedMessage","request","successData","signStr","slice","signature","error","signTransaction","tx","signAndSubmitTransaction","buf","OKXAptosProvider_1","enumerable","get","CONNECT_METHOD_BATCH_FETCHMSG","CONNECT_METHOD_FETCHMSG","CONNECT_METHOD_RECEIVE","CONNECT_METHOD_UNSUB","CONNECT_METHOD_SUB","CONNECT_METHOD_PUBLISH","CONNECT_METHOD_LOGIN","CONNECT_METHOD_PUSH","__createBinding","create","m","k","k2","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","__setModuleDefault","v","__importStar","mod","prototype","hasOwnProperty","call","OKXWalletConnector","constants_1","storageconstants_1","storage_1","utils_1","utils_2","eventemitter3_1","protocol_1","WS","resolveWebSocketImplementation","url","events","EventEmitter","state","ConnectorState","InitState","selectedUrlIndex","retryCount","timeOutLimit","checkWSUrl","heartbeatTimer","connectionTimeoutTimer","connectURLStorage","Storage","OKXCONNECTOR_CACHE_KEY","connecting","Connecting","onPayload","rsp","Date","now","emit","onClose","event","socket","code","onError","id","msg","onopen","onmessage","onclose","Connected","emitError","errorEvent","heartbeat","clearTimeout","OnError","readyState","WebSocket","OPEN","send","setTimeout","bind","tryRegistOpen","logError","registOpen","inRetry","toUTCString","URLSearchParams","startTimeOutTimer","hasBuiltInWebSocket","onerror","close","on","resetTimeOutTimer","OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE","FINISHED","checkMaxRetry","OKXCONNECTOR_WS_URL_LIST","connectionTryNext","nextUrl","getNextSelectUrl","CANCELED","pendingSocket","TIME_OUT","cacheSuccessUrlSelect","saveContent","onVisibleChanged","document","visibilityState","once","err","OKXConnectError","OKX_CONNECT_ERROR_CODES","CONNECTION_ERROR","connect","removeEventListener","addEventListener","disconnect","Disconnected","currentStatus","addListener","decrypt","success","failed","listenPayloadHandler","removeListener","parsedEvent","safeJsonParse","params","rawMsg","failHandler","addPackageParse","callback","payloadHandler","param","listener","off","doLogin","safeJsonStringify","getMsgPayloadFromHistory","tmpMsg","jsonstr","onOpen","openHandler","ConnectionManager","connect_1","commands_1","jwtconstants_1","crypto_1","jwt_1","safejson_1","log_1","report_1","url_1","appname","connectStorage","OKXCONNECTOR_CACHE_KEY_DAPP","crypto","SessionCrypto","inTMA","isInTMA","reportLog","keyPairInfo","getCachedCryptoKeyPair","jwtKeyPair","getCachedJWTKeyPair","saveJWTKeyPair","connector","OKXCONNECTOR_WS_URL_1","packageId","connectedWalletPK","currentTopic","refreshPackageId","saveCryptoKeyPair","keyPair","cacheInfo","encryptStoreMsg","OKXCONNECTOR_CRYPTO_KEY","kp","getAndDecrypt","content","clearCache","strkeyPair","toHexString","secretKey","OKXCONNECTOR_JWT_KEY","strKeyPairInfo","hexToByteArray","generateKeyPair","isWalletPKReady","makeJWT","topic","signJWT","OKXCONNECTOR_JWT_SIDE","OKXCONNECTOR_JWT_TTL","parsePackage","input_1","input","ignoreACK","sendACK","getItem","OKXCONNECTOR_TOKEN_CACHE","inputObj","messageId","sendReceive","restoreConnect","getConnectInfo","generateTopic","info","channelId","clientId","stringifyKeypair","fromRestore","timeLog","getTime","lastConnectId","cachedSenderPublicKey","OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE","jwtToken","timeOne","timeF","sendFetchAndConsumeMessages","timeTh","catch","jsonrpc","CONNECT_JSONRPC_VER","method","token","replace","parsedMessage","fail","msgObj","trimStart","sendRaw","ttl","OKXCONNECTOR_MESSAGE_TTL","msg_1","encrypt","reportEvent","OKXReportType","LOG","msgId_1","success_1","msgId","reason","sendConnectSessionInfo","fetchedMessages","hasMore","receivedMsgs","timeFive","cleanCache","saveSessionContent","key","OKXCONNECTOR_SESSION_PREFIX_KEY","jsonData","getSessionContent","jsonStr","object","getCurrentConnectionReady","OKXCONNECTOR_WS_URL_IDX_KEY","OKXCONNECTOR_WS_URL_3","OKXCONNECTOR_WS_URL_2","EVENT_EMITTER_MAX_LISTENERS","Engine","iconnector_1","ws_connector_1","connectionManager_1","sessionUtils_1","connector_1","wallet_info_1","appName","connectors","useConnector","connectionManager","isInject","getConnector","InjectConnector","registerConnector","WsConnector","setConnectionManager","hasWsConnector","universalConnect","sessionConfig","connectInfoAndUrl","JSON","stringify","tonRequest","universalRequest","item","connectInfo","requestId","openUniversalLink","openUniversalUrl","universalConnectRequest","protocolVer","Number","tonConnectSdkVersion","dAppInfo","dappInfo","requests","redirect","universalConnectRequestbase64Encoded","encodeConnectParams","tonConnectRequest","isFromTonSDK","defaultConnectRequest","openOKXLink","getOKXLink","useMini","tmaReturnUrl","openMethod","OkxwalletInjectConnector","openWallet","connectRequest","openOKXTMAWalletlinkWithFallback","useShortLink","openOKXUniversalLink","openOKXDeeplinkWithFallback","isIOS","isIos","addOnConnectResultListener","response","connectResponse","buildNameSpacesByConnectResponse","UNKNOWN_ERROR","walletName","responses","wallet","methodsResponse","find","connectRequestMethods","signResponse","sendSession","connectResultListener","setOnConnectResultListener","engineConnectInfo","requestAnswer","clearData","addDisconnectListener","disconnecter","tag","getTagByappName","getTag","OKXWalletName","OKX_APP_WALLET","OKXMiniWalletName","OKX_TG_WALLET","OKXInjectWalletName","OKX_INJECT_WALLET","setConnectConnector","setSessionConnectingListener","sessionConnectingListener","restoreconnect","sessionInfo","onConnectResult","restoreconnectFromTopic","namespaceKeys","connectManagerDisconnect","WalletConnectionManager","walletConnectionManager_1","engine_1","__importDefault","MULTICODEC_ED25519_LENGTH","MULTICODEC_ED25519_HEADER","MULTICODEC_ED25519_BASE","MULTICODEC_ED25519_ENCODING","DID_METHOD","DID_PREFIX","DID_DELIMITER","KEY_PAIR_SEED_LENGTH","DATA_ENCODING","JSON_ENCODING","JWT_ENCODING","JWT_DELIMITER","JWT_IRIDIUM_TYP","JWT_IRIDIUM_ALG","JWTHeaderType","decodeJSON","encodeJSON","encodeIss","decodeIss","encodeSig","decodeSig","encodeData","decodeData","encodeJWT","decodeJWT","verifyJWT","ed25519","tweetnacl_1","stringUtils_1","default","sign","str","okxtoString","okxfromString","val","publicKeyStr","join","issuer","multicodec","bytes","encoded","header","jwt","sub_1","aud_1","ttl_1","keyPair_1","sub","aud","iat","Math","floor","alg","typ","iss","exp","act","detached","verify","OKXCONNECTOR_JWT_WALLET_SIDE","buildRequestAccountNameSpacesByConnectResponse","requestAccountNameSpaces","universalResponse","tonAddress","tonProof","ton_addr","ton_proof","namespace","addresses","methods","addressItem","addressArr","utils_3","crypto_js_1","subKey","beforeKey","localStorage","resolveLocalStorage","checkAndUpgradeCache","storeKey","cipherIV","cacheStr","cacheKey","cache","cacheObj","fromCacheKey","toCacheKey","setItem","removeItem","timestamp","saveItem","localKey","totalCacheStr","getCachedPBKDF2InfoKey","pwLen","saltLen","pw","iv","salt","OKXCONNECTOR_STORAGER_CRYPTO_SALT","randomBytes","OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD","OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV","ivBuffer","PBKDF2","iterations","storeInfo","AES","enc","Utf8","OKXCONNECTOR_STORAGE_CIPHER_METHOD","OKXCONNECTOR_TON_KEY","WalletConnectionManagerEvent","WalletConnectionManagerTopicInfoCacheKey","RECEIVE_REQUEST","walletConnectionConstants_1","communicateEvents","sessionCryptoInfoMap","Map","inLogin","isLogined","offset","topicId","isTopicPublicKeyExist","timestampStr","parseInternalMsg","internalMsg","internalObj","origin","originContent","base64decode","updateClientId","cid","lastCheck","getLastSixMd5Hash","dappPublicKey","syncCacheSessionInfo","topic_1","_k","_l","isInternalData","inner_message","inner_topic","messageObj","sessionInfoString","base64Content","inner_connection","toObject","decryptWallet","recovrySessionInfoFromCache","cacheMap","topicItem","cryptoItem","cryptoKeyPair","set","cacheSessionInfo","sync","duplicatedTopics","includes","delete","appendTopic","sessionPublicKey","subscribeTopics","confirmAppendingTopics","keys","getSessionPublicKey","getCurrentCachedTopicIdList","needPublicKey","useRaw","connectedDappPK","cryptoObject","encryptWallet","sendUnsubscribe","sendBatchFetchAndConsumeMessages","topicIdList","topics","withInternalData","finishCount","idx","AppwalletConnector","instance","super","walletNameKey","shortUniversalLink","appConnectEncodeParams","appDeepLink","getAppWalletDeepLink","isOS","openDeeplinkWithFallback","stackDeepLink","openLinkBlank","standardUniversalLink","TgwalletConnector","appwallet_connector_1","inject_connector_1","tgwallet_connector_1","okxwallet_inject_connector_1","provider_1","SolProvider_1","inject_1","AptosPrivider_1","media_1","disconnectListener","providerMap","enable","NameSpaceKeyEip155","Eip155Provider","NameSpaceKeySOL","SolProvider","AptosProvider","getInjectProvider","nameSpace","mapKey","entries","BAD_REQUEST_ERROR","okxwallet","requestAccounts","nameSpaceArr","requiredNamespaces","optionalNamespaces","platform","appVersion","maxProtocolVersion","responseItem","walletInfo","isDevice","walletInfoItem","requestWallets","walletInfoFirst","itemChains","chainStr","currentChain","getChainId","selectedAddress","coinType","namespaceChainId","nameSpaceResponse","Eip55Methods","resotreConnect","SOLANAMethods","AptosMethods","getRequestId","newRequest","onAck","injectProvider","USER_REJECTS_ERROR","errorResponse","CHAIN_NOT_SUPPORTED","_","allReady","every","namespaceKey","connectReady","toJSON","namespacesKey","encodeTGParams","encodeTWAConnectURLParams","tgUrl","getTelegramWalletTWAUrl","pendingRequests","getDefaultReporter","beginReport","jsonResponse","handleResponse","connectParams","bindRequestForPromise","clear","nonceLength","sessionKeyPair","createKeypairFromString","createKeypair","box","createNonce","receiverPublicKey","encodedMessage","TextEncoder","encode","encrypted","concatInfo","concatUint8Arrays","hexResult","encodedResult","base64encode","senderPublicKey","messageByteArray","toUint8Array","internalMessage","splitToUint8Arrays","decrypted","open","TextDecoder","decode","__exportStar","p","hasOKXInjectedProvider","getWindowProviderNamespace","providerSearch","property","path","_provider","aptos","hash","METHOD_NOT_SUPPORTED","bs58_1","solana","bufferResult","injectResult","allResult","signAllTransactions","signAndSendResult","signAndSendTransaction","ethParams","typedDataJson","switchChainId","parseInt","resultSwitch","chainHex","resultMe","HIDE_INJECTED_WALLET_CHAINS","TON_CHAINS","COSMOS_CHAINS","APTOS_CHAINS","SUI_CHAINS","SOLANA_CHAINS","BTC_CHAINS","MAINNET","FRACTAL","TESTNET","SONIC_TESTNET","COSMOS_MAINNET","IEngine","ISignClient","ISignClientEvents","IEngineEvents","client","creatOKXInjectWalletInfo","creatOKXMiniAppWalletInfo","creatOKXWalletInfo","getBigIntRpcId","formatJsonRpcRequest","isJsonRpcError","isJsonRpcResponse","parseConnectionError","isHttpUrl","formatJsonRpcError","json_rpc_1","isJsonRpcPayload","isJsonRpcRequest","isJsonRpcResult","payloadId","formatJsonRpcResult","isReservedErrorCode","getError","getErrorByCode","formatErrorMessage","isWsUrl","okx_connect_error_1","IncrementalRandomGenerator","bits","Uint16Array","Uint32Array","initialValue","getNextValue","uint8Generator","uint16Generator","date","BigInt","RESERVED_ERROR_CODES","STANDARD_ERROR_MAP","DEFAULT_ERROR","match","INTERNAL_ERROR","SERVER_ERROR","getUrlProtocol","matches","RegExp","matchRegexProtocol","regex","test","CONNECT_ITEM_ERROR_CODES","TONCHAIN","connect_wallet_1","connect_event_1","getTestTwaUrl","okxTesttwaUrl","getTestTgTwaUrl","okxTestTgtwaUrl","tgwalletAppName","tgwalletName","standardDeeplink","downloadUrl","okxDeeplink","SERVER_ERROR_CODE_RANGE","INVALID_PARAMS","METHOD_NOT_FOUND","INVALID_REQUEST","PARSE_ERROR","getDefaultMessageByCode","setPrototypeOf","ALREADY_CONNECTED_ERROR","NOT_CONNECTED_ERROR","UNKNOWN_APP_ERROR","NameSpaceKeyTron","NameSpaceKeyCosmos","NameSpaceKeyBtc","NameSpaceKeySui","NameSpaceKeyTON","misc_1","chains_1","callForSuccess","fn","options","attempts","delayMs","lastError","delay","timeout","signal","aborted","timeoutId","checkMetaData","versionCompare","isBrowser","isMobileUserAgent","openLink","toSafeBase64FromBase64","isValidObject","getAppWalletShortDeepLink","encodeTelegramUrlParameters","isTelegramUrl","openOKXDeeplink","getUniversalLink","logWarning","call_for_success_1","web_api_1","tma_api_1","request_1","debug","forceReport","defaultReporter","OKXReporter","packageJson","version","okxLogDebug","reduce","sendRecordContent","warn","action","content_1","mediaNotTouch","mediaTouch","maxWidth","media","mediaMin","mediaMax","mediaMinMax","device","getWindow","isTmaPlatform","width","innerWidth","tablet","mobile","isMobile","isTelegram","TelegramWebviewProxy","maxTouchPoints","navigator","px","pxMin","pxMax","OKXReportSide","versionStr","cross_fetch_1","localforage_1","reportApiList","reportCacheKey","reportUUIDKey","MAX_LIMIT_REPORTCOUNT","DEFAULT_HTTP_HEADERS","Accept","DEFAULT_HTTP_METHOD","DEFAULT_FETCH_OPTS","headers","PAGE_IN","PAGE_OUT","CLICK","DAPP","WALLET","fetchListWithTimeout","urls_1","args_1","urls","controller","AbortController","fetchPromise","timeoutPromise","abort","race","ok","status","currentSide","currentVersion","storage","createInstance","recordList","currentUUID","configVersionAndSide","side","recordCacheKey","reportPlatform","startErrorCatching","records","uuid","sendCachedRecords","cachedErrors","sendRecord","record","body","res","pathname","language","ua","userAgent","reportItem","lang","markRecordItem","sendList","map","allSettled","results","keepIndex","index","splice","markRecord","Report_WalletType_Key","Report_Proceed_QRCode_Click","Report_ChooseType_Download_Click","Report_ChooseType_ConnectWallet_Click","Report_Proceed_Retry_Click","Report_ChooseType_ConnectWallet_View","Report_Loading_ConnectWallet_View","Report_Proceed_QRCode_View","Report_Proceed_Proceed_View","dappMetaData","icon","JSONStringify","JSONParse","json","numbersBiggerThanMaxInt","serializedData","group","parse","isCustomFormatBigInt","alloc","allocUnsafe","basics_1","string","encoding","base","BASES","decoder","encoder","createCodec","ascii","bufNum","String","fromCharCode","charCodeAt","utf8","bases","base16","latin1","binary","inTg","isInTelegramBrowser","sendExpand","sendOpenTelegramLink","initParams","locationHash","urlParseHashParams","tmaPlatform","tgWebAppPlatform","Telegram","WebApp","webAppVersion","tgWebAppVersion","platforms","isTelegramWebview","TelegramWebview","postEvent","link","fallback","URL","pathFull","search","isIframe","versionAtLeast","path_full","parent","eventType","eventData","external","notify","trustedTarget","postMessage","indexOf","_path","urlSafeDecode","qIndex","pathParam","substr","query_params","urlParseQueryString","urlencoded","decodeURIComponent","queryString","paramName","paramValue","queryStringParams","v1","v2","a","p1","p2","v1List","v2List","max","ver","removeUrlLastSlash","addPathToUrl","deeplinkUrl","useStandardUniversalLink","replaceStrWithParam","cleanUrl","deeplinkEncodeUrl","encodeURIComponent","fullUrl","newWindow","href","deepLinkOpened","timeoutDuration","fallbackToDownloadPage","parameters","encodedParameters","connectRequestStr","utf8Array","base64Encoded","btoa","connectParam","redirectStr","okxconnect","extraparams","base64ContentStr","urlSafeBase64","twaDeepLink","openTelegramLink","RANDOM_LENGTH","hasLocalStorage","hashKey","generateRandomBytes32","tweetnacl_util_1","to_string_1","sha256_1","BASE16","hexString","byteArray","byte","buffer1","buffer2","mergedArray","subArray1","subArray2","encodeUint8Array","urlSafe","encodeBase64","decodeToUint8Array","decodeBase64","uint8Array","decodeUTF8","decodedUint8Array","encodeUTF8","scheme","global","self","randomBytes32","obj","getPrototypeOf","isIOSDevice","MSStream","isIPadOS","MD5","base64","getUserAgent","ua_parser_js_1","target","doFallback","fallbackTimeout","check","vendor","opera","getResult","osName","os","toLowerCase","deviceModel","model","browserName","browser","OKXSolanaProvider","web3_js_1","defaultChainMap","has","caip","realMessage","pubkey","PublicKey","serializedMessage","serialize","requireAllSignatures","verifySignatures","getSignedTransaction","transactions","VersionedTransaction","newTransactions","s","c","Transaction","deserialize","transactionStr","resultTx","OKXSolanaProvider_1","OKXBtcProvider","_1","getAddressForChainId","ns","checkChainId","ret","errorData","sendBitcoin","toAddress","satoshis","to","feeRate","txhash","checkParameters","signPsbt","psbtHex","signPsbts","psbtResults","psbtHexs","signAndPushPsbt","sendInscription","inscriptionId","extension","coinId","protocolId","atomicSuffix","ordinalsSuffix","endsWith","removeSuffix","scenario","txType","batchBean","coinAmount","nftId","suffix","unexistKeys","OKXCosmosProvider","algo","bech32Address","pubKey","hexToUint8Array","signArbitrary","signerAddress","signDoc","chain_id","account_number","sequence","fee","gas","amount","msgs","memo","signData","signAmino","signOptions","resData","signed","signDirect","bodyBytes","authInfoBytes","accountNumber","messageToBuffer","arr","output","x","padStart","arrayBuffer","byteValue","isNaN","OKXTonProvider","statusChangeSubscriptions","statusChangeErrorSubscriptions","tonWallet","errorsHandler","connected","tonNameSpace","walletStateInit","sessionWallet","tonDeviceInfo","features","connectItems","onStatusChange","sendTransaction","requestAccountsWithNamespace","requestParams","OKXTronProvider","TRON_CHAIN_ID","getChain","stringToHex","signMessageV2","signedTx","realSignTx","visible","txID","rawData","contract","raw_data","expiration","ref_block_bytes","fee_limit","ref_block_hash","raw_data_hex","OKXUniversalProvider","eip155_1","sui_1","client_1","namespaces_1","solana_1","btc_1","aptos_1","ton_1","cosmos_1","tron_1","packages_1","init","opts","setGlobal","okxConnectUniversalinwindow","initialize","providerOpts","rpcProviders","requestParam","buildRequestParamFromRequest","getProvider","validateChain","keyArr","connectOpts","called","onRequestSent","disconnectAndEmit","cleanup","engine","aptosChainNameToGeneralId","replaceAptos","aptosNameSpace","realNS","replaceAptosInner","optionAptosNameSpace","realOptionNS","defaultChain","replaceAptosGeneralIdWithNetName","replaceSessionAptos","disconnectInner","connectAndSign","signRequest","updatedOpts","setNamespaces","onConnect","requestItem","signResponseList","okxConnectUniversalUIinwindow","creatNotSupportMethodItemReplay","syncAllAddresses","syncAddressAvailable","syncAllAddress","setDefaultChain","rpcUrl","checkStorage","sessionInfoStr","getFromStore","createProviders","registerEventListeners","SignClient","providersToCreate","parseNamespaceKey","namespacesValue","currentNameSpace","opts1","solanaProvider","sonicProvider","svmProvider","optsTon","tonProvider","optsSui","suiProvider","SuiProvider","optsBtc","btcProvider","fbProvider","aptosProvider","moveProvider","cosmosProvider","tronProvider","PROVIDER_EVENTS","DEFAULT_CHAIN_CHANGED","caip2ChainId","onChainChanged","UPDATE_NAMESPACES","nameSpaces","nameSpacekey","persist","isChainNamespaceInSession","chainsArr","defaultNamespace","getDefaultChain","namespaceStr","caip2Chain","sessionProperties","showRequestModal","OKXUniversalProvider_1","OKXBtcProvider_1","OKXCosmosProvider_1","OKXTonProvider_1","OKXTronProvider_1","ConnectMethodUtils_1","metaData","requestAccountItem","nameSpaceToConnectWalletNameSpace","SESSION_CONNECTING","connectMethodsToConnectWalletMethods","metadata","fillParamsToSession","connectMethodsResponseUpdate","openOKXWallet","allAddressStr","syncResoonseToRequire","connectSupportMethods","connectMethodsAdaptOldVersion","uint8array_extras_1","isRecord","notSupportError","errorItem","callBackParams","solAccount","account1","solAddress","fromAccountToAddress","stringToUint8Array","suiMessage","convertedArray","b64encoded","atob","btcAccounts","account2","btcAccount","btcAddress","paramData","aptosAccount","account3","aptosAddress","aptosChainId","cosmosAccount","account_cosmos","cosmosAddress","cosmosData","cosmosBase64Encoded","stringToBase64","methodItem","solanaSuccessData","suiMethod","requestMethod","suiMessageb64","aptosSignature","requireNameSpace","includeEip155","some","space","syncAddressHostAvailable","includeChain","paramsArr","firstParam","firstObj","aptosParams","currentURL","signChainId","applicationUrl","cosmosChain","responseAddressStr","allAddress","isEvm","deriveName","addr","ci","evmAddress","freeze","getAccountsChains","isCaipNamespace","mergeRpcMap","targetRpcMap","sourceRpcMap","mergeNamespaces","source","rpcMap","GENERIC_SUBPROVIDER_NAME","RPC_URL","STORAGE","CONTEXT","WC_VERSION","PROTOCOL","RELAY_URL","LOGGER","JsonRpcConnection_1","JsonRpcProvider_1","httpProviders","createHttpProviders","updateNamespace","getAccounts","setHttpProvider","http","parsedChainId","parsedRpc","getRpcUrl","httpProvider","createHttpProvider","getHttpProvider","rpc","JsonRpcProvider","JsonRpcConnection","getGlobal","BtcProvider","CosmosProvider","updateRequestParams","isDic","decimalNumber","selectedChainId","chainNum","paramsChainId","paramsChainString","adaptArray","addressObj","isEqual","chainAddress","messages","secondObj","hexChainId","getHexChainIdFromRequest","isChainApproved","configAddressAdaptInjectWallet","handleSwitchChain","addEthereumChain","resultData","rpcUrls","eip155","core_2","disableProviderPing","isAvailable","registering","register","parseError","types_1","IJSONRpcProvider","connection","hasRegisteredEventListeners","setConnection","context","requestStrict","_error","SolanaProvider","getPubkey","getWalletAddress","components","__rest","getOwnPropertySymbols","propertyIsEnumerable","TONProvider","validUntil","newParams","fromAddress","boc","TronProvider","IJSONRpcConnection","opt","globals","convertChainIdToNumber","parseChainId","mergeArrays","projectId","reference","CAIP_DELIMITER","b","okxGlobal","_createElementBlock","_hoisted_1","_createVNode","_component_el_container","_withCtx","_component_el_header","_cache","_createTextVNode","_component_el_main","_component_el_card","class","_createElementVNode","style","_component_el_row","_component_el_col","span","_toDisplayString","$options","_ctx","_component_el_checkbox","modelValue","withUI","$event","onChange","handleWithUI","universalToTG","handleUniversalToTG","_component_el_select","modals","placeholder","handleModalsSelect","multiple","_component_el_option","label","returnStrategy","handleReturnStrategySelect","_Fragment","_renderList","returnStrategies","strategy","_createBlock","_component_el_input","deeplink","handleReturnStrategyDeeplink","disabled","_createCommentVNode","handleLanguageSelect","locales","locale","theme","handleThemeSelect","THEME","LIGHT","DARK","selectedMethod","handleConnectMethodsSelect","connectMethods","tonProofValue","gutter","align","availableChains","checked","areChainsInit","isOptionalChecked","handleOptionChange","_component_el_button","onClick","initBtnClicked","connectInitStr","connectBtnClicked","connectStatusStr","syncAllAddressClick","syncAllAddressStr","disconnectAction","walletAddress","disconnectStatusStr","_Teleport","showModal","closeModal","_withModifiers","_component_qrcode_vue","qrValue","level","_component_el_tabs","activeTab","onTabClick","clickActiveTab","_component_el_tab_pane","eth_requestAccounts","eth_chainId","wallet_switchEthereumChain","wallet_addEthereumChain","personal_sign","eth_signTypedData_v4","eth_sendTransaction_transfer","eth_sendTransaction_approve","eth_sendTransaction_mint","wallet_watchAsset","ton_getAccount","ton_sendTransaction","sol_signMessage","sol_signTransaction","sol_signVersionedTransaction","sol_signAllTransactions","sol_signAllVersionedTransactions","sol_signAndSendTransaction","sol_signAndSendVersionedTransaction","_component_SuiPanel","onGenerateTransactionParams","sui_generateTransactionParams","_component_BTCPanel","btc_generateTransactionParams","_component_FractalPanel","fractal_generateTransactionParams","_component_TronTransactionPanel","tron_generateTransactionParams","onGenerateTransactionResult","tron_getTransactionResult","aptos_signMessage","aptos_signTransaction","aptos_signAndSubmitTransaction","cosmos_signArbitrary","cosmos_signAmino","cosmos_signDirect","wallet_testRpc","eth_sendTransaction_swap","move_signTransaction","move_signAndSubmitTransaction","testBase64UrlSafe","xs","sm","handleRedirectSelect","canChainAddRedirectParam","redirectDeeplink","handleRedirectDeeplink","addRedirectParam","testTransaction","rows","testboc","testTransactionStr","btc_getAccount","btc_signMessage","$setup","sendAmount","clearable","btc_send","sendSatoshisAmount","btc_sendBitcoin","btc_signPsbt_up","btc_signAndPushPsbt_up","receiver","btc_sendInscription","props","setup","ref","$emit","alert","autoFinalized","__exports__","fractal_getAccount","fractal_signMessage","fractal_send","fractal_sendBitcoin","fractal_signPsbt_up","fractal_signAndPushPsbt_up","fractal_sendInscription","sui_getAccount","sui_signMessage","sui_signPersonalMessage","sui_signTransaction2","sui_signAndExecuteTransaction","sui_requestRpc","sui_signTransaction_pre_execution","sui_signAndExecuteTransaction_pre_execution","recipientAddress","SuiTransaction","coin","splitCoins","transferObjects","transactionBlock","showEffects","txBytes","txSerialize","generateTsBytesAndSerizlize","resultTuple","senderAccounts","getFullnodeUrl","suiClient","SuiClient","setSender","build","currentSuiTransaction","currentSuiMethod","tron_signMessage","tron_signMessageV2","tron_signTransaction","tron_signAndSendTransactionContract","tron_signAndSendTransactionApprove","tronWeb","TronWeb","trx","verifyMessage","base58Address","verifyMessageV2","isOnlySign","transactionBuilder","sendTrx","getContract","contractAddress","abi","entrys","parameter","triggerSmartContract","verifyADR36Amino","fromBech32","VConsole","allChains","chainsThatCanAddRedirectParam","optionChains","selectedModals","selectedReturnStrategy","selectedDeepLink","selectedLanguage","selectedTheme","TronTransactionPanel","QrcodeVue","BTCPanel","FractalPanel","SuiPanel","testTopic","testPublicKey","testProofPayload","pendingDeepLink","logList","localPubKey","localSecKey","selectedChain","ProofPayloadVerify","showVerifyRow","selectedMethodData","isChecked","reload","computed","selectedChains","initChains","newChains","updatedChains","tab","tabName","initCall","OKXUniversalConnectUI","actionsConfiguration","uiPreferences","onModalStateChange","uri","isPC","items","testTonSdk","blockExplorerUrls","chainName","nativeCurrency","symbol","decimals","dataETH","dataPolygon","types","EIP712Domain","Person","Mail","primaryType","domain","verifyingContract","contents","maxPriorityFeePerGas","maxFeePerGas","gasPrice","gasLimit","image","tonUniversalLog","sendTransactionAlert","fetch","confirm","sendData","adapter","SuiAdapter","suiResult","signAndExecuteTransaction","sui_verifySignature","signPersonalMessage","btcAdapter","btcResult","currentBtcMethod","currentBtcTransaction","hexToBase64","bs64Str","fractalResult","currentFractalMethod","currentFractalTransaction","hexStr","blob","Blob","reader","FileReader","onload","base64Data","readAsDataURL","datatest","firstStr","showUrl","hasEip155","hasSolana","hasSui","hasBtc","hasAptos","hasTon","hasCosmos","nameSpacesChains","optSpaceChains","solanaChains","hasTron","suiChains","btcChains","connectMethod","connectData","requireData","cosmos","tron","tonParams","ton","sui","btc","optData","eip155Chains","signMethods","getCurrentSelectedMethodData","openModalAndSign","openModal","methodList","suiData","currentMethod","userAgentInfo","Agents","flag","isSafariOrChrome","result1","nacl","toBytes","config","AptosConfig","Network","Aptos","simple","sender","functionArguments","Connection","getSolConnect","blockhash","getLatestBlockhash","versionedTransactionMessage","TransactionMessage","payerKey","recentBlockhash","instructions","SystemProgram","transfer","fromPubkey","toPubkey","lamports","compileToV0Message","feePayer","isValid","cosmos_verifySignArbitrary","pub_key","signer","prefixStr","signatureBuffer","uint8Signature","pubKeyValueBuffer","pubKeyUint8Array","uiOptions","eth_verifyMessage","ethAddress","originalMessage","recoveredAddress","ethers","list","verifyList","requestItme","ethMessage","solanaMessage","verifySol","aptosMessage","aptosPublicKey","cosmosMessage","tronMessage","signatureResult","resultObj","verifyPersonalMessageSignature","toSuiAddress","toBase64","newTransaction","created","mounted","scriptTag","createElement","src","getElementsByTagName","appendChild","title","render","app","createApp","App","use","ElementPlus","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","loaded","__webpack_modules__","amdO","deferred","O","chunkIds","priority","notFulfilled","Infinity","getter","d","definition","g","globalThis","Function","prop","Symbol","toStringTag","nmd","paths","children","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}