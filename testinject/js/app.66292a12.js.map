{"version":3,"file":"js/app.66292a12.js","mappings":"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","sources":["webpack://okxconnectdemo/../packages/aptos-provider/src/AptosUtils.js","webpack://okxconnectdemo/../packages/aptos-provider/src/OKXAptosProvider.js","webpack://okxconnectdemo/../packages/aptos-provider/src/index.js","webpack://okxconnectdemo/../packages/core/src/connect/commands.js","webpack://okxconnectdemo/../packages/core/src/connect/connect.js","webpack://okxconnectdemo/../packages/core/src/connect/connectionManager.js","webpack://okxconnectdemo/../packages/core/src/connect/constants.js","webpack://okxconnectdemo/../packages/core/src/connect/engine.js","webpack://okxconnectdemo/../packages/core/src/connect/index.js","webpack://okxconnectdemo/../packages/core/src/connect/jwt.js","webpack://okxconnectdemo/../packages/core/src/connect/jwtconstants.js","webpack://okxconnectdemo/../packages/core/src/connect/sessionUtils.js","webpack://okxconnectdemo/../packages/core/src/connect/storage.js","webpack://okxconnectdemo/../packages/core/src/connect/storageconstants.js","webpack://okxconnectdemo/../packages/core/src/connect/walletConnectionConstants.js","webpack://okxconnectdemo/../packages/core/src/connect/walletConnectionManager.js","webpack://okxconnectdemo/../packages/core/src/connector/appwallet-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/iconnector.js","webpack://okxconnectdemo/../packages/core/src/connector/index.js","webpack://okxconnectdemo/../packages/core/src/connector/inject-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/okxwallet-inject-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/tgwallet-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/ws-connector.js","webpack://okxconnectdemo/../packages/core/src/crypto/crypto.js","webpack://okxconnectdemo/../packages/core/src/index.js","webpack://okxconnectdemo/../packages/core/src/inject/InjectUtils.js","webpack://okxconnectdemo/../packages/core/src/inject/index.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/AptosPrivider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/SolProvider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/eip155Provider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/chains.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/engine.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/json-rpc.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/connect-event.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/connect-wallet.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/wallet-info.js","webpack://okxconnectdemo/../packages/core/src/protocol/constants.js","webpack://okxconnectdemo/../packages/core/src/protocol/error/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/error/okx-connect.error.js","webpack://okxconnectdemo/../packages/core/src/protocol/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/misc.js","webpack://okxconnectdemo/../packages/core/src/utils/call-for-success.js","webpack://okxconnectdemo/../packages/core/src/utils/index.js","webpack://okxconnectdemo/../packages/core/src/utils/log.js","webpack://okxconnectdemo/../packages/core/src/utils/media.js","webpack://okxconnectdemo/../packages/core/src/utils/report.js","webpack://okxconnectdemo/../packages/core/src/utils/reportconstants.js","webpack://okxconnectdemo/../packages/core/src/utils/request.js","webpack://okxconnectdemo/../packages/core/src/utils/safejson.js","webpack://okxconnectdemo/../packages/core/src/utils/stringUtils.js","webpack://okxconnectdemo/../packages/core/src/utils/tma-api.js","webpack://okxconnectdemo/../packages/core/src/utils/url.js","webpack://okxconnectdemo/../packages/core/src/utils/utils.js","webpack://okxconnectdemo/../packages/core/src/utils/web-api.js","webpack://okxconnectdemo/../packages/solana-provider/src/OKXSolanaProvider.js","webpack://okxconnectdemo/../packages/solana-provider/src/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXBtcProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXCosmosProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXStarknetProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXTonProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXTronProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXUniversalProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/sign-client/client.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/ConnectMethodUtils.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/namespaces.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/events.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/values.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/aptos.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/btc.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/cosmos.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/eip155.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcConnection.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/solana.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/starknet.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/sui.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/ton.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/tron.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/misc.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/providers.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/globals.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/misc.js","webpack://okxconnectdemo/./src/App.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue?1b44","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue?e4fb","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue?aa83","webpack://okxconnectdemo/./src/components/StarknetTransactionPanel.vue","webpack://okxconnectdemo/./src/components/StarknetTransactionPanel.vue?1a06","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue?089a","webpack://okxconnectdemo/./src/App.vue?7ccd","webpack://okxconnectdemo/./src/main.js","webpack://okxconnectdemo/webpack/bootstrap","webpack://okxconnectdemo/webpack/runtime/amd options","webpack://okxconnectdemo/webpack/runtime/chunk loaded","webpack://okxconnectdemo/webpack/runtime/compat get default export","webpack://okxconnectdemo/webpack/runtime/create fake namespace object","webpack://okxconnectdemo/webpack/runtime/define property getters","webpack://okxconnectdemo/webpack/runtime/global","webpack://okxconnectdemo/webpack/runtime/hasOwnProperty shorthand","webpack://okxconnectdemo/webpack/runtime/make namespace object","webpack://okxconnectdemo/webpack/runtime/node module decorator","webpack://okxconnectdemo/webpack/runtime/jsonp chunk loading","webpack://okxconnectdemo/webpack/startup"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AptosUtils = void 0;\nclass AptosUtils {\n    static getTransaction(o) {\n        if (\"rawTransaction\" in o) {\n            let transaction = o;\n            if (\"entryFunction\" in transaction.rawTransaction.payload) {\n                let entryFunction = transaction.rawTransaction.payload.entryFunction;\n                let typeArgs = entryFunction.type_args;\n                let typeArguments = new Array();\n                typeArgs.forEach(typeTag => {\n                    typeArguments.push(typeTag.toString());\n                });\n                let realArguments = new Array();\n                this.getTypeArguments(entryFunction.args, realArguments);\n                let i = {\n                    arguments: realArguments,\n                    function: `${entryFunction.module_name.address.data ? entryFunction.module_name.address.toString() : entryFunction.module_name.address}::${entryFunction.module_name.name.identifier ? entryFunction.module_name.name.identifier : entryFunction.module_name.name}::${entryFunction.function_name.identifier ? entryFunction.function_name.identifier : entryFunction.function_name}`,\n                    type: \"entry_function_payload\",\n                    type_arguments: typeArguments\n                };\n                return this.getArguments(i);\n            }\n        }\n        return o;\n    }\n    static getTypeArguments(args, array) {\n        for (let j = 0; j < args.length; j++) {\n            let y = args[j];\n            if (\"values\" in y && y.values != null && y.values instanceof Array) {\n                let subArray = new Array();\n                array.push(subArray);\n                this.getTypeArguments(y.values, subArray);\n            }\n            else {\n                this.dealArrayElements(y, array);\n            }\n        }\n    }\n    static dealArrayElements(e, array) {\n        if (\"value\" in e && e.value != null) {\n            array.push(e.value.toString());\n        }\n        else if (\"data\" in e && e.data != null && e.data instanceof Uint8Array) {\n            return array.push(e.toString());\n        }\n        else {\n            return array.push(e.toString());\n        }\n    }\n    static getArguments(e) {\n        if (\"arguments\" in e) {\n            let t = e.arguments;\n            if (Array.isArray(t)) {\n                let r = new Array();\n                t.forEach(n => {\n                    if (n instanceof Uint8Array) {\n                        let o = new Array();\n                        n.forEach(i => {\n                            o.push(i);\n                        });\n                        r.push(o);\n                    }\n                    else\n                        r.push(n);\n                });\n                e = Object.assign(Object.assign({}, e), { arguments: r });\n            }\n        }\n        return e;\n    }\n}\nexports.AptosUtils = AptosUtils;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXAptosProvider = void 0;\nconst buffer_1 = require(\"buffer\");\nconst AptosUtils_1 = require(\"./AptosUtils\");\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXAptosProvider {\n    constructor(provider) {\n        this.chainsSet = new Set();\n        this.provider = provider;\n        this.getConnectedNamespace();\n    }\n    get defaultNetwork() {\n        let network = this.provider.requestDefaultChainWithNamespace(core_1.NameSpaceKeyAptos);\n        return network;\n    }\n    get currentChainId() {\n        return `aptos:${this.defaultNetwork}`;\n    }\n    getRealChainId(chainId) {\n        // if (chainId == \"aptos:mainnet\") {\n        //     return \"aptos:637\"\n        // } else if (chainId == \"movement:testnet\") {\n        //     return \"aptos:70000060\"\n        // }\n        if (chainId == null) {\n            if (this.chainsSet.size == 1) {\n                return this.currentChainId;\n            }\n            else {\n                throw new Error(\"connected to multiple aptos chains,chainId can not be null\");\n            }\n        }\n        else {\n            return chainId;\n        }\n    }\n    getConnectedNamespace() {\n        var _a, _b, _c;\n        (_c = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces) === null || _b === void 0 ? void 0 : _b['aptos']) === null || _c === void 0 ? void 0 : _c.chains.forEach(chain => {\n            this.chainsSet.add(chain);\n        });\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n        chainId = this.getRealChainId(chainId);\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['aptos']) === null || _b === void 0 ? void 0 : _b.accounts[0];\n        if (chainId != null) {\n            account = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces['aptos']) === null || _d === void 0 ? void 0 : _d.accounts.filter(function (account) {\n                return account.startsWith(chainId);\n            })[0];\n        }\n        (0, core_1.logDebug)(\"getAccount\", account);\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        console.log(\"aptos_publicKey\", (_f = (_e = this.provider.session) === null || _e === void 0 ? void 0 : _e.namespaces['aptos']) === null || _f === void 0 ? void 0 : _f.extra);\n        let extra = (_j = (_h = (_g = this.provider.session) === null || _g === void 0 ? void 0 : _g.namespaces['aptos']) === null || _h === void 0 ? void 0 : _h.extra) === null || _j === void 0 ? void 0 : _j[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n            if (publicKey != undefined && publicKey.startsWith(\"0x\")) {\n                publicKey = publicKey.substring(2);\n            }\n            console.log(\"aptos_publicKey\", publicKey);\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address,\n            publicKey: publicKey\n        };\n    }\n    signMessage(payload, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            let realChain = this.getRealChainId(chainId);\n            try {\n                let prefix = \"APTOS\";\n                let address = (_a = this.getAccount(realChain)) === null || _a === void 0 ? void 0 : _a.address;\n                let message = \"\", nonce = \"\";\n                var fullMessage = prefix;\n                let application = window.location.protocol + \"//\" + window.location.hostname;\n                if (\"address\" in payload && payload.address) {\n                    fullMessage += \"\\naddress: \" + address;\n                }\n                if (\"application\" in payload && payload.application) {\n                    fullMessage += \"\\napplication: \" + application;\n                }\n                if (\"chainId\" in payload && payload.chainId) {\n                    let chainId = 1;\n                    if (realChain == \"aptos:mainnet\") {\n                        chainId = 1;\n                    }\n                    else if (realChain == \"movement:testnet\") {\n                        chainId = 2;\n                    }\n                    fullMessage += \"\\nchainId: \" + chainId;\n                }\n                if (\"message\" in payload) {\n                    fullMessage += \"\\nmessage: \" + payload.message;\n                    message = payload.message;\n                }\n                if (\"nonce\" in payload) {\n                    fullMessage += \"\\nnonce: \" + payload.nonce;\n                    nonce = payload.nonce;\n                }\n                console.log(\"signMessage\", fullMessage);\n                const buffer = buffer_1.Buffer.from(fullMessage);\n                const hex = this.bufferToHex(buffer);\n                let data = {\n                    \"chainId\": realChain,\n                    \"method\": \"aptos_signMessage\",\n                    \"params\": {\n                        \"message\": hex,\n                    },\n                    injectParams: payload,\n                };\n                let signedMessage = yield this.provider.request(data, realChain);\n                if ('result' in signedMessage) {\n                    let successData = signedMessage.result;\n                    let signStr = successData;\n                    if (successData.startsWith(\"0x\")) {\n                        signStr = successData.slice(2, successData.length);\n                    }\n                    // try {\n                    //     let publicKey = this.getAccount(realChain)?.publicKey\n                    //     if (publicKey != undefined) {\n                    //         console.log(\"apt_signMessage\", Buffer.from(successData, 'hex'))\n                    //         console.log(\"apt_signMessage\", successData)\n                    //\n                    //         const verified = nacl.sign.detached.verify(\n                    //             Buffer.from(fullMessage),\n                    //             Buffer.from(signStr, 'hex'),\n                    //             Buffer.from(publicKey, 'hex'),\n                    //         );\n                    //         console.log(\"signMessage\", verified);\n                    //     }\n                    // } catch (_) {\n                    // }\n                    return new Promise((resolve, reject) => {\n                        resolve({\n                            address: address,\n                            application: application,\n                            chainId: realChain,\n                            fullMessage: fullMessage,\n                            message: message,\n                            nonce: nonce,\n                            prefix: prefix,\n                            signature: signStr,\n                            // verified:verified\n                        });\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        if (\"error\" in signedMessage) {\n                            resolve(signedMessage.error);\n                        }\n                    });\n                }\n            }\n            catch (error) {\n                console.error('方法数据回调失败 --Error--', error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    signTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let tx = AptosUtils_1.AptosUtils.getTransaction(transaction);\n            console.log(\"signTransaction\", tx);\n            let realChain = this.getRealChainId(chainId);\n            try {\n                let signature = yield this.provider.request({\n                    \"method\": \"aptos_signTransaction\",\n                    \"params\": tx\n                }, realChain);\n                if ('result' in signature) {\n                    let successData = signature.result;\n                    return new Promise((resolve, reject) => {\n                        resolve(buffer_1.Buffer.from(successData));\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        reject(signature);\n                    });\n                }\n            }\n            catch (error) {\n                (0, core_1.logDebug)(\"getSignedTransaction\", error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    signAndSubmitTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let tx = AptosUtils_1.AptosUtils.getTransaction(transaction);\n            console.log(\"signAndSubmitTransaction\", tx);\n            let realChain = this.getRealChainId(chainId);\n            try {\n                let signature = yield this.provider.request({\n                    \"method\": \"aptos_signAndSubmitTransaction\",\n                    \"params\": tx\n                }, realChain);\n                if ('result' in signature) {\n                    let successData = signature.result;\n                    return new Promise((resolve, reject) => {\n                        resolve(successData);\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        reject(signature);\n                    });\n                }\n            }\n            catch (error) {\n                (0, core_1.logDebug)(\"getSignedTransaction\", error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    bufferToHex(buf) {\n        return \"0x\" + buffer_1.Buffer.from(buf).toString(\"hex\");\n    }\n}\nexports.OKXAptosProvider = OKXAptosProvider;\nexports.default = OKXAptosProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXAptosProvider = void 0;\nvar OKXAptosProvider_1 = require(\"./OKXAptosProvider\");\nObject.defineProperty(exports, \"OKXAptosProvider\", { enumerable: true, get: function () { return OKXAptosProvider_1.OKXAptosProvider; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_METHOD_BATCH_FETCHMSG = exports.CONNECT_METHOD_FETCHMSG = exports.CONNECT_METHOD_RECEIVE = exports.CONNECT_METHOD_UNSUB = exports.CONNECT_METHOD_SUB = exports.CONNECT_METHOD_PUBLISH = exports.CONNECT_METHOD_LOGIN = exports.CONNECT_METHOD_PUSH = void 0;\n// --------------- ws methods -------------\nexports.CONNECT_METHOD_PUSH = \"push\";\nexports.CONNECT_METHOD_LOGIN = \"login\";\nexports.CONNECT_METHOD_PUBLISH = \"publish\";\nexports.CONNECT_METHOD_SUB = \"subscribe\";\nexports.CONNECT_METHOD_UNSUB = \"unsubscribe\";\nexports.CONNECT_METHOD_RECEIVE = \"receive\";\nexports.CONNECT_METHOD_FETCHMSG = \"fetchMessages\";\nexports.CONNECT_METHOD_BATCH_FETCHMSG = \"batchFetchMessages\";\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXWalletConnector = void 0;\nconst constants_1 = require(\"./constants\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils\");\nconst utils_2 = require(\"../utils/utils\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst log = __importStar(require(\"../utils/log\"));\nconst protocol_1 = require(\"../protocol\");\nconst report_1 = require(\"../utils/report\");\nconst WS = (0, utils_2.resolveWebSocketImplementation)();\nclass OKXWalletConnector {\n    constructor(url) {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.state = constants_1.ConnectorState.InitState;\n        this.selectedUrlIndex = 0;\n        // reconnect\n        this.retryCount = 0;\n        // default timeout limit: 8 sec\n        this.timeOutLimit = 8000;\n        if (!(0, utils_2.checkWSUrl)(url)) {\n            throw new Error(`CONNECTOR: invalid url ${url}`);\n        }\n        this.url = url;\n        this.heartbeatTimer = null;\n        this.connectionTimeoutTimer = null;\n        this.connectURLStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY + storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n    }\n    get connecting() {\n        return this.state == constants_1.ConnectorState.Connecting;\n    }\n    // ------------------------------------------------------\n    onPayload(e) {\n        if (typeof e.data === \"undefined\")\n            return;\n        log.logDebug('get received data');\n        log.logDebug(e);\n        if (typeof e.data === \"string\") {\n            let rsp = e.data;\n            if (rsp === \"pong\") {\n                log.logDebug(`CONNECT: receive pong ${Date.now().toString()}`);\n                return;\n            }\n        }\n        this.events.emit(\"payload\", e.data);\n    }\n    onClose(event) {\n        var _a;\n        log.logDebug('socket get closed: ', (_a = this.socket) === null || _a === void 0 ? void 0 : _a.url, event.code);\n        this.socket = undefined;\n        this.events.emit(\"close\", event);\n    }\n    onError(id, e) {\n        const payload = { id: id, msg: e.toString() };\n        this.events.emit(\"payload\", payload);\n    }\n    onopen(socket) {\n        socket.onmessage = (event) => this.onPayload(event);\n        socket.onclose = (event) => this.onClose(event);\n        this.socket = socket;\n        this.state = constants_1.ConnectorState.Connected;\n        this.events.emit(\"open\");\n    }\n    // ------------------------------------------------------\n    emitError(errorEvent) {\n        this.events.emit(\"fail\", errorEvent);\n    }\n    // ------------------------------------------------------\n    heartbeat() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.heartbeatTimer) {\n                clearTimeout(this.heartbeatTimer);\n            }\n            if (this.state != constants_1.ConnectorState.Connected && this.state != constants_1.ConnectorState.OnError) {\n                log.logDebug('heart beat close');\n                return;\n            }\n            if (!this.socket) {\n                log.logDebug('socket not exist');\n                if (this.state == constants_1.ConnectorState.Connected || this.state == constants_1.ConnectorState.OnError) {\n                    log.logDebug('socket reconnect by heartbeat');\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                        this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n                    }\n                }\n                return;\n            }\n            if (this.socket.readyState !== WebSocket.OPEN) {\n                log.logDebug('socket not ready');\n                if (this.state == constants_1.ConnectorState.Connected || this.state == constants_1.ConnectorState.OnError) {\n                    log.logDebug('socket reconnect by heartbeat with state', this.state, this.socket.readyState);\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                        this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n                    }\n                }\n                return;\n            }\n            log.logDebug(`send ping heart beat: ${Date.now().toString()}, ${this.socket}`);\n            this.socket.send(\"ping\");\n            this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n        });\n    }\n    registOpen(url = this.url, inRetry = false) {\n        if (!(0, utils_2.checkWSUrl)(url)) {\n            throw new Error(`CONNECTOR: invalid url ${url}`);\n        }\n        this.url = url;\n        if (!inRetry) {\n            log.logDebug('Connection connect:', this.url, new Date().toUTCString());\n        }\n        this.state = constants_1.ConnectorState.Connecting;\n        const origin = new URLSearchParams(url).get(\"origin\");\n        return new Promise((resolve, reject) => {\n            const socket = new WS(url, []);\n            log.logDebug('Connection connect Begin:', this.url, new Date().toUTCString());\n            this.startTimeOutTimer(socket);\n            if ((0, utils_2.hasBuiltInWebSocket)()) {\n                log.logDebug('Add socket error handler');\n                socket.onerror = () => {\n                    reject(new Error('socket error'));\n                    socket.close();\n                };\n            }\n            else {\n                log.logDebug('Add socket error handler');\n                socket.on(\"error\", () => {\n                    reject(new Error('socket error'));\n                    socket.close();\n                });\n            }\n            socket.onopen = () => {\n                log.logDebug('socket opened');\n                this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.FINISHED);\n                this.onopen(socket);\n                this.heartbeat();\n                resolve(socket);\n            };\n        });\n    }\n    checkMaxRetry() {\n        log.logDebug('current retry count:', this.retryCount, 'of', constants_1.OKXCONNECTOR_WS_URL_LIST.length);\n        return this.retryCount > (constants_1.OKXCONNECTOR_WS_URL_LIST.length * 3);\n    }\n    connectionTryNext() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.checkMaxRetry()) {\n                //TODO: mark descent\n                this.retryCount += 1;\n                let nextUrl = this.getNextSelectUrl();\n                log.logDebug('Connection retry:', nextUrl, new Date().toUTCString());\n                return this.registOpen(nextUrl, true);\n            }\n            else {\n                log.logDebug('Max Connection retry ', this.retryCount, new Date().toUTCString());\n            }\n        });\n    }\n    startTimeOutTimer(socket) {\n        if (this.connectionTimeoutTimer) {\n            this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.CANCELED);\n        }\n        this.pendingSocket = socket;\n        this.connectionTimeoutTimer = setTimeout(() => {\n            if (this.pendingSocket) {\n                this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.TIME_OUT);\n            }\n        }, this.timeOutLimit);\n    }\n    resetTimeOutTimer(code) {\n        var _a;\n        // 1. cancel connecting pending sockets\n        if (code == constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.TIME_OUT) {\n            // 2. remove timer\n            clearTimeout(this.connectionTimeoutTimer);\n            (_a = this.pendingSocket) === null || _a === void 0 ? void 0 : _a.close();\n            this.pendingSocket = undefined;\n            log.reportEvent(report_1.OKXReportType.LOG, 'timeout', this.retryCount.toString());\n            throw new Error('socket timeout');\n        }\n        else {\n            this.pendingSocket = undefined;\n            // 2. remove timer\n            clearTimeout(this.connectionTimeoutTimer);\n        }\n    }\n    cacheSuccessUrlSelect() {\n        this.connectURLStorage.saveContent(this.selectedUrlIndex.toString(), storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n    }\n    // private getSuccessUrlSelect(): string {\n    //     let selectIndex = this.connectURLStorage.getItem(OKXCONNECTOR_CACHE_KEY)?.content\n    //     let index = 0\n    //     if (selectIndex) {\n    //         index = Number(selectIndex)\n    //     }\n    //     this.selectedUrlIndex = index\n    //     return OKXCONNECTOR_WS_URL_LIST[index]\n    // }\n    getNextSelectUrl() {\n        this.selectedUrlIndex += 1;\n        this.selectedUrlIndex = this.selectedUrlIndex % constants_1.OKXCONNECTOR_WS_URL_LIST.length;\n        return constants_1.OKXCONNECTOR_WS_URL_LIST[this.selectedUrlIndex];\n    }\n    // ------------------------------------------------------\n    onVisibleChanged() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (document.visibilityState === 'visible') {\n                // check and restore\n                log.logDebug(`get changed ${this.state}, ${this.socket}`);\n                if (this.state == constants_1.ConnectorState.Connected && typeof this.socket === \"undefined\") {\n                    log.logDebug('CONNECTION need reopen');\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                    }\n                    return;\n                }\n            }\n        });\n    }\n    tryRegistOpen() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            if (this.connecting) {\n                log.logDebug('tryRegistOpen => connecting state');\n                return new Promise((resolve, reject) => {\n                    this.events.once('fail', (e) => {\n                        log.logDebug('tryRegistOpen => connecting fail listener', e);\n                        return reject(e);\n                    });\n                    this.events.once(\"open\", () => {\n                        if (typeof this.socket == \"undefined\") {\n                            return reject(new Error(\"Connect lost\"));\n                        }\n                        return resolve(this.socket);\n                    });\n                });\n            }\n            log.logDebug('tryRegistOpen => try registOpen until retry limit is hit');\n            let inRetry = false;\n            while (!this.checkMaxRetry() && !this.socket) {\n                try {\n                    log.logDebug('tryRegistOpen => call registOpen, try count:', this.retryCount, inRetry);\n                    yield this.registOpen(url, inRetry);\n                }\n                catch (err) {\n                    log.logDebug('tryRegistOpen => registOpen failed', err);\n                    this.retryCount += 1;\n                    url = this.getNextSelectUrl();\n                    inRetry = true;\n                }\n            }\n            log.logDebug('tryRegistOpen => exit while loop', this.retryCount, this.socket);\n            if (!this.socket && this.checkMaxRetry()) {\n                log.logDebug('tryRegistOpen => failed to open a socket', this.retryCount, this.socket);\n                this.retryCount = 0;\n                this.state = constants_1.ConnectorState.OnError;\n                this.emitError(new Error('tryRegistOpen failed'));\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CONNECTION_ERROR, \"Failed to connect\");\n            }\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this.tryRegistOpen();\n                // listener for reconnect\n                document.removeEventListener('visibilitychange', this.onVisibleChanged.bind(this));\n                document.addEventListener('visibilitychange', this.onVisibleChanged.bind(this));\n            }\n            catch (e) {\n                log.logDebug('connect => failed to connect', e);\n                throw e;\n            }\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.state = constants_1.ConnectorState.Disconnected;\n            return new Promise((resolve, reject) => {\n                if (typeof this.socket === \"undefined\") {\n                    // reject(new Error(\"CONNECTION closed\"))\n                    resolve();\n                    return;\n                }\n                this.socket.onclose = (event) => {\n                    this.onClose(event);\n                    resolve();\n                };\n                this.socket.close();\n                if (this.heartbeatTimer) {\n                    clearTimeout(this.heartbeatTimer);\n                }\n            });\n        });\n    }\n    currentStatus() {\n        return {\n            state: this.state,\n            url: this.url\n        };\n    }\n    // event will be jsonstr\n    /// @params Promise\n    /// @params success/failed callback\n    addListener(event, decrypt, success, failed) {\n        if (this.listenPayloadHandler) {\n            this.events.removeListener(\"payload\", this.listenPayloadHandler);\n        }\n        this.listenPayloadHandler = (e) => {\n            var _a;\n            log.logDebug(`<<< get payload ${e}`);\n            let parsedEvent = (0, utils_1.safeJsonParse)(e);\n            // parse the data to chose success or failed\n            if (parsedEvent.params && parsedEvent.params.data) {\n                let rawMsg = (_a = parsedEvent.params.data) === null || _a === void 0 ? void 0 : _a.message;\n                if (rawMsg) {\n                    try {\n                        let msg = decrypt(rawMsg);\n                        if (msg === undefined) {\n                            log.logDebug(`CONNECT: decrypt undefined`);\n                            failed(event, 'Decrypt undefined');\n                        }\n                        else {\n                            success(event, msg);\n                        }\n                    }\n                    catch (e) {\n                        log.logDebug(`CONNECT: decrypt failed: ${e}`);\n                        failed(event, e.message);\n                    }\n                }\n            }\n        };\n        this.events.on(\"payload\", this.listenPayloadHandler);\n        if (this.failHandler) {\n            this.events.removeListener(\"fail\", this.failHandler);\n        }\n        this.failHandler = (e) => {\n            if (e) {\n                log.logDebug(`CONNECT failed: ${e}`);\n                failed(event, e.message);\n            }\n            else {\n                failed(event, \"Unkonow error\");\n            }\n        };\n        this.events.on(\"fail\", this.failHandler);\n    }\n    addPackageParse(callback) {\n        if (this.payloadHandler) {\n            this.events.removeListener(\"payload\", this.payloadHandler);\n        }\n        this.payloadHandler = (e) => __awaiter(this, void 0, void 0, function* () {\n            // parse the data to chose success or failed\n            log.logDebug(`CONNECTION @[${new Date().toUTCString()}] <<<< received e:${e}`);\n            let param = (0, utils_1.safeJsonParse)(e);\n            yield callback(param);\n        });\n        this.events.on(\"payload\", this.payloadHandler);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    send(doLogin, payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (typeof this.socket === \"undefined\") {\n                    log.logDebug(`>>> send payload undefined ${payload}`);\n                    // this.socket = await this.registOpen();\n                    yield doLogin();\n                }\n                log.logDebug(`CONNECTION @[${new Date().toUTCString()}]>>> send payload ${(0, utils_1.safeJsonStringify)(payload)}`);\n                if (this.socket) {\n                    this.socket.send((0, utils_1.safeJsonStringify)(payload));\n                }\n            }\n            catch (e) {\n                this.onError(payload.id, e);\n            }\n        });\n    }\n    getMsgPayloadFromHistory(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof msg === \"undefined\")\n                return;\n            let tmpMsg = {\n                params: {\n                    data: msg\n                }\n            };\n            let jsonstr = (0, utils_1.safeJsonStringify)(msg);\n            log.logDebug('get received data from history');\n            log.logDebug(jsonstr);\n            jsonstr = (0, utils_1.safeJsonStringify)(tmpMsg);\n            this.events.emit(\"payload\", jsonstr);\n        });\n    }\n    onOpen(callback) {\n        if (this.openHandler) {\n            this.events.removeListener(\"open\", this.openHandler);\n        }\n        this.openHandler = () => __awaiter(this, void 0, void 0, function* () {\n            log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> ws opened: `);\n            yield callback();\n        });\n        this.events.on(\"open\", this.openHandler);\n        this.cacheSuccessUrlSelect();\n    }\n}\nexports.OKXWalletConnector = OKXWalletConnector;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionManager = void 0;\nconst connect_1 = require(\"./connect\");\nconst commands_1 = require(\"./commands\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst jwtconstants_1 = require(\"./jwtconstants\");\nconst constants_1 = require(\"./constants\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils/utils\");\nconst crypto_1 = require(\"../crypto/crypto\");\nconst jwt_1 = require(\"./jwt\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst report_1 = require(\"../utils/report\");\nconst url_1 = require(\"../utils/url\");\nclass ConnectionManager {\n    constructor(appname = undefined) {\n        this.events = new eventemitter3_1.EventEmitter();\n        // local storage\n        this.connectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY_DAPP + appname, storageconstants_1.OKXCONNECTOR_CACHE_KEY_DAPP);\n        this.crypto = new crypto_1.SessionCrypto();\n        let inTMA = (0, url_1.isInTMA)();\n        (0, log_1.logDebug)('do init:', inTMA);\n        log.reportLog('connection manager do init');\n        if (inTMA) {\n            // recovery from cache\n            const keyPairInfo = this.getCachedCryptoKeyPair();\n            (0, log_1.logDebug)('use same pk:', keyPairInfo);\n            this.crypto = new crypto_1.SessionCrypto(keyPairInfo);\n        }\n        this.jwtKeyPair = this.getCachedJWTKeyPair();\n        this.saveJWTKeyPair(this.jwtKeyPair);\n        // wss connection\n        this.connector = new connect_1.OKXWalletConnector(constants_1.OKXCONNECTOR_WS_URL_1);\n        this.packageId = Date.now();\n        // connection state\n        this.connectedWalletPK = '';\n        this.currentTopic = '';\n        log.logDebug(`this.connectedWalletPK  constructor   ${this.connectedWalletPK}`);\n    }\n    refreshPackageId() {\n        this.packageId = Date.now();\n    }\n    saveCryptoKeyPair(keyPair) {\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(keyPair);\n        // encrypt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_CRYPTO_KEY);\n    }\n    getCachedCryptoKeyPair() {\n        // decrypt kp\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_CRYPTO_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            log.logDebug('get cached crypto key:');\n            log.logDebug(content);\n            let keyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            return keyPairInfo;\n        }\n        else {\n            this.connectStorage.clearCache();\n        }\n        return null;\n    }\n    saveJWTKeyPair(keyPair) {\n        var strkeyPair = {\n            publicKey: (0, utils_1.toHexString)(keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(keyPair.secretKey)\n        };\n        log.logDebug('save jwt kp');\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(strkeyPair);\n        log.logDebug(cacheInfo);\n        // encrypt jwt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_JWT_KEY);\n    }\n    getCachedJWTKeyPair() {\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            // TODO: decrypt jwt kp\n            log.logDebug('get cached jwt kp:');\n            log.logDebug(content);\n            let strKeyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            log.logDebug('save jwt kp');\n            log.logDebug(strKeyPairInfo);\n            var keyPair = {\n                publicKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.publicKey),\n                secretKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.secretKey)\n            };\n            return keyPair;\n        }\n        else {\n            return (0, jwt_1.generateKeyPair)();\n        }\n    }\n    isWalletPKReady() {\n        log.logDebug(`isWalletPKReady  ===> ${this.connectedWalletPK}`);\n        return this.connectedWalletPK.length > 0;\n    }\n    makeJWT(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, jwt_1.signJWT)(topic, jwtconstants_1.OKXCONNECTOR_JWT_SIDE, jwtconstants_1.OKXCONNECTOR_JWT_TTL, // 24h\n            this.jwtKeyPair);\n        });\n    }\n    parsePackage(input_1) {\n        return __awaiter(this, arguments, void 0, function* (input, ignoreACK = false) {\n            var _a, _b, _c, _d, _e;\n            this.events.emit(input.id, input);\n            // send back ACK\n            if (!ignoreACK) {\n                yield this.sendACK(input.id, true);\n                let topic = (_a = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE)) === null || _a === void 0 ? void 0 : _a.content;\n                if (topic) {\n                    let inputObj = input;\n                    if ((_c = (_b = inputObj.params) === null || _b === void 0 ? void 0 : _b.data) === null || _c === void 0 ? void 0 : _c.messageId) {\n                        this.refreshPackageId();\n                        yield this.sendReceive(this.packageId.toString(), (_e = (_d = inputObj.params) === null || _d === void 0 ? void 0 : _d.data) === null || _e === void 0 ? void 0 : _e.messageId, topic);\n                    }\n                }\n            }\n        });\n    }\n    restoreConnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.reportLog('connection manager restore connection');\n            log.logDebug(`connectionManager  restoreConenct   ${topic}`);\n            if ((typeof topic !== 'string') || topic.length === 0) {\n                throw new Error('CONNECTION: invalid topic');\n            }\n            log.logDebug(`connectionManager  restoreConenct   disconnect`);\n            yield this.disconnect(true);\n            this.connectStorage.saveContent(topic, storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`connectionManager  restoreConenct   conect`);\n            yield this.connect(true);\n        });\n    }\n    getConnectInfo() {\n        var topic = (0, utils_1.generateTopic)();\n        log.logDebug(`generate topic token: ${topic}`);\n        log.reportLog('connection manager generate connection info');\n        this.currentTopic = topic;\n        const info = {\n            channelId: topic,\n            clientId: this.crypto.stringifyKeypair().publicKey,\n        };\n        return info;\n    }\n    connect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            this.timeLog = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---enter->\", this.timeLog);\n            log.reportLog('connection manager begin connect');\n            let lastConnectId = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            //1. generate topic & jwt\n            var topic = this.currentTopic;\n            log.logDebug(`generate topic token: ${topic}`);\n            // crypto keypair\n            if (fromRestore) {\n                if (typeof lastConnectId !== 'undefined' && lastConnectId !== null) {\n                    log.logDebug(`read last connect id: ${lastConnectId}`);\n                    topic = lastConnectId.content;\n                }\n                var cachedSenderPublicKey = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                if (cachedSenderPublicKey) {\n                    this.connectedWalletPK = cachedSenderPublicKey.content;\n                    (0, log_1.logDebug)(`connectionManager connect() this.connectedWalletPK : ${this.connectedWalletPK}`);\n                }\n                log.reportLog('connection manager do restore connection');\n            }\n            if (fromRestore) {\n                // recovery from cache\n                const keyPairInfo = this.getCachedCryptoKeyPair();\n                if (keyPairInfo) {\n                    this.crypto = new crypto_1.SessionCrypto(keyPairInfo);\n                }\n            }\n            log.logDebug(`use crypto client id: ${this.crypto.stringifyKeypair().publicKey}`);\n            // cache topic\n            this.connectStorage.saveContent(topic, storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            var jwtToken = yield this.makeJWT(topic);\n            log.logDebug(`generate jwt token: ${jwtToken}`);\n            this.connectStorage.saveContent(jwtToken, 'jwt');\n            return new Promise((resolve, reject) => {\n                // 1. when websocket opened\n                this.connector.onOpen(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug(`1. connector on open`);\n                    log.reportLog('1. connect ws open');\n                    const timeOne = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---open->\", timeOne - this.timeLog);\n                    //2. send jwt to login\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when login');\n                            log.reportLog('2. connect login failed');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // throw error\n                            reject(error);\n                        }\n                        //3. send subscribe\n                        this.refreshPackageId();\n                        this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                            // ack\n                            if (rsp && rsp.error) {\n                                log.logError('failed when subscribe');\n                                log.reportLog('3. connect subscribe failed');\n                                yield this.connector.disconnect();\n                                var error = new Error();\n                                error.message = rsp.error.message;\n                                error.name = rsp.error.code.toString();\n                                // throw error\n                                reject(error);\n                            }\n                            this.refreshPackageId();\n                            log.logDebug(`4. subscribe callback then send fetch: ${this.packageId}`);\n                            log.reportLog('4. subscribe callback then send fetch');\n                            const timeF = new Date().getTime();\n                            (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n                            // 4. fetch messages\n                            yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                            resolve();\n                        }));\n                        log.logDebug(`3. login callback then send subscribe: ${this.packageId}`);\n                        log.reportLog('3. connect subscribe failed');\n                        const timeTh = new Date().getTime();\n                        (0, log_1.logDebug)(\"ConnectTime---login callback->\", timeTh - this.timeLog);\n                        yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                            log.logDebug('CONNECT: reconnect before send');\n                            yield this.connector.connect()\n                                .catch((err) => {\n                                (0, log_1.logDebug)('ConnectionManager connect error', err);\n                                reject(err);\n                            });\n                        }), {\n                            id: this.packageId.toString(),\n                            jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                            method: commands_1.CONNECT_METHOD_SUB,\n                            params: {\n                                topic: topic\n                            }\n                        });\n                    }));\n                    log.logDebug(`2. login called`);\n                    log.reportLog('2. connection manager connect call login');\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        yield this.connector.connect()\n                            .catch((err) => {\n                            (0, log_1.logDebug)('ConnectionManager connect error', err);\n                            reject(err);\n                        });\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_LOGIN,\n                        params: {\n                            token: jwtToken\n                        }\n                    });\n                    // 4. listen when dapp back to front, receive wallet public key\n                    this.connector.addPackageParse((event) => {\n                        var _a;\n                        log.logDebug(`connect: parse package`);\n                        log.logDebug(event);\n                        if (!(\"params\" in event) || !(\"data\" in event[\"params\"])) {\n                            this.parsePackage(event, true);\n                            return;\n                        }\n                        let rawMsg = (_a = event.params.data) === null || _a === void 0 ? void 0 : _a.message;\n                        if (typeof rawMsg !== 'undefined') {\n                            rawMsg = rawMsg.replace(/'/g, '\"');\n                            let parsedMessage = (0, safejson_1.safeJsonParse)(rawMsg);\n                            if (typeof parsedMessage !== 'string' && \"clientId\" in parsedMessage && parsedMessage.clientId && parsedMessage.clientId.length > 0) {\n                                this.connectedWalletPK = parsedMessage.clientId;\n                                log.logDebug(`this.connectedWalletPK  addPackageParse   ${this.connectedWalletPK}`);\n                                // exchange sender public key\n                                // cache wallet public key\n                                this.connectStorage.saveContent(this.connectedWalletPK, storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                                // cache crypto keypair\n                                this.saveCryptoKeyPair(this.crypto.stringifyKeypair());\n                            }\n                        }\n                        // ignore receive echo\n                        this.parsePackage(event, event.method === commands_1.CONNECT_METHOD_RECEIVE);\n                    });\n                }));\n                this.connector.connect().catch((err) => {\n                    (0, log_1.logDebug)('ConnectionManager connect error', err);\n                    reject(err);\n                });\n            });\n        });\n    }\n    disconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            yield this.connector.disconnect();\n            log.reportLog('connect disconnect');\n            //clean cached topic\n            //如果是恢复连接，就不清理解密public key\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            if (!fromRestore) {\n                this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                this.connectedWalletPK = '';\n                (0, log_1.logDebug)(`connectionManager disconnect() this.connectedWalletPK : ${this.connectedWalletPK}`);\n            }\n        });\n    }\n    addListener(event, success, fail) {\n        this.connector.addListener((0, safejson_1.safeJsonStringify)(event), (rawMsg) => {\n            rawMsg = rawMsg.replace(/'/g, '\"');\n            log.logDebug(`addListener ===> ${rawMsg}`);\n            if (typeof rawMsg !== 'undefined') {\n                var msgObj = (0, safejson_1.safeJsonParse)(rawMsg);\n                var msg = msgObj.message;\n                let result;\n                if (msg.trimStart().startsWith('{')) {\n                    result = msg;\n                }\n                else {\n                    if (msgObj.clientId && msgObj.clientId.length > 0) {\n                        this.connectedWalletPK = msgObj.clientId;\n                        this.connectStorage.saveContent(this.connectedWalletPK, storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                        log.logDebug(`this.connectedWalletPK  addListener   ${this.connectedWalletPK}`);\n                        log.logDebug(`this.cryptoKey  addListener   ${(0, utils_1.toHexString)(this.crypto.keyPair.publicKey)}`);\n                        // cache crypto keypair\n                        this.saveCryptoKeyPair(this.crypto.stringifyKeypair());\n                    }\n                    result = this.crypto.decrypt(msg, this.connectedWalletPK);\n                }\n                log.logDebug(`addListener ===> ${result}`);\n                return result;\n            }\n            return undefined;\n        }, success, fail);\n    }\n    sendRaw(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.logDebug(`message send =====> ${msg}`);\n            log.reportLog('connect send raw msg');\n            let message = msg;\n            log.logDebug(`message send =====encrypt message.length>>>> ${message.length}`);\n            // only one topic\n            let topic = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`message send =====topic>>>> ${topic === null || topic === void 0 ? void 0 : topic.content}`);\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                method: commands_1.CONNECT_METHOD_PUBLISH,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                params: {\n                    message: {\n                        topic: topic === null || topic === void 0 ? void 0 : topic.content,\n                        message: message,\n                        ttl: constants_1.OKXCONNECTOR_MESSAGE_TTL\n                    }\n                } // crypted\n            };\n            this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                // ack\n                if (rsp && rsp.error) {\n                    log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                }\n                else if (rsp && !rsp.error) {\n                    log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                }\n            }));\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n            return this.packageId;\n        });\n    }\n    send(msg_1) {\n        return __awaiter(this, arguments, void 0, function* (msg, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL) {\n            // make send msg payload\n            log.logDebug(`message send =====> ${msg}`);\n            log.reportLog('connect send msg');\n            if (!this.isWalletPKReady()) {\n                // channel not ready\n                throw new Error('connection not finish');\n            }\n            let message = this.crypto.encrypt(msg, this.connectedWalletPK);\n            log.logDebug(`message send =====encrypt message.length>>>> ${message.length}`);\n            log.reportEvent(report_1.OKXReportType.LOG, 'msg_size', message.length.toString());\n            // only one topic\n            let topic = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`message send =====topic>>>> ${topic === null || topic === void 0 ? void 0 : topic.content}`);\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                method: commands_1.CONNECT_METHOD_PUBLISH,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                params: {\n                    message: {\n                        topic: topic === null || topic === void 0 ? void 0 : topic.content,\n                        message: message,\n                        ttl: ttl\n                    }\n                } // crypted\n            };\n            this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                // ack\n                if (rsp && rsp.error) {\n                    log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                }\n                else if (rsp && !rsp.error) {\n                    log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                }\n            }));\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n            return this.packageId;\n        });\n    }\n    sendACK(msgId_1, success_1) {\n        return __awaiter(this, arguments, void 0, function* (msgId, success, reason = undefined) {\n            if (success === true) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    result: true\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n            else if (reason) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    error: {\n                        code: reason.code, //int\n                        message: reason.message\n                    }\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    // send receive\n    sendReceive(msgId, messageId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECEIVE,\n                params: {\n                    data: {\n                        messageId: messageId,\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendConnectSessionInfo(msgId, messageId, topic, params) {\n        return __awaiter(this, void 0, void 0, function* () {\n        });\n    }\n    // send receive\n    // 1. fetch all \n    // 2. send back receive\n    // 3. check has more, if so, repeat from 1st step\n    sendFetchAndConsumeMessages(msgId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(msgId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic == topic) {\n                                let messageId = msg.messageId;\n                                log.reportLog('5. get fetch result');\n                                yield this.connector.getMsgPayloadFromHistory(msg);\n                                // send receive command to relay server\n                                this.refreshPackageId();\n                                yield this.sendReceive(this.packageId.toString(), messageId, topic);\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            log.reportLog('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_FETCHMSG,\n                params: {\n                    data: {\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    cleanCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.reportLog('connection cache clean called');\n            this.connectStorage.clearCache();\n        });\n    }\n    saveSessionContent(key, data) {\n        if (!data) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(data);\n        this.connectStorage.encryptStoreMsg(jsonData, storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n    }\n    getSessionContent(key) {\n        let jsonStr = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        if (jsonStr) {\n            let object = (0, safejson_1.safeJsonParse)(jsonStr);\n            return object;\n        }\n        return undefined;\n    }\n    getCurrentConnectionReady() {\n        return this.isWalletPKReady();\n    }\n}\nexports.ConnectionManager = ConnectionManager;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectorState = exports.CONNECT_JSONRPC_VER = exports.OKXCONNECTOR_MESSAGE_TTL = exports.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE = exports.OKXCONNECTOR_WS_URL_LIST = exports.OKXCONNECTOR_WS_URL_IDX_KEY = exports.OKXCONNECTOR_WS_URL_3 = exports.OKXCONNECTOR_WS_URL_2 = exports.OKXCONNECTOR_WS_URL_1 = exports.EVENT_EMITTER_MAX_LISTENERS = void 0;\nexports.EVENT_EMITTER_MAX_LISTENERS = 10;\nexports.OKXCONNECTOR_WS_URL_1 = \"wss://wsdexpri.okx.com/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_2 = \"wss://wsdexpri.okx.ac/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_3 = \"wss://wsdexpri.coinall.ltd/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_IDX_KEY = \"wuik\";\nexports.OKXCONNECTOR_WS_URL_LIST = [\n    exports.OKXCONNECTOR_WS_URL_1,\n    exports.OKXCONNECTOR_WS_URL_2,\n    exports.OKXCONNECTOR_WS_URL_3,\n];\nexports.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE = {\n    TIME_OUT: 3990,\n    CANCELED: 3991,\n    FINISHED: 3992,\n};\nexports.OKXCONNECTOR_MESSAGE_TTL = 300000;\n// --------------- JSON RPC ---------------\nexports.CONNECT_JSONRPC_VER = \"2.0\";\nexports.ConnectorState = {\n    InitState: 0,\n    Connecting: 1,\n    Connected: 2,\n    Disconnected: 3,\n    OnError: 4,\n};\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Engine = void 0;\nconst protocol_1 = require(\"../protocol\");\nconst utils_1 = require(\"../utils\");\nconst iconnector_1 = require(\"../connector/iconnector\");\nconst ws_connector_1 = require(\"../connector/ws-connector\");\nconst connectionManager_1 = require(\"./connectionManager\");\nconst sessionUtils_1 = require(\"./sessionUtils\");\nconst connector_1 = require(\"../connector\");\nconst wallet_info_1 = require(\"../protocol/connect/wallet-info\");\nclass Engine {\n    constructor(appName) {\n        this.connectors = [];\n        this.useConnector = undefined;\n        this.connectionManager = new connectionManager_1.ConnectionManager(appName);\n        this.addConnectionListener();\n    }\n    isInject() {\n        return this.getConnector() instanceof connector_1.InjectConnector;\n    }\n    getConnector() {\n        if (this.useConnector) {\n            return this.useConnector;\n        }\n    }\n    registerConnector(connectors) {\n        this.connectors = connectors;\n        for (const connector of connectors) {\n            if (connector instanceof ws_connector_1.WsConnector) {\n                connector.setConnectionManager(this.connectionManager);\n            }\n        }\n    }\n    hasWsConnector() {\n        for (const connector of this.connectors) {\n            if (connector instanceof ws_connector_1.WsConnector) {\n                return true;\n            }\n        }\n        return false;\n    }\n    universalConnect(request, sessionConfig, connectInfoAndUrl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.addConnectionListener();\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b, _c, _d;\n                try {\n                    (0, utils_1.logDebug)(\"engine universalConnect request :\", JSON.stringify(request));\n                    (0, utils_1.logDebug)(\"engine universalConnect sessionConfig :\", JSON.stringify(sessionConfig));\n                    let universalRequest = [];\n                    request.forEach((item) => {\n                        let name = item.name;\n                        if (name.startsWith(\"requestAccounts\") || name.startsWith(\"ton\")) {\n                            universalRequest.push(item);\n                        }\n                    });\n                    (0, utils_1.logDebug)(\"engine universalConnect universalRequest :\", JSON.stringify(universalRequest));\n                    const connectInfo = this.connectionManager.getConnectInfo();\n                    const requestId = Date.now().toString();\n                    let openUniversalLink = (_a = sessionConfig.openUniversalUrl) !== null && _a !== void 0 ? _a : false;\n                    const universalConnectRequest = {\n                        protocolVer: Number(protocol_1.tonConnectSdkVersion),\n                        topic: connectInfo.channelId,\n                        clientId: connectInfo.clientId,\n                        requestId: requestId,\n                        dAppInfo: sessionConfig.dappInfo,\n                        requests: universalRequest,\n                        redirect: (_b = sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect) !== null && _b !== void 0 ? _b : \"none\"\n                    };\n                    const base64Encoded = (0, utils_1.encodeConnectParams)(universalConnectRequest);\n                    universalConnectRequest.redirect = (_c = sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect) !== null && _c !== void 0 ? _c : \"none\";\n                    (0, utils_1.logDebug)('engine universalConnect ==>>universalConnectRequest:', JSON.stringify(universalConnectRequest));\n                    var openOKXLink = \"\";\n                    // open app wallet\n                    if (openUniversalLink) {\n                        openOKXLink = (0, utils_1.getOKXLink)(universalConnectRequest, sessionConfig.useMini, sessionConfig.tmaReturnUrl);\n                        (0, utils_1.logDebug)('engine universalConnect ==>>openOKXLink:', openOKXLink);\n                    }\n                    const openMethod = () => {\n                        if (this.connectors.length == 1 && this.connectors[0] instanceof connector_1.OkxwalletInjectConnector) {\n                            return this.connectors[0].openWallet({\n                                connectRequest: universalConnectRequest\n                            });\n                        }\n                        else {\n                            if (sessionConfig.useMini) {\n                                return (0, utils_1.openOKXTMAWalletlinkWithFallback)(openOKXLink);\n                            }\n                            if ((0, utils_1.useShortLink)()) {\n                                return (0, utils_1.openOKXUniversalLink)(openOKXLink);\n                            }\n                            return (0, utils_1.openOKXDeeplinkWithFallback)(openOKXLink);\n                        }\n                    };\n                    (0, utils_1.logDebug)('engine universalConnect ==>>openOKXLink:', openOKXLink);\n                    const isIOS = (0, utils_1.isIos)();\n                    if (isIOS && openUniversalLink) {\n                        (0, utils_1.logDebug)(`engine universalConnect ==>>isIOS: ${isIOS}   openUniversalLink: ${openUniversalLink}`);\n                        openMethod();\n                    }\n                    this.addOnConnectResultListener((response) => {\n                        var _a, _b, _c, _d;\n                        try {\n                            this.addOnConnectResultListener(undefined);\n                            let connectResponse = response;\n                            if (connectResponse.method == \"connect\") {\n                                (0, utils_1.logDebug)(\"engin  universalConnect success connectResponse:>>>\", JSON.stringify(connectResponse));\n                                let namespaces = (0, sessionUtils_1.buildNameSpacesByConnectResponse)(connectResponse);\n                                if (namespaces) {\n                                    let walletName = undefined;\n                                    if (((_b = (_a = connectResponse.payload) === null || _a === void 0 ? void 0 : _a.responses) === null || _b === void 0 ? void 0 : _b[0]) && \"walletName\" in connectResponse.payload.responses[0]) {\n                                        walletName = connectResponse.payload.responses[0]['walletName'];\n                                    }\n                                    let appName = (_c = connectResponse.payload) === null || _c === void 0 ? void 0 : _c.wallet.appName;\n                                    var tag;\n                                    switch (appName) {\n                                        case wallet_info_1.OKXWalletName:\n                                            tag = iconnector_1.OKX_APP_WALLET;\n                                            break;\n                                        case wallet_info_1.OKXMiniWalletName:\n                                            tag = iconnector_1.OKX_TG_WALLET;\n                                            break;\n                                        case wallet_info_1.OKXInjectWalletName:\n                                            tag = iconnector_1.OKX_INJECT_WALLET;\n                                            break;\n                                    }\n                                    var connector = this.connectors.find((connector) => connector.getTag() === tag);\n                                    if (!connector) {\n                                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n                                    }\n                                    let session = Object.assign({ topic: connectInfo.channelId, sessionConfig: sessionConfig, namespaces: namespaces }, (connectResponse.payload && {\n                                        wallet: Object.assign(Object.assign({}, connectResponse.payload.wallet), { walletName: walletName })\n                                    }));\n                                    let methodsResponse = connectResponse.payload.responses.find(item => item.name === 'requestAccounts');\n                                    if (methodsResponse && methodsResponse.connectRequestMethods) {\n                                        session.signResponse = methodsResponse.connectRequestMethods;\n                                    }\n                                    (0, utils_1.logDebug)(\"engin  universalConnect success session:>>>\", JSON.stringify(session));\n                                    resolve(session);\n                                    this.setUseConnector(connector);\n                                }\n                                else {\n                                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n                                }\n                            }\n                            else if (connectResponse.method == \"connect_error\" && ((_d = connectResponse.payload) === null || _d === void 0 ? void 0 : _d.code) != undefined) {\n                                throw new protocol_1.OKXConnectError(connectResponse.payload.code);\n                            }\n                        }\n                        catch (e) {\n                            reject(e);\n                        }\n                    });\n                    if (this.hasWsConnector()) {\n                        yield ((_d = this.connectionManager) === null || _d === void 0 ? void 0 : _d.disconnect(false));\n                        try {\n                            yield this.connectionManager.connect();\n                        }\n                        catch (e) {\n                            (0, utils_1.logDebug)('Engine universalConnect error', e);\n                            throw e;\n                        }\n                        (0, utils_1.logDebug)('engin  universalConnect ==>> connectInfoAndUrl:', connectInfoAndUrl);\n                        this.sendSession(base64Encoded);\n                    }\n                    if (!isIOS && openUniversalLink) {\n                        openMethod();\n                    }\n                    (0, utils_1.logDebug)('engin  universalConnect ==>> connectInfoAndUrl:', connectInfoAndUrl);\n                    if (connectInfoAndUrl) {\n                        const info = {\n                            connectRequest: universalConnectRequest,\n                            redirect: sessionConfig.redirect,\n                            tmaReturnUrl: sessionConfig.tmaReturnUrl,\n                        };\n                        (0, utils_1.logDebug)(\"universalConnect connectInfoAndUrl info :\", JSON.stringify(info));\n                        connectInfoAndUrl(info);\n                    }\n                }\n                catch (error) {\n                    (0, utils_1.logDebug)(\"Engine universalConnect catch error\", error);\n                    reject(error);\n                }\n            }));\n        });\n    }\n    addOnConnectResultListener(connectResultListener) {\n        for (const connector of this.connectors) {\n            if (connector instanceof connector_1.InjectConnector) {\n                connector.setOnConnectResultListener(connectResultListener);\n            }\n        }\n        this.connectResultListener = connectResultListener;\n    }\n    openWallet(engineConnectInfo, connector) {\n        var _a;\n        if (connector) {\n            connector.openWallet(engineConnectInfo);\n        }\n        else {\n            (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.openWallet(engineConnectInfo);\n        }\n    }\n    send(request, requestAnswer, ttl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            return (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.send(request, requestAnswer, ttl);\n        });\n    }\n    clearData() {\n        var _a;\n        (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.clearData();\n    }\n    addDisconnectListener(disconnecter) {\n        var _a;\n        (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.addDisconnectListener(disconnecter);\n    }\n    saveSessionContent(key, data) {\n        this.connectionManager.saveSessionContent(key, data);\n    }\n    getSessionContent(key) {\n        var _a;\n        var session = this.connectionManager.getSessionContent(key);\n        if (session) {\n            var tag = \"\";\n            if (typeof session === \"object\") {\n                tag = this.getTagByappName((_a = session.wallet) === null || _a === void 0 ? void 0 : _a.appName);\n            }\n            if (this.connectors.find((connector) => {\n                return connector.getTag() === tag;\n            })) {\n                return session;\n            }\n        }\n        return undefined;\n    }\n    getTagByappName(appName) {\n        var tag = '';\n        if (appName) {\n            switch (appName) {\n                case wallet_info_1.OKXWalletName:\n                    tag = iconnector_1.OKX_APP_WALLET;\n                    break;\n                case wallet_info_1.OKXMiniWalletName:\n                    tag = iconnector_1.OKX_TG_WALLET;\n                    break;\n                case wallet_info_1.OKXInjectWalletName:\n                    tag = iconnector_1.OKX_INJECT_WALLET;\n            }\n        }\n        return tag;\n    }\n    setConnectConnector(wallet) {\n        var tag = this.getTagByappName(wallet === null || wallet === void 0 ? void 0 : wallet.appName);\n        if (!tag)\n            return;\n        this.setUseConnector(this.connectors.find((connector) => {\n            return connector.getTag() === tag;\n        }));\n    }\n    setUseConnector(connector) {\n        this.useConnector = connector;\n        if (connector instanceof ws_connector_1.WsConnector) {\n            connector.addConnectionListener();\n        }\n    }\n    // for es connect\n    setSessionConnectingListener(sessionConnectingListener) {\n        this.sessionConnectingListener = sessionConnectingListener;\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.restoreconnect(sessionInfo, onConnectResult));\n        });\n    }\n    restoreconnectFromTopic(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.getConnector() instanceof ws_connector_1.WsConnector) {\n                yield this.getConnector().restoreconnectFromTopic(topic);\n            }\n        });\n    }\n    getCurrentConnectionReady(namespaceKeys) {\n        var _a;\n        return !!((_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.getCurrentConnectionReady(namespaceKeys));\n    }\n    connectManagerDisconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            var _a;\n            yield ((_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.connectManagerDisconnect(fromRestore));\n        });\n    }\n    sendSession(sessionInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, utils_1.logDebug)('[Connect] sendSession called:', sessionInfo);\n            const requestId = Date.now().toString();\n            let request = {\n                method: 'session_info',\n                params: { sessionInfo: sessionInfo }\n            };\n            yield this.connectionManager.sendRaw(JSON.stringify(Object.assign(Object.assign({}, request), { requestId: requestId })));\n        });\n    }\n    addConnectionListener() {\n        var _a;\n        (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.addListener(\"sdk_response\", (event, msg) => {\n            var jsonResponse = (0, utils_1.safeJsonParse)(msg);\n            (0, utils_1.logDebug)(`Engine ==>> addListener ==> success ==> ${jsonResponse}`);\n            if (jsonResponse.method === 'connect' || jsonResponse.method === 'connect_error') {\n                if (this.connectResultListener) {\n                    this.connectResultListener(jsonResponse);\n                }\n            }\n            else if (jsonResponse.method === \"session_connecting\") {\n                (0, utils_1.logDebug)(\"Engine ==>> handleResponse_4  ===> sessionConnectingListener\");\n                if (this.sessionConnectingListener) {\n                    (0, utils_1.logDebug)(\"Engine ==>> handleResponse_4  ===> sessionConnectingListener not null\");\n                    this.sessionConnectingListener();\n                    this.sessionConnectingListener = undefined;\n                }\n            }\n        }, function () {\n        });\n    }\n}\nexports.Engine = Engine;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Storage = exports.Engine = exports.WalletConnectionManager = exports.ConnectionManager = exports.OKXWalletConnector = void 0;\nvar connect_1 = require(\"./connect\");\nObject.defineProperty(exports, \"OKXWalletConnector\", { enumerable: true, get: function () { return connect_1.OKXWalletConnector; } });\nvar connectionManager_1 = require(\"./connectionManager\");\nObject.defineProperty(exports, \"ConnectionManager\", { enumerable: true, get: function () { return connectionManager_1.ConnectionManager; } });\nvar walletConnectionManager_1 = require(\"./walletConnectionManager\");\nObject.defineProperty(exports, \"WalletConnectionManager\", { enumerable: true, get: function () { return walletConnectionManager_1.WalletConnectionManager; } });\nvar engine_1 = require(\"./engine\");\nObject.defineProperty(exports, \"Engine\", { enumerable: true, get: function () { return engine_1.Engine; } });\nvar storage_1 = require(\"./storage\");\nObject.defineProperty(exports, \"Storage\", { enumerable: true, get: function () { return storage_1.Storage; } });\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MULTICODEC_ED25519_LENGTH = exports.MULTICODEC_ED25519_HEADER = exports.MULTICODEC_ED25519_BASE = exports.MULTICODEC_ED25519_ENCODING = exports.DID_METHOD = exports.DID_PREFIX = exports.DID_DELIMITER = exports.KEY_PAIR_SEED_LENGTH = exports.DATA_ENCODING = exports.JSON_ENCODING = exports.JWT_ENCODING = exports.JWT_DELIMITER = exports.JWT_IRIDIUM_TYP = exports.JWT_IRIDIUM_ALG = exports.JWTHeaderType = void 0;\nexports.generateKeyPair = generateKeyPair;\nexports.decodeJSON = decodeJSON;\nexports.encodeJSON = encodeJSON;\nexports.encodeIss = encodeIss;\nexports.decodeIss = decodeIss;\nexports.encodeSig = encodeSig;\nexports.decodeSig = decodeSig;\nexports.encodeData = encodeData;\nexports.decodeData = decodeData;\nexports.encodeJWT = encodeJWT;\nexports.decodeJWT = decodeJWT;\nexports.signJWT = signJWT;\nexports.verifyJWT = verifyJWT;\nconst ed25519 = __importStar(require(\"@stablelib/ed25519\"));\nconst safejson_1 = require(\"../utils/safejson\");\nconst utils_1 = require(\"../utils/utils\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst log = __importStar(require(\"../utils/log\"));\nconst stringUtils_1 = require(\"../utils/stringUtils\");\nexports.JWTHeaderType = \"dapp\";\nexports.JWT_IRIDIUM_ALG = \"EdDSA\";\nexports.JWT_IRIDIUM_TYP = \"JWT\";\nexports.JWT_DELIMITER = \".\";\nexports.JWT_ENCODING = \"base64url\";\nexports.JSON_ENCODING = \"utf8\";\nexports.DATA_ENCODING = \"utf8\";\nexports.KEY_PAIR_SEED_LENGTH = 32;\nexports.DID_DELIMITER = \":\";\nexports.DID_PREFIX = \"did\";\nexports.DID_METHOD = \"key\";\nexports.MULTICODEC_ED25519_ENCODING = \"base58btc\";\nexports.MULTICODEC_ED25519_BASE = \"z\";\nexports.MULTICODEC_ED25519_HEADER = \"K36\";\nexports.MULTICODEC_ED25519_LENGTH = 32;\nfunction generateKeyPair() {\n    // let local_seed = randomBytes(KEY_PAIR_SEED_LENGTH)\n    // return ed25519.generateKeyPairFromSeed(local_seed);\n    return tweetnacl_1.default.sign.keyPair();\n}\nfunction decodeJSON(str) {\n    return (0, safejson_1.safeJsonParse)((0, stringUtils_1.okxtoString)((0, stringUtils_1.okxfromString)(str, exports.JWT_ENCODING), exports.JSON_ENCODING));\n}\nfunction encodeJSON(val) {\n    return (0, stringUtils_1.okxtoString)((0, stringUtils_1.okxfromString)((0, safejson_1.safeJsonStringify)(val), exports.JSON_ENCODING), exports.JWT_ENCODING);\n}\nfunction encodeIss(publicKey) {\n    log.logDebug(`publicKey: ${(0, utils_1.toHexString)(publicKey)}`);\n    var publicKeyStr = (0, stringUtils_1.okxtoString)(publicKey, exports.MULTICODEC_ED25519_ENCODING);\n    return [exports.DID_PREFIX, exports.DID_METHOD, publicKeyStr].join(exports.DID_DELIMITER);\n}\nfunction decodeIss(issuer) {\n    const [prefix, method, multicodec] = issuer.split(exports.DID_DELIMITER);\n    if (prefix !== exports.DID_PREFIX || method !== exports.DID_METHOD) {\n        throw new Error(`Issuer must be a DID with method \"key\"`);\n    }\n    if (multicodec === undefined) {\n        throw new Error('multicodec is undefined');\n    }\n    const publicKey = (0, stringUtils_1.okxfromString)(multicodec, exports.MULTICODEC_ED25519_ENCODING);\n    if (publicKey === undefined || publicKey.length !== exports.MULTICODEC_ED25519_LENGTH) {\n        throw new Error(`Issuer must be a public key with length 32 bytes`);\n    }\n    return publicKey;\n}\n// ---------- Signature ----------------------------------------------- //\nfunction encodeSig(bytes) {\n    return (0, stringUtils_1.okxtoString)(bytes, exports.JWT_ENCODING);\n}\nfunction decodeSig(encoded) {\n    return (0, stringUtils_1.okxfromString)(encoded, exports.JWT_ENCODING);\n}\n// ---------- Data ----------------------------------------------- //\nfunction encodeData(params) {\n    return (0, stringUtils_1.okxfromString)([encodeJSON(params.header), encodeJSON(params.payload)].join(exports.JWT_DELIMITER), exports.DATA_ENCODING);\n}\nfunction decodeData(data) {\n    var _a, _b;\n    const params = (0, stringUtils_1.okxtoString)(data, exports.DATA_ENCODING).split(exports.JWT_DELIMITER);\n    const header = decodeJSON((_a = params[0]) !== null && _a !== void 0 ? _a : '{}');\n    const payload = decodeJSON((_b = params[1]) !== null && _b !== void 0 ? _b : '{}');\n    return { header, payload };\n}\n// ---------- JWT ----------------------------------------------- //\nfunction encodeJWT(params) {\n    return [encodeJSON(params.header), encodeJSON(params.payload), encodeSig(params.signature)].join(exports.JWT_DELIMITER);\n}\nfunction decodeJWT(jwt) {\n    var _a, _b, _c;\n    const params = jwt.split(exports.JWT_DELIMITER);\n    const header = decodeJSON((_a = params[0]) !== null && _a !== void 0 ? _a : '{}');\n    const payload = decodeJSON((_b = params[1]) !== null && _b !== void 0 ? _b : '{}');\n    const signature = decodeSig((_c = params[2]) !== null && _c !== void 0 ? _c : '{}');\n    const data = (0, stringUtils_1.okxfromString)(params.slice(0, 2).join(exports.JWT_DELIMITER), exports.DATA_ENCODING);\n    return { header, payload, signature, data };\n}\nfunction signJWT(sub_1, aud_1, ttl_1, keyPair_1) {\n    return __awaiter(this, arguments, void 0, function* (sub, aud, ttl, keyPair, iat = Math.floor(Date.now())) {\n        const header = { alg: exports.JWT_IRIDIUM_ALG, typ: exports.JWT_IRIDIUM_TYP };\n        const iss = encodeIss(keyPair.publicKey);\n        const exp = iat + ttl;\n        const act = \"authenticate user\";\n        const payload = { iss, sub, aud, act, iat, exp };\n        const data = encodeData({ header, payload });\n        // const signature = ed25519.sign(keyPair.secretKey, data);\n        log.logDebug(`get sec kp: ${keyPair.secretKey} {${keyPair.secretKey.length}}`);\n        const signature = tweetnacl_1.default.sign.detached(data, keyPair.secretKey);\n        return encodeJWT({ header, payload, signature });\n    });\n}\nfunction verifyJWT(jwt) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { header, payload, data, signature } = decodeJWT(jwt);\n        if (header.alg !== exports.JWT_IRIDIUM_ALG || header.typ !== exports.JWT_IRIDIUM_TYP) {\n            throw new Error(\"JWT must use EdDSA algorithm\");\n        }\n        const publicKey = decodeIss(payload.iss);\n        return ed25519.verify(publicKey, data, signature);\n    });\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCONNECTOR_JWT_TTL = exports.OKXCONNECTOR_JWT_WALLET_SIDE = exports.OKXCONNECTOR_JWT_SIDE = void 0;\nexports.OKXCONNECTOR_JWT_SIDE = \"wallet\";\nexports.OKXCONNECTOR_JWT_WALLET_SIDE = \"dapp\";\nexports.OKXCONNECTOR_JWT_TTL = 86400000;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.buildNameSpacesByConnectResponse = buildNameSpacesByConnectResponse;\nexports.buildRequestAccountNameSpacesByConnectResponse = buildRequestAccountNameSpacesByConnectResponse;\nconst log_1 = require(\"../utils/log\");\nfunction buildNameSpacesByConnectResponse(connectResponse) {\n    let requestAccountNameSpaces = buildRequestAccountNameSpacesByConnectResponse(connectResponse);\n    return requestAccountNameSpaces;\n}\nfunction buildRequestAccountNameSpacesByConnectResponse(connectResponse) {\n    let result = {};\n    (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start connectResponse111>>', JSON.stringify(connectResponse));\n    let universalResponse = connectResponse.payload.responses.find(item => item.name === 'requestAccounts');\n    if (universalResponse && universalResponse.accounts) {\n        let filterAccount = [];\n        for (const item of universalResponse.accounts) {\n            if (item.namespace === \"ton\") {\n                if (item.data && item.data.ton_addr) {\n                    if (item.data.ton_addr.address && item.data.ton_addr.address.length > 0) {\n                        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start TON>>', JSON.stringify(item));\n                        filterAccount.push(item);\n                    }\n                }\n            }\n            else {\n                (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start other>>', JSON.stringify(item));\n                filterAccount.push(item);\n            }\n        }\n        universalResponse.accounts = filterAccount;\n    }\n    const tonAddress = connectResponse.payload.responses.find(item => item.name === 'ton_addr');\n    const tonProof = connectResponse.payload.responses.find(item => item.name === 'ton_proof');\n    if (tonAddress && !universalResponse) { //adapt tonsdk\n        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse adapt ton data >>');\n        let address = tonAddress.address;\n        address = 'ton:' + tonAddress.network + \":\" + address;\n        let data = {\n            ton_addr: tonAddress\n        };\n        if (tonProof) {\n            data.ton_proof = tonProof;\n        }\n        universalResponse = {\n            name: \"requestAccounts\",\n            accounts: [{\n                    namespace: 'ton',\n                    addresses: [address],\n                    methods: ['ton_sendTransaction'],\n                    extra: {},\n                    data: data,\n                }]\n        };\n    }\n    (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse end universalResponse>>>', JSON.stringify(universalResponse));\n    universalResponse.accounts.forEach(item => {\n        var chains = [];\n        var accounts = [];\n        item.addresses.forEach(addressItem => {\n            var addressArr = addressItem.split(\":\");\n            (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse addressArr>>', addressArr.length);\n            if (addressArr.length >= 3) {\n                let chain = addressArr.slice(0, 2).join(\":\");\n                chains.push(chain);\n                accounts.push(addressItem);\n                (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse chain:>>', chain, \"addressItem:\", addressItem);\n            }\n        });\n        if (item.data && item.data.ton_addr) {\n            item.data.ton_addr.name = 'ton_addr';\n        }\n        if (item.data && item.data.ton_proof) {\n            item.data.ton_proof.name = 'ton_proof';\n        }\n        result[item.namespace] = {\n            chains: chains,\n            accounts: accounts,\n            methods: item.methods,\n            extra: item.extra,\n            payload: item.data\n        };\n        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse result>>', JSON.stringify(result));\n    });\n    return result;\n}\n/*export function buildTonNameSpaceByConnectResponse(connectResponse: ConnectResponseSuccess): Namespaces | undefined {\n    const tonAddrItem: TonAddressItemReply = connectResponse.payload.responses.find(\n        item => item.name === 'ton_addr'\n    ) as TonAddressItemReply;\n\n    const tonProfItem: TonProofItemReply = connectResponse.payload.responses.find(\n        item => item.name === 'ton_proof'\n    ) as TonProofItemReply;\n\n    if (!tonAddrItem) {\n        return undefined\n    }\n\n    return {\n        NameSpaceKeyTON: {\n            chains: [tonAddrItem.network],\n            accounts: [],\n            methods: connectResponse.payload.wallet.features?.ton,\n            payload: {\n                tonAccount: {\n                    address: tonAddrItem.address,\n                    chain: tonAddrItem.network,\n                    walletStateInit: tonAddrItem.walletStateInit,\n                    publicKey: tonAddrItem.publicKey\n                },\n                tonProof: tonProfItem\n            }\n        }\n    }\n}*/\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Storage = void 0;\nconst storageconstants_1 = require(\"./storageconstants\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst utils_1 = require(\"../utils/utils\");\nconst utils_2 = require(\"../utils\");\nconst log = __importStar(require(\"../utils/log\"));\nconst utils_3 = require(\"../utils\");\nconst crypto_js_1 = require(\"crypto-js\");\nclass Storage {\n    constructor(subKey, beforeKey = undefined) {\n        const localStorage = (0, utils_1.resolveLocalStorage)();\n        // 0. check and upgrade beforeKey\n        log.logDebug('------ update before cache ------');\n        if (beforeKey) {\n            this.checkAndUpgradeCache(beforeKey, subKey);\n        }\n        // 1. load data from local storage\n        this.storeKey = '';\n        this.cipherIV = '';\n        this.subKey = subKey;\n        log.logDebug('--------get current local storage --------');\n        log.logDebug(localStorage);\n        const cacheStr = localStorage.getItem(Storage.cacheKey + subKey);\n        if (typeof cacheStr === \"undefined\" || cacheStr === null) {\n            log.logDebug(\"with no cache\");\n            this.cache = {};\n            return;\n        }\n        log.logDebug(cacheStr);\n        if ((cacheStr === null || cacheStr === void 0 ? void 0 : cacheStr.length) > 0) {\n            var cacheObj = (0, utils_2.safeJsonParse)(cacheStr);\n            this.cache = cacheObj;\n        }\n        log.logDebug(`get cache obj: ${this.cache}`);\n        if (typeof this.cache === 'undefined' || this.cache == null) {\n            this.cache = {};\n        }\n    }\n    checkAndUpgradeCache(fromCacheKey, toCacheKey) {\n        if (fromCacheKey && fromCacheKey.length > 0 && toCacheKey && toCacheKey.length > 0) {\n            // 1. get all infos from from-cache-key\n            log.logDebug('--------get current local storage --------');\n            log.logDebug(localStorage);\n            const cacheStr = localStorage.getItem(Storage.cacheKey + fromCacheKey);\n            if (typeof cacheStr === \"undefined\" || cacheStr === null) {\n                log.logDebug(\"no pre cache content\");\n                return;\n            }\n            log.logDebug(cacheStr);\n            if ((cacheStr === null || cacheStr === void 0 ? void 0 : cacheStr.length) > 0) {\n                // 2. save to to-cache-key\n                log.logDebug(\"write in cache content: \", fromCacheKey, '->', toCacheKey);\n                localStorage.setItem(Storage.cacheKey + toCacheKey, cacheStr);\n                // 3. clean from item\n                log.logDebug(\"clean in cache content: \", fromCacheKey);\n                localStorage.removeItem(Storage.cacheKey + fromCacheKey);\n            }\n        }\n        else {\n            log.logDebug('no pre cache key:', fromCacheKey);\n        }\n    }\n    saveContent(content, key, id = '-') {\n        let item = {\n            id: id,\n            timestamp: Date.now().toString(),\n            content: content\n        };\n        this.saveItem(item, key);\n    }\n    saveItem(item, key) {\n        let localKey = Storage.cacheKey + this.subKey;\n        const localStorage = (0, utils_1.resolveLocalStorage)();\n        log.logDebug(this.cache);\n        log.logDebug(`get cache obj: ${this.cache}, ${key}, ${item}`);\n        this.cache[key] = item;\n        let totalCacheStr = (0, utils_2.safeJsonStringify)(this.cache);\n        log.logDebug(`STORAGE: ${key} @ ${this.cache}`);\n        localStorage.setItem(localKey, totalCacheStr);\n    }\n    getItem(key) {\n        log.logDebug(`STORAGE >> getItem: ${key} @ ${this.cache}`);\n        return this.cache[key];\n    }\n    getCachedPBKDF2InfoKey() {\n        var _a, _b, _c, _d;\n        const pwLen = 32;\n        const saltLen = 24;\n        if (this.storeKey.length > 0 && ((_a = this.cipherIV) === null || _a === void 0 ? void 0 : _a.length) > 0) {\n            return {\n                pw: this.storeKey,\n                iv: this.cipherIV\n            };\n        }\n        let salt = (_b = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGER_CRYPTO_SALT)) === null || _b === void 0 ? void 0 : _b.content;\n        if (!salt) {\n            salt = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(saltLen));\n            this.saveContent(salt, storageconstants_1.OKXCONNECTOR_STORAGER_CRYPTO_SALT);\n        }\n        let pw = (_c = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD)) === null || _c === void 0 ? void 0 : _c.content;\n        if (!pw) {\n            pw = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(pwLen));\n            this.saveContent(pw, storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD);\n        }\n        let cipherIV = (_d = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV)) === null || _d === void 0 ? void 0 : _d.content;\n        if (!cipherIV) {\n            // let ivBuffer = Buffer.from(nacl.randomBytes(16))\n            let ivBuffer = tweetnacl_1.default.randomBytes(16);\n            cipherIV = (0, utils_1.toHexString)(ivBuffer);\n            this.saveContent(cipherIV, storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV);\n        }\n        this.cipherIV = cipherIV;\n        this.storeKey = (0, crypto_js_1.PBKDF2)(pw, salt, { iterations: 10 }).toString();\n        return {\n            pw: this.storeKey,\n            iv: this.cipherIV\n        };\n    }\n    encryptStoreMsg(msg, key) {\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg start ${Date.now()}`);\n        let storeInfo = this.getCachedPBKDF2InfoKey();\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg mid ${Date.now()}`);\n        var result = crypto_js_1.AES.encrypt(msg, storeInfo.pw).toString();\n        this.saveContent(result, key);\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg end ${Date.now()}`);\n    }\n    getAndDecrypt(key) {\n        (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt start ${Date.now()}`);\n        let item = this.getItem(key);\n        if (item && item.content) {\n            let storeInfo = this.getCachedPBKDF2InfoKey();\n            (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt mid ${Date.now()}`);\n            let result = crypto_js_1.AES.decrypt(item.content, storeInfo.pw).toString(crypto_js_1.enc.Utf8);\n            (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt end ${Date.now()}`);\n            return result;\n        }\n        return null;\n    }\n    clearCache(key = undefined) {\n        if (key === undefined) {\n            // clean all\n            this.cache = {};\n            let localKey = Storage.cacheKey + this.subKey;\n            localStorage.setItem(localKey, '');\n        }\n        else {\n            let localKey = Storage.cacheKey + this.subKey;\n            const localStorage = (0, utils_1.resolveLocalStorage)();\n            log.logDebug(this.cache);\n            this.cache[key] = null;\n            let totalCacheStr = (0, utils_2.safeJsonStringify)(this.cache);\n            log.logDebug(`STORAGE: clean key ${key} @ ${this.cache}`);\n            localStorage.setItem(localKey, totalCacheStr);\n        }\n    }\n}\nexports.Storage = Storage;\nStorage.cacheKey = 'OKXStorageKey';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCONNECTOR_STORAGE_CIPHER_METHOD = exports.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV = exports.OKXCONNECTOR_STORAGER_CRYPTO_SALT = exports.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD = exports.OKXCONNECTOR_TON_KEY = exports.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE = exports.OKXCONNECTOR_TOKEN_CACHE = exports.OKXCONNECTOR_JWT_KEY = exports.OKXCONNECTOR_SESSION_PREFIX_KEY = exports.OKXCONNECTOR_CRYPTO_KEY = exports.OKXCONNECTOR_CACHE_KEY_DAPP = exports.OKXCONNECTOR_CACHE_KEY = void 0;\nexports.OKXCONNECTOR_CACHE_KEY = \"ck\";\nexports.OKXCONNECTOR_CACHE_KEY_DAPP = \"ck_dapp\";\nexports.OKXCONNECTOR_CRYPTO_KEY = \"cck_k\";\nexports.OKXCONNECTOR_SESSION_PREFIX_KEY = \"cspk_\";\nexports.OKXCONNECTOR_JWT_KEY = \"cjk_k\";\nexports.OKXCONNECTOR_TOKEN_CACHE = \"ct\";\nexports.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE = \"csp\";\nexports.OKXCONNECTOR_TON_KEY = \"OKXStorage_ctc\";\nexports.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD = \"scp\";\nexports.OKXCONNECTOR_STORAGER_CRYPTO_SALT = \"scs\";\nexports.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV = \"scpc\";\nexports.OKXCONNECTOR_STORAGE_CIPHER_METHOD = \"aes-256-cbc\";\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletConnectionManagerEvent = exports.WalletConnectionManagerTopicInfoCacheKey = void 0;\nexports.WalletConnectionManagerTopicInfoCacheKey = \"wcmtic\";\nexports.WalletConnectionManagerEvent = {\n    RECEIVE_REQUEST: \"payload\"\n};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletConnectionManager = void 0;\nconst connect_1 = require(\"./connect\");\nconst commands_1 = require(\"./commands\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst jwtconstants_1 = require(\"./jwtconstants\");\nconst constants_1 = require(\"./constants\");\nconst walletConnectionConstants_1 = require(\"./walletConnectionConstants\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils/utils\");\nconst crypto_1 = require(\"../crypto/crypto\");\nconst jwt_1 = require(\"./jwt\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst utils_2 = require(\"../utils\");\nclass WalletConnectionManager {\n    constructor() {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.communicateEvents = new eventemitter3_1.EventEmitter();\n        log.logDebug('connect manager construct');\n        // local storage\n        this.connectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n        // this.crypto = new SessionCrypto()\n        this.jwtKeyPair = this.getCachedJWTKeyPair();\n        this.saveJWTKeyPair(this.jwtKeyPair);\n        // wss connection\n        this.connector = new connect_1.OKXWalletConnector(constants_1.OKXCONNECTOR_WS_URL_1);\n        this.packageId = Date.now();\n        // connection state\n        this.sessionCryptoInfoMap = new Map();\n        // log.logDebug(`this.connectedWalletPK  constructor   ${this.connectedWalletPK}`)\n        this.inLogin = false;\n        this.isLogined = false;\n    }\n    refreshPackageId(offset = 0) {\n        this.packageId = Date.now() + offset;\n    }\n    saveCryptoKeyPair(topicId, keyPair) {\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(keyPair);\n        // encrypt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_CRYPTO_KEY + topicId);\n    }\n    getCachedCryptoKeyPair(topicId) {\n        // decrypt kp\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_CRYPTO_KEY + topicId);\n        const content = kp;\n        if (typeof content == 'string') {\n            log.logDebug('get cached crypto key:');\n            log.logDebug(content);\n            let keyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            return keyPairInfo;\n        }\n        else {\n            this.connectStorage.clearCache();\n        }\n        return null;\n    }\n    saveJWTKeyPair(keyPair) {\n        var strkeyPair = {\n            publicKey: (0, utils_1.toHexString)(keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(keyPair.secretKey)\n        };\n        log.logDebug('save jwt kp');\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(strkeyPair);\n        log.logDebug(cacheInfo);\n        // encrypt jwt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        log.logDebug('after save jwt kp');\n    }\n    getCachedJWTKeyPair() {\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            // TODO: decrypt jwt kp\n            log.logDebug('get cached jwt kp:');\n            log.logDebug(content);\n            let strKeyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            log.logDebug('save jwt kp');\n            log.logDebug(strKeyPairInfo);\n            var keyPair = {\n                publicKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.publicKey),\n                secretKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.secretKey)\n            };\n            return keyPair;\n        }\n        else {\n            return (0, jwt_1.generateKeyPair)();\n        }\n    }\n    isTopicPublicKeyExist(topicId) {\n        log.logDebug(`isTopicPublicKeyExist  ===> ${topicId}`);\n        return this.sessionCryptoInfoMap.get(topicId);\n    }\n    makeJWT(timestampStr) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, jwt_1.signJWT)(timestampStr, jwtconstants_1.OKXCONNECTOR_JWT_WALLET_SIDE, jwtconstants_1.OKXCONNECTOR_JWT_TTL, // 24h\n            this.jwtKeyPair);\n        });\n    }\n    parseInternalMsg(internalMsg) {\n        try {\n            let internalObj = (0, safejson_1.safeJsonParse)(internalMsg);\n            let origin = internalObj['ivur-igbfft-ptjip'];\n            if (origin && origin.length > 0) {\n                let originContent = (0, utils_2.base64decode)(origin, true);\n                return originContent.toString();\n            }\n        }\n        catch (error) {\n            log.logError('parse internal msg', error);\n        }\n    }\n    updateClientId(topic, clientId) {\n        let sessionInfo = this.sessionCryptoInfoMap.get(topic);\n        (0, log_1.logDebug)('updateClientId', sessionInfo, topic, clientId);\n        if (sessionInfo && clientId && clientId.length > 0) {\n            if (sessionInfo.cid) {\n                // check\n                let lastCheck = (0, utils_1.getLastSixMd5Hash)(clientId);\n                if (sessionInfo.cid == lastCheck) {\n                    sessionInfo.dappPublicKey = clientId;\n                }\n                else {\n                    log.logError('cid check failed', sessionInfo, topic, clientId);\n                }\n            }\n            else {\n                sessionInfo.dappPublicKey = clientId;\n            }\n            // \n            this.syncCacheSessionInfo();\n        }\n        return false;\n    }\n    parsePackage(topic_1, input_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, input, ignoreACK = false) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;\n            this.events.emit(input.id, input);\n            // emit event\n            let sessionInfo = this.sessionCryptoInfoMap.get(topic);\n            log.logDebug('get sessionInfo for decrypt topic:', topic);\n            log.logDebug('get sessionInfo for decrypt:', input.id, topic, sessionInfo, this.sessionCryptoInfoMap);\n            if (sessionInfo && input.params.data) {\n                if ((_a = input.params.data) === null || _a === void 0 ? void 0 : _a.message) {\n                    // try parse internal message\n                    if ((_b = input.params.data) === null || _b === void 0 ? void 0 : _b.isInternalData) {\n                        let inner_message = (_c = input.params.data) === null || _c === void 0 ? void 0 : _c.message;\n                        let inner_topic = (_d = input.params.data) === null || _d === void 0 ? void 0 : _d.topic;\n                        let originContent = this.parseInternalMsg(inner_message);\n                        (0, log_1.logDebug)('parse internal origin: ', originContent);\n                        if (originContent && originContent.length > 0) {\n                            this.communicateEvents.emit(\"origin\", originContent, inner_topic);\n                        }\n                    }\n                    else {\n                        // try parse message base64\n                        try {\n                            let message = (_e = input.params.data) === null || _e === void 0 ? void 0 : _e.message;\n                            if (message.trimStart().startsWith('{')) {\n                                let messageObj = (0, safejson_1.safeJsonParse)(message);\n                                if (messageObj.method) {\n                                    if (messageObj.method == 'session_info') {\n                                        let sessionInfoString = messageObj.params.sessionInfo;\n                                        let base64Content = (0, utils_2.base64decode)(sessionInfoString, false);\n                                        (0, log_1.logDebug)(\"wallet connection manager requset base64Content:\", base64Content);\n                                        (0, log_1.logDebug)(\"base64Content:\" + base64Content);\n                                        let inner_connection = base64Content.toObject();\n                                        this.updateClientId(topic, inner_connection.clientId);\n                                    }\n                                    (0, log_1.logDebug)('<<< parse raw msg:', topic, messageObj);\n                                    this.communicateEvents.emit(topic, message);\n                                }\n                            }\n                            else {\n                                let message = sessionInfo.crypto.decryptWallet((_f = input.params.data) === null || _f === void 0 ? void 0 : _f.message, sessionInfo.dappPublicKey);\n                                (0, log_1.logDebug)('<<< receive msg:', topic, message);\n                                this.communicateEvents.emit(topic, message);\n                            }\n                        }\n                        catch (error) {\n                            let message = sessionInfo.crypto.decryptWallet((_g = input.params.data) === null || _g === void 0 ? void 0 : _g.message, sessionInfo.dappPublicKey);\n                            (0, log_1.logDebug)('<<< receive msg:', topic, message);\n                            this.communicateEvents.emit(topic, message);\n                        }\n                    }\n                }\n                else {\n                }\n            }\n            // send back ACK\n            if (!ignoreACK) {\n                yield this.sendACK(input.id, true);\n                if (topic) {\n                    let inputObj = input;\n                    if ((_j = (_h = inputObj.params) === null || _h === void 0 ? void 0 : _h.data) === null || _j === void 0 ? void 0 : _j.messageId) {\n                        this.refreshPackageId();\n                        yield this.sendReceive(this.packageId.toString(), (_l = (_k = inputObj.params) === null || _k === void 0 ? void 0 : _k.data) === null || _l === void 0 ? void 0 : _l.messageId, topic);\n                    }\n                }\n            }\n        });\n    }\n    recovrySessionInfoFromCache() {\n        // get topic ids and keys from session\n        // WalletConnectionCryptoCacheMap\n        // {[topicId]: {cryptoKeypair: {publicKey:string, secretKey:string}, dappPublicKey:clientId}}\n        let jsonStr = this.connectStorage.getAndDecrypt(walletConnectionConstants_1.WalletConnectionManagerTopicInfoCacheKey);\n        log.logDebug('get cached sessionInfos:', jsonStr);\n        if (jsonStr) {\n            let cacheMap = (0, safejson_1.safeJsonParse)(jsonStr);\n            for (let topicId in cacheMap) {\n                let topicItem = cacheMap[topicId];\n                log.logDebug('make topicItem:', topicItem);\n                let cryptoItem = {\n                    topic: topicId,\n                    crypto: new crypto_1.SessionCrypto({\n                        publicKey: topicItem.cryptoKeyPair.publicKey,\n                        secretKey: topicItem.cryptoKeyPair.secretKey\n                    }),\n                    dappPublicKey: topicItem.dappPublicKey,\n                    cid: topicItem.cid\n                };\n                this.sessionCryptoInfoMap.set(topicId, cryptoItem);\n            }\n        }\n        log.logDebug('get cached sessionInfos map:', this.sessionCryptoInfoMap);\n    }\n    syncCacheSessionInfo() {\n        let cacheMap = {};\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            log.logDebug('for each Keys', topicId);\n            if (cryptoItem) {\n                cacheMap[topicId] = {\n                    cryptoKeyPair: cryptoItem.crypto.stringifyKeypair(),\n                    dappPublicKey: cryptoItem.dappPublicKey,\n                    cid: cryptoItem.cid\n                };\n            }\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(cacheMap);\n        log.logDebug('sync cache sessionInfos:', jsonData);\n        this.connectStorage.encryptStoreMsg(jsonData, walletConnectionConstants_1.WalletConnectionManagerTopicInfoCacheKey);\n    }\n    cacheSessionInfo(topic, sessionInfo, sync = true) {\n        let dappPublicKey = sessionInfo.dappPublicKey;\n        // 1. search dapp public related topic ids\n        let duplicatedTopics = [];\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            log.logDebug('for each Keys', topicId);\n            if (cryptoItem.dappPublicKey == dappPublicKey) {\n                log.logDebug('duplicated dapp public key:', topicId, dappPublicKey);\n                duplicatedTopics.push(topicId);\n            }\n        }\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            if (duplicatedTopics.includes(topicId)) {\n                this.sessionCryptoInfoMap.delete(topicId);\n            }\n        }\n        // discard useless topics\n        log.logDebug('cleaned connect session cache:', this.sessionCryptoInfoMap);\n        // 2. remove previous connected topic ids\n        // 3. write in current topic\n        this.sessionCryptoInfoMap.set(topic, sessionInfo);\n        // TODO: search domain info and then delete \n        log.logDebug('cache sessionInfo:', topic, sessionInfo, this.sessionCryptoInfoMap);\n        if (sync) {\n            this.syncCacheSessionInfo();\n        }\n        return duplicatedTopics;\n    }\n    // add and subscribe topic\n    appendTopic(topic, sessionPublicKey, cid) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('4.1. get append Topic:', topic);\n            // 1. check if connected\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                if (!this.isLogined) {\n                    var error = new Error();\n                    error.message = \"connection is not logined\";\n                    error.name = \"append error\";\n                    // throw error\n                    reject(error);\n                    return;\n                }\n                // 2. subscribe topic and session public key\n                let cryptoItem = {\n                    topic: topic,\n                    crypto: new crypto_1.SessionCrypto(),\n                    dappPublicKey: sessionPublicKey ? sessionPublicKey : \"\",\n                    cid: cid\n                };\n                let duplicatedTopics = this.cacheSessionInfo(topic, cryptoItem, false);\n                // make sure cache session info before subscribe\n                yield this.subscribeTopics(Array.from([topic]));\n                this.refreshPackageId();\n                log.logDebug(`5. subscribe callback then fetch append message: ${this.packageId}, ${topic}`);\n                log.reportLog(`5. subscribe callback then fetch append message`);\n                const timeF = new Date().getTime();\n                (0, log_1.logDebug)(\"Append --subscribe callback->\", timeF - this.timeLog);\n                resolve(duplicatedTopics);\n            }));\n        });\n    }\n    confirmAppendingTopics() {\n        this.syncCacheSessionInfo();\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.timeLog = new Date().getTime();\n            (0, log_1.logDebug)(\"[Wallet] ConnectTime---enter->\", this.timeLog);\n            log.reportLog('wallet connect connect called');\n            // 0. get cached topics and infos\n            let timestampStr = Date.now().toString();\n            var jwtToken = yield this.makeJWT(timestampStr);\n            log.logDebug(`generate jwt token: ${jwtToken}`);\n            this.connectStorage.saveContent(jwtToken, 'jwt');\n            this.recovrySessionInfoFromCache();\n            // 1.\n            return new Promise((resolve, reject) => {\n                // 1. when websocket opened\n                this.inLogin = true;\n                this.connector.onOpen(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug(`1. connector on open`);\n                    log.reportLog('1. wallet connect connect on open');\n                    const timeOne = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---open->\", timeOne - this.timeLog);\n                    //2. send jwt to login\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when login');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // throw error\n                            reject(error);\n                        }\n                        else {\n                            this.isLogined = true;\n                            resolve();\n                            // 3. subscribe cached topics\n                            log.logDebug('3. subscribe cached topics', this.sessionCryptoInfoMap);\n                            log.reportLog('3. wallet connect connect subscribe cached topics');\n                            if (this.sessionCryptoInfoMap.size > 0) {\n                                yield this.subscribeTopics(Array.from(this.sessionCryptoInfoMap.keys()));\n                            }\n                        }\n                    }));\n                    log.logDebug(`2. login called`);\n                    log.reportLog('2. wallet connect login called');\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        return yield this.connector.connect();\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_LOGIN,\n                        params: {\n                            token: jwtToken\n                        }\n                    });\n                }));\n                this.connector.connect().catch((err) => {\n                    (0, log_1.logDebug)('WalletConnectionManager connect error', err);\n                    reject(err);\n                });\n                // add callback\n                this.connector.addPackageParse((event) => {\n                    var _a, _b;\n                    log.logDebug(`connect: parse package`);\n                    log.logDebug(event);\n                    if (!(\"params\" in event) || !(\"data\" in event[\"params\"])) {\n                        this.parsePackage(\"\", event, true);\n                        return;\n                    }\n                    // ignore receive echo\n                    if ((_a = event.params.data) === null || _a === void 0 ? void 0 : _a.topic) {\n                        this.parsePackage((_b = event.params.data) === null || _b === void 0 ? void 0 : _b.topic, event, event.method === commands_1.CONNECT_METHOD_RECEIVE);\n                    }\n                });\n                // this.connector.addListener(safeJsonStringify(event), (rawMsg: string)=> {\n                //    rawMsg = rawMsg.replace(/'/g, '\"')\n                //    log.logDebug(`addListener ===> ${rawMsg}`)\n                //    if (typeof rawMsg !== 'undefined') {\n                //       var msgObj = safeJsonParse(rawMsg)\n                //       var msg = msgObj.message\n                //       let crypto = \n                //       var result = this.crypto.decrypt(msg, this.connectedWalletPK)\n                //       log.logDebug(`addListener ===> ${result}`)\n                //       return result\n                //    }\n                //    return undefined\n                // }, ()=>{\n                //    // emit success\n                // }, ()=>{\n                //    // emit fail\n                // })\n            });\n        });\n    }\n    // 获取对应topic session下的钱包公钥\n    // 在返回approve时需要填充到clientId字段中\n    getSessionPublicKey(topicId) {\n        if (this.isTopicPublicKeyExist(topicId)) {\n            let item = this.sessionCryptoInfoMap.get(topicId);\n            if (item) {\n                return (0, utils_1.toHexString)(item.crypto.keyPair.publicKey);\n            }\n        }\n        return undefined;\n    }\n    getCurrentCachedTopicIdList() {\n        return Array.from(this.sessionCryptoInfoMap.keys());\n    }\n    disconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            yield this.connector.disconnect();\n            //clean cached topic\n            //如果是恢复连接，就不清理解密public key\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            if (!fromRestore) {\n                this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n            }\n        });\n    }\n    send(topic_1, msg_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, msg, needPublicKey = false, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL, useRaw = false) {\n            var _a, _b;\n            // make send msg payload\n            log.logDebug(`message send =====> ${msg}`);\n            if (!this.isTopicPublicKeyExist(topic)) {\n                // channel not ready\n                throw new Error('connection not finish');\n            }\n            let connectedDappPK = (_a = this.sessionCryptoInfoMap.get(topic)) === null || _a === void 0 ? void 0 : _a.dappPublicKey;\n            let cryptoObject = (_b = this.sessionCryptoInfoMap.get(topic)) === null || _b === void 0 ? void 0 : _b.crypto;\n            let messageObj = undefined;\n            if (useRaw) {\n                messageObj = {\n                    message: msg,\n                };\n            }\n            if (cryptoObject && connectedDappPK && !useRaw) {\n                let message = cryptoObject.encryptWallet(msg, connectedDappPK);\n                messageObj = {\n                    message: message,\n                };\n            }\n            if (messageObj) {\n                if (needPublicKey && cryptoObject) {\n                    messageObj.clientId = (0, utils_1.toHexString)(cryptoObject.keyPair.publicKey);\n                    // let privateKey = toHexString(cryptoObject.keyPair.secretKey)\n                    // log.logDebug(`message send use dapp publicKey =====> ${connectedDappPK}`)\n                    // log.logDebug(`message send use publicKey =====> ${messageObj.clientId}`)\n                    // log.logDebug(`message send use secretKey =====> ${privateKey}`)\n                }\n                this.refreshPackageId();\n                const payload = {\n                    id: this.packageId.toString(),\n                    method: commands_1.CONNECT_METHOD_PUBLISH,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    params: {\n                        message: {\n                            topic: topic,\n                            message: (0, safejson_1.safeJsonStringify)(messageObj),\n                            ttl: ttl\n                        }\n                    } // crypted\n                };\n                this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                    // ack\n                    if (rsp && rsp.error) {\n                        log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                    }\n                    else if (rsp && !rsp.error) {\n                        log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                    }\n                }));\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n                return this.packageId;\n            }\n        });\n    }\n    sendACK(msgId_1, success_1) {\n        return __awaiter(this, arguments, void 0, function* (msgId, success, reason = undefined) {\n            if (success === true) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    result: true\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n            else if (reason) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    error: {\n                        code: reason.code, //int\n                        message: reason.message\n                    }\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    // send receive\n    sendReceive(msgId, messageId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECEIVE,\n                params: {\n                    data: {\n                        messageId: messageId,\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendUnsubscribe(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO: make disconnect payload\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), {\n                id: this.packageId.toString(),\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_UNSUB,\n                params: {\n                    topic: topic\n                }\n            });\n            // remove topicId\n            this.sessionCryptoInfoMap.delete(topic);\n            this.syncCacheSessionInfo();\n        });\n    }\n    // send receive\n    // 1. fetch all \n    // 2. send back receive\n    // 3. check has more, if so, repeat from 1st step\n    sendFetchAndConsumeMessages(msgId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(msgId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic == topic) {\n                                let messageId = msg.messageId;\n                                yield this.connector.getMsgPayloadFromHistory(msg);\n                                // send receive command to relay server\n                                this.refreshPackageId();\n                                yield this.sendReceive(this.packageId.toString(), messageId, topic);\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_FETCHMSG,\n                params: {\n                    data: {\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendBatchFetchAndConsumeMessages(packageId, topicIdList) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(packageId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic) {\n                                let messageId = msg.messageId;\n                                yield this.connector.getMsgPayloadFromHistory(msg);\n                                // send receive command to relay server\n                                this.refreshPackageId(i);\n                                yield this.sendReceive(this.packageId.toString(), messageId, msg.topic);\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendBatchFetchAndConsumeMessages(this.packageId.toString(), topicIdList);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            log.reportLog('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: packageId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_BATCH_FETCHMSG,\n                params: {\n                    topics: topicIdList,\n                    withInternalData: true\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                yield this.connector.connect();\n            }), payload);\n        });\n    }\n    cleanCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.connectStorage.clearCache();\n        });\n    }\n    saveSessionContent(key, data) {\n        if (!data) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(data);\n        this.connectStorage.encryptStoreMsg(jsonData, storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n    }\n    getSessionContent(key) {\n        let jsonStr = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        if (jsonStr) {\n            let object = (0, safejson_1.safeJsonParse)(jsonStr);\n            return object;\n        }\n        return undefined;\n    }\n    // subscribe then fetch messages for each topics\n    subscribeTopics(topicIdList) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)(\"4. topicid list\", topicIdList);\n            log.reportLog(\"4. topicid list\");\n            this.refreshPackageId();\n            const timeF = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let finishCount = 0;\n                //3. send subscribe\n                for (let idx = 0; idx < topicIdList.length; ++idx) {\n                    let topicId = topicIdList[idx];\n                    this.refreshPackageId(idx);\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when subscribe');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // reject(error)\n                            finishCount += 1;\n                            if (finishCount == topicIdList.length) {\n                                resolve();\n                            }\n                        }\n                        this.refreshPackageId(idx);\n                        const timeF = new Date().getTime();\n                        (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n                        finishCount += 1;\n                        if (finishCount == topicIdList.length) {\n                            // 4. fetch messages\n                            log.logDebug(`5. send fetch msg: ${this.packageId}, ${topicId}`);\n                            yield this.sendBatchFetchAndConsumeMessages(this.packageId.toString(), topicIdList);\n                            resolve();\n                        }\n                    }));\n                    log.logDebug(`3. login callback then send subscribe: ${this.packageId}, ${topicId}`);\n                    log.reportLog('3. login callback then send subscribe');\n                    const timeTh = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---login callback->\", timeTh - this.timeLog);\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        return yield this.connector.connect();\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_SUB,\n                        params: {\n                            topic: topicId\n                        }\n                    });\n                }\n            }));\n        });\n    }\n}\nexports.WalletConnectionManager = WalletConnectionManager;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AppwalletConnector = void 0;\nconst ws_connector_1 = require(\"./ws-connector\");\nconst iconnector_1 = require(\"./iconnector\");\nconst utils_1 = require(\"../utils\");\nconst constants_1 = require(\"../protocol/constants\");\nclass AppwalletConnector extends ws_connector_1.WsConnector {\n    static getConnector() {\n        if (!this.instance) {\n            this.instance = new AppwalletConnector();\n        }\n        return this.instance;\n    }\n    constructor() {\n        super();\n        this.walletName = 'OKX App Wallet';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectApp';\n    }\n    getTag() {\n        return iconnector_1.OKX_APP_WALLET;\n    }\n    openWallet(engineConnectInfo) {\n        var _a;\n        if (engineConnectInfo) {\n            let connectRequest = engineConnectInfo.connectRequest;\n            (0, utils_1.logDebug)(`appwallet-connector openwallet before useSHortLink engineConnectInfo.connectRequest JSON ${JSON.stringify(engineConnectInfo)}`);\n            if ((0, utils_1.useShortLink)()) {\n                let shortUniversalLink = (0, utils_1.getOKXLink)(connectRequest);\n                (0, utils_1.openOKXUniversalLink)(shortUniversalLink);\n            }\n            else {\n                (0, utils_1.logDebug)(`appwallet-connector openwallet else connectRequest ${connectRequest}`);\n                let appConnectEncodeParams = (0, utils_1.encodeConnectParams)(Object.assign(Object.assign({}, connectRequest), { redirect: (_a = engineConnectInfo.redirect) !== null && _a !== void 0 ? _a : \"none\" }));\n                let appDeepLink = (0, utils_1.getAppWalletDeepLink)(appConnectEncodeParams);\n                (0, utils_1.openOKXDeeplinkWithFallback)(appDeepLink);\n            }\n        }\n        else {\n            if ((0, utils_1.isOS)('android')) {\n                (0, utils_1.openDeeplinkWithFallback)(constants_1.stackDeepLink, () => { });\n            }\n            else {\n                (0, utils_1.openLinkBlank)(constants_1.standardUniversalLink);\n            }\n        }\n    }\n}\nexports.AppwalletConnector = AppwalletConnector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_TG_WALLET = exports.OKX_APP_WALLET = exports.OKX_INJECT_WALLET = void 0;\nexports.OKX_INJECT_WALLET = \"okx_inject_wallet\";\nexports.OKX_APP_WALLET = \"okx_app_wallet\";\nexports.OKX_TG_WALLET = \"okx_tg_wallet\";\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OkxwalletInjectConnector = exports.WsConnector = exports.TgwalletConnector = exports.InjectConnector = exports.OKX_INJECT_WALLET = exports.OKX_APP_WALLET = exports.OKX_TG_WALLET = exports.AppwalletConnector = void 0;\nvar appwallet_connector_1 = require(\"./appwallet-connector\");\nObject.defineProperty(exports, \"AppwalletConnector\", { enumerable: true, get: function () { return appwallet_connector_1.AppwalletConnector; } });\nvar iconnector_1 = require(\"./iconnector\");\nObject.defineProperty(exports, \"OKX_TG_WALLET\", { enumerable: true, get: function () { return iconnector_1.OKX_TG_WALLET; } });\nObject.defineProperty(exports, \"OKX_APP_WALLET\", { enumerable: true, get: function () { return iconnector_1.OKX_APP_WALLET; } });\nObject.defineProperty(exports, \"OKX_INJECT_WALLET\", { enumerable: true, get: function () { return iconnector_1.OKX_INJECT_WALLET; } });\nvar inject_connector_1 = require(\"./inject-connector\");\nObject.defineProperty(exports, \"InjectConnector\", { enumerable: true, get: function () { return inject_connector_1.InjectConnector; } });\nvar tgwallet_connector_1 = require(\"./tgwallet-connector\");\nObject.defineProperty(exports, \"TgwalletConnector\", { enumerable: true, get: function () { return tgwallet_connector_1.TgwalletConnector; } });\nvar ws_connector_1 = require(\"./ws-connector\");\nObject.defineProperty(exports, \"WsConnector\", { enumerable: true, get: function () { return ws_connector_1.WsConnector; } });\nvar okxwallet_inject_connector_1 = require(\"./okxwallet-inject-connector\");\nObject.defineProperty(exports, \"OkxwalletInjectConnector\", { enumerable: true, get: function () { return okxwallet_inject_connector_1.OkxwalletInjectConnector; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InjectConnector = void 0;\nconst protocol_1 = require(\"../protocol\");\nconst utils_1 = require(\"../utils\");\nconst provider_1 = require(\"../inject/provider\");\nconst iconnector_1 = require(\"./iconnector\");\nconst SolProvider_1 = require(\"../inject/provider/SolProvider\");\nconst wallet_info_1 = require(\"../protocol/connect/wallet-info\");\nconst AptosPrivider_1 = require(\"../inject/provider/AptosPrivider\");\nconst media_1 = require(\"../utils/media\");\nclass InjectConnector {\n    constructor() {\n        this.disconnectListener = [];\n        this.providerMap = new Map();\n        this.walletName = \"\";\n        this.walletNameKey = '';\n        this.enable = true;\n        this.providerMap.set(protocol_1.NameSpaceKeyEip155, new provider_1.Eip155Provider());\n        this.providerMap.set(protocol_1.NameSpaceKeySOL, new SolProvider_1.SolProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeyAptos, new AptosPrivider_1.AptosProvider());\n    }\n    getInjectProvider(nameSpace) {\n        for (const [mapKey, value] of this.providerMap.entries()) {\n            if (nameSpace.includes(mapKey)) {\n                return value;\n            }\n        }\n        return undefined;\n    }\n    openWallet(engineConnectInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c;\n            (0, utils_1.logDebug)(\"InjectEngine connect begin:\", JSON.stringify(engineConnectInfo));\n            if (!engineConnectInfo) {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR);\n            }\n            var universalConnectRequest = engineConnectInfo.connectRequest;\n            try {\n                if (window && window.okxwallet) {\n                    if (universalConnectRequest.requests) {\n                        let requestAccounts = universalConnectRequest.requests\n                            .find(item => item.name === \"requestAccounts\");\n                        let version = yield window.okxwallet.getVersion();\n                        let result = {\n                            method: \"connect\",\n                            requestId: universalConnectRequest.requestId,\n                            payload: {\n                                wallet: {\n                                    platform: (_a = navigator.platform) !== null && _a !== void 0 ? _a : \"/\",\n                                    appName: wallet_info_1.OKXInjectWalletName,\n                                    appVersion: version !== null && version !== void 0 ? version : \"1.0.0\",\n                                    maxProtocolVersion: 1,\n                                },\n                                responses: []\n                            },\n                        };\n                        let responseItem = {\n                            name: \"requestAccounts\",\n                            accounts: [],\n                        };\n                        result.payload.responses.push(responseItem);\n                        var accounts = yield this.getAccountByRequestWallets(true, (_b = requestAccounts.requiredNamespaces) !== null && _b !== void 0 ? _b : [], (_c = requestAccounts.optionalNamespaces) !== null && _c !== void 0 ? _c : []);\n                        if (accounts) {\n                            responseItem.accounts.push(...accounts);\n                            if (responseItem.accounts.length === 0) {\n                                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"connect connectAccounts is null\");\n                            }\n                        }\n                        else {\n                            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"connect requestWallets is null\");\n                        }\n                        if (this.connectResultListener) {\n                            this.connectResultListener(result);\n                        }\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR);\n                }\n            }\n            catch (error) {\n                var code = protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR;\n                var message = '';\n                if (error instanceof protocol_1.OKXConnectError) {\n                    code = error.code;\n                    message = error.message;\n                }\n                if (this.connectResultListener) {\n                    this.connectResultListener({\n                        requestId: \"-1\",\n                        method: 'connect_error',\n                        payload: {\n                            code: code\n                        }\n                    });\n                }\n            }\n        });\n    }\n    disconnect() {\n        (0, utils_1.logDebug)('InjectEngine ==>> disconnect  okxwallet.disconnect()');\n        if (window.okxwallet) {\n            window.okxwallet.disconnect();\n        }\n    }\n    getRequestId() {\n        const requestId = Date.now().toString();\n        (0, utils_1.logDebug)('InjectEngine ==>> getRequestId ==>', requestId);\n        return requestId;\n    }\n    send(request, requestAnswer) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                (0, utils_1.logDebug)(\"InjectEngine send  > request:\", (0, utils_1.safeJsonStringify)(request));\n                let newRequest = request;\n                if (newRequest.method === 'disconnect') {\n                    this.disconnect();\n                    this.disconnectListener = [];\n                    (_a = requestAnswer.onAck) === null || _a === void 0 ? void 0 : _a.call(requestAnswer);\n                    return;\n                }\n                const injectProvider = this.getInjectProvider(newRequest.chainId);\n                if (injectProvider) {\n                    injectProvider.send(newRequest).then(result => {\n                        var _a;\n                        (0, utils_1.logDebug)(\"InjectEngine ==>> send > result:\", result);\n                        (_a = requestAnswer.resolve) === null || _a === void 0 ? void 0 : _a.call(requestAnswer, result);\n                    }).catch(error => {\n                        var _a;\n                        let code = error.code;\n                        if (code === 4001) {\n                            code = protocol_1.OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR;\n                        }\n                        let errorResponse = {\n                            requestId: this.getRequestId(),\n                            method: request.method,\n                            error: {\n                                code: code,\n                                message: error.message\n                            }\n                        };\n                        (0, utils_1.logDebug)(\"InjectEngine ==>> send > errorResponse:\", JSON.stringify(errorResponse));\n                        (_a = requestAnswer.resolve) === null || _a === void 0 ? void 0 : _a.call(requestAnswer, errorResponse);\n                    });\n                    return;\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"InjectEngine ==>> send  ===> error:\", error);\n                return Promise.reject(error);\n            }\n        });\n    }\n    clearData() {\n        this.connectResultListener = undefined;\n    }\n    addDisconnectListener(disconnecter) {\n        this.disconnectListener.push(disconnecter);\n    }\n    setOnConnectResultListener(connectResultListener) {\n        this.connectResultListener = connectResultListener;\n    }\n    connectManagerDisconnect() {\n        return __awaiter(this, arguments, void 0, function* (_ = false) {\n        });\n    }\n    getCurrentConnectionReady(namespaceKeys) {\n        if (!namespaceKeys) {\n            return false;\n        }\n        const allReady = namespaceKeys.every(namespaceKey => { var _a; return (_a = this.getInjectProvider(namespaceKey)) === null || _a === void 0 ? void 0 : _a.connectReady(); });\n        return allReady;\n    }\n    getTag() {\n        return iconnector_1.OKX_INJECT_WALLET;\n    }\n    toJSON() {\n        return \"inject-connector\";\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        if ((0, media_1.isDevice)('mobile')) {\n            if (!window.okxwallet) {\n                onConnectResult(null);\n                return;\n            }\n            var requiredNamespaces = [];\n            for (let namespacesKey in sessionInfo.namespaces) {\n                var connectWalletNameSpace = {\n                    namespace: namespacesKey,\n                    chains: sessionInfo.namespaces[namespacesKey].chains\n                };\n                requiredNamespaces.push(connectWalletNameSpace);\n            }\n            var currentWallet = this.getAccountByRequestWallets(false, requiredNamespaces, [])\n                .then((accounts) => {\n                //compare account with sessionInfo\n                for (let namespacesKey in sessionInfo.namespaces) {\n                    var accountsItem = accounts.find((item) => item.namespace === namespacesKey);\n                    var sessionAccounts = sessionInfo.namespaces[namespacesKey].accounts;\n                    if (!accountsItem) {\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"resotreconnect error: accountItem error\");\n                    }\n                    const areEqual = accountsItem.addresses.length === sessionAccounts.length &&\n                        accountsItem.addresses.slice().sort().every((value, index) => value === sessionAccounts.slice().sort()[index]);\n                    if (areEqual) {\n                        onConnectResult(sessionInfo);\n                    }\n                    else {\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"resotreconnect error: address not as same as session\");\n                    }\n                }\n            }).catch((e) => {\n                onConnectResult(null);\n            });\n        }\n        else {\n            onConnectResult(sessionInfo);\n        }\n    }\n    getAccountByRequestWallets(needPop, requiredNamespaces, optionalNamespaces) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                var walletInfo = [];\n                var accountResult = [];\n                if ((0, media_1.isDevice)(\"mobile\")) {\n                    var walletInfoItem = yield window.okxwallet.requestWallets(needPop, {\n                        requiredNamespaces: requiredNamespaces,\n                        optionalNamespaces: optionalNamespaces\n                    });\n                    walletInfo.push(walletInfoItem);\n                }\n                else {\n                    walletInfo = (yield window.okxwallet.requestWallets(needPop));\n                }\n                var allNameSpace = [...(requiredNamespaces !== null && requiredNamespaces !== void 0 ? requiredNamespaces : []), ...(optionalNamespaces !== null && optionalNamespaces !== void 0 ? optionalNamespaces : [])];\n                let walletInfoFirst = walletInfo[0];\n                (0, utils_1.logDebug)(\"InjectEngine connect connectAccounts:\", JSON.stringify(walletInfoFirst));\n                if (allNameSpace && walletInfoFirst && walletInfoFirst.address) {\n                    for (const [mapKey, provider] of this.providerMap.entries()) {\n                        let itemResult = yield provider.parseConnectResponse(allNameSpace, walletInfoFirst);\n                        if (itemResult) {\n                            accountResult.push(itemResult);\n                        }\n                    }\n                }\n                if (window.okxwallet) {\n                    window.okxwallet.on('accountsChanged', (accounts) => {\n                        (0, utils_1.logDebug)(\"Accounts Changed----->\", JSON.stringify(accounts));\n                        if (accounts && accounts.length === 0) {\n                            this.disconnectListener.forEach(listener => listener());\n                            this.disconnectListener = [];\n                        }\n                    });\n                }\n                return accountResult;\n            }\n            catch (e) {\n                if (e && typeof e === \"object\" && \"code\" in e) {\n                    if (e.code === 4001) {\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR);\n                    }\n                }\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n            }\n        });\n    }\n}\nexports.InjectConnector = InjectConnector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OkxwalletInjectConnector = void 0;\nconst inject_connector_1 = require(\"./inject-connector\");\nclass OkxwalletInjectConnector extends inject_connector_1.InjectConnector {\n    static getConnector() {\n        if (!this.instance) {\n            this.instance = new OkxwalletInjectConnector();\n        }\n        return this.instance;\n    }\n    constructor() {\n        super();\n        this.walletName = 'OKX Wallet Extension';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectInjected';\n    }\n}\nexports.OkxwalletInjectConnector = OkxwalletInjectConnector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TgwalletConnector = void 0;\nconst ws_connector_1 = require(\"./ws-connector\");\nconst iconnector_1 = require(\"./iconnector\");\nconst utils_1 = require(\"../utils\");\nclass TgwalletConnector extends ws_connector_1.WsConnector {\n    static getConnector() {\n        if (!this.instance) {\n            this.instance = new TgwalletConnector();\n        }\n        return this.instance;\n    }\n    constructor() {\n        super();\n        this.walletName = 'OKX Mini Wallet';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectMini';\n    }\n    getTag() {\n        return iconnector_1.OKX_TG_WALLET;\n    }\n    openWallet(engineConnectInfo) {\n        var _a;\n        var encodeTGParams;\n        if (engineConnectInfo && engineConnectInfo.connectRequest) {\n            encodeTGParams = (0, utils_1.encodeTWAConnectURLParams)(Object.assign(Object.assign({}, engineConnectInfo.connectRequest), { redirect: \"none\" }));\n        }\n        var tgUrl = (0, utils_1.getTelegramWalletTWAUrl)(encodeTGParams, (_a = engineConnectInfo === null || engineConnectInfo === void 0 ? void 0 : engineConnectInfo.tmaReturnUrl) !== null && _a !== void 0 ? _a : \"back\");\n        (0, utils_1.openOKXTMAWalletlinkWithFallback)(tgUrl);\n    }\n}\nexports.TgwalletConnector = TgwalletConnector;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WsConnector = void 0;\nconst safejson_1 = require(\"../utils/safejson\");\nconst log_1 = require(\"../utils/log\");\nclass WsConnector {\n    constructor() {\n        this.disconnectListener = [];\n        this.walletName = '';\n        this.walletNameKey = '';\n        this.enable = true;\n        this.pendingRequests = new Map();\n        // report api begin\n        (0, log_1.getDefaultReporter)().beginReport();\n    }\n    setConnectionManager(connectionManager) {\n        this.connectionManager = connectionManager;\n    }\n    addConnectionListener() {\n        var _a;\n        (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.addListener(\"sdk_response\", (event, msg) => {\n            var jsonResponse = (0, safejson_1.safeJsonParse)(msg);\n            (0, log_1.logDebug)(`Engine ==>> addListener ==> success ==> ${jsonResponse}`);\n            this.handleResponse(event, jsonResponse);\n        }, function () {\n        });\n    }\n    addDisconnectListener(disconnecter) {\n        this.disconnectListener.push(disconnecter);\n    }\n    connectManagerDisconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.disconnect(fromRestore));\n        });\n    }\n    openWallet(engineConnectInfo) {\n    }\n    bindRequestForPromise(requestId, resolve) {\n        this.pendingRequests.set(requestId, resolve);\n    }\n    send(request, requestAnswer, ttl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b;\n            (0, log_1.logDebug)('Engine ==>> send  request==>', JSON.stringify(request));\n            const requestId = this.getRequestId();\n            try {\n                let packageId = yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.send(JSON.stringify(Object.assign(Object.assign({}, request), { requestId: requestId })), ttl));\n                if (packageId) {\n                    (_b = this.connectionManager) === null || _b === void 0 ? void 0 : _b.events.once(packageId.toString(), (event) => {\n                        var _a;\n                        (0, log_1.logDebug)(`Engine ==> send => onAck => ${(0, safejson_1.safeJsonStringify)(event)}`);\n                        if (event && event.result) {\n                            (_a = requestAnswer.onAck) === null || _a === void 0 ? void 0 : _a.call(requestAnswer);\n                        }\n                    });\n                }\n                if (requestAnswer.resolve) {\n                    this.bindRequestForPromise(requestId, requestAnswer.resolve);\n                }\n            }\n            catch (e) {\n                return Promise.reject(e);\n            }\n        });\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.restoreConnect(sessionInfo.topic));\n            onConnectResult(sessionInfo);\n        });\n    }\n    restoreconnectFromTopic(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.restoreConnect(topic));\n        });\n    }\n    getRequestId() {\n        const requestId = Date.now().toString();\n        (0, log_1.logDebug)('Engine ==>> getRequestId ==>', requestId);\n        return requestId;\n    }\n    handleResponse(event, response) {\n        (0, log_1.logDebug)(`Engine ==>> handleResponse_1  ======>response: ${(0, safejson_1.safeJsonStringify)(response)}`, event);\n        if (\"requestId\" in response) {\n            (0, log_1.logDebug)(\"Engine ==>> handleResponse_2  ===> in response\");\n            let requestId = response.requestId;\n            const resolve = this.pendingRequests.get(requestId);\n            if (resolve) {\n                (0, log_1.logDebug)(\"Engine ==>> handleResponse_3  ===> find resolve:\", resolve);\n                resolve(response);\n                // 从pendingRequests中删除这个Promise\n                this.pendingRequests.delete(requestId);\n            }\n            else {\n                (0, log_1.logDebug)(\"Engine ==>> handleResponse_3  ===> not find resolve:\");\n                if (response.method === \"disconnect\") {\n                    this.disconnectListener.forEach(listener => listener());\n                    this.disconnectListener = [];\n                    this.clearData();\n                }\n            }\n        }\n    }\n    getCurrentConnectionReady() {\n        var _a;\n        return !!((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getCurrentConnectionReady());\n    }\n    saveSessionContent(key, data) {\n        var _a;\n        (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.saveSessionContent(key, data);\n    }\n    getSessionContent(key) {\n        var _a;\n        return (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getSessionContent(key);\n    }\n    setOnConnectResultListener(connectResultListener) {\n        this.connectResultListener = connectResultListener;\n    }\n    getTag() {\n        return \"\";\n    }\n    toJSON() {\n        return \"ws-connector\";\n    }\n    clearData() {\n        this.pendingRequests.clear();\n    }\n}\nexports.WsConnector = WsConnector;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SessionCrypto = void 0;\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst utils_1 = require(\"../utils/utils\");\nclass SessionCrypto {\n    constructor(keyPair = undefined) {\n        this.nonceLength = 24;\n        this.sessionKeyPair = keyPair ? this.createKeypairFromString(keyPair) : this.createKeypair();\n    }\n    createKeypair() {\n        return tweetnacl_1.default.box.keyPair();\n    }\n    createKeypairFromString(keyPair) {\n        return {\n            publicKey: (0, utils_1.hexToByteArray)(keyPair.publicKey),\n            secretKey: (0, utils_1.hexToByteArray)(keyPair.secretKey),\n        };\n    }\n    createNonce() {\n        return tweetnacl_1.default.randomBytes(this.nonceLength);\n    }\n    get keyPair() {\n        return this.sessionKeyPair;\n    }\n    // dapp 加密:\n    // base64(hex（nonce+加密内容）)\n    encrypt(message, receiverPublicKey) {\n        const encodedMessage = new TextEncoder().encode(message);\n        const nonce = this.createNonce();\n        const encrypted = tweetnacl_1.default.box(encodedMessage, nonce, (0, utils_1.hexToByteArray)(receiverPublicKey), this.keyPair.secretKey);\n        let concatInfo = (0, utils_1.concatUint8Arrays)(nonce, encrypted);\n        var hexResult = (0, utils_1.toHexString)(concatInfo);\n        var encodedResult = new TextEncoder().encode(hexResult);\n        return (0, utils_1.base64encode)(encodedResult, false);\n    }\n    // 钱包加密内容\n    // 注意：没有中间hex的环节\n    // base64（nonce+加密内容)\n    encryptWallet(message, receiverPublicKey) {\n        const encodedMessage = new TextEncoder().encode(message);\n        const nonce = this.createNonce();\n        const encrypted = tweetnacl_1.default.box(encodedMessage, nonce, (0, utils_1.hexToByteArray)(receiverPublicKey), this.keyPair.secretKey);\n        let concatInfo = (0, utils_1.concatUint8Arrays)(nonce, encrypted);\n        return (0, utils_1.base64encode)(concatInfo, false);\n    }\n    // dapp 解密\n    // base64(split(nonce+加密内容))\n    decrypt(message, senderPublicKey) {\n        let base64Content = (0, utils_1.base64decode)(message, true);\n        let messageByteArray = base64Content.toUint8Array();\n        const [nonce, internalMessage] = (0, utils_1.splitToUint8Arrays)(messageByteArray, this.nonceLength);\n        const decrypted = tweetnacl_1.default.box.open(internalMessage, nonce, (0, utils_1.hexToByteArray)(senderPublicKey), this.keyPair.secretKey);\n        if (!decrypted) {\n            throw new Error(`Decryption error: \\n message: ${message.toString()} \\n sender pubkey: ${senderPublicKey.toString()} \\n keypair pubkey: ${(0, utils_1.toHexString)(this.keyPair.publicKey)} \\n keypair secretkey: ${(0, utils_1.toHexString)(this.keyPair.secretKey)}`);\n        }\n        return new TextDecoder().decode(decrypted);\n    }\n    // dapp 解密\n    // base64(hextoByte(split(nonce+加密内容)))\n    decryptWallet(message, senderPublicKey) {\n        let base64Content = (0, utils_1.base64decode)(message, true);\n        let messageByteArray = (0, utils_1.hexToByteArray)(base64Content.toString());\n        const [nonce, internalMessage] = (0, utils_1.splitToUint8Arrays)(messageByteArray, this.nonceLength);\n        const decrypted = tweetnacl_1.default.box.open(internalMessage, nonce, (0, utils_1.hexToByteArray)(senderPublicKey), this.keyPair.secretKey);\n        if (!decrypted) {\n            throw new Error(`Decryption error: \\n message: ${message.toString()} \\n sender pubkey: ${senderPublicKey.toString()} \\n keypair pubkey: ${(0, utils_1.toHexString)(this.keyPair.publicKey)} \\n keypair secretkey: ${(0, utils_1.toHexString)(this.keyPair.secretKey)}`);\n        }\n        return new TextDecoder().decode(decrypted);\n    }\n    stringifyKeypair() {\n        return {\n            publicKey: (0, utils_1.toHexString)(this.keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(this.keyPair.secretKey)\n        };\n    }\n}\nexports.SessionCrypto = SessionCrypto;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./connect\"), exports);\n__exportStar(require(\"./protocol\"), exports);\n__exportStar(require(\"./utils\"), exports);\n__exportStar(require(\"./inject\"), exports);\n__exportStar(require(\"./connector\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AptosMethods = exports.SOLANAMethods = exports.Eip55Methods = void 0;\nexports.hasOKXInjectedProvider = hasOKXInjectedProvider;\nfunction hasOKXInjectedProvider() {\n    if (typeof getWindowProviderNamespace(\"okxwallet\") !== 'undefined') {\n        return true;\n    }\n    return false;\n}\nfunction getWindowProviderNamespace(namespace) {\n    const providerSearch = (provider, namespace) => {\n        const [property, ...path] = namespace.split('.');\n        const _provider = provider[property];\n        if (_provider) {\n            if (path.length === 0)\n                return _provider;\n            return providerSearch(_provider, path.join('.'));\n        }\n    };\n    if (typeof window !== 'undefined')\n        return providerSearch(window, namespace);\n}\nexports.Eip55Methods = [\n    \"personal_sign\",\n    \"eth_signTypedData_v4\",\n    \"eth_sendTransaction\",\n    \"wallet_addEthereumChain\",\n    \"wallet_watchAsset\",\n    \"wallet_switchEthereumChain\",\n    \"eth_requestAccounts\",\n    \"eth_accounts\",\n    \"eth_chainId\"\n];\nexports.SOLANAMethods = [\n    \"solana_signTransaction\",\n    \"solana_signMessage\",\n    \"solana_signAllTransactions\",\n    \"solana_signAndSendTransaction\"\n];\nexports.AptosMethods = [\n    \"aptos_signMessage\",\n    \"aptos_signTransaction\",\n    \"aptos_signAndSubmitTransaction\"\n];\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./InjectUtils\"), exports);\n__exportStar(require(\"./provider\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AptosProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass AptosProvider {\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                (0, utils_1.logDebug)(\"AptosProvider send request:\", (0, utils_1.safeJsonStringify)(request));\n                const method = request.method;\n                let result;\n                switch (method) {\n                    case \"aptos_signMessage\":\n                        {\n                            if (request.injectParams) {\n                                let message = yield window.okxwallet.aptos.signMessage(request.injectParams);\n                                result = {\n                                    method: request.method,\n                                    result: message.signature,\n                                };\n                                (0, utils_1.logDebug)(\"AptosProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                                return result;\n                            }\n                            else {\n                                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `param is error method: '${method}'`);\n                            }\n                        }\n                        break;\n                    case \"aptos_signTransaction\":\n                        {\n                            (0, utils_1.logDebug)(\"AptosProvider Method>>>> :\", method);\n                            let message = yield window.okxwallet.aptos.signTransaction(request.params);\n                            result = {\n                                method: request.method,\n                                result: message,\n                            };\n                            (0, utils_1.logDebug)(\"AptosProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                            return result;\n                        }\n                        break;\n                    case \"aptos_signAndSubmitTransaction\":\n                        {\n                            (0, utils_1.logDebug)(\"AptosProvider Method>>>> :\", method);\n                            let message = yield window.okxwallet.aptos.signAndSubmitTransaction(request.params);\n                            result = {\n                                method: request.method,\n                                result: message.hash,\n                            };\n                            (0, utils_1.logDebug)(\"AptosProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                            return result;\n                        }\n                        break;\n                    default:\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, ` method: '${method}'`);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"AptosProvider send error:\", error);\n                throw error;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    disconnect() {\n    }\n    resotreConnect() {\n        return Promise.resolve(undefined);\n    }\n    parseConnectResponse(connectWalletNameSpace, connectRequestWalletResponse) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let connectChain = [];\n            connectWalletNameSpace.forEach(item => {\n                if (item.namespace === protocol_1.NameSpaceKeyAptos) {\n                    connectChain.push(...item.chains);\n                }\n            });\n            let addresses = [];\n            let extra = {};\n            connectChain.forEach((chainStr) => {\n                let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                    return addressItem.chainId === \"637\" && addressItem.coinType === 637;\n                });\n                if (selectedAddress) {\n                    addresses.push(chainStr + \":\" + selectedAddress.address);\n                    extra[chainStr] = {\n                        publicKey: selectedAddress.publicKey\n                    };\n                }\n            });\n            if (addresses && addresses.length > 0) {\n                let nameSpaceResponse = {\n                    namespace: protocol_1.NameSpaceKeyAptos,\n                    addresses: addresses,\n                    methods: [...InjectUtils_1.AptosMethods],\n                    extra: extra\n                };\n                return nameSpaceResponse;\n            }\n            return undefined;\n        });\n    }\n}\nexports.AptosProvider = AptosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SolProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass SolProvider {\n    // TOOD\n    // 问题: 是否需要切链  不切链, 主网 测试网络  sonic 如何区别\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                yield this.resotreConnect();\n                (0, utils_1.logDebug)(\"SolProvider send request:\", JSON.stringify(request));\n                const method = request.method;\n                let result;\n                if (request.injectParams) {\n                    switch (method) {\n                        case \"solana_signMessage\":\n                            {\n                                if (request.injectParams && typeof request.injectParams === 'object' && 'message' in request.injectParams) {\n                                    var message = (_a = request.injectParams) === null || _a === void 0 ? void 0 : _a.message;\n                                    const encodedMessage = new TextEncoder().encode(message);\n                                    const signedMessage = yield window.okxwallet.solana.signMessage(encodedMessage, \"utf8\");\n                                    result = {\n                                        method: request.method,\n                                        result: bs58_1.default.encode(signedMessage.signature),\n                                    };\n                                    (0, utils_1.logDebug)(\"SolProvider send result:\", JSON.stringify(signedMessage));\n                                    return result;\n                                }\n                                else {\n                                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `param is error method: '${method}'`);\n                                }\n                            }\n                            break;\n                        case \"solana_signTransaction\":\n                            {\n                                let bufferResult = yield window.okxwallet.solana.signTransaction(request.injectParams);\n                                (0, utils_1.logDebug)(\"SolProvider send bufferResult:\", JSON.stringify(bufferResult));\n                                result = {\n                                    method: request.method,\n                                    injectResult: bufferResult,\n                                };\n                                (0, utils_1.logDebug)(\"SolProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                                return result;\n                            }\n                            break;\n                        case \"solana_signAllTransactions\":\n                            {\n                                let allResult = yield window.okxwallet.solana.signAllTransactions(request.injectParams);\n                                (0, utils_1.logDebug)(\"SolProvider send result:\", (0, utils_1.safeJsonStringify)(allResult));\n                                result = {\n                                    method: request.method,\n                                    injectResult: allResult,\n                                };\n                                return result;\n                            }\n                            break;\n                        case \"solana_signAndSendTransaction\":\n                            {\n                                var signAndSendResult = yield window.okxwallet.solana.signAndSendTransaction(request.injectParams);\n                                (0, utils_1.logDebug)(\"SolProvider send result:\", (0, utils_1.safeJsonStringify)(signAndSendResult));\n                                result = {\n                                    method: request.method,\n                                    injectResult: signAndSendResult,\n                                };\n                                return result;\n                            }\n                            break;\n                        default:\n                            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, `method: '${method}'`);\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `param is error method: '${method}'`);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"SolProvider send error:\", error);\n                throw error;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    disconnect() {\n    }\n    resotreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            const provider = window.okxwallet.solana;\n            return provider.connect();\n        }\n        return Promise.resolve();\n    }\n    parseConnectResponse(connectWalletNameSpace, connectRequestWalletResponse) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let connectChain = [];\n            connectWalletNameSpace.forEach(item => {\n                if (item.namespace === protocol_1.NameSpaceKeySOL) {\n                    connectChain.push(...item.chains);\n                }\n            });\n            let addresses = [];\n            let extra = {};\n            let accounts = {};\n            if (!(0, media_1.isDevice)(\"mobile\")) {\n                accounts = yield window.okxwallet.solana.connect();\n                (0, utils_1.logDebug)(\"parseConnectResponse solana.connect() :\", JSON.stringify(accounts));\n            }\n            connectChain.forEach((chainStr) => {\n                let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                    return (addressItem.chainId === \"501\" && addressItem.coinType === 501)\n                        || (addressItem.namespaceChainId === chainStr);\n                });\n                if (selectedAddress) {\n                    addresses.push(chainStr + \":\" + selectedAddress.address);\n                    if (accounts && \"publicKey\" in accounts) {\n                        extra[chainStr] = accounts;\n                    }\n                    else {\n                        extra[chainStr] = {\n                            publicKey: selectedAddress.publicKey\n                        };\n                    }\n                }\n            });\n            if (addresses && addresses.length > 0) {\n                let nameSpaceResponse = {\n                    namespace: protocol_1.NameSpaceKeySOL,\n                    addresses: addresses,\n                    methods: [...InjectUtils_1.SOLANAMethods],\n                    extra: extra\n                };\n                (0, utils_1.logDebug)(\"parseConnectResponse nameSpaceResponse :\", JSON.stringify(nameSpaceResponse));\n                return nameSpaceResponse;\n            }\n            return undefined;\n        });\n    }\n}\nexports.SolProvider = SolProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Eip155Provider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass Eip155Provider {\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                (0, utils_1.logDebug)(\"Eip155Provider send request:\", (0, utils_1.safeJsonStringify)(request));\n                yield this.resotreConnect();\n                let ethParams = null;\n                switch (request.method) {\n                    case \"personal_sign\":\n                        if (request.params && \"message\" in request.params) {\n                            ethParams = {\n                                method: request.method,\n                                params: [\n                                    request.params.message,\n                                    request.address,\n                                ],\n                            };\n                        }\n                        break;\n                    case \"eth_sendTransaction\":\n                    case \"wallet_addEthereumChain\":\n                    case \"wallet_switchEthereumChain\":\n                        {\n                            if (request.params) {\n                                ethParams = {\n                                    method: request.method,\n                                    params: [request.params],\n                                };\n                            }\n                        }\n                        break;\n                    case \"eth_signTypedData_v4\":\n                        {\n                            if (request.params && \"typedDataJson\" in request.params && ((_a = request.params) === null || _a === void 0 ? void 0 : _a.typedDataJson) && typeof request.params.typedDataJson === \"string\") {\n                                ethParams = {\n                                    method: request.method,\n                                    params: [\n                                        request.address,\n                                        request.params.typedDataJson,\n                                    ],\n                                };\n                            }\n                        }\n                        break;\n                    case \"wallet_watchAsset\":\n                        {\n                            if (request.params) {\n                                ethParams = {\n                                    method: request.method,\n                                    params: request.params,\n                                };\n                            }\n                        }\n                        break;\n                    default:\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n                if (ethParams) {\n                    // 特殊处理 \"wallet_switchEthereumChain\"\n                    if ((request.method === \"wallet_switchEthereumChain\" || request.method === \"wallet_addEthereumChain\")\n                        && request.params\n                        && \"chainId\" in request.params) {\n                        (0, utils_1.logDebug)(\"Eip155Provider send request switch requestParams:\", (0, utils_1.safeJsonStringify)(ethParams));\n                        const switchChainId = parseInt(request.params.chainId, 16).toString();\n                        yield window.okxwallet.request(ethParams);\n                        const resultSwitch = `eip155:${switchChainId}:${request.address}`;\n                        (0, utils_1.logDebug)(\"Eip155Provider send request switch result:\", resultSwitch);\n                        return {\n                            result: resultSwitch,\n                            method: request.method,\n                        };\n                    }\n                    else {\n                        const chain = (0, utils_1.getChainId)(request.chainId);\n                        const chainHex = `0x${Number(chain).toString(16)}`;\n                        (0, utils_1.logDebug)(\"Eip155Provider current chainId:\", chain, chainHex);\n                        if (chainHex) {\n                            yield window.okxwallet.request({\n                                method: \"wallet_switchEthereumChain\",\n                                params: [{ chainId: chainHex }],\n                            });\n                            (0, utils_1.logDebug)(\"Eip155Provider send request requestParams:\", chainHex, (0, utils_1.safeJsonStringify)(ethParams));\n                            const resultMe = yield window.okxwallet.request(ethParams);\n                            (0, utils_1.logDebug)(\"Eip155Provider send request result:\", (0, utils_1.safeJsonStringify)(resultMe));\n                            return {\n                                result: resultMe,\n                                method: request.method,\n                            };\n                        }\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"Eip155Provider encountered an error:\", error);\n                throw error;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    resotreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return window.okxwallet.request({ method: 'eth_requestAccounts' });\n        }\n        return Promise.resolve();\n    }\n    parseConnectResponse(connectWalletNameSpace, connectRequestWalletResponse) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeyEip155) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                connectChain.forEach((chainStr) => {\n                    let currentChain = (0, utils_1.getChainId)(chainStr);\n                    let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                        return (addressItem.chainId === currentChain && addressItem.coinType === 60)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                    if (selectedAddress) {\n                        addresses.push(chainStr + \":\" + selectedAddress.address);\n                        extra[chainStr] = {\n                            publicKey: selectedAddress.publicKey\n                        };\n                    }\n                });\n                if (addresses && addresses.length > 0) {\n                    let nameSpaceResponse = {\n                        namespace: protocol_1.NameSpaceKeyEip155,\n                        addresses: addresses,\n                        methods: [...InjectUtils_1.Eip55Methods],\n                        extra: extra\n                    };\n                    return nameSpaceResponse;\n                }\n                return undefined;\n            }\n            catch (error) {\n            }\n        });\n    }\n}\nexports.Eip155Provider = Eip155Provider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./eip155Provider\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TON_CHAINS = exports.COSMOS_CHAINS = exports.APTOS_CHAINS = exports.SUI_CHAINS = exports.SOLANA_CHAINS = exports.BTC_CHAINS = void 0;\nexports.BTC_CHAINS = {\n    MAINNET: 'btc:mainnet',\n    FRACTAL: 'fractal:mainnet',\n};\nexports.SOLANA_CHAINS = {\n    MAINNET: 'solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp',\n    TESTNET: 'solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z',\n    SONIC_TESTNET: 'sonic:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z'\n};\nexports.SUI_CHAINS = {\n    MAINNET: 'sui:mainnet'\n};\nexports.APTOS_CHAINS = {\n    MAINNET: 'aptos:mainnet' // aptos mainnet\n};\nexports.COSMOS_CHAINS = {\n    COSMOS_MAINNET: 'cosmos:cosmoshub-4'\n};\nexports.TON_CHAINS = {\n    MAINNET: 'ton:-239', // mainnet\n};\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IEngine = exports.ISignClient = exports.ISignClientEvents = exports.IEngineEvents = void 0;\nconst eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\nclass IEngineEvents extends eventemitter3_1.default {\n    constructor() {\n        super();\n    }\n}\nexports.IEngineEvents = IEngineEvents;\nclass ISignClientEvents extends eventemitter3_1.default {\n    constructor() {\n        super();\n    }\n}\nexports.ISignClientEvents = ISignClientEvents;\nclass ISignClient {\n    constructor(data) {\n        this.data = data;\n    }\n}\nexports.ISignClient = ISignClient;\nclass IEngine {\n    constructor(client) {\n        this.client = client;\n    }\n}\nexports.IEngine = IEngine;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXWalletName = exports.creatOKXInjectWalletInfo = exports.creatOKXMiniAppWalletInfo = exports.creatOKXWalletInfo = exports.ISignClientEvents = exports.IEngine = exports.IEngineEvents = exports.ISignClient = exports.getBigIntRpcId = exports.formatJsonRpcRequest = exports.isJsonRpcError = exports.isJsonRpcResponse = exports.parseConnectionError = exports.isHttpUrl = exports.formatJsonRpcError = void 0;\nvar json_rpc_1 = require(\"./json-rpc\");\nObject.defineProperty(exports, \"formatJsonRpcError\", { enumerable: true, get: function () { return json_rpc_1.formatJsonRpcError; } });\nObject.defineProperty(exports, \"isHttpUrl\", { enumerable: true, get: function () { return json_rpc_1.isHttpUrl; } });\nObject.defineProperty(exports, \"parseConnectionError\", { enumerable: true, get: function () { return json_rpc_1.parseConnectionError; } });\nObject.defineProperty(exports, \"isJsonRpcResponse\", { enumerable: true, get: function () { return json_rpc_1.isJsonRpcResponse; } });\nObject.defineProperty(exports, \"isJsonRpcError\", { enumerable: true, get: function () { return json_rpc_1.isJsonRpcError; } });\nObject.defineProperty(exports, \"formatJsonRpcRequest\", { enumerable: true, get: function () { return json_rpc_1.formatJsonRpcRequest; } });\nObject.defineProperty(exports, \"getBigIntRpcId\", { enumerable: true, get: function () { return json_rpc_1.getBigIntRpcId; } });\nvar engine_1 = require(\"./engine\");\nObject.defineProperty(exports, \"ISignClient\", { enumerable: true, get: function () { return engine_1.ISignClient; } });\nObject.defineProperty(exports, \"IEngineEvents\", { enumerable: true, get: function () { return engine_1.IEngineEvents; } });\nObject.defineProperty(exports, \"IEngine\", { enumerable: true, get: function () { return engine_1.IEngine; } });\nObject.defineProperty(exports, \"ISignClientEvents\", { enumerable: true, get: function () { return engine_1.ISignClientEvents; } });\n__exportStar(require(\"./ton\"), exports);\nvar wallet_info_1 = require(\"./wallet-info\");\nObject.defineProperty(exports, \"creatOKXWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXWalletInfo; } });\nObject.defineProperty(exports, \"creatOKXMiniAppWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXMiniAppWalletInfo; } });\nObject.defineProperty(exports, \"creatOKXInjectWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXInjectWalletInfo; } });\nObject.defineProperty(exports, \"OKXWalletName\", { enumerable: true, get: function () { return wallet_info_1.OKXWalletName; } });\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isJsonRpcPayload = isJsonRpcPayload;\nexports.isJsonRpcRequest = isJsonRpcRequest;\nexports.isJsonRpcResponse = isJsonRpcResponse;\nexports.isJsonRpcResult = isJsonRpcResult;\nexports.isJsonRpcError = isJsonRpcError;\nexports.payloadId = payloadId;\nexports.getBigIntRpcId = getBigIntRpcId;\nexports.formatJsonRpcRequest = formatJsonRpcRequest;\nexports.formatJsonRpcResult = formatJsonRpcResult;\nexports.formatJsonRpcError = formatJsonRpcError;\nexports.isReservedErrorCode = isReservedErrorCode;\nexports.getError = getError;\nexports.getErrorByCode = getErrorByCode;\nexports.formatErrorMessage = formatErrorMessage;\nexports.isHttpUrl = isHttpUrl;\nexports.isWsUrl = isWsUrl;\nexports.parseConnectionError = parseConnectionError;\nfunction isJsonRpcPayload(payload) {\n    return (typeof payload === \"object\" &&\n        \"id\" in payload &&\n        \"jsonrpc\" in payload &&\n        payload.jsonrpc === \"2.0\");\n}\nfunction isJsonRpcRequest(payload) {\n    return isJsonRpcPayload(payload) && \"method\" in payload;\n}\nfunction isJsonRpcResponse(payload) {\n    return isJsonRpcPayload(payload) && (isJsonRpcResult(payload) || isJsonRpcError(payload));\n}\nfunction isJsonRpcResult(payload) {\n    return \"result\" in payload;\n}\nfunction isJsonRpcError(payload) {\n    return \"error\" in payload;\n}\nconst okx_connect_error_1 = require(\"../error/okx-connect.error\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nclass IncrementalRandomGenerator {\n    constructor(bits) {\n        this.i = 1;\n        const typedArray = bits === 8 ? new Uint8Array(1) : bits === 16 ? new Uint16Array(1) : new Uint32Array(1);\n        if (bits) {\n            this.initialValue = tweetnacl_1.default.randomBytes(bits / 8)[0];\n        }\n        else {\n            this.initialValue = 0;\n        }\n    }\n    getNextValue() {\n        return this.initialValue + this.i++;\n    }\n}\nconst uint8Generator = new IncrementalRandomGenerator(8);\nconst uint16Generator = new IncrementalRandomGenerator(16);\nfunction payloadId() {\n    const date = Date.now() * 1000;\n    const extra = uint8Generator.getNextValue();\n    return date + extra;\n}\nfunction getBigIntRpcId() {\n    const date = BigInt(Date.now()) * BigInt(1000000);\n    const extra = BigInt(uint16Generator.getNextValue());\n    return date + extra;\n}\nfunction formatJsonRpcRequest(method, params, id) {\n    return {\n        id: id || payloadId(),\n        jsonrpc: \"2.0\",\n        method,\n        params,\n    };\n}\nfunction formatJsonRpcResult(id, result) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        result,\n    };\n}\nfunction formatJsonRpcError(id, error, data) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        error: formatErrorMessage(error, data),\n    };\n}\nfunction isReservedErrorCode(code) {\n    return okx_connect_error_1.RESERVED_ERROR_CODES.includes(code);\n}\nfunction getError(type) {\n    if (!Object.keys(okx_connect_error_1.STANDARD_ERROR_MAP).includes(type)) {\n        return okx_connect_error_1.STANDARD_ERROR_MAP[okx_connect_error_1.DEFAULT_ERROR];\n    }\n    return okx_connect_error_1.STANDARD_ERROR_MAP[type];\n}\nfunction getErrorByCode(code) {\n    const match = Object.values(okx_connect_error_1.STANDARD_ERROR_MAP).find((e) => e.code === code);\n    if (!match) {\n        return okx_connect_error_1.STANDARD_ERROR_MAP[okx_connect_error_1.DEFAULT_ERROR];\n    }\n    return match;\n}\nfunction formatErrorMessage(error, data) {\n    if (typeof error === \"undefined\") {\n        return getError(okx_connect_error_1.INTERNAL_ERROR);\n    }\n    if (typeof error === \"string\") {\n        error = Object.assign(Object.assign({}, getError(okx_connect_error_1.SERVER_ERROR)), { message: error });\n    }\n    if (typeof data !== \"undefined\") {\n        error.data = data;\n    }\n    if (isReservedErrorCode(error.code)) {\n        error = getErrorByCode(error.code);\n    }\n    return error;\n}\nfunction getUrlProtocol(url) {\n    const matches = url.match(new RegExp(/^\\w+:/, \"gi\"));\n    if (!matches || !matches.length)\n        return;\n    return matches[0];\n}\nfunction matchRegexProtocol(url, regex) {\n    const protocol = getUrlProtocol(url);\n    if (typeof protocol === \"undefined\")\n        return false;\n    return new RegExp(regex).test(protocol);\n}\nfunction isHttpUrl(url) {\n    return matchRegexProtocol(url, \"^https?:\");\n}\nfunction isWsUrl(url) {\n    return matchRegexProtocol(url, \"^wss?:\");\n}\nfunction parseConnectionError(e, url, type) {\n    return e.message.includes(\"getaddrinfo ENOTFOUND\") || e.message.includes(\"connect ECONNREFUSED\")\n        ? new Error(`Unavailable ${type} RPC url at ${url}`)\n        : e;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_ITEM_ERROR_CODES = void 0;\nvar CONNECT_ITEM_ERROR_CODES;\n(function (CONNECT_ITEM_ERROR_CODES) {\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n})(CONNECT_ITEM_ERROR_CODES || (exports.CONNECT_ITEM_ERROR_CODES = CONNECT_ITEM_ERROR_CODES = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TONCHAIN = void 0;\nvar TONCHAIN;\n(function (TONCHAIN) {\n    TONCHAIN[\"MAINNET\"] = \"-239\";\n})(TONCHAIN || (exports.TONCHAIN = TONCHAIN = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_ITEM_ERROR_CODES = exports.TONCHAIN = void 0;\nvar connect_wallet_1 = require(\"./connect-wallet\");\nObject.defineProperty(exports, \"TONCHAIN\", { enumerable: true, get: function () { return connect_wallet_1.TONCHAIN; } });\nvar connect_event_1 = require(\"./connect-event\");\nObject.defineProperty(exports, \"CONNECT_ITEM_ERROR_CODES\", { enumerable: true, get: function () { return connect_event_1.CONNECT_ITEM_ERROR_CODES; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXInjectWalletName = exports.OKXMiniWalletName = exports.OKXWalletName = void 0;\nexports.creatOKXWalletInfo = creatOKXWalletInfo;\nexports.creatOKXMiniAppWalletInfo = creatOKXMiniAppWalletInfo;\nexports.creatOKXInjectWalletInfo = creatOKXInjectWalletInfo;\nexports.OKXWalletName = \"OKX Wallet\";\nexports.OKXMiniWalletName = \"OKX Mini Wallet\";\nexports.OKXInjectWalletName = \"OKX Inject Wallet\";\nfunction creatOKXWalletInfo() {\n    return {\n        \"appName\": \"okxAppWallet\",\n        \"name\": exports.OKXWalletName,\n        \"imageUrl\": \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\"\n    };\n}\nfunction creatOKXMiniAppWalletInfo() {\n    return {\n        \"appName\": \"okxMiniApp\",\n        \"name\": exports.OKXMiniWalletName,\n        \"imageUrl\": \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\"\n    };\n}\nfunction creatOKXInjectWalletInfo() {\n    return {\n        \"appName\": \"okxInjectWallet\",\n        \"name\": exports.OKXInjectWalletName,\n        \"imageUrl\": \"\"\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.stackDeepLink = exports.tgwalletAppName = exports.tgwalletName = exports.tonConnectSdkVersion = exports.shortUniversalLink = exports.standardDeeplink = exports.downloadUrl = exports.standardUniversalLink = exports.okxDeeplink = void 0;\nexports.getTestTwaUrl = getTestTwaUrl;\nexports.getTestTgTwaUrl = getTestTgTwaUrl;\nexports.okxDeeplink = 'okx://web3';\nexports.standardUniversalLink = typeof window !== \"undefined\" && window.location.hostname.includes(\"okx.com\")\n    ? \"https://link.okx.com/download\"\n    : \"https://www.okx.com/download\";\nexports.downloadUrl = \"https://www.okx.com/download\";\n// export const standardUniversalLink = 'http://localhost:5173';\nexports.standardDeeplink = `${exports.okxDeeplink}/wallet/connect`;\nexports.shortUniversalLink = `https://www.okx.com/ul/connect`;\n// export const standardDeeplink = 'http://localhost:5173';\nexports.tonConnectSdkVersion = '1';\n// export const tgwalletName: string = \"TCTestqdqwdqwdqBot\"\nexports.tgwalletName = \"OKX_WALLET_BOT\";\nexports.tgwalletAppName = \"start\";\n// https://t.me/OKX_WALLET_BOT/start\nexports.stackDeepLink = 'okx://web3?stack=true';\nfunction getTestTwaUrl() {\n    return window.okxTesttwaUrl;\n}\nfunction getTestTgTwaUrl() {\n    return window.okxTestTgtwaUrl;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_CONNECT_ERROR_CODES = exports.OKXConnectError = void 0;\nvar okx_connect_error_1 = require(\"./okx-connect.error\");\nObject.defineProperty(exports, \"OKXConnectError\", { enumerable: true, get: function () { return okx_connect_error_1.OKXConnectError; } });\nObject.defineProperty(exports, \"OKX_CONNECT_ERROR_CODES\", { enumerable: true, get: function () { return okx_connect_error_1.OKX_CONNECT_ERROR_CODES; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEFAULT_ERROR = exports.STANDARD_ERROR_MAP = exports.SERVER_ERROR_CODE_RANGE = exports.RESERVED_ERROR_CODES = exports.SERVER_ERROR = exports.INTERNAL_ERROR = exports.INVALID_PARAMS = exports.METHOD_NOT_FOUND = exports.INVALID_REQUEST = exports.PARSE_ERROR = exports.OKX_CONNECT_ERROR_CODES = exports.OKXConnectError = void 0;\nclass OKXConnectError extends Error {\n    constructor(code, message) {\n        if (message == undefined) {\n            message = getDefaultMessageByCode(code);\n        }\n        super(message);\n        this.code = code;\n        this.message = `${OKXConnectError.prefix} ${message ? '\\n' + message : ''}`;\n        Object.setPrototypeOf(this, OKXConnectError.prototype);\n    }\n    toJSON() {\n        return {\n            message: this.message,\n            code: this.code\n        };\n    }\n}\nexports.OKXConnectError = OKXConnectError;\nOKXConnectError.prefix = '[OKX_CONNECT_SDK_ERROR]';\nfunction getDefaultMessageByCode(code) {\n    if (code == OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR) {\n        return \"unknown error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR) {\n        return \"bad request error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.ALREADY_CONNECTED_ERROR) {\n        return \"already connected error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR) {\n        return \"not connected error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.UNKNOWN_APP_ERROR) {\n        return \"unknown app error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n        return \"user rejects error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR_CAUSE_REGISTER) {\n        return \"wallet address are registering\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED) {\n        return \"method not supported\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.CONNECTION_ERROR) {\n        return \"connect error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED) {\n        return \"chain not supported\";\n    }\n    return \"unknown error\";\n}\nvar OKX_CONNECT_ERROR_CODES;\n(function (OKX_CONNECT_ERROR_CODES) {\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"BAD_REQUEST_ERROR\"] = 1] = \"BAD_REQUEST_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"ALREADY_CONNECTED_ERROR\"] = 11] = \"ALREADY_CONNECTED_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"NOT_CONNECTED_ERROR\"] = 12] = \"NOT_CONNECTED_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"UNKNOWN_APP_ERROR\"] = 100] = \"UNKNOWN_APP_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"USER_REJECTS_ERROR\"] = 300] = \"USER_REJECTS_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"USER_REJECTS_ERROR_CAUSE_REGISTER\"] = 301] = \"USER_REJECTS_ERROR_CAUSE_REGISTER\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"CHAIN_NOT_SUPPORTED\"] = 500] = \"CHAIN_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"WALLET_NOT_SUPPORTED\"] = 600] = \"WALLET_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"CONNECTION_ERROR\"] = 700] = \"CONNECTION_ERROR\";\n})(OKX_CONNECT_ERROR_CODES || (exports.OKX_CONNECT_ERROR_CODES = OKX_CONNECT_ERROR_CODES = {}));\nexports.PARSE_ERROR = \"PARSE_ERROR\";\nexports.INVALID_REQUEST = \"INVALID_REQUEST\";\nexports.METHOD_NOT_FOUND = \"METHOD_NOT_FOUND\";\nexports.INVALID_PARAMS = \"INVALID_PARAMS\";\nexports.INTERNAL_ERROR = \"INTERNAL_ERROR\";\nexports.SERVER_ERROR = \"SERVER_ERROR\";\nexports.RESERVED_ERROR_CODES = [-32700, -32600, -32601, -32602, -32603];\nexports.SERVER_ERROR_CODE_RANGE = [-32000, -32099];\nexports.STANDARD_ERROR_MAP = {\n    [exports.PARSE_ERROR]: { code: -32700, message: \"Parse error\" },\n    [exports.INVALID_REQUEST]: { code: -32600, message: \"Invalid Request\" },\n    [exports.METHOD_NOT_FOUND]: { code: -32601, message: \"Method not found\" },\n    [exports.INVALID_PARAMS]: { code: -32602, message: \"Invalid params\" },\n    [exports.INTERNAL_ERROR]: { code: -32603, message: \"Internal error\" },\n    [exports.SERVER_ERROR]: { code: -32000, message: \"Server error\" },\n};\nexports.DEFAULT_ERROR = exports.SERVER_ERROR;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TON_CHAINS = exports.COSMOS_CHAINS = exports.APTOS_CHAINS = exports.SUI_CHAINS = exports.SOLANA_CHAINS = exports.BTC_CHAINS = exports.downloadUrl = exports.okxDeeplink = exports.tonConnectSdkVersion = exports.standardDeeplink = exports.standardUniversalLink = exports.NameSpaceKeyStarknet = exports.NameSpaceKeyTron = exports.NameSpaceKeyCosmos = exports.NameSpaceKeyAptos = exports.NameSpaceKeyBtc = exports.NameSpaceKeySui = exports.NameSpaceKeyTON = exports.NameSpaceKeySOL = exports.NameSpaceKeyEip155 = void 0;\n__exportStar(require(\"./error\"), exports);\nvar misc_1 = require(\"./misc\");\nObject.defineProperty(exports, \"NameSpaceKeyEip155\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyEip155; } });\nObject.defineProperty(exports, \"NameSpaceKeySOL\", { enumerable: true, get: function () { return misc_1.NameSpaceKeySOL; } });\nObject.defineProperty(exports, \"NameSpaceKeyTON\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyTON; } });\nObject.defineProperty(exports, \"NameSpaceKeySui\", { enumerable: true, get: function () { return misc_1.NameSpaceKeySui; } });\nObject.defineProperty(exports, \"NameSpaceKeyBtc\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyBtc; } });\nObject.defineProperty(exports, \"NameSpaceKeyAptos\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyAptos; } });\nObject.defineProperty(exports, \"NameSpaceKeyCosmos\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyCosmos; } });\nObject.defineProperty(exports, \"NameSpaceKeyTron\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyTron; } });\nObject.defineProperty(exports, \"NameSpaceKeyStarknet\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyStarknet; } });\nvar constants_1 = require(\"./constants\");\nObject.defineProperty(exports, \"standardUniversalLink\", { enumerable: true, get: function () { return constants_1.standardUniversalLink; } });\nObject.defineProperty(exports, \"standardDeeplink\", { enumerable: true, get: function () { return constants_1.standardDeeplink; } });\nObject.defineProperty(exports, \"tonConnectSdkVersion\", { enumerable: true, get: function () { return constants_1.tonConnectSdkVersion; } });\nObject.defineProperty(exports, \"okxDeeplink\", { enumerable: true, get: function () { return constants_1.okxDeeplink; } });\nObject.defineProperty(exports, \"downloadUrl\", { enumerable: true, get: function () { return constants_1.downloadUrl; } });\n__exportStar(require(\"./connect\"), exports);\nvar chains_1 = require(\"./chains\");\nObject.defineProperty(exports, \"BTC_CHAINS\", { enumerable: true, get: function () { return chains_1.BTC_CHAINS; } });\nObject.defineProperty(exports, \"SOLANA_CHAINS\", { enumerable: true, get: function () { return chains_1.SOLANA_CHAINS; } });\nObject.defineProperty(exports, \"SUI_CHAINS\", { enumerable: true, get: function () { return chains_1.SUI_CHAINS; } });\nObject.defineProperty(exports, \"APTOS_CHAINS\", { enumerable: true, get: function () { return chains_1.APTOS_CHAINS; } });\nObject.defineProperty(exports, \"COSMOS_CHAINS\", { enumerable: true, get: function () { return chains_1.COSMOS_CHAINS; } });\nObject.defineProperty(exports, \"TON_CHAINS\", { enumerable: true, get: function () { return chains_1.TON_CHAINS; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NameSpaceKeyStarknet = exports.NameSpaceKeyTron = exports.NameSpaceKeyCosmos = exports.NameSpaceKeyAptos = exports.NameSpaceKeyBtc = exports.NameSpaceKeySui = exports.NameSpaceKeyTON = exports.NameSpaceKeySOL = exports.NameSpaceKeyEip155 = void 0;\nexports.NameSpaceKeyEip155 = \"eip155\";\nexports.NameSpaceKeySOL = \"solana\";\nexports.NameSpaceKeyTON = \"ton\";\nexports.NameSpaceKeySui = \"sui\";\nexports.NameSpaceKeyBtc = \"btc\";\nexports.NameSpaceKeyAptos = \"aptos\";\nexports.NameSpaceKeyCosmos = \"cosmos\";\nexports.NameSpaceKeyTron = \"tron\";\nexports.NameSpaceKeyStarknet = \"starknet\";\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.callForSuccess = callForSuccess;\nexports.delay = delay;\n/**\n * Function to call ton api until we get response.\n * Because ton network is pretty unstable we need to make sure response is final.\n * @param {T} fn - function to call\n * @param {CallForSuccessOptions} [options] - optional configuration options\n */\nfunction callForSuccess(fn, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b;\n        const attempts = (_a = options === null || options === void 0 ? void 0 : options.attempts) !== null && _a !== void 0 ? _a : 3;\n        const delayMs = (_b = options === null || options === void 0 ? void 0 : options.delayMs) !== null && _b !== void 0 ? _b : 800;\n        if (typeof fn !== 'function') {\n            throw new Error(`Expected a function, got ${typeof fn}`);\n        }\n        let i = 0;\n        let lastError;\n        while (i < attempts) {\n            try {\n                return yield fn();\n            }\n            catch (err) {\n                lastError = err;\n                i++;\n                if (i < attempts) {\n                    yield delay(delayMs);\n                }\n            }\n        }\n        throw lastError;\n    });\n}\n/**\n * Delays the execution of code for a specified number of milliseconds.\n * @param {number} timeout - The number of milliseconds to delay the execution.\n * @param {DelayOptions} [options] - Optional configuration options for the delay.\n * @return {Promise<void>} - A promise that resolves after the specified delay, or rejects if the delay is aborted.\n */\nfunction delay(timeout, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            var _a, _b;\n            if ((_a = options === null || options === void 0 ? void 0 : options.signal) === null || _a === void 0 ? void 0 : _a.aborted) {\n                reject(new Error('Delay aborted'));\n                return;\n            }\n            const timeoutId = setTimeout(() => resolve(), timeout);\n            (_b = options === null || options === void 0 ? void 0 : options.signal) === null || _b === void 0 ? void 0 : _b.addEventListener('abort', () => {\n                clearTimeout(timeoutId);\n                reject(new Error('Delay aborted'));\n            });\n        });\n    });\n}\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkMetaData = exports.versionCompare = exports.isBrowser = exports.isOS = exports.isMobileUserAgent = exports.openDeeplinkWithFallback = exports.openLinkBlank = exports.openLink = exports.getChainId = exports.useShortLink = exports.toSafeBase64FromBase64 = exports.isValidObject = exports.isIos = exports.base64decode = exports.base64encode = exports.splitToUint8Arrays = exports.concatUint8Arrays = exports.toHexString = exports.hexToByteArray = exports.getOKXLink = exports.openOKXUniversalLink = exports.getAppWalletShortDeepLink = exports.encodeTWAConnectURLParams = exports.encodeConnectParams = exports.openOKXTMAWalletlinkWithFallback = exports.getTelegramWalletTWAUrl = exports.getAppWalletDeepLink = exports.encodeTelegramUrlParameters = exports.isTelegramUrl = exports.openOKXDeeplinkWithFallback = exports.openOKXDeeplink = exports.getUniversalLink = exports.safeJsonStringify = exports.safeJsonParse = exports.getDefaultReporter = exports.reportEvent = exports.reportLog = exports.logWarning = exports.logError = exports.logDebug = exports.callForSuccess = void 0;\nvar call_for_success_1 = require(\"./call-for-success\");\nObject.defineProperty(exports, \"callForSuccess\", { enumerable: true, get: function () { return call_for_success_1.callForSuccess; } });\nvar log_1 = require(\"./log\");\nObject.defineProperty(exports, \"logDebug\", { enumerable: true, get: function () { return log_1.logDebug; } });\nObject.defineProperty(exports, \"logError\", { enumerable: true, get: function () { return log_1.logError; } });\nObject.defineProperty(exports, \"logWarning\", { enumerable: true, get: function () { return log_1.logWarning; } });\nObject.defineProperty(exports, \"reportLog\", { enumerable: true, get: function () { return log_1.reportLog; } });\nObject.defineProperty(exports, \"reportEvent\", { enumerable: true, get: function () { return log_1.reportEvent; } });\nObject.defineProperty(exports, \"getDefaultReporter\", { enumerable: true, get: function () { return log_1.getDefaultReporter; } });\n__exportStar(require(\"./reportconstants\"), exports);\n__exportStar(require(\"./report\"), exports);\nvar safejson_1 = require(\"./safejson\");\nObject.defineProperty(exports, \"safeJsonParse\", { enumerable: true, get: function () { return safejson_1.safeJsonParse; } });\nObject.defineProperty(exports, \"safeJsonStringify\", { enumerable: true, get: function () { return safejson_1.safeJsonStringify; } });\nvar url_1 = require(\"./url\");\nObject.defineProperty(exports, \"getUniversalLink\", { enumerable: true, get: function () { return url_1.getUniversalLink; } });\nObject.defineProperty(exports, \"openOKXDeeplink\", { enumerable: true, get: function () { return url_1.openOKXDeeplink; } });\nObject.defineProperty(exports, \"openOKXDeeplinkWithFallback\", { enumerable: true, get: function () { return url_1.openOKXDeeplinkWithFallback; } });\nObject.defineProperty(exports, \"isTelegramUrl\", { enumerable: true, get: function () { return url_1.isTelegramUrl; } });\nObject.defineProperty(exports, \"encodeTelegramUrlParameters\", { enumerable: true, get: function () { return url_1.encodeTelegramUrlParameters; } });\nObject.defineProperty(exports, \"getAppWalletDeepLink\", { enumerable: true, get: function () { return url_1.getAppWalletDeepLink; } });\nObject.defineProperty(exports, \"getTelegramWalletTWAUrl\", { enumerable: true, get: function () { return url_1.getTelegramWalletTWAUrl; } });\nObject.defineProperty(exports, \"openOKXTMAWalletlinkWithFallback\", { enumerable: true, get: function () { return url_1.openOKXTMAWalletlinkWithFallback; } });\nObject.defineProperty(exports, \"encodeConnectParams\", { enumerable: true, get: function () { return url_1.encodeConnectParams; } });\nObject.defineProperty(exports, \"encodeTWAConnectURLParams\", { enumerable: true, get: function () { return url_1.encodeTWAConnectURLParams; } });\nObject.defineProperty(exports, \"getAppWalletShortDeepLink\", { enumerable: true, get: function () { return url_1.getAppWalletShortDeepLink; } });\nObject.defineProperty(exports, \"openOKXUniversalLink\", { enumerable: true, get: function () { return url_1.openOKXUniversalLink; } });\nObject.defineProperty(exports, \"getOKXLink\", { enumerable: true, get: function () { return url_1.getOKXLink; } });\nvar utils_1 = require(\"./utils\");\nObject.defineProperty(exports, \"hexToByteArray\", { enumerable: true, get: function () { return utils_1.hexToByteArray; } });\nObject.defineProperty(exports, \"toHexString\", { enumerable: true, get: function () { return utils_1.toHexString; } });\nObject.defineProperty(exports, \"concatUint8Arrays\", { enumerable: true, get: function () { return utils_1.concatUint8Arrays; } });\nObject.defineProperty(exports, \"splitToUint8Arrays\", { enumerable: true, get: function () { return utils_1.splitToUint8Arrays; } });\nObject.defineProperty(exports, \"base64encode\", { enumerable: true, get: function () { return utils_1.base64encode; } });\nObject.defineProperty(exports, \"base64decode\", { enumerable: true, get: function () { return utils_1.base64decode; } });\nObject.defineProperty(exports, \"isIos\", { enumerable: true, get: function () { return utils_1.isIos; } });\nObject.defineProperty(exports, \"isValidObject\", { enumerable: true, get: function () { return utils_1.isValidObject; } });\nObject.defineProperty(exports, \"toSafeBase64FromBase64\", { enumerable: true, get: function () { return utils_1.toSafeBase64FromBase64; } });\nObject.defineProperty(exports, \"useShortLink\", { enumerable: true, get: function () { return utils_1.useShortLink; } });\nObject.defineProperty(exports, \"getChainId\", { enumerable: true, get: function () { return utils_1.getChainId; } });\nvar web_api_1 = require(\"./web-api\");\nObject.defineProperty(exports, \"openLink\", { enumerable: true, get: function () { return web_api_1.openLink; } });\nObject.defineProperty(exports, \"openLinkBlank\", { enumerable: true, get: function () { return web_api_1.openLinkBlank; } });\nObject.defineProperty(exports, \"openDeeplinkWithFallback\", { enumerable: true, get: function () { return web_api_1.openDeeplinkWithFallback; } });\nObject.defineProperty(exports, \"isMobileUserAgent\", { enumerable: true, get: function () { return web_api_1.isMobileUserAgent; } });\nObject.defineProperty(exports, \"isOS\", { enumerable: true, get: function () { return web_api_1.isOS; } });\nObject.defineProperty(exports, \"isBrowser\", { enumerable: true, get: function () { return web_api_1.isBrowser; } });\nvar tma_api_1 = require(\"./tma-api\");\nObject.defineProperty(exports, \"versionCompare\", { enumerable: true, get: function () { return tma_api_1.versionCompare; } });\nvar request_1 = require(\"./request\");\nObject.defineProperty(exports, \"checkMetaData\", { enumerable: true, get: function () { return request_1.checkMetaData; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getDefaultReporter = getDefaultReporter;\nexports.logDebug = logDebug;\nexports.logError = logError;\nexports.logWarning = logWarning;\nexports.reportEvent = reportEvent;\nexports.reportLog = reportLog;\nconst debug = false;\nconst forceReport = false;\nconst report_1 = require(\"./report\");\nconst defaultReporter = new report_1.OKXReporter();\nfunction getDefaultReporter() {\n    return defaultReporter;\n}\nconst packageJson = require('../../package.json');\nconst version = packageJson.version;\nfunction logDebug(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.log(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction logError(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.error(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n            if (forceReport || !debug) {\n                let content = '';\n                content += [...args].reduce((result, item) => {\n                    if (typeof item == 'string') {\n                        result += ',' + item;\n                    }\n                    else if (typeof item == 'object') {\n                        result += JSON.stringify(item);\n                    }\n                });\n                defaultReporter.sendRecordContent(content, report_1.OKXReportType.LOG, '');\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction logWarning(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.warn(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction reportEvent(type, action, content) {\n    return __awaiter(this, void 0, void 0, function* () {\n        yield defaultReporter.sendRecordContent(content, type, action);\n    });\n}\nfunction reportLog(content_1) {\n    return __awaiter(this, arguments, void 0, function* (content, action = 'default') {\n        // await defaultReporter.sendRecordContent(content, OKXReportType.LOG, action)\n    });\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mediaNotTouch = exports.mediaTouch = exports.maxWidth = void 0;\nexports.isDevice = isDevice;\nexports.media = media;\nexports.mediaMin = mediaMin;\nexports.mediaMax = mediaMax;\nexports.mediaMinMax = mediaMinMax;\nconst web_api_1 = require(\"../utils/web-api\");\nconst tma_api_1 = require(\"../utils/tma-api\");\nconst url_1 = require(\"./url\");\nconst log_1 = require(\"./log\");\nexports.maxWidth = {\n    mobile: 440,\n    tablet: 1020\n};\nfunction isDevice(device) {\n    var _a;\n    const window = (0, url_1.getWindow)();\n    if (!window) {\n        return device === 'desktop';\n    }\n    // TODO: remove this check when weba will fix viewport width\n    if ((0, tma_api_1.isTmaPlatform)('weba')) {\n        return true;\n    }\n    const width = window.innerWidth;\n    switch (device) {\n        case 'desktop':\n            return width > exports.maxWidth.tablet;\n        case 'tablet':\n            return width > exports.maxWidth.mobile;\n        default:\n        case 'mobile':\n            let isMobile = width <= exports.maxWidth.mobile || (0, web_api_1.isOS)('ios', 'android', 'ipad');\n            if (isMobile) {\n                const isTelegram = !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n                const maxTouchPoints = navigator.maxTouchPoints || 0;\n                if (isTelegram && maxTouchPoints === 0) {\n                    isMobile = false;\n                }\n                (0, log_1.logDebug)(\"isDevice mobile isTelegram and maxTouchPoints:\", isMobile, isTelegram, maxTouchPoints);\n            }\n            return isMobile;\n    }\n}\nfunction media(device) {\n    switch (device) {\n        case 'mobile':\n            return `@media (max-width: ${exports.maxWidth.mobile}px)`;\n        case 'tablet':\n            return `@media (max-width: ${exports.maxWidth.tablet}px) (min-width: ${exports.maxWidth.mobile}px)`;\n        default:\n        case 'desktop':\n            return `@media (min-width: ${exports.maxWidth.tablet}px)`;\n    }\n}\nfunction mediaMin(px) {\n    return `@media (min-width: ${px}px)`;\n}\nfunction mediaMax(px) {\n    return `@media (max-width: ${px}px)`;\n}\nfunction mediaMinMax(pxMin, pxMax) {\n    return `@media (min-width: ${pxMin}px) and (max-width: ${pxMax}px)`;\n}\nexports.mediaTouch = '@media (hover: none)';\nexports.mediaNotTouch = '@media not all and (hover: none)';\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXReporter = exports.OKXReportSide = exports.OKXReportType = exports.versionStr = void 0;\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nconst log_1 = require(\"./log\");\nconst url_1 = require(\"./url\");\nconst utils_1 = require(\"../utils\");\nconst localforage_1 = __importDefault(require(\"localforage\"));\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nexports.versionStr = '1.6.2';\nconst reportApiList = [\n    'https://www.okx.com/dappstat/wallet-connect',\n    'https://www.okx.ac/dappstat/wallet-connect'\n];\nconst reportCacheKey = 'OKX_RP_CK';\nconst reportUUIDKey = 'OKX_RP_UUID_CK';\nconst MAX_LIMIT_REPORTCOUNT = 100;\nconst DEFAULT_HTTP_HEADERS = {\n    Accept: \"*/*\",\n    \"Content-Type\": \"text/plain\",\n};\nconst DEFAULT_HTTP_METHOD = \"POST\";\nconst DEFAULT_FETCH_OPTS = {\n    headers: DEFAULT_HTTP_HEADERS,\n    method: DEFAULT_HTTP_METHOD,\n};\nexports.OKXReportType = {\n    PAGE_IN: 'page_in',\n    PAGE_OUT: 'page_out',\n    CLICK: 'click',\n    LOG: 'log',\n};\nexports.OKXReportSide = {\n    DAPP: 'dapp',\n    WALLET: 'wallet',\n};\nclass IReporter {\n}\nconst fetchWithTimeout = (url, options, timeout = 5000) => {\n    const controller = new AbortController();\n    const signal = controller.signal;\n    const fetchPromise = (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, options), { signal }));\n    const timeoutPromise = new Promise((_, reject) => setTimeout(() => {\n        controller.abort();\n        reject(new Error('Request timed out'));\n    }, timeout));\n    return Promise.race([fetchPromise, timeoutPromise]);\n};\nconst fetchListWithTimeout = (urls_1, ...args_1) => __awaiter(void 0, [urls_1, ...args_1], void 0, function* (urls, options = {}, timeout = 5000) {\n    for (const url of urls) {\n        try {\n            const controller = new AbortController();\n            const signal = controller.signal;\n            const fetchPromise = (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, options), { signal }));\n            const timeoutPromise = new Promise((_, reject) => setTimeout(() => {\n                controller.abort();\n                reject(new Error('Request timed out'));\n            }, timeout));\n            const response = yield Promise.race([fetchPromise, timeoutPromise]);\n            if (response.ok) {\n                return response;\n            }\n            if (response.status == 502) {\n                console.error(`Fetch error status 502`, url);\n                return response;\n            }\n        }\n        catch (error) {\n            console.error(`Fetch error for ${url}:`, error);\n        }\n    }\n    console.error(`'All fetch attempts failed.'`);\n    throw new Error('All fetch attempts failed.');\n});\nclass OKXReporter {\n    constructor() {\n        this.currentSide = exports.OKXReportSide.DAPP;\n        this.currentVersion = exports.versionStr;\n        this.storage = localforage_1.default.createInstance({\n            name: \"OKXReporter\"\n        });\n        this.recordList = new Array();\n        this.currentUUID = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(16));\n    }\n    configVersionAndSide(version, side, appname) {\n        this.currentVersion = version;\n        this.currentSide = side;\n        this.appName = appname;\n    }\n    get recordCacheKey() {\n        return reportCacheKey + \"@\" + this.appName;\n    }\n    get reportPlatform() {\n        if ((0, utils_1.isMobileUserAgent)()) {\n            if ((0, utils_1.isIos)()) {\n                return 'iOS';\n            }\n            else {\n                return 'android';\n            }\n        }\n        else {\n            return 'pc';\n        }\n    }\n    beginReport() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.startErrorCatching();\n            let records = yield this.storage.getItem(this.recordCacheKey);\n            let uuid = yield this.storage.getItem(reportUUIDKey);\n            if (uuid) {\n                this.currentUUID = uuid;\n            }\n            else {\n                this.storage.setItem(reportUUIDKey, this.currentUUID);\n            }\n            if (records) {\n                this.recordList = records;\n                (0, log_1.logDebug)('resume records from cache length: ', this.recordList.length);\n                yield this.sendCachedRecords();\n            }\n        });\n    }\n    startErrorCatching() {\n        let window = (0, url_1.getWindow)();\n        if (window) {\n            (0, log_1.logDebug)('begin capture console error');\n            // window.onerror = (event: Event | string, source?: string, lineno?: number, colno?: number, error?: Error) => {\n            //     logDebug('capture error info:', error, source)\n            //     this.markRecord(error?.message+'/'+error?.name+'/'+error?.stack, OKXReportType.LOG, '', this.currentSide)\n            // }\n        }\n    }\n    cachedErrors() {\n        return this.recordList;\n    }\n    sendRecord(record) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    const body = JSON.stringify(record);\n                    (0, log_1.logDebug)('[REPORT] record: ', body);\n                    const res = yield fetchListWithTimeout(reportApiList, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body: body }));\n                    (0, log_1.logDebug)('[REPORT] get rsp:', res);\n                    if (res && res.status && res.status == 200) {\n                        this.recordList = this.recordList.filter((item) => {\n                            return item.timestamp != record.timestamp || item.content != record.content;\n                        });\n                        yield this.storage.setItem(this.recordCacheKey, this.recordList);\n                        resolve(true);\n                    }\n                    else {\n                        reject(false);\n                    }\n                }\n                catch (e) {\n                    (0, log_1.logDebug)('send record error:', e);\n                    resolve(true);\n                    // reject(e)\n                }\n            }));\n        });\n    }\n    sendRecordContent(content, type, action) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            let path = (_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.location.pathname;\n            let location = (_b = (0, url_1.getWindow)()) === null || _b === void 0 ? void 0 : _b.location.origin;\n            if (path && location) {\n                location = location + path;\n            }\n            let language = (_c = (0, url_1.getWindow)()) === null || _c === void 0 ? void 0 : _c.navigator.language;\n            let ua = (_d = (0, url_1.getWindow)()) === null || _d === void 0 ? void 0 : _d.navigator.userAgent;\n            let platform = this.reportPlatform;\n            let reportItem = {\n                uuid: this.currentUUID,\n                version: this.currentVersion,\n                content: content,\n                action: action,\n                side: this.currentSide,\n                timestamp: new Date().getTime(),\n                url: location,\n                lang: language,\n                type: type,\n                platform: platform,\n                \"user-agent\": ua\n            };\n            yield this.markRecordItem(reportItem);\n            yield this.sendRecord(reportItem);\n        });\n    }\n    sendCachedRecords() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let sendList = this.recordList.map(record => this.sendRecord(record));\n                (0, log_1.logDebug)('[REPORT] submit & clean recorded caches begin @', new Date().toUTCString());\n                Promise.allSettled(sendList).then((results) => {\n                    (0, log_1.logDebug)('[REPORT] submit & clean recorded caches ends @', new Date().toUTCString());\n                    let keepIndex = [];\n                    results.forEach((result, index) => {\n                        if (result.status == \"rejected\") {\n                            keepIndex.push(index);\n                        }\n                    });\n                    this.recordList = this.recordList.filter((_, index) => !keepIndex.includes(index));\n                    this.storage.setItem(this.recordCacheKey, this.recordList).then(function (value) {\n                        resolve();\n                    }).catch(function (err) {\n                        reject(err);\n                    });\n                });\n            }));\n        });\n    }\n    markRecordItem(item) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.recordList.push(item);\n            if (this.recordList.length > MAX_LIMIT_REPORTCOUNT) {\n                let offset = this.recordList.length - MAX_LIMIT_REPORTCOUNT;\n                this.recordList.splice(0, offset);\n            }\n            return new Promise((resolve, reject) => {\n                this.storage.setItem(this.recordCacheKey, this.recordList).then(function (value) {\n                    resolve(item);\n                }).catch(function (err) {\n                    reject(err);\n                });\n            });\n        });\n    }\n    markRecord(content, type, action, side) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            let path = (_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.location.pathname;\n            let location = (_b = (0, url_1.getWindow)()) === null || _b === void 0 ? void 0 : _b.location.origin;\n            if (path && location) {\n                location = location + path;\n            }\n            let language = (_c = (0, url_1.getWindow)()) === null || _c === void 0 ? void 0 : _c.navigator.language;\n            let platform = this.reportPlatform;\n            let ua = (_d = (0, url_1.getWindow)()) === null || _d === void 0 ? void 0 : _d.navigator.userAgent;\n            let reportItem = {\n                uuid: this.currentUUID,\n                version: this.currentVersion,\n                content: content,\n                action: action,\n                side: side,\n                timestamp: new Date().getTime(),\n                url: location,\n                lang: language,\n                type: type,\n                platform: platform,\n                \"user-agent\": ua\n            };\n            return yield this.markRecordItem(reportItem);\n        });\n    }\n}\nexports.OKXReporter = OKXReporter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Report_WalletType_Key = exports.Report_Proceed_QRCode_Click = exports.Report_ChooseType_Download_Click = exports.Report_ChooseType_ConnectWallet_Click = exports.Report_Proceed_Retry_Click = exports.Report_ChooseType_ConnectWallet_View = exports.Report_Loading_ConnectWallet_View = exports.Report_Proceed_QRCode_View = exports.Report_Proceed_Proceed_View = void 0;\nexports.Report_Proceed_Proceed_View = \"OKXConnectSDK_Proceed_Proceed_View\";\nexports.Report_Proceed_QRCode_View = \"OKXConnectSDK_Proceed_QRCode_View\";\nexports.Report_Loading_ConnectWallet_View = \"OKXConnectSDK_Loading_ConnectWallet_View\";\nexports.Report_ChooseType_ConnectWallet_View = \"OKXConnectSDK_ChooseType_ConnectWallet_View\";\nexports.Report_Proceed_Retry_Click = \"OKXConnectSDK_Proceed_Retry_Click\";\nexports.Report_ChooseType_ConnectWallet_Click = \"OKXConnectSDK_ChooseType_ConnectWallet_Click\";\nexports.Report_ChooseType_Download_Click = \"OKXConnectSDK_ChooseType_Download_Click\";\nexports.Report_Proceed_QRCode_Click = \"OKXConnectSDK_Proceed_QRCode_Click\";\nexports.Report_WalletType_Key = 'wallet_type';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkMetaData = checkMetaData;\nconst protocol_1 = require(\"../protocol\");\nfunction checkMetaData(dappMetaData) {\n    if (!dappMetaData) {\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"You have to specify a `dappMetaData`in the options.\");\n    }\n    if (!dappMetaData.name) {\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"dappName is required\");\n    }\n    if (!dappMetaData.icon) {\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"icon is required\");\n    }\n    return true;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.safeJsonParse = safeJsonParse;\nexports.safeJsonStringify = safeJsonStringify;\nconst log_1 = require(\"./log\");\nconst JSONStringify = (data) => JSON.stringify(data, (_, value) => (typeof value === \"bigint\" ? value.toString() + \"n\" : value));\n/*\n  Function to parse JSON.\n  If JSON has values in our custom format BigInt (strings with \"n\" character at the end), we just parse them to BigInt values.\n  If JSON has big number values, but not in our custom format, we copy it, and in a copy we convert those values to our custom format,\n  then parse them to BigInt values.\n  Other values (not big numbers and not our custom format BigInt values) are not affected and parsed as native JSON.parse() would parse them.\n*/\nconst JSONParse = (json) => {\n    /*\n      Big numbers are found and marked using Regex with this condition:\n      Number's length is bigger than 16 || Number's length is 16 and any numerical digit of the number is greater than that of the Number.MAX_SAFE_INTEGER\n      Additionally, it skips values that are strings (between double quotes).\n      */\n    // prettier-ignore\n    // eslint-disable-next-line no-useless-escape\n    const numbersBiggerThanMaxInt = /:(\\b\\d{17,}|\\b(?:[9](?:[1-9]07199254740991|0[1-9]7199254740991|00[8-9]199254740991|007[2-9]99254740991|007199[3-9]54740991|0071992[6-9]4740991|00719925[5-9]740991|007199254[8-9]40991|0071992547[5-9]0991|00719925474[1-9]991|00719925474099[2-9])))(?=[,\\}\\]]|$)/g;\n    const serializedData = json.replace(numbersBiggerThanMaxInt, (match, group) => `:\"${group}n\"`);\n    try {\n        return JSON.parse(serializedData, (_, value) => {\n            const isCustomFormatBigInt = typeof value === \"string\" && value.match(/^\\d+n$/);\n            if (isCustomFormatBigInt)\n                return BigInt(value.substring(0, value.length - 1));\n            return value;\n        });\n    }\n    catch (e) {\n        return JSON.parse(json);\n    }\n};\nfunction safeJsonParse(value) {\n    if (typeof value !== \"string\") {\n        (0, log_1.logDebug)(value);\n        throw new Error(`Cannot safe json parse value of type ${typeof value}`);\n    }\n    try {\n        return JSONParse(value);\n    }\n    catch (e) {\n        // eslint-disable-next-line no-console\n        console.error(\"safeJsonParse error:\", e);\n        return value;\n    }\n}\nfunction safeJsonStringify(value) {\n    return typeof value === \"string\" ? value : JSONStringify(value) || \"\";\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.okxfromString = okxfromString;\nexports.okxtoString = okxtoString;\nexports.alloc = alloc;\nexports.allocUnsafe = allocUnsafe;\nconst basics_1 = require(\"multiformats/basics\");\nconst log_1 = require(\"../utils/log\");\nfunction okxfromString(string, encoding = 'utf8') {\n    const base = BASES[encoding];\n    (0, log_1.logDebug)(\"okxfromstring ====> \");\n    if (!base) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    return base.decoder.decode(`${base.prefix}${string}`);\n}\nfunction okxtoString(array, encoding = 'utf8') {\n    const base = BASES[encoding];\n    (0, log_1.logDebug)(\"okxtoString ====> \");\n    if (!base) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    return base.encoder.encode(array).substring(1);\n}\nfunction alloc(size = 0) {\n    return new Uint8Array(size);\n}\nfunction allocUnsafe(size = 0) {\n    return new Uint8Array(size);\n}\nfunction createCodec(name, prefix, encode, decode) {\n    return {\n        name,\n        prefix,\n        encoder: {\n            name,\n            prefix,\n            encode\n        },\n        decoder: { decode }\n    };\n}\nconst string = createCodec('utf8', 'u', buf => {\n    const decoder = new TextDecoder('utf8');\n    return 'u' + decoder.decode(buf);\n}, str => {\n    const encoder = new TextEncoder();\n    return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', buf => {\n    let result = 'a';\n    for (let i = 0; i < buf.length; i++) {\n        let bufNum = buf[i];\n        if (bufNum && String.fromCharCode(bufNum)) {\n            result += String.fromCharCode(bufNum);\n        }\n    }\n    return result;\n}, str => {\n    str = str.substring(1);\n    const buf = allocUnsafe(str.length);\n    for (let i = 0; i < str.length; i++) {\n        buf[i] = str.charCodeAt(i);\n    }\n    return buf;\n});\nconst BASES = Object.assign({ utf8: string, 'utf-8': string, hex: basics_1.bases.base16, latin1: ascii, ascii: ascii, binary: ascii }, basics_1.bases);\n","\"use strict\";\nvar _a, _b, _c, _d, _e, _f, _g;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isTmaPlatform = isTmaPlatform;\nexports.isInTMA = isInTMA;\nexports.inTg = inTg;\nexports.isInTelegramBrowser = isInTelegramBrowser;\nexports.sendExpand = sendExpand;\nexports.sendOpenTelegramLink = sendOpenTelegramLink;\nexports.versionCompare = versionCompare;\nconst url_1 = require(\"./url\");\nconst log_1 = require(\"./log\");\nconst protocol_1 = require(\"../protocol\");\nconst web_api_1 = require(\"./web-api\");\nlet initParams = {};\ntry {\n    let locationHash = location.hash.toString();\n    initParams = urlParseHashParams(locationHash);\n}\ncatch (e) { }\nlet tmaPlatform = 'unknown';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppPlatform) {\n    tmaPlatform = (_a = initParams.tgWebAppPlatform) !== null && _a !== void 0 ? _a : 'unknown';\n}\nif (tmaPlatform === 'unknown') {\n    const window = (0, url_1.getWindow)();\n    tmaPlatform = (_d = (_c = (_b = window === null || window === void 0 ? void 0 : window.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) === null || _c === void 0 ? void 0 : _c.platform) !== null && _d !== void 0 ? _d : 'unknown';\n}\nlet webAppVersion = '6.0';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppVersion) {\n    webAppVersion = initParams.tgWebAppVersion;\n}\nif (!webAppVersion) {\n    const window = (0, url_1.getWindow)();\n    webAppVersion = (_g = (_f = (_e = window === null || window === void 0 ? void 0 : window.Telegram) === null || _e === void 0 ? void 0 : _e.WebApp) === null || _f === void 0 ? void 0 : _f.version) !== null && _g !== void 0 ? _g : '6.0';\n}\n/**\n * Returns true if the app is running in TMA on the specified platform.\n * @param platforms\n */\nfunction isTmaPlatform(...platforms) {\n    return platforms.includes(tmaPlatform);\n}\n/**\n * Returns true if the app is running in TMA.\n */\nfunction isInTMA() {\n    var _a;\n    return tmaPlatform !== 'unknown' || !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n}\nfunction inTg() {\n    // return true\n    return isInTelegramBrowser() || isInTMA();\n}\n/**\n * Returns true if the app is running in the Telegram browser.\n */\nfunction isInTelegramBrowser() {\n    var _a;\n    const isTelegramWebview = !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebview);\n    return (isInTMA() || isTelegramWebview) && tmaPlatform === 'unknown';\n}\n/**\n * Expand the app window.\n */\nfunction sendExpand() {\n    postEvent('web_app_expand', {});\n}\n/**\n * Opens link in TMA or in new tab and returns a function that closes the tab.\n * @param link The link to open.\n * @param fallback The function to call if the link can't be opened in TMA.\n */\nfunction sendOpenTelegramLink(link, fallback) {\n    const url = new URL(link);\n    if (url.protocol !== 'http:' && url.protocol !== 'https:') {\n        if (fallback) {\n            return fallback();\n        }\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Url protocol is not supported: ${url}`);\n    }\n    if (url.hostname !== 't.me') {\n        if (fallback) {\n            return fallback();\n        }\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Url host is not supported: ${url}`);\n    }\n    const pathFull = url.pathname + url.search;\n    if (isIframe() || versionAtLeast('6.1')) {\n        postEvent('web_app_open_tg_link', { path_full: pathFull });\n    }\n    else {\n        (0, web_api_1.openLinkBlank)('https://t.me' + pathFull);\n    }\n}\nfunction isIframe() {\n    try {\n        const window = (0, url_1.getWindow)();\n        if (!window) {\n            return false;\n        }\n        return window.parent != null && window !== window.parent;\n    }\n    catch (e) {\n        return false;\n    }\n}\nfunction postEvent(eventType, eventData) {\n    try {\n        const window = (0, url_1.getWindow)();\n        if (!window) {\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Can't post event to parent window: window is not defined`);\n        }\n        if (window.TelegramWebviewProxy !== undefined) {\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.TelegramWebviewProxy.postEvent(eventType, JSON.stringify(eventData));\n        }\n        else if (window.external && 'notify' in window.external) {\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.external.notify(JSON.stringify({ eventType: eventType, eventData: eventData }));\n        }\n        else if (isIframe()) {\n            const trustedTarget = '*';\n            const message = JSON.stringify({ eventType: eventType, eventData: eventData });\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.parent.postMessage(message, trustedTarget);\n        }\n        else {\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Can't post event to TMA`);\n        }\n    }\n    catch (e) {\n        (0, log_1.logError)(`Can't post event to parent window: ${e}`);\n    }\n}\nfunction urlParseHashParams(locationHash) {\n    locationHash = locationHash.replace(/^#/, '');\n    let params = {};\n    if (!locationHash.length) {\n        return params;\n    }\n    if (locationHash.indexOf('=') < 0 && locationHash.indexOf('?') < 0) {\n        params._path = urlSafeDecode(locationHash);\n        return params;\n    }\n    let qIndex = locationHash.indexOf('?');\n    if (qIndex >= 0) {\n        let pathParam = locationHash.substr(0, qIndex);\n        params._path = urlSafeDecode(pathParam);\n        locationHash = locationHash.substr(qIndex + 1);\n    }\n    let query_params = urlParseQueryString(locationHash);\n    for (let k in query_params) {\n        params[k] = query_params[k];\n    }\n    return params;\n}\nfunction urlSafeDecode(urlencoded) {\n    try {\n        urlencoded = urlencoded.replace(/\\+/g, '%20');\n        return decodeURIComponent(urlencoded);\n    }\n    catch (e) {\n        return urlencoded;\n    }\n}\nfunction urlParseQueryString(queryString) {\n    let params = {};\n    if (!queryString.length) {\n        return params;\n    }\n    let queryStringParams = queryString.split('&');\n    let i, param, paramName, paramValue;\n    for (i = 0; i < queryStringParams.length; i++) {\n        param = queryStringParams[i].split('=');\n        paramName = urlSafeDecode(param[0]);\n        paramValue = param[1] == null ? null : urlSafeDecode(param[1]);\n        params[paramName] = paramValue;\n    }\n    return params;\n}\nfunction versionCompare(v1, v2) {\n    if (typeof v1 !== 'string')\n        v1 = '';\n    if (typeof v2 !== 'string')\n        v2 = '';\n    let v1List = v1.replace(/^\\s+|\\s+$/g, '').split('.');\n    let v2List = v2.replace(/^\\s+|\\s+$/g, '').split('.');\n    let a, i, p1, p2;\n    a = Math.max(v1List.length, v2List.length);\n    for (i = 0; i < a; i++) {\n        p1 = parseInt(v1List[i]) || 0;\n        p2 = parseInt(v2List[i]) || 0;\n        if (p1 === p2)\n            continue;\n        if (p1 > p2)\n            return 1;\n        return -1;\n    }\n    return 0;\n}\nfunction versionAtLeast(ver) {\n    return versionCompare(webAppVersion, ver) >= 0;\n}\n","\"use strict\";\nvar _a, _b, _c, _d;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.removeUrlLastSlash = removeUrlLastSlash;\nexports.addPathToUrl = addPathToUrl;\nexports.getUniversalLink = getUniversalLink;\nexports.openOKXDeeplink = openOKXDeeplink;\nexports.openOKXUniversalLink = openOKXUniversalLink;\nexports.openOKXDeeplinkWithFallback = openOKXDeeplinkWithFallback;\nexports.getWindow = getWindow;\nexports.isTelegramUrl = isTelegramUrl;\nexports.encodeTelegramUrlParameters = encodeTelegramUrlParameters;\nexports.encodeConnectParams = encodeConnectParams;\nexports.encodeTWAConnectURLParams = encodeTWAConnectURLParams;\nexports.getAppWalletDeepLink = getAppWalletDeepLink;\nexports.getAppWalletShortDeepLink = getAppWalletShortDeepLink;\nexports.getTelegramWalletTWAUrl = getTelegramWalletTWAUrl;\nexports.openOKXTMAWalletlinkWithFallback = openOKXTMAWalletlinkWithFallback;\nexports.isInTMA = isInTMA;\nexports.isInTelegramBrowser = isInTelegramBrowser;\nexports.getOKXLink = getOKXLink;\nconst protocol_1 = require(\"../protocol\");\nconst log_1 = require(\"./log\");\nconst constants_1 = require(\"../protocol/constants\");\nconst utils_1 = require(\"./utils\");\nconst tma_api_1 = require(\"./tma-api\");\nfunction removeUrlLastSlash(url) {\n    if (url.slice(-1) === '/') {\n        return url.slice(0, -1);\n    }\n    return url;\n}\nfunction addPathToUrl(url, path) {\n    return removeUrlLastSlash(url) + '/' + path;\n}\nfunction getUniversalLink(deeplinkUrl, useStandardUniversalLink = false) {\n    console.log(\"getUniversalLink deeplinkUrl:\", deeplinkUrl, \", useStandardUniversalLink:\", useStandardUniversalLink);\n    const replaceStrWithParam = `${protocol_1.standardDeeplink}?param=`;\n    if (!useStandardUniversalLink && deeplinkUrl.startsWith(replaceStrWithParam)) {\n        const cleanUrl = deeplinkUrl.replace(replaceStrWithParam, '');\n        (0, log_1.logDebug)(\"getUniversalLink cleanUrl:\", cleanUrl);\n        const deeplinkEncodeUrl = encodeURIComponent(cleanUrl);\n        (0, log_1.logDebug)(\"getUniversalLink standardUniversalLink:\", protocol_1.standardUniversalLink);\n        (0, log_1.logDebug)(\"getUniversalLink `${shortUniversalLink}?param=${deeplinkEncodeUrl}`:\", `${constants_1.shortUniversalLink}?param=${deeplinkEncodeUrl}`);\n        return `${constants_1.shortUniversalLink}?param=${deeplinkEncodeUrl}`;\n    }\n    else if (!useStandardUniversalLink && deeplinkUrl == protocol_1.standardDeeplink) {\n        (0, log_1.logDebug)(\"getUniversalLink shortUniversalLink:\", constants_1.shortUniversalLink);\n        return constants_1.shortUniversalLink;\n    }\n    else {\n        const deeplinkEncodeUrl = encodeURIComponent(deeplinkUrl);\n        console.log(\"getUniversalLink standardUniversalLink:\", protocol_1.standardUniversalLink);\n        return `${protocol_1.standardUniversalLink}?deeplink=${deeplinkEncodeUrl}`;\n    }\n}\nfunction openOKXDeeplink(deeplinkUrl) {\n    var _a;\n    const fullUrl = getUniversalLink(deeplinkUrl);\n    const isTelegram = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n    console.log(\"openOKXDeeplink fullUrl:\", fullUrl);\n    if (!(0, utils_1.isIos)()) {\n        let newWindow = null;\n        if (isTelegram) {\n            newWindow = window.open(deeplinkUrl, '_blank');\n        }\n        else {\n            window.location.href = deeplinkUrl;\n        }\n    }\n    else {\n        openOKXUniversalLink(fullUrl);\n    }\n}\nfunction openOKXUniversalLink(fullUrl) {\n    if (!(0, utils_1.isIos)()) {\n        // if (isTelegram) {\n        window.open(fullUrl, '_blank');\n        // } else {\n        //     window.location.href = fullUrl;\n        // }\n    }\n    else {\n        if (isInTMA()) {\n            window.open(fullUrl, '_blank');\n        }\n        else {\n            console.log(\"windowOpen[before]: \", Date.now());\n            if (window === null || window === void 0 ? void 0 : window.okxLogDebug) {\n                window.open(fullUrl, '_blank');\n            }\n            else {\n                window.open(fullUrl, '_self');\n            }\n            console.log(\"windowOpen[after]: \", Date.now());\n        }\n    }\n}\nfunction openOKXDeeplinkWithFallback(deeplinkUrl) {\n    var _a;\n    const fullUrl = getUniversalLink(deeplinkUrl);\n    const isTelegram = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n    console.log(\"openOKXDeeplinkWithFallback fullUrl:\", fullUrl);\n    let deepLinkOpened = false;\n    const timeoutDuration = 3000; // 1.5秒的等待时间\n    const downloadUrl = protocol_1.standardUniversalLink;\n    console.log(\"openOKXDeeplinkWithFallback standardUniversalLink:\", protocol_1.standardUniversalLink);\n    if (!(0, utils_1.isIos)()) {\n        let newWindow = null;\n        var fallbackToDownloadPage = () => {\n            if (!deepLinkOpened) {\n                if (newWindow) {\n                    newWindow.open(fullUrl, '_self');\n                }\n                else {\n                    window.open(fullUrl, '_blank');\n                }\n            }\n        };\n        if (isTelegram) {\n            newWindow = window.open(deeplinkUrl, '_blank');\n        }\n        else {\n            window.location.href = deeplinkUrl;\n        }\n        setTimeout(fallbackToDownloadPage, timeoutDuration);\n        window.addEventListener('blur', () => {\n            deepLinkOpened = true;\n        }, { once: true });\n        document.addEventListener('visibilitychange', () => {\n            if (document.visibilityState === 'hidden') {\n                deepLinkOpened = true;\n            }\n        });\n    }\n    else {\n        if (isTelegram) {\n            window.open(fullUrl, '_blank');\n        }\n        else {\n            console.log(\"windowOpen[before]: \", Date.now());\n            if (window === null || window === void 0 ? void 0 : window.okxLogDebug) {\n                window.open(fullUrl, '_blank');\n            }\n            else {\n                window.open(fullUrl, '_self');\n            }\n            console.log(\"windowOpen[after]: \", Date.now());\n        }\n    }\n}\nfunction getWindow() {\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    return undefined;\n}\nfunction isTelegramUrl(link) {\n    if (!link) {\n        return false;\n    }\n    const url = new URL(link);\n    return url.protocol === 'tg:' || url.hostname === 't.me';\n}\nfunction encodeTelegramUrlParameters(parameters) {\n    let encodedParameters = parameters;\n    encodedParameters = encodedParameters.replace(/\\./g, '%2E');\n    encodedParameters = encodedParameters.replace(/-/g, '%2D');\n    encodedParameters = encodedParameters.replace(/_/g, '%5F');\n    encodedParameters = encodedParameters.replace(/&/g, '-');\n    encodedParameters = encodedParameters.replace(/=/g, '__');\n    encodedParameters = encodedParameters.replace(/%/g, '--');\n    return encodedParameters;\n}\nfunction encodeConnectParams(connectRequest) {\n    const connectRequestStr = JSON.stringify(connectRequest);\n    (0, log_1.logDebug)(\"url encodeConnectParams connectRequestStr \", connectRequestStr);\n    const utf8Array = new TextEncoder().encode(connectRequestStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    // .replace(/\\+/g, '-')\n    // .replace(/\\//g, '_')\n    // .replace(/=+$/, ''); //Compatible with older versions of iOS. Cannot be added directly  (Base64 URL Safe)\n    (0, log_1.logDebug)(\"url encodeConnectParams base64Encoded \", base64Encoded);\n    return base64Encoded;\n}\nfunction encodeTWAConnectURLParams(connectRequest) {\n    const connectRequestStr = JSON.stringify({ topic: connectRequest.topic, clientId: connectRequest.clientId });\n    (0, log_1.logDebug)(\"url encodeConnectParams connectRequestStr\", connectRequestStr);\n    const utf8Array = new TextEncoder().encode(connectRequestStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    return base64Encoded;\n}\nfunction getAppWalletDeepLink(connectParam) {\n    return `${protocol_1.standardDeeplink}?param=${connectParam}`;\n}\nfunction getAppWalletShortDeepLink(topic, clientId) {\n    return `${constants_1.shortUniversalLink}?topic=${topic}${(0, utils_1.getLastSixMd5Hash)(clientId)}`;\n}\n//  make telegram okx wallet TWA url\nfunction getTelegramWalletTWAUrl(connectParam, redirectStr) {\n    let base64Content = { okxconnect: \"\", redirect: \"\", extraparams: \"\" };\n    if (connectParam) {\n        base64Content.okxconnect = connectParam;\n    }\n    if (redirectStr) {\n        base64Content.redirect = redirectStr;\n    }\n    let base64ContentStr = JSON.stringify(base64Content);\n    const utf8Array = new TextEncoder().encode(base64ContentStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    const urlSafeBase64 = (0, utils_1.toSafeBase64FromBase64)(base64Encoded);\n    (0, log_1.logDebug)('[TWA] open link:', base64Content, base64Encoded);\n    if (connectParam || redirectStr) {\n        if (!isInTMA()) {\n            // return `http://localhost:5173?tgWebAppStartParam=${urlSafeBase64}`\n            if ((0, constants_1.getTestTwaUrl)()) {\n                return `${(0, constants_1.getTestTwaUrl)()}?tgWebAppStartParam=${urlSafeBase64}`;\n            }\n            else {\n                return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}&startapp=${urlSafeBase64}`;\n            }\n        }\n        else {\n            if ((0, constants_1.getTestTgTwaUrl)()) {\n                return `${(0, constants_1.getTestTgTwaUrl)()}?startapp=${urlSafeBase64}`;\n            }\n            else {\n                return `https://t.me/${constants_1.tgwalletName}/start?startapp=${urlSafeBase64}`;\n            }\n        }\n    }\n    if (!isInTMA()) {\n        // return \"http://localhost:5173\"\n        if ((0, constants_1.getTestTwaUrl)()) {\n            return `${(0, constants_1.getTestTwaUrl)()}`;\n        }\n        else {\n            return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}`;\n        }\n    }\n    else {\n        if ((0, constants_1.getTestTgTwaUrl)()) {\n            return `${(0, constants_1.getTestTgTwaUrl)()}`;\n        }\n        else {\n            return `https://t.me/${constants_1.tgwalletName}/start`;\n        }\n    }\n}\n//  open TWA url in telegram\nfunction openOKXTMAWalletlinkWithFallback(twaDeepLink) {\n    var _a, _b, _c, _d, _e;\n    (0, log_1.logDebug)('[TWA] open link:', twaDeepLink, \"isInTMA ==> \", isInTMA());\n    if (!isInTMA()) {\n        if ((0, constants_1.getTestTwaUrl)()) {\n            window.open(twaDeepLink, '_blank');\n        }\n        else {\n            window.open(twaDeepLink, '_self');\n        }\n    }\n    else {\n        if ((_b = (_a = getWindow()) === null || _a === void 0 ? void 0 : _a.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) {\n            (_e = (_d = (_c = getWindow()) === null || _c === void 0 ? void 0 : _c.Telegram) === null || _d === void 0 ? void 0 : _d.WebApp) === null || _e === void 0 ? void 0 : _e.openTelegramLink(twaDeepLink);\n        }\n        else {\n            (0, tma_api_1.sendOpenTelegramLink)(twaDeepLink);\n        }\n    }\n}\n/**\n * Returns true if the app is running in TMA.\n */\nfunction urlSafeDecode(urlencoded) {\n    try {\n        urlencoded = urlencoded.replace(/\\+/g, '%20');\n        return decodeURIComponent(urlencoded);\n    }\n    catch (e) {\n        return urlencoded;\n    }\n}\nfunction urlParseQueryString(queryString) {\n    let params = {};\n    if (!queryString.length) {\n        return params;\n    }\n    let queryStringParams = queryString.split('&');\n    let i, param, paramName, paramValue;\n    for (i = 0; i < queryStringParams.length; i++) {\n        param = queryStringParams[i].split('=');\n        paramName = urlSafeDecode(param[0]);\n        paramValue = param[1] == null ? null : urlSafeDecode(param[1]);\n        params[paramName] = paramValue;\n    }\n    return params;\n}\nfunction urlParseHashParams(locationHash) {\n    locationHash = locationHash.replace(/^#/, '');\n    let params = {};\n    if (!locationHash.length) {\n        return params;\n    }\n    if (locationHash.indexOf('=') < 0 && locationHash.indexOf('?') < 0) {\n        params._path = urlSafeDecode(locationHash);\n        return params;\n    }\n    let qIndex = locationHash.indexOf('?');\n    if (qIndex >= 0) {\n        let pathParam = locationHash.substr(0, qIndex);\n        params._path = urlSafeDecode(pathParam);\n        locationHash = locationHash.substr(qIndex + 1);\n    }\n    let query_params = urlParseQueryString(locationHash);\n    for (let k in query_params) {\n        params[k] = query_params[k];\n    }\n    return params;\n}\nlet initParams = {};\ntry {\n    let locationHash = location.hash.toString();\n    initParams = urlParseHashParams(locationHash);\n}\ncatch (e) { }\nlet tmaPlatform = 'unknown';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppPlatform) {\n    tmaPlatform = (_a = initParams.tgWebAppPlatform) !== null && _a !== void 0 ? _a : 'unknown';\n}\nif (tmaPlatform === 'unknown') {\n    const window = getWindow();\n    tmaPlatform = (_d = (_c = (_b = window === null || window === void 0 ? void 0 : window.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) === null || _c === void 0 ? void 0 : _c.platform) !== null && _d !== void 0 ? _d : 'unknown';\n}\nfunction isInTMA() {\n    var _a;\n    return tmaPlatform !== 'unknown' || !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n}\n/**\n * Returns true if the app is running in the Telegram browser.\n */\nfunction isInTelegramBrowser() {\n    var _a;\n    const isTelegramWebview = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebview);\n    return (isInTMA() || isTelegramWebview) && tmaPlatform === 'unknown';\n}\nfunction getOKXLink(connectRequest, useMini = false, tmaReturnUrl) {\n    (0, log_1.logDebug)(`url  getOKXLink() called connectRequest==> ${JSON.stringify(connectRequest)}  useMini=> ${useMini}  tmaReturnUrl==> ${tmaReturnUrl}`);\n    if (useMini) {\n        var encodeTGParams = encodeTWAConnectURLParams(connectRequest);\n        return getTelegramWalletTWAUrl(encodeTGParams, tmaReturnUrl !== null && tmaReturnUrl !== void 0 ? tmaReturnUrl : \"back\");\n    }\n    else {\n        if ((0, utils_1.useShortLink)()) {\n            return getAppWalletShortDeepLink(connectRequest.topic, connectRequest.clientId);\n        }\n        else {\n            const base64Encoded = encodeConnectParams(connectRequest);\n            return `${protocol_1.standardDeeplink}?param=${base64Encoded}`;\n        }\n    }\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isValidObject = exports.RANDOM_LENGTH = exports.isBrowser = exports.resolveLocalStorage = exports.hasLocalStorage = exports.hasBuiltInWebSocket = exports.resolveWebSocketImplementation = void 0;\nexports.hexToByteArray = hexToByteArray;\nexports.getChainId = getChainId;\nexports.toHexString = toHexString;\nexports.concatUint8Arrays = concatUint8Arrays;\nexports.splitToUint8Arrays = splitToUint8Arrays;\nexports.base64encode = base64encode;\nexports.base64decode = base64decode;\nexports.checkWSUrl = checkWSUrl;\nexports.hashKey = hashKey;\nexports.generateRandomBytes32 = generateRandomBytes32;\nexports.generateTopic = generateTopic;\nexports.isIos = isIos;\nexports.getLastSixMd5Hash = getLastSixMd5Hash;\nexports.toSafeBase64FromBase64 = toSafeBase64FromBase64;\nexports.useShortLink = useShortLink;\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst tweetnacl_util_1 = __importDefault(require(\"tweetnacl-util\"));\nconst to_string_1 = require(\"uint8arrays/to-string\");\nconst sha256_1 = require(\"@stablelib/sha256\");\nconst safejson_1 = require(\"./safejson\");\nconst log_1 = require(\"./log\");\nconst stringUtils_1 = require(\"../utils/stringUtils\");\nconst crypto_js_1 = __importDefault(require(\"crypto-js\"));\nconst BASE16 = \"base16\";\nfunction hexToByteArray(hexString) {\n    if (hexString.length % 2 !== 0) {\n        throw new Error(`Cannot convert ${hexString} to bytesArray`);\n    }\n    const result = new Uint8Array(hexString.length / 2);\n    for (let i = 0; i < hexString.length; i += 2) {\n        result[i / 2] = parseInt(hexString.slice(i, i + 2), 16);\n    }\n    return result;\n}\nfunction getChainId(chain) {\n    return chain.includes(\":\") ? chain.split(\":\")[1] : chain;\n}\nfunction toHexString(byteArray) {\n    let hexString = '';\n    byteArray.forEach(byte => {\n        hexString += ('0' + (byte & 0xff).toString(16)).slice(-2);\n    });\n    return hexString;\n}\nfunction concatUint8Arrays(buffer1, buffer2) {\n    const mergedArray = new Uint8Array(buffer1.length + buffer2.length);\n    mergedArray.set(buffer1);\n    mergedArray.set(buffer2, buffer1.length);\n    return mergedArray;\n}\nfunction splitToUint8Arrays(array, index) {\n    if (index >= array.length) {\n        throw new Error('Index is out of buffer');\n    }\n    const subArray1 = array.slice(0, index);\n    const subArray2 = array.slice(index);\n    return [subArray1, subArray2];\n}\nfunction encodeUint8Array(value, urlSafe) {\n    const encoded = tweetnacl_util_1.default.encodeBase64(value);\n    if (!urlSafe) {\n        return encoded;\n    }\n    return encodeURIComponent(encoded);\n}\nfunction decodeToUint8Array(value, urlSafe) {\n    if (urlSafe) {\n        value = decodeURIComponent(value);\n    }\n    return tweetnacl_util_1.default.decodeBase64(value);\n}\nfunction base64encode(value, urlSafe) {\n    let uint8Array;\n    if (value instanceof Uint8Array) {\n        uint8Array = value;\n    }\n    else {\n        if (typeof value !== 'string') {\n            value = (0, safejson_1.safeJsonStringify)(value);\n        }\n        uint8Array = tweetnacl_util_1.default.decodeUTF8(value);\n    }\n    return encodeUint8Array(uint8Array, urlSafe);\n}\nfunction base64decode(value, urlSafe) {\n    const decodedUint8Array = decodeToUint8Array(value, urlSafe);\n    return {\n        toString() {\n            return tweetnacl_util_1.default.encodeUTF8(decodedUint8Array);\n        },\n        toObject() {\n            try {\n                return (0, safejson_1.safeJsonParse)(tweetnacl_util_1.default.encodeUTF8(decodedUint8Array));\n            }\n            catch (e) {\n                return null;\n            }\n        },\n        toUint8Array() {\n            return decodedUint8Array;\n        }\n    };\n}\nfunction checkWSUrl(url) {\n    const match = url.match(new RegExp(/^\\w+:/, \"gi\"));\n    if (!match || !match.length) {\n        return false;\n    }\n    let scheme = match[0];\n    if (scheme === undefined) {\n        return false;\n    }\n    return new RegExp(\"^wss?:\").test(scheme);\n}\nconst resolveWebSocketImplementation = () => {\n    if (typeof WebSocket !== \"undefined\") {\n        return WebSocket;\n    }\n    else if (typeof global !== \"undefined\" && typeof global.WebSocket !== \"undefined\") {\n        return global.WebSocket;\n    }\n    else if (typeof window !== \"undefined\" && typeof window.WebSocket !== \"undefined\") {\n        return window.WebSocket;\n    }\n    else if (typeof self !== \"undefined\" && typeof self.WebSocket !== \"undefined\") {\n        return self.WebSocket;\n    }\n    return WebSocket;\n    //\n    // return require(\"ws\");\n};\nexports.resolveWebSocketImplementation = resolveWebSocketImplementation;\nconst hasBuiltInWebSocket = () => typeof WebSocket !== \"undefined\" ||\n    (typeof global !== \"undefined\" && typeof global.WebSocket !== \"undefined\") ||\n    (typeof window !== \"undefined\" && typeof window.WebSocket !== \"undefined\") ||\n    (typeof self !== \"undefined\" && typeof self.WebSocket !== \"undefined\");\nexports.hasBuiltInWebSocket = hasBuiltInWebSocket;\nconst hasLocalStorage = () => (typeof global !== \"undefined\" && (typeof global.localStorage !== \"undefined\")) ||\n    (typeof window !== \"undefined\" && typeof window.localStorage !== \"undefined\");\nexports.hasLocalStorage = hasLocalStorage;\nconst resolveLocalStorage = () => {\n    if (typeof global !== \"undefined\" && typeof global.localStorage !== \"undefined\") {\n        return global.localStorage;\n    }\n    else if (typeof window !== \"undefined\" && typeof window.localStorage !== \"undefined\") {\n        return window.localStorage;\n    }\n    return localStorage;\n};\nexports.resolveLocalStorage = resolveLocalStorage;\nconst isBrowser = () => typeof window !== \"undefined\";\nexports.isBrowser = isBrowser;\nexports.RANDOM_LENGTH = 32;\nfunction hashKey(key, encode = BASE16) {\n    (0, log_1.logDebug)(`hash key called ${key}`);\n    const result = (0, sha256_1.hash)((0, stringUtils_1.okxfromString)(key, encode));\n    return (0, to_string_1.toString)(result, encode);\n}\nfunction generateRandomBytes32() {\n    return tweetnacl_1.default.randomBytes(exports.RANDOM_LENGTH);\n}\nfunction generateTopic() {\n    let randomBytes32 = generateRandomBytes32();\n    (0, log_1.logDebug)(`generate topic called ${randomBytes32}`);\n    return hashKey((0, to_string_1.toString)(randomBytes32, BASE16));\n}\nconst isValidObject = (obj) => Object.getPrototypeOf(obj) === Object.prototype && Object.keys(obj).length;\nexports.isValidObject = isValidObject;\nfunction isIos() {\n    const userAgent = navigator.userAgent;\n    const maxTouchPoints = navigator.maxTouchPoints || 0;\n    // 检测 iPhone、iPod 和传统的 iPad\n    const isIOSDevice = /iPad|iPhone|iPod/.test(userAgent) && !window.MSStream;\n    // 针对 iPadOS 13 及以上的设备进行额外判断\n    const isIPadOS = (userAgent.includes('Mac') && maxTouchPoints > 1);\n    (0, log_1.logDebug)(`utils isIos >>>isIOSDevice: ${isIOSDevice}    >> isIPadOS: ${isIPadOS}`);\n    // 如果是 iOS 设备或者是 iPadOS 设备，返回 true\n    return isIOSDevice || isIPadOS;\n}\nfunction getLastSixMd5Hash(input) {\n    // 生成 MD5 哈希\n    const hash = crypto_js_1.default.MD5(input).toString();\n    // 获取最后六位\n    return hash.slice(-6);\n}\nfunction toSafeBase64FromBase64(base64) {\n    return base64\n        .replace(/=/g, \"\")\n        .replace(/\\+/g, \"-\")\n        .replace(/\\//g, \"_\");\n}\nfunction useShortLink() {\n    // return !!(window as any).useShortLink;\n    return true;\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.openLink = openLink;\nexports.openLinkBlank = openLinkBlank;\nexports.openDeeplinkWithFallback = openDeeplinkWithFallback;\nexports.isMobileUserAgent = isMobileUserAgent;\nexports.getUserAgent = getUserAgent;\nexports.isOS = isOS;\nexports.isBrowser = isBrowser;\nconst ua_parser_js_1 = __importDefault(require(\"ua-parser-js\"));\nconst log_1 = require(\"./log\");\nconst tma_api_1 = require(\"./tma-api\");\nfunction openLink(href, target = '_self') {\n    (0, log_1.logDebug)('openLink', href, target);\n    window.open(href, target, 'noopener noreferrer');\n}\nfunction openLinkBlank(href) {\n    openLink(href, '_blank');\n}\nfunction openDeeplinkWithFallback(href, fallback) {\n    const doFallback = () => {\n        if (isBrowser('safari') || (isOS('android') && isBrowser('firefox'))) {\n            // Safari does not support fallback to direct link.\n            return;\n        }\n        fallback();\n    };\n    const fallbackTimeout = setTimeout(() => doFallback(), 500);\n    window.addEventListener('blur', () => clearTimeout(fallbackTimeout), { once: true });\n    if (isOS('android') && (0, tma_api_1.inTg)()) {\n        openLink(href, '_blank');\n    }\n    else {\n        openLink(href, '_self');\n    }\n}\nfunction isMobileUserAgent() {\n    let check = false;\n    (function (a) {\n        if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) ||\n            /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.slice(0, 4)))\n            check = true;\n    })(navigator.userAgent ||\n        navigator.vendor ||\n        window.opera);\n    return check;\n}\nfunction getUserAgent() {\n    var _a, _b, _c;\n    const results = new ua_parser_js_1.default().getResult();\n    const osName = (_a = results.os.name) === null || _a === void 0 ? void 0 : _a.toLowerCase();\n    const deviceModel = (_b = results.device.model) === null || _b === void 0 ? void 0 : _b.toLowerCase();\n    let os;\n    switch (true) {\n        case deviceModel === 'ipad':\n            os = 'ipad';\n            break;\n        case osName === 'ios':\n            os = 'ios';\n            break;\n        case osName === 'android':\n            os = 'android';\n            break;\n        case osName === 'mac os':\n            os = 'macos';\n            break;\n        case osName === 'linux':\n            os = 'linux';\n            break;\n        case osName === null || osName === void 0 ? void 0 : osName.includes('windows'):\n            os = 'windows';\n            break;\n    }\n    const browserName = (_c = results.browser.name) === null || _c === void 0 ? void 0 : _c.toLowerCase();\n    let browser;\n    switch (true) {\n        case browserName === 'chrome':\n            browser = 'chrome';\n            break;\n        case browserName === 'firefox':\n            browser = 'firefox';\n            break;\n        case browserName === null || browserName === void 0 ? void 0 : browserName.includes('safari'):\n            browser = 'safari';\n            break;\n        case browserName === null || browserName === void 0 ? void 0 : browserName.includes('opera'):\n            browser = 'opera';\n            break;\n    }\n    return {\n        os,\n        browser\n    };\n}\nfunction isOS(...os) {\n    return os.includes(getUserAgent().os);\n}\nfunction isBrowser(...browser) {\n    return browser.includes(getUserAgent().browser);\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXSolanaProvider = void 0;\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXSolanaProvider {\n    getRealChainId(chainId) {\n        if (chainId == null) {\n            if (this.chainsSet.size == 1) {\n                let realChain = \"\";\n                let map = this.defaultChainMap;\n                this.chainsSet.forEach(function (chain) {\n                    if (map.has(chain)) {\n                        realChain = map.get(chain);\n                    }\n                });\n                if (realChain == \"\") {\n                    throw new Error(\"unsupported chainId\");\n                }\n                else {\n                    return realChain;\n                }\n            }\n            else {\n                throw new Error(\"connected to multiple solana chains,chainId can not be null\");\n            }\n        }\n        else {\n            if (chainId.startsWith(\"svm\")) {\n                return chainId;\n            }\n            else {\n                if (this.caip.includes(chainId)) {\n                    return chainId;\n                }\n                else {\n                    throw new Error(\"wrong chainId\");\n                }\n            }\n        }\n    }\n    getConnectedNamespace() {\n        var _a, _b, _c;\n        (_c = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces) === null || _b === void 0 ? void 0 : _b['solana']) === null || _c === void 0 ? void 0 : _c.chains.forEach(chain => {\n            this.chainsSet.add(chain.split(\":\")[0]);\n        });\n    }\n    constructor(provider) {\n        this.chainsSet = new Set();\n        this.caip = [\n            \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n            \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n            \"sonic:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n            \"sonic:EtWTRABZaYq6iMfeYKouRu166VU2xqa1\"\n        ];\n        this.defaultChainMap = new Map();\n        this.provider = provider;\n        this.defaultChainMap.set(\"solana\", \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\");\n        this.defaultChainMap.set(\"sonic\", \"sonic:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\");\n        this.getConnectedNamespace();\n    }\n    signMessage(message, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            let realMessage = message;\n            let tx = null;\n            try {\n                const transaction = bs58_1.default.decode(message);\n                try {\n                    tx = web3_js_1.Transaction.from(transaction);\n                }\n                catch (error) {\n                    tx = web3_js_1.VersionedTransaction.deserialize(transaction);\n                }\n            }\n            catch (e) {\n            }\n            if (tx != null) {\n                return new Promise((resolve, reject) => {\n                    reject(\"Please sign with normal message\");\n                });\n            }\n            if (((_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.wallet) === null || _b === void 0 ? void 0 : _b.appName) == \"OKX Wallet\") {\n                realMessage = bs58_1.default.encode(new TextEncoder().encode(message));\n            }\n            else {\n                realMessage = message;\n            }\n            chainId = this.getRealChainId(chainId);\n            try {\n                let data = {\n                    \"chainId\": chainId,\n                    \"method\": \"solana_signMessage\",\n                    \"params\": {\n                        \"message\": realMessage,\n                        \"pubkey\": (_c = this.getAccount(chainId)) === null || _c === void 0 ? void 0 : _c.address\n                    },\n                    injectParams: {\n                        message: message,\n                        pubkey: (_d = this.getAccount(chainId)) === null || _d === void 0 ? void 0 : _d.address\n                    }\n                };\n                let signedMessage = yield this.provider.request(data, chainId);\n                (0, core_1.logDebug)(\"signMessage111\", signedMessage);\n                if ('result' in signedMessage) {\n                    let successData = signedMessage.result;\n                    return new Promise((resolve, reject) => {\n                        var _a;\n                        resolve({\n                            \"signature\": bs58_1.default.decode(successData),\n                            \"publicKey\": (_a = this.getAccount(chainId)) === null || _a === void 0 ? void 0 : _a.address\n                        });\n                    });\n                }\n                else {\n                    (0, core_1.logDebug)(\"signMessage111\", signedMessage);\n                    return new Promise((resolve, reject) => {\n                        resolve(signedMessage.error);\n                    });\n                }\n            }\n            catch (error) {\n                console.error('方法数据回调失败 --Error--', error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d;\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['solana']) === null || _b === void 0 ? void 0 : _b.accounts[0];\n        if (chainId != null) {\n            account = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces['solana']) === null || _d === void 0 ? void 0 : _d.accounts.filter(function (account) {\n                return account.startsWith(chainId);\n            })[0];\n        }\n        (0, core_1.logDebug)(\"getAccount\", account);\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const address = account.split(':')[2];\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address,\n            publicKey: new web3_js_1.PublicKey(address)\n        };\n    }\n    signTransaction(transaction, chainId) {\n        var _a, _b;\n        (0, core_1.logDebug)(\"OKXSolanaProvider\", typeof transaction);\n        chainId = this.getRealChainId(chainId);\n        try {\n            let serializedMessage = transaction.serialize({\n                requireAllSignatures: false,\n                verifySignatures: false,\n            });\n            let data = { \"data\": bs58_1.default.encode(serializedMessage), \"from\": (_a = this.getAccount(chainId)) === null || _a === void 0 ? void 0 : _a.address };\n            return this.getSignedTransaction(\"solana_signTransaction\", data, chainId, transaction);\n        }\n        catch (e) {\n            let serializedMessage = transaction.serialize();\n            let data = { \"data\": bs58_1.default.encode(serializedMessage), \"from\": (_b = this.getAccount(chainId)) === null || _b === void 0 ? void 0 : _b.address };\n            return this.getSignedTransaction(\"solana_signTransaction\", data, chainId, transaction);\n        }\n    }\n    signAllTransactions(transactions, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getRealChainId(chainId);\n            try {\n                var array = transactions.map((tx) => {\n                    var _a;\n                    var serializedMessage;\n                    if (tx instanceof web3_js_1.VersionedTransaction) {\n                        serializedMessage = tx.serialize();\n                    }\n                    else {\n                        serializedMessage = tx.serialize({\n                            requireAllSignatures: false,\n                            verifySignatures: false,\n                        });\n                    }\n                    return { \"data\": bs58_1.default.encode(serializedMessage), \"from\": (_a = this.getAccount(chainId)) === null || _a === void 0 ? void 0 : _a.address };\n                });\n                const response = yield this.provider.request({\n                    \"method\": \"solana_signAllTransactions\",\n                    \"params\": {\n                        \"transactions\": array\n                    },\n                    injectParams: transactions\n                }, chainId);\n                if (\"result\" in response) {\n                    let result = response.result;\n                    let newTransactions = JSON.parse(result).map((s) => {\n                        let c = bs58_1.default.decode(s);\n                        try {\n                            let transaction = web3_js_1.Transaction.from(c);\n                            (0, core_1.logDebug)(\"verifySignatures\", transaction.verifySignatures());\n                            return transaction;\n                        }\n                        catch (error) {\n                            return web3_js_1.VersionedTransaction.deserialize(c);\n                        }\n                    });\n                    return new Promise((resolve, reject) => {\n                        resolve(newTransactions);\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        resolve(response);\n                    });\n                }\n            }\n            catch (error) {\n                (0, core_1.logDebug)(\"getSignedTransaction\", error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    signAndSendTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b;\n            chainId = this.getRealChainId(chainId);\n            try {\n                let data = {};\n                try {\n                    let serializedMessage = transaction.serialize({\n                        requireAllSignatures: false,\n                        verifySignatures: false,\n                    });\n                    data = { \"data\": bs58_1.default.encode(serializedMessage), \"from\": (_a = this.getAccount(chainId)) === null || _a === void 0 ? void 0 : _a.address };\n                }\n                catch (e) {\n                    let serializedMessage = transaction.serialize();\n                    data = { \"data\": bs58_1.default.encode(serializedMessage), \"from\": (_b = this.getAccount(chainId)) === null || _b === void 0 ? void 0 : _b.address };\n                }\n                let signature = yield this.provider.request({\n                    \"method\": \"solana_signAndSendTransaction\",\n                    \"params\": data,\n                    injectParams: transaction\n                }, chainId);\n                if ('result' in signature) {\n                    let successData = signature.result;\n                    return new Promise((resolve, reject) => {\n                        resolve(successData);\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        resolve(signature);\n                    });\n                }\n            }\n            catch (error) {\n                (0, core_1.logDebug)(\"getSignedTransaction\", error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    getSignedTransaction(method, transactionStr, chainId, transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let signature = yield this.provider.request({\n                    \"method\": method,\n                    \"params\": transactionStr,\n                    injectParams: transaction\n                }, chainId);\n                if ('result' in signature) {\n                    let successData = signature.result;\n                    let c = bs58_1.default.decode(successData);\n                    let resultTx;\n                    try {\n                        resultTx = web3_js_1.Transaction.from(c);\n                    }\n                    catch (error) {\n                        resultTx = web3_js_1.VersionedTransaction.deserialize(c);\n                    }\n                    if (!(resultTx instanceof web3_js_1.VersionedTransaction)) {\n                        (0, core_1.logDebug)(\"verifySignatures\", resultTx.verifySignatures());\n                    }\n                    return new Promise((resolve, reject) => {\n                        resolve(resultTx);\n                    });\n                }\n                else if (\"injectResult\" in signature) {\n                    (0, core_1.logDebug)(\"getSignedTransaction injectResult\");\n                    let resultTx = signature.injectResult;\n                    return new Promise((resolve, reject) => {\n                        resolve(resultTx);\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        reject(signature);\n                    });\n                }\n            }\n            catch (error) {\n                (0, core_1.logDebug)(\"getSignedTransaction\", error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n}\nexports.OKXSolanaProvider = OKXSolanaProvider;\nexports.default = OKXSolanaProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXSolanaProvider = void 0;\nvar OKXSolanaProvider_1 = require(\"./OKXSolanaProvider\");\nObject.defineProperty(exports, \"OKXSolanaProvider\", { enumerable: true, get: function () { return OKXSolanaProvider_1.OKXSolanaProvider; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXBtcProvider = void 0;\nconst _1 = require(\"./\");\nclass OKXBtcProvider {\n    constructor(provider) {\n        this.caip = [\n            \"btc:mainnet\",\n            \"fractal:mainnet\"\n        ];\n        this.provider = provider;\n    }\n    getAddressForChainId(chainId) {\n        var _a, _b;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let accounts = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['btc']) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        });\n        if (accounts == undefined || accounts.length < 0) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `no connected account`);\n        }\n        let account = accounts[0];\n        const address = account.split(':')[2];\n        return address;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let extra = (_c = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['btc']) === null || _b === void 0 ? void 0 : _b.extra) === null || _c === void 0 ? void 0 : _c[chainId];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"compressedPublicKey\"];\n        }\n        return {\n            address: this.getAddressForChainId(chainId),\n            publicKey: publicKey\n        };\n    }\n    /**\n     *\n     * @param signStr\n     * @param chainId\n     * @param type\n     * @returns\n     */\n    signMessage(chainId, signStr, type) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (signStr === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signMessage parmas error`);\n            }\n            let params = {\n                signStr: signStr,\n                from: this.getAddressForChainId(chainId)\n            };\n            if (type) {\n                params.type = type;\n            }\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signMessage\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param toAddress\n     * @param satoshis\n     * @param options { feeRate: 0 }\n     * @returns\n     */\n    sendBitcoin(chainId, toAddress, satoshis, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            let params = {\n                from: this.getAddressForChainId(chainId),\n                to: toAddress,\n                value: (satoshis / 100000000).toString(),\n            };\n            if (options === null || options === void 0 ? void 0 : options.feeRate) {\n                params[\"satBytes\"] = options.feeRate.toString();\n            }\n            let result = yield this.send(chainId, params);\n            if (result !== undefined && ('txhash' in result)) {\n                // return txhash directly\n                return result.txhash;\n            }\n            // or return unexpected result\n            return result;\n        });\n    }\n    //  from - string：当前连接的钱包的 BTC 地址\n    //  to - string：接受 BTC 的地址\n    //  value - string：发送 BTC 的数量\n    //  satBytes - string： (可选) 自定义费率\n    //  memo - string： (可选) 指定 outputs OP_RETURN 内容 示例\n    //  memoPos - number： (可选) 指定 outputs OP_RETURN 输出位置，如果传了 memo 则必须传入 memoPos 指定位置，否则 memo 不生效\n    send(chainId, input) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (!this.checkParameters(input, 'to', 'value')) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send parmas  error`);\n            }\n            input[\"from\"] = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: 'btc_send',\n                    params: input\n                }, chainId);\n                if ('result' in ret) {\n                    return {\n                        txhash: ret.result\n                    };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param psbtHex string 要签名的 psbt 的十六进制字符串\n     * @param options object { autoFinalized: 0 }\n     */\n    signPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.signPsbts(chainId, [psbtHex], [options]).then(psbtResults => {\n                    let results = JSON.parse(psbtResults);\n                    resolve(results[0]);\n                }).catch(error => {\n                    reject(error);\n                });\n            });\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHexs Array\n     * @param options Array [{ autoFinalized: 0 }]\n     * @returns\n     */\n    signPsbts(chainId, psbtHexs, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHexs === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHexs: psbtHexs,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signPsbts\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHex string\n     * @param options object\n     * @returns\n     */\n    signAndPushPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHex === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHex: psbtHex,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signAndPushPsbt\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return JSON.parse(ret.result);\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param address string, receiver address\n     * @param inscriptionId string, 铭文 ID + 协议，没有传协议则默认是 Ordinals NFT ，目前仅支持 Ordinals 及 Atomicals 协议\n     * @param options object, { feeRate: number } custom rates\n     */\n    sendInscription(chainId, address, inscriptionId, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let extension = {\n                address: address,\n                inscriptionId: inscriptionId,\n                options: options\n            };\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (address === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method sendInscription params error`);\n            }\n            var feeRate = 0;\n            if (options && ('feeRate' in options)) {\n                feeRate = options.feeRate;\n            }\n            let coinId = '';\n            let from = this.getAddressForChainId(chainId);\n            var protocolId = 7; //ProtocolIdBRCNFT\n            if (inscriptionId !== 'undefined') {\n                let atomicSuffix = \"-Atomicals\";\n                let ordinalsSuffix = \"-Ordinals\";\n                if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(atomicSuffix.toLowerCase())) {\n                    protocolId = 8; //WXRCProtocolIdARCNFT\n                    inscriptionId = this.removeSuffix(inscriptionId, atomicSuffix);\n                }\n                else if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(ordinalsSuffix.toLowerCase())) {\n                    inscriptionId = this.removeSuffix(inscriptionId, ordinalsSuffix);\n                }\n            }\n            let params = {\n                scenario: 5,\n                feeRate: feeRate,\n                txType: \"20\",\n                to: address,\n                batchBean: [\n                    {\n                        coinAmount: \"1\",\n                        nftId: inscriptionId,\n                        protocolId: protocolId,\n                        coinId: coinId,\n                        inscriptionId: \"\",\n                        from: from\n                    }\n                ],\n                extension: extension\n            };\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_sendInscription\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    removeSuffix(str, suffix) {\n        if (str.endsWith(suffix)) {\n            return str.slice(0, str.length - suffix.length);\n        }\n        return str;\n    }\n    checkParameters(params, ...keys) {\n        var unexistKeys = [];\n        keys.forEach(key => {\n            if (!(`${key}` in params)) {\n                unexistKeys.push(key);\n            }\n        });\n        if (unexistKeys.length > 0) {\n            console.log('not find key: ', unexistKeys.join(\",\"));\n            return false;\n        }\n        return true;\n    }\n    /**\n     *\n     * @param chainId eg. btc:mainnet\n     * @returns eg. btc\n     */\n    checkChainId(chainId) {\n        if (this.caip.includes(chainId)) {\n            let [namespaceKey, _] = chainId.split(\":\");\n            return namespaceKey;\n        }\n        return undefined;\n    }\n}\nexports.OKXBtcProvider = OKXBtcProvider;\nexports.default = OKXBtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCosmosProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXCosmosProvider {\n    constructor(provider) {\n        this.provider = provider;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e, _f;\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount chainId:\", chainId);\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount namespaces:\", JSON.stringify((_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces));\n        let account = (_c = (_b = this.provider.session) === null || _b === void 0 ? void 0 : _b.namespaces[core_1.NameSpaceKeyCosmos]) === null || _c === void 0 ? void 0 : _c.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount account:\", JSON.stringify(account));\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount address:\", address);\n        let extra = (_f = (_e = (_d = this.provider.session) === null || _d === void 0 ? void 0 : _d.namespaces[core_1.NameSpaceKeyCosmos]) === null || _e === void 0 ? void 0 : _e.extra) === null || _f === void 0 ? void 0 : _f[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n            console.log(\"aptos_publicKey\", publicKey);\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            algo: \"secp256k1\",\n            address: address,\n            bech32Address: address,\n            pubKey: this.hexToUint8Array(publicKey),\n        };\n    }\n    signArbitrary(chainId, signerAddress, data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const base64Encoded = window.btoa(data);\n            const signDoc = {\n                chain_id: \"\",\n                account_number: \"0\",\n                sequence: \"0\",\n                fee: {\n                    gas: \"0\",\n                    amount: []\n                },\n                msgs: [{\n                        \"type\": \"sign/MsgSignData\",\n                        \"value\": {\n                            \"signer\": signerAddress,\n                            \"data\": base64Encoded\n                        }\n                    }],\n                memo: \"\"\n            };\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signArbitrary\",\n                \"params\": {\n                    \"signer\": signerAddress,\n                    \"chain_id\": chainId.split(\":\")[1],\n                    \"data\": signDoc\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    if (typeof ret.result == \"string\") {\n                        return JSON.parse(ret.result);\n                    }\n                    else {\n                        return ret.result;\n                    }\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signAmino(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (signDoc.msgs[0].type == \"sign/MsgSignData\") {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signArbitrary\",\n                    \"params\": {\n                        \"signer\": signerAddress,\n                        \"chain_id\": chainId.split(\":\")[1],\n                        \"data\": signDoc\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        return ret.result;\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    return error;\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                }\n            }\n            else {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signAmino\",\n                    \"params\": {\n                        \"signer\": signerAddress,\n                        \"chainId\": chainId.split(\":\")[1],\n                        \"sign_doc\": signDoc,\n                        \"signOptions\": signOptions\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        const resData = JSON.parse(ret.result);\n                        console.log(\"signdoc\", signDoc, resData.signDoc);\n                        signDoc.fee = resData.signDoc.fee;\n                        return { signed: signDoc, signature: resData.signature };\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                    return error;\n                }\n            }\n        });\n    }\n    signDirect(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const object = {\n                bodyBytes: this.bufferToHex(signDoc.bodyBytes),\n                authInfoBytes: this.bufferToHex(signDoc.authInfoBytes),\n                chainId: signDoc.chainId,\n                accountNumber: signDoc.accountNumber ? signDoc.accountNumber.toString() : null,\n                signOptions: signOptions ? signOptions : null\n            };\n            let data = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signDirect\",\n                \"params\": {\n                    \"signer\": signerAddress,\n                    \"chainId\": chainId.split(\":\")[1],\n                    \"sign_doc\": object,\n                }\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    const res = JSON.parse(ret.result);\n                    console.log(\"signdirect result\", res);\n                    signDoc.authInfoBytes = this.messageToBuffer(res.signDoc.authInfoBytes);\n                    return { signed: signDoc, signature: res.signature };\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    messageToBuffer(message) {\n        var buffer = Uint8Array.from([]);\n        try {\n            if (typeof message === \"string\") {\n                buffer = this.hexToUint8Array(message.replace(\"0x\", \"\"));\n            }\n            else {\n                buffer = Uint8Array.from(message);\n            }\n        }\n        catch (err) {\n            console.log(`messageToBuffer error: ${err}`);\n        }\n        return buffer;\n    }\n    bufferToHex(arr) {\n        let output = [...new Uint8Array(arr)]\n            .map(x => x.toString(16).padStart(2, '0'))\n            .join('');\n        return '0x' + output;\n    }\n    hexToUint8Array(hexString) {\n        if (hexString.length % 2 !== 0) {\n            throw \"Invalid hexString\";\n        }\n        var arrayBuffer = new Uint8Array(hexString.length / 2);\n        for (var i = 0; i < hexString.length; i += 2) {\n            var byteValue = parseInt(hexString.substr(i, 2), 16);\n            if (isNaN(byteValue)) {\n                throw \"Invalid hexString\";\n            }\n            arrayBuffer[i / 2] = byteValue;\n        }\n        return arrayBuffer;\n    }\n}\nexports.OKXCosmosProvider = OKXCosmosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXStarknetProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXStarknetProvider {\n    constructor(provider) {\n        this.STARKNET_CHAIN_ID = \"starknet:mainnet\";\n        this.provider = provider;\n    }\n    getChain(chainId) {\n        if (chainId == null) {\n            chainId = this.STARKNET_CHAIN_ID;\n        }\n        if (chainId != this.STARKNET_CHAIN_ID) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, \"The chainId:\" + chainId + \"is wrong for OKXStarknetProvider\");\n        }\n        return chainId;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e;\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[core_1.NameSpaceKeyStarknet]) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        let extra = (_e = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces[core_1.NameSpaceKeyStarknet]) === null || _d === void 0 ? void 0 : _d.extra) === null || _e === void 0 ? void 0 : _e[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address,\n            pubKey: publicKey\n        };\n    }\n    /**\n     *\n     * @param chainId\n     * @param signerAddress\n     * @param data: { types, primaryType, domain, message } as TypedData\n     * @returns [signedDataR, signedDataS]\n     */\n    signMessage(signerAddress, typedData, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            if (signerAddress.length == 0) {\n                signerAddress = this.getAccount(chainId)[\"address\"];\n            }\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"starknet_signMessage\",\n                \"params\": {\n                    \"accountAddress\": signerAddress,\n                    \"typedData\": typedData\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    let results = ret.result;\n                    if (typeof results == 'string') {\n                        results = JSON.parse(results);\n                    }\n                    return [results[\"signedDataR\"], results[\"signedDataS\"]];\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     * sendTransaction\n     * @param chainId\n     * @param signerAddress\n     * @param transaction\n     * @returns { transaction_hash }\n     */\n    sendTransaction(signerAddress, transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let transactionData = {\n                \"accountAddress\": signerAddress,\n                \"executionRequest\": transaction\n            };\n            let data = {\n                \"method\": \"starknet_sendTransaction\",\n                \"params\": {\n                    \"data\": JSON.stringify(transactionData),\n                    \"from\": signerAddress\n                }\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return { transaction_hash: ret.result };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     *\n     * signMessage old API（rarely used, no need provide to external）\n     * @param chainId\n     * @param payload\n     * @returns {transaction_hash, class_hash}\n     */\n    signMessageDeclareContractPayload(payload, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            try {\n                let data = {\n                    \"method\": \"starknet_signMessage\",\n                    \"params\": payload\n                };\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return {\n                        \"transaction_hash\": ret.result[\"txHash\"],\n                        \"class_hash\": ret.result[\"classHash\"]\n                    };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     * sendTransaction old API（rarely used, no need provide to external）\n     * @param chainId\n     * @param signerAddress\n     * @param calls\n     * @param abis\n     * @param transactionsDetail\n     * @returns { transaction_hash }\n     */\n    /// todo： \n    /// 修改方法名\n    /// chainId 放后面\n    sendMessageExecuteTransactionDetail(signerAddress, calls, abis, transactionsDetail, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            const transactions = Array.isArray(calls) ? calls : [calls];\n            const executionRequest = {\n                \"calls\": transactions,\n                \"abis\": abis,\n                \"transactionsDetail\": {\n                    \"nonce\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.nonce,\n                    \"maxFee\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.nonce,\n                    \"version\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.version,\n                }\n            };\n            return this.sendTransaction(signerAddress, executionRequest, chainId);\n        });\n    }\n}\nexports.OKXStarknetProvider = OKXStarknetProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTonProvider = void 0;\nconst _1 = require(\"./\");\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXTonProvider {\n    constructor(generator) {\n        this.statusChangeSubscriptions = [];\n        this.statusChangeErrorSubscriptions = [];\n        this.provider = generator;\n        this.provider.on(\"connect\", () => {\n            let tonWallet = this.wallet();\n            (0, core_1.logDebug)(\"OKXTONProvider event connect:\", JSON.stringify(tonWallet));\n            this.statusChangeSubscriptions.forEach(callback => callback(tonWallet));\n        });\n        this.provider.on(\"reconnect\", () => {\n            let tonWallet = this.wallet();\n            (0, core_1.logDebug)(\"OKXTONProvider event reconnect:\", JSON.stringify(tonWallet));\n            this.statusChangeSubscriptions.forEach(callback => callback(tonWallet));\n        });\n        this.provider.on(\"disconnect\", () => {\n            (0, core_1.logDebug)(\"OKXTONProvider event disconnect:\");\n            this.statusChangeSubscriptions.forEach(callback => callback(null));\n        });\n        this.provider.on(\"connect_error\", (error) => {\n            (0, core_1.logDebug)(\"OKXTONProvider event connect_error:\", JSON.stringify(error));\n            this.statusChangeErrorSubscriptions.forEach(errorsHandler => errorsHandler(error));\n        });\n    }\n    connected() {\n        if (this.provider.connected()) {\n            return !!this.provider.session.namespaces[\"ton\"];\n        }\n        return false;\n    }\n    account() {\n        try {\n            if (!this.provider.session) {\n                return null;\n            }\n            let tonNameSpace = this.provider.session.namespaces['ton'];\n            if (!tonNameSpace || !tonNameSpace.payload || !tonNameSpace.payload.ton_addr) {\n                return null;\n            }\n            let ton_addr = tonNameSpace.payload.ton_addr;\n            return {\n                address: ton_addr.address,\n                chain: ton_addr.network,\n                walletStateInit: ton_addr.walletStateInit,\n                publicKey: ton_addr.publicKey,\n            };\n        }\n        catch (e) {\n            (0, core_1.logDebug)(\"OKXTONProvider account  error:\", JSON.stringify(e));\n            return null;\n        }\n    }\n    wallet() {\n        if (this.connected()) {\n            try {\n                let sessionWallet = this.provider.session.wallet;\n                let tonDeviceInfo = {\n                    platform: sessionWallet.platform,\n                    appName: sessionWallet.appName,\n                    appVersion: sessionWallet.appVersion,\n                    maxProtocolVersion: sessionWallet.maxProtocolVersion,\n                    features: ['ton_sendTransaction'],\n                };\n                const wallet = {\n                    device: tonDeviceInfo,\n                    provider: \"http\",\n                    account: this.account()\n                };\n                let tonNameSpace = this.provider.session.namespaces['ton'];\n                if (tonNameSpace && tonNameSpace.payload && tonNameSpace.payload.ton_proof) {\n                    wallet.connectItems = {\n                        tonProof: tonNameSpace.payload.ton_proof\n                    };\n                }\n                (0, core_1.logDebug)(\"OKXTONProvider wallet :\", JSON.stringify(wallet));\n                return wallet;\n            }\n            catch (e) {\n                (0, core_1.logDebug)(\"OKXTONProvider wallet  error:\", JSON.stringify(e));\n                return null;\n            }\n        }\n        return null;\n    }\n    onStatusChange(callback, errorsHandler) {\n        this.statusChangeSubscriptions.push(callback);\n        if (errorsHandler) {\n            this.statusChangeErrorSubscriptions.push(errorsHandler);\n        }\n        return () => {\n            this.statusChangeSubscriptions = this.statusChangeSubscriptions.filter(item => item !== callback);\n            if (errorsHandler) {\n                this.statusChangeErrorSubscriptions = this.statusChangeErrorSubscriptions.filter(item => item !== errorsHandler);\n            }\n        };\n    }\n    sendTransaction(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (transaction.network && transaction.network !== core_1.TONCHAIN.MAINNET) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, 'OKXTONProvider sendTransaction network error');\n            }\n            if (!transaction.network) {\n                transaction.network = core_1.TONCHAIN.MAINNET;\n            }\n            if (this.provider.session) {\n                if (!transaction.from) {\n                    const accounts = this.provider.requestAccountsWithNamespace('ton');\n                    transaction.from = accounts[0];\n                }\n            }\n            const requestParams = {\n                method: \"ton_sendTransaction\",\n                params: transaction,\n            };\n            let chain = 'ton:' + core_1.TONCHAIN.MAINNET;\n            (0, core_1.logDebug)(\"OKXTONProvider sendTransaction transaction----:\", chain, JSON.stringify(requestParams));\n            return this.provider.request(requestParams, chain);\n        });\n    }\n}\nexports.OKXTonProvider = OKXTonProvider;\nexports.default = OKXTonProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTronProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXTronProvider {\n    constructor(provider) {\n        this.TRON_CHAIN_ID = \"tron:mainnet\";\n        this.provider = provider;\n    }\n    getChain(chainId) {\n        if (chainId == null) {\n            chainId = this.TRON_CHAIN_ID;\n        }\n        if (chainId != this.TRON_CHAIN_ID) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, \"The chainId:\" + chainId + \"is wrong for OKXTronProvider\");\n        }\n        return chainId;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e;\n        chainId = this.getChain(chainId);\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[core_1.NameSpaceKeyTron]) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        let extra = (_e = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces[core_1.NameSpaceKeyTron]) === null || _d === void 0 ? void 0 : _d.extra) === null || _e === void 0 ? void 0 : _e[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address\n        };\n    }\n    stringToHex(str) {\n        let hex = '';\n        for (let i = 0; i < str.length; i++) {\n            hex += str.charCodeAt(i).toString(16).padStart(2, '0');\n        }\n        return hex;\n    }\n    signMessage(data, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"tron_signMessage\",\n                \"params\": {\n                    \"message\": this.stringToHex(data)\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signMessageV2(data, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"tron_signMessageV2\",\n                \"params\": {\n                    \"message\": data\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let data = {\n                \"method\": \"tron_signTransaction\",\n                \"params\": transaction\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    let signedTx;\n                    if (typeof ret.result == \"string\") {\n                        signedTx = JSON.parse(ret.result);\n                    }\n                    else {\n                        signedTx = ret.result;\n                    }\n                    let realSignTx = {};\n                    realSignTx.visible = signedTx.visible;\n                    realSignTx.txID = signedTx.txID;\n                    let rawData = {};\n                    rawData.contract = signedTx.raw_data.contract;\n                    rawData.expiration = signedTx.raw_data.expiration;\n                    rawData.ref_block_bytes = signedTx.raw_data.ref_block_bytes;\n                    rawData.fee_limit = signedTx.raw_data.fee_limit;\n                    rawData.ref_block_hash = signedTx.raw_data.ref_block_hash;\n                    rawData.timestamp = signedTx.raw_data.timestamp;\n                    realSignTx.raw_data = rawData;\n                    realSignTx.raw_data_hex = signedTx.raw_data_hex;\n                    realSignTx.signature = signedTx.signature;\n                    return realSignTx;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signAndSendTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let data = {\n                \"method\": \"tron_signAndSendTransaction\",\n                \"params\": transaction\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n}\nexports.OKXTronProvider = OKXTronProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXUniversalProvider = void 0;\nconst eip155_1 = require(\"./provider/providers/eip155\");\nconst sui_1 = require(\"./provider/providers/sui\");\nconst constants_1 = require(\"./provider/constants\");\nconst eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\nconst client_1 = require(\"./packages/sign-client/client\");\nconst core_1 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"./packages/utils/namespaces\");\nconst solana_1 = __importDefault(require(\"./provider/providers/solana\"));\nconst btc_1 = __importDefault(require(\"./provider/providers/btc\"));\nconst aptos_1 = __importDefault(require(\"./provider/providers/aptos\"));\nconst ton_1 = __importDefault(require(\"./provider/providers/ton\"));\nconst cosmos_1 = __importDefault(require(\"./provider/providers/cosmos\"));\nconst tron_1 = __importDefault(require(\"./provider/providers/tron\"));\nconst utils_1 = require(\"./provider/utils\");\nconst packages_1 = require(\"./packages\");\nconst provider_1 = require(\"./provider\");\nconst starknet_1 = __importDefault(require(\"./provider/providers/starknet\"));\nclass OKXUniversalProvider {\n    static init(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider init() called');\n            (0, core_1.checkMetaData)(opts.dappMetaData);\n            // ignore rpc provider check by default\n            (0, utils_1.setGlobal)('disableProviderPing', true);\n            let provider;\n            if (window && window.okxConnectUniversalinwindow && window.okxConnectUniversalinwindow instanceof OKXUniversalProvider) {\n                (0, core_1.logDebug)('OKXUniversalConnect init() old called');\n                provider = window.okxConnectUniversalinwindow;\n            }\n            else {\n                (0, core_1.logDebug)('OKXUniversalConnect init() new called');\n                provider = new OKXUniversalProvider(opts);\n                if (window) {\n                    window.okxConnectUniversalinwindow = provider;\n                }\n                yield provider.initialize();\n            }\n            (0, core_1.getDefaultReporter)().configVersionAndSide('universalprovider-1.5.2', 'dapp', provider.providerOpts.dappMetaData.name);\n            return provider;\n        });\n    }\n    constructor(opts) {\n        this.rpcProviders = {};\n        this.events = new eventemitter3_1.default();\n        if (!opts.connector || opts.connector.length == 0) {\n            opts.connector = [core_1.AppwalletConnector.getConnector(), core_1.TgwalletConnector.getConnector()];\n        }\n        this.providerOpts = opts;\n    }\n    request(args, chain) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider request() called');\n            (0, core_1.reportLog)('OKXUniversalProvider request() called');\n            if (!this.connected()) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            (0, core_1.logDebug)('OKXUniversalProvider request()  connected ');\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return yield this.getProvider(namespace).request(requestParam);\n        });\n    }\n    buildRequestParamFromRequest(args, chain) {\n        var _a;\n        (0, core_1.logDebug)(\"UniversalProvider request args >>>>>>>: \", chain, (0, core_1.safeJsonStringify)(args));\n        let [namespace, chainId] = this.validateChain(chain);\n        if (!this.session) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Please call connect() before request()\");\n        }\n        let keyArr = Object.keys(this.session.namespaces);\n        if (!chain && keyArr && keyArr.length > 1) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Multiple chains have been linked, the request method requires chain`);\n        }\n        if (namespace == \"aptos\" && chainId == \"mainnet\") {\n            namespace = \"aptos\";\n            chainId = \"637\";\n        }\n        if (namespace == \"movement\" && chainId == \"testnet\") {\n            namespace = \"aptos\";\n            chainId = \"70000060\";\n        }\n        const requestParam = Object.assign(Object.assign({}, args), { chainId: `${namespace}:${chainId}`, redirect: (_a = args.redirect) !== null && _a !== void 0 ? _a : this.sessionConfig.redirect });\n        return { namespace, requestParam };\n    }\n    enable() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.client) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (!this.session) {\n                if (this.connectOpts) {\n                    yield this.connect(this.connectOpts);\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n                }\n            }\n            const accounts = yield this.requestAccounts();\n            return accounts;\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider disconnect() called');\n            (0, core_1.reportLog)('provider disconnect called');\n            if (!this.session) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n                let called = false;\n                const onRequestSent = () => __awaiter(this, void 0, void 0, function* () {\n                    if (!called) {\n                        called = true;\n                        yield this.disconnectAndEmit();\n                        yield this.cleanup();\n                        resolve();\n                        (0, core_1.logDebug)(\"UniversalProvider disconnect Disconnected\");\n                        (0, core_1.reportLog)('provider disconnect disconnected');\n                    }\n                });\n                try {\n                    yield this.client.disconnect();\n                    yield onRequestSent();\n                }\n                catch (e) {\n                    yield onRequestSent();\n                }\n            }));\n        });\n    }\n    disconnectAndEmit() {\n        var _a, _b;\n        this.client.engine.clearData();\n        this.events.emit(\"disconnect\", { topic: (_a = this.session) === null || _a === void 0 ? void 0 : _a.topic });\n        this.events.emit(\"session_delete\", { topic: (_b = this.session) === null || _b === void 0 ? void 0 : _b.topic });\n    }\n    aptosChainNameToGeneralId(chainId) {\n        if (chainId == \"aptos:mainnet\") {\n            return \"aptos:637\";\n        }\n        else if (chainId == \"movement:testnet\") {\n            return \"aptos:70000060\";\n        }\n        else {\n            return chainId;\n        }\n    }\n    replaceAptos(opts) {\n        var _a, _b;\n        let aptosNameSpace = (_a = opts.namespaces) === null || _a === void 0 ? void 0 : _a[\"aptos\"];\n        if (aptosNameSpace != undefined) {\n            let realNS = this.replaceAptosInner(aptosNameSpace);\n            if (opts.namespaces != undefined && \"aptos\" in opts.namespaces && realNS != undefined) {\n                opts.namespaces.aptos = realNS;\n            }\n        }\n        let optionAptosNameSpace = (_b = opts.optionalNamespaces) === null || _b === void 0 ? void 0 : _b[\"aptos\"];\n        if (optionAptosNameSpace != undefined) {\n            let realOptionNS = this.replaceAptosInner(optionAptosNameSpace);\n            if (opts.optionalNamespaces != undefined && \"aptos\" in opts.optionalNamespaces && realOptionNS != undefined) {\n                opts.optionalNamespaces.aptos = realOptionNS;\n            }\n        }\n        return opts;\n    }\n    replaceAptosInner(aptosNameSpace) {\n        var _a;\n        if (aptosNameSpace != undefined) {\n            aptosNameSpace.chains = (_a = aptosNameSpace.chains) === null || _a === void 0 ? void 0 : _a.map(chainId => {\n                return this.aptosChainNameToGeneralId(chainId);\n            });\n            if (aptosNameSpace.defaultChain != undefined) {\n                aptosNameSpace.defaultChain = this.aptosChainNameToGeneralId(aptosNameSpace.defaultChain);\n            }\n        }\n        return aptosNameSpace;\n    }\n    replaceAptosGeneralIdWithNetName(chainId) {\n        if (chainId.includes(\"aptos:637\")) {\n            chainId = chainId.replace(\"aptos:637\", \"aptos:mainnet\");\n        }\n        else if (chainId.includes(\"aptos:70000060\")) {\n            chainId = chainId.replace(\"aptos:70000060\", \"movement:testnet\");\n        }\n        return chainId;\n    }\n    replaceSessionAptos(session) {\n        var _a;\n        let namespaces = (_a = session === null || session === void 0 ? void 0 : session.namespaces) === null || _a === void 0 ? void 0 : _a[\"aptos\"];\n        if (namespaces != undefined && namespaces.chains != undefined) {\n            namespaces.chains = namespaces.chains.map(chain => {\n                return this.replaceAptosGeneralIdWithNetName(chain);\n            });\n            namespaces.accounts = namespaces.accounts.map((account) => {\n                return this.replaceAptosGeneralIdWithNetName(account);\n            });\n            let extra = {};\n            Object.keys(namespaces.extra || {}).forEach((key, index) => {\n                let newKey = this.replaceAptosGeneralIdWithNetName(key);\n                extra[this.replaceAptosGeneralIdWithNetName(key)] = Object.values((session === null || session === void 0 ? void 0 : session.namespaces[\"aptos\"].extra) || {})[index];\n            });\n            namespaces.extra = extra;\n        }\n        (0, core_1.logDebug)(\"replaceSessionAptos\", session);\n    }\n    connected() {\n        (0, core_1.logDebug)('OKXUniversalProvider connected() called');\n        (0, core_1.reportLog)('provider connected called');\n        let disconnectInner = () => {\n            try {\n                this.cleanup();\n                this.client.engine.connectManagerDisconnect();\n            }\n            catch (e) {\n                (0, core_1.logDebug)(\"Error during disconnect:\", e);\n            }\n        };\n        try {\n            if (!this.session)\n                return false;\n            if (!this.client.engine.getCurrentConnectionReady(Object.keys(this.session.namespaces))) {\n                disconnectInner();\n                return false;\n            }\n            return true;\n        }\n        catch (e) {\n            disconnectInner();\n            return false;\n        }\n    }\n    connectAndSign(opts, signRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() called');\n            const updatedOpts = Object.assign(Object.assign({}, opts), { signRequest });\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() opts:', JSON.stringify(opts));\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() signRequest:', JSON.stringify(signRequest));\n            return yield this.connect(updatedOpts);\n        });\n    }\n    connect(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider connect() called');\n            (0, core_1.reportLog)('provider connect called');\n            if (!this.client) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (this.connected()) {\n                return this.session;\n            }\n            opts = this.replaceAptos(opts);\n            (0, core_1.logDebug)(`OKXUniversalProvider connect >>>>`, JSON.stringify(opts));\n            if (opts.sessionConfig === undefined) {\n                opts.sessionConfig = {};\n            }\n            if (opts.sessionConfig.openUniversalUrl === undefined) {\n                opts.sessionConfig.openUniversalUrl = (0, core_1.isMobileUserAgent)();\n            }\n            this.setNamespaces(opts);\n            try {\n                (0, core_1.logDebug)(`UniversalProvider connect opts.stringify ====> ${JSON.stringify(opts)}`);\n                let session = yield this.client.connect(opts);\n                this.replaceSessionAptos(session);\n                (0, core_1.logDebug)(`UniversalProvider connect success ====> ${JSON.stringify(session)}`);\n                if (session) {\n                    this.session = session;\n                    this.client.session = session;\n                    this.setConnectConnector();\n                    (0, core_1.logDebug)(`OKXUniversalProvider connect success opts>>>>`, JSON.stringify(opts));\n                    this.onConnect();\n                    if (opts.signRequest && opts.signRequest.length > 0) {\n                        let requestItem = opts.signRequest[0];\n                        let signResponseList = [];\n                        if (typeof window !== \"undefined\" && window && window.okxConnectUniversalUIinwindow) { //from UI\n                            (0, core_1.logDebug)(`OKXUniversalProvider connect success, us UI SDK>>>>`);\n                            if (this.session.signResponse && this.session.signResponse.length > 0) { // >=6.96\n                                signResponseList = this.session.signResponse;\n                            }\n                        }\n                        else {\n                            (0, core_1.logDebug)(`OKXUniversalProvider connect success, us Universal SDK>>>>`);\n                            if (this.session.signResponse && this.session.signResponse.length > 0) { // >=6.96\n                                signResponseList = this.session.signResponse;\n                            }\n                            else {\n                                signResponseList.push((0, packages_1.creatNotSupportMethodItemReplay)(requestItem));\n                            }\n                        }\n                        (0, core_1.logDebug)(`UniversalProvider connect success connectRequestReply ====> ${JSON.stringify(signResponseList)}`);\n                        setTimeout(() => {\n                            this.events.emit(\"connect_signResponse\", signResponseList);\n                        }, 100);\n                    }\n                    return session;\n                }\n                return undefined;\n            }\n            catch (error) {\n                (0, core_1.logDebug)(`UniversalProvider connect error ====> `, JSON.stringify(error));\n                throw error;\n            }\n        });\n    }\n    syncAllAddresses() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if ((0, provider_1.syncAddressAvailable)(this.session.wallet)) {\n                return this.client.syncAllAddress();\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n            }\n        });\n    }\n    setConnectConnector() {\n        var _a;\n        this.client.setConnectConnector((_a = this.session) === null || _a === void 0 ? void 0 : _a.wallet);\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    setDefaultChain(chain, rpcUrl) {\n        (0, core_1.logDebug)('OKXUniversalProvider setDefaultChain() called');\n        // chain = this.aptosChainNameToGeneralId(chain)\n        try {\n            // ignore without active session\n            if (!this.connected())\n                return;\n            const [namespace, chainId] = this.validateChain(chain);\n            const provider = this.getProvider(namespace);\n            provider.setDefaultChain(chainId, rpcUrl);\n        }\n        catch (error) {\n            // ignore the error if the fx is used prematurely before namespaces are set\n            if (!/Please call connect/.test(error.message))\n                throw error;\n        }\n    }\n    checkStorage() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let sessionInfoStr = yield this.getFromStore(\"connectSession\");\n            (0, core_1.logDebug)(sessionInfoStr);\n            if (sessionInfoStr) {\n                (0, core_1.logDebug)(`checkStorage error start`);\n                try {\n                    let sessionInfo = sessionInfoStr;\n                    this.session = sessionInfo;\n                    this.client.session = this.session;\n                    this.setConnectConnector();\n                    yield this.client.restoreconnect(sessionInfo);\n                    this.sessionConfig = sessionInfo.sessionConfig;\n                    this.client.sessionConfig = this.sessionConfig;\n                    (0, core_1.logDebug)('[evm u-provider] do reconnection', this.session);\n                    this.createProviders();\n                    this.registerEventListeners();\n                    setTimeout(() => {\n                        this.events.emit(\"reconnect\", { session: this.session });\n                    }, 100);\n                }\n                catch (e) {\n                    yield this.cleanup();\n                    (0, core_1.logDebug)(`checkStorage error ${JSON.stringify(e)}`);\n                }\n            }\n        });\n    }\n    initialize() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider initialize() called');\n            (0, core_1.reportLog)('provider initialize called');\n            const data = Object.assign({ url: window.location.hostname, origin: window.location.origin }, this.providerOpts.dappMetaData);\n            this.client = new client_1.SignClient(data, this.events);\n            this.registerConnector(this.providerOpts.connector);\n            yield this.checkStorage();\n        });\n    }\n    createProviders() {\n        if (!this.client) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n        }\n        if (!this.connected()) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Session not initialized. Please call connect() before enable()\");\n        }\n        const providersToCreate = [\n            ...new Set(Object.keys(this.session.namespaces)\n                .filter((namespace) => { var _a, _b; return ((_b = (_a = this.session.namespaces[namespace]) === null || _a === void 0 ? void 0 : _a.accounts) === null || _b === void 0 ? void 0 : _b.length) > 0; })\n                .map((namespace) => (0, namespaces_1.parseNamespaceKey)(namespace))),\n        ];\n        providersToCreate.forEach((namespace) => {\n            if (!this.session)\n                return;\n            const namespacesValue = this.session.namespaces;\n            const currentNameSpace = namespacesValue[namespace];\n            (0, core_1.logDebug)(\"init eip155 >> \", currentNameSpace);\n            switch (namespace) {\n                case \"eip155\":\n                    const opts = {\n                        namespace: currentNameSpace\n                    };\n                    this.rpcProviders[namespace] = new eip155_1.Eip155Provider(opts, this.client, this.events);\n                    break;\n                case \"solana\":\n                    const opts1 = {\n                        namespace: currentNameSpace\n                    };\n                    let solanaProvider = new solana_1.default(opts1, \"solana\", this.client, this.events);\n                    this.rpcProviders[namespace] = solanaProvider;\n                    let sonicProvider = new solana_1.default(opts1, \"sonic\", this.client, this.events);\n                    this.rpcProviders['sonic'] = sonicProvider;\n                    let svmProvider = new solana_1.default(opts1, \"svm\", this.client, this.events);\n                    this.rpcProviders['svm'] = svmProvider;\n                    // this.rpcProviders[namespace] = new SolanaProvider(opts1, () => { return this.session; });\n                    break;\n                case \"ton\":\n                    const optsTon = {\n                        namespace: currentNameSpace\n                    };\n                    let tonProvider = new ton_1.default(optsTon, this.client, this.events);\n                    this.rpcProviders[namespace] = tonProvider;\n                    break;\n                case \"sui\":\n                    const optsSui = {\n                        namespace: currentNameSpace\n                    };\n                    let suiProvider = new sui_1.SuiProvider(optsSui, this.client, this.events);\n                    suiProvider.name = \"sui\";\n                    this.rpcProviders[namespace] = suiProvider;\n                    break;\n                case \"btc\":\n                    const optsBtc = {\n                        namespace: currentNameSpace\n                    };\n                    let btcProvider = new btc_1.default(optsBtc, \"btc\", this.client, this.events);\n                    this.rpcProviders[\"btc\"] = btcProvider;\n                    let fbProvider = new btc_1.default(optsBtc, \"fractal\", this.client, this.events);\n                    this.rpcProviders[\"fractal\"] = fbProvider;\n                    break;\n                case \"aptos\":\n                    let aptosProvider = new aptos_1.default({\n                        namespace: currentNameSpace\n                    }, \"aptos\", this.client, this.events);\n                    this.rpcProviders[namespace] = aptosProvider;\n                    let moveProvider = new aptos_1.default({\n                        namespace: currentNameSpace\n                    }, \"movement\", this.client, this.events);\n                    this.rpcProviders[\"movement\"] = moveProvider;\n                    break;\n                case \"cosmos\":\n                    let cosmosProvider = new cosmos_1.default({\n                        namespace: currentNameSpace\n                    }, this.client, this.events);\n                    this.rpcProviders[namespace] = cosmosProvider;\n                    break;\n                case \"tron\":\n                    let tronProvider = new tron_1.default({\n                        namespace: currentNameSpace\n                    }, this.client, this.events);\n                    this.rpcProviders[namespace] = tronProvider;\n                    break;\n                case \"starknet\":\n                    let starknetProvider = new starknet_1.default({\n                        namespace: currentNameSpace\n                    }, \"starknet\", this.client, this.events);\n                    this.rpcProviders[namespace] = starknetProvider;\n                    break;\n            }\n        });\n    }\n    registerEventListeners() {\n        if (typeof this.client === \"undefined\") {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client is not initialized\");\n        }\n        this.client.engine.addDisconnectListener(() => {\n            this.disconnectAndEmit();\n            this.cleanup();\n        });\n        this.on(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, (caip2ChainId) => {\n            this.onChainChanged(caip2ChainId);\n        });\n        this.on(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, (nameSpaces) => {\n            if (nameSpaces) {\n                const nameSpacekey = Object.keys(nameSpaces)[0];\n                if (this.session) {\n                    this.session.namespaces[nameSpacekey] = nameSpaces[nameSpacekey];\n                    if (this.session) {\n                        this.persist(\"connectSession\", this.session);\n                        this.events.emit(\"session_update\", this.session);\n                    }\n                    (0, core_1.logDebug)(\"PROVIDER_EVENTS.UPDATE_NAMESPACES this.session... ->>>\", JSON.stringify(this.session));\n                }\n            }\n        });\n    }\n    getProvider(namespace) {\n        (0, core_1.logDebug)('current get providers', this.rpcProviders);\n        (0, core_1.logDebug)('query namespace: ', namespace);\n        return this.rpcProviders[namespace];\n    }\n    setNamespaces(params) {\n        this.connectOpts = params;\n        const { namespaces, sessionConfig } = params;\n        const data = {\n            origin: window.location.origin,\n            url: window.location.hostname,\n            name: this.providerOpts.dappMetaData.name,\n            icon: this.providerOpts.dappMetaData.icon,\n        };\n        this.sessionConfig = Object.assign({ dappInfo: data }, sessionConfig);\n        (0, core_1.logDebug)(\"setNamespaces sessionConfig>>>\", this.sessionConfig);\n        this.client.sessionConfig = this.sessionConfig;\n        this.persist(\"sessionConfig\", sessionConfig);\n    }\n    validateChain(chain) {\n        var _a;\n        let [namespace, chainId] = (chain === null || chain === void 0 ? void 0 : chain.split(\":\")) || [\"\", \"\"];\n        if (!this.session || !this.session.namespaces || !Object.keys(this.session.namespaces).length) {\n            (0, core_1.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        if (namespace) {\n            if (!this.isChainNamespaceInSession(namespace)) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace '${namespace}' is not configured. Please call connect() first with namespace config.`);\n            }\n            if (chainId && chain) {\n                (0, core_1.logDebug)('this.session.namespaces -->> ', namespace, JSON.stringify(this.session.namespaces));\n                const chainsArr = (_a = this.session.namespaces[namespace]) === null || _a === void 0 ? void 0 : _a.chains;\n                (0, core_1.logDebug)('get chainsArr & chain', JSON.stringify(chainsArr), chain);\n                if (chainsArr && !chainsArr.includes(chain)) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace not include the chain '${chain}'`);\n                }\n            }\n        }\n        if (namespace && chainId) {\n            (0, core_1.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        let defaultNamespace = (0, namespaces_1.parseNamespaceKey)(Object.keys(this.session.namespaces)[0]);\n        const defaultChain = this.rpcProviders[defaultNamespace].getDefaultChain();\n        (0, core_1.logDebug)('get default chain:', defaultChain);\n        return [defaultNamespace, defaultChain];\n    }\n    isChainNamespaceInSession(namespaceStr) {\n        var _a, _b;\n        if (Object.keys(((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces) || {})\n            .map((key) => (0, namespaces_1.parseNamespaceKey)(key))\n            .includes(namespaceStr)) {\n            return true;\n        }\n        let isChainNamespaceInSession = false;\n        Object.values(((_b = this.session) === null || _b === void 0 ? void 0 : _b.namespaces) || {})\n            .forEach(namespace => {\n            namespace.chains.forEach(chain => {\n                if (chain.split(\":\")[0] == namespaceStr) {\n                    isChainNamespaceInSession = true;\n                }\n            });\n        });\n        return isChainNamespaceInSession;\n    }\n    requestAccountsWithNamespace(namespace) {\n        return this.getProvider(namespace).requestAccounts();\n    }\n    requestDefaultChainWithNamespace(namespace) {\n        return this.getProvider(namespace).getDefaultChain();\n    }\n    requestAccounts() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const [namespace] = this.validateChain();\n            return yield this.getProvider(namespace).requestAccounts();\n        });\n    }\n    onChainChanged(caip2Chain) {\n        var _a;\n        if (!((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces))\n            return;\n        const [namespace, chainId] = this.validateChain(caip2Chain);\n        if (!chainId)\n            return;\n        if (this.session.namespaces[namespace]) {\n            this.session.namespaces[namespace].defaultChain = chainId;\n            this.persist(\"connectSession\", this.session);\n        }\n        this.events.emit(\"chainChanged\", chainId);\n    }\n    onConnect() {\n        this.createProviders();\n        if (this.session) {\n            this.persist(\"connectSession\", this.session);\n        }\n        this.events.emit(\"connect\", { session: this.session });\n        this.registerEventListeners();\n    }\n    cleanup() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.session = undefined;\n            this.client.session = undefined;\n            this.setConnectConnector();\n            this.sessionProperties = undefined;\n            this.persist(\"optionalNamespaces\", undefined);\n            this.persist(\"sessionProperties\", undefined);\n            this.persist(\"connectSession\", undefined);\n        });\n    }\n    persist(key, data) {\n        (0, core_1.logDebug)('[evm u-provider] persisit data', key, data);\n        return this.client.engine.saveSessionContent(key, data);\n    }\n    getFromStore(key) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.client.engine.getSessionContent(key);\n        });\n    }\n    showRequestModal(args, chain) {\n        try {\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return this.getProvider(namespace).showRequestModal(requestParam);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    openWallet(engineConnectInfo, connector) {\n        this.client.openWallet(engineConnectInfo, connector);\n    }\n    registerConnector(connectors) {\n        this.client.registerConnector(connectors);\n    }\n}\nexports.OKXUniversalProvider = OKXUniversalProvider;\nexports.default = OKXUniversalProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXStarknetProvider = exports.OKXTronProvider = exports.OKXTonProvider = exports.OKXCosmosProvider = exports.OKXBtcProvider = exports.OKXUniversalProvider = void 0;\n__exportStar(require(\"./provider/types\"), exports);\n__exportStar(require(\"./packages\"), exports);\nvar OKXUniversalProvider_1 = require(\"./OKXUniversalProvider\");\nObject.defineProperty(exports, \"OKXUniversalProvider\", { enumerable: true, get: function () { return OKXUniversalProvider_1.OKXUniversalProvider; } });\nvar OKXBtcProvider_1 = require(\"./OKXBtcProvider\");\nObject.defineProperty(exports, \"OKXBtcProvider\", { enumerable: true, get: function () { return OKXBtcProvider_1.OKXBtcProvider; } });\nvar OKXCosmosProvider_1 = require(\"./OKXCosmosProvider\");\nObject.defineProperty(exports, \"OKXCosmosProvider\", { enumerable: true, get: function () { return OKXCosmosProvider_1.OKXCosmosProvider; } });\nvar OKXTonProvider_1 = require(\"./OKXTonProvider\");\nObject.defineProperty(exports, \"OKXTonProvider\", { enumerable: true, get: function () { return OKXTonProvider_1.OKXTonProvider; } });\nvar OKXTronProvider_1 = require(\"./OKXTronProvider\");\nObject.defineProperty(exports, \"OKXTronProvider\", { enumerable: true, get: function () { return OKXTronProvider_1.OKXTronProvider; } });\nvar OKXStarknetProvider_1 = require(\"./OKXStarknetProvider\");\nObject.defineProperty(exports, \"OKXStarknetProvider\", { enumerable: true, get: function () { return OKXStarknetProvider_1.OKXStarknetProvider; } });\n__exportStar(require(\"@okxconnect/core\"), exports);\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./utils\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SignClient = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"../utils/namespaces\");\nconst ConnectMethodUtils_1 = require(\"../utils/ConnectMethodUtils\");\nconst constants_1 = require(\"../../provider/constants\");\nclass SignClient extends core_1.ISignClient {\n    constructor(metaData, events) {\n        super(metaData);\n        // ---------- Engine ----------------------------------------------- //\n        this.connect = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    var connectRequest = [];\n                    (0, core_1.logDebug)(`client connect params >>>`, JSON.stringify(params));\n                    var requestAccountItem = {\n                        name: \"requestAccounts\",\n                        requiredNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.namespaces),\n                        optionalNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.optionalNamespaces),\n                    };\n                    this.engine.setSessionConnectingListener(() => {\n                        (0, core_1.logDebug)(`sessionConnectingListener >>>`);\n                        this.events.emit(constants_1.PROVIDER_EVENTS.SESSION_CONNECTING);\n                    });\n                    if (params.signRequest) {\n                        requestAccountItem.connectRequestMethods = yield (0, ConnectMethodUtils_1.connectMethodsToConnectWalletMethods)(params.signRequest, requestAccountItem.requiredNamespaces);\n                    }\n                    connectRequest.push(requestAccountItem);\n                    (0, core_1.logDebug)(`client connect connectRequest >>>`, JSON.stringify(connectRequest));\n                    this.engine.universalConnect(connectRequest, Object.assign({ dappInfo: this.metadata }, params.sessionConfig), (info) => {\n                        if (info && info.connectRequest) {\n                            (0, core_1.logDebug)(`universalConect info.connectRequest :`, info.connectRequest);\n                            (0, core_1.logDebug)(`universalConect url:`, (0, core_1.getOKXLink)(info.connectRequest, this.sessionConfig.useMini));\n                            this.events.emit(\"display_uri\", (0, core_1.getOKXLink)(info.connectRequest, this.sessionConfig.useMini));\n                            this.events.emit(\"short_display_uri\", (0, core_1.getAppWalletShortDeepLink)(info.connectRequest.topic, info.connectRequest.clientId));\n                            (0, core_1.logDebug)(`universalConect EngineConnectInfo  ${JSON.stringify(info)}`);\n                            this.events.emit(\"okx_engine_connect_params\", info);\n                        }\n                    }).then((session) => __awaiter(this, void 0, void 0, function* () {\n                        (0, namespaces_1.fillParamsToSession)(session, params.namespaces, params.optionalNamespaces, this.sessionConfig);\n                        (0, core_1.logDebug)(`signClient: connect: session ${JSON.stringify(session)}`);\n                        if (params.signRequest) {\n                            yield (0, ConnectMethodUtils_1.connectMethodsResponseUpdate)(session, params.signRequest);\n                        }\n                        resolve(session);\n                    })).catch((e) => {\n                        (0, core_1.logDebug)(`signClient: connect: catch ${JSON.stringify(e)}`);\n                        this.events.emit(\"connect_error\", e);\n                        reject(e);\n                    });\n                }\n                catch (error) {\n                    (0, core_1.logDebug)(`signClient: connect:  ${JSON.stringify(error)}`);\n                    reject(error);\n                }\n            }));\n        });\n        this.restoreconnect = (sessionConfig) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.restoreconnect(sessionConfig, (session) => {\n                    if (session) {\n                        resolve(session);\n                    }\n                    else {\n                        reject();\n                    }\n                });\n            });\n        });\n        this.reject = (params) => __awaiter(this, void 0, void 0, function* () {\n        });\n        this.request = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                (0, core_1.logDebug)(\"clint request --params>>>> >\", (_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl, (0, core_1.safeJsonStringify)(params));\n                try {\n                    // this.sessionConfig\n                    if (((_b = this.sessionConfig) === null || _b === void 0 ? void 0 : _b.openUniversalUrl) && (0, core_1.isIos)()) {\n                        this.openOKXWallet();\n                    }\n                    yield this.engine.send(params, {\n                        resolve: (response) => {\n                            delete response.requestId;\n                            (0, core_1.logDebug)(\"clint request --response >\", (0, core_1.safeJsonStringify)(response));\n                            if (('error' in response) && response.error) {\n                                let error = response.error;\n                                reject(new core_1.OKXConnectError(response.error.code, response.method + \":\" + error.message));\n                            }\n                            else {\n                                resolve(response);\n                            }\n                        },\n                        onAck: () => {\n                            var _a;\n                            if (!(0, core_1.isIos)() && ((_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl)) {\n                                this.openOKXWallet();\n                            }\n                        }\n                    });\n                }\n                catch (e) {\n                    (0, core_1.logDebug)(\"clint request --error:\", e);\n                    reject(e);\n                }\n            }));\n        });\n        this.disconnect = () => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.send({\n                    method: \"disconnect\"\n                }, {\n                    onAck: () => {\n                        resolve();\n                    }\n                }, 86400000).catch((error) => {\n                    console.log(`disconnect : ${JSON.stringify(error)}`);\n                    reject(error);\n                });\n            });\n        });\n        this.engine = new core_1.Engine(metaData.name);\n        this.events = events;\n        this.metadata = metaData;\n    }\n    openOKXWallet() {\n        // if (this.openUniversalUrl){\n        (0, core_1.logDebug)('bridge-provider ==>> connect_5');\n        this.engine.openWallet({ tmaReturnUrl: this.sessionConfig.tmaReturnUrl });\n        // if (this.sessionConfig?.useMini){\n        //     let url = getTelegramWalletTWAUrl(undefined,this.sessionConfig.tmaReturnUrl)\n        //     openOKXTMAWalletlinkWithFallback(url)\n        // }else{\n        //     openOKXDeeplink(standardDeeplink);\n        // }\n        // }\n    }\n    syncAllAddress() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.send({\n                    method: \"sync_all_addresses\"\n                }, {\n                    resolve: (response) => {\n                        delete response.requestId;\n                        (0, core_1.logDebug)(\"clint syncAllAddress --response >\", JSON.stringify(response));\n                        if (('error' in response) && response.error) {\n                            let error = response.error;\n                            reject(new core_1.OKXConnectError(response.error.code, response.method + \":\" + error.message));\n                        }\n                        else {\n                            let allAddressStr = response.result;\n                            resolve((0, ConnectMethodUtils_1.syncResoonseToRequire)(allAddressStr));\n                        }\n                    }\n                }).catch((error) => {\n                    console.log(`disconnect : ${JSON.stringify(error)}`);\n                    reject(error);\n                });\n            });\n        });\n    }\n    registerConnector(connectors) {\n        this.engine.registerConnector(connectors);\n    }\n    openWallet(engineConnectInfo, connector) {\n        this.engine.openWallet(engineConnectInfo, connector);\n    }\n    setConnectConnector(wallet) {\n        this.engine.setConnectConnector(wallet);\n    }\n}\nexports.SignClient = SignClient;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.connectSupportMethods = void 0;\nexports.creatNotSupportMethodItemReplay = creatNotSupportMethodItemReplay;\nexports.connectMethodsAdaptOldVersion = connectMethodsAdaptOldVersion;\nexports.connectMethodsResponseUpdate = connectMethodsResponseUpdate;\nexports.connectMethodsToConnectWalletMethods = connectMethodsToConnectWalletMethods;\nexports.syncResoonseToRequire = syncResoonseToRequire;\nconst core_1 = require(\"@okxconnect/core\");\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst uint8array_extras_1 = require(\"uint8array-extras\");\nconst provider_1 = require(\"../../provider\");\nfunction isArray(value) {\n    return typeof value === \"object\" && value !== null && Array.isArray(value);\n}\nfunction isRecord(value) {\n    return typeof value === \"object\" && value !== null && !Array.isArray(value);\n}\n// \"wallet_addEthereumChain\",\n// \"solana_signMessage\",  There are risks\nexports.connectSupportMethods = Object.freeze([\n    \"personal_sign\",\n    \"sui_signMessage\",\n    \"sui_signPersonalMessage\",\n    \"btc_signMessage\",\n    \"aptos_signMessage\",\n    \"cosmos_signArbitrary\",\n    \"tron_signMessage\",\n    \"tron_signMessageV2\",\n    \"starknet_signMessage\",\n    \"sync_all_addresses\"\n]);\nfunction creatNotSupportMethodItemReplay(requestParams) {\n    let notSupportError = new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n    var errorItem = {\n        method: requestParams.method,\n        chainId: requestParams.chainId,\n        error: {\n            code: notSupportError.code,\n            message: notSupportError.message\n        },\n    };\n    return errorItem;\n}\nfunction connectMethodsAdaptOldVersion(requestParams, session) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b, _c, _d, _e;\n        try {\n            (0, core_1.logDebug)(\"connectMethodsAdaptOldVersion start params :\", JSON.stringify(requestParams));\n            let callBackParams = {};\n            if (requestParams.method === \"solana_signMessage\") {\n                let solAccount = (_a = session.namespaces[core_1.NameSpaceKeySOL]) === null || _a === void 0 ? void 0 : _a.accounts.filter(function (account1) {\n                    return account1.startsWith(requestParams.chainId);\n                })[0];\n                const solAddress = (0, provider_1.fromAccountToAddress)(solAccount);\n                if (requestParams.params && solAddress && \"message\" in requestParams.params) {\n                    let realMessage = requestParams.params.message;\n                    if (((_b = session.wallet) === null || _b === void 0 ? void 0 : _b.appName) == \"OKX Wallet\") {\n                        realMessage = bs58_1.default.encode((0, uint8array_extras_1.stringToUint8Array)(realMessage));\n                    }\n                    requestParams.params = {\n                        message: realMessage,\n                        \"pubkey\": solAddress\n                    };\n                    callBackParams = {\n                        publicKey: solAddress\n                    };\n                    (0, core_1.logDebug)(\"solana_signMessage account and address:\", JSON.stringify(solAccount), solAddress);\n                    (0, core_1.logDebug)(\"solana_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"sui_signMessage\" || requestParams.method === \"sui_signPersonalMessage\") {\n                if (\"message\" in requestParams.params && requestParams.params.message) {\n                    let suiMessage = JSON.parse(JSON.stringify(requestParams.params.message));\n                    let convertedArray = Object.values(suiMessage);\n                    let uint8Array = new Uint8Array(convertedArray);\n                    let decoder = new TextDecoder(\"utf8\");\n                    let b64encoded = btoa(decoder.decode(uint8Array));\n                    requestParams.params = {\n                        message: atob(b64encoded),\n                    };\n                    console.log(\"sui_signMessag suiMessagee suiMessageb64:>>>>\", JSON.stringify(requestParams.params), b64encoded);\n                    if (requestParams.method === \"sui_signMessage\") {\n                        callBackParams = {\n                            \"messageBytes\": b64encoded,\n                            \"signature\": \"\"\n                        };\n                    }\n                    else if (requestParams.method === \"sui_signPersonalMessage\") {\n                        callBackParams = {\n                            \"bytes\": b64encoded,\n                            \"signature\": \"\"\n                        };\n                    }\n                    (0, core_1.logDebug)(\"sui_signMessage/sui_signPersonalMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"btc_signMessage\") {\n                let btcAccounts = (_c = session.namespaces[core_1.NameSpaceKeyBtc]) === null || _c === void 0 ? void 0 : _c.accounts.filter(function (account2) {\n                    return account2.startsWith(requestParams.chainId);\n                });\n                let btcAccount = btcAccounts[0];\n                const btcAddress = (0, provider_1.fromAccountToAddress)(btcAccount);\n                (0, core_1.logDebug)(\"btc_signMessage account and address:\", JSON.stringify(btcAccount), btcAddress);\n                if (btcAddress) {\n                    if (\"message\" in requestParams.params && requestParams.params.message && typeof requestParams.params.message === 'string') {\n                        requestParams.params = {\n                            from: btcAddress,\n                            signStr: requestParams.params.message\n                        };\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                    }\n                    requestParams.params[\"from\"] = btcAddress;\n                    (0, core_1.logDebug)(\"btc_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"aptos_signMessage\") {\n                let paramData = requestParams.params;\n                let aptosAccount = (_d = session.namespaces[core_1.NameSpaceKeyAptos]) === null || _d === void 0 ? void 0 : _d.accounts.filter(function (account3) {\n                    return account3.startsWith(requestParams.chainId);\n                })[0];\n                let aptosAddress = (0, provider_1.fromAccountToAddress)(aptosAccount);\n                if (paramData && aptosAddress) {\n                    let prefix = \"APTOS\";\n                    let message = \"\", nonce = \"\";\n                    var fullMessage = prefix;\n                    let application = window.location.protocol + \"//\" + window.location.hostname;\n                    if (\"address\" in paramData && paramData.address) {\n                        fullMessage += \"\\naddress: \" + aptosAddress;\n                    }\n                    if (\"application\" in paramData && paramData.application) {\n                        fullMessage += \"\\napplication: \" + application;\n                    }\n                    let aptosChainId = 1;\n                    if (\"chainId\" in paramData && paramData.chainId) {\n                        if (paramData.chainId == \"aptos:mainnet\") {\n                            aptosChainId = 1;\n                        }\n                        else if (paramData.chainId == \"movement:testnet\") {\n                            aptosChainId = 2;\n                        }\n                        fullMessage += \"\\nchainId: \" + aptosChainId;\n                    }\n                    if (\"message\" in paramData) {\n                        fullMessage += \"\\nmessage: \" + paramData.message;\n                        message = paramData.message;\n                    }\n                    if (\"nonce\" in paramData) {\n                        fullMessage += \"\\nnonce: \" + paramData.nonce;\n                        nonce = paramData.nonce;\n                    }\n                    const utf8Array = new TextEncoder().encode(fullMessage);\n                    const hex = Array.from(utf8Array)\n                        .map(byte => byte.toString(16).padStart(2, \"0\"))\n                        .join(\"\");\n                    requestParams.params = {\n                        \"message\": hex,\n                    };\n                    (0, core_1.logDebug)(\"aptos_signMessage requestParams:\", JSON.stringify(requestParams));\n                    callBackParams = {\n                        address: aptosAddress,\n                        application: application,\n                        chainId: aptosChainId,\n                        fullMessage: fullMessage,\n                        message: message,\n                        nonce: nonce,\n                        prefix: prefix,\n                        signature: \"\",\n                    };\n                    (0, core_1.logDebug)(\"aptos_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"cosmos_signArbitrary\") {\n                let cosmosAccount = (_e = session === null || session === void 0 ? void 0 : session.namespaces[core_1.NameSpaceKeyCosmos]) === null || _e === void 0 ? void 0 : _e.accounts.filter(function (account_cosmos) {\n                    return account_cosmos.startsWith(requestParams.chainId);\n                })[0];\n                const cosmosAddress = (0, provider_1.fromAccountToAddress)(cosmosAccount);\n                let cosmosData = requestParams.params[\"message\"];\n                const cosmosBase64Encoded = (0, uint8array_extras_1.stringToBase64)(cosmosData);\n                (0, core_1.logDebug)(\"cosmos_signArbitrary account and address:\", JSON.stringify(cosmosAccount), cosmosAddress);\n                (0, core_1.logDebug)(\"cosmos_signArbitrary cosmosBase64Encoded:\", cosmosBase64Encoded);\n                if (cosmosData && cosmosAddress) {\n                    const signDoc = {\n                        chain_id: \"\",\n                        account_number: \"0\",\n                        sequence: \"0\",\n                        fee: {\n                            gas: \"0\",\n                            amount: []\n                        },\n                        msgs: [{\n                                \"type\": \"sign/MsgSignData\",\n                                \"value\": {\n                                    \"signer\": cosmosAddress,\n                                    \"data\": cosmosBase64Encoded\n                                }\n                            }],\n                        memo: \"\"\n                    };\n                    requestParams.params = {\n                        \"signer\": cosmosAddress,\n                        \"chain_id\": requestParams.chainId.split(\":\")[1],\n                        \"data\": signDoc\n                    };\n                    (0, core_1.logDebug)(\"cosmos_signArbitrary callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            (0, core_1.logDebug)(\"sol_handleSignatureData end params:\", JSON.stringify(requestParams));\n        }\n        catch (error) {\n            throw error;\n        }\n    });\n}\nfunction connectMethodsResponseUpdate(session, requestParams) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a;\n        try {\n            if (session.signResponse) {\n                (0, core_1.logDebug)(\"connectMethodsResponseUpdate signResponse:\", JSON.stringify(session.signResponse));\n                (0, core_1.logDebug)(\"connectMethodsResponseUpdate session.namespaces:\", JSON.stringify(session.namespaces));\n                for (const methodItem of session.signResponse) {\n                    (0, core_1.logDebug)(\"connectMethodsResponseUpdate methodItem:\", JSON.stringify(methodItem));\n                    if (\"result\" in methodItem) {\n                        if (methodItem.method === \"solana_signMessage\") {\n                            let solanaSuccessData = methodItem.result;\n                            (0, core_1.logDebug)(\"solana_signMessage methodItem.chainId:\", methodItem.chainId);\n                            let account = (_a = session.namespaces[core_1.NameSpaceKeySOL]) === null || _a === void 0 ? void 0 : _a.accounts.filter(function (account) {\n                                (0, core_1.logDebug)(\"solana_signMessage account:\", account);\n                                return account.startsWith(methodItem.chainId);\n                            })[0];\n                            (0, core_1.logDebug)(\"solana_signMessage result account:\", solanaSuccessData, account);\n                            if (solanaSuccessData && account) {\n                                methodItem.result = {\n                                    \"signature\": bs58_1.default.decode(solanaSuccessData),\n                                    \"publicKey\": (0, provider_1.fromAccountToAddress)(account)\n                                };\n                            }\n                        }\n                        else if (methodItem.method === \"sui_signMessage\" || methodItem.method === \"sui_signPersonalMessage\") {\n                            let suiMethod = requestParams.filter(function (requestMethod) {\n                                return requestMethod.method === methodItem.method;\n                            })[0];\n                            if (suiMethod && suiMethod.params && \"message\" in suiMethod.params) {\n                                let suiMessage = suiMethod.params.message;\n                                let suiMessageb64 = btoa(suiMessage);\n                                console.log(\"sui_signMessag suiMessagee suiMessageb64:>>>>\", suiMessage, suiMessageb64);\n                                if (methodItem.method === \"sui_signMessage\") {\n                                    methodItem.result = {\n                                        \"messageBytes\": suiMessageb64,\n                                        \"signature\": methodItem.result\n                                    };\n                                }\n                                else if (methodItem.method === \"sui_signPersonalMessage\") {\n                                    methodItem.result = {\n                                        \"bytes\": suiMessageb64,\n                                        \"signature\": methodItem.result\n                                    };\n                                }\n                            }\n                        }\n                        else if (methodItem.method === \"aptos_signMessage\") {\n                            if (methodItem.chainId === \"aptos:637\") {\n                                methodItem.chainId = \"aptos:mainnet\";\n                            }\n                            else if (methodItem.chainId === \"aptos:70000060\") {\n                                methodItem.chainId = \"movement:testnet\";\n                            }\n                            methodItem.result = JSON.parse(methodItem.result);\n                            console.log(\"aptos_signMessage result methodItem.result before:>>>>\", JSON.stringify(methodItem.result));\n                            if (methodItem.result && \"signature\" in methodItem.result) {\n                                let aptosSignature = methodItem.result.signature;\n                                if (aptosSignature && aptosSignature.startsWith(\"0x\")) {\n                                    aptosSignature = aptosSignature.slice(2, aptosSignature.length);\n                                    methodItem.result.signature = aptosSignature;\n                                }\n                            }\n                            console.log(\"aptos_signMessage result methodItem.result after:>>>>\", JSON.stringify(methodItem.result));\n                        }\n                        else if (methodItem.method === \"cosmos_signArbitrary\") {\n                            methodItem.result = JSON.parse(methodItem.result);\n                        }\n                        else if (methodItem.method == 'starknet_signMessage') {\n                            let results = methodItem.result;\n                            if (typeof results == 'string') {\n                                results = JSON.parse(results);\n                            }\n                            methodItem.result = [results[\"signedDataR\"], results[\"signedDataS\"]];\n                        }\n                        else if (methodItem.method == 'sync_all_addresses') {\n                            methodItem.result = syncResoonseToRequire(methodItem.result);\n                        }\n                    }\n                }\n            }\n        }\n        catch (error) {\n            (0, core_1.logDebug)(\"connectMethodsResponseUpdate signResponse Error:\", JSON.stringify(error));\n            throw error;\n        }\n    });\n}\nfunction connectMethodsToConnectWalletMethods(params, requireNameSpace) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            (0, core_1.logDebug)(\"connectMethodsToConnectWalletMethods requestMethods:\", JSON.stringify(params));\n            const result = [];\n            //TODO  后面需要打开限制\n            if (params && params.length > 1) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connectAndSign/openModalAndSign signRequest only support one data`);\n            }\n            if (!requireNameSpace && params && params.length > 0) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error , RequestMethods cannot be added when the NameSpace is empty`);\n            }\n            // check chianId\n            for (const methodItem of params) {\n                if (methodItem.method === \"aptos_signMessage\") { //update chainId\n                    if (methodItem.chainId === \"aptos:mainnet\") {\n                        methodItem.chainId = \"aptos:637\";\n                    }\n                    else if (methodItem.chainId === \"movement:testnet\") {\n                        methodItem.chainId = \"aptos:70000060\";\n                    }\n                }\n                // check chianId\n                if (methodItem.method === \"wallet_addEthereumChain\") {\n                    var includeEip155 = requireNameSpace === null || requireNameSpace === void 0 ? void 0 : requireNameSpace.some(space => space.namespace.includes(\"eip155\"));\n                    if (!includeEip155) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error, When using '${methodItem.method}', the EVM chain needs to be included in the NameSpace`);\n                    }\n                }\n                else if (methodItem.method === \"sync_all_addresses\") {\n                    if ((0, provider_1.syncAddressHostAvailable)()) {\n                        methodItem.chainId = \"\";\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                    }\n                }\n                else {\n                    const includeChain = !!(requireNameSpace === null || requireNameSpace === void 0 ? void 0 : requireNameSpace.some(space => space.chains.some(chain => chain.includes(`${methodItem.chainId}`))));\n                    if (!includeChain) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error, When using '${methodItem.method}', NameSpace must contain '${methodItem.chainId}'`);\n                    }\n                }\n            }\n            for (const item of params) {\n                if (!exports.connectSupportMethods.includes(item.method)) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect requestMethods not support method, method: '${item.method}'`);\n                }\n                if (item.method === \"wallet_addEthereumChain\") {\n                    if (Array.isArray(item.params)) {\n                        const paramsArr = item.params;\n                        if (paramsArr && paramsArr.length === 1) {\n                            const firstParam = paramsArr[0];\n                            if (isRecord(firstParam)) {\n                                item.params = firstParam;\n                            }\n                        }\n                        else if (paramsArr && paramsArr.length > 1) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params only support one data, method: '${item.method}'`);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is nil, method: '${item.method}'`);\n                        }\n                    }\n                }\n                else if (item.method === \"personal_sign\") {\n                    if (isArray(item.params)) {\n                        if (item.params && item.params.length !== 1) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params error,  method: '${item.method}' `);\n                        }\n                        let firstObj = item.params[0];\n                        if (firstObj && typeof firstObj === 'string') {\n                            item.params = {\n                                message: firstObj\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                }\n                else if (item.method === \"sui_signMessage\" || item.method === \"sui_signPersonalMessage\") {\n                    if (isRecord(item.params) && 'message' in item.params) {\n                        if (item.params.message) {\n                            (0, core_1.logDebug)(\"sui_signMessage item.params.message :\", item.params.message);\n                            let message = JSON.parse(JSON.stringify(item.params.message));\n                            let convertedArray = Object.values(message);\n                            let uint8Array = new Uint8Array(convertedArray);\n                            let decoder = new TextDecoder(\"utf8\");\n                            let b64encoded = btoa(decoder.decode(uint8Array));\n                            item.params.message = atob(b64encoded);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"solana_signMessage\") {\n                    if (isRecord(item.params) && 'message' in item.params) {\n                        if (item.params.message && typeof item.params.message === 'string') {\n                            item.params[\"bs58Message\"] = bs58_1.default.encode((0, uint8array_extras_1.stringToUint8Array)(item.params.message));\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"aptos_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (item.chainId && (item.chainId === \"aptos:637\" || item.chainId === \"aptos:70000060\")) {\n                            var aptosParams = item.params;\n                            var currentURL = window.location.protocol + \"//\" + window.location.hostname;\n                            let signChainId = 1;\n                            if (item.chainId === \"aptos:637\") {\n                            }\n                            else if (item.chainId === \"aptos:70000060\") {\n                                signChainId = 2;\n                            }\n                            item.params = {\n                                data: aptosParams,\n                                applicationUrl: currentURL,\n                                prefix: \"APTOS\",\n                                aptosChainId: signChainId\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params chainId is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"cosmos_signArbitrary\") {\n                    if (isRecord(item.params)) {\n                        if (item.params.message && typeof item.params.message === 'string') {\n                            const base64Encoded = (0, uint8array_extras_1.stringToBase64)(item.params.message);\n                            let cosmosChain = item.chainId.split(\":\")[1];\n                            if (cosmosChain) {\n                                item.params = {\n                                    chain_id: cosmosChain,\n                                    data: {\n                                        chain_id: \"\",\n                                        account_number: \"0\",\n                                        sequence: \"0\",\n                                        fee: {\n                                            gas: \"0\",\n                                            amount: []\n                                        },\n                                        msgs: [{\n                                                \"type\": \"sign/MsgSignData\",\n                                                \"value\": {\n                                                    \"signer\": \"\", //address\n                                                    \"data\": base64Encoded\n                                                }\n                                            }],\n                                        memo: \"\"\n                                    }\n                                };\n                            }\n                            else {\n                                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params chainId is error,  method: '${item.method}' `);\n                            }\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params message is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method == \"tron_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (\"message\" in item.params && item.params.message && typeof item.params.message === 'string') {\n                            item.params.message = stringToHex(item.params.message);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method == \"btc_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (\"message\" in item.params && item.params.message && typeof item.params.message === 'string') {\n                            item.params = {\n                                signStr: item.params.message\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                (0, core_1.logDebug)(\"connectMethodsToConnectWalletMethods item:\", JSON.stringify(item));\n                result.push(item);\n            }\n            return result;\n        }\n        catch (error) {\n            throw error;\n        }\n    });\n}\nfunction stringToHex(str) {\n    let hex = '';\n    for (let i = 0; i < str.length; i++) {\n        hex += str.charCodeAt(i).toString(16).padStart(2, '0');\n    }\n    return hex;\n}\nfunction syncResoonseToRequire(responseAddressStr) {\n    const allAddress = JSON.parse(responseAddressStr);\n    const result = {\n        type: allAddress.type,\n        isEvm: allAddress.isEvm,\n        walletName: allAddress.walletName,\n        deriveName: allAddress.deriveName,\n        addresses: allAddress.addresses.map((addr) => ({\n            coinId: addr.ci,\n            address: addr.a && addr.a !== 'null' ? addr.a : allAddress.evmAddress,\n        })),\n    };\n    return result;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.creatNotSupportMethodItemReplay = exports.connectMethodsAdaptOldVersion = void 0;\nvar ConnectMethodUtils_1 = require(\"./ConnectMethodUtils\");\nObject.defineProperty(exports, \"connectMethodsAdaptOldVersion\", { enumerable: true, get: function () { return ConnectMethodUtils_1.connectMethodsAdaptOldVersion; } });\nObject.defineProperty(exports, \"creatNotSupportMethodItemReplay\", { enumerable: true, get: function () { return ConnectMethodUtils_1.creatNotSupportMethodItemReplay; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAccountsChains = getAccountsChains;\nexports.nameSpaceToConnectWalletNameSpace = nameSpaceToConnectWalletNameSpace;\nexports.fillParamsToSession = fillParamsToSession;\nexports.isCaipNamespace = isCaipNamespace;\nexports.parseNamespaceKey = parseNamespaceKey;\nconst core_1 = require(\"@okxconnect/core\");\nfunction getAccountsChains(accounts) {\n    const chains = [];\n    accounts.forEach((account) => {\n        const [chain, chainId] = account.split(\":\");\n        chains.push(`${chain}:${chainId}`);\n    });\n    return chains;\n}\nfunction nameSpaceToConnectWalletNameSpace(namespaces) {\n    var result = [];\n    if (!namespaces) {\n        return result;\n    }\n    Object.keys(namespaces).forEach((key) => {\n        if (key === core_1.NameSpaceKeyEip155 || key === core_1.NameSpaceKeySOL || key === core_1.NameSpaceKeySui || key === core_1.NameSpaceKeyAptos\n            || key == core_1.NameSpaceKeyBtc || key === core_1.NameSpaceKeyTON || key === core_1.NameSpaceKeyCosmos || key === core_1.NameSpaceKeyTron || key === core_1.NameSpaceKeyStarknet) {\n            if (namespaces[key].chains) {\n                result.push({\n                    namespace: key,\n                    chains: namespaces[key].chains,\n                    params: namespaces[key].params\n                });\n            }\n        }\n    });\n    return result;\n}\nfunction fillParamsToSession(session, namespaces, optionalNamespaces, sessionConfig) {\n    // Helper function to merge rpcMaps\n    const mergeRpcMap = (targetRpcMap, sourceRpcMap) => {\n        Object.assign(targetRpcMap, sourceRpcMap);\n    };\n    // Merge function for namespaces\n    const mergeNamespaces = (target, source) => {\n        for (const key in source) {\n            if (source.hasOwnProperty(key) && source[key].rpcMap) {\n                if (source[key].rpcMap) {\n                    if (!target[key].rpcMap) {\n                        target[key].rpcMap = {};\n                    }\n                    // 合并 rpcMap\n                    mergeRpcMap(target[key].rpcMap, source[key].rpcMap);\n                }\n                if (source[key].defaultChain && target[key].defaultChain === undefined) {\n                    //defaultChain need in session nameSpace\n                    if (target[key].chains.some(chain => chain.split(\":\")[1] === source[key].defaultChain)) {\n                        target[key].defaultChain = source[key].defaultChain;\n                    }\n                }\n            }\n        }\n    };\n    // 合并 namespaces\n    if (namespaces) {\n        mergeNamespaces(session.namespaces, namespaces);\n    }\n    // 合并 optionalNamespaces\n    if (optionalNamespaces) {\n        mergeNamespaces(session.namespaces, optionalNamespaces);\n    }\n    for (const key in session.namespaces) {\n        const namespace = session.namespaces[key];\n        if (!(namespace === null || namespace === void 0 ? void 0 : namespace.accounts) || namespace.accounts.length === 0) {\n            delete session.namespaces[key];\n        }\n    }\n    if (session.namespaces[core_1.NameSpaceKeyBtc] && session.wallet.appName === core_1.OKXWalletName) {\n        fixMobileBtcSession(session.namespaces[core_1.NameSpaceKeyBtc]);\n    }\n    session.sessionConfig = sessionConfig;\n}\nfunction fixMobileBtcSession(btcNameSpace) {\n    try {\n        if (btcNameSpace && btcNameSpace.extra) {\n            var data = btcNameSpace.extra;\n            Object.keys(data).forEach(key => {\n                const item = data[key];\n                if (Number(item.addressType) === 6) {\n                    item.publicKey = item.compressedPublicKey.slice(2);\n                }\n                else {\n                    item.publicKey = item.compressedPublicKey;\n                }\n            });\n        }\n    }\n    catch (e) {\n        (0, core_1.logDebug)(\"namespaces fixMobileBtcSession error\");\n    }\n}\n/**\n * util designed for Wallets that builds namespaces structure by provided supported chains, methods, events & accounts.\n * It takes required & optional namespaces provided in the session proposal\n * along with the supported chains/methods/events/accounts by the wallet and returns a structured namespaces object\n * @param {BuildApprovedNamespacesParams} params\n * @returns {SessionTypes.Namespaces}\n */\n// export function buildApprovedNamespaces(\n//   params: BuildApprovedNamespacesParams,\n// ): SessionTypes.Namespaces {\n//   const {\n//     proposal: { requiredNamespaces, optionalNamespaces = {} },\n//     supportedNamespaces,\n//   } = params;\n//   const normalizedRequired = normalizeNamespaces(requiredNamespaces);\n//   const normalizedOptional = normalizeNamespaces(optionalNamespaces);\n//\n//   // build approved namespaces\n//   const namespaces = {};\n//   Object.keys(supportedNamespaces).forEach((namespace) => {\n//     const supportedChains = supportedNamespaces[namespace].chains;\n//     const supportedMethods = supportedNamespaces[namespace].methods;\n//     const supportedEvents = supportedNamespaces[namespace].events;\n//     const supportedAccounts = supportedNamespaces[namespace].accounts;\n//\n//     supportedChains.forEach((chain) => {\n//       if (!supportedAccounts.some((account) => account.includes(chain))) {\n//         throw new Error(`No accounts provided for chain ${chain} in namespace ${namespace}`);\n//       }\n//     });\n//\n//     namespaces[namespace] = {\n//       chains: supportedChains,\n//       methods: supportedMethods,\n//       events: supportedEvents,\n//       accounts: supportedAccounts,\n//     };\n//   });\n//\n//   // verify all required namespaces are supported\n//   const err = isConformingNamespaces(requiredNamespaces, namespaces, \"approve()\");\n//   if (err) throw new Error(err.message);\n//\n//   const approvedNamespaces = {};\n//\n//   // if both required & optional namespaces are empty, return all supported namespaces by the wallet\n//   if (!Object.keys(requiredNamespaces).length && !Object.keys(optionalNamespaces).length)\n//     return namespaces;\n//\n//   // assign accounts for the required namespaces\n//   Object.keys(normalizedRequired).forEach((requiredNamespace) => {\n//     const chains = supportedNamespaces[requiredNamespace].chains.filter((chain) =>\n//       normalizedRequired[requiredNamespace]?.chains?.includes(chain),\n//     );\n//     const methods = supportedNamespaces[requiredNamespace].methods.filter((method) =>\n//       normalizedRequired[requiredNamespace]?.methods?.includes(method),\n//     );\n//     const events = supportedNamespaces[requiredNamespace].events.filter((event) =>\n//       normalizedRequired[requiredNamespace]?.events?.includes(event),\n//     );\n//\n//     const accounts = chains\n//       .map((chain: string) =>\n//         supportedNamespaces[requiredNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[requiredNamespace] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   });\n//\n//   // add optional namespaces\n//   Object.keys(normalizedOptional).forEach((optionalNamespace) => {\n//     if (!supportedNamespaces[optionalNamespace]) return;\n//\n//     const chainsToAdd = normalizedOptional[optionalNamespace]?.chains?.filter((chain) =>\n//       supportedNamespaces[optionalNamespace].chains.includes(chain),\n//     );\n//     const methodsToAdd = supportedNamespaces[optionalNamespace].methods.filter((method) =>\n//       normalizedOptional[optionalNamespace]?.methods?.includes(method),\n//     );\n//     const eventsToAdd = supportedNamespaces[optionalNamespace].events.filter((event) =>\n//       normalizedOptional[optionalNamespace]?.events?.includes(event),\n//     );\n//\n//     const accountsToAdd = chainsToAdd\n//       ?.map((chain: string) =>\n//         supportedNamespaces[optionalNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[optionalNamespace] = {\n//       chains: mergeArrays(approvedNamespaces[optionalNamespace]?.chains, chainsToAdd),\n//       methods: mergeArrays(approvedNamespaces[optionalNamespace]?.methods, methodsToAdd),\n//       events: mergeArrays(approvedNamespaces[optionalNamespace]?.events, eventsToAdd),\n//       accounts: mergeArrays(approvedNamespaces[optionalNamespace]?.accounts, accountsToAdd),\n//     };\n//   });\n//\n//   return approvedNamespaces;\n// }\nfunction isCaipNamespace(namespace) {\n    return namespace.includes(\":\");\n}\nfunction parseNamespaceKey(namespace) {\n    return isCaipNamespace(namespace) ? namespace.split(\":\")[0] : namespace;\n}\n/**\n * Converts\n * ```\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * ```\n * into\n * ```\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *```\n */\n// export function normalizeNamespaces(\n//   namespaces: ProposalTypes.RequiredNamespaces,\n// ): ProposalTypes.RequiredNamespaces {\n//   const normalizedNamespaces = {} as ProposalTypes.RequiredNamespaces;\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       methods: mergeArrays(methods, normalizedNamespaces[normalizedKey]?.methods),\n//       events: mergeArrays(events, normalizedNamespaces[normalizedKey]?.events),\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n// export function getNamespacesFromAccounts(accounts: string[]) {\n//   const namespaces = {};\n//   accounts?.forEach((account) => {\n//     const [namespace, chainId] = account.split(\":\");\n//     if (!namespaces[namespace]) {\n//       namespaces[namespace] = {\n//         accounts: [],\n//         chains: [],\n//         events: [],\n//       };\n//     }\n//     namespaces[namespace].accounts.push(account);\n//     namespaces[namespace].chains.push(`${namespace}:${chainId}`);\n//   });\n//\n//   return namespaces;\n// }\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PROVIDER_EVENTS = void 0;\nexports.PROVIDER_EVENTS = {\n    DEFAULT_CHAIN_CHANGED: \"default_chain_changed\",\n    UPDATE_NAMESPACES: \"update_name_spaces\",\n    SESSION_CONNECTING: \"session_connecting\"\n};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./values\"), exports);\n__exportStar(require(\"./events\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GENERIC_SUBPROVIDER_NAME = exports.RPC_URL = exports.STORAGE = exports.CONTEXT = exports.WC_VERSION = exports.PROTOCOL = exports.RELAY_URL = exports.LOGGER = void 0;\nexports.LOGGER = \"error\";\nexports.RELAY_URL = \"wss://relay.walletconnect.com\";\nexports.PROTOCOL = \"wc\";\nexports.WC_VERSION = 2;\nexports.CONTEXT = \"universal_provider\";\nexports.STORAGE = `${exports.PROTOCOL}@${exports.WC_VERSION}:${exports.CONTEXT}:`;\nexports.RPC_URL = \"https://rpc.walletconnect.com/v1/\";\nexports.GENERIC_SUBPROVIDER_NAME = \"generic\";\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./types\"), exports);\n__exportStar(require(\"./utils\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass AptosProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"aptos\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"aptos request --args--string>\", (0, core_1.safeJsonStringify)(args));\n            (0, core_1.logDebug)(\"aptos provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = AptosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass BtcProvider {\n    constructor(opts, name, client, events) {\n        this.name = core_1.NameSpaceKeyBtc;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"btc request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"btc provider namespace: \", JSON.stringify(this.namespace));\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = BtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass CosmosProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyCosmos;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"cosmos request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"cosmos provider namespace: \", JSON.stringify(this.namespace));\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = CosmosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Eip155Provider = void 0;\nconst utils_1 = require(\"../utils\");\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nclass Eip155Provider {\n    constructor(opts, client, events) {\n        this.name = \"eip155\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = parseInt(this.getDefaultChain());\n        // rpc\n        this.httpProviders = this.createHttpProviders();\n        (0, core_1.logDebug)(\"eip155 constructor --opts.namespace-->\", opts.namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    isArray(value) {\n        return typeof value === \"object\" && value !== null && Array.isArray(value);\n    }\n    updateRequestParams(args) {\n        let isDic = args.params && typeof args.params === 'object' && !Array.isArray(args.params);\n        if (args.method === 'wallet_switchEthereumChain') {\n            const switchChainId = args.chainId.split(\":\")[1];\n            // const hexChainId = parseInt(switchChainId, 16);\n            const decimalNumber = parseInt(switchChainId, 10);\n            if (isNaN(decimalNumber)) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid decimal number,  chainId: '${switchChainId}' `);\n            }\n            if (!args.params) {\n                args.params = { chainId: '0x' + decimalNumber.toString(16) };\n            }\n            else if (isDic) { //为 Record<string, unknown>\n                let params = args.params;\n                if (!('chainId' in params)) {\n                    params['chainId'] = '0x' + decimalNumber.toString(16);\n                    args.params = params;\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params error ,  method: '${args.method}' `);\n            }\n        }\n        else if (args.method === 'personal_sign'\n            || args.method === 'eth_signTypedData_v4'\n            || args.method === 'eth_sendTransaction'\n            || args.method === 'wallet_watchAsset') {\n            if (!args.params) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params is nil, method: '${args.method}'`);\n            }\n            if (this.isRecord(args.params)) {\n                let params = args.params;\n                (0, core_1.logDebug)(\"eip155 updateRequestParams params>\", JSON.stringify(params));\n                if ('chainId' in params) {\n                    const selectedChainId = args.chainId.split(\":\")[1];\n                    const chainNum = parseInt(selectedChainId, 10);\n                    let paramsChainString = String(params.chainId);\n                    let paramsChainId;\n                    if (paramsChainString.startsWith(this.name) && args.chainId === paramsChainString) { //为\n                        paramsChainId = chainNum;\n                    }\n                    else if (paramsChainString.startsWith(\"0x\")) {\n                        paramsChainId = parseInt(paramsChainString, 16);\n                    }\n                    else if (!isNaN(Number(paramsChainString))) { //数字\n                        paramsChainId = parseInt(paramsChainString, 10);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid params.chainId format, method: '${args.method}'`);\n                    }\n                    if (chainNum !== paramsChainId) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params.chainId not equal chain,  method: '${args.method}' `);\n                    }\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid request params type, method: '${args.method}'`);\n            }\n        }\n    }\n    //adapt array\n    adaptArray(args) {\n        if (args.method === 'wallet_switchEthereumChain'\n            || args.method === 'wallet_addEthereumChain'\n            || args.method === 'wallet_watchAsset'\n            || args.method === 'eth_sendTransaction') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr) {\n                    if (paramsArr.length === 1) {\n                        let firstParam = args.params[0];\n                        if (this.isRecord(firstParam)) {\n                            args.params = firstParam;\n                        }\n                    }\n                    else if (paramsArr.length > 1) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                    }\n                }\n            }\n        }\n        else if (args.method === 'eth_signTypedData_v4') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr && paramsArr.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                }\n                else if (paramsArr && paramsArr.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let messageObj = {};\n                if (paramsArr && paramsArr.length === 2) {\n                    let addressObj = args.params[0]; //address\n                    if (addressObj && typeof addressObj === 'string') { //check address\n                        let isEqual = false;\n                        this.namespace.accounts.forEach((account) => {\n                            let chainAddress = (0, utils_1.fromAccountToAddress)(account);\n                            if (chainAddress.toLowerCase() === addressObj.toLowerCase()) {\n                                isEqual = true;\n                            }\n                        });\n                        (0, core_1.logDebug)(\"eip155 adaptArray eth_signTypedData_v4 >>>isEqual: \", isEqual);\n                        if (!isEqual) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error, not equal,  method: '${args.method}' `);\n                        }\n                        if (this.isRecord(args.params[1])) {\n                            messageObj = args.params[1];\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error , not string,  method: '${args.method}' `);\n                    }\n                }\n                else if (paramsArr && paramsArr.length === 1) {\n                    if (this.isRecord(args.params[0])) {\n                        messageObj = args.params[0];\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                    }\n                }\n                try {\n                    let messages = JSON.stringify(messageObj);\n                    args.params = {\n                        typedDataJson: messages\n                    };\n                }\n                catch (err) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params call JSON.stringify() failed,  method: '${args.method}' `);\n                }\n            }\n        }\n        else if (args.method === 'personal_sign') {\n            if (this.isArray(args.params)) {\n                if (args.params && args.params.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params error,  method: '${args.method}' `);\n                }\n                else if (args.params && args.params.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let firstObj = args.params[0];\n                let secondObj = args.params[1];\n                if (secondObj && typeof secondObj === 'string') { //check address\n                    let isEqual = false;\n                    this.namespace.accounts.forEach((account) => {\n                        let chainAddress = (0, utils_1.fromAccountToAddress)(account);\n                        if (chainAddress.toLowerCase() === secondObj.toLowerCase()) {\n                            isEqual = true;\n                        }\n                    });\n                    (0, core_1.logDebug)(\"eip155 adaptArray personal_sign >>>isEqual: \", isEqual);\n                    if (!isEqual) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error,  method: '${args.method}' `);\n                    }\n                }\n                if (firstObj && typeof firstObj === 'string') {\n                    args.params = {\n                        message: firstObj\n                    };\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is error,  method: '${args.method}' `);\n                }\n            }\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"eth_requestAccounts\":\n            case \"eth_accounts\":\n            case \"eth_chainId\":\n                return false;\n            case \"eth_sendTransaction\":\n            case \"eth_signTransaction\":\n            case \"eth_sign\":\n            case \"personal_sign\":\n            case \"eth_signTypedData\":\n            case \"wallet_addEthereumChain\":\n            case \"wallet_watchAsset\":\n            case \"eth_signTypedData_v4\":\n                return true;\n            case \"wallet_switchEthereumChain\": {\n                this.adaptArray(args);\n                this.updateRequestParams(args);\n                const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n                return !this.isChainApproved(parsedChainId);\n            }\n            default:\n                return false;\n        }\n        return false;\n    }\n    configAddressAdaptInjectWallet(args) {\n        this.namespace.accounts.forEach((account) => {\n            if (account.includes(args.chainId)) {\n                args.address = (0, utils_1.fromAccountToAddress)(account);\n            }\n        });\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.adaptArray(args);\n            (0, core_1.logDebug)(\"eip155 request --args--string>\", JSON.stringify(args));\n            this.updateRequestParams(args);\n            (0, core_1.logDebug)(\"eip155 request --params--string>\", JSON.stringify(args));\n            this.configAddressAdaptInjectWallet(args);\n            switch (args.method) {\n                case \"eth_requestAccounts\":\n                    return this.getAccounts();\n                case \"eth_accounts\":\n                    return this.getAccounts();\n                case \"eth_chainId\":\n                    return parseInt(this.getDefaultChain());\n                case \"wallet_switchEthereumChain\": {\n                    return (yield this.handleSwitchChain(args));\n                }\n                case \"wallet_addEthereumChain\":\n                    return this.addEthereumChain(args);\n                default:\n                    break;\n            }\n            if (this.namespace.methods.includes(args.method)) {\n                // personal_sign\n                // eth_signTypedData_v4\n                // eth_sendTransaction\n                // wallet_watchAsset\n                try {\n                    const response = yield this.client.request(args);\n                    (0, core_1.logDebug)(\"eip155 request --response----string>\", JSON.stringify(response));\n                    if (this.isRecord(response)) {\n                        if ('result' in response) {\n                            let result = response.result;\n                            if (result && typeof result === 'string' && (result === \"true\" || result === \"false\")) {\n                                (0, core_1.logDebug)(\"eip155 request --wallet_watchAsset>>>>\", result === \"true\");\n                                return (result === \"true\");\n                            }\n                            return response.result;\n                        }\n                    }\n                    return response;\n                }\n                catch (e) {\n                    (0, core_1.logDebug)(`eip155 request --response --error--string> e instanceof OKXConnectError ${e instanceof core_1.OKXConnectError}`, JSON.stringify(e));\n                    throw e;\n                }\n            }\n            else {\n                (0, core_1.logDebug)('[RPC] request begin');\n                return yield this.getHttpProvider().request(args);\n            }\n        });\n    }\n    addEthereumChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let resultData = (yield this.client.request(args));\n            try {\n                if ('result' in resultData) {\n                    let successData = resultData;\n                    let account = resultData.result;\n                    if (account) {\n                        const nameSpace = account.split(\":\")[0];\n                        const chainId = account.split(\":\")[1];\n                        const chain = nameSpace + ':' + chainId;\n                        let newNameSpace = this.namespace;\n                        this.namespace.accounts.push(account);\n                        this.namespace.chains.push(chain);\n                        if (this.isRecord(args.params)) {\n                            if (\"rpcUrls\" in args.params) {\n                                let rpcUrls = args.params.rpcUrls;\n                                let rpcUrl = rpcUrls ? rpcUrls[0] : undefined;\n                                if (rpcUrl) {\n                                    if (this.namespace.rpcMap) {\n                                        this.namespace.rpcMap[chainId] = rpcUrl;\n                                    }\n                                    else {\n                                        this.namespace.rpcMap = {\n                                            [chainId]: rpcUrl\n                                        };\n                                    }\n                                    this.setHttpProvider(chainId, rpcUrl);\n                                }\n                            }\n                        }\n                        this.events.emit(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, {\n                            eip155: this.namespace\n                        });\n                    }\n                }\n                else {\n                    new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request error`);\n                }\n            }\n            catch (error) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request  error`);\n            }\n            return null;\n        });\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        this.chainId = parseInt(chainId);\n        // set rpc\n        if (!this.httpProviders[chainId]) {\n            const rpc = rpcUrl || (0, utils_1.getRpcUrl)(`${this.name}:${chainId}`, this.namespace);\n            if (!rpc) {\n                // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n                (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            }\n            else {\n                this.setHttpProvider(chainId, rpc);\n            }\n        }\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId.toString();\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // ---------- Private ----------------------------------------------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"eip155 getAccounts \", accounts, this.chainId);\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => {\n                return (0, utils_1.fromAccountToAddress)(account);\n            })),\n        ];\n    }\n    getHexChainIdFromRequest(args) {\n        let params = args.params;\n        let hexChainId = \"0x0\";\n        if (params && \"chainId\" in params) {\n            hexChainId = params.chainId;\n        }\n        hexChainId = hexChainId.startsWith(\"0x\") ? hexChainId : `0x${hexChainId}`;\n        (0, core_1.logDebug)(\"handleSwitchChain -->args \", args);\n        (0, core_1.logDebug)(\"handleSwitchChain -->hexChainId \", hexChainId);\n        const parsedChainId = parseInt(hexChainId, 16);\n        (0, core_1.logDebug)(\"handleSwitchChain -->parsedChainId \", parsedChainId);\n        return { parsedChainId, hexChainId };\n    }\n    handleSwitchChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n            if (this.isChainApproved(parsedChainId)) {\n                this.setDefaultChain(`${parsedChainId}`);\n            }\n            else {\n                try {\n                    const resultData = (yield this.client.request(Object.assign(Object.assign({}, args), { params: {\n                            chainId: hexChainId,\n                        } })));\n                    if ('result' in resultData) {\n                        let successData = resultData;\n                        let account = resultData.result;\n                        if (account) {\n                            const nameSpace = account.split(\":\")[0];\n                            const chainId = account.split(\":\")[1];\n                            const chain = nameSpace + ':' + chainId;\n                            let newNameSpace = this.namespace;\n                            this.namespace.accounts.push(account);\n                            this.namespace.chains.push(chain);\n                            (0, core_1.logDebug)(\"handleSwitchChain -->wallet_switchEthereumChain \", resultData);\n                            this.setDefaultChain(`${parsedChainId}`);\n                            this.events.emit(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, {\n                                eip155: this.namespace\n                            });\n                        }\n                    }\n                    else {\n                        new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request error`);\n                    }\n                }\n                catch (error) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request  error`);\n                }\n            }\n            return null;\n        });\n    }\n    isChainApproved(chainId) {\n        return this.namespace.chains.includes(`${this.name}:${chainId}`);\n    }\n    // rpc\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            //   throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            (0, core_1.logDebug)('get parsed chain and rpc:', parsedChainId, parsedRpc);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        (0, core_1.logDebug)('get http providermap:', http);\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n}\nexports.Eip155Provider = Eip155Provider;\nexports.default = Eip155Provider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcConnection = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nconst DEFAULT_HTTP_HEADERS = {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n};\nconst DEFAULT_HTTP_METHOD = \"POST\";\nconst DEFAULT_FETCH_OPTS = {\n    headers: DEFAULT_HTTP_HEADERS,\n    method: DEFAULT_HTTP_METHOD,\n};\n// Source: https://nodejs.org/api/events.html#emittersetmaxlistenersn\nconst EVENT_EMITTER_MAX_LISTENERS_DEFAULT = 10;\nclass JsonRpcConnection {\n    constructor(url, disableProviderPing = false) {\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n        this.events = new eventemitter3_1.EventEmitter();\n        this.isAvailable = false;\n        this.registering = false;\n        if (!(0, core_2.isHttpUrl)(url)) {\n            throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n        }\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n    }\n    get connected() {\n        return this.isAvailable;\n    }\n    get connecting() {\n        return this.registering;\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            yield this.register(url);\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                throw new Error(\"Connection already closed\");\n            }\n            this.onClose();\n        });\n    }\n    send(payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                yield this.register();\n            }\n            try {\n                const body = (0, core_1.safeJsonStringify)(payload);\n                const res = yield (0, cross_fetch_1.default)(this.url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                const data = yield res.json();\n                this.onPayload({ data });\n            }\n            catch (e) {\n                this.onError(payload.id, e);\n            }\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    register() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            if (!(0, core_2.isHttpUrl)(url)) {\n                throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n            }\n            if (this.registering) {\n                return new Promise((resolve, reject) => {\n                    this.events.once(\"register_error\", (error) => {\n                        reject(error);\n                    });\n                    this.events.once(\"open\", () => {\n                        if (typeof this.isAvailable === \"undefined\") {\n                            return reject(new Error(\"HTTP connection is missing or invalid\"));\n                        }\n                        resolve();\n                    });\n                });\n            }\n            this.url = url;\n            this.registering = true;\n            try {\n                if (!this.disableProviderPing) {\n                    const body = (0, core_1.safeJsonStringify)({ id: 1, jsonrpc: \"2.0\", method: \"test\", params: [] });\n                    yield (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                }\n                this.onOpen();\n            }\n            catch (e) {\n                const error = this.parseError(e);\n                this.events.emit(\"register_error\", error);\n                this.onClose();\n                throw error;\n            }\n        });\n    }\n    onOpen() {\n        this.isAvailable = true;\n        this.registering = false;\n        this.events.emit(\"open\");\n    }\n    onClose() {\n        this.isAvailable = false;\n        this.registering = false;\n        this.events.emit(\"close\");\n    }\n    onPayload(e) {\n        if (typeof e.data === \"undefined\")\n            return;\n        const payload = typeof e.data === \"string\" ? (0, core_1.safeJsonParse)(e.data) : e.data;\n        this.events.emit(\"payload\", payload);\n    }\n    onError(id, e) {\n        const error = this.parseError(e);\n        const message = error.message || error.toString();\n        const payload = (0, core_2.formatJsonRpcError)(id, message);\n        this.events.emit(\"payload\", payload);\n    }\n    parseError(e, url = this.url) {\n        return (0, core_2.parseConnectionError)(e, url, \"HTTP\");\n    }\n}\nexports.JsonRpcConnection = JsonRpcConnection;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcProvider = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst types_1 = require(\"../../types\");\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nclass JsonRpcProvider extends types_1.IJSONRpcProvider {\n    constructor(connection) {\n        super(connection);\n        this.events = new eventemitter3_1.EventEmitter();\n        this.connected = false;\n        this.connecting = false;\n        this.hasRegisteredEventListeners = false;\n        this.connection = this.setConnection(connection);\n        if (this.connection.connected) {\n            this.registerEventListeners();\n        }\n    }\n    connect() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            yield this.open(connection);\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.close();\n        });\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    request(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.requestStrict((0, core_1.formatJsonRpcRequest)(request.method, request.params || [], (0, core_1.getBigIntRpcId)().toString()), // casting to any is required in order to use BigInt as rpcId\n            context);\n        });\n    }\n    // ---------- Protected ----------------------------------------------- //\n    requestStrict(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                if (!this.connection.connected) {\n                    try {\n                        yield this.open();\n                    }\n                    catch (e) {\n                        reject(e);\n                    }\n                }\n                this.events.on(`${request.id}`, (response) => {\n                    if ((0, core_1.isJsonRpcError)(response)) {\n                        reject(response.error);\n                    }\n                    else {\n                        resolve(response.result);\n                    }\n                });\n                try {\n                    (0, core_2.logDebug)('[RPC] >>> send request', request, context);\n                    yield this.connection.send(request, context);\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }));\n        });\n    }\n    setConnection(connection = this.connection) {\n        return connection;\n    }\n    onPayload(payload) {\n        this.events.emit(\"payload\", payload);\n        if ((0, core_1.isJsonRpcResponse)(payload)) {\n            this.events.emit(`${payload.id}`, payload);\n        }\n        else {\n            this.events.emit(\"message\", {\n                type: payload.method,\n                data: payload.params,\n            });\n        }\n    }\n    onClose(event) {\n        // Code 3000 indicates an abnormal closure signalled by the relay -> emit an error in this case.\n        if (event && event.code === 3000) {\n            this.events.emit(\"error\", new Error(`WebSocket connection closed abnormally with code: ${event.code} ${event.reason ? `(${event.reason})` : \"\"}`));\n        }\n        this.events.emit(\"disconnect\");\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            if (this.connection === connection && this.connection.connected)\n                return;\n            if (this.connection.connected)\n                this.close();\n            if (typeof connection === \"string\") {\n                yield this.connection.open(connection);\n                connection = this.connection;\n            }\n            this.connection = this.setConnection(connection);\n            yield this.connection.open();\n            this.registerEventListeners();\n            this.events.emit(\"connect\");\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.connection.close();\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    registerEventListeners() {\n        if (this.hasRegisteredEventListeners)\n            return;\n        this.connection.on(\"payload\", (payload) => this.onPayload(payload));\n        this.connection.on(\"close\", (event) => this.onClose(event));\n        this.connection.on(\"error\", (error) => this.events.emit(\"error\", error));\n        this.connection.on(\"register_error\", (_error) => this.onClose());\n        this.hasRegisteredEventListeners = true;\n    }\n}\nexports.JsonRpcProvider = JsonRpcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SolanaProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SolanaProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"solana\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"solana request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"solana provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    //   {\n    //     \"chains\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\" ],\n    //     \"accounts\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp:F7wnJc5wiBGy1k87jv6gyNwE3jMEWd18oTQiYsF1xVG7\"],\n    //     \"methods\": [\n    //         \"solana_signTransaction\",\n    //         \"solana_signMessage\"\n    //     ],\n    //     \"defaultChain\": \"5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\"\n    // }\n    // TODO:确认上面的defaultChain是否正确（没有solana前缀）\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"solana\"))) {\n                chainId = `solana:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.SolanaProvider = SolanaProvider;\nexports.default = SolanaProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass StarknetProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"starknet\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"starknet request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"starknet provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Wallet doesn't support\" + args.method);\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = StarknetProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SuiProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SuiProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeySui;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"sui request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"sui provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"sui\"))) {\n                chainId = `sui:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"sui_signMessage\":\n            case \"sui_signPersonalMessage\":\n            case \"sui_signTransactionBlock\":\n            case \"sui_signAndExecuteTransactionBlock\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.SuiProvider = SuiProvider;\nexports.default = SuiProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass TONProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyTON;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            (0, core_1.logDebug)(\"TONProvider request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"TONProvider request provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                if (!args.params) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params is nil\");\n                }\n                if (this.isRecord(args.params)) {\n                    const _e = args.params, { validUntil } = _e, newParams = __rest(_e, [\"validUntil\"]);\n                    let fromAddress = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n                    if ('from' in newParams) {\n                        fromAddress = newParams.from || ((_d = (_c = this.namespace.payload) === null || _c === void 0 ? void 0 : _c.ton_addr) === null || _d === void 0 ? void 0 : _d.address);\n                    }\n                    args.params['from'] = fromAddress;\n                    args.params['network'] = this.getDefaultChain();\n                    args.params['valid_until'] = validUntil;\n                    let response = yield this.client.request(args);\n                    if (this.isRecord(response) && 'result' in response) {\n                        const result = {\n                            boc: response.result.toString()\n                        };\n                        (0, core_1.logDebug)(\"TONProvider request provider response: \", JSON.stringify(response));\n                        (0, core_1.logDebug)(\"TONProvider request provider result: \", JSON.stringify(result));\n                        return result;\n                    }\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton_send request response is nil\");\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params type add nil\");\n                }\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        var _a, _b;\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"ton getAccounts accounts :\", accounts);\n        (0, core_1.logDebug)(\"ton getAccounts .namespace :\", JSON.stringify(this.namespace));\n        if (!accounts) {\n            return [];\n        }\n        let address = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n        (0, core_1.logDebug)(\"ton getAccounts address :\", address);\n        if (address) {\n            return [\n                address\n            ];\n        }\n        return [];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"ton_sendTransaction\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.default = TONProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass TronProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyTron;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"tron request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"tron provider namespace: \", JSON.stringify(this.namespace));\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = TronProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./providers\"), exports);\n__exportStar(require(\"./misc\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IJSONRpcProvider = exports.IJSONRpcConnection = void 0;\nclass IJSONRpcConnection {\n}\nexports.IJSONRpcConnection = IJSONRpcConnection;\nclass IJSONRpcProvider {\n    constructor(opt) {\n    }\n}\nexports.IJSONRpcProvider = IJSONRpcProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setGlobal = exports.getGlobal = void 0;\nconst globals = {};\nconst getGlobal = (key) => {\n    return globals[key];\n};\nexports.getGlobal = getGlobal;\nconst setGlobal = (key, value) => {\n    globals[key] = value;\n};\nexports.setGlobal = setGlobal;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./misc\"), exports);\n__exportStar(require(\"./globals\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRpcUrl = getRpcUrl;\nexports.getChainId = getChainId;\nexports.fromAccountToAddress = fromAccountToAddress;\nexports.convertChainIdToNumber = convertChainIdToNumber;\nexports.parseChainId = parseChainId;\nexports.mergeArrays = mergeArrays;\nexports.syncAddressAvailable = syncAddressAvailable;\nexports.syncAddressHostAvailable = syncAddressHostAvailable;\nconst core_1 = require(\"@okxconnect/core\");\nfunction getRpcUrl(chainId, rpc, projectId) {\n    var _a;\n    const chain = parseChainId(chainId);\n    // no default\n    return (((_a = rpc.rpcMap) === null || _a === void 0 ? void 0 : _a[chain.reference]) ||\n        ``);\n}\nfunction getChainId(chain) {\n    return chain.includes(\":\") ? chain.split(\":\")[1] : chain;\n}\nfunction fromAccountToAddress(account) {\n    if (!account) {\n        return \"\";\n    }\n    try {\n        let addressArr = account.split(\":\").slice(2);\n        let address = addressArr.length > 0 ? addressArr.join(\":\") : \"\";\n        (0, core_1.logDebug)(\"fromAccountToAddress address and account:\", address, account);\n        return address;\n    }\n    catch (e) {\n        (0, core_1.logError)(\"fromAccountToAddress error:\", account);\n        return \"\";\n    }\n}\n// export function validateChainApproval(chain: string, chains: string[]): void {\n//   if (!chains.includes(chain)) {\n//     throw new Error(\n//       `Chain '${chain}' not approved. Please use one of the following: ${chains.toString()}`,\n//     );\n//   }\n// }\n// export function getChainsFromApprovedSession(accounts: string[]): string[] {\n//   return accounts.map((address) => `${address.split(\":\")[0]}:${address.split(\":\")[1]}`);\n// }\n// export function getAccountsFromSession(namespace: string, session: SessionTypes.Struct): string[] {\n//   // match namespaces e.g. eip155 with eip155:1\n//   const matchedNamespaceKeys = Object.keys(session.namespaces).filter((key) =>\n//     key.includes(namespace),\n//   );\n//   if (!matchedNamespaceKeys.length) return [];\n//   const accounts: string[] = [];\n//   matchedNamespaceKeys.forEach((key) => {\n//     const accountsForNamespace = session.namespaces[key].accounts;\n//     accounts.push(...accountsForNamespace);\n//   });\n//   return accounts;\n// }\n// export function mergeRequiredOptionalNamespaces(\n//   required: NamespaceConfig = {},\n//   optional: NamespaceConfig = {},\n// ){\n//   const requiredNamespaces = normalizeNamespaces(required);\n//   const optionalNamespaces = normalizeNamespaces(optional);\n//    return merge.merge(requiredNamespaces,optionalNamespaces)\n// }\n/**\n * Converts\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * into\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *\n */\n// export function normalizeNamespaces(namespaces: NamespaceConfig): NamespaceConfig {\n//   const normalizedNamespaces: NamespaceConfig = {};\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const rpcMap = values.rpcMap || {};\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       ...values,\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       rpcMap: { ...rpcMap, ...normalizedNamespaces[normalizedKey]?.rpcMap },\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n//\n// export function parseCaip10Account(caip10Account: string): string {\n//   return caip10Account.includes(\":\") ? caip10Account.split(\":\")[2] : caip10Account;\n// }\n/**\n * Populates the chains array for each namespace with the chains extracted from the accounts if are otherwise missing\n */\n// export function populateNamespacesChains(\n//   namespaces: SessionTypes.Namespaces,\n// ): Record<string, SessionTypes.Namespace> {\n//   const parsedNamespaces: Record<string, SessionTypes.Namespace> = {};\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const accounts = values.accounts || [];\n//     // If the key includes a CAIP separator `:` we know it's a namespace + chainId (e.g. `eip155:1`)\n//     const chains = isCaipNamespace(key)\n//       ? [key]\n//       : values.chains\n//       ? values.chains\n//       : getChainsFromApprovedSession(values.accounts);\n//     parsedNamespaces[key] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   }\n//   return parsedNamespaces;\n// }\nfunction convertChainIdToNumber(chainId) {\n    if (typeof chainId === \"number\")\n        return chainId;\n    if (chainId.includes(\"0x\")) {\n        return parseInt(chainId, 16);\n    }\n    chainId = chainId.includes(\":\") ? chainId.split(\":\")[1] : chainId;\n    return isNaN(Number(chainId)) ? chainId : Number(chainId);\n}\nconst CAIP_DELIMITER = \":\";\nfunction parseChainId(chain) {\n    const [namespace, reference] = chain.split(CAIP_DELIMITER);\n    return { namespace, reference };\n}\nfunction mergeArrays(a = [], b = []) {\n    return [...new Set([...a, ...b])];\n}\nfunction syncAddressAvailable(wallet) {\n    if (!wallet) {\n        return false;\n    }\n    if (wallet.appName !== 'OKX Wallet') {\n        return false;\n    }\n    if ((0, core_1.versionCompare)('6.97.0', wallet.appVersion) > 0) {\n        return false;\n    }\n    return syncAddressHostAvailable();\n}\nfunction syncAddressHostAvailable() {\n    try {\n        return !!(window.okxGlobal);\n    }\n    catch (e) {\n        return false;\n    }\n}\n","<template>\n  <div id=\"app\">\n    <el-container>\n      <el-header>OKX Connect</el-header>\n      <el-main>\n        <el-card class=\"wallet-info\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Wallet Info</div>\n          </template>\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Wallet Address:</strong> {{ getWalletAddress }}\n            </el-col>\n          </el-row>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Status :</strong> {{ currentStatus }}\n            </el-col>\n          </el-row>\n\n        </el-card>\n\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Connect Params</div>\n          </template>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"12\">\n              <el-checkbox v-model=\"withUI\" @change=\"handleWithUI\">\n                Show UI</el-checkbox>\n            </el-col>\n\n            <el-col :span=\"12\">\n              <el-checkbox v-model=\"universalToTG\" @change=\"handleUniversalToTG\">\n                Use mini wallet</el-checkbox>\n            </el-col>\n          </el-row>\n\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Modals</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"modals\" placeholder=\"Modals\" @change=\"handleModalsSelect\" multiple>\n                <el-option label=\"Before\" value=\"before\" />\n                <el-option label=\"Success\" value=\"success\" />\n                <el-option label=\"Error\" value=\"error\" />\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center; justify-content: space-between;\">\n            <el-col :span=\"6\" style=\"gap: 2px\">\n              <p style=\"font-size: 11pt; margin: 0px\">Return Strategy</p>\n              <p style=\"font-size: 9pt; margin: 0px\">(Mobile only)</p>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-select\n                v-model=\"returnStrategy\"\n                @change=\"handleReturnStrategySelect\"\n                placeholder=\"Return Strategy\"\n              >\n                <el-option\n                  v-for=\"strategy in returnStrategies\"\n                  :key=\"`return-strategy-select-option-${strategy}`\"\n                  :label=\"strategy\"\n                  :value=\"strategy\"\n                />\n              </el-select>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-input\n                v-if=\"returnStrategy === 'deeplink'\"\n                v-model=\"deeplink\"\n                @change=\"handleReturnStrategyDeeplink\"\n                placeholder=\"Deeplink\"\n                :disabled=\"returnStrategy !== 'deeplink'\"\n                style=\"margin: 0px\"\n              />\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Lang</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"language\" @change=\"handleLanguageSelect\" placeholder=\"Language\">\n                <el-option v-for=\"locale in locales\" :key=\"`language-select-option-${locale}`\" :label=\"locale\"\n                  :value=\"locale\" />\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Theme</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"theme\" @change=\"handleThemeSelect\" placeholder=\"Theme\">\n                <el-option label=\"LIGHT\" :value=\"THEME.LIGHT\" />\n                <el-option label=\"DARK\" :value=\"THEME.DARK\" />\n              </el-select>\n            </el-col>\n          </el-row>\n\n<!--          <el-row>-->\n<!--          <el-row style=\"align-items: center\">-->\n<!--            <el-col :span=\"4\">-->\n<!--              <p style=\"font-size: 11pt\">Connect</p>-->\n<!--              <p style=\"font-size: 11pt\">Methods</p>-->\n<!--            </el-col>-->\n<!--            <el-col :span=\"20\">-->\n<!--              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" placeholder=\"Methods\">-->\n<!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n<!--                           :value=\"methods\" />-->\n\n<!--              </el-select>-->\n<!--            </el-col>-->\n<!--          </el-row>-->\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Connect</p>\n              <p style=\"font-size: 11pt\">Methods</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" multiple placeholder=\"methods\">\n                <el-option\n                    v-for=\"item in connectMethods\"\n                    :key=\"item\"\n                    :label=\"item\"\n                    :value=\"item\">\n                </el-option>\n              </el-select>\n\n\n<!--              <el-select v-model=\"selectedMethod\" placeholder=\"Methods\" @change=\"handleConnectMethodsSelect\" multiple>-->\n<!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n<!--                           :value=\"methods\" />-->\n<!--              </el-select>-->\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">ton_proof</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-input v-model=\"tonProofValue\"  placeholder=\"input ton_proof\"></el-input>\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" align=\"middle\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Required Chains</div>\n            </el-col>\n            <el-col\n              :span=\"6\"\n              v-for=\"item in Object.keys(availableChains)\"\n              :key=\"item\"\n            >\n              <el-checkbox\n                v-model=\"availableChains[item].checked\"\n                :disabled=\"!areChainsInit\"\n                >{{ availableChains[item].name }}</el-checkbox\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" align=\"middle\" style=\"margin-top: 20px\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Optional Chains</div>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(43114)\" @change=\"() => handleOptionChange(43114)\">\n                AVAX</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(10)\" @change=\"() => handleOptionChange(10)\">OP</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(8453)\" @change=\"() => handleOptionChange(8453)\">\n                BASE</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(99781165)\"\n                @change=\"() => handleOptionChange(99781165)\">Nonexist</el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp')\" @change=\"() => handleOptionChange('solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp')\">Solana</el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('ton:-239')\" @change=\"() => handleOptionChange('ton:-239')\">Ton</el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('btc:mainnet')\" @change=\"() => handleOptionChange('btc:mainnet')\">btc</el-checkbox>\n            </el-col>\n\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"initBtnClicked\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectInitStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                type=\"primary\"\n                @click=\"connectBtnClicked\"\n                icon=\"el-icon-connection\"\n                :disabled=\"!areChainsInit\"\n                >{{ connectStatusStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"syncAllAddressClick\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ syncAllAddressStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                type=\"danger\"\n                @click=\"disconnectAction\"\n                icon=\"el-icon-switch-button\"\n                :disabled=\"!areChainsInit || walletAddress.length == 0\"\n                >{{ disconnectStatusStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n          <teleport to=\"body\">\n            <div v-if=\"showModal\" class=\"modal-overlay\" @click=\"closeModal\">\n              <div class=\"modal-content\" @click.stop>\n                <button class=\"close-button\" @click=\"closeModal\">\n                  &times;\n                </button>\n                <h2>Scan to connect</h2>\n                <qrcode-vue :value=\"qrValue\" :size=\"350\" level=\"L\" />\n              </div>\n            </div>\n          </teleport>\n        </el-card>\n\n        <!-- 发送交易 -->\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Transactions</div>\n          </template>\n\n          <el-tabs v-model=\"activeTab\" type=\"border-card\" @tab-click=\"clickActiveTab\">\n            <!-- ETH -->\n            <el-tab-pane label=\"ETH\" name=\"eip155:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to ETH)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve TONCoin)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(eth mint\n                    nft)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add SPX6900)\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TON\" name=\"ton:-239\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_getAccount\">ton_getAccount</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_sendTransaction\">ton_sendTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- solana -->\n            <el-tab-pane label=\"Sol\" name=\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- Sui-->\n            <el-tab-pane label=\"Sui\" name=\"sui:mainnet\">\n              <SuiPanel @generateTransactionParams=\"sui_generateTransactionParams\" />\n            </el-tab-pane>\n            <!-- BTC -->\n            <el-tab-pane label=\"BTC\" name=\"btc:mainnet\">\n              <BTCPanel @generateTransactionParams=\"btc_generateTransactionParams\" />\n            </el-tab-pane>\n\n            <!-- Fractal BTC -->\n            <el-tab-pane label=\"Fractal\" name=\"fractal:mainnet\">\n              <FractalPanel @generateTransactionParams=\"fractal_generateTransactionParams\" />\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Tron\" name=\"tron:mainnet\">\n              <TronTransactionPanel\n                  @generateTransactionParams=\"tron_generateTransactionParams\"\n                  @generateTransactionResult=\"tron_getTransactionResult\" />\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Aptos\" name=\"aptos:mainnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signTransaction\">aptos_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"aptos_signAndSubmitTransaction\">aptos_signAndSubmitTransaction</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Cosmos\" name=\"cosmos:cosmoshub-4\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <!-- Polygon-->\n            <el-tab-pane label=\"Polygon\" name=\"eip155:137\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send POL)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve sushi)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(polygon mint\n                    nft)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add LGNS)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_testRpc()\">wallet_testRpc(Polygon)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\"\n                  >eth_sendTransaction(转账FUSE)</el-button\n                  >\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\"\n                  >eth_sendTransaction(授权USDC)</el-button\n                  >\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- BSC-->\n            <el-tab-pane label=\"BNB\" name=\"eip155:56\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to BNB)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve POSI)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add FET)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_testRpc()\">wallet_testRpc(check balance on eth)</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Fuse\" name=\"eip155:122\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_swap\">eth_sendTransaction(Swap)</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Sonic testnet\" name=\"svm:70000062\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Movement\" name=\"movement:testnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"move_signTransaction\">move_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"move_signAndSubmitTransaction\">move_signAndSubmitTransaction</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n\n            <el-tab-pane label=\"osmos\" name=\"cosmos:osmosis-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"SEI\" name=\"cosmos:pacific-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Starknet\" name=\"starknet:mainnet\">\n              <StarknetPanel ref=\"starknetPanelRef\" @generateTransactionParams=\"starknet_generateTransactionParams\" @generateTransactionResult=\"starknet_getTransactionResult\" />\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TEST \" name=\"test:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"testBase64UrlSafe\">testBase64UrlSafe</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n          </el-tabs>\n\n          <el-col :xs=\"24\" :sm=\"24\" style=\"margin: 16px 0px;\">\n            <el-row style=\"align-items: center; justify-content: space-between; margin-bottom: 8px;\">\n              <el-col :span=\"4\">\n                <p style=\"font-size: 11pt; margin: 0px; text-align: start\">Redirect param (only for ETH, Polygon, BNB, Fuse)</p>\n              </el-col>\n              <el-col :span=\"9\">\n                <el-select\n                  v-model=\"redirect\"\n                  @change=\"handleRedirectSelect\"\n                  placeholder=\"Return Strategy\"\n                  :disabled=\"!canChainAddRedirectParam()\"\n                  >\n                  <el-option\n                    v-for=\"strategy in returnStrategies\"\n                    :key=\"`return-strategy-select-option-${strategy}`\"\n                    :label=\"strategy\"\n                    :value=\"strategy\"\n                  />\n                </el-select>\n              </el-col>\n              <el-col :span=\"10\">\n                <el-input\n                  v-if=\"redirect === 'deeplink'\"\n                  v-model=\"redirectDeeplink\"\n                  @change=\"handleRedirectDeeplink\"\n                  placeholder=\"Deeplink\"\n                  :disabled=\"!canChainAddRedirectParam() || redirect !== 'deeplink'\"\n                  style=\"margin: 0px\"\n                />\n              </el-col>\n            </el-row>\n            <el-button\n              type=\"primary\" @click=\"addRedirectParam()\"\n              :disabled=\"!canChainAddRedirectParam() || !testTransaction\"\n            >\n              Add redirect param to data\n            </el-button>\n          </el-col>\n\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Data:</div>\n            <el-input v-model=\"testTransaction\" type=\"textarea\" :rows=\"5\" placeholder=\"sendTransactions\"></el-input>\n          </el-col>\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Result :</div>\n            <el-input v-model=\"testboc\" type=\"textarea\" :rows=\"5\" placeholder=\"boc\"></el-input>\n          </el-col>\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button type=\"primary\" :disabled=\"sendBtnDisabled\" @click=\"sendTransaction()\">{{\n                testTransactionStr\n                }}</el-button>\n            </el-col>\n          </el-row>\n        </el-card>\n      </el-main>\n    </el-container>\n  </div>\n</template>\n\n<style scoped>\n/* 重置全局边距和内边距 */\nbody,\nhtml {\n  margin: 0;\n  padding: 0;\n  height: 100%;\n}\n\n/* 确保 app 容器占满整个视口 */\n#app {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin: 0 auto;\n  /* 居中 */\n  max-width: 600px;\n  /* 设置最大宽度 */\n  padding: 0 20px;\n  /* 添加一些左右内边距 */\n}\n\n/* 调整 el-container 样式 */\n.el-container {\n  min-height: 100vh;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n}\n\n/* 调整 el-header 样式 */\n.el-header {\n  background-color: #333333;\n  color: white;\n  height: 50px;\n  line-height: 50px;\n  font-size: 18px;\n  font-weight: bold;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1000;\n}\n\n/* 调整 el-main 样式 */\n.el-main {\n  padding: 70px 0 20px;\n  /* 增加顶部内边距以避免被固定header遮挡 */\n  flex-grow: 1;\n}\n\n.el-card {\n  margin-bottom: 20px;\n}\n\n.info-row {\n  margin-bottom: 10px;\n}\n\n.input-label {\n  margin-bottom: 5px;\n  text-align: left;\n}\n\n.el-input {\n  margin-bottom: 10px;\n}\n\n/* 通用按钮样式 */\n.wallet-actions .el-button,\n.transaction .el-button,\n.clear-cache .el-button {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 40px;\n}\n\n.wallet-actions .el-button span,\n.transaction .el-button span,\n.clear-cache .el-button span {\n  margin: 0 auto;\n}\n\n/* 按钮行间距 */\n.wallet-actions .button-row,\n.transaction .button-row {\n  margin-bottom: 8px;\n}\n\n.wallet-actions .button-row:last-child,\n.transaction .button-row:last-child {\n  margin-bottom: 0;\n}\n\n/* 调整图标和文字的对齐 */\n.wallet-actions .el-button [class^=\"el-icon-\"],\n.transaction .el-button [class^=\"el-icon-\"],\n.clear-cache .el-button [class^=\"el-icon-\"] {\n  margin-right: 5px;\n  vertical-align: middle;\n}\n\n/* 新增：调整发送交易按钮与输入框的间距 */\n.transaction .el-row:not(:last-child) {\n  margin-bottom: 10px;\n}\n\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.modal-content {\n  background-color: white;\n  padding: 20px;\n  border-radius: 8px;\n  text-align: center;\n  position: relative;\n  max-width: 90%;\n  width: 400px;\n}\n\n.close-button {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  font-size: 24px;\n  border: none;\n  background: none;\n  cursor: pointer;\n}\n\n/* 响应式调整 */\n@media (max-width: 600px) {\n  #app {\n    padding: 0 10px;\n  }\n\n  .el-main {\n    padding: 60px 0 10px;\n  }\n}\n</style>\n<script>\nimport {OKX_CONNECT_ERROR_CODES, safeJsonStringify,getAppWalletDeepLink,getUniversalLink} from \"@okxconnect/core\"\nimport {\n  OKXBtcProvider,\n  OKXUniversalProvider,\n  OKXCosmosProvider,\n  OKXTonProvider,\n  OKXTronProvider,\n  OKXStarknetProvider\n} from \"@okxconnect/universal-provider\"\nimport {OKXSolanaProvider} from \"@okxconnect/solana-provider\";\nimport {\n  Connection,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n  TransactionMessage,\n  VersionedTransaction\n} from '@solana/web3.js';\nimport {OKXSuiProvider as SuiAdapter} from \"@okxconnect/sui-provider\"\nimport QrcodeVue from 'qrcode.vue'\n\nimport {OKXAptosProvider} from \"@okxconnect/aptos-provider\";\nimport {Aptos, AptosConfig, Network} from \"@aptos-labs/ts-sdk\";\n\nimport BTCPanel from \"./components/BtcTransactionPanel.vue\";\nimport FractalPanel from \"./components/FractalTransactionPanel.vue\"\nimport SuiPanel from \"./components/SuiTransactionPanel.vue\";\nimport StarknetPanel from \"./components/StarknetTransactionPanel.vue\";\n\nimport {OKXUniversalConnectUI, THEME} from \"@okxconnect/ui\";\nimport {ethers} from 'ethers';\nimport VConsole from 'vconsole';\nimport nacl from \"tweetnacl\";\nconst { verifyADR36Amino } = require('@keplr-wallet/cosmos')\nconst { fromBech32 } = require('@cosmjs/encoding')\nimport { verifyPersonalMessageSignature } from '@mysten/sui/verify';\nimport {useShortLink} from \"@okxconnect/core\";\nimport TronTransactionPanel from \"@/components/TronTransactionPanel.vue\";\nimport {TronWeb} from \"tronweb\";\nimport { RpcProvider as StarknetRpcProvider, Account as StarknetAccount } from \"starknet\";\nimport { ref, toRaw } from \"vue\";\nnew VConsole();\n\nconst allChains = {\n  1: { name: \"Eth\", checked: false },\n  56: { name: \"BNB\", checked: false },\n  137: { name: \"Polygon\", checked: false },\n  122: { name: \"Fuse\", checked: false },\n  \"ton:-239\":{name: \"TON\",checked: false},\n  \"btc:mainnet\": { name: \"BTC\", checked: false },\n  \"sui:mainnet\": { name: \"Sui\", checked: false },\n  \"aptos:mainnet\": { name: \"Aptos\", checked: false },\n  \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\": {\n    name: \"Solana\",\n    checked: false,\n  },\n  \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\": {\n    name: \"Sol testnet\",\n    checked: false,\n  },\n  \"svm:70000062\": {\n    name: \"Sonic testnet\",\n    checked: false,\n  },\n  \"movement:testnet\": { name: \"Movement\", checked: false },\n  \"fractal:mainnet\": { name: \"Fractal\", checked: false },\n  \"cosmos:osmosis-1\": {name: \"Osmos\", checked: false},\n  \"cosmos:cosmoshub-4\": {name: \"Cosmos\", checked: false},\n  \"cosmos:pacific-1\": {name: \"SEI\", checked: false},\n  \"cosmos:abvdefg\": {name: \"cosmos:abvdefg\", checked: false},\n  \"tron:mainnet\": {name: \"tron\", checked: false},\n  997865: { name: \"Non Exist chain\", checked: false },\n  2020: { name: \"Ronin\", checked: false },\n  1666600000: { name: \"Harmony\", checked: false },\n  \"starknet:mainnet\": { name: \"starknet\", checked: false }\n};\n\nconst chainsThatCanAddRedirectParam = [\n  \"eip\"\n]\n\nvar optionChains = new Set([]);\nvar selectedModals = [\"before\", \"success\", \"error\"];\nvar selectedReturnStrategy = \"none\";\nvar selectedDeepLink = \"tg://resolve\";\nvar selectedLanguage = \"en_US\";\nvar selectedTheme = THEME.LIGHT;\n\n// import QrcodeVue from 'qrcode.vue'\nexport default {\n  name: \"App\",\n  components: {\n    TronTransactionPanel,\n    QrcodeVue,\n    BTCPanel,\n    FractalPanel,\n    SuiPanel,\n    StarknetPanel\n  },\n\n  setup() {\n    const sendBtnDisabled = ref(false)\n\n    return {\n      sendBtnDisabled\n    }\n  },\n  data: () => {\n    return {\n      activeTab: \"eip155:1\",\n      testTopic: \"\",\n      testPublicKey: \"\",\n      testProofPayload: \"\",\n      tonProofValue:\"\",\n      pendingDeepLink: \"-\",\n      logList: [],\n      connectReady: false,\n      connectStatusStr: \"Connect\",\n      syncAllAddressStr: \"syncAllAddress\",\n      connectInitStr: \"init test\",\n      disconnectStatusStr: \"Disconnect\",\n      localPubKey: \"\",\n      localSecKey: \"\",\n      testTransaction: \"\",\n      selectedChain: \"eip155:1\",\n      testTransactionStr: \"Send\",\n      walletAddress: \"\",\n      testboc: \"\",\n      ProofPayloadVerify: \"\",\n      showModal: false,\n      showVerifyRow: false,\n      qrValue: \"https://www.okx.com/download\",\n      currentStatus: \"\",\n      areChainsInit: false,\n      availableChains: allChains,\n      isOptionalChecked: (chainId) => {\n        return optionChains.has(chainId);\n      },\n      withUI: localStorage.getItem(\"autoRefresh\") != \"false\",\n      universalToTG: localStorage.getItem(\"universalToTG\") != \"false\",\n      modals: selectedModals,\n      returnStrategies: [\"none\", \"back\", \"deeplink\"],\n      returnStrategy: selectedReturnStrategy,\n      deeplink: selectedDeepLink,\n      locales: [\n        \"en_US\",\n        \"ru_RU\",\n        \"zh_CN\",\n        \"zh\",\n        \"ar_AE\",\n        \"cs_CZ\",\n        \"de_DE\",\n        \"es_ES\",\n        \"es_LAT\",\n        \"fr_FR\",\n        \"id_ID\",\n        \"it_IT\",\n        \"nl_NL\",\n        \"pl_PL\",\n        \"pt_BR\",\n        \"pt_PT\",\n        \"ro_RO\",\n        \"tr_TR\",\n        \"uk_UA\",\n        \"vi_VN\",\n        \"zh_TW\"\n      ],\n      selectedMethod:[],\n      selectedMethodData:[],\n      connectMethods:[\n        \"wallet_addEthereumChain(ETH)\",\n        \"personal_sign(ETH)\",\n        \"solana_signMessage(Sol mainnet)\",\n        \"sui_signMessage(Sui mainnet)\",\n        \"sui_signPersonalMessage(Sui mainnet)\",\n        \"btc_signMessage(BTC)\",\n        \"aptos_signMessage(aptos mainnet)\",\n        \"cosmos_signArbitrary(cosmoshub)\",\n        \"test_noSupport_eth(ETH)\",\n        \"tron_signMessage\",\n        \"tron_signMessageV2\",\n        \"starknet_signMessage\",\n        \"sync_all_addresses\"\n      ],\n\n      language: selectedLanguage,\n      theme: selectedTheme,\n      THEME: THEME,\n      redirect: selectedReturnStrategy,\n      redirectDeeplink: selectedDeepLink,\n      handleWithUI: (isChecked) => {\n        localStorage.setItem(\"autoRefresh\", `${isChecked}`);\n        location.reload();\n      },\n      handleUniversalToTG: (isChecked) => {\n        localStorage.setItem(\"universalToTG\", `${isChecked}`);\n      },\n      handleOptionChange: (chainId) => {\n        if (optionChains.has(chainId)) {\n          optionChains.delete(chainId);\n        } else {\n          optionChains.add(chainId);\n        }\n      },\n      starknetPanelTypedData: ''\n    };\n  },\n  computed: {\n    getWalletAddress: function () {\n      return this.walletAddress;\n    },\n  },\n  methods: {\n    isChecked(chainId) {\n      return this.selectedChains.has(chainId);\n    },\n\n    initChains(newChains) {\n      if (newChains.length > 0) {\n        const updatedChains = Object.assign({}, this.availableChains);\n        for (const chainId of newChains) {\n          if (updatedChains[chainId]){\n            updatedChains[chainId].checked = !updatedChains[chainId].checked;\n          }\n        }\n        this.availableChains = updatedChains;\n      }\n\n      this.areChainsInit = true;\n    },\n\n    async clickActiveTab(tab) {\n      const tabName = tab.props ? tab.props.name : tab.name;\n      this.selectedChain = tabName;\n      console.log(`已切换到链 :`, tabName);\n\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      if (tabName == \"starknet:mainnet\") {\n        this.sendBtnDisabled = true\n      }else {\n        this.sendBtnDisabled = false\n      }\n\n      window.provider.setDefaultChain(this.selectedChain);\n    },\n\n    async initBtnClicked() {\n      window.okxLogDebug = true\n      var initCall;\n      if (!this.withUI) {\n        initCall = OKXUniversalProvider.init({\n          dappMetaData: {\n            name: \"univer test dapp\",\n            icon: \"https://avatars.githubusercontent.com/u/37784886\",\n          },\n        });\n      } else {\n        initCall = OKXUniversalConnectUI.init({\n          dappMetaData: {\n            icon: \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\",\n            name: \"OKX WalletConnect UI Demo\",\n          },\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: 'all',\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme\n          },\n        });\n      }\n\n      initCall.then((provider) => {\n        window.provider = provider;\n        window.tonProvider = new OKXTonProvider(window.provider);\n        window.tonProvider.onStatusChange((walletInfo) => {\n              console.log('TONConnection onStatusChange:', JSON.stringify(walletInfo));\n            }, (err) => {\n              console.log('TONConnection onStatusChange error:', err);\n            }\n        )\n\n        if (window.provider instanceof OKXUniversalConnectUI) {\n          window.provider.onModalStateChange((state)=>{\n            console.log(`onModalStateChange   ${JSON.stringify(state)}`)\n          })\n        }\n\n        console.log(\"init finished:\", provider);\n        console.log(\"init finished session:\", JSON.stringify(provider.session));\n\n        if (provider.session?.namespaces) {\n          const newChains = [];\n          console.log(\"namespaces\", provider.session.namespaces);\n          Object.entries(provider.session.namespaces).forEach(([key, value]) => {\n            if (key === \"eip155\") {\n              value.chains.forEach((chain) => {\n                newChains.push(parseInt(chain.substring(7)));\n              });\n            }\n            else {\n              value.chains.forEach((chain) => {\n                newChains.push(chain);\n              });\n            }\n          });\n\n          console.log(\"existing chains:\", newChains);\n          this.initChains(newChains);\n        } else {\n          this.initChains([]);\n        }\n\n        provider.on(\"display_uri\", (uri) => {\n          if (!useShortLink()){\n            if (this.isPC()) {\n              if (uri && !this.withUI && !this.universalToTG) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          }\n          console.log(\"通知>>>display_uri  ==> \", uri);\n        });\n\n        provider.on(\"connect_signResponse\", (items) => {\n          console.log(\"通知>>>connect_signResponse  ==> \", JSON.stringify(items));\n          this.verifyMessage(items)\n        })\n\n        provider.on(\"short_display_uri\", (uri) => {\n          if (useShortLink()){\n            if (this.isPC()) {\n              if (uri && !this.withUI && !this.universalToTG) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          }\n          console.log(\"通知>>>short_display_uri  ==> \", uri);\n        });\n\n\n        provider.on(\"session_connecting\", () => {\n          if (useShortLink()){\n            alert(\"session_connecting\")\n          }\n          console.log(\"通知>>>session_connecting  ==> \");\n        });\n\n        provider.on(\"connect\", (session) => {\n          console.log(\"通知>>>get connect session\", session);\n        });\n        provider.on(\"reconnect\", (session) => {\n          console.log(\"通知>>>get reconnect session\", session);\n          this.walletAddress = \"connected\";\n        });\n        provider.on(\"disconnect\", ({ topic }) => {\n          console.log(`通知>>>get disconnect  ${topic}`);\n          this.walletAddress = \"disconnecteddddd\";\n        });\n        provider.on(\"session_delete\", ({ topic }) => {\n          console.log(`通知>>>get session_delete  ${topic}`);\n        });\n        provider.on(\"session_update\", (session) => {\n          console.log(`通知>>>get session_update `, JSON.stringify(session));\n        });\n      });\n    },\n\n    async connectBtnClicked() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        this.testTonSdk();\n      } else {\n        console.log(`connectBtnClicked provider not finish init`);\n      }\n    },\n\n    async syncAllAddressClick() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        if (window.provider instanceof OKXUniversalProvider){\n          if (window.provider.connected()){\n            try {\n              let message = await window.provider.syncAllAddresses()\n              if (typeof message == \"string\") {\n                this.testboc = message\n              } else {\n                this.testboc = JSON.stringify(message)\n              }\n            }catch (e) {\n              this.testboc = JSON.stringify(e)\n            }\n          }else{\n            this.testboc = \"not connected\"\n          }\n        }\n\n      } else {\n        console.log(`syncAllAddress provider not finish init`);\n      }\n    },\n\n    async disconnectAction() {\n      try {\n        console.log(\"get disconnect wallet btn clicked\");\n        // await TON.disconnect();\n        var provider = window.provider;\n        await provider.disconnect();\n        this.walletAddress = \"disconnected\";\n      } catch (error) {\n        console.log(\"Disconnect  error ==>> \", error.message);\n        this.currentStatus = error.message;\n      }\n    },\n\n    async eth_requestAccounts() {\n      var data = { method: \"eth_requestAccounts\" };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_chainId() {\n      var data = { method: \"eth_chainId\" };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async wallet_switchEthereumChain() {\n      var data = { method: \"wallet_switchEthereumChain\" };\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async wallet_addEthereumChain() {\n      var data = {\n        method: \"wallet_addEthereumChain\",\n        params: {\n          blockExplorerUrls: [\"https://explorer.fuse.io\"],\n          chainId: \"0x7a\",\n          chainName: \"Fuse\",\n          nativeCurrency: { name: \"Fuse\", symbol: \"FUSE\", decimals: 18 },\n          rpcUrls: [\"https://rpc.fuse.io\"],\n        },\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n    async personal_sign() {\n      if (this.selectedChain === \"eip155:1\") {\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0x1ca023f10e157d148deed210f8bee193657a1eaa7f187909e20a9dc3b071dbc364c41fde37960c05093359f410a061ec8a7dca8c0c39fc7c1e24de8a3329775d1b\n\n        var accounts = await window.provider.request(\n          { method: \"eth_requestAccounts\" },\n          \"eip155:1\"\n        );\n        var address = accounts[0];\n        console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n        var dataETH = {\n          method: \"personal_sign\",\n          params: [\n            \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n            address,\n          ],\n        };\n\n        this.testTransaction = JSON.stringify(dataETH);\n      } else if (\n        this.selectedChain === \"eip155:137\" ||\n        this.selectedChain === \"eip155:122\"\n      ) {\n        // method\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0xebda9cfa2af43999058dffa0107031d1ef7fc0252dca85dcbd22ea097af922ca39b64d509ef61ce42b7641c5840b8a80337ffd1411b13e87e2260a3f1b6c151c1b\n\n        var dataPolygon = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n        this.testTransaction = JSON.stringify(dataPolygon);\n      } else if (this.selectedChain === \"eip155:56\") {\n        var data = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n\n        this.testTransaction = JSON.stringify(data);\n      }\n    },\n\n    async eth_sendTransaction_swap() {\n      var data = {\n        method: \"eth_sendTransaction\",\n        chainId: \"eip155:122\",\n        params: {\n          value: \"0x38d7ea4c68000\",\n          gas: \"0x2665f\",\n          to: \"0xf2614A233c7C3e7f08b1F887Ba133a13f1eb2c55\",\n          from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n          data: \"0x2646478b000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee00000000000000000000000000000000000000000000000000038d7ea4c68000000000000000000000000000620fd5fa44be6af63715ef4e65ddfa0387ad13f5000000000000000000000000000000000000000000000000000000000000001b000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000700301ffff0201602352A9Eb5234466Eac23E59e7B99bCaE79C39c0BE9e53fd7EDaC9F859882AfdDa116645287C629040BE9e53fd7EDaC9F859882AfdDa116645287C62900602352A9Eb5234466Eac23E59e7B99bCaE79C39c01f2F3e73be57031114dd1f4E75c1DD87658be7F0E000bb800000000000000000000000000000000\",\n        },\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_signTypedData_v4() {\n      // method\n      // eth_signTypedData\n      // address\n      // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n      // valid\n      // true\n      // result\n      // 0xa8bb3c6b33a119d2d567c7632195c21988df778006082742125a591f5c633f716107883a37f7de6531a6312a5f69022135bf46fe5ab77905b62c82b3395f985e1b\n      //\n\n      // var data = {\n      //   \"method\": \"eth_signTypedData_v4\",\n      //   \"params\": {\n      //     \"typedDataJson\":\"{\\\"types\\\":{\\\"EIP712Domain\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"version\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"chainId\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"name\\\":\\\"verifyingContract\\\",\\\"type\\\":\\\"address\\\"}],\\\"Person\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"wallet\\\",\\\"type\\\":\\\"address\\\"}],\\\"Mail\\\":[{\\\"name\\\":\\\"from\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"to\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"contents\\\",\\\"type\\\":\\\"string\\\"}]},\\\"primaryType\\\":\\\"Mail\\\",\\\"domain\\\":{\\\"name\\\":\\\"Ether Mail\\\",\\\"version\\\":\\\"1\\\",\\\"chainId\\\":1,\\\"verifyingContract\\\":\\\"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\\\"},\\\"message\\\":{\\\"from\\\":{\\\"name\\\":\\\"Cow\\\",\\\"wallet\\\":\\\"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\\\"},\\\"to\\\":{\\\"name\\\":\\\"Bob\\\",\\\"wallet\\\":\\\"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\\\"},\\\"contents\\\":\\\"Hello, Bob!\\\"}}\"\n      // }}\n\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n        this.selectedChain\n      );\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n      var data = {\n        method: \"eth_signTypedData_v4\",\n        params: [\n          address,\n          {\n            types: {\n              EIP712Domain: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"version\",\n                  type: \"string\",\n                },\n                {\n                  name: \"chainId\",\n                  type: \"uint256\",\n                },\n                {\n                  name: \"verifyingContract\",\n                  type: \"address\",\n                },\n              ],\n              Person: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"wallet\",\n                  type: \"address\",\n                },\n              ],\n              Mail: [\n                {\n                  name: \"from\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"to\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"contents\",\n                  type: \"string\",\n                },\n              ],\n            },\n            primaryType: \"Mail\",\n            domain: {\n              name: \"Ether Mail\",\n              version: \"1\",\n              chainId: 1,\n              verifyingContract: \"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\",\n            },\n            message: {\n              from: {\n                name: \"Cow\",\n                wallet: \"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\",\n              },\n              to: {\n                name: \"Bob\",\n                wallet: \"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\",\n              },\n              contents: \"Hello, Bob!\",\n            },\n          },\n        ],\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_sendTransaction_transfer() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            chainId: \"0x1\",\n            to: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            value: \"0x5af3107a4000\",\n            maxPriorityFeePerGas: \"0x3b9aca00\",\n            gas: \"0x5e56\",\n            maxFeePerGas: \"0x2643b9db8\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gasPrice: \"0x17003f6530\",\n            nonce: \"0x0d30\",\n            data: \"0x\",\n            value: \"0x00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasLimit: \"0x5208\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x5e56\",\n            value: \"0x5af3107a4000\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasPrice: \"0x3b9aca00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            chainId: \"0x38\",\n          },\n        };\n      }else if(this.selectedChain === \"eip155:122\"){\n         data =   {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            value: \"0x0\",\n            chainId: \"0x7a\",\n          }\n        }\n      }\n\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n        this.selectedChain\n      );\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"to\"] = address;\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_approve() {\n      var data = {};\n\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000000000000022d473030f116ddee9f6b43ac78ba3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x582d872a1b094fc48f5de31d3b73f2d9be47def1\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000f6f8096ac575b0\",\n            to: \"0x0b3F868E0BE5597D5DB7fEB59E1CADBb0fdDa50a\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            value: \"0x0\",\n            gas: \"0xe117\",\n            gasPrice: \"0xb2d05e00\",\n            data: \"0x095ea7b300000000000000000000000031c2f6fcff4f8759b3bd5bf0e1084a055615c768ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x5CA42204cDaa70d5c773946e69dE942b85CA6706\",\n          },\n        };\n      }else if (this.selectedChain === 'eip155:122'){\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000000000000013b3\",\n            to: \"0x620fd5fa44BE6af63715Ef4E65DDFA0387aD13F5\",\n          },\n        };\n      }\n\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n        this.selectedChain\n      );\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_mint() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x4cacb\",\n            data: \"0xa64dfa75000000000000000000000000ed688002f3797599db8b4feacfe8b1dda0df1c8d000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cecb15396825a895ff8da8fc2d2c77a234dccee00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f6261667962656968643737366b6177706e71336f6f6a6635693274787a76617737737164656b34616a776472637472703261366f626b70723773792f7b69647d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002an            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x30795\",\n            data: \"0xa64dfa75000000000000000000000000341b3687f0309778f08f29336b2c4b9c38b9f110000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f62616679626569686a6279676b68747a71376b68377434336266686e676e793236337668766f6578716a6d6e377161716166366e717a64743777712f7b69647dan            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      }\n\n      let str = JSON.stringify(data);\n      console.log(\"-----长度--->\", str.length);\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n          this.selectedChain\n      );\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async wallet_testRpc() {\n      let provider = window.provider;\n      provider.setDefaultChain(\n        `eip155:56`,\n        `https://eth-mainnet.g.alchemy.com/v2/NxUfYJUr-TQtEpLmSXhhD5pXn70GwsyV`\n      );\n      var data = {\n        method: \"eth_getBalance\",\n        params: [\"0x8D97689C9818892B700e27F316cc3E41e17fBeb9\", \"latest\"],\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async wallet_watchAsset() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xe0f63a424a4439cbe457d80e4f4b51ad25b2c56c\",\n              symbol: \"SPX6900\",\n              image:\n                \"https://assets.coingecko.com/coins/images/31401/standard/sticker_%281%29.jpg?1702371083\",\n              decimals: 8,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xeB51D9A39AD5EEF215dC0Bf39a8821ff804A0F01\",\n              symbol: \"LGNS\",\n              image: \"https://polygonscan.com/token/images/originlgns_32.png\",\n              decimals: 9,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0x031b41e504677879370e9dbcf937283a8691fa7f\",\n              symbol: \"FET\",\n              image: \"https://bscscan.com/token/images/fetch_32.png\",\n              decimals: 18,\n            },\n          },\n        };\n      }\n\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async ton_sendTransaction() {\n      var data  = {\n        \"messages\":[{\"address\":\"EQARULUYsmJq1RiZ-YiH-IJLcAZUVkVff-KBPwEmmaQGH6aC\",\"amount\":\"205000000\",\"payload\":\"te6cckEBAgEAhwABbQ+KfqUAAADNgG7tIEATEtAIAO87mQKicbKgHIk4pSPP4k5xhHqutqYgAB7USnesDnCcECwbgQMBAJUlk4VhgBD3JEg1TUr75iTijBghOKm/sxNDXUBl7CD6WMut0Q85x4RafwA/Es89DBXoTxuqxVFxyBbzt9Rav2HBUKl7hmkvLuKHLBCW57aK\"}],\n        \"validUntil\":1792481054,\n        \"network\":'-239'}\n      this.testTransaction = JSON.stringify(data)\n    },\n    ton_getAccount() {\n      this.testTransaction = \"这里是同步获取 不再需要点击 <<发送交易>>\"\n      let result =   window.tonProvider.account()\n      if (result) {\n        this.testboc = JSON.stringify(result);\n      } else {\n        this.testboc = 'null'\n      }\n    },\n\n    async tonUniversalLog() {\n      console.log(\"ton 信息: tonProvider  connected:\",window.tonProvider.connected())\n      console.log(\"ton 信息: tonProvider  account:\",JSON.stringify(window.tonProvider.account()))\n      console.log(\"ton 信息: tonProvider  wallet:\",JSON.stringify(window.tonProvider.wallet()))\n    },\n\n    async sendTransactionAlert() {\n      //\n      const response = await fetch(`https://apitest.fireverse.ai/oauth/okx/getNonce?publicAddress=0x0cecb15396825a895ff8da8fc2d2c77a234dccee`);\n      const data = await response.json();\n      console.log(\"请求数据----\",JSON.stringify(data))\n      await this.personal_sign()\n      if (confirm(\"Are you want to sign message?\")) {\n        this.sendTransaction();\n      }\n\n      // window.open(\"https://www.okx.com/download?deeplink=okx%3A%2F%2Fweb3%2Fwallet%2Fconnect\",'_self')\n    },\n\n    async sendTransaction() {\n      if (this.selectedChain.startsWith(\"aptos\")\n          || this.selectedChain.startsWith(\"movement\")\n          || this.selectedChain.startsWith(\"solana\")\n          || this.selectedChain.startsWith(\"sonic\")\n          || this.selectedChain.startsWith(\"cosmos\")) {\n        return\n      }\n      console.log(\"sendTransaction\", window.provider);\n      console.log(\"sendTransaction内容11------\", this.testTransaction);\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      if (this.testTransaction && window.provider) {\n        // eslint-disable-next-line no-undef\n        const sendData = JSON.parse(this.testTransaction);\n        try {\n          console.log(\"sendTransaction-----22method>>\", sendData.method);\n\n          let chainId = \"eip155:1\";\n          if (this.selectedChain) {\n            chainId = this.selectedChain;\n            console.log(\n              \"sendTransaction-----this.selectedChain>>\",\n              this.selectedChain\n            );\n          }\n          console.log(\"windowOpen[click_1]: \", Date.now());\n          if (chainId == \"sui:mainnet\") {\n            const adapter = new SuiAdapter(window.provider);\n            var suiResult = \"invalid result\";\n            if (this.currentSuiMethod == 'sui_getAccount') {\n              let result = adapter.getAccount()\n              if (typeof result == \"string\") {\n                this.testboc = result\n              } else {\n                this.testboc = JSON.stringify(result)\n              }\n            }\n            if (this.currentSuiMethod == \"sui_signTransaction\") {\n              suiResult = await adapter.signTransaction(\n                this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signAndExecuteTransaction\") {\n              suiResult = await adapter.signAndExecuteTransaction(\n                this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signMessage\") {\n              console.log(\"signMessage----\", this.currentSuiTransaction);\n              suiResult = await adapter.signMessage(this.currentSuiTransaction);\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_signPersonalMessage\") {\n              console.log(\n                \"signPersonalMessage----\",\n                this.currentSuiTransaction\n              );\n              suiResult = await adapter.signPersonalMessage(\n                this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_testRpc\") {\n              console.log(\"test rpc----\", this.currentSuiTransaction);\n              console.log(\n                `请求数据发送 rpc ----->> ${JSON.stringify(sendData)}`\n              );\n              const res = await window.provider.request(sendData, chainId);\n              console.log(`请求数据回调 rpc ----->> ${JSON.stringify(result)}`);\n              if (typeof res == \"string\") {\n                this.testboc = res;\n              } else {\n                this.testboc = JSON.stringify(res);\n              }\n            }\n            console.log(\"windowOpen[click_2]: \", Date.now());\n            return;\n          }else if(chainId === \"ton:-239\"){\n            console.log(\n                `请求数据发送 sendTransaction ---ton-->> ${JSON.stringify(sendData)}`\n            );\n            let result =  await window.tonProvider.sendTransaction(sendData)\n            console.log(\n                `请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`\n            );\n            if (typeof result == \"string\") {\n              this.testboc = result;\n            } else {\n              this.testboc = JSON.stringify(result);\n            }\n            return\n          }\n\n          if (chainId == 'btc:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var btcResult = 'invalid result'\n\n            if (this.currentBtcMethod == 'btc_signMessage') {\n              btcResult = await btcAdapter.signMessage(chainId, this.currentBtcTransaction[\"signStr\"])\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_send') {\n              btcResult = await btcAdapter.send(chainId, this.currentBtcTransaction)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signPsbt') {\n              btcResult = await btcAdapter.signPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n\n              this.hexToBase64(btcResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentBtcMethod == 'btc_signPsbts') {\n              btcResult = await btcAdapter.signPsbts(chainId, this.currentBtcTransaction.psbtHexs, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_sendInscription') {\n              btcResult = await btcAdapter.sendInscription(chainId, this.currentBtcTransaction.address, this.currentBtcTransaction.inscriptionId, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signAndPushPsbt') {\n              btcResult = await btcAdapter.signAndPushPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            }else if (this.currentBtcMethod == 'btc_sendBitcoin') {\n              btcResult = await btcAdapter.sendBitcoin(chainId, this.currentBtcTransaction.toAddress, this.currentBtcTransaction.satoshis, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            }else if (this.currentBtcMethod == 'btc_getAccount'){\n              btcResult = btcAdapter.getAccount(chainId)\n              this.testboc = JSON.stringify(btcResult)\n            }\n\n            return\n          }\n\n          if (chainId == 'fractal:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var fractalResult = 'invalid result'\n\n            if (this.currentFractalMethod == 'fractal_signMessage') {\n              fractalResult = await btcAdapter.signMessage(chainId, this.currentFractalTransaction['signStr'])\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_send') {\n              fractalResult = await btcAdapter.send(chainId, this.currentFractalTransaction)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signPsbt') {\n              fractalResult = await btcAdapter.signPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.hexToBase64(fractalResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentFractalMethod == 'fractal_signPsbts') {\n              fractalResult = await btcAdapter.signPsbts(chainId, this.currentFractalTransaction.psbtHexs, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_sendInscription') {\n              fractalResult = await btcAdapter.sendInscription(chainId, this.currentFractalTransaction.address, this.currentFractalTransaction.inscriptionId, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signAndPushPsbt') {\n              fractalResult = await btcAdapter.signAndPushPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            }else if (this.currentFractalMethod == 'fractal_sendBitcoin') {\n              fractalResult = await btcAdapter.sendBitcoin(chainId, this.currentFractalTransaction.toAddress, this.currentFractalTransaction.satoshis, this.currentFractalTransaction.options)\n\n              this.testboc = JSON.stringify(fractalResult)\n            }else if (this.currentFractalMethod == 'fractal_getAccount'){\n              fractalResult = btcAdapter.getAccount(chainId)\n              this.testboc = JSON.stringify(fractalResult)\n            }\n\n            return\n          }\n\n          console.log(`请求数据发送 sendTransaction ----->> ${JSON.stringify(sendData)}`)\n          var result = await window.provider.request(sendData, chainId)\n          console.log(`请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`)\n\n          console.log(\"windowOpen[click_3]: \", Date.now());\n          if (typeof result == \"string\") {\n            this.testboc = result;\n          } else {\n            this.testboc = JSON.stringify(result);\n          }\n          console.log(\"方法数据回调 --this.testboc--\", this.testboc);\n        } catch (error) {\n          console.error(\"方法数据回调失败 --Error--\", error.message);\n\n          if (error.code === OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n            this.testboc = error.message;\n          } else {\n            this.testboc = \"wrong signature！\" + error.message;\n          }\n        }\n      } else {\n        alert(\"Please input transaction data\");\n      }\n    },\n\n    hexToBase64(hexStr) {\n      var bytes = [];\n      for (var i = 0; i < hexStr.length; i += 2) {\n        bytes.push(parseInt(hexStr.substr(i, 2), 16));\n      }\n      const buffer = new Uint8Array(bytes)\n      const blob = new Blob([buffer]);\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = function (e) {\n          var base64Data = e.target.result.split(\",\")[1]\n          resolve(base64Data);\n        };\n        reader.onerror = function (e) {\n          reject(e);\n        };\n        reader.readAsDataURL(blob);\n      });\n    },\n    testBase64UrlSafe(){\n      let datatest = {\"protocolVer\":1,\"topic\":\"8a7a4c3be73802d0ae2587123ade7bb79f27433b9aa3ca589a2208a2089eecfd\",\"clientId\":\"5f1bbf9eac92160affa7ef04d0a710817ddb6d8c22ebbd6263e86f059930b404\",\"requestId\":\"1731383250054\",\"dAppInfo\":{\"url\":\"connect.oker.vip\",\"origin\":\"https://connect.oker.vip\",\"name\":\"univer test dapp\",\"icon\":\"https://avatars.githubusercontent.com/u/37784886\"},\"requests\":[{\"name\":\"requestAccounts\",\"requiredNamespaces\":[{\"namespace\":\"aptos\",\"chains\":[\"aptos:637\"]}],\"optionalNamespaces\":[],\"connectRequestMethods\":[{\"chainId\":\"aptos:637\",\"method\":\"aptos_signMessage\",\"params\":{\"data\":{\"address\":true,\"application\":true,\"chainId\":true,\"message\":\"123 中文测试!\",\"nonce\":\"1234\"},\"applicationUrl\":\"https://connect.oker.vip\",\"prefix\":\"APTOS\",\"aptosChainId\":\"1\"}}]}],\"redirect\":\"none\"}\n      let json = JSON.stringify(datatest)\n      const utf8Array = new TextEncoder().encode(json);\n      let binary = '';\n      utf8Array.forEach(byte => {\n        binary += String.fromCharCode(byte);\n      });\n\n      let firstStr =  btoa(binary)\n      console.log(\"字符串编码1>>>>\",firstStr)\n      firstStr = firstStr.replace(/\\+/g, '-')  // 替换 '+'\n      console.log(\"字符串编码2>>>>\",firstStr)\n      firstStr = firstStr.replace(/\\//g, '_')  // 替换 '/'\n      console.log(\"字符串编码3>>>>\",firstStr)\n      firstStr = firstStr.replace(/=+$/, '');  // 移除 '=';\n      console.log(\"字符串编码4>>>>\",firstStr)\n\n      let showUrl =  getUniversalLink(getAppWalletDeepLink(firstStr))\n      console.log(\"字符串编码5>>>>\",showUrl)\n      this.qrValue = showUrl;\n      this.showModal = true;\n    },\n\n\n    async testTonSdk() {\n      // 1. connect\n      //  create sub providers for each namespace/chain\n      let nameSpacesChains = [];\n      let optSpaceChains = [];\n\n      let solanaChains = [\n        \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n        \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n        \"svm:70000062\",\n      ];\n      let hasEip155, hasSolana, hasSui, hasBtc, hasAptos, hasTon, hasCosmos, hasTron, hasStarknet = false\n\n      let suiChains = [\n        \"sui:mainnet\",\n      ];\n\n      let btcChains = [\n        \"btc:mainnet\",\n        \"fractal:mainnet\"\n      ];\n\n      const chains = Object.entries(this.availableChains)\n          .filter((chain) => chain[1].checked)\n          .map((chain) => chain[0]);\n      console.log(`chains  ===> ${chains.values()}`)\n      chains.forEach(function (chainId) {\n        console.log(`chains.forEach chainId  ===> ${chainId}`)\n\n        if (solanaChains.includes(chainId)) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"ton\")) {\n          nameSpacesChains.push(chainId)\n          hasTon = true\n          return\n        }\n        if (typeof chainId == 'string' && (chainId.startsWith(\"aptos\") || chainId.startsWith(\"movement\"))) {\n          nameSpacesChains.push(chainId)\n          hasAptos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId)\n          hasSolana = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"cosmos\")) {\n          nameSpacesChains.push(chainId)\n          hasCosmos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"tron\")) {\n          nameSpacesChains.push(chainId)\n          hasTron = true\n          return\n        }\n\n        if (typeof chainId == 'string' && chainId.startsWith(\"starknet\")) {\n          nameSpacesChains.push(chainId)\n          hasStarknet = true\n          return\n        }\n\n        if (suiChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`);\n          nameSpacesChains.push(chainId);\n          hasSui = true;\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`)\n          nameSpacesChains.push(chainId)\n          hasBtc = true\n          return\n        }\n\n        hasEip155 = true\n        nameSpacesChains.push(`eip155:${chainId}`)\n      })\n\n\n      optionChains.forEach(function (chainId) {\n        if (solanaChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n        if (typeof chainId == \"string\" && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (suiChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          optSpaceChains.push(chainId)\n          return\n        }\n\n        if (chainId.startsWith('ton')) {\n          optSpaceChains.push(chainId)\n          return\n        }\n\n        optSpaceChains.push(`eip155:${chainId}`)\n      })\n\n      console.log(`namespaceChains  ===> ${JSON.stringify(nameSpacesChains)}`);\n      var connectData = {};\n      if (nameSpacesChains && nameSpacesChains.length > 0) {\n        var requireData = {};\n\n        if (hasEip155) {\n          requireData.eip155 = {\n            chains: nameSpacesChains.filter((item) =>\n              item.startsWith(\"eip155\")\n            ),\n            defaultChain: nameSpacesChains.filter((item) =>\n              item.startsWith(\"eip155\")\n            )[0],\n          };\n        }\n        if (hasSolana) {\n          requireData.solana = {\n            chains: nameSpacesChains.filter(\n              (item) =>\n                item.startsWith(\"solana\") ||\n                item.startsWith(\"sonic\") ||\n                item.startsWith(\"svm\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n              (item) =>\n                item.startsWith(\"solana\") ||\n                item.startsWith(\"sonic\") ||\n                item.startsWith(\"svm\")\n            )[0],\n          };\n        }\n\n        if (hasCosmos) {\n          requireData.cosmos = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            )[0],\n          }\n        }\n        if (hasTron) {\n          requireData.tron = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            )[0],\n          }\n        }\n        if (hasStarknet) {\n          requireData.starknet = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"starknet\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"starknet\")\n            )[0],\n          }\n        }\n        if (hasTon) {\n\n          //\n          let tonParams = {\n            ton_addr:{\n              name: 'ton_addr',\n            }\n          };\n          if (this.tonProofValue){\n            tonParams = {\n              ton_addr:{\n                name: 'ton_addr',\n              },\n              ton_proof:{\n                name: 'ton_proof',\n                payload: this.tonProofValue,\n              }\n            };\n          }\n\n\n          requireData.ton = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"ton\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"ton\"))[0],\n            params:tonParams\n          };\n        }\n\n        if (hasSui) {\n          requireData.sui = {\n            chains: nameSpacesChains.filter((item) => item.startsWith(\"sui\")),\n            defaultChain: nameSpacesChains.filter((item) =>\n              item.startsWith(\"sui\")\n            )[0],\n            rpcMap: {\n              \"sui:mainnet\": \"https://www.okx.com/fullnode/sui/discover/rpc\"\n            }\n          };\n        }\n        if (hasAptos) {\n          requireData.aptos = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\"))[0]\n          }\n        }\n\n        if (hasBtc) {\n          let btcChains = nameSpacesChains.filter(item => item.startsWith(\"btc\") || item.startsWith(\"fractal\"))\n          requireData.btc = {\n            chains: btcChains,\n            defaultChain: btcChains[0]\n          }\n        }\n        console.log(`requireData  ===> ${JSON.stringify(requireData)}`)\n        connectData['namespaces'] = requireData;\n        console.log(JSON.stringify(connectData))\n      }\n\n      if (optSpaceChains && optSpaceChains.length > 0) {\n        const optData = {};\n\n        const eip155Chains = optSpaceChains.filter((item) => item.startsWith(\"eip155\"));\n        if (eip155Chains.length > 0) {\n          optData[\"eip155\"] = {\n            chains: eip155Chains,\n            defaultChain: eip155Chains[0],\n          };\n        }\n\n        const solanaChains = optSpaceChains.filter((item) => item.startsWith(\"solana\"));\n        if (solanaChains.length > 0) {\n          optData[\"solana\"] = {\n            chains: solanaChains,\n            defaultChain: solanaChains[0],\n          };\n        }\n\n        const tonChains = optSpaceChains.filter((item) => item.startsWith(\"ton\"));\n        if (tonChains.length > 0) {\n\n          let tonParams = {\n            ton_addr:{\n              name: 'ton_addr',\n            }\n          };\n          if (this.tonProofValue){\n            tonParams = {\n              ton_addr:{\n                name: 'ton_addr',\n              },\n              ton_proof:{\n                name: 'ton_proof',\n                payload: this.tonProofValue,\n              }\n            };\n          }\n\n\n          optData[\"ton\"] = {\n            chains: tonChains,\n            defaultChain: tonChains[0],\n            params: tonParams\n          };\n        }\n\n        const btcChains = optSpaceChains.filter((item) => item.startsWith(\"btc\"));\n        if (btcChains.length > 0) {\n          optData[\"btc\"] = {\n            chains: btcChains,\n            defaultChain: btcChains[0],\n          };\n        }\n\n        connectData[\"optionalNamespaces\"] = optData;\n      }\n\n      if (nameSpacesChains.length === 0 && optSpaceChains.length === 0) {\n        //未选择链\n        alert(\"Please select a chain from above to continue\");\n        return;\n      }\n      console.log(\"=====>connectData \");\n      console.log(connectData);\n\n      var connectMethod;\n      let signMethods = this.getCurrentSelectedMethodData();\n      if (window.provider instanceof OKXUniversalConnectUI) {\n        if (signMethods && signMethods.length>0){\n          connectMethod = window.provider.openModalAndSign(connectData,JSON.parse(JSON.stringify(signMethods)));\n        }else {\n          connectMethod = window.provider.openModal(connectData);\n        }\n      } else {\n        if (this.universalToTG){\n          connectData.sessionConfig = {\n            useMini:true,\n            openUniversalUrl:true,\n            tmaReturnUrl:'back'\n          }\n        }else{\n          connectData.sessionConfig = {\n            redirect: selectedReturnStrategy\n          }\n        }\n        if (signMethods && signMethods.length>0){\n          connectMethod = window.provider.connectAndSign(connectData,JSON.parse(JSON.stringify(signMethods)));\n        }else {\n          connectMethod = window.provider.connect(connectData);\n        }\n      }\n\n      await connectMethod\n        .then((result) => {\n          // 2. set defaul chain\n          this.walletAddress = \"connected\";\n          if (this.isPC()) {\n            this.showModal = false;\n          }\n          if (result){\n            this.testboc = JSON.stringify(result)\n          }\n\n          if (window.provider.session && window.provider.session.namespaces){\n            let ton = window.provider.session.namespaces[\"ton\"];\n          console.log(\"是否包含ton\",ton)\n            if (ton){\n              this.tonUniversalLog()\n            }\n          }\n        })\n        .catch((error) => {\n          if (error.code == 301) {\n            setTimeout(() => {\n              alert(error.message)\n            }, 0.5);\n          } else if (error.message){\n            alert(error.message)\n          }\n          console.error(\"发生了错误：\", error);\n        });\n    },\n\n    getCurrentSelectedMethodData(){// 连接签名\n      var methodList = [];\n      this.selectedMethod.forEach(method =>{\n        switch (method) {\n          case \"wallet_addEthereumChain(ETH)\":\n            methodList.push({\n              method: \"wallet_addEthereumChain\",\n              chainId:\"eip155:1\",\n              params: {\n                blockExplorerUrls: [\"https://explorer.fuse.io\"],\n                chainId: \"0x7a\",\n                chainName: \"Fuse\",\n                nativeCurrency: { name: \"Fuse\", symbol: \"FUSE\", decimals: 18 },\n                rpcUrls: [\"https://rpc.fuse.io\"],\n              },\n            })\n            break;\n          case \"personal_sign(ETH)\":\n            methodList.push(\n              {\n                method: \"personal_sign\",\n                chainId: \"eip155:1\",\n                params: [\n                  \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n                ],\n              });\n            break;\n          case \"solana_signMessage(Sol mainnet)\":\n            methodList.push(\n              {\n                \"chainId\": \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n                \"method\": \"solana_signMessage\",\n                \"params\": {\n                  \"message\": \"Hello Solana\",\n                }\n              }\n            );\n            break;\n          case \"sui_signMessage(Sui mainnet)\":\n          case \"sui_signPersonalMessage(Sui mainnet)\": {\n            let suiData = [\n              76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n              109, 111, 118, 101,\n            ];\n            let uint8Array = new Uint8Array(suiData);\n            let currentMethod = \"sui_signMessage\";\n            this.currentSuiTransaction = {\n              message:uint8Array\n            }\n\n            if(method.startsWith(\"sui_signPersonalMessage\")){\n              currentMethod = \"sui_signPersonalMessage\";\n            }\n            methodList.push(\n                {\n                  method: currentMethod,\n                  chainId: \"sui:mainnet\",\n                  params: {\n                    message: uint8Array,\n                  }\n                }\n            );\n            break;\n          }\n          case \"btc_signMessage(BTC)\":\n            methodList.push(\n              {\n                method: \"btc_signMessage\",\n                chainId: \"btc:mainnet\",\n                params: {\n                  message: \"Welcome to BTC\"\n                }\n              }\n            )\n            break;\n          case \"aptos_signMessage(aptos mainnet)\":\n            methodList.push(\n              {\n                \"chainId\": \"aptos:mainnet\",\n                \"method\": \"aptos_signMessage\",\n                \"params\": {\n                  address: true,\n                  application: true,\n                  chainId: true,\n                  message: \"Hello Aptos\",\n                  nonce: \"1234\"\n                }\n              }\n            )\n            break;\n          case \"cosmos_signArbitrary(cosmoshub)\":\n            methodList.push(\n                {\n                  \"chainId\": \"cosmos:cosmoshub-4\",\n                  \"method\": \"cosmos_signArbitrary\",\n                  \"params\": {\n                    message: \"test cosmos\"\n                  }\n                }\n            )\n\n            break;\n          case \"test_noSupport_eth(ETH)\":\n            methodList.push(\n                {\n                  chainId: \"eip155:1\",\n                  method: \"test_noSupport_eth\",\n                  params: {\n                    message: \"test hello\",\n                  }\n                }\n            )\n            break;\n          case \"sync_all_addresses\":\n            methodList.push(\n                {\n                  method: \"sync_all_addresses\",\n                });\n            break;\n          case \"tron_signMessage\":\n            methodList.push(\n                {\n                  chainId:\"tron:mainnet\",\n                  method: \"tron_signMessage\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n          case \"tron_signMessageV2\":\n            methodList.push(\n                {\n                  chainId:\"tron:mainnet\",\n                  method: \"tron_signMessageV2\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n\n            //\n          case \"starknet_signMessage\": {\n            const signData = {\n              \"domain\": {\n                \"chainId\": \"0x534e5f4d41494e\",\n                \"name\": \"STRKFarm\",\n                \"version\": \"1\"\n              },\n              \"message\": {\n                \"document\": \"app.strkfarm.xyz/tnc/v1\",\n                \"message\": \"Read and Agree T&C\"\n              },\n              \"primaryType\": \"Tnc\",\n              \"types\": {\n                \"StarkNetDomain\": [\n                  {\n                    \"name\": \"name\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"version\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"chainId\",\n                    \"type\": \"felt\"\n                  }\n                ],\n                \"Tnc\": [\n                  {\n                    \"name\": \"message\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"document\",\n                    \"type\": \"felt\"\n                  }\n                ]\n              }\n            }\n            methodList.push({\n              chainId:\"starknet:mainnet\",\n              method: \"starknet_signMessage\",\n              params: {\n                accountAddress: \"\",\n                typedData: signData\n              }\n            })\n          }\n            break\n          default:\n\n            break;\n        }\n      })\n      this.selectedMethodData = methodList\n      return methodList\n\n    },\n\n    closeModal() {\n      this.showModal = false;\n    },\n\n    isPC() {\n      const userAgentInfo = navigator.userAgent;\n      console.log(\"current device ua is ===>\", userAgentInfo);\n\n      const Agents = [\n        \"Android\",\n        \"iPhone\",\n        \"SymbianOS\",\n        \"Windows Phone\",\n        \"iPad\",\n        \"iPod\",\n      ];\n      let flag = true;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = false;\n          break;\n        }\n      }\n      return flag;\n    },\n    isSafariOrChrome() {\n      const userAgentInfo = navigator.userAgent;\n      const Agents = [\"Safari\", \"Chrome\"];\n      let flag = false;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = true;\n          break;\n        }\n      }\n      return flag;\n    },\n\n    /// solana\n    async sol_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      try {\n        let data = {\n          method: \"solana_signMessage\",\n          params: {\n            message: \"Hello Solana\",\n            pubkey: \"\",\n          },\n        };\n        this.testTransaction = JSON.stringify(data);\n        let provider = new OKXSolanaProvider(window.provider);\n\n        let message = await provider.signMessage(\n            \"Hello Solana\",\n            this.selectedChain\n        );\n        console.log(\"solana_signMessage Result:\",JSON.stringify(message))\n        const result1 = nacl.sign.detached.verify(\n            new TextEncoder().encode(\"Hello Solana\"),\n            message.signature,\n            new PublicKey(message.publicKey).toBytes()\n        );\n        console.log(result1)\n\n        if (typeof message == \"string\") {\n          this.testboc = result1;\n        } else {\n          this.testboc = result1;\n        }\n      }catch (e) {\n        console.log(\"solana_signMessage error:\",JSON.stringify(e))\n        this.testboc = e.message\n      }\n\n    },\n\n    async aptos_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      let data = {\n        address: true,\n        application: true,\n        chainId: true,\n        message: \"Hello Aptos\",\n        nonce: \"1234\"\n      }\n\n      let provider = new OKXAptosProvider(window.provider)\n      let message = await provider.signMessage(data, this.selectedChain)\n      this.testTransaction = JSON.stringify(data)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n          functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async move_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async move_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n          functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n        },\n      });\n\n      // let data = {\n      //   \"arguments\": [\"100000\",[\"0\",\"0\",\"10533\"],[\"10\",\"5\",\"5\"],[\"false\",\"false\",\"true\"]],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x3\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\",\"0x73eb84966be67e4697fc5ae75173ca6c35089e802650f75422ab49a8729704ec::coin::DooDoo\",\"0x53a30a6e5936c0a4c5140daed34de39d17ca7fcae08f947c02e979cef98a3719::coin::LSD\",\"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::CurveV1\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x54cb0bb2c18564b86e34539b9f89cfe1186e39d89fce54e1cd007b8e61673a85::bin_steps::X80\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async sol_signVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(\n        provider.getAccount(\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\").address\n      );\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n         recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signTransaction(\n        transaction,\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAndSendVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n        transaction,\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllVersionedTransactions() {\n      let provider = new OKXSolanaProvider(window.provider);\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n        [transaction],\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signTransaction() {\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n         recentBlockhash: blockhash,\n      }).add(\n        SystemProgram.transfer({\n          fromPubkey: new PublicKey(provider.getAccount().address),\n          toPubkey: new PublicKey(provider.getAccount().address),\n          lamports: 1000,\n        })\n      );\n\n      this.testTransaction = safeJsonStringify(transaction)\n      let result = await provider.signTransaction(\n        transaction,\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllTransactions() {\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n        SystemProgram.transfer({\n          fromPubkey: new PublicKey(provider.getAccount().address),\n          toPubkey: new PublicKey(provider.getAccount().address),\n          lamports: \"100\",\n        })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n        [transaction],\n        this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    getSolConnect() {\n      let rpc = \"https://www.okx.com/fullnode/sol/discover/rpc\"\n      if (this.selectedChain === \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\") {\n        rpc = \"https://www.okx.com//fullnode/sol/discover/rpc\"\n      } else if (this.selectedChain === \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\"){\n        rpc = \"https://www.okx.com/fullnode/soltestnet/discover/rpc\"\n      } else if (this.selectedChain === \"svm:70000062\") {\n        rpc = \"https://www.okx.com/fullnode/sonic/testnet/discover/rpc\"\n      }\n      return rpc\n    },\n\n    async sol_signAndSendTransaction() {\n\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n        SystemProgram.transfer({\n          fromPubkey: new PublicKey(provider.getAccount().address),\n          toPubkey: new PublicKey(provider.getAccount().address),\n          lamports: \"100\",\n        })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n        transaction,\n        this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async cosmos_signArbitrary() {\n      let provider = new OKXCosmosProvider(window.provider)\n      let message = await provider.signArbitrary(this.selectedChain, provider.getAccount(this.selectedChain).address, \"test cosmos\")\n      if (typeof message == \"string\") {\n        this.testboc = message;\n      } else {\n        let isValid =  await this.cosmos_verifySignArbitrary(provider.getAccount(this.selectedChain).address,\"test cosmos\",message.signature, message.pub_key.value)\n        console.log(\"verify\",isValid)\n        this.testboc = \"verify:\" + isValid + JSON.stringify(message);\n      }\n    },\n\n    async cosmos_verifySignArbitrary(signer, data, signature, pubkey) {\n      try {\n        console.log(\"cosmos_verifySignArbitrary signer:\",signer)\n        console.log(\"cosmos_verifySignArbitrary data:\",JSON.stringify(data))\n        console.log(\"cosmos_verifySignArbitrary signature:\",signature)\n        console.log(\"cosmos_verifySignArbitrary pubkey:\",pubkey)\n\n        // 将bech32地址转换为公钥\n        const {prefix: prefixStr} = fromBech32(signer)\n\n        const signatureBuffer = Buffer.from(signature, 'base64');\n\n        const uint8Signature = new Uint8Array(signatureBuffer); // Convert the buffer to an Uint8Array\n\n        const pubKeyValueBuffer = Buffer.from(pubkey, 'base64'); // Decode the base64 encoded value\n\n        const pubKeyUint8Array = new Uint8Array(pubKeyValueBuffer); // Convert the buffer to an Uint8Array\n\n        // 验证签名\n        return await verifyADR36Amino(\n            prefixStr,\n            signer,\n            data,\n            pubKeyUint8Array,\n            uint8Signature\n        )\n      } catch (err) {\n        console.error('Verification failed:', err)\n        return false\n      }\n    },\n\n    async cosmos_signAmino(){\n      let provider = new OKXCosmosProvider(window.provider)\n      // const rpcUrl = 'https://osmosis-rpc.publicnode.com:443';\n      // const client = await StargateClient.connect(rpcUrl);\n      // const height = await client.getHeight();\n      // let address = provider.getAccount(this.selectedChain).address\n      // const sequence = await client.getSequence(address)\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      // let signDoc = makeSignDoc(\n      //     transaction.msgs,\n      //     transaction.fee,\n      //     this.selectedChain.split(\":\")[1],\n      //     transaction.memo,\n      //     transaction.accountNumber,\n      //     transaction.sequence,\n      // )\n      let signDoc = {\n        \"chain_id\": \"osmosis-1\",\n        \"account_number\": \"630104\",\n        \"sequence\": \"480\",\n        \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]},\n        \"msgs\": [{\n          \"type\": \"osmosis/poolmanager/swap-exact-amount-in\",\n          \"value\": {\n            \"sender\": \"osmo1u6lts9ng4etxj0zdaxsada6zgl8dudpgelmuyu\",\n            \"routes\": [{\n              \"pool_id\": \"1096\",\n              \"token_out_denom\": \"ibc/987C17B11ABC2B20019178ACE62929FE9840202CE79498E29FE8E5CB02B7C0A4\"\n            }, {\n              \"pool_id\": \"611\",\n              \"token_out_denom\": \"ibc/27394FB092D2ECCD56123C74F36E4C1F926001CEADA9CA97EA622B25F41E5EB2\"\n            }],\n            \"token_in\": {\"denom\": \"uosmo\", \"amount\": \"100\"},\n            \"token_out_min_amount\": \"8\"\n          }\n        }],\n        \"memo\": \"FE\",\n        \"timeout_height\": \"23603788\",\n        \"signOptions\": {\n          \"useOneClickTrading\": false,\n          \"preferNoSetFee\": true,\n          \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]}\n        }\n      }\n\n\n\n\n\n\n\n      // let signOption = {\n      //   memo: true, // optional\n      //   fee: true, // optional\n      //   gasRate: {\n      //     // optional\n      //     average: \"0.2\",\n      //     low: \"0.02\",\n      //     tiny: \"0.002\",\n      //   },\n      // }\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signAmino(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, signDoc)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    messageToBuffer(message) {\n      var buffer = Buffer.from([]);\n      try {\n        if (typeof message === \"string\") {\n          buffer = Buffer.from(message.replace(\"0x\", \"\"), \"hex\");\n        } else {\n          buffer = Buffer.from(message);\n        }\n      } catch (err) {\n        console.log(`messageToBuffer error: ${err}`);\n      }\n      return buffer;\n    },\n\n\n\n    async cosmos_signDirect() {\n      let provider = new OKXCosmosProvider(window.provider)\n\n      let signDoc = {\n        \"bodyBytes\": this.messageToBuffer(\"0x0ac1010a292f6962632e6170706c69636174696f6e732e7472616e736665722e76312e4d73675472616e736665721293010a087472616e7366657212096368616e6e656c2d301a0d0a05756f736d6f120431303030222b6f736d6f3175366c7473396e67346574786a307a64617873616461367a676c386475647067656c6d7579752a2d636f736d6f733175366c7473396e67346574786a307a64617873616461367a676c386475647067337967766a773207080410ebe3f90a3880b0bcafd18cec8218\"),\n        \"authInfoBytes\": this.messageToBuffer(\"0x0a510a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a2102446e19e94ac0e83ea896d2712507577eb39fbdd2d6ae9f0fc0b9759f1fbaba9012040a02080118e00312140a0e0a05756f736d6f1205323530303010859a11\"),\n        \"chainId\": \"osmosis-1\",\n        \"accountNumber\": \"630104\",\n      }\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signDirect(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, transaction)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    sui_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentSuiTransaction = params\n      this.currentSuiMethod = flag\n    },\n\n    btc_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentBtcTransaction = params\n      this.currentBtcMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n\n    fractal_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentFractalTransaction = params\n      this.currentFractalMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n    tron_getTransactionResult(result) {\n      if (typeof result == \"string\") {\n        this.testboc = result\n      } else {\n        this.testboc = JSON.stringify(result)\n      }\n    },\n    tron_generateTransactionParams(params){\n      if (typeof params == \"string\") {\n        this.testTransaction = params\n      } else {\n        this.testTransaction = JSON.stringify(params)\n      }\n    },\n\n    starknet_getTransactionResult(result) {\n      if (typeof result == \"string\") {\n        this.testboc = result\n      } else {\n        this.testboc = JSON.stringify(result)\n      }\n    },\n\n    starknet_generateTransactionParams(params) {\n      if (typeof params == \"string\") {\n        this.testTransaction = params\n      } else {\n        this.testTransaction = JSON.stringify(params)\n      }\n    },\n\n    handleModalsSelect(modals) {\n      selectedModals = modals;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: modals.length === 3 ? \"all\" : modals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n\n    handleReturnStrategySelect(returnStrategy) {\n      selectedReturnStrategy = returnStrategy === \"deeplink\" ? this.deeplink : returnStrategy;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      } else {\n        if (window.provider.sessionConfig) {\n          window.provider.sessionConfig.redirect = selectedReturnStrategy;\n        } else {\n          window.provider.sessionConfig = {\n            redirect: selectedReturnStrategy\n          };\n        }\n      }\n    },\n\n    handleReturnStrategyDeeplink(deeplink) {\n      console.log('handleReturnStrategyDeeplink', deeplink)\n      selectedReturnStrategy = deeplink;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: deeplink,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      } else {\n        if (window.provider.sessionConfig) {\n          window.provider.sessionConfig.redirect = deeplink;\n        } else {\n          window.provider.sessionConfig = {\n            redirect: deeplink\n          };\n        }\n      }\n    },\n\n    handleLanguageSelect(language) {\n      selectedLanguage = language;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: language,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n    handleConnectMethodsSelect() {\n      console.log(\"当前的方法 this.selectedMethod>>>>\",this.selectedMethod);\n    },\n\n    eth_verifyMessage(message, signature,ethAddress) {\n      console.log(\"eth_verifyMessage   message>>>\",message)\n      console.log(\"eth_verifyMessage   signature>>>\",signature)\n      console.log(\"eth_verifyMessage   ethAddress>>>\",ethAddress)\n      if (!message || !signature){\n        return \"\"\n      }\n      let originalMessage = message\n      if (message.startsWith(\"0x\")){\n        originalMessage = originalMessage.replace(/^0x/, '');\n        let str = '';\n        for (let i = 0; i < originalMessage.length; i += 2) {\n          const byte = originalMessage.slice(i, i + 2);\n          str += String.fromCharCode(parseInt(byte, 16));\n        }\n        originalMessage = str\n      }\n      console.log(\"eth_verifyMessage   originalMessage>>>\",originalMessage)\n\n      // const messageHash = ethers.utils.hashMessage(originalMessage);\n      const recoveredAddress = ethers.utils.verifyMessage(originalMessage, signature);\n      console.log(\"eth_verifyMessage recoveredAddress:\", recoveredAddress);\n      return recoveredAddress.toLowerCase() === ethAddress.toLowerCase();\n    },\n\n    async verifyMessage(list){ //连接验签\n\n        if (window.provider && window.provider.session && list && list.length>0){\n          let verifyList = {}\n          for (let methodItem of list){\n            if (\"result\" in methodItem && \"method\" in methodItem){\n              let requestItme = this.selectedMethodData.filter(item => item.method === methodItem.method)[0];\n              console.log(\"验证签名 请求>>>:\", JSON.stringify(requestItme));\n              console.log(\"验证签名 结果>>>:\", JSON.stringify(methodItem));\n              if (methodItem.method === \"personal_sign\"){\n                let ethAddress = await window.provider.request({ method: \"eth_requestAccounts\" },methodItem.chainId)\n                ethAddress = ethAddress[0];\n                console.log(\"验证eth 钱包地址>>>:\", ethAddress);\n                let ethMessage = requestItme.params[0]\n                console.log(\"验证eth 签名消息体>>:\", JSON.stringify(ethMessage));\n                verifyList[methodItem.method] = this.eth_verifyMessage(ethMessage,methodItem.result,ethAddress)\n              }else if(methodItem.method === \"solana_signMessage\"){\n                let solanaMessage = methodItem.result\n                if (\"signature\" in solanaMessage && \"publicKey\" in solanaMessage){\n                  const verifySol = nacl.sign.detached.verify(\n                      new TextEncoder().encode(\"Hello Solana\"),\n                      solanaMessage.signature,\n                      new PublicKey(solanaMessage.publicKey).toBytes()\n                  );\n                  verifyList[methodItem.method] = verifySol\n                }else {\n                  verifyList[methodItem.method] = false\n                }\n              }else if(methodItem.method === \"sui_signPersonalMessage\" || methodItem.method === \"sui_signMessage\"){\n                let suiResult =  this.sui_verifySignature(methodItem.result);\n                  verifyList[methodItem.method] = (await suiResult).result\n              }else if(methodItem.method === \"btc_signMessage\"){\n\n                verifyList[methodItem.method] = \"Not verified yet\"\n\n              }else if(methodItem.method === \"aptos_signMessage\"){\n                let aptosMessage = methodItem.result\n                let aptosProvider = new OKXAptosProvider(window.provider)\n                let  aptosPublicKey  = aptosProvider.getAccount(methodItem.chainId)?.publicKey\n\n                let signStr = aptosMessage.signature\n                if (signStr.startsWith(\"0x\")) {\n                  signStr = signStr.slice(2, signStr.length)\n                }\n\n                console.log(\"aptos_signMessage aptosPublicKey And signStr\",aptosPublicKey,signStr)\n                verifyList[methodItem.method] = nacl.sign.detached.verify(\n                    Buffer.from(aptosMessage.fullMessage),\n                    Buffer.from(signStr, 'hex'),\n                    Buffer.from(aptosPublicKey, 'hex'),\n                );\n              }else if(methodItem.method === \"cosmos_signArbitrary\"){\n                let cosmosProvider = new OKXCosmosProvider(window.provider)\n                let cosmosAddress = cosmosProvider.getAccount(methodItem.chainId)?.address\n                let cosmosMessage = methodItem.result\n                let isValid =  await this.cosmos_verifySignArbitrary(cosmosAddress,\"test cosmos\",cosmosMessage.signature, cosmosMessage.pub_key.value)\n                verifyList[methodItem.method] = isValid\n\n              }else if (methodItem.method === \"tron_signMessage\") {\n                let tronMessage = methodItem.result\n                let tronWeb = new TronWeb({\n                  \"fullHost\": 'https://api.trongrid.io',\n                  \"headers\": {},\n                  \"privateKey\": ''\n                })\n                let provider = new OKXTronProvider(window.provider)\n                verifyList[methodItem.method] = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), tronMessage, provider.getAccount(\"tron:mainnet\").address)\n              } else if (methodItem.method === \"tron_signMessageV2\") {\n                let tronMessage = methodItem.result\n                let tronWeb = new TronWeb({\n                  \"fullHost\": 'https://api.trongrid.io',\n                  \"headers\": {},\n                  \"privateKey\": ''\n                })\n                const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", tronMessage);\n                let provider = new OKXTronProvider(window.provider)\n\n                verifyList[methodItem.method] = base58Address === provider.getAccount(\"tron:mainnet\").address\n              }else if (methodItem.method === \"starknet_signMessage\") {\n                let res = methodItem.result\n                let signData = this.starknetPanelTypedData\n\n                const rpcProvider = new StarknetRpcProvider({ nodeUrl: \"https://free-rpc.nethermind.io/mainnet-juno/v0_7\" });\n\n                let provider = new OKXStarknetProvider(window.provider)\n                let address = provider.getAccount(\"starknet:mainnet\").address\n                let pk = \"0x123\"; /// random pk\n                const account = new StarknetAccount(rpcProvider, address, pk)\n\n                let that = this\n                account.verifyMessage(signData, res).then(function (isValid) {\n                  that.testTransaction = `Verifyed result: \\n${isValid}`\n                }).catch(function (error) {\n                  that.testTransaction = `Verifyed failed: \\n${error}`\n                })\n                verifyList[methodItem.method] = \"starknet is verifying signature...\"\n              }\n              else {\n                verifyList[methodItem.method] = \"Not verified yet\"\n\n              }\n            }else if(\"method\" in methodItem && \"error\" in methodItem) {\n              verifyList[methodItem.method] = methodItem.error\n            }\n\n          }\n\n          console.log(\"验证签名 最后的结果>>>:\", JSON.stringify(verifyList));\n          this.testTransaction = \"签名验证结果如下: \\n\" + JSON.stringify(verifyList)\n        }else {\n          console.log(\"验证签名 window.provider.session.connectMethodsReply 为空:\");\n\n        }\n\n    },\n\n    handleThemeSelect(theme) {\n      selectedTheme = theme;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: theme,\n          },\n        };\n      }\n    },\n\n    async sui_verifySignature(signatureResult) {\n      let resultObj = signatureResult\n      let result = false\n      let msg = ''\n      try {\n        /// 获取当前account\n        const adapter = new SuiAdapter(window.provider);\n        let account = adapter.getAccount()\n        console.log(`Account中获取的address：${account.address}`)\n\n        /// 验证签名\n        let pubKey = await verifyPersonalMessageSignature(this.currentSuiTransaction.message, resultObj.signature)\n        let address = pubKey.toSuiAddress()\n        console.log(`验签结果计算得到address：${address}`)\n\n        /// 对比pubKey\n        console.log(`account pubkey: ${account.publicKey}`,)\n        console.log(`result pubkey: ${pubKey.toBase64()}`)\n        result = (account.address === address) && (account.publicKey === pubKey.toBase64())\n\n        msg = `address verify: ${account.address === address}\\npublicKey verify: ${account.publicKey === pubKey.toBase64()}`\n        console.log(\"signature verify success: \", pubKey)\n      } catch (e) {\n        console.log(\"signature verify failed: \", e)\n      }\n      return {\n        result,\n        msg\n      }\n    },\n\n\n    handleRedirectSelect(input) {\n      this.redirect = input;\n    },\n\n    handleRedirectDeeplink(input) {\n      this.redirectDeeplink = input;\n    },\n\n    addRedirectParam() {\n      if (this.testTransaction) {\n        const newTransaction = JSON.parse(this.testTransaction);\n        newTransaction.redirect = this.redirect === 'deeplink' ? this.redirectDeeplink : this.redirect;\n        this.testTransaction = JSON.stringify(newTransaction);\n      }\n    },\n\n    canChainAddRedirectParam() {\n      return chainsThatCanAddRedirectParam.some((c) => this.selectedChain.startsWith(c));\n    }\n  },\n  created() {\n    // for (const eventName of Object.values(OKX_TON_CONNECTION_AND_TRANSACTION_EVENT)) {\n    //   console.log(eventName);\n    //   window.addEventListener(eventName, (event) => {\n    //     console.log(eventName,event.detail)\n    //     this.currentStatus = eventName\n    //   });\n    // }\n  },\n\n  mounted() {\n\n    var scriptTag = document.createElement(\"script\");\n    scriptTag.src = \"https://telegram.org/js/telegram-web-app.js\";\n    scriptTag.id = \"tgsdk\";\n    document.getElementsByTagName('head')[0].appendChild(scriptTag);\n\n    this.connectReady = true;\n    document.title = \"OKX Connect\";\n    this.initBtnClicked()\n\n    console.log(\"挂载成功:\")\n    if (this.$refs.starknetPanelRef) {\n      this.starknetPanelTypedData = toRaw(this.$refs.starknetPanelRef.signData)\n      console.log(\"111: \", this.starknetPanelTypedData)\n    }else {\n      console.log(\"222\")\n    }\n  },\n};\n</script>\n","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_getAccount()\">getAccount(BTC)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signMessage()\">signMessage(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_send()\">send(BTC)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendBitcoin()\">sendBitcoin(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signPsbt_up()\">signPsbt(上架NFT)</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"btc_signAndPushPsbt_up()\">signAndPushPsbt(上架NFT)</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在OKX App选择要上架的Btc NFT，点击【上架】\n        </li>\n        <li>\n          2. 弹出签名面板，点开高级选项，查看\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出上架流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendInscription()\">sendInscription(BTC)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Btc NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount\n    }\n  },\n  methods: {\n\n    btc_getAccount() {\n      this.$emit('generateTransactionParams', {}, \"btc_getAccount\")\n    },\n\n    btc_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to BTC\"\n      };\n      this.$emit('generateTransactionParams', params, \"btc_signMessage\")\n    },\n\n    btc_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"btc_send\")\n    },\n\n    btc_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"btc_sendBitcoin\")\n    },\n\n    btc_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"btc_signPsbt\")\n    },\n\n    btc_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"btc_signAndPushPsbt\")\n    },\n\n    btc_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"btc_sendInscription\")\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./BtcTransactionPanel.vue?vue&type=template&id=376d03bc&scoped=true\"\nimport script from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./BtcTransactionPanel.vue?vue&type=style&index=0&id=376d03bc&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-376d03bc\"]])\n\nexport default __exports__","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_getAccount()\">getAccount(Fractal)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signMessage()\">signMessage(Fractal)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_send()\">send(Fractal)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_sendBitcoin()\">sendBitcoin(Fractal)</el-button>\n\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signPsbt_up()\">signPsbt(上架NFT)</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_signAndPushPsbt_up()\">signAndPushPsbt(上架NFT)</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在OKX App选择要上架的Fractal NFT，点击【上架】\n        </li>\n        <li>\n          2. 弹出签名面板，点开高级选项，查看\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出上架流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_sendInscription()\">sendInscription(Fractal)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Fractal NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount\n    }\n  },\n  methods: {\n\n    fractal_getAccount() {\n      this.$emit('generateTransactionParams', {}, \"fractal_getAccount\")\n    },\n\n    fractal_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to UniSat!\\n\\nClick to sign in and accept the UniSat Terms of Service (https://unisat.io/terms-of-service.html) and Privacy Policy (https://unisat.io/privacy-policy.html).\\n    \\nThis request will not trigger a blockchain transaction.\\n    \\nYour authentication status will reset after 24 hours.\\n    \\nWallet address:\\nbc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\\n    \\nNonce:\\n162d70e3-8c21-4cfd-9a22-9bf0a4b7be51\\n\"\n      };\n      this.$emit('generateTransactionParams', params, \"fractal_signMessage\")\n    },\n\n    fractal_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_send\")\n    },\n\n    fractal_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_sendBitcoin\")\n    },\n\n    fractal_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"fractal_signPsbt\")\n    },\n\n    fractal_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"fractal_signAndPushPsbt\")\n    },\n\n    fractal_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"fractal_sendInscription\")\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./FractalTransactionPanel.vue?vue&type=template&id=fb2f7e38&scoped=true\"\nimport script from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./FractalTransactionPanel.vue?vue&type=style&index=0&id=fb2f7e38&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-fb2f7e38\"]])\n\nexport default __exports__","<script>\n\nimport {getFullnodeUrl, SuiClient} from \"@mysten/sui/client\";\nimport {Transaction as SuiTransaction} from '@mysten/sui/transactions';\n\nexport default {\n  name: \"SuiTransactionPanel\",\n  methods: {\n    sui_getAccount() {\n      this.$emit('generateTransactionParams', '', \"sui_getAccount\")\n    },\n\n    //对单个交易签名（不发送)\n    async sui_signMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signMessage\")\n    },\n\n    async sui_signPersonalMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signPersonalMessage\")\n    },\n\n    sui_signTransaction2() {\n      // 定义要转移的金额和目标地址\n      const amount = 109; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    async sui_requestRpc() {\n      let provider = window.provider;\n      provider.setDefaultChain(\n          `sui:mainnet`,\n          `https://fullnode.mainnet.sui.io:443`\n      );\n      var data = {\n        method: \"suix_getBalance\",\n        params: [\n          \"0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae\",\n          \"0x168da5bf1f48dafc111b0a488fa454aca95e0b5e::usdc::USDC\",\n        ],\n      };\n\n      this.$emit(\"generateTransactionParams\", data, \"sui_testRpc\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 102; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signAndExecuteTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n      this.$emit(\"generateTransactionParams\", input, \"sui_signAndExecuteTransaction\")\n    },\n\n    /// generate txBytes and txSerialize\n    async generateTsBytesAndSerizlize(input) {\n      /// txBytes and txSerialize may be constructed in advance by the dapp side\n      let resultTuple = [\"\", \"\"];\n      if (\n          \"txBytes\" in input &&\n          input.txBytes.length > 0 &&\n          \"txSerialize\" in input &&\n          input.txSerialize.length > 0\n      ) {\n        resultTuple = [input.txBytes, input.txSerialize];\n      }\n\n      /// Otherwise, a transactionBlock parameter is required.\n      if (!(\"transactionBlock\" in input)) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      // if (this.walletAddress != \"connected\") {\n      //   alert(\"请先连接钱包\");\n      //   return new Promise((resolve) => {\n      //     resolve(resultTuple);\n      //   });\n      // }\n\n      let senderAccounts = window.provider.requestAccountsWithNamespace(\"sui\");\n      if (senderAccounts.length == 0) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      try {\n        let rpcUrl = getFullnodeUrl(\"mainnet\");\n        rpcUrl = \"https://www.okx.com/fullnode/sui/discover/rpc\"\n        const suiClient = new SuiClient({ url: rpcUrl });\n\n        /// sender is required\n        input.transactionBlock.setSender(senderAccounts[0]);\n        const result = await input.transactionBlock.build({\n          client: suiClient,\n        });\n        const txBytes = Buffer(result).toString(\"base64\");\n        const txSerialize = await SuiTransaction.from(txBytes).toJSON();\n        resultTuple = [txBytes, txSerialize];\n      } catch (error) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      return new Promise((resolve) => {\n        resolve(resultTuple)\n      })\n    },\n\n    //签名并发送交易\n    sui_signAndExecuteTransaction() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n        \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.testTransaction = JSON.stringify(input);\n      this.currentSuiTransaction = input;\n      this.currentSuiMethod = \"sui_signAndExecuteTransaction\";\n    },\n  },\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_getAccount()\">getAccount(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signMessage()\">signMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signPersonalMessage()\">signPersonalMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signTransaction2()\">signTransaction(Sui)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signAndExecuteTransaction()\">sendTransaction(Sui)</el-button>\n      <div style=\"font-size: 12px; color: gray;\">(send to Rally Tiger account)</div>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_requestRpc()\">RPC_getBalance</el-button>\n      <div style=\"font-size: 12px; color: gray;\">get USDC balance of address:</div>\n      <div style=\"font-size: 12px; color: gray\">0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae</div>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signTransaction_pre_execution()\">signTransaction(prepared data)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signAndExecuteTransaction_pre_execution()\">sendTransaction(prepared data)</el-button>\n    </el-col>\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./SuiTransactionPanel.vue?vue&type=template&id=56a8eddf&scoped=true\"\nimport script from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./SuiTransactionPanel.vue?vue&type=style&index=0&id=56a8eddf&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-56a8eddf\"]])\n\nexport default __exports__","<script>\nimport { OKXStarknetProvider } from \"@okxconnect/universal-provider\";\nimport { CallData, uint256, RpcProvider, Account } from \"starknet\";\n\nexport default {\n  name: \"StarknetTransactionPanel\",\n  methods: {\n    async starknet_signMessage() {\n      this.address = this.getCurrentAddress()\n      if (this.address === \"\") {\n        alert(\"address can't be ''\");\n        return\n      }\n\n      let signData = this.signData\n      this.$emit(\"generateTransactionParams\", JSON.stringify(signData))\n      let provider = new OKXStarknetProvider(window.provider)\n      let res = await provider.signMessage(this.address, signData, \"starknet:mainnet\")\n      if (res.code) {\n        if (res.code == 301) {\n          let msg = \"Wallet address is registering, please try again later!\"\n          alert(msg)\n          this.$emit(\"generateTransactionResult\", msg, \"starknet_signMessage\")\n        }\n        this.$emit(\"generateTransactionResult\", res, \"starknet_signMessage\")\n        return\n      }\n      console.log(res)\n\n      const rpcProvider = new RpcProvider({ nodeUrl: \"https://free-rpc.nethermind.io/mainnet-juno/v0_7\" });\n      let pk = \"0x123\"; /// random pk\n      const account = new Account(rpcProvider, this.address, pk)\n      let that = this\n      account.verifyMessage(signData, res).then(function (isValid) {\n        that.$emit(\"generateTransactionResult\", \"verify:\" + isValid + \"\\n\" + res, \"starknet_signMessage\")\n      }).catch(function (error) {\n        that.$emit(\"generateTransactionResult\", \"failed:\" + error + \"\\n\" + res, \"starknet_signMessage\")\n      })\n    },\n\n    async starknet_sendTransaction() {\n      this.address = this.getCurrentAddress()\n      if (this.address === \"\") {\n        alert(\"address can't be ''\");\n        return\n      }\n\n      let val = uint256.bnToUint256(120000000000000000)\n      const transferCalldata = CallData.compile({\n        to: \"0x00b909cefa36ab6bc26f5887a867e46ef162238f0a171b1c2974b665afd4237f\",\n        value: val\n      })\n\n      // const ETHTokenAddress = \"0x049d36570d4e46f48e99674bd3fcc84644ddd6b96f7c741b1562b82f9e004dc7\"\n      // const STARKTokenAddress = \"0x04718f5a0fc34cc1af16a1cdee98ffb20c31f5cd61d6ab07201858f4287c938d\"\n      const DAITokenAddress = \"0x00da114221cb83fa859dbdb4c44beeaa0bb37c7537ad5ae66fe5e0efd20e6eb3\"\n\n      const invokeParams = {\n        calls: [\n          {\n            contract_address: DAITokenAddress,\n            entry_point: \"transfer\",\n            calldata: transferCalldata\n          }\n        ],\n      }\n\n      this.$emit(\"generateTransactionParams\", JSON.stringify(invokeParams))\n      let provider = new OKXStarknetProvider(window.provider)\n\n      let that = this\n      provider.sendTransaction(this.address, invokeParams, \"starknet:mainnet\").then(function(res){\n        console.log(\"starknet_sendTransaction result \", res)\n        that.$emit(\"generateTransactionResult\", res, \"starknet_sendTransaction\")\n      }).catch(function(error) {\n        if (error.code == 301) {\n          let msg = \"Wallet address is registering, please try again later!\"\n          alert(msg)\n          that.$emit(\"generateTransactionResult\", msg, \"starknet_sendTransaction\")\n        }else {\n          that.$emit(\"generateTransactionResult\", error, \"starknet_sendTransaction\")\n        }\n      });\n    },\n\n    getCurrentAddress() {\n      let provider = new OKXStarknetProvider(window.provider)\n      const address = provider.getAccount(\"starknet:mainnet\")?.address\n      return address\n    },\n\n    getPublicKey() {\n      let provider = new OKXStarknetProvider(window.provider)\n      const account = provider.getAccount(\"starknet:mainnet\")\n      console.log(\"获取到的account是：\")\n      console.log(account)\n      return \"05d8e5e9c1dd686246716c888159271d2f13986cb4acee46164e2c4e034629c0\"\n    }\n  },\n\n  data() {\n    const signData = {\n        \"domain\": {\n          \"chainId\": \"0x534e5f4d41494e\",\n          \"name\": \"STRKFarm\",\n          \"version\": \"1\"\n        },\n        \"message\": {\n          \"document\": \"app.strkfarm.xyz/tnc/v1\",\n          \"message\": \"Read and Agree T&C\"\n        },\n        \"primaryType\": \"Tnc\",\n        \"types\": {\n          \"StarkNetDomain\": [\n            {\n              \"name\": \"name\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"version\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"chainId\",\n              \"type\": \"felt\"\n            }\n          ],\n          \"Tnc\": [\n            {\n              \"name\": \"message\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"document\",\n              \"type\": \"felt\"\n            }\n          ]\n        }\n    }\n\n    return {\n      signData\n    }\n  }\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"starknet_signMessage()\">signMessage</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 验签不成功的话，请尝试连接VPN\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"starknet_sendTransaction(true)\">\n        sendTransaction\n      </el-button>\n\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 发送0.12个DAI到0x00b9...4237f的地址\n        </li>\n        <li>\n          2. 请保证你的钱包有足够的DAI\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./StarknetTransactionPanel.vue?vue&type=template&id=082fda2b&scoped=true\"\nimport script from \"./StarknetTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./StarknetTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./StarknetTransactionPanel.vue?vue&type=style&index=0&id=082fda2b&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-082fda2b\"]])\n\nexport default __exports__","<script>\n\n\nimport {OKXTronProvider} from \"@okxconnect/universal-provider\";\nimport {TronWeb} from \"tronweb\";\n\nexport default {\n  name: \"TronTransactionPanel\",\n  methods: {\n\n    async tron_signMessage() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessage(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n\n      const verify = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), res, provider.getAccount(\"tron:mainnet\").address)\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" + res, \"tron_signMessage\")\n    },\n\n    async tron_signMessageV2() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessageV2(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", res);\n      console.log(\"tron_signMessageV2_base58Address\", base58Address)\n      console.log(\"tron_signMessageV2_address\", provider.getAccount(\"tron:mainnet\").address)\n      const verify = base58Address === provider.getAccount(\"tron:mainnet\").address\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" +  res, \"tron_signMessage\")\n    },\n\n    async tron_signTransaction(isOnlySign) {\n      let provider = new OKXTronProvider(window.provider)\n        let tronWeb = new TronWeb({\n          \"fullHost\": 'https://api.trongrid.io',\n          \"headers\": {},\n          \"privateKey\": ''\n        })\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const transaction = await tronWeb.transactionBuilder.sendTrx(\"TGBcVLMnVtvJzjPWZpPiYBgwwb7th1w3BF\", 1000, address);\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let res = await provider.signTransaction( transaction, \"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", res, \"tron_signTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async getContract() {\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41b4a428ab7092c2f1395f376ce297033b3bb446c1\"\n      \n      try {\n        const contract = await tronWeb.trx.getContract(contractAddress)\n        const abi = contract.abi.entrys;\n        console.log(\"获取到的合约：\")\n        console.log(abi)\n      } catch (error) {\n        console.log(\"Error getting contract ABI:\", error);\n      }\n    },\n    \n    async tron_signAndSendTransactionContract(isOnlySign) {\n      // this.getContract()\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41e95812d8d5b5412d2b9f3a4d5a87ca15c5c51f33\"\n      let provider = new OKXTronProvider(window.provider)\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const parameter = [\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n      ]\n      const ret = await tronWeb.transactionBuilder.triggerSmartContract(contractAddress, \"quote(uint256,uint256,uint256)\", {}, parameter, address);\n      console.log(\"=====>transaction: \")\n      console.log(ret);\n      this.$emit(\"generateTransactionParams\", ret.transaction)\n      if (isOnlySign) {\n        let tx = await provider.signTransaction( ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async tron_signAndSendTransactionApprove(isOnlySign) {\n      let contractAddress = \"41b4a428ab7092c2f1395f376ce297033b3bb446c1\"\n      let provider = new OKXTronProvider(window.provider)\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const parameter = [\n        {type: 'address', value: contractAddress},\n        {type: 'uint256', value: 1000},\n      ]\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      const ret = await tronWeb.transactionBuilder.triggerSmartContract(contractAddress, \"approve(address,uint256)\", {}, parameter, address);\n\n      let transaction = ret.transaction\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let tx = await provider.signTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n\n    }\n\n  }\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessage()\">tron_signMessage</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessageV2()\">tron_signMessageV2</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(true)\">\n        tron_signTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(true)\">\n        tron_signTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(true)\">\n        tron_signTransaction(Approve)\n      </el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(false)\">\n        tron_signAndSendTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(false)\">\n        tron_signAndSendTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(false)\">\n        tron_signAndSendTransaction(approve)\n      </el-button>\n    </el-col>\n\n\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./TronTransactionPanel.vue?vue&type=template&id=55a13ab0&scoped=true\"\nimport script from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./TronTransactionPanel.vue?vue&type=style&index=0&id=55a13ab0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-55a13ab0\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=bde97e88&scoped=true\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=bde97e88&scoped=true&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-bde97e88\"]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport ElementPlus from 'element-plus'\nimport 'element-plus/dist/index.css'\nimport App from './App.vue'\n\nconst app = createApp(App)\n\napp.use(ElementPlus)\napp.mount('#app')","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? function(obj) { return Object.getPrototypeOf(obj); } : function(obj) { return obj.__proto__; };\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(function(key) { def[key] = function() { return value[key]; }; });\n\t}\n\tdef['default'] = function() { return value; };\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkokxconnectdemo\"] = self[\"webpackChunkokxconnectdemo\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(42350); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["require","Object","defineProperty","exports","value","AptosUtils","getTransaction","o","transaction","rawTransaction","payload","entryFunction","typeArgs","type_args","typeArguments","Array","forEach","typeTag","push","toString","realArguments","this","getTypeArguments","args","i","arguments","function","module_name","address","data","name","identifier","function_name","type","type_arguments","getArguments","array","j","length","y","values","subArray","dealArrayElements","e","Uint8Array","t","isArray","r","n","assign","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","next","rejected","result","done","then","apply","OKXAptosProvider","buffer_1","AptosUtils_1","core_1","constructor","provider","chainsSet","Set","getConnectedNamespace","defaultNetwork","network","requestDefaultChainWithNamespace","NameSpaceKeyAptos","currentChainId","getRealChainId","chainId","size","Error","_a","_b","_c","session","namespaces","chains","chain","add","getAccount","_d","_e","_f","_g","_h","_j","account","accounts","filter","startsWith","logDebug","accountArray","split","console","log","extra","publicKey","undefined","substring","signMessage","realChain","prefix","message","nonce","fullMessage","application","window","location","protocol","hostname","buffer","Buffer","from","hex","bufferToHex","injectParams","signedMessage","request","successData","signStr","slice","signature","error","signTransaction","tx","signAndSubmitTransaction","buf","OKXAptosProvider_1","enumerable","get","CONNECT_METHOD_BATCH_FETCHMSG","CONNECT_METHOD_FETCHMSG","CONNECT_METHOD_RECEIVE","CONNECT_METHOD_UNSUB","CONNECT_METHOD_SUB","CONNECT_METHOD_PUBLISH","CONNECT_METHOD_LOGIN","CONNECT_METHOD_PUSH","__createBinding","create","m","k","k2","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","__setModuleDefault","v","__importStar","ownKeys","getOwnPropertyNames","ar","prototype","hasOwnProperty","call","mod","OKXWalletConnector","constants_1","storageconstants_1","storage_1","utils_1","utils_2","eventemitter3_1","protocol_1","report_1","WS","resolveWebSocketImplementation","url","events","EventEmitter","state","ConnectorState","InitState","selectedUrlIndex","retryCount","timeOutLimit","checkWSUrl","heartbeatTimer","connectionTimeoutTimer","connectURLStorage","Storage","OKXCONNECTOR_CACHE_KEY","connecting","Connecting","onPayload","rsp","Date","now","emit","onClose","event","socket","code","onError","id","msg","onopen","onmessage","onclose","Connected","emitError","errorEvent","heartbeat","clearTimeout","OnError","readyState","WebSocket","OPEN","send","setTimeout","bind","tryRegistOpen","logError","registOpen","inRetry","toUTCString","URLSearchParams","startTimeOutTimer","hasBuiltInWebSocket","onerror","close","on","resetTimeOutTimer","OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE","FINISHED","checkMaxRetry","OKXCONNECTOR_WS_URL_LIST","connectionTryNext","nextUrl","getNextSelectUrl","CANCELED","pendingSocket","TIME_OUT","reportEvent","OKXReportType","LOG","cacheSuccessUrlSelect","saveContent","onVisibleChanged","document","visibilityState","once","err","OKXConnectError","OKX_CONNECT_ERROR_CODES","CONNECTION_ERROR","connect","removeEventListener","addEventListener","disconnect","Disconnected","currentStatus","addListener","decrypt","success","failed","listenPayloadHandler","removeListener","parsedEvent","safeJsonParse","params","rawMsg","failHandler","addPackageParse","callback","payloadHandler","param","listener","off","doLogin","safeJsonStringify","getMsgPayloadFromHistory","tmpMsg","jsonstr","onOpen","openHandler","ConnectionManager","connect_1","commands_1","jwtconstants_1","crypto_1","jwt_1","safejson_1","log_1","url_1","appname","connectStorage","OKXCONNECTOR_CACHE_KEY_DAPP","crypto","SessionCrypto","inTMA","isInTMA","reportLog","keyPairInfo","getCachedCryptoKeyPair","jwtKeyPair","getCachedJWTKeyPair","saveJWTKeyPair","connector","OKXCONNECTOR_WS_URL_1","packageId","connectedWalletPK","currentTopic","refreshPackageId","saveCryptoKeyPair","keyPair","cacheInfo","encryptStoreMsg","OKXCONNECTOR_CRYPTO_KEY","kp","getAndDecrypt","content","clearCache","strkeyPair","toHexString","secretKey","OKXCONNECTOR_JWT_KEY","strKeyPairInfo","hexToByteArray","generateKeyPair","isWalletPKReady","makeJWT","topic","signJWT","OKXCONNECTOR_JWT_SIDE","OKXCONNECTOR_JWT_TTL","parsePackage","input_1","input","ignoreACK","sendACK","getItem","OKXCONNECTOR_TOKEN_CACHE","inputObj","messageId","sendReceive","restoreConnect","getConnectInfo","generateTopic","info","channelId","clientId","stringifyKeypair","fromRestore","timeLog","getTime","lastConnectId","cachedSenderPublicKey","OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE","jwtToken","timeOne","timeF","sendFetchAndConsumeMessages","timeTh","catch","jsonrpc","CONNECT_JSONRPC_VER","method","token","replace","parsedMessage","fail","msgObj","trimStart","sendRaw","ttl","OKXCONNECTOR_MESSAGE_TTL","msg_1","encrypt","msgId_1","success_1","msgId","reason","sendConnectSessionInfo","fetchedMessages","hasMore","receivedMsgs","timeFive","cleanCache","saveSessionContent","key","OKXCONNECTOR_SESSION_PREFIX_KEY","jsonData","getSessionContent","jsonStr","object","getCurrentConnectionReady","OKXCONNECTOR_WS_URL_IDX_KEY","OKXCONNECTOR_WS_URL_3","OKXCONNECTOR_WS_URL_2","EVENT_EMITTER_MAX_LISTENERS","Engine","iconnector_1","ws_connector_1","connectionManager_1","sessionUtils_1","connector_1","wallet_info_1","appName","connectors","useConnector","connectionManager","addConnectionListener","isInject","getConnector","InjectConnector","registerConnector","WsConnector","setConnectionManager","hasWsConnector","universalConnect","sessionConfig","connectInfoAndUrl","JSON","stringify","universalRequest","item","connectInfo","requestId","openUniversalLink","openUniversalUrl","universalConnectRequest","protocolVer","Number","tonConnectSdkVersion","dAppInfo","dappInfo","requests","redirect","base64Encoded","encodeConnectParams","openOKXLink","getOKXLink","useMini","tmaReturnUrl","openMethod","OkxwalletInjectConnector","openWallet","connectRequest","openOKXTMAWalletlinkWithFallback","useShortLink","openOKXUniversalLink","openOKXDeeplinkWithFallback","isIOS","isIos","addOnConnectResultListener","response","connectResponse","buildNameSpacesByConnectResponse","UNKNOWN_ERROR","walletName","responses","wallet","tag","OKXWalletName","OKX_APP_WALLET","OKXMiniWalletName","OKX_TG_WALLET","OKXInjectWalletName","OKX_INJECT_WALLET","find","getTag","methodsResponse","connectRequestMethods","signResponse","setUseConnector","sendSession","connectResultListener","setOnConnectResultListener","engineConnectInfo","requestAnswer","clearData","addDisconnectListener","disconnecter","getTagByappName","setConnectConnector","setSessionConnectingListener","sessionConnectingListener","restoreconnect","sessionInfo","onConnectResult","restoreconnectFromTopic","namespaceKeys","connectManagerDisconnect","jsonResponse","WalletConnectionManager","walletConnectionManager_1","engine_1","__importDefault","MULTICODEC_ED25519_LENGTH","MULTICODEC_ED25519_HEADER","MULTICODEC_ED25519_BASE","MULTICODEC_ED25519_ENCODING","DID_METHOD","DID_PREFIX","DID_DELIMITER","KEY_PAIR_SEED_LENGTH","DATA_ENCODING","JSON_ENCODING","JWT_ENCODING","JWT_DELIMITER","JWT_IRIDIUM_TYP","JWT_IRIDIUM_ALG","JWTHeaderType","decodeJSON","encodeJSON","encodeIss","decodeIss","encodeSig","decodeSig","encodeData","decodeData","encodeJWT","decodeJWT","verifyJWT","ed25519","tweetnacl_1","stringUtils_1","default","sign","str","okxtoString","okxfromString","val","publicKeyStr","join","issuer","multicodec","bytes","encoded","header","jwt","sub_1","aud_1","ttl_1","keyPair_1","sub","aud","iat","Math","floor","alg","typ","iss","exp","act","detached","verify","OKXCONNECTOR_JWT_WALLET_SIDE","buildRequestAccountNameSpacesByConnectResponse","requestAccountNameSpaces","universalResponse","filterAccount","namespace","ton_addr","tonAddress","tonProof","ton_proof","addresses","methods","addressItem","addressArr","utils_3","crypto_js_1","subKey","beforeKey","localStorage","resolveLocalStorage","checkAndUpgradeCache","storeKey","cipherIV","cacheStr","cacheKey","cache","cacheObj","fromCacheKey","toCacheKey","setItem","removeItem","timestamp","saveItem","localKey","totalCacheStr","getCachedPBKDF2InfoKey","pwLen","saltLen","pw","iv","salt","OKXCONNECTOR_STORAGER_CRYPTO_SALT","randomBytes","OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD","OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV","ivBuffer","PBKDF2","iterations","storeInfo","AES","enc","Utf8","OKXCONNECTOR_STORAGE_CIPHER_METHOD","OKXCONNECTOR_TON_KEY","WalletConnectionManagerEvent","WalletConnectionManagerTopicInfoCacheKey","RECEIVE_REQUEST","walletConnectionConstants_1","communicateEvents","sessionCryptoInfoMap","Map","inLogin","isLogined","offset","topicId","isTopicPublicKeyExist","timestampStr","parseInternalMsg","internalMsg","internalObj","origin","originContent","base64decode","updateClientId","cid","lastCheck","getLastSixMd5Hash","dappPublicKey","syncCacheSessionInfo","topic_1","_k","_l","isInternalData","inner_message","inner_topic","messageObj","sessionInfoString","base64Content","inner_connection","toObject","decryptWallet","recovrySessionInfoFromCache","cacheMap","topicItem","cryptoItem","cryptoKeyPair","set","cacheSessionInfo","sync","duplicatedTopics","includes","delete","appendTopic","sessionPublicKey","subscribeTopics","confirmAppendingTopics","keys","getSessionPublicKey","getCurrentCachedTopicIdList","needPublicKey","useRaw","connectedDappPK","cryptoObject","encryptWallet","sendUnsubscribe","sendBatchFetchAndConsumeMessages","topicIdList","topics","withInternalData","finishCount","idx","AppwalletConnector","instance","super","walletNameKey","shortUniversalLink","appConnectEncodeParams","appDeepLink","getAppWalletDeepLink","isOS","openDeeplinkWithFallback","stackDeepLink","openLinkBlank","standardUniversalLink","TgwalletConnector","appwallet_connector_1","inject_connector_1","tgwallet_connector_1","okxwallet_inject_connector_1","provider_1","SolProvider_1","AptosPrivider_1","media_1","disconnectListener","providerMap","enable","NameSpaceKeyEip155","Eip155Provider","NameSpaceKeySOL","SolProvider","AptosProvider","getInjectProvider","nameSpace","mapKey","entries","BAD_REQUEST_ERROR","okxwallet","requestAccounts","version","getVersion","platform","navigator","appVersion","maxProtocolVersion","responseItem","getAccountByRequestWallets","requiredNamespaces","optionalNamespaces","getRequestId","newRequest","onAck","injectProvider","USER_REJECTS_ERROR","errorResponse","CHAIN_NOT_SUPPORTED","_","allReady","every","namespaceKey","connectReady","toJSON","isDevice","namespacesKey","connectWalletNameSpace","accountsItem","sessionAccounts","areEqual","sort","index","needPop","walletInfo","accountResult","walletInfoItem","requestWallets","allNameSpace","walletInfoFirst","itemResult","parseConnectResponse","encodeTGParams","encodeTWAConnectURLParams","tgUrl","getTelegramWalletTWAUrl","pendingRequests","getDefaultReporter","beginReport","handleResponse","bindRequestForPromise","clear","nonceLength","sessionKeyPair","createKeypairFromString","createKeypair","box","createNonce","receiverPublicKey","encodedMessage","TextEncoder","encode","encrypted","concatInfo","concatUint8Arrays","hexResult","encodedResult","base64encode","senderPublicKey","messageByteArray","toUint8Array","internalMessage","splitToUint8Arrays","decrypted","open","TextDecoder","decode","__exportStar","p","hasOKXInjectedProvider","getWindowProviderNamespace","providerSearch","property","path","_provider","AptosMethods","SOLANAMethods","Eip55Methods","InjectUtils_1","aptos","hash","METHOD_NOT_SUPPORTED","resotreConnect","connectRequestWalletResponse","connectChain","chainStr","selectedAddress","coinType","nameSpaceResponse","bs58_1","solana","bufferResult","injectResult","allResult","signAllTransactions","signAndSendResult","signAndSendTransaction","namespaceChainId","ethParams","typedDataJson","switchChainId","parseInt","resultSwitch","getChainId","chainHex","resultMe","currentChain","TON_CHAINS","COSMOS_CHAINS","APTOS_CHAINS","SUI_CHAINS","SOLANA_CHAINS","BTC_CHAINS","MAINNET","FRACTAL","TESTNET","SONIC_TESTNET","COSMOS_MAINNET","IEngine","ISignClient","ISignClientEvents","IEngineEvents","client","creatOKXInjectWalletInfo","creatOKXMiniAppWalletInfo","creatOKXWalletInfo","getBigIntRpcId","formatJsonRpcRequest","isJsonRpcError","isJsonRpcResponse","parseConnectionError","isHttpUrl","formatJsonRpcError","json_rpc_1","isJsonRpcPayload","isJsonRpcRequest","isJsonRpcResult","payloadId","formatJsonRpcResult","isReservedErrorCode","getError","getErrorByCode","formatErrorMessage","isWsUrl","okx_connect_error_1","IncrementalRandomGenerator","bits","Uint16Array","Uint32Array","initialValue","getNextValue","uint8Generator","uint16Generator","date","BigInt","RESERVED_ERROR_CODES","STANDARD_ERROR_MAP","DEFAULT_ERROR","match","INTERNAL_ERROR","SERVER_ERROR","getUrlProtocol","matches","RegExp","matchRegexProtocol","regex","test","CONNECT_ITEM_ERROR_CODES","TONCHAIN","connect_wallet_1","connect_event_1","getTestTwaUrl","okxTesttwaUrl","getTestTgTwaUrl","okxTestTgtwaUrl","tgwalletAppName","tgwalletName","standardDeeplink","downloadUrl","okxDeeplink","SERVER_ERROR_CODE_RANGE","INVALID_PARAMS","METHOD_NOT_FOUND","INVALID_REQUEST","PARSE_ERROR","getDefaultMessageByCode","setPrototypeOf","ALREADY_CONNECTED_ERROR","NOT_CONNECTED_ERROR","UNKNOWN_APP_ERROR","USER_REJECTS_ERROR_CAUSE_REGISTER","NameSpaceKeyStarknet","NameSpaceKeyTron","NameSpaceKeyCosmos","NameSpaceKeyBtc","NameSpaceKeySui","NameSpaceKeyTON","misc_1","chains_1","callForSuccess","fn","options","attempts","delayMs","lastError","delay","timeout","signal","aborted","timeoutId","checkMetaData","versionCompare","isBrowser","isMobileUserAgent","openLink","toSafeBase64FromBase64","isValidObject","getAppWalletShortDeepLink","encodeTelegramUrlParameters","isTelegramUrl","openOKXDeeplink","getUniversalLink","logWarning","call_for_success_1","web_api_1","tma_api_1","request_1","debug","forceReport","defaultReporter","OKXReporter","packageJson","okxLogDebug","reduce","sendRecordContent","warn","action","content_1","mediaNotTouch","mediaTouch","maxWidth","media","mediaMin","mediaMax","mediaMinMax","device","getWindow","isTmaPlatform","width","innerWidth","tablet","mobile","isMobile","isTelegram","TelegramWebviewProxy","maxTouchPoints","px","pxMin","pxMax","OKXReportSide","versionStr","cross_fetch_1","localforage_1","reportApiList","reportCacheKey","reportUUIDKey","MAX_LIMIT_REPORTCOUNT","DEFAULT_HTTP_HEADERS","Accept","DEFAULT_HTTP_METHOD","DEFAULT_FETCH_OPTS","headers","PAGE_IN","PAGE_OUT","CLICK","DAPP","WALLET","fetchListWithTimeout","urls_1","args_1","urls","controller","AbortController","fetchPromise","timeoutPromise","abort","race","ok","status","currentSide","currentVersion","storage","createInstance","recordList","currentUUID","configVersionAndSide","side","recordCacheKey","reportPlatform","startErrorCatching","records","uuid","sendCachedRecords","cachedErrors","sendRecord","record","body","res","pathname","language","ua","userAgent","reportItem","lang","markRecordItem","sendList","map","allSettled","results","keepIndex","splice","markRecord","Report_WalletType_Key","Report_Proceed_QRCode_Click","Report_ChooseType_Download_Click","Report_ChooseType_ConnectWallet_Click","Report_Proceed_Retry_Click","Report_ChooseType_ConnectWallet_View","Report_Loading_ConnectWallet_View","Report_Proceed_QRCode_View","Report_Proceed_Proceed_View","dappMetaData","icon","JSONStringify","JSONParse","json","numbersBiggerThanMaxInt","serializedData","group","parse","isCustomFormatBigInt","alloc","allocUnsafe","basics_1","string","encoding","base","BASES","decoder","encoder","createCodec","ascii","bufNum","String","fromCharCode","charCodeAt","utf8","bases","base16","latin1","binary","inTg","isInTelegramBrowser","sendExpand","sendOpenTelegramLink","initParams","locationHash","urlParseHashParams","tmaPlatform","tgWebAppPlatform","Telegram","WebApp","webAppVersion","tgWebAppVersion","platforms","isTelegramWebview","TelegramWebview","postEvent","link","fallback","URL","pathFull","search","isIframe","versionAtLeast","path_full","parent","eventType","eventData","external","notify","trustedTarget","postMessage","indexOf","_path","urlSafeDecode","qIndex","pathParam","substr","query_params","urlParseQueryString","urlencoded","decodeURIComponent","queryString","paramName","paramValue","queryStringParams","v1","v2","a","p1","p2","v1List","v2List","max","ver","removeUrlLastSlash","addPathToUrl","deeplinkUrl","useStandardUniversalLink","replaceStrWithParam","cleanUrl","deeplinkEncodeUrl","encodeURIComponent","fullUrl","newWindow","href","deepLinkOpened","timeoutDuration","fallbackToDownloadPage","parameters","encodedParameters","connectRequestStr","utf8Array","btoa","connectParam","redirectStr","okxconnect","extraparams","base64ContentStr","urlSafeBase64","twaDeepLink","openTelegramLink","RANDOM_LENGTH","hasLocalStorage","hashKey","generateRandomBytes32","tweetnacl_util_1","to_string_1","sha256_1","BASE16","hexString","byteArray","byte","buffer1","buffer2","mergedArray","subArray1","subArray2","encodeUint8Array","urlSafe","encodeBase64","decodeToUint8Array","decodeBase64","uint8Array","decodeUTF8","decodedUint8Array","encodeUTF8","scheme","global","self","randomBytes32","obj","getPrototypeOf","isIOSDevice","MSStream","isIPadOS","MD5","base64","getUserAgent","ua_parser_js_1","target","doFallback","fallbackTimeout","check","vendor","opera","getResult","osName","os","toLowerCase","deviceModel","model","browserName","browser","OKXSolanaProvider","web3_js_1","defaultChainMap","has","caip","realMessage","Transaction","VersionedTransaction","deserialize","pubkey","PublicKey","serializedMessage","serialize","requireAllSignatures","verifySignatures","getSignedTransaction","transactions","newTransactions","s","c","transactionStr","resultTx","OKXSolanaProvider_1","OKXBtcProvider","_1","getAddressForChainId","ns","checkChainId","ret","errorData","sendBitcoin","toAddress","satoshis","to","feeRate","txhash","checkParameters","signPsbt","psbtHex","signPsbts","psbtResults","psbtHexs","signAndPushPsbt","sendInscription","inscriptionId","extension","coinId","protocolId","atomicSuffix","ordinalsSuffix","endsWith","removeSuffix","scenario","txType","batchBean","coinAmount","nftId","suffix","unexistKeys","OKXCosmosProvider","algo","bech32Address","pubKey","hexToUint8Array","signArbitrary","signerAddress","signDoc","chain_id","account_number","sequence","fee","gas","amount","msgs","memo","signData","signAmino","signOptions","resData","signed","signDirect","bodyBytes","authInfoBytes","accountNumber","messageToBuffer","arr","output","x","padStart","arrayBuffer","byteValue","isNaN","OKXStarknetProvider","STARKNET_CHAIN_ID","getChain","typedData","sendTransaction","transactionData","transaction_hash","signMessageDeclareContractPayload","sendMessageExecuteTransactionDetail","calls","abis","transactionsDetail","executionRequest","OKXTonProvider","statusChangeSubscriptions","statusChangeErrorSubscriptions","tonWallet","errorsHandler","connected","tonNameSpace","walletStateInit","sessionWallet","tonDeviceInfo","features","connectItems","onStatusChange","requestAccountsWithNamespace","requestParams","OKXTronProvider","TRON_CHAIN_ID","stringToHex","signMessageV2","signedTx","realSignTx","visible","txID","rawData","contract","raw_data","expiration","ref_block_bytes","fee_limit","ref_block_hash","raw_data_hex","OKXUniversalProvider","eip155_1","sui_1","client_1","namespaces_1","solana_1","btc_1","aptos_1","ton_1","cosmos_1","tron_1","packages_1","starknet_1","init","opts","setGlobal","okxConnectUniversalinwindow","initialize","providerOpts","rpcProviders","requestParam","buildRequestParamFromRequest","getProvider","validateChain","keyArr","connectOpts","called","onRequestSent","disconnectAndEmit","cleanup","engine","aptosChainNameToGeneralId","replaceAptos","aptosNameSpace","realNS","replaceAptosInner","optionAptosNameSpace","realOptionNS","defaultChain","replaceAptosGeneralIdWithNetName","replaceSessionAptos","disconnectInner","connectAndSign","signRequest","updatedOpts","setNamespaces","onConnect","requestItem","signResponseList","okxConnectUniversalUIinwindow","creatNotSupportMethodItemReplay","syncAllAddresses","syncAddressAvailable","syncAllAddress","setDefaultChain","rpcUrl","checkStorage","sessionInfoStr","getFromStore","createProviders","registerEventListeners","SignClient","providersToCreate","parseNamespaceKey","namespacesValue","currentNameSpace","opts1","solanaProvider","sonicProvider","svmProvider","optsTon","tonProvider","optsSui","suiProvider","SuiProvider","optsBtc","btcProvider","fbProvider","aptosProvider","moveProvider","cosmosProvider","tronProvider","starknetProvider","PROVIDER_EVENTS","DEFAULT_CHAIN_CHANGED","caip2ChainId","onChainChanged","UPDATE_NAMESPACES","nameSpaces","nameSpacekey","persist","isChainNamespaceInSession","chainsArr","defaultNamespace","getDefaultChain","namespaceStr","caip2Chain","sessionProperties","showRequestModal","OKXUniversalProvider_1","OKXBtcProvider_1","OKXCosmosProvider_1","OKXTonProvider_1","OKXTronProvider_1","OKXStarknetProvider_1","ConnectMethodUtils_1","metaData","requestAccountItem","nameSpaceToConnectWalletNameSpace","SESSION_CONNECTING","connectMethodsToConnectWalletMethods","metadata","fillParamsToSession","connectMethodsResponseUpdate","openOKXWallet","allAddressStr","syncResoonseToRequire","connectSupportMethods","connectMethodsAdaptOldVersion","uint8array_extras_1","isRecord","notSupportError","errorItem","callBackParams","solAccount","account1","solAddress","fromAccountToAddress","stringToUint8Array","suiMessage","convertedArray","b64encoded","atob","btcAccounts","account2","btcAccount","btcAddress","paramData","aptosAccount","account3","aptosAddress","aptosChainId","cosmosAccount","account_cosmos","cosmosAddress","cosmosData","cosmosBase64Encoded","stringToBase64","methodItem","solanaSuccessData","suiMethod","requestMethod","suiMessageb64","aptosSignature","requireNameSpace","includeEip155","some","space","syncAddressHostAvailable","includeChain","paramsArr","firstParam","firstObj","aptosParams","currentURL","signChainId","applicationUrl","cosmosChain","responseAddressStr","allAddress","isEvm","deriveName","addr","ci","evmAddress","freeze","getAccountsChains","isCaipNamespace","mergeRpcMap","targetRpcMap","sourceRpcMap","mergeNamespaces","source","rpcMap","fixMobileBtcSession","btcNameSpace","addressType","compressedPublicKey","GENERIC_SUBPROVIDER_NAME","RPC_URL","STORAGE","CONTEXT","WC_VERSION","PROTOCOL","RELAY_URL","LOGGER","JsonRpcConnection_1","JsonRpcProvider_1","httpProviders","createHttpProviders","updateNamespace","getAccounts","setHttpProvider","http","parsedChainId","parsedRpc","getRpcUrl","httpProvider","createHttpProvider","getHttpProvider","rpc","JsonRpcProvider","JsonRpcConnection","getGlobal","BtcProvider","CosmosProvider","updateRequestParams","isDic","decimalNumber","selectedChainId","chainNum","paramsChainId","paramsChainString","adaptArray","addressObj","isEqual","chainAddress","messages","secondObj","hexChainId","getHexChainIdFromRequest","isChainApproved","configAddressAdaptInjectWallet","handleSwitchChain","addEthereumChain","resultData","rpcUrls","eip155","core_2","disableProviderPing","isAvailable","registering","register","parseError","types_1","IJSONRpcProvider","connection","hasRegisteredEventListeners","setConnection","context","requestStrict","_error","SolanaProvider","getPubkey","getWalletAddress","components","StarknetProvider","__rest","getOwnPropertySymbols","propertyIsEnumerable","TONProvider","validUntil","newParams","fromAddress","boc","TronProvider","IJSONRpcConnection","opt","globals","convertChainIdToNumber","parseChainId","mergeArrays","projectId","reference","CAIP_DELIMITER","b","okxGlobal","_createElementBlock","_hoisted_1","_createVNode","_component_el_container","_withCtx","_component_el_header","_cache","_createTextVNode","_component_el_main","_component_el_card","class","_createElementVNode","style","_component_el_row","_component_el_col","span","_toDisplayString","$options","_ctx","_component_el_checkbox","modelValue","withUI","$event","onChange","handleWithUI","universalToTG","handleUniversalToTG","_component_el_select","modals","placeholder","handleModalsSelect","multiple","_component_el_option","label","returnStrategy","handleReturnStrategySelect","_Fragment","_renderList","returnStrategies","strategy","_createBlock","_component_el_input","deeplink","handleReturnStrategyDeeplink","disabled","_createCommentVNode","handleLanguageSelect","locales","locale","theme","handleThemeSelect","THEME","LIGHT","DARK","selectedMethod","handleConnectMethodsSelect","connectMethods","tonProofValue","gutter","align","availableChains","checked","areChainsInit","isOptionalChecked","handleOptionChange","_component_el_button","onClick","initBtnClicked","connectInitStr","connectBtnClicked","connectStatusStr","syncAllAddressClick","syncAllAddressStr","disconnectAction","walletAddress","disconnectStatusStr","_Teleport","showModal","closeModal","_withModifiers","_component_qrcode_vue","qrValue","level","_component_el_tabs","activeTab","onTabClick","clickActiveTab","_component_el_tab_pane","eth_requestAccounts","eth_chainId","wallet_switchEthereumChain","wallet_addEthereumChain","personal_sign","eth_signTypedData_v4","eth_sendTransaction_transfer","eth_sendTransaction_approve","eth_sendTransaction_mint","wallet_watchAsset","ton_getAccount","ton_sendTransaction","sol_signMessage","sol_signTransaction","sol_signVersionedTransaction","sol_signAllTransactions","sol_signAllVersionedTransactions","sol_signAndSendTransaction","sol_signAndSendVersionedTransaction","_component_SuiPanel","onGenerateTransactionParams","sui_generateTransactionParams","_component_BTCPanel","btc_generateTransactionParams","_component_FractalPanel","fractal_generateTransactionParams","_component_TronTransactionPanel","tron_generateTransactionParams","onGenerateTransactionResult","tron_getTransactionResult","aptos_signMessage","aptos_signTransaction","aptos_signAndSubmitTransaction","cosmos_signArbitrary","cosmos_signAmino","cosmos_signDirect","wallet_testRpc","eth_sendTransaction_swap","move_signTransaction","move_signAndSubmitTransaction","_component_StarknetPanel","ref","starknet_generateTransactionParams","starknet_getTransactionResult","testBase64UrlSafe","xs","sm","handleRedirectSelect","canChainAddRedirectParam","redirectDeeplink","handleRedirectDeeplink","addRedirectParam","testTransaction","rows","testboc","$setup","sendBtnDisabled","testTransactionStr","btc_getAccount","btc_signMessage","sendAmount","clearable","btc_send","sendSatoshisAmount","btc_sendBitcoin","btc_signPsbt_up","btc_signAndPushPsbt_up","receiver","btc_sendInscription","props","setup","$emit","alert","autoFinalized","__exports__","fractal_getAccount","fractal_signMessage","fractal_send","fractal_sendBitcoin","fractal_signPsbt_up","fractal_signAndPushPsbt_up","fractal_sendInscription","sui_getAccount","sui_signMessage","sui_signPersonalMessage","sui_signTransaction2","sui_signAndExecuteTransaction","sui_requestRpc","sui_signTransaction_pre_execution","sui_signAndExecuteTransaction_pre_execution","recipientAddress","SuiTransaction","coin","splitCoins","transferObjects","transactionBlock","showEffects","txBytes","txSerialize","generateTsBytesAndSerizlize","resultTuple","senderAccounts","getFullnodeUrl","suiClient","SuiClient","setSender","build","currentSuiTransaction","currentSuiMethod","starknet_signMessage","starknet_sendTransaction","getCurrentAddress","rpcProvider","RpcProvider","nodeUrl","pk","Account","that","verifyMessage","isValid","uint256","bnToUint256","transferCalldata","CallData","compile","DAITokenAddress","invokeParams","contract_address","entry_point","calldata","getPublicKey","tron_signMessage","tron_signMessageV2","tron_signTransaction","tron_signAndSendTransactionContract","tron_signAndSendTransactionApprove","tronWeb","TronWeb","trx","base58Address","verifyMessageV2","isOnlySign","transactionBuilder","sendTrx","getContract","contractAddress","abi","entrys","parameter","triggerSmartContract","verifyADR36Amino","fromBech32","VConsole","allChains","chainsThatCanAddRedirectParam","optionChains","selectedModals","selectedReturnStrategy","selectedDeepLink","selectedLanguage","selectedTheme","TronTransactionPanel","QrcodeVue","BTCPanel","FractalPanel","SuiPanel","StarknetPanel","testTopic","testPublicKey","testProofPayload","pendingDeepLink","logList","localPubKey","localSecKey","selectedChain","ProofPayloadVerify","showVerifyRow","selectedMethodData","isChecked","reload","starknetPanelTypedData","computed","selectedChains","initChains","newChains","updatedChains","tab","tabName","initCall","OKXUniversalConnectUI","actionsConfiguration","uiPreferences","onModalStateChange","uri","isPC","items","testTonSdk","blockExplorerUrls","chainName","nativeCurrency","symbol","decimals","dataETH","dataPolygon","types","EIP712Domain","Person","Mail","primaryType","domain","verifyingContract","contents","maxPriorityFeePerGas","maxFeePerGas","gasPrice","gasLimit","image","tonUniversalLog","sendTransactionAlert","fetch","confirm","sendData","adapter","SuiAdapter","suiResult","signAndExecuteTransaction","sui_verifySignature","signPersonalMessage","btcAdapter","btcResult","currentBtcMethod","currentBtcTransaction","hexToBase64","bs64Str","fractalResult","currentFractalMethod","currentFractalTransaction","hexStr","blob","Blob","reader","FileReader","onload","base64Data","readAsDataURL","datatest","firstStr","showUrl","hasEip155","hasSolana","hasSui","hasBtc","hasAptos","hasTon","hasCosmos","hasTron","nameSpacesChains","optSpaceChains","solanaChains","hasStarknet","suiChains","btcChains","connectMethod","connectData","requireData","cosmos","tron","starknet","tonParams","ton","sui","btc","optData","eip155Chains","tonChains","signMethods","getCurrentSelectedMethodData","openModalAndSign","openModal","methodList","suiData","currentMethod","accountAddress","userAgentInfo","Agents","flag","isSafariOrChrome","result1","nacl","toBytes","config","AptosConfig","Network","Aptos","simple","sender","functionArguments","Connection","getSolConnect","blockhash","getLatestBlockhash","versionedTransactionMessage","TransactionMessage","payerKey","recentBlockhash","instructions","SystemProgram","transfer","fromPubkey","toPubkey","lamports","compileToV0Message","feePayer","cosmos_verifySignArbitrary","pub_key","signer","prefixStr","signatureBuffer","uint8Signature","pubKeyValueBuffer","pubKeyUint8Array","uiOptions","eth_verifyMessage","ethAddress","originalMessage","recoveredAddress","ethers","list","verifyList","requestItme","ethMessage","solanaMessage","verifySol","aptosMessage","aptosPublicKey","cosmosMessage","tronMessage","StarknetRpcProvider","StarknetAccount","signatureResult","resultObj","verifyPersonalMessageSignature","toSuiAddress","toBase64","newTransaction","created","mounted","scriptTag","createElement","src","getElementsByTagName","appendChild","title","$refs","starknetPanelRef","toRaw","render","app","createApp","App","use","ElementPlus","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","loaded","__webpack_modules__","amdO","deferred","O","chunkIds","priority","notFulfilled","Infinity","getter","d","leafPrototypes","getProto","__proto__","mode","def","current","definition","g","globalThis","Function","prop","Symbol","toStringTag","nmd","paths","children","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}