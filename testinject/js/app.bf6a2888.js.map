{"version":3,"file":"js/app.bf6a2888.js","mappings":"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","sources":["webpack://okxconnectdemo/../packages/aptos-provider/src/AptosUtils.js","webpack://okxconnectdemo/../packages/aptos-provider/src/OKXAptosProvider.js","webpack://okxconnectdemo/../packages/aptos-provider/src/index.js","webpack://okxconnectdemo/../packages/core/src/connect/commands.js","webpack://okxconnectdemo/../packages/core/src/connect/connect.js","webpack://okxconnectdemo/../packages/core/src/connect/connectionManager.js","webpack://okxconnectdemo/../packages/core/src/connect/constants.js","webpack://okxconnectdemo/../packages/core/src/connect/engine.js","webpack://okxconnectdemo/../packages/core/src/connect/index.js","webpack://okxconnectdemo/../packages/core/src/connect/jwt.js","webpack://okxconnectdemo/../packages/core/src/connect/jwtconstants.js","webpack://okxconnectdemo/../packages/core/src/connect/sessionUtils.js","webpack://okxconnectdemo/../packages/core/src/connect/storage.js","webpack://okxconnectdemo/../packages/core/src/connect/storageconstants.js","webpack://okxconnectdemo/../packages/core/src/connect/walletConnectionConstants.js","webpack://okxconnectdemo/../packages/core/src/connect/walletConnectionManager.js","webpack://okxconnectdemo/../packages/core/src/connector/appwallet-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/iconnector.js","webpack://okxconnectdemo/../packages/core/src/connector/index.js","webpack://okxconnectdemo/../packages/core/src/connector/inject-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/okxwallet-inject-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/tgwallet-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/ws-connector.js","webpack://okxconnectdemo/../packages/core/src/crypto/crypto.js","webpack://okxconnectdemo/../packages/core/src/index.js","webpack://okxconnectdemo/../packages/core/src/inject/InjectUtils.js","webpack://okxconnectdemo/../packages/core/src/inject/index.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/AptosPrivider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/SolProvider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/eip155Provider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/chains.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/engine.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/json-rpc.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/connect-event.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/connect-wallet.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/wallet-info.js","webpack://okxconnectdemo/../packages/core/src/protocol/constants.js","webpack://okxconnectdemo/../packages/core/src/protocol/error/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/error/okx-connect.error.js","webpack://okxconnectdemo/../packages/core/src/protocol/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/misc.js","webpack://okxconnectdemo/../packages/core/src/utils/call-for-success.js","webpack://okxconnectdemo/../packages/core/src/utils/index.js","webpack://okxconnectdemo/../packages/core/src/utils/log.js","webpack://okxconnectdemo/../packages/core/src/utils/media.js","webpack://okxconnectdemo/../packages/core/src/utils/report.js","webpack://okxconnectdemo/../packages/core/src/utils/reportconstants.js","webpack://okxconnectdemo/../packages/core/src/utils/request.js","webpack://okxconnectdemo/../packages/core/src/utils/safejson.js","webpack://okxconnectdemo/../packages/core/src/utils/stringUtils.js","webpack://okxconnectdemo/../packages/core/src/utils/tma-api.js","webpack://okxconnectdemo/../packages/core/src/utils/url.js","webpack://okxconnectdemo/../packages/core/src/utils/utils.js","webpack://okxconnectdemo/../packages/core/src/utils/web-api.js","webpack://okxconnectdemo/../packages/solana-provider/src/OKXSolanaProvider.js","webpack://okxconnectdemo/../packages/solana-provider/src/index.js","webpack://okxconnectdemo/../packages/tonsdk/src/index.js","webpack://okxconnectdemo/../packages/tonsdk/src/okx-connect-ton-inner.js","webpack://okxconnectdemo/../packages/tonsdk/src/okx-connect-ton.js","webpack://okxconnectdemo/../packages/tonsdk/src/parsers/rpc-parser.js","webpack://okxconnectdemo/../packages/tonsdk/src/parsers/send-transaction-parser.js","webpack://okxconnectdemo/../packages/tonsdk/src/provider/bridge-connection-storage.js","webpack://okxconnectdemo/../packages/tonsdk/src/provider/bridge/bridge-provider.js","webpack://okxconnectdemo/../packages/tonsdk/src/provider/bridge/models/bridge-connection.js","webpack://okxconnectdemo/../packages/tonsdk/src/tracker/browser-event-dispatcher.js","webpack://okxconnectdemo/../packages/tonsdk/src/tracker/index.js","webpack://okxconnectdemo/../packages/tonsdk/src/tracker/ton-connect-tracker.js","webpack://okxconnectdemo/../packages/tonsdk/src/tracker/tracker-constants.js","webpack://okxconnectdemo/../packages/tonsdk/src/tracker/types.js","webpack://okxconnectdemo/../packages/tonsdk/src/utils/address.js","webpack://okxconnectdemo/../packages/tonsdk/src/utils/constants.js","webpack://okxconnectdemo/../packages/tonsdk/src/utils/feature-support.js","webpack://okxconnectdemo/../packages/tonsdk/src/utils/index.js","webpack://okxconnectdemo/../packages/tonsdk/src/utils/url.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXBtcProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXCosmosProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXStarknetProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXTonProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXTronProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXUniversalProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/sign-client/client.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/ConnectMethodUtils.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/namespaces.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/events.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/values.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/aptos.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/btc.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/cosmos.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/eip155.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcConnection.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/solana.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/starknet.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/sui.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/ton.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/tron.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/misc.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/providers.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/globals.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/misc.js","webpack://okxconnectdemo/./src/App.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue?1b44","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue?e4fb","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue?aa83","webpack://okxconnectdemo/./src/components/StarknetTransactionPanel.vue","webpack://okxconnectdemo/./src/components/StarknetTransactionPanel.vue?1a06","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue?089a","webpack://okxconnectdemo/./src/App.vue?7ccd","webpack://okxconnectdemo/./src/main.js","webpack://okxconnectdemo/webpack/bootstrap","webpack://okxconnectdemo/webpack/runtime/amd options","webpack://okxconnectdemo/webpack/runtime/chunk loaded","webpack://okxconnectdemo/webpack/runtime/compat get default export","webpack://okxconnectdemo/webpack/runtime/create fake namespace object","webpack://okxconnectdemo/webpack/runtime/define property getters","webpack://okxconnectdemo/webpack/runtime/global","webpack://okxconnectdemo/webpack/runtime/hasOwnProperty shorthand","webpack://okxconnectdemo/webpack/runtime/make namespace object","webpack://okxconnectdemo/webpack/runtime/node module decorator","webpack://okxconnectdemo/webpack/runtime/jsonp chunk loading","webpack://okxconnectdemo/webpack/startup"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AptosUtils = void 0;\nclass AptosUtils {\n    static getTransaction(o) {\n        if (\"rawTransaction\" in o) {\n            let transaction = o;\n            if (\"entryFunction\" in transaction.rawTransaction.payload) {\n                let entryFunction = transaction.rawTransaction.payload.entryFunction;\n                let typeArgs = entryFunction.type_args;\n                let typeArguments = new Array();\n                typeArgs.forEach(typeTag => {\n                    typeArguments.push(typeTag.toString());\n                });\n                let realArguments = new Array();\n                this.getTypeArguments(entryFunction.args, realArguments);\n                let i = {\n                    arguments: realArguments,\n                    function: `${entryFunction.module_name.address.data ? entryFunction.module_name.address.toString() : entryFunction.module_name.address}::${entryFunction.module_name.name.identifier ? entryFunction.module_name.name.identifier : entryFunction.module_name.name}::${entryFunction.function_name.identifier ? entryFunction.function_name.identifier : entryFunction.function_name}`,\n                    type: \"entry_function_payload\",\n                    type_arguments: typeArguments\n                };\n                return this.getArguments(i);\n            }\n        }\n        return o;\n    }\n    static getTypeArguments(args, array) {\n        for (let j = 0; j < args.length; j++) {\n            let y = args[j];\n            if (\"values\" in y && y.values != null && y.values instanceof Array) {\n                let subArray = new Array();\n                array.push(subArray);\n                this.getTypeArguments(y.values, subArray);\n            }\n            else {\n                this.dealArrayElements(y, array);\n            }\n        }\n    }\n    static dealArrayElements(e, array) {\n        if (\"value\" in e && e.value != null) {\n            array.push(e.value.toString());\n        }\n        else if (\"data\" in e && e.data != null && e.data instanceof Uint8Array) {\n            return array.push(e.toString());\n        }\n        else {\n            return array.push(e.toString());\n        }\n    }\n    static getArguments(e) {\n        if (\"arguments\" in e) {\n            let t = e.arguments;\n            if (Array.isArray(t)) {\n                let r = new Array();\n                t.forEach(n => {\n                    if (n instanceof Uint8Array) {\n                        let o = new Array();\n                        n.forEach(i => {\n                            o.push(i);\n                        });\n                        r.push(o);\n                    }\n                    else\n                        r.push(n);\n                });\n                e = Object.assign(Object.assign({}, e), { arguments: r });\n            }\n        }\n        return e;\n    }\n}\nexports.AptosUtils = AptosUtils;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXAptosProvider = void 0;\nconst buffer_1 = require(\"buffer\");\nconst AptosUtils_1 = require(\"./AptosUtils\");\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXAptosProvider {\n    constructor(provider) {\n        this.chainsSet = new Set();\n        this.provider = provider;\n        this.getConnectedNamespace();\n    }\n    get defaultNetwork() {\n        let network = this.provider.requestDefaultChainWithNamespace(core_1.NameSpaceKeyAptos);\n        return network;\n    }\n    get currentChainId() {\n        return `aptos:${this.defaultNetwork}`;\n    }\n    getRealChainId(chainId) {\n        // if (chainId == \"aptos:mainnet\") {\n        //     return \"aptos:637\"\n        // } else if (chainId == \"movement:testnet\") {\n        //     return \"aptos:70000060\"\n        // }\n        if (chainId == null) {\n            if (this.chainsSet.size == 1) {\n                return this.currentChainId;\n            }\n            else {\n                throw new Error(\"connected to multiple aptos chains,chainId can not be null\");\n            }\n        }\n        else {\n            return chainId;\n        }\n    }\n    getConnectedNamespace() {\n        var _a, _b, _c;\n        (_c = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces) === null || _b === void 0 ? void 0 : _b['aptos']) === null || _c === void 0 ? void 0 : _c.chains.forEach(chain => {\n            this.chainsSet.add(chain);\n        });\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n        chainId = this.getRealChainId(chainId);\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['aptos']) === null || _b === void 0 ? void 0 : _b.accounts[0];\n        if (chainId != null) {\n            account = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces['aptos']) === null || _d === void 0 ? void 0 : _d.accounts.filter(function (account) {\n                return account.startsWith(chainId);\n            })[0];\n        }\n        (0, core_1.logDebug)(\"getAccount\", account);\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        console.log(\"aptos_publicKey\", (_f = (_e = this.provider.session) === null || _e === void 0 ? void 0 : _e.namespaces['aptos']) === null || _f === void 0 ? void 0 : _f.extra);\n        let extra = (_j = (_h = (_g = this.provider.session) === null || _g === void 0 ? void 0 : _g.namespaces['aptos']) === null || _h === void 0 ? void 0 : _h.extra) === null || _j === void 0 ? void 0 : _j[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n            if (publicKey != undefined && publicKey.startsWith(\"0x\")) {\n                publicKey = publicKey.substring(2);\n            }\n            console.log(\"aptos_publicKey\", publicKey);\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address,\n            publicKey: publicKey\n        };\n    }\n    signMessage(payload, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            let realChain = this.getRealChainId(chainId);\n            try {\n                let prefix = \"APTOS\";\n                let address = (_a = this.getAccount(realChain)) === null || _a === void 0 ? void 0 : _a.address;\n                let message = \"\", nonce = \"\";\n                var fullMessage = prefix;\n                let application = window.location.protocol + \"//\" + window.location.hostname;\n                if (\"address\" in payload && payload.address) {\n                    fullMessage += \"\\naddress: \" + address;\n                }\n                if (\"application\" in payload && payload.application) {\n                    fullMessage += \"\\napplication: \" + application;\n                }\n                if (\"chainId\" in payload && payload.chainId) {\n                    let chainId = 1;\n                    if (realChain == \"aptos:mainnet\") {\n                        chainId = 1;\n                    }\n                    else if (realChain == \"movement:testnet\") {\n                        chainId = 2;\n                    }\n                    fullMessage += \"\\nchainId: \" + chainId;\n                }\n                if (\"message\" in payload) {\n                    fullMessage += \"\\nmessage: \" + payload.message;\n                    message = payload.message;\n                }\n                if (\"nonce\" in payload) {\n                    fullMessage += \"\\nnonce: \" + payload.nonce;\n                    nonce = payload.nonce;\n                }\n                console.log(\"signMessage\", fullMessage);\n                const buffer = buffer_1.Buffer.from(fullMessage);\n                const hex = this.bufferToHex(buffer);\n                let data = {\n                    \"chainId\": realChain,\n                    \"method\": \"aptos_signMessage\",\n                    \"params\": {\n                        \"message\": hex,\n                    },\n                    injectParams: payload,\n                };\n                let signedMessage = yield this.provider.request(data, realChain);\n                if ('result' in signedMessage) {\n                    let successData = signedMessage.result;\n                    let signStr = successData;\n                    if (successData.startsWith(\"0x\")) {\n                        signStr = successData.slice(2, successData.length);\n                    }\n                    // try {\n                    //     let publicKey = this.getAccount(realChain)?.publicKey\n                    //     if (publicKey != undefined) {\n                    //         console.log(\"apt_signMessage\", Buffer.from(successData, 'hex'))\n                    //         console.log(\"apt_signMessage\", successData)\n                    //\n                    //         const verified = nacl.sign.detached.verify(\n                    //             Buffer.from(fullMessage),\n                    //             Buffer.from(signStr, 'hex'),\n                    //             Buffer.from(publicKey, 'hex'),\n                    //         );\n                    //         console.log(\"signMessage\", verified);\n                    //     }\n                    // } catch (_) {\n                    // }\n                    return new Promise((resolve, reject) => {\n                        resolve({\n                            address: address,\n                            application: application,\n                            chainId: realChain,\n                            fullMessage: fullMessage,\n                            message: message,\n                            nonce: nonce,\n                            prefix: prefix,\n                            signature: signStr,\n                            // verified:verified\n                        });\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        if (\"error\" in signedMessage) {\n                            resolve(signedMessage.error);\n                        }\n                    });\n                }\n            }\n            catch (error) {\n                console.error('方法数据回调失败 --Error--', error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    signTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let tx = AptosUtils_1.AptosUtils.getTransaction(transaction);\n            console.log(\"signTransaction\", tx);\n            let realChain = this.getRealChainId(chainId);\n            try {\n                let signature = yield this.provider.request({\n                    \"method\": \"aptos_signTransaction\",\n                    \"params\": tx\n                }, realChain);\n                if ('result' in signature) {\n                    let successData = signature.result;\n                    return new Promise((resolve, reject) => {\n                        resolve(buffer_1.Buffer.from(successData));\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        reject(signature);\n                    });\n                }\n            }\n            catch (error) {\n                (0, core_1.logDebug)(\"getSignedTransaction\", error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    signAndSubmitTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let tx = AptosUtils_1.AptosUtils.getTransaction(transaction);\n            console.log(\"signAndSubmitTransaction\", tx);\n            let realChain = this.getRealChainId(chainId);\n            try {\n                let signature = yield this.provider.request({\n                    \"method\": \"aptos_signAndSubmitTransaction\",\n                    \"params\": tx\n                }, realChain);\n                if ('result' in signature) {\n                    let successData = signature.result;\n                    return new Promise((resolve, reject) => {\n                        resolve(successData);\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        reject(signature);\n                    });\n                }\n            }\n            catch (error) {\n                (0, core_1.logDebug)(\"getSignedTransaction\", error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    bufferToHex(buf) {\n        return \"0x\" + buffer_1.Buffer.from(buf).toString(\"hex\");\n    }\n}\nexports.OKXAptosProvider = OKXAptosProvider;\nexports.default = OKXAptosProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXAptosProvider = void 0;\nvar OKXAptosProvider_1 = require(\"./OKXAptosProvider\");\nObject.defineProperty(exports, \"OKXAptosProvider\", { enumerable: true, get: function () { return OKXAptosProvider_1.OKXAptosProvider; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_METHOD_BATCH_FETCHMSG = exports.CONNECT_METHOD_FETCHMSG = exports.CONNECT_METHOD_RECEIVE = exports.CONNECT_METHOD_UNSUB = exports.CONNECT_METHOD_SUB = exports.CONNECT_METHOD_PUBLISH = exports.CONNECT_METHOD_LOGIN = exports.CONNECT_METHOD_PUSH = void 0;\n// --------------- ws methods -------------\nexports.CONNECT_METHOD_PUSH = \"push\";\nexports.CONNECT_METHOD_LOGIN = \"login\";\nexports.CONNECT_METHOD_PUBLISH = \"publish\";\nexports.CONNECT_METHOD_SUB = \"subscribe\";\nexports.CONNECT_METHOD_UNSUB = \"unsubscribe\";\nexports.CONNECT_METHOD_RECEIVE = \"receive\";\nexports.CONNECT_METHOD_FETCHMSG = \"fetchMessages\";\nexports.CONNECT_METHOD_BATCH_FETCHMSG = \"batchFetchMessages\";\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXWalletConnector = void 0;\nconst constants_1 = require(\"./constants\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils\");\nconst utils_2 = require(\"../utils/utils\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst log = __importStar(require(\"../utils/log\"));\nconst protocol_1 = require(\"../protocol\");\nconst report_1 = require(\"../utils/report\");\nconst WS = (0, utils_2.resolveWebSocketImplementation)();\nclass OKXWalletConnector {\n    constructor(url) {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.state = constants_1.ConnectorState.InitState;\n        this.selectedUrlIndex = 0;\n        // reconnect\n        this.retryCount = 0;\n        // default timeout limit: 8 sec\n        this.timeOutLimit = 8000;\n        if (!(0, utils_2.checkWSUrl)(url)) {\n            throw new Error(`CONNECTOR: invalid url ${url}`);\n        }\n        this.url = url;\n        this.heartbeatTimer = null;\n        this.connectionTimeoutTimer = null;\n        this.connectURLStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY + storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n    }\n    get connecting() {\n        return this.state == constants_1.ConnectorState.Connecting;\n    }\n    // ------------------------------------------------------\n    onPayload(e) {\n        if (typeof e.data === \"undefined\")\n            return;\n        log.logDebug('get received data');\n        log.logDebug(e);\n        if (typeof e.data === \"string\") {\n            let rsp = e.data;\n            if (rsp === \"pong\") {\n                log.logDebug(`CONNECT: receive pong ${Date.now().toString()}`);\n                return;\n            }\n        }\n        this.events.emit(\"payload\", e.data);\n    }\n    onClose(event) {\n        var _a;\n        log.logDebug('socket get closed: ', (_a = this.socket) === null || _a === void 0 ? void 0 : _a.url, event.code);\n        this.socket = undefined;\n        this.events.emit(\"close\", event);\n    }\n    onError(id, e) {\n        const payload = { id: id, msg: e.toString() };\n        this.events.emit(\"payload\", payload);\n    }\n    onopen(socket) {\n        socket.onmessage = (event) => this.onPayload(event);\n        socket.onclose = (event) => this.onClose(event);\n        this.socket = socket;\n        this.state = constants_1.ConnectorState.Connected;\n        this.events.emit(\"open\");\n    }\n    // ------------------------------------------------------\n    emitError(errorEvent) {\n        this.events.emit(\"fail\", errorEvent);\n    }\n    // ------------------------------------------------------\n    heartbeat() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.heartbeatTimer) {\n                clearTimeout(this.heartbeatTimer);\n            }\n            if (this.state != constants_1.ConnectorState.Connected && this.state != constants_1.ConnectorState.OnError) {\n                log.logDebug('heart beat close');\n                return;\n            }\n            if (!this.socket) {\n                log.logDebug('socket not exist');\n                if (this.state == constants_1.ConnectorState.Connected || this.state == constants_1.ConnectorState.OnError) {\n                    log.logDebug('socket reconnect by heartbeat');\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                        this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n                    }\n                }\n                return;\n            }\n            if (this.socket.readyState !== WebSocket.OPEN) {\n                log.logDebug('socket not ready');\n                if (this.state == constants_1.ConnectorState.Connected || this.state == constants_1.ConnectorState.OnError) {\n                    log.logDebug('socket reconnect by heartbeat with state', this.state, this.socket.readyState);\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                        this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n                    }\n                }\n                return;\n            }\n            log.logDebug(`send ping heart beat: ${Date.now().toString()}, ${this.socket}`);\n            this.socket.send(\"ping\");\n            this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n        });\n    }\n    registOpen(url = this.url, inRetry = false) {\n        if (!(0, utils_2.checkWSUrl)(url)) {\n            throw new Error(`CONNECTOR: invalid url ${url}`);\n        }\n        this.url = url;\n        if (!inRetry) {\n            log.logDebug('Connection connect:', this.url, new Date().toUTCString());\n        }\n        this.state = constants_1.ConnectorState.Connecting;\n        const origin = new URLSearchParams(url).get(\"origin\");\n        return new Promise((resolve, reject) => {\n            const socket = new WS(url, []);\n            log.logDebug('Connection connect Begin:', this.url, new Date().toUTCString());\n            this.startTimeOutTimer(socket);\n            if ((0, utils_2.hasBuiltInWebSocket)()) {\n                log.logDebug('Add socket error handler');\n                socket.onerror = () => {\n                    reject(new Error('socket error'));\n                    socket.close();\n                };\n            }\n            else {\n                log.logDebug('Add socket error handler');\n                socket.on(\"error\", () => {\n                    reject(new Error('socket error'));\n                    socket.close();\n                });\n            }\n            socket.onopen = () => {\n                log.logDebug('socket opened');\n                this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.FINISHED);\n                this.onopen(socket);\n                this.heartbeat();\n                resolve(socket);\n            };\n        });\n    }\n    checkMaxRetry() {\n        log.logDebug('current retry count:', this.retryCount, 'of', constants_1.OKXCONNECTOR_WS_URL_LIST.length);\n        return this.retryCount > (constants_1.OKXCONNECTOR_WS_URL_LIST.length * 3);\n    }\n    connectionTryNext() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.checkMaxRetry()) {\n                //TODO: mark descent\n                this.retryCount += 1;\n                let nextUrl = this.getNextSelectUrl();\n                log.logDebug('Connection retry:', nextUrl, new Date().toUTCString());\n                return this.registOpen(nextUrl, true);\n            }\n            else {\n                log.logDebug('Max Connection retry ', this.retryCount, new Date().toUTCString());\n            }\n        });\n    }\n    startTimeOutTimer(socket) {\n        if (this.connectionTimeoutTimer) {\n            this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.CANCELED);\n        }\n        this.pendingSocket = socket;\n        this.connectionTimeoutTimer = setTimeout(() => {\n            if (this.pendingSocket) {\n                this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.TIME_OUT);\n            }\n        }, this.timeOutLimit);\n    }\n    resetTimeOutTimer(code) {\n        var _a;\n        // 1. cancel connecting pending sockets\n        if (code == constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.TIME_OUT) {\n            // 2. remove timer\n            clearTimeout(this.connectionTimeoutTimer);\n            (_a = this.pendingSocket) === null || _a === void 0 ? void 0 : _a.close();\n            this.pendingSocket = undefined;\n            log.reportEvent(report_1.OKXReportType.LOG, 'timeout', this.retryCount.toString());\n            throw new Error('socket timeout');\n        }\n        else {\n            this.pendingSocket = undefined;\n            // 2. remove timer\n            clearTimeout(this.connectionTimeoutTimer);\n        }\n    }\n    cacheSuccessUrlSelect() {\n        this.connectURLStorage.saveContent(this.selectedUrlIndex.toString(), storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n    }\n    // private getSuccessUrlSelect(): string {\n    //     let selectIndex = this.connectURLStorage.getItem(OKXCONNECTOR_CACHE_KEY)?.content\n    //     let index = 0\n    //     if (selectIndex) {\n    //         index = Number(selectIndex)\n    //     }\n    //     this.selectedUrlIndex = index\n    //     return OKXCONNECTOR_WS_URL_LIST[index]\n    // }\n    getNextSelectUrl() {\n        this.selectedUrlIndex += 1;\n        this.selectedUrlIndex = this.selectedUrlIndex % constants_1.OKXCONNECTOR_WS_URL_LIST.length;\n        return constants_1.OKXCONNECTOR_WS_URL_LIST[this.selectedUrlIndex];\n    }\n    // ------------------------------------------------------\n    onVisibleChanged() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (document.visibilityState === 'visible') {\n                // check and restore\n                log.logDebug(`get changed ${this.state}, ${this.socket}`);\n                if (this.state == constants_1.ConnectorState.Connected && typeof this.socket === \"undefined\") {\n                    log.logDebug('CONNECTION need reopen');\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                    }\n                    return;\n                }\n            }\n        });\n    }\n    tryRegistOpen() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            if (this.connecting) {\n                log.logDebug('tryRegistOpen => connecting state');\n                return new Promise((resolve, reject) => {\n                    this.events.once('fail', (e) => {\n                        log.logDebug('tryRegistOpen => connecting fail listener', e);\n                        return reject(e);\n                    });\n                    this.events.once(\"open\", () => {\n                        if (typeof this.socket == \"undefined\") {\n                            return reject(new Error(\"Connect lost\"));\n                        }\n                        return resolve(this.socket);\n                    });\n                });\n            }\n            log.logDebug('tryRegistOpen => try registOpen until retry limit is hit');\n            let inRetry = false;\n            while (!this.checkMaxRetry() && !this.socket) {\n                try {\n                    log.logDebug('tryRegistOpen => call registOpen, try count:', this.retryCount, inRetry);\n                    yield this.registOpen(url, inRetry);\n                }\n                catch (err) {\n                    log.logDebug('tryRegistOpen => registOpen failed', err);\n                    this.retryCount += 1;\n                    url = this.getNextSelectUrl();\n                    inRetry = true;\n                }\n            }\n            log.logDebug('tryRegistOpen => exit while loop', this.retryCount, this.socket);\n            if (!this.socket && this.checkMaxRetry()) {\n                log.logDebug('tryRegistOpen => failed to open a socket', this.retryCount, this.socket);\n                this.retryCount = 0;\n                this.state = constants_1.ConnectorState.OnError;\n                this.emitError(new Error('tryRegistOpen failed'));\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CONNECTION_ERROR, \"Failed to connect\");\n            }\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this.tryRegistOpen();\n                // listener for reconnect\n                document.removeEventListener('visibilitychange', this.onVisibleChanged.bind(this));\n                document.addEventListener('visibilitychange', this.onVisibleChanged.bind(this));\n            }\n            catch (e) {\n                log.logDebug('connect => failed to connect', e);\n                throw e;\n            }\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.state = constants_1.ConnectorState.Disconnected;\n            return new Promise((resolve, reject) => {\n                if (typeof this.socket === \"undefined\") {\n                    // reject(new Error(\"CONNECTION closed\"))\n                    resolve();\n                    return;\n                }\n                this.socket.onclose = (event) => {\n                    this.onClose(event);\n                    resolve();\n                };\n                this.socket.close();\n                if (this.heartbeatTimer) {\n                    clearTimeout(this.heartbeatTimer);\n                }\n            });\n        });\n    }\n    currentStatus() {\n        return {\n            state: this.state,\n            url: this.url\n        };\n    }\n    // event will be jsonstr\n    /// @params Promise\n    /// @params success/failed callback\n    addListener(event, decrypt, success, failed) {\n        if (this.listenPayloadHandler) {\n            this.events.removeListener(\"payload\", this.listenPayloadHandler);\n        }\n        this.listenPayloadHandler = (e) => {\n            var _a;\n            log.logDebug(`<<< get payload ${e}`);\n            let parsedEvent = (0, utils_1.safeJsonParse)(e);\n            // parse the data to chose success or failed\n            if (parsedEvent.params && parsedEvent.params.data) {\n                let rawMsg = (_a = parsedEvent.params.data) === null || _a === void 0 ? void 0 : _a.message;\n                if (rawMsg) {\n                    try {\n                        let msg = decrypt(rawMsg);\n                        if (msg === undefined) {\n                            log.logDebug(`CONNECT: decrypt undefined`);\n                            failed(event, 'Decrypt undefined');\n                        }\n                        else {\n                            success(event, msg);\n                        }\n                    }\n                    catch (e) {\n                        log.logDebug(`CONNECT: decrypt failed: ${e}`);\n                        failed(event, e.message);\n                    }\n                }\n            }\n        };\n        this.events.on(\"payload\", this.listenPayloadHandler);\n        if (this.failHandler) {\n            this.events.removeListener(\"fail\", this.failHandler);\n        }\n        this.failHandler = (e) => {\n            if (e) {\n                log.logDebug(`CONNECT failed: ${e}`);\n                failed(event, e.message);\n            }\n            else {\n                failed(event, \"Unkonow error\");\n            }\n        };\n        this.events.on(\"fail\", this.failHandler);\n    }\n    addPackageParse(callback) {\n        if (this.payloadHandler) {\n            this.events.removeListener(\"payload\", this.payloadHandler);\n        }\n        this.payloadHandler = (e) => __awaiter(this, void 0, void 0, function* () {\n            // parse the data to chose success or failed\n            log.logDebug(`CONNECTION @[${new Date().toUTCString()}] <<<< received e:${e}`);\n            let param = (0, utils_1.safeJsonParse)(e);\n            yield callback(param);\n        });\n        this.events.on(\"payload\", this.payloadHandler);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    send(doLogin, payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (typeof this.socket === \"undefined\") {\n                    log.logDebug(`>>> send payload undefined ${payload}`);\n                    // this.socket = await this.registOpen();\n                    yield doLogin();\n                }\n                log.logDebug(`CONNECTION @[${new Date().toUTCString()}]>>> send payload ${(0, utils_1.safeJsonStringify)(payload)}`);\n                if (this.socket) {\n                    this.socket.send((0, utils_1.safeJsonStringify)(payload));\n                }\n            }\n            catch (e) {\n                this.onError(payload.id, e);\n            }\n        });\n    }\n    getMsgPayloadFromHistory(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof msg === \"undefined\")\n                return;\n            let tmpMsg = {\n                params: {\n                    data: msg\n                }\n            };\n            let jsonstr = (0, utils_1.safeJsonStringify)(msg);\n            log.logDebug('get received data from history');\n            log.logDebug(jsonstr);\n            jsonstr = (0, utils_1.safeJsonStringify)(tmpMsg);\n            this.events.emit(\"payload\", jsonstr);\n        });\n    }\n    onOpen(callback) {\n        if (this.openHandler) {\n            this.events.removeListener(\"open\", this.openHandler);\n        }\n        this.openHandler = () => __awaiter(this, void 0, void 0, function* () {\n            log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> ws opened: `);\n            yield callback();\n        });\n        this.events.on(\"open\", this.openHandler);\n        this.cacheSuccessUrlSelect();\n    }\n}\nexports.OKXWalletConnector = OKXWalletConnector;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionManager = void 0;\nconst connect_1 = require(\"./connect\");\nconst commands_1 = require(\"./commands\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst jwtconstants_1 = require(\"./jwtconstants\");\nconst constants_1 = require(\"./constants\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils/utils\");\nconst crypto_1 = require(\"../crypto/crypto\");\nconst jwt_1 = require(\"./jwt\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst report_1 = require(\"../utils/report\");\nconst url_1 = require(\"../utils/url\");\nclass ConnectionManager {\n    constructor(appname = undefined) {\n        this.events = new eventemitter3_1.EventEmitter();\n        // local storage\n        this.connectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY_DAPP + appname, storageconstants_1.OKXCONNECTOR_CACHE_KEY_DAPP);\n        this.crypto = new crypto_1.SessionCrypto();\n        let inTMA = (0, url_1.isInTMA)();\n        (0, log_1.logDebug)('do init:', inTMA);\n        log.reportLog('connection manager do init');\n        if (inTMA) {\n            // recovery from cache\n            const keyPairInfo = this.getCachedCryptoKeyPair();\n            (0, log_1.logDebug)('use same pk:', keyPairInfo);\n            this.crypto = new crypto_1.SessionCrypto(keyPairInfo);\n        }\n        this.jwtKeyPair = this.getCachedJWTKeyPair();\n        this.saveJWTKeyPair(this.jwtKeyPair);\n        // wss connection\n        this.connector = new connect_1.OKXWalletConnector(constants_1.OKXCONNECTOR_WS_URL_1);\n        this.packageId = Date.now();\n        // connection state\n        this.connectedWalletPK = '';\n        this.currentTopic = '';\n        log.logDebug(`this.connectedWalletPK  constructor   ${this.connectedWalletPK}`);\n    }\n    refreshPackageId() {\n        this.packageId = Date.now();\n    }\n    saveCryptoKeyPair(keyPair) {\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(keyPair);\n        // encrypt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_CRYPTO_KEY);\n    }\n    getCachedCryptoKeyPair() {\n        // decrypt kp\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_CRYPTO_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            log.logDebug('get cached crypto key:');\n            log.logDebug(content);\n            let keyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            return keyPairInfo;\n        }\n        else {\n            this.connectStorage.clearCache();\n        }\n        return null;\n    }\n    saveJWTKeyPair(keyPair) {\n        var strkeyPair = {\n            publicKey: (0, utils_1.toHexString)(keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(keyPair.secretKey)\n        };\n        log.logDebug('save jwt kp');\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(strkeyPair);\n        log.logDebug(cacheInfo);\n        // encrypt jwt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_JWT_KEY);\n    }\n    getCachedJWTKeyPair() {\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            // TODO: decrypt jwt kp\n            log.logDebug('get cached jwt kp:');\n            log.logDebug(content);\n            let strKeyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            log.logDebug('save jwt kp');\n            log.logDebug(strKeyPairInfo);\n            var keyPair = {\n                publicKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.publicKey),\n                secretKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.secretKey)\n            };\n            return keyPair;\n        }\n        else {\n            return (0, jwt_1.generateKeyPair)();\n        }\n    }\n    isWalletPKReady() {\n        log.logDebug(`isWalletPKReady  ===> ${this.connectedWalletPK}`);\n        return this.connectedWalletPK.length > 0;\n    }\n    makeJWT(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, jwt_1.signJWT)(topic, jwtconstants_1.OKXCONNECTOR_JWT_SIDE, jwtconstants_1.OKXCONNECTOR_JWT_TTL, // 24h\n            this.jwtKeyPair);\n        });\n    }\n    parsePackage(input_1) {\n        return __awaiter(this, arguments, void 0, function* (input, ignoreACK = false) {\n            var _a, _b, _c, _d, _e;\n            this.events.emit(input.id, input);\n            // send back ACK\n            if (!ignoreACK) {\n                yield this.sendACK(input.id, true);\n                let topic = (_a = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE)) === null || _a === void 0 ? void 0 : _a.content;\n                if (topic) {\n                    let inputObj = input;\n                    if ((_c = (_b = inputObj.params) === null || _b === void 0 ? void 0 : _b.data) === null || _c === void 0 ? void 0 : _c.messageId) {\n                        this.refreshPackageId();\n                        yield this.sendReceive(this.packageId.toString(), (_e = (_d = inputObj.params) === null || _d === void 0 ? void 0 : _d.data) === null || _e === void 0 ? void 0 : _e.messageId, topic);\n                    }\n                }\n            }\n        });\n    }\n    restoreConnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.reportLog('connection manager restore connection');\n            log.logDebug(`connectionManager  restoreConenct   ${topic}`);\n            if ((typeof topic !== 'string') || topic.length === 0) {\n                throw new Error('CONNECTION: invalid topic');\n            }\n            log.logDebug(`connectionManager  restoreConenct   disconnect`);\n            yield this.disconnect(true);\n            this.connectStorage.saveContent(topic, storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`connectionManager  restoreConenct   conect`);\n            yield this.connect(true);\n        });\n    }\n    getConnectInfo() {\n        var topic = (0, utils_1.generateTopic)();\n        log.logDebug(`generate topic token: ${topic}`);\n        log.reportLog('connection manager generate connection info');\n        this.currentTopic = topic;\n        const info = {\n            channelId: topic,\n            clientId: this.crypto.stringifyKeypair().publicKey,\n        };\n        return info;\n    }\n    connect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            this.timeLog = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---enter->\", this.timeLog);\n            log.reportLog('connection manager begin connect');\n            let lastConnectId = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            //1. generate topic & jwt\n            var topic = this.currentTopic;\n            log.logDebug(`generate topic token: ${topic}`);\n            // crypto keypair\n            if (fromRestore) {\n                if (typeof lastConnectId !== 'undefined' && lastConnectId !== null) {\n                    log.logDebug(`read last connect id: ${lastConnectId}`);\n                    topic = lastConnectId.content;\n                }\n                var cachedSenderPublicKey = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                if (cachedSenderPublicKey) {\n                    this.connectedWalletPK = cachedSenderPublicKey.content;\n                    (0, log_1.logDebug)(`connectionManager connect() this.connectedWalletPK : ${this.connectedWalletPK}`);\n                }\n                log.reportLog('connection manager do restore connection');\n            }\n            if (fromRestore) {\n                // recovery from cache\n                const keyPairInfo = this.getCachedCryptoKeyPair();\n                if (keyPairInfo) {\n                    this.crypto = new crypto_1.SessionCrypto(keyPairInfo);\n                }\n            }\n            log.logDebug(`use crypto client id: ${this.crypto.stringifyKeypair().publicKey}`);\n            // cache topic\n            this.connectStorage.saveContent(topic, storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            var jwtToken = yield this.makeJWT(topic);\n            log.logDebug(`generate jwt token: ${jwtToken}`);\n            this.connectStorage.saveContent(jwtToken, 'jwt');\n            return new Promise((resolve, reject) => {\n                // 1. when websocket opened\n                this.connector.onOpen(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug(`1. connector on open`);\n                    log.reportLog('1. connect ws open');\n                    const timeOne = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---open->\", timeOne - this.timeLog);\n                    //2. send jwt to login\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when login');\n                            log.reportLog('2. connect login failed');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // throw error\n                            reject(error);\n                        }\n                        //3. send subscribe\n                        this.refreshPackageId();\n                        this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                            // ack\n                            if (rsp && rsp.error) {\n                                log.logError('failed when subscribe');\n                                log.reportLog('3. connect subscribe failed');\n                                yield this.connector.disconnect();\n                                var error = new Error();\n                                error.message = rsp.error.message;\n                                error.name = rsp.error.code.toString();\n                                // throw error\n                                reject(error);\n                            }\n                            this.refreshPackageId();\n                            log.logDebug(`4. subscribe callback then send fetch: ${this.packageId}`);\n                            log.reportLog('4. subscribe callback then send fetch');\n                            const timeF = new Date().getTime();\n                            (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n                            // 4. fetch messages\n                            yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                            resolve();\n                        }));\n                        log.logDebug(`3. login callback then send subscribe: ${this.packageId}`);\n                        log.reportLog('3. connect subscribe failed');\n                        const timeTh = new Date().getTime();\n                        (0, log_1.logDebug)(\"ConnectTime---login callback->\", timeTh - this.timeLog);\n                        yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                            log.logDebug('CONNECT: reconnect before send');\n                            yield this.connector.connect()\n                                .catch((err) => {\n                                (0, log_1.logDebug)('ConnectionManager connect error', err);\n                                reject(err);\n                            });\n                        }), {\n                            id: this.packageId.toString(),\n                            jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                            method: commands_1.CONNECT_METHOD_SUB,\n                            params: {\n                                topic: topic\n                            }\n                        });\n                    }));\n                    log.logDebug(`2. login called`);\n                    log.reportLog('2. connection manager connect call login');\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        yield this.connector.connect()\n                            .catch((err) => {\n                            (0, log_1.logDebug)('ConnectionManager connect error', err);\n                            reject(err);\n                        });\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_LOGIN,\n                        params: {\n                            token: jwtToken\n                        }\n                    });\n                    // 4. listen when dapp back to front, receive wallet public key\n                    this.connector.addPackageParse((event) => {\n                        var _a;\n                        log.logDebug(`connect: parse package`);\n                        log.logDebug(event);\n                        if (!(\"params\" in event) || !(\"data\" in event[\"params\"])) {\n                            this.parsePackage(event, true);\n                            return;\n                        }\n                        let rawMsg = (_a = event.params.data) === null || _a === void 0 ? void 0 : _a.message;\n                        if (typeof rawMsg !== 'undefined') {\n                            rawMsg = rawMsg.replace(/'/g, '\"');\n                            let parsedMessage = (0, safejson_1.safeJsonParse)(rawMsg);\n                            if (typeof parsedMessage !== 'string' && \"clientId\" in parsedMessage && parsedMessage.clientId && parsedMessage.clientId.length > 0) {\n                                this.connectedWalletPK = parsedMessage.clientId;\n                                log.logDebug(`this.connectedWalletPK  addPackageParse   ${this.connectedWalletPK}`);\n                                // exchange sender public key\n                                // cache wallet public key\n                                this.connectStorage.saveContent(this.connectedWalletPK, storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                                // cache crypto keypair\n                                this.saveCryptoKeyPair(this.crypto.stringifyKeypair());\n                            }\n                        }\n                        // ignore receive echo\n                        this.parsePackage(event, event.method === commands_1.CONNECT_METHOD_RECEIVE);\n                    });\n                }));\n                this.connector.connect().catch((err) => {\n                    (0, log_1.logDebug)('ConnectionManager connect error', err);\n                    reject(err);\n                });\n            });\n        });\n    }\n    disconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            yield this.connector.disconnect();\n            log.reportLog('connect disconnect');\n            //clean cached topic\n            //如果是恢复连接，就不清理解密public key\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            if (!fromRestore) {\n                this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                this.connectedWalletPK = '';\n                (0, log_1.logDebug)(`connectionManager disconnect() this.connectedWalletPK : ${this.connectedWalletPK}`);\n            }\n        });\n    }\n    addListener(event, success, fail) {\n        this.connector.addListener((0, safejson_1.safeJsonStringify)(event), (rawMsg) => {\n            rawMsg = rawMsg.replace(/'/g, '\"');\n            log.logDebug(`addListener ===> ${rawMsg}`);\n            if (typeof rawMsg !== 'undefined') {\n                var msgObj = (0, safejson_1.safeJsonParse)(rawMsg);\n                var msg = msgObj.message;\n                let result;\n                if (msg.trimStart().startsWith('{')) {\n                    result = msg;\n                }\n                else {\n                    if (msgObj.clientId && msgObj.clientId.length > 0) {\n                        this.connectedWalletPK = msgObj.clientId;\n                        this.connectStorage.saveContent(this.connectedWalletPK, storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                        log.logDebug(`this.connectedWalletPK  addListener   ${this.connectedWalletPK}`);\n                        log.logDebug(`this.cryptoKey  addListener   ${(0, utils_1.toHexString)(this.crypto.keyPair.publicKey)}`);\n                        // cache crypto keypair\n                        this.saveCryptoKeyPair(this.crypto.stringifyKeypair());\n                    }\n                    result = this.crypto.decrypt(msg, this.connectedWalletPK);\n                }\n                log.logDebug(`addListener ===> ${result}`);\n                return result;\n            }\n            return undefined;\n        }, success, fail);\n    }\n    sendRaw(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.logDebug(`message send =====> ${msg}`);\n            log.reportLog('connect send raw msg');\n            let message = msg;\n            log.logDebug(`message send =====encrypt message.length>>>> ${message.length}`);\n            // only one topic\n            let topic = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`message send =====topic>>>> ${topic === null || topic === void 0 ? void 0 : topic.content}`);\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                method: commands_1.CONNECT_METHOD_PUBLISH,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                params: {\n                    message: {\n                        topic: topic === null || topic === void 0 ? void 0 : topic.content,\n                        message: message,\n                        ttl: constants_1.OKXCONNECTOR_MESSAGE_TTL\n                    }\n                } // crypted\n            };\n            this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                // ack\n                if (rsp && rsp.error) {\n                    log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                }\n                else if (rsp && !rsp.error) {\n                    log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                }\n            }));\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n            return this.packageId;\n        });\n    }\n    send(msg_1) {\n        return __awaiter(this, arguments, void 0, function* (msg, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL) {\n            // make send msg payload\n            log.logDebug(`message send =====> ${msg}`);\n            log.reportLog('connect send msg');\n            if (!this.isWalletPKReady()) {\n                // channel not ready\n                throw new Error('connection not finish');\n            }\n            let message = this.crypto.encrypt(msg, this.connectedWalletPK);\n            log.logDebug(`message send =====encrypt message.length>>>> ${message.length}`);\n            log.reportEvent(report_1.OKXReportType.LOG, 'msg_size', message.length.toString());\n            // only one topic\n            let topic = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`message send =====topic>>>> ${topic === null || topic === void 0 ? void 0 : topic.content}`);\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                method: commands_1.CONNECT_METHOD_PUBLISH,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                params: {\n                    message: {\n                        topic: topic === null || topic === void 0 ? void 0 : topic.content,\n                        message: message,\n                        ttl: ttl\n                    }\n                } // crypted\n            };\n            this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                // ack\n                if (rsp && rsp.error) {\n                    log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                }\n                else if (rsp && !rsp.error) {\n                    log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                }\n            }));\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n            return this.packageId;\n        });\n    }\n    sendACK(msgId_1, success_1) {\n        return __awaiter(this, arguments, void 0, function* (msgId, success, reason = undefined) {\n            if (success === true) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    result: true\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n            else if (reason) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    error: {\n                        code: reason.code, //int\n                        message: reason.message\n                    }\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    // send receive\n    sendReceive(msgId, messageId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECEIVE,\n                params: {\n                    data: {\n                        messageId: messageId,\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendConnectSessionInfo(msgId, messageId, topic, params) {\n        return __awaiter(this, void 0, void 0, function* () {\n        });\n    }\n    // send receive\n    // 1. fetch all \n    // 2. send back receive\n    // 3. check has more, if so, repeat from 1st step\n    sendFetchAndConsumeMessages(msgId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(msgId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic == topic) {\n                                let messageId = msg.messageId;\n                                log.reportLog('5. get fetch result');\n                                yield this.connector.getMsgPayloadFromHistory(msg);\n                                // send receive command to relay server\n                                this.refreshPackageId();\n                                yield this.sendReceive(this.packageId.toString(), messageId, topic);\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            log.reportLog('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_FETCHMSG,\n                params: {\n                    data: {\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    cleanCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.reportLog('connection cache clean called');\n            this.connectStorage.clearCache();\n        });\n    }\n    saveSessionContent(key, data) {\n        if (!data) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(data);\n        this.connectStorage.encryptStoreMsg(jsonData, storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n    }\n    getSessionContent(key) {\n        let jsonStr = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        if (jsonStr) {\n            let object = (0, safejson_1.safeJsonParse)(jsonStr);\n            return object;\n        }\n        return undefined;\n    }\n    getCurrentConnectionReady() {\n        return this.isWalletPKReady();\n    }\n}\nexports.ConnectionManager = ConnectionManager;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectorState = exports.CONNECT_JSONRPC_VER = exports.OKXCONNECTOR_MESSAGE_TTL = exports.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE = exports.OKXCONNECTOR_WS_URL_LIST = exports.OKXCONNECTOR_WS_URL_IDX_KEY = exports.OKXCONNECTOR_WS_URL_3 = exports.OKXCONNECTOR_WS_URL_2 = exports.OKXCONNECTOR_WS_URL_1 = exports.EVENT_EMITTER_MAX_LISTENERS = void 0;\nexports.EVENT_EMITTER_MAX_LISTENERS = 10;\nexports.OKXCONNECTOR_WS_URL_1 = \"wss://wsdexpri.okx.com/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_2 = \"wss://wsdexpri.okx.ac/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_3 = \"wss://wsdexpri.coinall.ltd/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_IDX_KEY = \"wuik\";\nexports.OKXCONNECTOR_WS_URL_LIST = [\n    exports.OKXCONNECTOR_WS_URL_1,\n    exports.OKXCONNECTOR_WS_URL_2,\n    exports.OKXCONNECTOR_WS_URL_3,\n];\nexports.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE = {\n    TIME_OUT: 3990,\n    CANCELED: 3991,\n    FINISHED: 3992,\n};\nexports.OKXCONNECTOR_MESSAGE_TTL = 300000;\n// --------------- JSON RPC ---------------\nexports.CONNECT_JSONRPC_VER = \"2.0\";\nexports.ConnectorState = {\n    InitState: 0,\n    Connecting: 1,\n    Connected: 2,\n    Disconnected: 3,\n    OnError: 4,\n};\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Engine = void 0;\nconst protocol_1 = require(\"../protocol\");\nconst utils_1 = require(\"../utils\");\nconst iconnector_1 = require(\"../connector/iconnector\");\nconst ws_connector_1 = require(\"../connector/ws-connector\");\nconst connectionManager_1 = require(\"./connectionManager\");\nconst sessionUtils_1 = require(\"./sessionUtils\");\nconst connector_1 = require(\"../connector\");\nconst wallet_info_1 = require(\"../protocol/connect/wallet-info\");\nclass Engine {\n    constructor(appName) {\n        this.connectors = [];\n        this.useConnector = undefined;\n        this.connectionManager = new connectionManager_1.ConnectionManager(appName);\n        this.addConnectionListener();\n    }\n    isInject() {\n        return this.getConnector() instanceof connector_1.InjectConnector;\n    }\n    getConnector() {\n        if (this.useConnector) {\n            return this.useConnector;\n        }\n    }\n    registerConnector(connectors) {\n        this.connectors = connectors;\n        for (const connector of connectors) {\n            if (connector instanceof ws_connector_1.WsConnector) {\n                connector.setConnectionManager(this.connectionManager);\n            }\n        }\n    }\n    hasWsConnector() {\n        for (const connector of this.connectors) {\n            if (connector instanceof ws_connector_1.WsConnector) {\n                return true;\n            }\n        }\n        return false;\n    }\n    universalConnect(request, sessionConfig, connectInfoAndUrl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b, _c, _d;\n                try {\n                    (0, utils_1.logDebug)(\"engine universalConnect request :\", JSON.stringify(request));\n                    (0, utils_1.logDebug)(\"engine universalConnect sessionConfig :\", JSON.stringify(sessionConfig));\n                    let universalRequest = [];\n                    request.forEach((item) => {\n                        let name = item.name;\n                        if (name.startsWith(\"requestAccounts\") || name.startsWith(\"ton\")) {\n                            universalRequest.push(item);\n                        }\n                    });\n                    (0, utils_1.logDebug)(\"engine universalConnect universalRequest :\", JSON.stringify(universalRequest));\n                    const connectInfo = this.connectionManager.getConnectInfo();\n                    const requestId = Date.now().toString();\n                    let openUniversalLink = (_a = sessionConfig.openUniversalUrl) !== null && _a !== void 0 ? _a : false;\n                    const universalConnectRequest = {\n                        protocolVer: Number(protocol_1.tonConnectSdkVersion),\n                        topic: connectInfo.channelId,\n                        clientId: connectInfo.clientId,\n                        requestId: requestId,\n                        dAppInfo: sessionConfig.dappInfo,\n                        requests: universalRequest,\n                        redirect: (_b = sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect) !== null && _b !== void 0 ? _b : \"none\"\n                    };\n                    const base64Encoded = (0, utils_1.encodeConnectParams)(universalConnectRequest);\n                    universalConnectRequest.redirect = (_c = sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect) !== null && _c !== void 0 ? _c : \"none\";\n                    (0, utils_1.logDebug)('engine universalConnect ==>>universalConnectRequest:', JSON.stringify(universalConnectRequest));\n                    var openOKXLink = \"\";\n                    // open app wallet\n                    if (openUniversalLink) {\n                        openOKXLink = (0, utils_1.getOKXLink)(universalConnectRequest, sessionConfig.useMini, sessionConfig.tmaReturnUrl);\n                        (0, utils_1.logDebug)('engine universalConnect ==>>openOKXLink:', openOKXLink);\n                    }\n                    const openMethod = () => {\n                        if (this.connectors.length == 1 && this.connectors[0] instanceof connector_1.OkxwalletInjectConnector) {\n                            return this.connectors[0].openWallet({\n                                connectRequest: universalConnectRequest\n                            });\n                        }\n                        else {\n                            if (sessionConfig.useMini) {\n                                return (0, utils_1.openOKXTMAWalletlinkWithFallback)(openOKXLink);\n                            }\n                            if ((0, utils_1.useShortLink)()) {\n                                return (0, utils_1.openOKXUniversalLink)(openOKXLink);\n                            }\n                            return (0, utils_1.openOKXDeeplinkWithFallback)(openOKXLink);\n                        }\n                    };\n                    (0, utils_1.logDebug)('engine universalConnect ==>>openOKXLink:', openOKXLink);\n                    const isIOS = (0, utils_1.isIos)();\n                    if (isIOS && openUniversalLink) {\n                        (0, utils_1.logDebug)(`engine universalConnect ==>>isIOS: ${isIOS}   openUniversalLink: ${openUniversalLink}`);\n                        openMethod();\n                    }\n                    this.addOnConnectResultListener((response) => {\n                        var _a, _b, _c, _d;\n                        try {\n                            let connectResponse = response;\n                            if (connectResponse.method == \"connect\") {\n                                (0, utils_1.logDebug)(\"engin  universalConnect success connectResponse:>>>\", JSON.stringify(connectResponse));\n                                let namespaces = (0, sessionUtils_1.buildNameSpacesByConnectResponse)(connectResponse);\n                                if (namespaces) {\n                                    let walletName = undefined;\n                                    if (((_b = (_a = connectResponse.payload) === null || _a === void 0 ? void 0 : _a.responses) === null || _b === void 0 ? void 0 : _b[0]) && \"walletName\" in connectResponse.payload.responses[0]) {\n                                        walletName = connectResponse.payload.responses[0]['walletName'];\n                                    }\n                                    let appName = (_c = connectResponse.payload) === null || _c === void 0 ? void 0 : _c.wallet.appName;\n                                    var tag;\n                                    switch (appName) {\n                                        case wallet_info_1.OKXWalletName:\n                                            tag = iconnector_1.OKX_APP_WALLET;\n                                            break;\n                                        case wallet_info_1.OKXMiniWalletName:\n                                            tag = iconnector_1.OKX_TG_WALLET;\n                                            break;\n                                        case wallet_info_1.OKXInjectWalletName:\n                                            tag = iconnector_1.OKX_INJECT_WALLET;\n                                            break;\n                                    }\n                                    var connector = this.connectors.find((connector) => connector.getTag() === tag);\n                                    if (!connector) {\n                                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n                                    }\n                                    if (connector instanceof ws_connector_1.WsConnector) {\n                                        connector.addConnectionListener();\n                                    }\n                                    let session = Object.assign({ topic: connectInfo.channelId, sessionConfig: sessionConfig, namespaces: namespaces }, (connectResponse.payload && {\n                                        wallet: Object.assign(Object.assign({}, connectResponse.payload.wallet), { walletName: walletName })\n                                    }));\n                                    let methodsResponse = connectResponse.payload.responses.find(item => item.name === 'requestAccounts');\n                                    if (methodsResponse && methodsResponse.connectRequestMethods) {\n                                        session.signResponse = methodsResponse.connectRequestMethods;\n                                    }\n                                    (0, utils_1.logDebug)(\"engin  universalConnect success session:>>>\", JSON.stringify(session));\n                                    resolve(session);\n                                    this.useConnector = connector;\n                                }\n                                else {\n                                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n                                }\n                            }\n                            else if (connectResponse.method == \"connect_error\" && ((_d = connectResponse.payload) === null || _d === void 0 ? void 0 : _d.code) != undefined) {\n                                throw new protocol_1.OKXConnectError(connectResponse.payload.code);\n                            }\n                        }\n                        catch (e) {\n                            reject(e);\n                        }\n                    });\n                    if (this.hasWsConnector()) {\n                        yield ((_d = this.connectionManager) === null || _d === void 0 ? void 0 : _d.disconnect(false));\n                        try {\n                            yield this.connectionManager.connect();\n                        }\n                        catch (e) {\n                            (0, utils_1.logDebug)('Engine universalConnect error', e);\n                            throw e;\n                        }\n                        (0, utils_1.logDebug)('engin  universalConnect ==>> connectInfoAndUrl:', connectInfoAndUrl);\n                        this.sendSession(base64Encoded);\n                    }\n                    if (!isIOS && openUniversalLink) {\n                        openMethod();\n                    }\n                    (0, utils_1.logDebug)('engin  universalConnect ==>> connectInfoAndUrl:', connectInfoAndUrl);\n                    if (connectInfoAndUrl) {\n                        const info = {\n                            connectRequest: universalConnectRequest,\n                            redirect: sessionConfig.redirect,\n                            tmaReturnUrl: sessionConfig.tmaReturnUrl,\n                        };\n                        (0, utils_1.logDebug)(\"universalConnect connectInfoAndUrl info :\", JSON.stringify(info));\n                        connectInfoAndUrl(info);\n                    }\n                }\n                catch (error) {\n                    (0, utils_1.logDebug)(\"Engine universalConnect catch error\", error);\n                    reject(error);\n                }\n            }));\n        });\n    }\n    addOnConnectResultListener(connectResultListener) {\n        for (const connector of this.connectors) {\n            if (connector instanceof connector_1.InjectConnector) {\n                connector.setOnConnectResultListener(connectResultListener);\n            }\n        }\n        this.connectResultListener = connectResultListener;\n    }\n    openWallet(engineConnectInfo, connector) {\n        var _a;\n        if (connector) {\n            connector.openWallet(engineConnectInfo);\n        }\n        else {\n            (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.openWallet(engineConnectInfo);\n        }\n    }\n    send(request, requestAnswer, ttl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            return (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.send(request, requestAnswer, ttl);\n        });\n    }\n    clearData() {\n        var _a;\n        (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.clearData();\n    }\n    addDisconnectListener(disconnecter) {\n        var _a;\n        (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.addDisconnectListener(disconnecter);\n    }\n    saveSessionContent(key, data) {\n        this.connectionManager.saveSessionContent(key, data);\n    }\n    getSessionContent(key) {\n        var _a;\n        var session = this.connectionManager.getSessionContent(key);\n        if (session) {\n            var tag = \"\";\n            if (typeof session === \"object\") {\n                tag = this.getTagByappName((_a = session.wallet) === null || _a === void 0 ? void 0 : _a.appName);\n            }\n            if (this.connectors.find((connector) => {\n                return connector.getTag() === tag;\n            })) {\n                return session;\n            }\n        }\n        return undefined;\n    }\n    getTagByappName(appName) {\n        var tag = '';\n        if (appName) {\n            switch (appName) {\n                case wallet_info_1.OKXWalletName:\n                    tag = iconnector_1.OKX_APP_WALLET;\n                    break;\n                case wallet_info_1.OKXMiniWalletName:\n                    tag = iconnector_1.OKX_TG_WALLET;\n                    break;\n                case wallet_info_1.OKXInjectWalletName:\n                    tag = iconnector_1.OKX_INJECT_WALLET;\n            }\n        }\n        return tag;\n    }\n    setConnectConnector(wallet) {\n        var tag = this.getTagByappName(wallet === null || wallet === void 0 ? void 0 : wallet.appName);\n        if (!tag)\n            return;\n        this.useConnector = this.connectors.find((connector) => {\n            return connector.getTag() === tag;\n        });\n    }\n    // for es connect\n    setSessionConnectingListener(sessionConnectingListener) {\n        if (this.getConnector() instanceof ws_connector_1.WsConnector) {\n            this.getConnector().setSessionConnectingListener(sessionConnectingListener);\n        }\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.restoreconnect(sessionInfo, onConnectResult));\n        });\n    }\n    restoreconnectFromTopic(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.getConnector() instanceof ws_connector_1.WsConnector) {\n                yield this.getConnector().restoreconnectFromTopic(topic);\n            }\n        });\n    }\n    getCurrentConnectionReady(namespaceKeys) {\n        var _a;\n        return !!((_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.getCurrentConnectionReady(namespaceKeys));\n    }\n    connectManagerDisconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            var _a;\n            yield ((_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.connectManagerDisconnect(fromRestore));\n        });\n    }\n    sendSession(sessionInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, utils_1.logDebug)('[Connect] sendSession called:', sessionInfo);\n            const requestId = Date.now().toString();\n            let request = {\n                method: 'session_info',\n                params: { sessionInfo: sessionInfo }\n            };\n            yield this.connectionManager.sendRaw(JSON.stringify(Object.assign(Object.assign({}, request), { requestId: requestId })));\n        });\n    }\n    addConnectionListener() {\n        var _a;\n        (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.addListener(\"sdk_response\", (event, msg) => {\n            var jsonResponse = (0, utils_1.safeJsonParse)(msg);\n            (0, utils_1.logDebug)(`Engine ==>> addListener ==> success ==> ${jsonResponse}`);\n            if (jsonResponse.method === 'connect') {\n                if (this.connectResultListener) {\n                    this.connectResultListener(jsonResponse);\n                }\n            }\n        }, function () {\n        });\n    }\n}\nexports.Engine = Engine;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Storage = exports.Engine = exports.WalletConnectionManager = exports.ConnectionManager = exports.OKXWalletConnector = void 0;\nvar connect_1 = require(\"./connect\");\nObject.defineProperty(exports, \"OKXWalletConnector\", { enumerable: true, get: function () { return connect_1.OKXWalletConnector; } });\nvar connectionManager_1 = require(\"./connectionManager\");\nObject.defineProperty(exports, \"ConnectionManager\", { enumerable: true, get: function () { return connectionManager_1.ConnectionManager; } });\nvar walletConnectionManager_1 = require(\"./walletConnectionManager\");\nObject.defineProperty(exports, \"WalletConnectionManager\", { enumerable: true, get: function () { return walletConnectionManager_1.WalletConnectionManager; } });\nvar engine_1 = require(\"./engine\");\nObject.defineProperty(exports, \"Engine\", { enumerable: true, get: function () { return engine_1.Engine; } });\nvar storage_1 = require(\"./storage\");\nObject.defineProperty(exports, \"Storage\", { enumerable: true, get: function () { return storage_1.Storage; } });\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MULTICODEC_ED25519_LENGTH = exports.MULTICODEC_ED25519_HEADER = exports.MULTICODEC_ED25519_BASE = exports.MULTICODEC_ED25519_ENCODING = exports.DID_METHOD = exports.DID_PREFIX = exports.DID_DELIMITER = exports.KEY_PAIR_SEED_LENGTH = exports.DATA_ENCODING = exports.JSON_ENCODING = exports.JWT_ENCODING = exports.JWT_DELIMITER = exports.JWT_IRIDIUM_TYP = exports.JWT_IRIDIUM_ALG = exports.JWTHeaderType = void 0;\nexports.generateKeyPair = generateKeyPair;\nexports.decodeJSON = decodeJSON;\nexports.encodeJSON = encodeJSON;\nexports.encodeIss = encodeIss;\nexports.decodeIss = decodeIss;\nexports.encodeSig = encodeSig;\nexports.decodeSig = decodeSig;\nexports.encodeData = encodeData;\nexports.decodeData = decodeData;\nexports.encodeJWT = encodeJWT;\nexports.decodeJWT = decodeJWT;\nexports.signJWT = signJWT;\nexports.verifyJWT = verifyJWT;\nconst ed25519 = __importStar(require(\"@stablelib/ed25519\"));\nconst safejson_1 = require(\"../utils/safejson\");\nconst utils_1 = require(\"../utils/utils\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst log = __importStar(require(\"../utils/log\"));\nconst stringUtils_1 = require(\"../utils/stringUtils\");\nexports.JWTHeaderType = \"dapp\";\nexports.JWT_IRIDIUM_ALG = \"EdDSA\";\nexports.JWT_IRIDIUM_TYP = \"JWT\";\nexports.JWT_DELIMITER = \".\";\nexports.JWT_ENCODING = \"base64url\";\nexports.JSON_ENCODING = \"utf8\";\nexports.DATA_ENCODING = \"utf8\";\nexports.KEY_PAIR_SEED_LENGTH = 32;\nexports.DID_DELIMITER = \":\";\nexports.DID_PREFIX = \"did\";\nexports.DID_METHOD = \"key\";\nexports.MULTICODEC_ED25519_ENCODING = \"base58btc\";\nexports.MULTICODEC_ED25519_BASE = \"z\";\nexports.MULTICODEC_ED25519_HEADER = \"K36\";\nexports.MULTICODEC_ED25519_LENGTH = 32;\nfunction generateKeyPair() {\n    // let local_seed = randomBytes(KEY_PAIR_SEED_LENGTH)\n    // return ed25519.generateKeyPairFromSeed(local_seed);\n    return tweetnacl_1.default.sign.keyPair();\n}\nfunction decodeJSON(str) {\n    return (0, safejson_1.safeJsonParse)((0, stringUtils_1.okxtoString)((0, stringUtils_1.okxfromString)(str, exports.JWT_ENCODING), exports.JSON_ENCODING));\n}\nfunction encodeJSON(val) {\n    return (0, stringUtils_1.okxtoString)((0, stringUtils_1.okxfromString)((0, safejson_1.safeJsonStringify)(val), exports.JSON_ENCODING), exports.JWT_ENCODING);\n}\nfunction encodeIss(publicKey) {\n    log.logDebug(`publicKey: ${(0, utils_1.toHexString)(publicKey)}`);\n    var publicKeyStr = (0, stringUtils_1.okxtoString)(publicKey, exports.MULTICODEC_ED25519_ENCODING);\n    return [exports.DID_PREFIX, exports.DID_METHOD, publicKeyStr].join(exports.DID_DELIMITER);\n}\nfunction decodeIss(issuer) {\n    const [prefix, method, multicodec] = issuer.split(exports.DID_DELIMITER);\n    if (prefix !== exports.DID_PREFIX || method !== exports.DID_METHOD) {\n        throw new Error(`Issuer must be a DID with method \"key\"`);\n    }\n    if (multicodec === undefined) {\n        throw new Error('multicodec is undefined');\n    }\n    const publicKey = (0, stringUtils_1.okxfromString)(multicodec, exports.MULTICODEC_ED25519_ENCODING);\n    if (publicKey === undefined || publicKey.length !== exports.MULTICODEC_ED25519_LENGTH) {\n        throw new Error(`Issuer must be a public key with length 32 bytes`);\n    }\n    return publicKey;\n}\n// ---------- Signature ----------------------------------------------- //\nfunction encodeSig(bytes) {\n    return (0, stringUtils_1.okxtoString)(bytes, exports.JWT_ENCODING);\n}\nfunction decodeSig(encoded) {\n    return (0, stringUtils_1.okxfromString)(encoded, exports.JWT_ENCODING);\n}\n// ---------- Data ----------------------------------------------- //\nfunction encodeData(params) {\n    return (0, stringUtils_1.okxfromString)([encodeJSON(params.header), encodeJSON(params.payload)].join(exports.JWT_DELIMITER), exports.DATA_ENCODING);\n}\nfunction decodeData(data) {\n    var _a, _b;\n    const params = (0, stringUtils_1.okxtoString)(data, exports.DATA_ENCODING).split(exports.JWT_DELIMITER);\n    const header = decodeJSON((_a = params[0]) !== null && _a !== void 0 ? _a : '{}');\n    const payload = decodeJSON((_b = params[1]) !== null && _b !== void 0 ? _b : '{}');\n    return { header, payload };\n}\n// ---------- JWT ----------------------------------------------- //\nfunction encodeJWT(params) {\n    return [encodeJSON(params.header), encodeJSON(params.payload), encodeSig(params.signature)].join(exports.JWT_DELIMITER);\n}\nfunction decodeJWT(jwt) {\n    var _a, _b, _c;\n    const params = jwt.split(exports.JWT_DELIMITER);\n    const header = decodeJSON((_a = params[0]) !== null && _a !== void 0 ? _a : '{}');\n    const payload = decodeJSON((_b = params[1]) !== null && _b !== void 0 ? _b : '{}');\n    const signature = decodeSig((_c = params[2]) !== null && _c !== void 0 ? _c : '{}');\n    const data = (0, stringUtils_1.okxfromString)(params.slice(0, 2).join(exports.JWT_DELIMITER), exports.DATA_ENCODING);\n    return { header, payload, signature, data };\n}\nfunction signJWT(sub_1, aud_1, ttl_1, keyPair_1) {\n    return __awaiter(this, arguments, void 0, function* (sub, aud, ttl, keyPair, iat = Math.floor(Date.now())) {\n        const header = { alg: exports.JWT_IRIDIUM_ALG, typ: exports.JWT_IRIDIUM_TYP };\n        const iss = encodeIss(keyPair.publicKey);\n        const exp = iat + ttl;\n        const act = \"authenticate user\";\n        const payload = { iss, sub, aud, act, iat, exp };\n        const data = encodeData({ header, payload });\n        // const signature = ed25519.sign(keyPair.secretKey, data);\n        log.logDebug(`get sec kp: ${keyPair.secretKey} {${keyPair.secretKey.length}}`);\n        const signature = tweetnacl_1.default.sign.detached(data, keyPair.secretKey);\n        return encodeJWT({ header, payload, signature });\n    });\n}\nfunction verifyJWT(jwt) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { header, payload, data, signature } = decodeJWT(jwt);\n        if (header.alg !== exports.JWT_IRIDIUM_ALG || header.typ !== exports.JWT_IRIDIUM_TYP) {\n            throw new Error(\"JWT must use EdDSA algorithm\");\n        }\n        const publicKey = decodeIss(payload.iss);\n        return ed25519.verify(publicKey, data, signature);\n    });\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCONNECTOR_JWT_TTL = exports.OKXCONNECTOR_JWT_WALLET_SIDE = exports.OKXCONNECTOR_JWT_SIDE = void 0;\nexports.OKXCONNECTOR_JWT_SIDE = \"wallet\";\nexports.OKXCONNECTOR_JWT_WALLET_SIDE = \"dapp\";\nexports.OKXCONNECTOR_JWT_TTL = 86400000;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.buildNameSpacesByConnectResponse = buildNameSpacesByConnectResponse;\nexports.buildRequestAccountNameSpacesByConnectResponse = buildRequestAccountNameSpacesByConnectResponse;\nconst log_1 = require(\"../utils/log\");\nfunction buildNameSpacesByConnectResponse(connectResponse) {\n    let requestAccountNameSpaces = buildRequestAccountNameSpacesByConnectResponse(connectResponse);\n    return requestAccountNameSpaces;\n}\nfunction buildRequestAccountNameSpacesByConnectResponse(connectResponse) {\n    let result = {};\n    (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start connectResponse111>>', JSON.stringify(connectResponse));\n    let universalResponse = connectResponse.payload.responses.find(item => item.name === 'requestAccounts');\n    if (universalResponse && universalResponse.accounts) {\n        let filterAccount = [];\n        for (const item of universalResponse.accounts) {\n            if (item.namespace === \"ton\") {\n                if (item.data && item.data.ton_addr) {\n                    if (item.data.ton_addr.address && item.data.ton_addr.address.length > 0) {\n                        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start TON>>', JSON.stringify(item));\n                        filterAccount.push(item);\n                    }\n                }\n            }\n            else {\n                (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start other>>', JSON.stringify(item));\n                filterAccount.push(item);\n            }\n        }\n        universalResponse.accounts = filterAccount;\n    }\n    const tonAddress = connectResponse.payload.responses.find(item => item.name === 'ton_addr');\n    const tonProof = connectResponse.payload.responses.find(item => item.name === 'ton_proof');\n    if (tonAddress && !universalResponse) { //adapt tonsdk\n        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse adapt ton data >>');\n        let address = tonAddress.address;\n        address = 'ton:' + tonAddress.network + \":\" + address;\n        let data = {\n            ton_addr: tonAddress\n        };\n        if (tonProof) {\n            data.ton_proof = tonProof;\n        }\n        universalResponse = {\n            name: \"requestAccounts\",\n            accounts: [{\n                    namespace: 'ton',\n                    addresses: [address],\n                    methods: ['ton_sendTransaction'],\n                    extra: {},\n                    data: data,\n                }]\n        };\n    }\n    (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse end universalResponse>>>', JSON.stringify(universalResponse));\n    universalResponse.accounts.forEach(item => {\n        var chains = [];\n        var accounts = [];\n        item.addresses.forEach(addressItem => {\n            var addressArr = addressItem.split(\":\");\n            (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse addressArr>>', addressArr.length);\n            if (addressArr.length >= 3) {\n                let chain = addressArr.slice(0, 2).join(\":\");\n                chains.push(chain);\n                accounts.push(addressItem);\n                (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse chain:>>', chain, \"addressItem:\", addressItem);\n            }\n        });\n        if (item.data && item.data.ton_addr) {\n            item.data.ton_addr.name = 'ton_addr';\n        }\n        if (item.data && item.data.ton_proof) {\n            item.data.ton_proof.name = 'ton_proof';\n        }\n        result[item.namespace] = {\n            chains: chains,\n            accounts: accounts,\n            methods: item.methods,\n            extra: item.extra,\n            payload: item.data\n        };\n        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse result>>', JSON.stringify(result));\n    });\n    return result;\n}\n/*export function buildTonNameSpaceByConnectResponse(connectResponse: ConnectResponseSuccess): Namespaces | undefined {\n    const tonAddrItem: TonAddressItemReply = connectResponse.payload.responses.find(\n        item => item.name === 'ton_addr'\n    ) as TonAddressItemReply;\n\n    const tonProfItem: TonProofItemReply = connectResponse.payload.responses.find(\n        item => item.name === 'ton_proof'\n    ) as TonProofItemReply;\n\n    if (!tonAddrItem) {\n        return undefined\n    }\n\n    return {\n        NameSpaceKeyTON: {\n            chains: [tonAddrItem.network],\n            accounts: [],\n            methods: connectResponse.payload.wallet.features?.ton,\n            payload: {\n                tonAccount: {\n                    address: tonAddrItem.address,\n                    chain: tonAddrItem.network,\n                    walletStateInit: tonAddrItem.walletStateInit,\n                    publicKey: tonAddrItem.publicKey\n                },\n                tonProof: tonProfItem\n            }\n        }\n    }\n}*/\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Storage = void 0;\nconst storageconstants_1 = require(\"./storageconstants\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst utils_1 = require(\"../utils/utils\");\nconst utils_2 = require(\"../utils\");\nconst log = __importStar(require(\"../utils/log\"));\nconst utils_3 = require(\"../utils\");\nconst crypto_js_1 = require(\"crypto-js\");\nclass Storage {\n    constructor(subKey, beforeKey = undefined) {\n        const localStorage = (0, utils_1.resolveLocalStorage)();\n        // 0. check and upgrade beforeKey\n        log.logDebug('------ update before cache ------');\n        if (beforeKey) {\n            this.checkAndUpgradeCache(beforeKey, subKey);\n        }\n        // 1. load data from local storage\n        this.storeKey = '';\n        this.cipherIV = '';\n        this.subKey = subKey;\n        log.logDebug('--------get current local storage --------');\n        log.logDebug(localStorage);\n        const cacheStr = localStorage.getItem(Storage.cacheKey + subKey);\n        if (typeof cacheStr === \"undefined\" || cacheStr === null) {\n            log.logDebug(\"with no cache\");\n            this.cache = {};\n            return;\n        }\n        log.logDebug(cacheStr);\n        if ((cacheStr === null || cacheStr === void 0 ? void 0 : cacheStr.length) > 0) {\n            var cacheObj = (0, utils_2.safeJsonParse)(cacheStr);\n            this.cache = cacheObj;\n        }\n        log.logDebug(`get cache obj: ${this.cache}`);\n        if (typeof this.cache === 'undefined' || this.cache == null) {\n            this.cache = {};\n        }\n    }\n    checkAndUpgradeCache(fromCacheKey, toCacheKey) {\n        if (fromCacheKey && fromCacheKey.length > 0 && toCacheKey && toCacheKey.length > 0) {\n            // 1. get all infos from from-cache-key\n            log.logDebug('--------get current local storage --------');\n            log.logDebug(localStorage);\n            const cacheStr = localStorage.getItem(Storage.cacheKey + fromCacheKey);\n            if (typeof cacheStr === \"undefined\" || cacheStr === null) {\n                log.logDebug(\"no pre cache content\");\n                return;\n            }\n            log.logDebug(cacheStr);\n            if ((cacheStr === null || cacheStr === void 0 ? void 0 : cacheStr.length) > 0) {\n                // 2. save to to-cache-key\n                log.logDebug(\"write in cache content: \", fromCacheKey, '->', toCacheKey);\n                localStorage.setItem(Storage.cacheKey + toCacheKey, cacheStr);\n                // 3. clean from item\n                log.logDebug(\"clean in cache content: \", fromCacheKey);\n                localStorage.removeItem(Storage.cacheKey + fromCacheKey);\n            }\n        }\n        else {\n            log.logDebug('no pre cache key:', fromCacheKey);\n        }\n    }\n    saveContent(content, key, id = '-') {\n        let item = {\n            id: id,\n            timestamp: Date.now().toString(),\n            content: content\n        };\n        this.saveItem(item, key);\n    }\n    saveItem(item, key) {\n        let localKey = Storage.cacheKey + this.subKey;\n        const localStorage = (0, utils_1.resolveLocalStorage)();\n        log.logDebug(this.cache);\n        log.logDebug(`get cache obj: ${this.cache}, ${key}, ${item}`);\n        this.cache[key] = item;\n        let totalCacheStr = (0, utils_2.safeJsonStringify)(this.cache);\n        log.logDebug(`STORAGE: ${key} @ ${this.cache}`);\n        localStorage.setItem(localKey, totalCacheStr);\n    }\n    getItem(key) {\n        log.logDebug(`STORAGE >> getItem: ${key} @ ${this.cache}`);\n        return this.cache[key];\n    }\n    getCachedPBKDF2InfoKey() {\n        var _a, _b, _c, _d;\n        const pwLen = 32;\n        const saltLen = 24;\n        if (this.storeKey.length > 0 && ((_a = this.cipherIV) === null || _a === void 0 ? void 0 : _a.length) > 0) {\n            return {\n                pw: this.storeKey,\n                iv: this.cipherIV\n            };\n        }\n        let salt = (_b = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGER_CRYPTO_SALT)) === null || _b === void 0 ? void 0 : _b.content;\n        if (!salt) {\n            salt = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(saltLen));\n            this.saveContent(salt, storageconstants_1.OKXCONNECTOR_STORAGER_CRYPTO_SALT);\n        }\n        let pw = (_c = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD)) === null || _c === void 0 ? void 0 : _c.content;\n        if (!pw) {\n            pw = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(pwLen));\n            this.saveContent(pw, storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD);\n        }\n        let cipherIV = (_d = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV)) === null || _d === void 0 ? void 0 : _d.content;\n        if (!cipherIV) {\n            // let ivBuffer = Buffer.from(nacl.randomBytes(16))\n            let ivBuffer = tweetnacl_1.default.randomBytes(16);\n            cipherIV = (0, utils_1.toHexString)(ivBuffer);\n            this.saveContent(cipherIV, storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV);\n        }\n        this.cipherIV = cipherIV;\n        this.storeKey = (0, crypto_js_1.PBKDF2)(pw, salt, { iterations: 10 }).toString();\n        return {\n            pw: this.storeKey,\n            iv: this.cipherIV\n        };\n    }\n    encryptStoreMsg(msg, key) {\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg start ${Date.now()}`);\n        let storeInfo = this.getCachedPBKDF2InfoKey();\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg mid ${Date.now()}`);\n        var result = crypto_js_1.AES.encrypt(msg, storeInfo.pw).toString();\n        this.saveContent(result, key);\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg end ${Date.now()}`);\n    }\n    getAndDecrypt(key) {\n        (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt start ${Date.now()}`);\n        let item = this.getItem(key);\n        if (item && item.content) {\n            let storeInfo = this.getCachedPBKDF2InfoKey();\n            (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt mid ${Date.now()}`);\n            let result = crypto_js_1.AES.decrypt(item.content, storeInfo.pw).toString(crypto_js_1.enc.Utf8);\n            (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt end ${Date.now()}`);\n            return result;\n        }\n        return null;\n    }\n    clearCache(key = undefined) {\n        if (key === undefined) {\n            // clean all\n            this.cache = {};\n            let localKey = Storage.cacheKey + this.subKey;\n            localStorage.setItem(localKey, '');\n        }\n        else {\n            let localKey = Storage.cacheKey + this.subKey;\n            const localStorage = (0, utils_1.resolveLocalStorage)();\n            log.logDebug(this.cache);\n            this.cache[key] = null;\n            let totalCacheStr = (0, utils_2.safeJsonStringify)(this.cache);\n            log.logDebug(`STORAGE: clean key ${key} @ ${this.cache}`);\n            localStorage.setItem(localKey, totalCacheStr);\n        }\n    }\n}\nexports.Storage = Storage;\nStorage.cacheKey = 'OKXStorageKey';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCONNECTOR_STORAGE_CIPHER_METHOD = exports.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV = exports.OKXCONNECTOR_STORAGER_CRYPTO_SALT = exports.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD = exports.OKXCONNECTOR_TON_KEY = exports.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE = exports.OKXCONNECTOR_TOKEN_CACHE = exports.OKXCONNECTOR_JWT_KEY = exports.OKXCONNECTOR_SESSION_PREFIX_KEY = exports.OKXCONNECTOR_CRYPTO_KEY = exports.OKXCONNECTOR_CACHE_KEY_DAPP = exports.OKXCONNECTOR_CACHE_KEY = void 0;\nexports.OKXCONNECTOR_CACHE_KEY = \"ck\";\nexports.OKXCONNECTOR_CACHE_KEY_DAPP = \"ck_dapp\";\nexports.OKXCONNECTOR_CRYPTO_KEY = \"cck_k\";\nexports.OKXCONNECTOR_SESSION_PREFIX_KEY = \"cspk_\";\nexports.OKXCONNECTOR_JWT_KEY = \"cjk_k\";\nexports.OKXCONNECTOR_TOKEN_CACHE = \"ct\";\nexports.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE = \"csp\";\nexports.OKXCONNECTOR_TON_KEY = \"OKXStorage_ctc\";\nexports.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD = \"scp\";\nexports.OKXCONNECTOR_STORAGER_CRYPTO_SALT = \"scs\";\nexports.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV = \"scpc\";\nexports.OKXCONNECTOR_STORAGE_CIPHER_METHOD = \"aes-256-cbc\";\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletConnectionManagerEvent = exports.WalletConnectionManagerTopicInfoCacheKey = void 0;\nexports.WalletConnectionManagerTopicInfoCacheKey = \"wcmtic\";\nexports.WalletConnectionManagerEvent = {\n    RECEIVE_REQUEST: \"payload\"\n};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletConnectionManager = void 0;\nconst connect_1 = require(\"./connect\");\nconst commands_1 = require(\"./commands\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst jwtconstants_1 = require(\"./jwtconstants\");\nconst constants_1 = require(\"./constants\");\nconst walletConnectionConstants_1 = require(\"./walletConnectionConstants\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils/utils\");\nconst crypto_1 = require(\"../crypto/crypto\");\nconst jwt_1 = require(\"./jwt\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst utils_2 = require(\"../utils\");\nclass WalletConnectionManager {\n    constructor() {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.communicateEvents = new eventemitter3_1.EventEmitter();\n        log.logDebug('connect manager construct');\n        // local storage\n        this.connectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n        // this.crypto = new SessionCrypto()\n        this.jwtKeyPair = this.getCachedJWTKeyPair();\n        this.saveJWTKeyPair(this.jwtKeyPair);\n        // wss connection\n        this.connector = new connect_1.OKXWalletConnector(constants_1.OKXCONNECTOR_WS_URL_1);\n        this.packageId = Date.now();\n        // connection state\n        this.sessionCryptoInfoMap = new Map();\n        // log.logDebug(`this.connectedWalletPK  constructor   ${this.connectedWalletPK}`)\n        this.inLogin = false;\n        this.isLogined = false;\n    }\n    refreshPackageId(offset = 0) {\n        this.packageId = Date.now() + offset;\n    }\n    saveCryptoKeyPair(topicId, keyPair) {\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(keyPair);\n        // encrypt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_CRYPTO_KEY + topicId);\n    }\n    getCachedCryptoKeyPair(topicId) {\n        // decrypt kp\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_CRYPTO_KEY + topicId);\n        const content = kp;\n        if (typeof content == 'string') {\n            log.logDebug('get cached crypto key:');\n            log.logDebug(content);\n            let keyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            return keyPairInfo;\n        }\n        else {\n            this.connectStorage.clearCache();\n        }\n        return null;\n    }\n    saveJWTKeyPair(keyPair) {\n        var strkeyPair = {\n            publicKey: (0, utils_1.toHexString)(keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(keyPair.secretKey)\n        };\n        log.logDebug('save jwt kp');\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(strkeyPair);\n        log.logDebug(cacheInfo);\n        // encrypt jwt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        log.logDebug('after save jwt kp');\n    }\n    getCachedJWTKeyPair() {\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            // TODO: decrypt jwt kp\n            log.logDebug('get cached jwt kp:');\n            log.logDebug(content);\n            let strKeyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            log.logDebug('save jwt kp');\n            log.logDebug(strKeyPairInfo);\n            var keyPair = {\n                publicKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.publicKey),\n                secretKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.secretKey)\n            };\n            return keyPair;\n        }\n        else {\n            return (0, jwt_1.generateKeyPair)();\n        }\n    }\n    isTopicPublicKeyExist(topicId) {\n        log.logDebug(`isTopicPublicKeyExist  ===> ${topicId}`);\n        return this.sessionCryptoInfoMap.get(topicId);\n    }\n    makeJWT(timestampStr) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, jwt_1.signJWT)(timestampStr, jwtconstants_1.OKXCONNECTOR_JWT_WALLET_SIDE, jwtconstants_1.OKXCONNECTOR_JWT_TTL, // 24h\n            this.jwtKeyPair);\n        });\n    }\n    parseInternalMsg(internalMsg) {\n        try {\n            let internalObj = (0, safejson_1.safeJsonParse)(internalMsg);\n            let origin = internalObj['ivur-igbfft-ptjip'];\n            if (origin && origin.length > 0) {\n                let originContent = (0, utils_2.base64decode)(origin, true);\n                return originContent.toString();\n            }\n        }\n        catch (error) {\n            log.logError('parse internal msg', error);\n        }\n    }\n    updateClientId(topic, clientId) {\n        let sessionInfo = this.sessionCryptoInfoMap.get(topic);\n        (0, log_1.logDebug)('updateClientId', sessionInfo, topic, clientId);\n        if (sessionInfo && clientId && clientId.length > 0) {\n            if (sessionInfo.cid) {\n                // check\n                let lastCheck = (0, utils_1.getLastSixMd5Hash)(clientId);\n                if (sessionInfo.cid == lastCheck) {\n                    sessionInfo.dappPublicKey = clientId;\n                }\n                else {\n                    log.logError('cid check failed', sessionInfo, topic, clientId);\n                }\n            }\n            else {\n                sessionInfo.dappPublicKey = clientId;\n            }\n            // \n            this.syncCacheSessionInfo();\n        }\n        return false;\n    }\n    parsePackage(topic_1, input_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, input, ignoreACK = false) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;\n            this.events.emit(input.id, input);\n            // emit event\n            let sessionInfo = this.sessionCryptoInfoMap.get(topic);\n            log.logDebug('get sessionInfo for decrypt topic:', topic);\n            log.logDebug('get sessionInfo for decrypt:', input.id, topic, sessionInfo, this.sessionCryptoInfoMap);\n            if (sessionInfo && input.params.data) {\n                if ((_a = input.params.data) === null || _a === void 0 ? void 0 : _a.message) {\n                    // try parse internal message\n                    if ((_b = input.params.data) === null || _b === void 0 ? void 0 : _b.isInternalData) {\n                        let inner_message = (_c = input.params.data) === null || _c === void 0 ? void 0 : _c.message;\n                        let inner_topic = (_d = input.params.data) === null || _d === void 0 ? void 0 : _d.topic;\n                        let originContent = this.parseInternalMsg(inner_message);\n                        (0, log_1.logDebug)('parse internal origin: ', originContent);\n                        if (originContent && originContent.length > 0) {\n                            this.communicateEvents.emit(\"origin\", originContent, inner_topic);\n                        }\n                    }\n                    else {\n                        // try parse message base64\n                        try {\n                            let message = (_e = input.params.data) === null || _e === void 0 ? void 0 : _e.message;\n                            if (message.trimStart().startsWith('{')) {\n                                let messageObj = (0, safejson_1.safeJsonParse)(message);\n                                if (messageObj.method) {\n                                    if (messageObj.method == 'session_info') {\n                                        let sessionInfoString = messageObj.params.sessionInfo;\n                                        let base64Content = (0, utils_2.base64decode)(sessionInfoString, false);\n                                        (0, log_1.logDebug)(\"wallet connection manager requset base64Content:\", base64Content);\n                                        (0, log_1.logDebug)(\"base64Content:\" + base64Content);\n                                        let inner_connection = base64Content.toObject();\n                                        this.updateClientId(topic, inner_connection.clientId);\n                                    }\n                                    (0, log_1.logDebug)('<<< parse raw msg:', topic, messageObj);\n                                    this.communicateEvents.emit(topic, message);\n                                }\n                            }\n                            else {\n                                let message = sessionInfo.crypto.decryptWallet((_f = input.params.data) === null || _f === void 0 ? void 0 : _f.message, sessionInfo.dappPublicKey);\n                                (0, log_1.logDebug)('<<< receive msg:', topic, message);\n                                this.communicateEvents.emit(topic, message);\n                            }\n                        }\n                        catch (error) {\n                            let message = sessionInfo.crypto.decryptWallet((_g = input.params.data) === null || _g === void 0 ? void 0 : _g.message, sessionInfo.dappPublicKey);\n                            (0, log_1.logDebug)('<<< receive msg:', topic, message);\n                            this.communicateEvents.emit(topic, message);\n                        }\n                    }\n                }\n                else {\n                }\n            }\n            // send back ACK\n            if (!ignoreACK) {\n                yield this.sendACK(input.id, true);\n                if (topic) {\n                    let inputObj = input;\n                    if ((_j = (_h = inputObj.params) === null || _h === void 0 ? void 0 : _h.data) === null || _j === void 0 ? void 0 : _j.messageId) {\n                        this.refreshPackageId();\n                        yield this.sendReceive(this.packageId.toString(), (_l = (_k = inputObj.params) === null || _k === void 0 ? void 0 : _k.data) === null || _l === void 0 ? void 0 : _l.messageId, topic);\n                    }\n                }\n            }\n        });\n    }\n    recovrySessionInfoFromCache() {\n        // get topic ids and keys from session\n        // WalletConnectionCryptoCacheMap\n        // {[topicId]: {cryptoKeypair: {publicKey:string, secretKey:string}, dappPublicKey:clientId}}\n        let jsonStr = this.connectStorage.getAndDecrypt(walletConnectionConstants_1.WalletConnectionManagerTopicInfoCacheKey);\n        log.logDebug('get cached sessionInfos:', jsonStr);\n        if (jsonStr) {\n            let cacheMap = (0, safejson_1.safeJsonParse)(jsonStr);\n            for (let topicId in cacheMap) {\n                let topicItem = cacheMap[topicId];\n                log.logDebug('make topicItem:', topicItem);\n                let cryptoItem = {\n                    topic: topicId,\n                    crypto: new crypto_1.SessionCrypto({\n                        publicKey: topicItem.cryptoKeyPair.publicKey,\n                        secretKey: topicItem.cryptoKeyPair.secretKey\n                    }),\n                    dappPublicKey: topicItem.dappPublicKey,\n                    cid: topicItem.cid\n                };\n                this.sessionCryptoInfoMap.set(topicId, cryptoItem);\n            }\n        }\n        log.logDebug('get cached sessionInfos map:', this.sessionCryptoInfoMap);\n    }\n    syncCacheSessionInfo() {\n        let cacheMap = {};\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            log.logDebug('for each Keys', topicId);\n            if (cryptoItem) {\n                cacheMap[topicId] = {\n                    cryptoKeyPair: cryptoItem.crypto.stringifyKeypair(),\n                    dappPublicKey: cryptoItem.dappPublicKey,\n                    cid: cryptoItem.cid\n                };\n            }\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(cacheMap);\n        log.logDebug('sync cache sessionInfos:', jsonData);\n        this.connectStorage.encryptStoreMsg(jsonData, walletConnectionConstants_1.WalletConnectionManagerTopicInfoCacheKey);\n    }\n    cacheSessionInfo(topic, sessionInfo, sync = true) {\n        let dappPublicKey = sessionInfo.dappPublicKey;\n        // 1. search dapp public related topic ids\n        let duplicatedTopics = [];\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            log.logDebug('for each Keys', topicId);\n            if (cryptoItem.dappPublicKey == dappPublicKey) {\n                log.logDebug('duplicated dapp public key:', topicId, dappPublicKey);\n                duplicatedTopics.push(topicId);\n            }\n        }\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            if (duplicatedTopics.includes(topicId)) {\n                this.sessionCryptoInfoMap.delete(topicId);\n            }\n        }\n        // discard useless topics\n        log.logDebug('cleaned connect session cache:', this.sessionCryptoInfoMap);\n        // 2. remove previous connected topic ids\n        // 3. write in current topic\n        this.sessionCryptoInfoMap.set(topic, sessionInfo);\n        // TODO: search domain info and then delete \n        log.logDebug('cache sessionInfo:', topic, sessionInfo, this.sessionCryptoInfoMap);\n        if (sync) {\n            this.syncCacheSessionInfo();\n        }\n        return duplicatedTopics;\n    }\n    // add and subscribe topic\n    appendTopic(topic, sessionPublicKey, cid) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('4.1. get append Topic:', topic);\n            // 1. check if connected\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                if (!this.isLogined) {\n                    var error = new Error();\n                    error.message = \"connection is not logined\";\n                    error.name = \"append error\";\n                    // throw error\n                    reject(error);\n                    return;\n                }\n                // 2. subscribe topic and session public key\n                let cryptoItem = {\n                    topic: topic,\n                    crypto: new crypto_1.SessionCrypto(),\n                    dappPublicKey: sessionPublicKey ? sessionPublicKey : \"\",\n                    cid: cid\n                };\n                let duplicatedTopics = this.cacheSessionInfo(topic, cryptoItem, false);\n                // make sure cache session info before subscribe\n                yield this.subscribeTopics(Array.from([topic]));\n                this.refreshPackageId();\n                log.logDebug(`5. subscribe callback then fetch append message: ${this.packageId}, ${topic}`);\n                log.reportLog(`5. subscribe callback then fetch append message`);\n                const timeF = new Date().getTime();\n                (0, log_1.logDebug)(\"Append --subscribe callback->\", timeF - this.timeLog);\n                resolve(duplicatedTopics);\n            }));\n        });\n    }\n    confirmAppendingTopics() {\n        this.syncCacheSessionInfo();\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.timeLog = new Date().getTime();\n            (0, log_1.logDebug)(\"[Wallet] ConnectTime---enter->\", this.timeLog);\n            log.reportLog('wallet connect connect called');\n            // 0. get cached topics and infos\n            let timestampStr = Date.now().toString();\n            var jwtToken = yield this.makeJWT(timestampStr);\n            log.logDebug(`generate jwt token: ${jwtToken}`);\n            this.connectStorage.saveContent(jwtToken, 'jwt');\n            this.recovrySessionInfoFromCache();\n            // 1.\n            return new Promise((resolve, reject) => {\n                // 1. when websocket opened\n                this.inLogin = true;\n                this.connector.onOpen(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug(`1. connector on open`);\n                    log.reportLog('1. wallet connect connect on open');\n                    const timeOne = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---open->\", timeOne - this.timeLog);\n                    //2. send jwt to login\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when login');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // throw error\n                            reject(error);\n                        }\n                        else {\n                            this.isLogined = true;\n                            resolve();\n                            // 3. subscribe cached topics\n                            log.logDebug('3. subscribe cached topics', this.sessionCryptoInfoMap);\n                            log.reportLog('3. wallet connect connect subscribe cached topics');\n                            if (this.sessionCryptoInfoMap.size > 0) {\n                                yield this.subscribeTopics(Array.from(this.sessionCryptoInfoMap.keys()));\n                            }\n                        }\n                    }));\n                    log.logDebug(`2. login called`);\n                    log.reportLog('2. wallet connect login called');\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        return yield this.connector.connect();\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_LOGIN,\n                        params: {\n                            token: jwtToken\n                        }\n                    });\n                }));\n                this.connector.connect().catch((err) => {\n                    (0, log_1.logDebug)('WalletConnectionManager connect error', err);\n                    reject(err);\n                });\n                // add callback\n                this.connector.addPackageParse((event) => {\n                    var _a, _b;\n                    log.logDebug(`connect: parse package`);\n                    log.logDebug(event);\n                    if (!(\"params\" in event) || !(\"data\" in event[\"params\"])) {\n                        this.parsePackage(\"\", event, true);\n                        return;\n                    }\n                    // ignore receive echo\n                    if ((_a = event.params.data) === null || _a === void 0 ? void 0 : _a.topic) {\n                        this.parsePackage((_b = event.params.data) === null || _b === void 0 ? void 0 : _b.topic, event, event.method === commands_1.CONNECT_METHOD_RECEIVE);\n                    }\n                });\n                // this.connector.addListener(safeJsonStringify(event), (rawMsg: string)=> {\n                //    rawMsg = rawMsg.replace(/'/g, '\"')\n                //    log.logDebug(`addListener ===> ${rawMsg}`)\n                //    if (typeof rawMsg !== 'undefined') {\n                //       var msgObj = safeJsonParse(rawMsg)\n                //       var msg = msgObj.message\n                //       let crypto = \n                //       var result = this.crypto.decrypt(msg, this.connectedWalletPK)\n                //       log.logDebug(`addListener ===> ${result}`)\n                //       return result\n                //    }\n                //    return undefined\n                // }, ()=>{\n                //    // emit success\n                // }, ()=>{\n                //    // emit fail\n                // })\n            });\n        });\n    }\n    // 获取对应topic session下的钱包公钥\n    // 在返回approve时需要填充到clientId字段中\n    getSessionPublicKey(topicId) {\n        if (this.isTopicPublicKeyExist(topicId)) {\n            let item = this.sessionCryptoInfoMap.get(topicId);\n            if (item) {\n                return (0, utils_1.toHexString)(item.crypto.keyPair.publicKey);\n            }\n        }\n        return undefined;\n    }\n    getCurrentCachedTopicIdList() {\n        return Array.from(this.sessionCryptoInfoMap.keys());\n    }\n    disconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            yield this.connector.disconnect();\n            //clean cached topic\n            //如果是恢复连接，就不清理解密public key\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            if (!fromRestore) {\n                this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n            }\n        });\n    }\n    send(topic_1, msg_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, msg, needPublicKey = false, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL, useRaw = false) {\n            var _a, _b;\n            // make send msg payload\n            log.logDebug(`message send =====> ${msg}`);\n            if (!this.isTopicPublicKeyExist(topic)) {\n                // channel not ready\n                throw new Error('connection not finish');\n            }\n            let connectedDappPK = (_a = this.sessionCryptoInfoMap.get(topic)) === null || _a === void 0 ? void 0 : _a.dappPublicKey;\n            let cryptoObject = (_b = this.sessionCryptoInfoMap.get(topic)) === null || _b === void 0 ? void 0 : _b.crypto;\n            let messageObj = undefined;\n            if (useRaw) {\n                messageObj = {\n                    message: msg,\n                };\n            }\n            if (cryptoObject && connectedDappPK && !useRaw) {\n                let message = cryptoObject.encryptWallet(msg, connectedDappPK);\n                messageObj = {\n                    message: message,\n                };\n            }\n            if (messageObj) {\n                if (needPublicKey && cryptoObject) {\n                    messageObj.clientId = (0, utils_1.toHexString)(cryptoObject.keyPair.publicKey);\n                    // let privateKey = toHexString(cryptoObject.keyPair.secretKey)\n                    // log.logDebug(`message send use dapp publicKey =====> ${connectedDappPK}`)\n                    // log.logDebug(`message send use publicKey =====> ${messageObj.clientId}`)\n                    // log.logDebug(`message send use secretKey =====> ${privateKey}`)\n                }\n                this.refreshPackageId();\n                const payload = {\n                    id: this.packageId.toString(),\n                    method: commands_1.CONNECT_METHOD_PUBLISH,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    params: {\n                        message: {\n                            topic: topic,\n                            message: (0, safejson_1.safeJsonStringify)(messageObj),\n                            ttl: ttl\n                        }\n                    } // crypted\n                };\n                this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                    // ack\n                    if (rsp && rsp.error) {\n                        log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                    }\n                    else if (rsp && !rsp.error) {\n                        log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                    }\n                }));\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n                return this.packageId;\n            }\n        });\n    }\n    sendACK(msgId_1, success_1) {\n        return __awaiter(this, arguments, void 0, function* (msgId, success, reason = undefined) {\n            if (success === true) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    result: true\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n            else if (reason) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    error: {\n                        code: reason.code, //int\n                        message: reason.message\n                    }\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    // send receive\n    sendReceive(msgId, messageId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECEIVE,\n                params: {\n                    data: {\n                        messageId: messageId,\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendUnsubscribe(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO: make disconnect payload\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), {\n                id: this.packageId.toString(),\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_UNSUB,\n                params: {\n                    topic: topic\n                }\n            });\n            // remove topicId\n            this.sessionCryptoInfoMap.delete(topic);\n            this.syncCacheSessionInfo();\n        });\n    }\n    // send receive\n    // 1. fetch all \n    // 2. send back receive\n    // 3. check has more, if so, repeat from 1st step\n    sendFetchAndConsumeMessages(msgId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(msgId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic == topic) {\n                                let messageId = msg.messageId;\n                                yield this.connector.getMsgPayloadFromHistory(msg);\n                                // send receive command to relay server\n                                this.refreshPackageId();\n                                yield this.sendReceive(this.packageId.toString(), messageId, topic);\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_FETCHMSG,\n                params: {\n                    data: {\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendBatchFetchAndConsumeMessages(packageId, topicIdList) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(packageId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic) {\n                                let messageId = msg.messageId;\n                                yield this.connector.getMsgPayloadFromHistory(msg);\n                                // send receive command to relay server\n                                this.refreshPackageId(i);\n                                yield this.sendReceive(this.packageId.toString(), messageId, msg.topic);\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendBatchFetchAndConsumeMessages(this.packageId.toString(), topicIdList);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            log.reportLog('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: packageId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_BATCH_FETCHMSG,\n                params: {\n                    topics: topicIdList,\n                    withInternalData: true\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                yield this.connector.connect();\n            }), payload);\n        });\n    }\n    cleanCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.connectStorage.clearCache();\n        });\n    }\n    saveSessionContent(key, data) {\n        if (!data) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(data);\n        this.connectStorage.encryptStoreMsg(jsonData, storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n    }\n    getSessionContent(key) {\n        let jsonStr = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        if (jsonStr) {\n            let object = (0, safejson_1.safeJsonParse)(jsonStr);\n            return object;\n        }\n        return undefined;\n    }\n    // subscribe then fetch messages for each topics\n    subscribeTopics(topicIdList) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)(\"4. topicid list\", topicIdList);\n            log.reportLog(\"4. topicid list\");\n            this.refreshPackageId();\n            const timeF = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let finishCount = 0;\n                //3. send subscribe\n                for (let idx = 0; idx < topicIdList.length; ++idx) {\n                    let topicId = topicIdList[idx];\n                    this.refreshPackageId(idx);\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when subscribe');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // reject(error)\n                            finishCount += 1;\n                            if (finishCount == topicIdList.length) {\n                                resolve();\n                            }\n                        }\n                        this.refreshPackageId(idx);\n                        const timeF = new Date().getTime();\n                        (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n                        finishCount += 1;\n                        if (finishCount == topicIdList.length) {\n                            // 4. fetch messages\n                            log.logDebug(`5. send fetch msg: ${this.packageId}, ${topicId}`);\n                            yield this.sendBatchFetchAndConsumeMessages(this.packageId.toString(), topicIdList);\n                            resolve();\n                        }\n                    }));\n                    log.logDebug(`3. login callback then send subscribe: ${this.packageId}, ${topicId}`);\n                    log.reportLog('3. login callback then send subscribe');\n                    const timeTh = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---login callback->\", timeTh - this.timeLog);\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        return yield this.connector.connect();\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_SUB,\n                        params: {\n                            topic: topicId\n                        }\n                    });\n                }\n            }));\n        });\n    }\n}\nexports.WalletConnectionManager = WalletConnectionManager;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AppwalletConnector = void 0;\nconst ws_connector_1 = require(\"./ws-connector\");\nconst iconnector_1 = require(\"./iconnector\");\nconst utils_1 = require(\"../utils\");\nconst constants_1 = require(\"../protocol/constants\");\nclass AppwalletConnector extends ws_connector_1.WsConnector {\n    static getConnector() {\n        if (!this.instance) {\n            this.instance = new AppwalletConnector();\n        }\n        return this.instance;\n    }\n    constructor() {\n        super();\n        this.walletName = 'OKX App Wallet';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectApp';\n    }\n    getTag() {\n        return iconnector_1.OKX_APP_WALLET;\n    }\n    openWallet(engineConnectInfo) {\n        var _a;\n        if (engineConnectInfo) {\n            let connectRequest = engineConnectInfo.connectRequest;\n            (0, utils_1.logDebug)(`appwallet-connector openwallet before useSHortLink engineConnectInfo.connectRequest JSON ${JSON.stringify(engineConnectInfo)}`);\n            if ((0, utils_1.useShortLink)()) {\n                let shortUniversalLink = (0, utils_1.getOKXLink)(connectRequest);\n                (0, utils_1.openOKXUniversalLink)(shortUniversalLink);\n            }\n            else {\n                (0, utils_1.logDebug)(`appwallet-connector openwallet else connectRequest ${connectRequest}`);\n                let appConnectEncodeParams = (0, utils_1.encodeConnectParams)(Object.assign(Object.assign({}, connectRequest), { redirect: (_a = engineConnectInfo.redirect) !== null && _a !== void 0 ? _a : \"none\" }));\n                let appDeepLink = (0, utils_1.getAppWalletDeepLink)(appConnectEncodeParams);\n                (0, utils_1.openOKXDeeplinkWithFallback)(appDeepLink);\n            }\n        }\n        else {\n            if ((0, utils_1.isOS)('android')) {\n                (0, utils_1.openDeeplinkWithFallback)(constants_1.stackDeepLink, () => { });\n            }\n            else {\n                (0, utils_1.openLinkBlank)(constants_1.standardUniversalLink);\n            }\n        }\n    }\n}\nexports.AppwalletConnector = AppwalletConnector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_TG_WALLET = exports.OKX_APP_WALLET = exports.OKX_INJECT_WALLET = void 0;\nexports.OKX_INJECT_WALLET = \"okx_inject_wallet\";\nexports.OKX_APP_WALLET = \"okx_app_wallet\";\nexports.OKX_TG_WALLET = \"okx_tg_wallet\";\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OkxwalletInjectConnector = exports.WsConnector = exports.TgwalletConnector = exports.InjectConnector = exports.OKX_INJECT_WALLET = exports.OKX_APP_WALLET = exports.OKX_TG_WALLET = exports.AppwalletConnector = void 0;\nvar appwallet_connector_1 = require(\"./appwallet-connector\");\nObject.defineProperty(exports, \"AppwalletConnector\", { enumerable: true, get: function () { return appwallet_connector_1.AppwalletConnector; } });\nvar iconnector_1 = require(\"./iconnector\");\nObject.defineProperty(exports, \"OKX_TG_WALLET\", { enumerable: true, get: function () { return iconnector_1.OKX_TG_WALLET; } });\nObject.defineProperty(exports, \"OKX_APP_WALLET\", { enumerable: true, get: function () { return iconnector_1.OKX_APP_WALLET; } });\nObject.defineProperty(exports, \"OKX_INJECT_WALLET\", { enumerable: true, get: function () { return iconnector_1.OKX_INJECT_WALLET; } });\nvar inject_connector_1 = require(\"./inject-connector\");\nObject.defineProperty(exports, \"InjectConnector\", { enumerable: true, get: function () { return inject_connector_1.InjectConnector; } });\nvar tgwallet_connector_1 = require(\"./tgwallet-connector\");\nObject.defineProperty(exports, \"TgwalletConnector\", { enumerable: true, get: function () { return tgwallet_connector_1.TgwalletConnector; } });\nvar ws_connector_1 = require(\"./ws-connector\");\nObject.defineProperty(exports, \"WsConnector\", { enumerable: true, get: function () { return ws_connector_1.WsConnector; } });\nvar okxwallet_inject_connector_1 = require(\"./okxwallet-inject-connector\");\nObject.defineProperty(exports, \"OkxwalletInjectConnector\", { enumerable: true, get: function () { return okxwallet_inject_connector_1.OkxwalletInjectConnector; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InjectConnector = void 0;\nconst protocol_1 = require(\"../protocol\");\nconst utils_1 = require(\"../utils\");\nconst provider_1 = require(\"../inject/provider\");\nconst iconnector_1 = require(\"./iconnector\");\nconst SolProvider_1 = require(\"../inject/provider/SolProvider\");\nconst wallet_info_1 = require(\"../protocol/connect/wallet-info\");\nconst AptosPrivider_1 = require(\"../inject/provider/AptosPrivider\");\nconst media_1 = require(\"../utils/media\");\nclass InjectConnector {\n    constructor() {\n        this.disconnectListener = [];\n        this.providerMap = new Map();\n        this.walletName = \"\";\n        this.walletNameKey = '';\n        this.enable = true;\n        this.providerMap.set(protocol_1.NameSpaceKeyEip155, new provider_1.Eip155Provider());\n        this.providerMap.set(protocol_1.NameSpaceKeySOL, new SolProvider_1.SolProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeyAptos, new AptosPrivider_1.AptosProvider());\n    }\n    getInjectProvider(nameSpace) {\n        for (const [mapKey, value] of this.providerMap.entries()) {\n            if (nameSpace.includes(mapKey)) {\n                return value;\n            }\n        }\n        return undefined;\n    }\n    openWallet(engineConnectInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c;\n            (0, utils_1.logDebug)(\"InjectEngine connect begin:\", JSON.stringify(engineConnectInfo));\n            if (!engineConnectInfo) {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR);\n            }\n            var universalConnectRequest = engineConnectInfo.connectRequest;\n            try {\n                if (window && window.okxwallet) {\n                    if (universalConnectRequest.requests) {\n                        let requestAccounts = universalConnectRequest.requests\n                            .find(item => item.name === \"requestAccounts\");\n                        let version = yield window.okxwallet.getVersion();\n                        let result = {\n                            method: \"connect\",\n                            requestId: universalConnectRequest.requestId,\n                            payload: {\n                                wallet: {\n                                    platform: (_a = navigator.platform) !== null && _a !== void 0 ? _a : \"/\",\n                                    appName: wallet_info_1.OKXInjectWalletName,\n                                    appVersion: version !== null && version !== void 0 ? version : \"1.0.0\",\n                                    maxProtocolVersion: 1,\n                                },\n                                responses: []\n                            },\n                        };\n                        let responseItem = {\n                            name: \"requestAccounts\",\n                            accounts: [],\n                        };\n                        result.payload.responses.push(responseItem);\n                        var accounts = yield this.getAccountByRequestWallets(true, (_b = requestAccounts.requiredNamespaces) !== null && _b !== void 0 ? _b : [], (_c = requestAccounts.optionalNamespaces) !== null && _c !== void 0 ? _c : []);\n                        if (accounts) {\n                            responseItem.accounts.push(...accounts);\n                            if (responseItem.accounts.length === 0) {\n                                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"connect connectAccounts is null\");\n                            }\n                        }\n                        else {\n                            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"connect requestWallets is null\");\n                        }\n                        if (this.connectResultListener) {\n                            this.connectResultListener(result);\n                        }\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR);\n                }\n            }\n            catch (error) {\n                var code = protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR;\n                var message = '';\n                if (error instanceof protocol_1.OKXConnectError) {\n                    code = error.code;\n                    message = error.message;\n                }\n                if (this.connectResultListener) {\n                    this.connectResultListener({\n                        requestId: \"-1\",\n                        method: 'connect_error',\n                        payload: {\n                            code: code\n                        }\n                    });\n                }\n            }\n        });\n    }\n    disconnect() {\n        (0, utils_1.logDebug)('InjectEngine ==>> disconnect  okxwallet.disconnect()');\n        if (window.okxwallet) {\n            window.okxwallet.disconnect();\n        }\n    }\n    getRequestId() {\n        const requestId = Date.now().toString();\n        (0, utils_1.logDebug)('InjectEngine ==>> getRequestId ==>', requestId);\n        return requestId;\n    }\n    send(request, requestAnswer) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                (0, utils_1.logDebug)(\"InjectEngine send  > request:\", (0, utils_1.safeJsonStringify)(request));\n                let newRequest = request;\n                if (newRequest.method === 'disconnect') {\n                    this.disconnect();\n                    this.disconnectListener = [];\n                    (_a = requestAnswer.onAck) === null || _a === void 0 ? void 0 : _a.call(requestAnswer);\n                    return;\n                }\n                const injectProvider = this.getInjectProvider(newRequest.chainId);\n                if (injectProvider) {\n                    injectProvider.send(newRequest).then(result => {\n                        var _a;\n                        (0, utils_1.logDebug)(\"InjectEngine ==>> send > result:\", result);\n                        (_a = requestAnswer.resolve) === null || _a === void 0 ? void 0 : _a.call(requestAnswer, result);\n                    }).catch(error => {\n                        var _a;\n                        let code = error.code;\n                        if (code === 4001) {\n                            code = protocol_1.OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR;\n                        }\n                        let errorResponse = {\n                            requestId: this.getRequestId(),\n                            method: request.method,\n                            error: {\n                                code: code,\n                                message: error.message\n                            }\n                        };\n                        (0, utils_1.logDebug)(\"InjectEngine ==>> send > errorResponse:\", JSON.stringify(errorResponse));\n                        (_a = requestAnswer.resolve) === null || _a === void 0 ? void 0 : _a.call(requestAnswer, errorResponse);\n                    });\n                    return;\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"InjectEngine ==>> send  ===> error:\", error);\n                return Promise.reject(error);\n            }\n        });\n    }\n    clearData() {\n        this.connectResultListener = undefined;\n    }\n    addDisconnectListener(disconnecter) {\n        this.disconnectListener.push(disconnecter);\n    }\n    setOnConnectResultListener(connectResultListener) {\n        this.connectResultListener = connectResultListener;\n    }\n    connectManagerDisconnect() {\n        return __awaiter(this, arguments, void 0, function* (_ = false) {\n        });\n    }\n    getCurrentConnectionReady(namespaceKeys) {\n        if (!namespaceKeys) {\n            return false;\n        }\n        const allReady = namespaceKeys.every(namespaceKey => { var _a; return (_a = this.getInjectProvider(namespaceKey)) === null || _a === void 0 ? void 0 : _a.connectReady(); });\n        return allReady;\n    }\n    getTag() {\n        return iconnector_1.OKX_INJECT_WALLET;\n    }\n    toJSON() {\n        return \"inject-connector\";\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        if ((0, media_1.isDevice)('mobile')) {\n            if (!window.okxwallet) {\n                onConnectResult(null);\n                return;\n            }\n            var requiredNamespaces = [];\n            for (let namespacesKey in sessionInfo.namespaces) {\n                var connectWalletNameSpace = {\n                    namespace: namespacesKey,\n                    chains: sessionInfo.namespaces[namespacesKey].chains\n                };\n                requiredNamespaces.push(connectWalletNameSpace);\n            }\n            var currentWallet = this.getAccountByRequestWallets(false, requiredNamespaces, [])\n                .then((accounts) => {\n                //compare account with sessionInfo\n                for (let namespacesKey in sessionInfo.namespaces) {\n                    var accountsItem = accounts.find((item) => item.namespace === namespacesKey);\n                    var sessionAccounts = sessionInfo.namespaces[namespacesKey].accounts;\n                    if (!accountsItem) {\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"resotreconnect error: accountItem error\");\n                    }\n                    const areEqual = accountsItem.addresses.length === sessionAccounts.length &&\n                        accountsItem.addresses.slice().sort().every((value, index) => value === sessionAccounts.slice().sort()[index]);\n                    if (areEqual) {\n                        onConnectResult(sessionInfo);\n                    }\n                    else {\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"resotreconnect error: address not as same as session\");\n                    }\n                }\n            }).catch((e) => {\n                onConnectResult(null);\n            });\n        }\n        else {\n            onConnectResult(sessionInfo);\n        }\n    }\n    getAccountByRequestWallets(needPop, requiredNamespaces, optionalNamespaces) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                var walletInfo = [];\n                var accountResult = [];\n                if ((0, media_1.isDevice)(\"mobile\")) {\n                    var walletInfoItem = yield window.okxwallet.requestWallets(needPop, {\n                        requiredNamespaces: requiredNamespaces,\n                        optionalNamespaces: optionalNamespaces\n                    });\n                    walletInfo.push(walletInfoItem);\n                }\n                else {\n                    walletInfo = (yield window.okxwallet.requestWallets(needPop));\n                }\n                var allNameSpace = [...(requiredNamespaces !== null && requiredNamespaces !== void 0 ? requiredNamespaces : []), ...(optionalNamespaces !== null && optionalNamespaces !== void 0 ? optionalNamespaces : [])];\n                let walletInfoFirst = walletInfo[0];\n                (0, utils_1.logDebug)(\"InjectEngine connect connectAccounts:\", JSON.stringify(walletInfoFirst));\n                if (allNameSpace && walletInfoFirst && walletInfoFirst.address) {\n                    for (const [mapKey, provider] of this.providerMap.entries()) {\n                        let itemResult = yield provider.parseConnectResponse(allNameSpace, walletInfoFirst);\n                        if (itemResult) {\n                            accountResult.push(itemResult);\n                        }\n                    }\n                }\n                if (window.okxwallet) {\n                    window.okxwallet.on('accountsChanged', (accounts) => {\n                        (0, utils_1.logDebug)(\"Accounts Changed----->\", JSON.stringify(accounts));\n                        if (accounts && accounts.length === 0) {\n                            this.disconnectListener.forEach(listener => listener());\n                            this.disconnectListener = [];\n                        }\n                    });\n                }\n                return accountResult;\n            }\n            catch (e) {\n                if (e && typeof e === \"object\" && \"code\" in e) {\n                    if (e.code === 4001) {\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR);\n                    }\n                }\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n            }\n        });\n    }\n}\nexports.InjectConnector = InjectConnector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OkxwalletInjectConnector = void 0;\nconst inject_connector_1 = require(\"./inject-connector\");\nclass OkxwalletInjectConnector extends inject_connector_1.InjectConnector {\n    static getConnector() {\n        if (!this.instance) {\n            this.instance = new OkxwalletInjectConnector();\n        }\n        return this.instance;\n    }\n    constructor() {\n        super();\n        this.walletName = 'OKX Wallet Extension';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectInject';\n    }\n}\nexports.OkxwalletInjectConnector = OkxwalletInjectConnector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TgwalletConnector = void 0;\nconst ws_connector_1 = require(\"./ws-connector\");\nconst iconnector_1 = require(\"./iconnector\");\nconst utils_1 = require(\"../utils\");\nclass TgwalletConnector extends ws_connector_1.WsConnector {\n    static getConnector() {\n        if (!this.instance) {\n            this.instance = new TgwalletConnector();\n        }\n        return this.instance;\n    }\n    constructor() {\n        super();\n        this.walletName = 'OKX Mini Wallet';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectMini';\n    }\n    getTag() {\n        return iconnector_1.OKX_TG_WALLET;\n    }\n    openWallet(engineConnectInfo) {\n        var _a;\n        var encodeTGParams;\n        if (engineConnectInfo && engineConnectInfo.connectRequest) {\n            encodeTGParams = (0, utils_1.encodeTWAConnectURLParams)(Object.assign(Object.assign({}, engineConnectInfo.connectRequest), { redirect: \"none\" }));\n        }\n        var tgUrl = (0, utils_1.getTelegramWalletTWAUrl)(encodeTGParams, (_a = engineConnectInfo === null || engineConnectInfo === void 0 ? void 0 : engineConnectInfo.tmaReturnUrl) !== null && _a !== void 0 ? _a : \"back\");\n        (0, utils_1.openOKXTMAWalletlinkWithFallback)(tgUrl);\n    }\n}\nexports.TgwalletConnector = TgwalletConnector;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WsConnector = void 0;\nconst safejson_1 = require(\"../utils/safejson\");\nconst log_1 = require(\"../utils/log\");\nclass WsConnector {\n    constructor() {\n        this.disconnectListener = [];\n        this.walletName = '';\n        this.walletNameKey = '';\n        this.enable = true;\n        this.pendingRequests = new Map();\n        // report api begin\n        (0, log_1.getDefaultReporter)().beginReport();\n    }\n    setConnectionManager(connectionManager) {\n        this.connectionManager = connectionManager;\n    }\n    addConnectionListener() {\n        var _a;\n        (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.addListener(\"sdk_response\", (event, msg) => {\n            var jsonResponse = (0, safejson_1.safeJsonParse)(msg);\n            (0, log_1.logDebug)(`Engine ==>> addListener ==> success ==> ${jsonResponse}`);\n            this.handleResponse(event, jsonResponse);\n        }, function () {\n        });\n    }\n    setSessionConnectingListener(sessionConnectingListener) {\n        this.sessionConnectingListener = sessionConnectingListener;\n    }\n    addDisconnectListener(disconnecter) {\n        this.disconnectListener.push(disconnecter);\n    }\n    connectManagerDisconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.disconnect(fromRestore));\n        });\n    }\n    openWallet(engineConnectInfo) {\n    }\n    bindRequestForPromise(requestId, resolve) {\n        this.pendingRequests.set(requestId, resolve);\n    }\n    send(request, requestAnswer, ttl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b;\n            (0, log_1.logDebug)('Engine ==>> send  request==>', JSON.stringify(request));\n            const requestId = this.getRequestId();\n            try {\n                let packageId = yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.send(JSON.stringify(Object.assign(Object.assign({}, request), { requestId: requestId })), ttl));\n                if (packageId) {\n                    (_b = this.connectionManager) === null || _b === void 0 ? void 0 : _b.events.once(packageId.toString(), (event) => {\n                        var _a;\n                        (0, log_1.logDebug)(`Engine ==> send => onAck => ${(0, safejson_1.safeJsonStringify)(event)}`);\n                        if (event && event.result) {\n                            (_a = requestAnswer.onAck) === null || _a === void 0 ? void 0 : _a.call(requestAnswer);\n                        }\n                    });\n                }\n                if (requestAnswer.resolve) {\n                    this.bindRequestForPromise(requestId, requestAnswer.resolve);\n                }\n            }\n            catch (e) {\n                return Promise.reject(e);\n            }\n        });\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.restoreConnect(sessionInfo.topic));\n            onConnectResult(sessionInfo);\n        });\n    }\n    restoreconnectFromTopic(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.restoreConnect(topic));\n        });\n    }\n    getRequestId() {\n        const requestId = Date.now().toString();\n        (0, log_1.logDebug)('Engine ==>> getRequestId ==>', requestId);\n        return requestId;\n    }\n    handleResponse(event, response) {\n        (0, log_1.logDebug)(`Engine ==>> handleResponse_1  ======>response: ${(0, safejson_1.safeJsonStringify)(response)}`, event);\n        if (\"requestId\" in response) {\n            (0, log_1.logDebug)(\"Engine ==>> handleResponse_2  ===> in response\");\n            let requestId = response.requestId;\n            const resolve = this.pendingRequests.get(requestId);\n            if (resolve) {\n                (0, log_1.logDebug)(\"Engine ==>> handleResponse_3  ===> find resolve:\", resolve);\n                resolve(response);\n                // 从pendingRequests中删除这个Promise\n                this.pendingRequests.delete(requestId);\n            }\n            else {\n                (0, log_1.logDebug)(\"Engine ==>> handleResponse_3  ===> not find resolve:\");\n                if (response.method === \"disconnect\") {\n                    this.disconnectListener.forEach(listener => listener());\n                    this.disconnectListener = [];\n                    this.clearData();\n                }\n                else if (response.method === \"session_connecting\") {\n                    (0, log_1.logDebug)(\"Engine ==>> handleResponse_4  ===> sessionConnectingListener\");\n                    if (this.sessionConnectingListener) {\n                        (0, log_1.logDebug)(\"Engine ==>> handleResponse_4  ===> sessionConnectingListener not null\");\n                        this.sessionConnectingListener();\n                        this.sessionConnectingListener = undefined;\n                    }\n                }\n            }\n        }\n    }\n    getCurrentConnectionReady() {\n        var _a;\n        return !!((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getCurrentConnectionReady());\n    }\n    saveSessionContent(key, data) {\n        var _a;\n        (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.saveSessionContent(key, data);\n    }\n    getSessionContent(key) {\n        var _a;\n        return (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getSessionContent(key);\n    }\n    setOnConnectResultListener(connectResultListener) {\n        this.connectResultListener = connectResultListener;\n    }\n    getTag() {\n        return \"\";\n    }\n    toJSON() {\n        return \"ws-connector\";\n    }\n    clearData() {\n        this.pendingRequests.clear();\n    }\n}\nexports.WsConnector = WsConnector;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SessionCrypto = void 0;\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst utils_1 = require(\"../utils/utils\");\nclass SessionCrypto {\n    constructor(keyPair = undefined) {\n        this.nonceLength = 24;\n        this.sessionKeyPair = keyPair ? this.createKeypairFromString(keyPair) : this.createKeypair();\n    }\n    createKeypair() {\n        return tweetnacl_1.default.box.keyPair();\n    }\n    createKeypairFromString(keyPair) {\n        return {\n            publicKey: (0, utils_1.hexToByteArray)(keyPair.publicKey),\n            secretKey: (0, utils_1.hexToByteArray)(keyPair.secretKey),\n        };\n    }\n    createNonce() {\n        return tweetnacl_1.default.randomBytes(this.nonceLength);\n    }\n    get keyPair() {\n        return this.sessionKeyPair;\n    }\n    // dapp 加密:\n    // base64(hex（nonce+加密内容）)\n    encrypt(message, receiverPublicKey) {\n        const encodedMessage = new TextEncoder().encode(message);\n        const nonce = this.createNonce();\n        const encrypted = tweetnacl_1.default.box(encodedMessage, nonce, (0, utils_1.hexToByteArray)(receiverPublicKey), this.keyPair.secretKey);\n        let concatInfo = (0, utils_1.concatUint8Arrays)(nonce, encrypted);\n        var hexResult = (0, utils_1.toHexString)(concatInfo);\n        var encodedResult = new TextEncoder().encode(hexResult);\n        return (0, utils_1.base64encode)(encodedResult, false);\n    }\n    // 钱包加密内容\n    // 注意：没有中间hex的环节\n    // base64（nonce+加密内容)\n    encryptWallet(message, receiverPublicKey) {\n        const encodedMessage = new TextEncoder().encode(message);\n        const nonce = this.createNonce();\n        const encrypted = tweetnacl_1.default.box(encodedMessage, nonce, (0, utils_1.hexToByteArray)(receiverPublicKey), this.keyPair.secretKey);\n        let concatInfo = (0, utils_1.concatUint8Arrays)(nonce, encrypted);\n        return (0, utils_1.base64encode)(concatInfo, false);\n    }\n    // dapp 解密\n    // base64(split(nonce+加密内容))\n    decrypt(message, senderPublicKey) {\n        let base64Content = (0, utils_1.base64decode)(message, true);\n        let messageByteArray = base64Content.toUint8Array();\n        const [nonce, internalMessage] = (0, utils_1.splitToUint8Arrays)(messageByteArray, this.nonceLength);\n        const decrypted = tweetnacl_1.default.box.open(internalMessage, nonce, (0, utils_1.hexToByteArray)(senderPublicKey), this.keyPair.secretKey);\n        if (!decrypted) {\n            throw new Error(`Decryption error: \\n message: ${message.toString()} \\n sender pubkey: ${senderPublicKey.toString()} \\n keypair pubkey: ${(0, utils_1.toHexString)(this.keyPair.publicKey)} \\n keypair secretkey: ${(0, utils_1.toHexString)(this.keyPair.secretKey)}`);\n        }\n        return new TextDecoder().decode(decrypted);\n    }\n    // dapp 解密\n    // base64(hextoByte(split(nonce+加密内容)))\n    decryptWallet(message, senderPublicKey) {\n        let base64Content = (0, utils_1.base64decode)(message, true);\n        let messageByteArray = (0, utils_1.hexToByteArray)(base64Content.toString());\n        const [nonce, internalMessage] = (0, utils_1.splitToUint8Arrays)(messageByteArray, this.nonceLength);\n        const decrypted = tweetnacl_1.default.box.open(internalMessage, nonce, (0, utils_1.hexToByteArray)(senderPublicKey), this.keyPair.secretKey);\n        if (!decrypted) {\n            throw new Error(`Decryption error: \\n message: ${message.toString()} \\n sender pubkey: ${senderPublicKey.toString()} \\n keypair pubkey: ${(0, utils_1.toHexString)(this.keyPair.publicKey)} \\n keypair secretkey: ${(0, utils_1.toHexString)(this.keyPair.secretKey)}`);\n        }\n        return new TextDecoder().decode(decrypted);\n    }\n    stringifyKeypair() {\n        return {\n            publicKey: (0, utils_1.toHexString)(this.keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(this.keyPair.secretKey)\n        };\n    }\n}\nexports.SessionCrypto = SessionCrypto;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./connect\"), exports);\n__exportStar(require(\"./protocol\"), exports);\n__exportStar(require(\"./utils\"), exports);\n__exportStar(require(\"./inject\"), exports);\n__exportStar(require(\"./connector\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AptosMethods = exports.SOLANAMethods = exports.Eip55Methods = void 0;\nexports.hasOKXInjectedProvider = hasOKXInjectedProvider;\nfunction hasOKXInjectedProvider() {\n    if (typeof getWindowProviderNamespace(\"okxwallet\") !== 'undefined') {\n        return true;\n    }\n    return false;\n}\nfunction getWindowProviderNamespace(namespace) {\n    const providerSearch = (provider, namespace) => {\n        const [property, ...path] = namespace.split('.');\n        const _provider = provider[property];\n        if (_provider) {\n            if (path.length === 0)\n                return _provider;\n            return providerSearch(_provider, path.join('.'));\n        }\n    };\n    if (typeof window !== 'undefined')\n        return providerSearch(window, namespace);\n}\nexports.Eip55Methods = [\n    \"personal_sign\",\n    \"eth_signTypedData_v4\",\n    \"eth_sendTransaction\",\n    \"wallet_addEthereumChain\",\n    \"wallet_watchAsset\",\n    \"wallet_switchEthereumChain\",\n    \"eth_requestAccounts\",\n    \"eth_accounts\",\n    \"eth_chainId\"\n];\nexports.SOLANAMethods = [\n    \"solana_signTransaction\",\n    \"solana_signMessage\",\n    \"solana_signAllTransactions\",\n    \"solana_signAndSendTransaction\"\n];\nexports.AptosMethods = [\n    \"aptos_signMessage\",\n    \"aptos_signTransaction\",\n    \"aptos_signAndSubmitTransaction\"\n];\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./InjectUtils\"), exports);\n__exportStar(require(\"./provider\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AptosProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass AptosProvider {\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                (0, utils_1.logDebug)(\"AptosProvider send request:\", (0, utils_1.safeJsonStringify)(request));\n                const method = request.method;\n                let result;\n                switch (method) {\n                    case \"aptos_signMessage\":\n                        {\n                            if (request.injectParams) {\n                                let message = yield window.okxwallet.aptos.signMessage(request.injectParams);\n                                result = {\n                                    method: request.method,\n                                    result: message.signature,\n                                };\n                                (0, utils_1.logDebug)(\"AptosProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                                return result;\n                            }\n                            else {\n                                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `param is error method: '${method}'`);\n                            }\n                        }\n                        break;\n                    case \"aptos_signTransaction\":\n                        {\n                            (0, utils_1.logDebug)(\"AptosProvider Method>>>> :\", method);\n                            let message = yield window.okxwallet.aptos.signTransaction(request.params);\n                            result = {\n                                method: request.method,\n                                result: message,\n                            };\n                            (0, utils_1.logDebug)(\"AptosProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                            return result;\n                        }\n                        break;\n                    case \"aptos_signAndSubmitTransaction\":\n                        {\n                            (0, utils_1.logDebug)(\"AptosProvider Method>>>> :\", method);\n                            let message = yield window.okxwallet.aptos.signAndSubmitTransaction(request.params);\n                            result = {\n                                method: request.method,\n                                result: message.hash,\n                            };\n                            (0, utils_1.logDebug)(\"AptosProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                            return result;\n                        }\n                        break;\n                    default:\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, ` method: '${method}'`);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"AptosProvider send error:\", error);\n                throw error;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    disconnect() {\n    }\n    resotreConnect() {\n        return Promise.resolve(undefined);\n    }\n    parseConnectResponse(connectWalletNameSpace, connectRequestWalletResponse) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let connectChain = [];\n            connectWalletNameSpace.forEach(item => {\n                if (item.namespace === protocol_1.NameSpaceKeyAptos) {\n                    connectChain.push(...item.chains);\n                }\n            });\n            let addresses = [];\n            let extra = {};\n            connectChain.forEach((chainStr) => {\n                let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                    return addressItem.chainId === \"637\" && addressItem.coinType === 637;\n                });\n                if (selectedAddress) {\n                    addresses.push(chainStr + \":\" + selectedAddress.address);\n                    extra[chainStr] = {\n                        publicKey: selectedAddress.publicKey\n                    };\n                }\n            });\n            if (addresses && addresses.length > 0) {\n                let nameSpaceResponse = {\n                    namespace: protocol_1.NameSpaceKeyAptos,\n                    addresses: addresses,\n                    methods: [...InjectUtils_1.AptosMethods],\n                    extra: extra\n                };\n                return nameSpaceResponse;\n            }\n            return undefined;\n        });\n    }\n}\nexports.AptosProvider = AptosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SolProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass SolProvider {\n    // TOOD\n    // 问题: 是否需要切链  不切链, 主网 测试网络  sonic 如何区别\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                yield this.resotreConnect();\n                (0, utils_1.logDebug)(\"SolProvider send request:\", JSON.stringify(request));\n                const method = request.method;\n                let result;\n                if (request.injectParams) {\n                    switch (method) {\n                        case \"solana_signMessage\":\n                            {\n                                if (request.injectParams && typeof request.injectParams === 'object' && 'message' in request.injectParams) {\n                                    var message = (_a = request.injectParams) === null || _a === void 0 ? void 0 : _a.message;\n                                    const encodedMessage = new TextEncoder().encode(message);\n                                    const signedMessage = yield window.okxwallet.solana.signMessage(encodedMessage, \"utf8\");\n                                    result = {\n                                        method: request.method,\n                                        result: bs58_1.default.encode(signedMessage.signature),\n                                    };\n                                    (0, utils_1.logDebug)(\"SolProvider send result:\", JSON.stringify(signedMessage));\n                                    return result;\n                                }\n                                else {\n                                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `param is error method: '${method}'`);\n                                }\n                            }\n                            break;\n                        case \"solana_signTransaction\":\n                            {\n                                let bufferResult = yield window.okxwallet.solana.signTransaction(request.injectParams);\n                                (0, utils_1.logDebug)(\"SolProvider send bufferResult:\", JSON.stringify(bufferResult));\n                                result = {\n                                    method: request.method,\n                                    injectResult: bufferResult,\n                                };\n                                (0, utils_1.logDebug)(\"SolProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                                return result;\n                            }\n                            break;\n                        case \"solana_signAllTransactions\":\n                            {\n                                let allResult = yield window.okxwallet.solana.signAllTransactions(request.injectParams);\n                                (0, utils_1.logDebug)(\"SolProvider send result:\", (0, utils_1.safeJsonStringify)(allResult));\n                                result = {\n                                    method: request.method,\n                                    injectResult: allResult,\n                                };\n                                return result;\n                            }\n                            break;\n                        case \"solana_signAndSendTransaction\":\n                            {\n                                var signAndSendResult = yield window.okxwallet.solana.signAndSendTransaction(request.injectParams);\n                                (0, utils_1.logDebug)(\"SolProvider send result:\", (0, utils_1.safeJsonStringify)(signAndSendResult));\n                                result = {\n                                    method: request.method,\n                                    injectResult: signAndSendResult,\n                                };\n                                return result;\n                            }\n                            break;\n                        default:\n                            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, `method: '${method}'`);\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `param is error method: '${method}'`);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"SolProvider send error:\", error);\n                throw error;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    disconnect() {\n    }\n    resotreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            const provider = window.okxwallet.solana;\n            return provider.connect();\n        }\n        return Promise.resolve();\n    }\n    parseConnectResponse(connectWalletNameSpace, connectRequestWalletResponse) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let connectChain = [];\n            connectWalletNameSpace.forEach(item => {\n                if (item.namespace === protocol_1.NameSpaceKeySOL) {\n                    connectChain.push(...item.chains);\n                }\n            });\n            let addresses = [];\n            let extra = {};\n            let accounts = {};\n            if (!(0, media_1.isDevice)(\"mobile\")) {\n                accounts = yield window.okxwallet.solana.connect();\n                (0, utils_1.logDebug)(\"parseConnectResponse solana.connect() :\", JSON.stringify(accounts));\n            }\n            connectChain.forEach((chainStr) => {\n                let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                    return (addressItem.chainId === \"501\" && addressItem.coinType === 501)\n                        || (addressItem.namespaceChainId === chainStr);\n                });\n                if (selectedAddress) {\n                    addresses.push(chainStr + \":\" + selectedAddress.address);\n                    if (accounts && \"publicKey\" in accounts) {\n                        extra[chainStr] = accounts;\n                    }\n                    else {\n                        extra[chainStr] = {\n                            publicKey: selectedAddress.publicKey\n                        };\n                    }\n                }\n            });\n            if (addresses && addresses.length > 0) {\n                let nameSpaceResponse = {\n                    namespace: protocol_1.NameSpaceKeySOL,\n                    addresses: addresses,\n                    methods: [...InjectUtils_1.SOLANAMethods],\n                    extra: extra\n                };\n                (0, utils_1.logDebug)(\"parseConnectResponse nameSpaceResponse :\", JSON.stringify(nameSpaceResponse));\n                return nameSpaceResponse;\n            }\n            return undefined;\n        });\n    }\n}\nexports.SolProvider = SolProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Eip155Provider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass Eip155Provider {\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                (0, utils_1.logDebug)(\"Eip155Provider send request:\", (0, utils_1.safeJsonStringify)(request));\n                yield this.resotreConnect();\n                let ethParams = null;\n                switch (request.method) {\n                    case \"personal_sign\":\n                        if (request.params && \"message\" in request.params) {\n                            ethParams = {\n                                method: request.method,\n                                params: [\n                                    request.params.message,\n                                    request.address,\n                                ],\n                            };\n                        }\n                        break;\n                    case \"eth_sendTransaction\":\n                    case \"wallet_addEthereumChain\":\n                    case \"wallet_switchEthereumChain\":\n                        {\n                            if (request.params) {\n                                ethParams = {\n                                    method: request.method,\n                                    params: [request.params],\n                                };\n                            }\n                        }\n                        break;\n                    case \"eth_signTypedData_v4\":\n                        {\n                            if (request.params && \"typedDataJson\" in request.params && ((_a = request.params) === null || _a === void 0 ? void 0 : _a.typedDataJson) && typeof request.params.typedDataJson === \"string\") {\n                                ethParams = {\n                                    method: request.method,\n                                    params: [\n                                        request.address,\n                                        request.params.typedDataJson,\n                                    ],\n                                };\n                            }\n                        }\n                        break;\n                    case \"wallet_watchAsset\":\n                        {\n                            if (request.params) {\n                                ethParams = {\n                                    method: request.method,\n                                    params: request.params,\n                                };\n                            }\n                        }\n                        break;\n                    default:\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n                if (ethParams) {\n                    // 特殊处理 \"wallet_switchEthereumChain\"\n                    if ((request.method === \"wallet_switchEthereumChain\" || request.method === \"wallet_addEthereumChain\")\n                        && request.params\n                        && \"chainId\" in request.params) {\n                        (0, utils_1.logDebug)(\"Eip155Provider send request switch requestParams:\", (0, utils_1.safeJsonStringify)(ethParams));\n                        const switchChainId = parseInt(request.params.chainId, 16).toString();\n                        yield window.okxwallet.request(ethParams);\n                        const resultSwitch = `eip155:${switchChainId}:${request.address}`;\n                        (0, utils_1.logDebug)(\"Eip155Provider send request switch result:\", resultSwitch);\n                        return {\n                            result: resultSwitch,\n                            method: request.method,\n                        };\n                    }\n                    else {\n                        const chain = (0, utils_1.getChainId)(request.chainId);\n                        const chainHex = `0x${Number(chain).toString(16)}`;\n                        (0, utils_1.logDebug)(\"Eip155Provider current chainId:\", chain, chainHex);\n                        if (chainHex) {\n                            yield window.okxwallet.request({\n                                method: \"wallet_switchEthereumChain\",\n                                params: [{ chainId: chainHex }],\n                            });\n                            (0, utils_1.logDebug)(\"Eip155Provider send request requestParams:\", chainHex, (0, utils_1.safeJsonStringify)(ethParams));\n                            const resultMe = yield window.okxwallet.request(ethParams);\n                            (0, utils_1.logDebug)(\"Eip155Provider send request result:\", (0, utils_1.safeJsonStringify)(resultMe));\n                            return {\n                                result: resultMe,\n                                method: request.method,\n                            };\n                        }\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"Eip155Provider encountered an error:\", error);\n                throw error;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    resotreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return window.okxwallet.request({ method: 'eth_requestAccounts' });\n        }\n        return Promise.resolve();\n    }\n    parseConnectResponse(connectWalletNameSpace, connectRequestWalletResponse) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeyEip155) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                connectChain.forEach((chainStr) => {\n                    let currentChain = (0, utils_1.getChainId)(chainStr);\n                    let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                        return (addressItem.chainId === currentChain && addressItem.coinType === 60)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                    if (selectedAddress) {\n                        addresses.push(chainStr + \":\" + selectedAddress.address);\n                        extra[chainStr] = {\n                            publicKey: selectedAddress.publicKey\n                        };\n                    }\n                });\n                if (addresses && addresses.length > 0) {\n                    let nameSpaceResponse = {\n                        namespace: protocol_1.NameSpaceKeyEip155,\n                        addresses: addresses,\n                        methods: [...InjectUtils_1.Eip55Methods],\n                        extra: extra\n                    };\n                    return nameSpaceResponse;\n                }\n                return undefined;\n            }\n            catch (error) {\n            }\n        });\n    }\n}\nexports.Eip155Provider = Eip155Provider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./eip155Provider\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TON_CHAINS = exports.COSMOS_CHAINS = exports.APTOS_CHAINS = exports.SUI_CHAINS = exports.SOLANA_CHAINS = exports.BTC_CHAINS = void 0;\nexports.BTC_CHAINS = {\n    MAINNET: 'btc:mainnet',\n    FRACTAL: 'fractal:mainnet',\n};\nexports.SOLANA_CHAINS = {\n    MAINNET: 'solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp',\n    TESTNET: 'solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z',\n    SONIC_TESTNET: 'sonic:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z'\n};\nexports.SUI_CHAINS = {\n    MAINNET: 'sui:mainnet'\n};\nexports.APTOS_CHAINS = {\n    MAINNET: 'aptos:mainnet' // aptos mainnet\n};\nexports.COSMOS_CHAINS = {\n    COSMOS_MAINNET: 'cosmos:cosmoshub-4'\n};\nexports.TON_CHAINS = {\n    MAINNET: 'ton:-239', // mainnet\n};\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IEngine = exports.ISignClient = exports.ISignClientEvents = exports.IEngineEvents = void 0;\nconst eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\nclass IEngineEvents extends eventemitter3_1.default {\n    constructor() {\n        super();\n    }\n}\nexports.IEngineEvents = IEngineEvents;\nclass ISignClientEvents extends eventemitter3_1.default {\n    constructor() {\n        super();\n    }\n}\nexports.ISignClientEvents = ISignClientEvents;\nclass ISignClient {\n    constructor(data) {\n        this.data = data;\n    }\n}\nexports.ISignClient = ISignClient;\nclass IEngine {\n    constructor(client) {\n        this.client = client;\n    }\n}\nexports.IEngine = IEngine;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXWalletName = exports.creatOKXInjectWalletInfo = exports.creatOKXMiniAppWalletInfo = exports.creatOKXWalletInfo = exports.ISignClientEvents = exports.IEngine = exports.IEngineEvents = exports.ISignClient = exports.getBigIntRpcId = exports.formatJsonRpcRequest = exports.isJsonRpcError = exports.isJsonRpcResponse = exports.parseConnectionError = exports.isHttpUrl = exports.formatJsonRpcError = void 0;\nvar json_rpc_1 = require(\"./json-rpc\");\nObject.defineProperty(exports, \"formatJsonRpcError\", { enumerable: true, get: function () { return json_rpc_1.formatJsonRpcError; } });\nObject.defineProperty(exports, \"isHttpUrl\", { enumerable: true, get: function () { return json_rpc_1.isHttpUrl; } });\nObject.defineProperty(exports, \"parseConnectionError\", { enumerable: true, get: function () { return json_rpc_1.parseConnectionError; } });\nObject.defineProperty(exports, \"isJsonRpcResponse\", { enumerable: true, get: function () { return json_rpc_1.isJsonRpcResponse; } });\nObject.defineProperty(exports, \"isJsonRpcError\", { enumerable: true, get: function () { return json_rpc_1.isJsonRpcError; } });\nObject.defineProperty(exports, \"formatJsonRpcRequest\", { enumerable: true, get: function () { return json_rpc_1.formatJsonRpcRequest; } });\nObject.defineProperty(exports, \"getBigIntRpcId\", { enumerable: true, get: function () { return json_rpc_1.getBigIntRpcId; } });\nvar engine_1 = require(\"./engine\");\nObject.defineProperty(exports, \"ISignClient\", { enumerable: true, get: function () { return engine_1.ISignClient; } });\nObject.defineProperty(exports, \"IEngineEvents\", { enumerable: true, get: function () { return engine_1.IEngineEvents; } });\nObject.defineProperty(exports, \"IEngine\", { enumerable: true, get: function () { return engine_1.IEngine; } });\nObject.defineProperty(exports, \"ISignClientEvents\", { enumerable: true, get: function () { return engine_1.ISignClientEvents; } });\n__exportStar(require(\"./ton\"), exports);\nvar wallet_info_1 = require(\"./wallet-info\");\nObject.defineProperty(exports, \"creatOKXWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXWalletInfo; } });\nObject.defineProperty(exports, \"creatOKXMiniAppWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXMiniAppWalletInfo; } });\nObject.defineProperty(exports, \"creatOKXInjectWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXInjectWalletInfo; } });\nObject.defineProperty(exports, \"OKXWalletName\", { enumerable: true, get: function () { return wallet_info_1.OKXWalletName; } });\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isJsonRpcPayload = isJsonRpcPayload;\nexports.isJsonRpcRequest = isJsonRpcRequest;\nexports.isJsonRpcResponse = isJsonRpcResponse;\nexports.isJsonRpcResult = isJsonRpcResult;\nexports.isJsonRpcError = isJsonRpcError;\nexports.payloadId = payloadId;\nexports.getBigIntRpcId = getBigIntRpcId;\nexports.formatJsonRpcRequest = formatJsonRpcRequest;\nexports.formatJsonRpcResult = formatJsonRpcResult;\nexports.formatJsonRpcError = formatJsonRpcError;\nexports.isReservedErrorCode = isReservedErrorCode;\nexports.getError = getError;\nexports.getErrorByCode = getErrorByCode;\nexports.formatErrorMessage = formatErrorMessage;\nexports.isHttpUrl = isHttpUrl;\nexports.isWsUrl = isWsUrl;\nexports.parseConnectionError = parseConnectionError;\nfunction isJsonRpcPayload(payload) {\n    return (typeof payload === \"object\" &&\n        \"id\" in payload &&\n        \"jsonrpc\" in payload &&\n        payload.jsonrpc === \"2.0\");\n}\nfunction isJsonRpcRequest(payload) {\n    return isJsonRpcPayload(payload) && \"method\" in payload;\n}\nfunction isJsonRpcResponse(payload) {\n    return isJsonRpcPayload(payload) && (isJsonRpcResult(payload) || isJsonRpcError(payload));\n}\nfunction isJsonRpcResult(payload) {\n    return \"result\" in payload;\n}\nfunction isJsonRpcError(payload) {\n    return \"error\" in payload;\n}\nconst okx_connect_error_1 = require(\"../error/okx-connect.error\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nclass IncrementalRandomGenerator {\n    constructor(bits) {\n        this.i = 1;\n        const typedArray = bits === 8 ? new Uint8Array(1) : bits === 16 ? new Uint16Array(1) : new Uint32Array(1);\n        if (bits) {\n            this.initialValue = tweetnacl_1.default.randomBytes(bits / 8)[0];\n        }\n        else {\n            this.initialValue = 0;\n        }\n    }\n    getNextValue() {\n        return this.initialValue + this.i++;\n    }\n}\nconst uint8Generator = new IncrementalRandomGenerator(8);\nconst uint16Generator = new IncrementalRandomGenerator(16);\nfunction payloadId() {\n    const date = Date.now() * 1000;\n    const extra = uint8Generator.getNextValue();\n    return date + extra;\n}\nfunction getBigIntRpcId() {\n    const date = BigInt(Date.now()) * BigInt(1000000);\n    const extra = BigInt(uint16Generator.getNextValue());\n    return date + extra;\n}\nfunction formatJsonRpcRequest(method, params, id) {\n    return {\n        id: id || payloadId(),\n        jsonrpc: \"2.0\",\n        method,\n        params,\n    };\n}\nfunction formatJsonRpcResult(id, result) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        result,\n    };\n}\nfunction formatJsonRpcError(id, error, data) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        error: formatErrorMessage(error, data),\n    };\n}\nfunction isReservedErrorCode(code) {\n    return okx_connect_error_1.RESERVED_ERROR_CODES.includes(code);\n}\nfunction getError(type) {\n    if (!Object.keys(okx_connect_error_1.STANDARD_ERROR_MAP).includes(type)) {\n        return okx_connect_error_1.STANDARD_ERROR_MAP[okx_connect_error_1.DEFAULT_ERROR];\n    }\n    return okx_connect_error_1.STANDARD_ERROR_MAP[type];\n}\nfunction getErrorByCode(code) {\n    const match = Object.values(okx_connect_error_1.STANDARD_ERROR_MAP).find((e) => e.code === code);\n    if (!match) {\n        return okx_connect_error_1.STANDARD_ERROR_MAP[okx_connect_error_1.DEFAULT_ERROR];\n    }\n    return match;\n}\nfunction formatErrorMessage(error, data) {\n    if (typeof error === \"undefined\") {\n        return getError(okx_connect_error_1.INTERNAL_ERROR);\n    }\n    if (typeof error === \"string\") {\n        error = Object.assign(Object.assign({}, getError(okx_connect_error_1.SERVER_ERROR)), { message: error });\n    }\n    if (typeof data !== \"undefined\") {\n        error.data = data;\n    }\n    if (isReservedErrorCode(error.code)) {\n        error = getErrorByCode(error.code);\n    }\n    return error;\n}\nfunction getUrlProtocol(url) {\n    const matches = url.match(new RegExp(/^\\w+:/, \"gi\"));\n    if (!matches || !matches.length)\n        return;\n    return matches[0];\n}\nfunction matchRegexProtocol(url, regex) {\n    const protocol = getUrlProtocol(url);\n    if (typeof protocol === \"undefined\")\n        return false;\n    return new RegExp(regex).test(protocol);\n}\nfunction isHttpUrl(url) {\n    return matchRegexProtocol(url, \"^https?:\");\n}\nfunction isWsUrl(url) {\n    return matchRegexProtocol(url, \"^wss?:\");\n}\nfunction parseConnectionError(e, url, type) {\n    return e.message.includes(\"getaddrinfo ENOTFOUND\") || e.message.includes(\"connect ECONNREFUSED\")\n        ? new Error(`Unavailable ${type} RPC url at ${url}`)\n        : e;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_ITEM_ERROR_CODES = void 0;\nvar CONNECT_ITEM_ERROR_CODES;\n(function (CONNECT_ITEM_ERROR_CODES) {\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n})(CONNECT_ITEM_ERROR_CODES || (exports.CONNECT_ITEM_ERROR_CODES = CONNECT_ITEM_ERROR_CODES = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TONCHAIN = void 0;\nvar TONCHAIN;\n(function (TONCHAIN) {\n    TONCHAIN[\"MAINNET\"] = \"-239\";\n})(TONCHAIN || (exports.TONCHAIN = TONCHAIN = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_ITEM_ERROR_CODES = exports.TONCHAIN = void 0;\nvar connect_wallet_1 = require(\"./connect-wallet\");\nObject.defineProperty(exports, \"TONCHAIN\", { enumerable: true, get: function () { return connect_wallet_1.TONCHAIN; } });\nvar connect_event_1 = require(\"./connect-event\");\nObject.defineProperty(exports, \"CONNECT_ITEM_ERROR_CODES\", { enumerable: true, get: function () { return connect_event_1.CONNECT_ITEM_ERROR_CODES; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXInjectWalletName = exports.OKXMiniWalletName = exports.OKXWalletName = void 0;\nexports.creatOKXWalletInfo = creatOKXWalletInfo;\nexports.creatOKXMiniAppWalletInfo = creatOKXMiniAppWalletInfo;\nexports.creatOKXInjectWalletInfo = creatOKXInjectWalletInfo;\nexports.OKXWalletName = \"OKX Wallet\";\nexports.OKXMiniWalletName = \"OKX Mini Wallet\";\nexports.OKXInjectWalletName = \"OKX Inject Wallet\";\nfunction creatOKXWalletInfo() {\n    return {\n        \"appName\": \"okxAppWallet\",\n        \"name\": exports.OKXWalletName,\n        \"imageUrl\": \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\"\n    };\n}\nfunction creatOKXMiniAppWalletInfo() {\n    return {\n        \"appName\": \"okxMiniApp\",\n        \"name\": exports.OKXMiniWalletName,\n        \"imageUrl\": \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\"\n    };\n}\nfunction creatOKXInjectWalletInfo() {\n    return {\n        \"appName\": \"okxInjectWallet\",\n        \"name\": exports.OKXInjectWalletName,\n        \"imageUrl\": \"\"\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.stackDeepLink = exports.tgwalletAppName = exports.tgwalletName = exports.tonConnectSdkVersion = exports.shortUniversalLink = exports.standardDeeplink = exports.downloadUrl = exports.standardUniversalLink = exports.okxDeeplink = void 0;\nexports.getTestTwaUrl = getTestTwaUrl;\nexports.getTestTgTwaUrl = getTestTgTwaUrl;\nexports.okxDeeplink = 'okx://web3';\nexports.standardUniversalLink = typeof window !== \"undefined\" && window.location.hostname.includes(\"okx.com\")\n    ? \"https://link.okx.com/download\"\n    : \"https://www.okx.com/download\";\nexports.downloadUrl = \"https://www.okx.com/download\";\n// export const standardUniversalLink = 'http://localhost:5173';\nexports.standardDeeplink = `${exports.okxDeeplink}/wallet/connect`;\nexports.shortUniversalLink = `https://www.okx.com/ul/connect`;\n// export const standardDeeplink = 'http://localhost:5173';\nexports.tonConnectSdkVersion = '1';\n// export const tgwalletName: string = \"TCTestqdqwdqwdqBot\"\nexports.tgwalletName = \"OKX_WALLET_BOT\";\nexports.tgwalletAppName = \"start\";\n// https://t.me/OKX_WALLET_BOT/start\nexports.stackDeepLink = 'okx://web3?stack=true';\nfunction getTestTwaUrl() {\n    return window.okxTesttwaUrl;\n}\nfunction getTestTgTwaUrl() {\n    return window.okxTestTgtwaUrl;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_CONNECT_ERROR_CODES = exports.OKXConnectError = void 0;\nvar okx_connect_error_1 = require(\"./okx-connect.error\");\nObject.defineProperty(exports, \"OKXConnectError\", { enumerable: true, get: function () { return okx_connect_error_1.OKXConnectError; } });\nObject.defineProperty(exports, \"OKX_CONNECT_ERROR_CODES\", { enumerable: true, get: function () { return okx_connect_error_1.OKX_CONNECT_ERROR_CODES; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEFAULT_ERROR = exports.STANDARD_ERROR_MAP = exports.SERVER_ERROR_CODE_RANGE = exports.RESERVED_ERROR_CODES = exports.SERVER_ERROR = exports.INTERNAL_ERROR = exports.INVALID_PARAMS = exports.METHOD_NOT_FOUND = exports.INVALID_REQUEST = exports.PARSE_ERROR = exports.OKX_CONNECT_ERROR_CODES = exports.OKXConnectError = void 0;\nclass OKXConnectError extends Error {\n    constructor(code, message) {\n        if (message == undefined) {\n            message = getDefaultMessageByCode(code);\n        }\n        super(message);\n        this.code = code;\n        this.message = `${OKXConnectError.prefix} ${message ? '\\n' + message : ''}`;\n        Object.setPrototypeOf(this, OKXConnectError.prototype);\n    }\n    toJSON() {\n        return {\n            message: this.message,\n            code: this.code\n        };\n    }\n}\nexports.OKXConnectError = OKXConnectError;\nOKXConnectError.prefix = '[OKX_CONNECT_SDK_ERROR]';\nfunction getDefaultMessageByCode(code) {\n    if (code == OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR) {\n        return \"unknown error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR) {\n        return \"bad request error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.ALREADY_CONNECTED_ERROR) {\n        return \"already connected error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR) {\n        return \"not connected error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.UNKNOWN_APP_ERROR) {\n        return \"unknown app error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n        return \"user rejects error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR_CAUSE_REGISTER) {\n        return \"wallet address are registering\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED) {\n        return \"method not supported\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.CONNECTION_ERROR) {\n        return \"connect error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED) {\n        return \"chain not supported\";\n    }\n    return \"unknown error\";\n}\nvar OKX_CONNECT_ERROR_CODES;\n(function (OKX_CONNECT_ERROR_CODES) {\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"BAD_REQUEST_ERROR\"] = 1] = \"BAD_REQUEST_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"ALREADY_CONNECTED_ERROR\"] = 11] = \"ALREADY_CONNECTED_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"NOT_CONNECTED_ERROR\"] = 12] = \"NOT_CONNECTED_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"UNKNOWN_APP_ERROR\"] = 100] = \"UNKNOWN_APP_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"USER_REJECTS_ERROR\"] = 300] = \"USER_REJECTS_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"USER_REJECTS_ERROR_CAUSE_REGISTER\"] = 301] = \"USER_REJECTS_ERROR_CAUSE_REGISTER\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"CHAIN_NOT_SUPPORTED\"] = 500] = \"CHAIN_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"WALLET_NOT_SUPPORTED\"] = 600] = \"WALLET_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"CONNECTION_ERROR\"] = 700] = \"CONNECTION_ERROR\";\n})(OKX_CONNECT_ERROR_CODES || (exports.OKX_CONNECT_ERROR_CODES = OKX_CONNECT_ERROR_CODES = {}));\nexports.PARSE_ERROR = \"PARSE_ERROR\";\nexports.INVALID_REQUEST = \"INVALID_REQUEST\";\nexports.METHOD_NOT_FOUND = \"METHOD_NOT_FOUND\";\nexports.INVALID_PARAMS = \"INVALID_PARAMS\";\nexports.INTERNAL_ERROR = \"INTERNAL_ERROR\";\nexports.SERVER_ERROR = \"SERVER_ERROR\";\nexports.RESERVED_ERROR_CODES = [-32700, -32600, -32601, -32602, -32603];\nexports.SERVER_ERROR_CODE_RANGE = [-32000, -32099];\nexports.STANDARD_ERROR_MAP = {\n    [exports.PARSE_ERROR]: { code: -32700, message: \"Parse error\" },\n    [exports.INVALID_REQUEST]: { code: -32600, message: \"Invalid Request\" },\n    [exports.METHOD_NOT_FOUND]: { code: -32601, message: \"Method not found\" },\n    [exports.INVALID_PARAMS]: { code: -32602, message: \"Invalid params\" },\n    [exports.INTERNAL_ERROR]: { code: -32603, message: \"Internal error\" },\n    [exports.SERVER_ERROR]: { code: -32000, message: \"Server error\" },\n};\nexports.DEFAULT_ERROR = exports.SERVER_ERROR;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TON_CHAINS = exports.COSMOS_CHAINS = exports.APTOS_CHAINS = exports.SUI_CHAINS = exports.SOLANA_CHAINS = exports.BTC_CHAINS = exports.downloadUrl = exports.okxDeeplink = exports.tonConnectSdkVersion = exports.standardDeeplink = exports.standardUniversalLink = exports.NameSpaceKeyStarknet = exports.NameSpaceKeyTron = exports.NameSpaceKeyCosmos = exports.NameSpaceKeyAptos = exports.NameSpaceKeyBtc = exports.NameSpaceKeySui = exports.NameSpaceKeyTON = exports.NameSpaceKeySOL = exports.NameSpaceKeyEip155 = void 0;\n__exportStar(require(\"./error\"), exports);\nvar misc_1 = require(\"./misc\");\nObject.defineProperty(exports, \"NameSpaceKeyEip155\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyEip155; } });\nObject.defineProperty(exports, \"NameSpaceKeySOL\", { enumerable: true, get: function () { return misc_1.NameSpaceKeySOL; } });\nObject.defineProperty(exports, \"NameSpaceKeyTON\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyTON; } });\nObject.defineProperty(exports, \"NameSpaceKeySui\", { enumerable: true, get: function () { return misc_1.NameSpaceKeySui; } });\nObject.defineProperty(exports, \"NameSpaceKeyBtc\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyBtc; } });\nObject.defineProperty(exports, \"NameSpaceKeyAptos\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyAptos; } });\nObject.defineProperty(exports, \"NameSpaceKeyCosmos\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyCosmos; } });\nObject.defineProperty(exports, \"NameSpaceKeyTron\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyTron; } });\nObject.defineProperty(exports, \"NameSpaceKeyStarknet\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyStarknet; } });\nvar constants_1 = require(\"./constants\");\nObject.defineProperty(exports, \"standardUniversalLink\", { enumerable: true, get: function () { return constants_1.standardUniversalLink; } });\nObject.defineProperty(exports, \"standardDeeplink\", { enumerable: true, get: function () { return constants_1.standardDeeplink; } });\nObject.defineProperty(exports, \"tonConnectSdkVersion\", { enumerable: true, get: function () { return constants_1.tonConnectSdkVersion; } });\nObject.defineProperty(exports, \"okxDeeplink\", { enumerable: true, get: function () { return constants_1.okxDeeplink; } });\nObject.defineProperty(exports, \"downloadUrl\", { enumerable: true, get: function () { return constants_1.downloadUrl; } });\n__exportStar(require(\"./connect\"), exports);\nvar chains_1 = require(\"./chains\");\nObject.defineProperty(exports, \"BTC_CHAINS\", { enumerable: true, get: function () { return chains_1.BTC_CHAINS; } });\nObject.defineProperty(exports, \"SOLANA_CHAINS\", { enumerable: true, get: function () { return chains_1.SOLANA_CHAINS; } });\nObject.defineProperty(exports, \"SUI_CHAINS\", { enumerable: true, get: function () { return chains_1.SUI_CHAINS; } });\nObject.defineProperty(exports, \"APTOS_CHAINS\", { enumerable: true, get: function () { return chains_1.APTOS_CHAINS; } });\nObject.defineProperty(exports, \"COSMOS_CHAINS\", { enumerable: true, get: function () { return chains_1.COSMOS_CHAINS; } });\nObject.defineProperty(exports, \"TON_CHAINS\", { enumerable: true, get: function () { return chains_1.TON_CHAINS; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NameSpaceKeyStarknet = exports.NameSpaceKeyTron = exports.NameSpaceKeyCosmos = exports.NameSpaceKeyAptos = exports.NameSpaceKeyBtc = exports.NameSpaceKeySui = exports.NameSpaceKeyTON = exports.NameSpaceKeySOL = exports.NameSpaceKeyEip155 = void 0;\nexports.NameSpaceKeyEip155 = \"eip155\";\nexports.NameSpaceKeySOL = \"solana\";\nexports.NameSpaceKeyTON = \"ton\";\nexports.NameSpaceKeySui = \"sui\";\nexports.NameSpaceKeyBtc = \"btc\";\nexports.NameSpaceKeyAptos = \"aptos\";\nexports.NameSpaceKeyCosmos = \"cosmos\";\nexports.NameSpaceKeyTron = \"tron\";\nexports.NameSpaceKeyStarknet = \"starknet\";\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.callForSuccess = callForSuccess;\nexports.delay = delay;\n/**\n * Function to call ton api until we get response.\n * Because ton network is pretty unstable we need to make sure response is final.\n * @param {T} fn - function to call\n * @param {CallForSuccessOptions} [options] - optional configuration options\n */\nfunction callForSuccess(fn, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b;\n        const attempts = (_a = options === null || options === void 0 ? void 0 : options.attempts) !== null && _a !== void 0 ? _a : 3;\n        const delayMs = (_b = options === null || options === void 0 ? void 0 : options.delayMs) !== null && _b !== void 0 ? _b : 800;\n        if (typeof fn !== 'function') {\n            throw new Error(`Expected a function, got ${typeof fn}`);\n        }\n        let i = 0;\n        let lastError;\n        while (i < attempts) {\n            try {\n                return yield fn();\n            }\n            catch (err) {\n                lastError = err;\n                i++;\n                if (i < attempts) {\n                    yield delay(delayMs);\n                }\n            }\n        }\n        throw lastError;\n    });\n}\n/**\n * Delays the execution of code for a specified number of milliseconds.\n * @param {number} timeout - The number of milliseconds to delay the execution.\n * @param {DelayOptions} [options] - Optional configuration options for the delay.\n * @return {Promise<void>} - A promise that resolves after the specified delay, or rejects if the delay is aborted.\n */\nfunction delay(timeout, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            var _a, _b;\n            if ((_a = options === null || options === void 0 ? void 0 : options.signal) === null || _a === void 0 ? void 0 : _a.aborted) {\n                reject(new Error('Delay aborted'));\n                return;\n            }\n            const timeoutId = setTimeout(() => resolve(), timeout);\n            (_b = options === null || options === void 0 ? void 0 : options.signal) === null || _b === void 0 ? void 0 : _b.addEventListener('abort', () => {\n                clearTimeout(timeoutId);\n                reject(new Error('Delay aborted'));\n            });\n        });\n    });\n}\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkMetaData = exports.versionCompare = exports.isBrowser = exports.isOS = exports.isMobileUserAgent = exports.openDeeplinkWithFallback = exports.openLinkBlank = exports.openLink = exports.getChainId = exports.useShortLink = exports.toSafeBase64FromBase64 = exports.isValidObject = exports.isIos = exports.base64decode = exports.base64encode = exports.splitToUint8Arrays = exports.concatUint8Arrays = exports.toHexString = exports.hexToByteArray = exports.getOKXLink = exports.openOKXUniversalLink = exports.getAppWalletShortDeepLink = exports.encodeTWAConnectURLParams = exports.encodeConnectParams = exports.openOKXTMAWalletlinkWithFallback = exports.getTelegramWalletTWAUrl = exports.getAppWalletDeepLink = exports.encodeTelegramUrlParameters = exports.isTelegramUrl = exports.openOKXDeeplinkWithFallback = exports.openOKXDeeplink = exports.getUniversalLink = exports.safeJsonStringify = exports.safeJsonParse = exports.getDefaultReporter = exports.reportEvent = exports.reportLog = exports.logWarning = exports.logError = exports.logDebug = exports.callForSuccess = void 0;\nvar call_for_success_1 = require(\"./call-for-success\");\nObject.defineProperty(exports, \"callForSuccess\", { enumerable: true, get: function () { return call_for_success_1.callForSuccess; } });\nvar log_1 = require(\"./log\");\nObject.defineProperty(exports, \"logDebug\", { enumerable: true, get: function () { return log_1.logDebug; } });\nObject.defineProperty(exports, \"logError\", { enumerable: true, get: function () { return log_1.logError; } });\nObject.defineProperty(exports, \"logWarning\", { enumerable: true, get: function () { return log_1.logWarning; } });\nObject.defineProperty(exports, \"reportLog\", { enumerable: true, get: function () { return log_1.reportLog; } });\nObject.defineProperty(exports, \"reportEvent\", { enumerable: true, get: function () { return log_1.reportEvent; } });\nObject.defineProperty(exports, \"getDefaultReporter\", { enumerable: true, get: function () { return log_1.getDefaultReporter; } });\n__exportStar(require(\"./reportconstants\"), exports);\n__exportStar(require(\"./report\"), exports);\nvar safejson_1 = require(\"./safejson\");\nObject.defineProperty(exports, \"safeJsonParse\", { enumerable: true, get: function () { return safejson_1.safeJsonParse; } });\nObject.defineProperty(exports, \"safeJsonStringify\", { enumerable: true, get: function () { return safejson_1.safeJsonStringify; } });\nvar url_1 = require(\"./url\");\nObject.defineProperty(exports, \"getUniversalLink\", { enumerable: true, get: function () { return url_1.getUniversalLink; } });\nObject.defineProperty(exports, \"openOKXDeeplink\", { enumerable: true, get: function () { return url_1.openOKXDeeplink; } });\nObject.defineProperty(exports, \"openOKXDeeplinkWithFallback\", { enumerable: true, get: function () { return url_1.openOKXDeeplinkWithFallback; } });\nObject.defineProperty(exports, \"isTelegramUrl\", { enumerable: true, get: function () { return url_1.isTelegramUrl; } });\nObject.defineProperty(exports, \"encodeTelegramUrlParameters\", { enumerable: true, get: function () { return url_1.encodeTelegramUrlParameters; } });\nObject.defineProperty(exports, \"getAppWalletDeepLink\", { enumerable: true, get: function () { return url_1.getAppWalletDeepLink; } });\nObject.defineProperty(exports, \"getTelegramWalletTWAUrl\", { enumerable: true, get: function () { return url_1.getTelegramWalletTWAUrl; } });\nObject.defineProperty(exports, \"openOKXTMAWalletlinkWithFallback\", { enumerable: true, get: function () { return url_1.openOKXTMAWalletlinkWithFallback; } });\nObject.defineProperty(exports, \"encodeConnectParams\", { enumerable: true, get: function () { return url_1.encodeConnectParams; } });\nObject.defineProperty(exports, \"encodeTWAConnectURLParams\", { enumerable: true, get: function () { return url_1.encodeTWAConnectURLParams; } });\nObject.defineProperty(exports, \"getAppWalletShortDeepLink\", { enumerable: true, get: function () { return url_1.getAppWalletShortDeepLink; } });\nObject.defineProperty(exports, \"openOKXUniversalLink\", { enumerable: true, get: function () { return url_1.openOKXUniversalLink; } });\nObject.defineProperty(exports, \"getOKXLink\", { enumerable: true, get: function () { return url_1.getOKXLink; } });\nvar utils_1 = require(\"./utils\");\nObject.defineProperty(exports, \"hexToByteArray\", { enumerable: true, get: function () { return utils_1.hexToByteArray; } });\nObject.defineProperty(exports, \"toHexString\", { enumerable: true, get: function () { return utils_1.toHexString; } });\nObject.defineProperty(exports, \"concatUint8Arrays\", { enumerable: true, get: function () { return utils_1.concatUint8Arrays; } });\nObject.defineProperty(exports, \"splitToUint8Arrays\", { enumerable: true, get: function () { return utils_1.splitToUint8Arrays; } });\nObject.defineProperty(exports, \"base64encode\", { enumerable: true, get: function () { return utils_1.base64encode; } });\nObject.defineProperty(exports, \"base64decode\", { enumerable: true, get: function () { return utils_1.base64decode; } });\nObject.defineProperty(exports, \"isIos\", { enumerable: true, get: function () { return utils_1.isIos; } });\nObject.defineProperty(exports, \"isValidObject\", { enumerable: true, get: function () { return utils_1.isValidObject; } });\nObject.defineProperty(exports, \"toSafeBase64FromBase64\", { enumerable: true, get: function () { return utils_1.toSafeBase64FromBase64; } });\nObject.defineProperty(exports, \"useShortLink\", { enumerable: true, get: function () { return utils_1.useShortLink; } });\nObject.defineProperty(exports, \"getChainId\", { enumerable: true, get: function () { return utils_1.getChainId; } });\nvar web_api_1 = require(\"./web-api\");\nObject.defineProperty(exports, \"openLink\", { enumerable: true, get: function () { return web_api_1.openLink; } });\nObject.defineProperty(exports, \"openLinkBlank\", { enumerable: true, get: function () { return web_api_1.openLinkBlank; } });\nObject.defineProperty(exports, \"openDeeplinkWithFallback\", { enumerable: true, get: function () { return web_api_1.openDeeplinkWithFallback; } });\nObject.defineProperty(exports, \"isMobileUserAgent\", { enumerable: true, get: function () { return web_api_1.isMobileUserAgent; } });\nObject.defineProperty(exports, \"isOS\", { enumerable: true, get: function () { return web_api_1.isOS; } });\nObject.defineProperty(exports, \"isBrowser\", { enumerable: true, get: function () { return web_api_1.isBrowser; } });\nvar tma_api_1 = require(\"./tma-api\");\nObject.defineProperty(exports, \"versionCompare\", { enumerable: true, get: function () { return tma_api_1.versionCompare; } });\nvar request_1 = require(\"./request\");\nObject.defineProperty(exports, \"checkMetaData\", { enumerable: true, get: function () { return request_1.checkMetaData; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getDefaultReporter = getDefaultReporter;\nexports.logDebug = logDebug;\nexports.logError = logError;\nexports.logWarning = logWarning;\nexports.reportEvent = reportEvent;\nexports.reportLog = reportLog;\nconst debug = false;\nconst forceReport = false;\nconst report_1 = require(\"./report\");\nconst defaultReporter = new report_1.OKXReporter();\nfunction getDefaultReporter() {\n    return defaultReporter;\n}\nconst packageJson = require('../../package.json');\nconst version = packageJson.version;\nfunction logDebug(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.log(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction logError(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.error(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n            if (forceReport || !debug) {\n                let content = '';\n                content += [...args].reduce((result, item) => {\n                    if (typeof item == 'string') {\n                        result += ',' + item;\n                    }\n                    else if (typeof item == 'object') {\n                        result += JSON.stringify(item);\n                    }\n                });\n                defaultReporter.sendRecordContent(content, report_1.OKXReportType.LOG, '');\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction logWarning(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.warn(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction reportEvent(type, action, content) {\n    return __awaiter(this, void 0, void 0, function* () {\n        yield defaultReporter.sendRecordContent(content, type, action);\n    });\n}\nfunction reportLog(content_1) {\n    return __awaiter(this, arguments, void 0, function* (content, action = 'default') {\n        // await defaultReporter.sendRecordContent(content, OKXReportType.LOG, action)\n    });\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mediaNotTouch = exports.mediaTouch = exports.maxWidth = void 0;\nexports.isDevice = isDevice;\nexports.media = media;\nexports.mediaMin = mediaMin;\nexports.mediaMax = mediaMax;\nexports.mediaMinMax = mediaMinMax;\nconst web_api_1 = require(\"../utils/web-api\");\nconst tma_api_1 = require(\"../utils/tma-api\");\nconst url_1 = require(\"./url\");\nconst log_1 = require(\"./log\");\nexports.maxWidth = {\n    mobile: 440,\n    tablet: 1020\n};\nfunction isDevice(device) {\n    var _a;\n    const window = (0, url_1.getWindow)();\n    if (!window) {\n        return device === 'desktop';\n    }\n    // TODO: remove this check when weba will fix viewport width\n    if ((0, tma_api_1.isTmaPlatform)('weba')) {\n        return true;\n    }\n    const width = window.innerWidth;\n    switch (device) {\n        case 'desktop':\n            return width > exports.maxWidth.tablet;\n        case 'tablet':\n            return width > exports.maxWidth.mobile;\n        default:\n        case 'mobile':\n            let isMobile = width <= exports.maxWidth.mobile || (0, web_api_1.isOS)('ios', 'android', 'ipad');\n            if (isMobile) {\n                const isTelegram = !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n                const maxTouchPoints = navigator.maxTouchPoints || 0;\n                if (isTelegram && maxTouchPoints === 0) {\n                    isMobile = false;\n                }\n                (0, log_1.logDebug)(\"isDevice mobile isTelegram and maxTouchPoints:\", isMobile, isTelegram, maxTouchPoints);\n            }\n            return isMobile;\n    }\n}\nfunction media(device) {\n    switch (device) {\n        case 'mobile':\n            return `@media (max-width: ${exports.maxWidth.mobile}px)`;\n        case 'tablet':\n            return `@media (max-width: ${exports.maxWidth.tablet}px) (min-width: ${exports.maxWidth.mobile}px)`;\n        default:\n        case 'desktop':\n            return `@media (min-width: ${exports.maxWidth.tablet}px)`;\n    }\n}\nfunction mediaMin(px) {\n    return `@media (min-width: ${px}px)`;\n}\nfunction mediaMax(px) {\n    return `@media (max-width: ${px}px)`;\n}\nfunction mediaMinMax(pxMin, pxMax) {\n    return `@media (min-width: ${pxMin}px) and (max-width: ${pxMax}px)`;\n}\nexports.mediaTouch = '@media (hover: none)';\nexports.mediaNotTouch = '@media not all and (hover: none)';\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXReporter = exports.OKXReportSide = exports.OKXReportType = exports.versionStr = void 0;\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nconst log_1 = require(\"./log\");\nconst url_1 = require(\"./url\");\nconst utils_1 = require(\"../utils\");\nconst localforage_1 = __importDefault(require(\"localforage\"));\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nexports.versionStr = '1.6.2';\nconst reportApiList = [\n    'https://www.okx.com/dappstat/wallet-connect',\n    'https://www.okx.ac/dappstat/wallet-connect'\n];\nconst reportCacheKey = 'OKX_RP_CK';\nconst reportUUIDKey = 'OKX_RP_UUID_CK';\nconst MAX_LIMIT_REPORTCOUNT = 100;\nconst DEFAULT_HTTP_HEADERS = {\n    Accept: \"*/*\",\n    \"Content-Type\": \"text/plain\",\n};\nconst DEFAULT_HTTP_METHOD = \"POST\";\nconst DEFAULT_FETCH_OPTS = {\n    headers: DEFAULT_HTTP_HEADERS,\n    method: DEFAULT_HTTP_METHOD,\n};\nexports.OKXReportType = {\n    PAGE_IN: 'page_in',\n    PAGE_OUT: 'page_out',\n    CLICK: 'click',\n    LOG: 'log',\n};\nexports.OKXReportSide = {\n    DAPP: 'dapp',\n    WALLET: 'wallet',\n};\nclass IReporter {\n}\nconst fetchWithTimeout = (url, options, timeout = 5000) => {\n    const controller = new AbortController();\n    const signal = controller.signal;\n    const fetchPromise = (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, options), { signal }));\n    const timeoutPromise = new Promise((_, reject) => setTimeout(() => {\n        controller.abort();\n        reject(new Error('Request timed out'));\n    }, timeout));\n    return Promise.race([fetchPromise, timeoutPromise]);\n};\nconst fetchListWithTimeout = (urls_1, ...args_1) => __awaiter(void 0, [urls_1, ...args_1], void 0, function* (urls, options = {}, timeout = 5000) {\n    for (const url of urls) {\n        try {\n            const controller = new AbortController();\n            const signal = controller.signal;\n            const fetchPromise = (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, options), { signal }));\n            const timeoutPromise = new Promise((_, reject) => setTimeout(() => {\n                controller.abort();\n                reject(new Error('Request timed out'));\n            }, timeout));\n            const response = yield Promise.race([fetchPromise, timeoutPromise]);\n            if (response.ok) {\n                return response;\n            }\n            if (response.status == 502) {\n                console.error(`Fetch error status 502`, url);\n                return response;\n            }\n        }\n        catch (error) {\n            console.error(`Fetch error for ${url}:`, error);\n        }\n    }\n    console.error(`'All fetch attempts failed.'`);\n    throw new Error('All fetch attempts failed.');\n});\nclass OKXReporter {\n    constructor() {\n        this.currentSide = exports.OKXReportSide.DAPP;\n        this.currentVersion = exports.versionStr;\n        this.storage = localforage_1.default.createInstance({\n            name: \"OKXReporter\"\n        });\n        this.recordList = new Array();\n        this.currentUUID = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(16));\n    }\n    configVersionAndSide(version, side, appname) {\n        this.currentVersion = version;\n        this.currentSide = side;\n        this.appName = appname;\n    }\n    get recordCacheKey() {\n        return reportCacheKey + \"@\" + this.appName;\n    }\n    get reportPlatform() {\n        if ((0, utils_1.isMobileUserAgent)()) {\n            if ((0, utils_1.isIos)()) {\n                return 'iOS';\n            }\n            else {\n                return 'android';\n            }\n        }\n        else {\n            return 'pc';\n        }\n    }\n    beginReport() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.startErrorCatching();\n            let records = yield this.storage.getItem(this.recordCacheKey);\n            let uuid = yield this.storage.getItem(reportUUIDKey);\n            if (uuid) {\n                this.currentUUID = uuid;\n            }\n            else {\n                this.storage.setItem(reportUUIDKey, this.currentUUID);\n            }\n            if (records) {\n                this.recordList = records;\n                (0, log_1.logDebug)('resume records from cache length: ', this.recordList.length);\n                yield this.sendCachedRecords();\n            }\n        });\n    }\n    startErrorCatching() {\n        let window = (0, url_1.getWindow)();\n        if (window) {\n            (0, log_1.logDebug)('begin capture console error');\n            // window.onerror = (event: Event | string, source?: string, lineno?: number, colno?: number, error?: Error) => {\n            //     logDebug('capture error info:', error, source)\n            //     this.markRecord(error?.message+'/'+error?.name+'/'+error?.stack, OKXReportType.LOG, '', this.currentSide)\n            // }\n        }\n    }\n    cachedErrors() {\n        return this.recordList;\n    }\n    sendRecord(record) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    const body = JSON.stringify(record);\n                    (0, log_1.logDebug)('[REPORT] record: ', body);\n                    const res = yield fetchListWithTimeout(reportApiList, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body: body }));\n                    (0, log_1.logDebug)('[REPORT] get rsp:', res);\n                    if (res && res.status && res.status == 200) {\n                        this.recordList = this.recordList.filter((item) => {\n                            return item.timestamp != record.timestamp || item.content != record.content;\n                        });\n                        yield this.storage.setItem(this.recordCacheKey, this.recordList);\n                        resolve(true);\n                    }\n                    else {\n                        reject(false);\n                    }\n                }\n                catch (e) {\n                    (0, log_1.logDebug)('send record error:', e);\n                    resolve(true);\n                    // reject(e)\n                }\n            }));\n        });\n    }\n    sendRecordContent(content, type, action) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            let path = (_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.location.pathname;\n            let location = (_b = (0, url_1.getWindow)()) === null || _b === void 0 ? void 0 : _b.location.origin;\n            if (path && location) {\n                location = location + path;\n            }\n            let language = (_c = (0, url_1.getWindow)()) === null || _c === void 0 ? void 0 : _c.navigator.language;\n            let ua = (_d = (0, url_1.getWindow)()) === null || _d === void 0 ? void 0 : _d.navigator.userAgent;\n            let platform = this.reportPlatform;\n            let reportItem = {\n                uuid: this.currentUUID,\n                version: this.currentVersion,\n                content: content,\n                action: action,\n                side: this.currentSide,\n                timestamp: new Date().getTime(),\n                url: location,\n                lang: language,\n                type: type,\n                platform: platform,\n                \"user-agent\": ua\n            };\n            yield this.markRecordItem(reportItem);\n            yield this.sendRecord(reportItem);\n        });\n    }\n    sendCachedRecords() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let sendList = this.recordList.map(record => this.sendRecord(record));\n                (0, log_1.logDebug)('[REPORT] submit & clean recorded caches begin @', new Date().toUTCString());\n                Promise.allSettled(sendList).then((results) => {\n                    (0, log_1.logDebug)('[REPORT] submit & clean recorded caches ends @', new Date().toUTCString());\n                    let keepIndex = [];\n                    results.forEach((result, index) => {\n                        if (result.status == \"rejected\") {\n                            keepIndex.push(index);\n                        }\n                    });\n                    this.recordList = this.recordList.filter((_, index) => !keepIndex.includes(index));\n                    this.storage.setItem(this.recordCacheKey, this.recordList).then(function (value) {\n                        resolve();\n                    }).catch(function (err) {\n                        reject(err);\n                    });\n                });\n            }));\n        });\n    }\n    markRecordItem(item) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.recordList.push(item);\n            if (this.recordList.length > MAX_LIMIT_REPORTCOUNT) {\n                let offset = this.recordList.length - MAX_LIMIT_REPORTCOUNT;\n                this.recordList.splice(0, offset);\n            }\n            return new Promise((resolve, reject) => {\n                this.storage.setItem(this.recordCacheKey, this.recordList).then(function (value) {\n                    resolve(item);\n                }).catch(function (err) {\n                    reject(err);\n                });\n            });\n        });\n    }\n    markRecord(content, type, action, side) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            let path = (_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.location.pathname;\n            let location = (_b = (0, url_1.getWindow)()) === null || _b === void 0 ? void 0 : _b.location.origin;\n            if (path && location) {\n                location = location + path;\n            }\n            let language = (_c = (0, url_1.getWindow)()) === null || _c === void 0 ? void 0 : _c.navigator.language;\n            let platform = this.reportPlatform;\n            let ua = (_d = (0, url_1.getWindow)()) === null || _d === void 0 ? void 0 : _d.navigator.userAgent;\n            let reportItem = {\n                uuid: this.currentUUID,\n                version: this.currentVersion,\n                content: content,\n                action: action,\n                side: side,\n                timestamp: new Date().getTime(),\n                url: location,\n                lang: language,\n                type: type,\n                platform: platform,\n                \"user-agent\": ua\n            };\n            return yield this.markRecordItem(reportItem);\n        });\n    }\n}\nexports.OKXReporter = OKXReporter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Report_WalletType_Key = exports.Report_Proceed_QRCode_Click = exports.Report_ChooseType_Download_Click = exports.Report_ChooseType_ConnectWallet_Click = exports.Report_Proceed_Retry_Click = exports.Report_ChooseType_ConnectWallet_View = exports.Report_Loading_ConnectWallet_View = exports.Report_Proceed_QRCode_View = exports.Report_Proceed_Proceed_View = void 0;\nexports.Report_Proceed_Proceed_View = \"OKXConnectSDK_Proceed_Proceed_View\";\nexports.Report_Proceed_QRCode_View = \"OKXConnectSDK_Proceed_QRCode_View\";\nexports.Report_Loading_ConnectWallet_View = \"OKXConnectSDK_Loading_ConnectWallet_View\";\nexports.Report_ChooseType_ConnectWallet_View = \"OKXConnectSDK_ChooseType_ConnectWallet_View\";\nexports.Report_Proceed_Retry_Click = \"OKXConnectSDK_Proceed_Retry_Click\";\nexports.Report_ChooseType_ConnectWallet_Click = \"OKXConnectSDK_ChooseType_ConnectWallet_Click\";\nexports.Report_ChooseType_Download_Click = \"OKXConnectSDK_ChooseType_Download_Click\";\nexports.Report_Proceed_QRCode_Click = \"OKXConnectSDK_Proceed_QRCode_Click\";\nexports.Report_WalletType_Key = 'wallet_type';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkMetaData = checkMetaData;\nconst protocol_1 = require(\"../protocol\");\nfunction checkMetaData(dappMetaData) {\n    if (!dappMetaData) {\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"You have to specify a `dappMetaData`in the options.\");\n    }\n    if (!dappMetaData.name) {\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"dappName is required\");\n    }\n    if (!dappMetaData.icon) {\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"icon is required\");\n    }\n    return true;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.safeJsonParse = safeJsonParse;\nexports.safeJsonStringify = safeJsonStringify;\nconst log_1 = require(\"./log\");\nconst JSONStringify = (data) => JSON.stringify(data, (_, value) => (typeof value === \"bigint\" ? value.toString() + \"n\" : value));\n/*\n  Function to parse JSON.\n  If JSON has values in our custom format BigInt (strings with \"n\" character at the end), we just parse them to BigInt values.\n  If JSON has big number values, but not in our custom format, we copy it, and in a copy we convert those values to our custom format,\n  then parse them to BigInt values.\n  Other values (not big numbers and not our custom format BigInt values) are not affected and parsed as native JSON.parse() would parse them.\n*/\nconst JSONParse = (json) => {\n    /*\n      Big numbers are found and marked using Regex with this condition:\n      Number's length is bigger than 16 || Number's length is 16 and any numerical digit of the number is greater than that of the Number.MAX_SAFE_INTEGER\n      Additionally, it skips values that are strings (between double quotes).\n      */\n    // prettier-ignore\n    // eslint-disable-next-line no-useless-escape\n    const numbersBiggerThanMaxInt = /:(\\b\\d{17,}|\\b(?:[9](?:[1-9]07199254740991|0[1-9]7199254740991|00[8-9]199254740991|007[2-9]99254740991|007199[3-9]54740991|0071992[6-9]4740991|00719925[5-9]740991|007199254[8-9]40991|0071992547[5-9]0991|00719925474[1-9]991|00719925474099[2-9])))(?=[,\\}\\]]|$)/g;\n    const serializedData = json.replace(numbersBiggerThanMaxInt, (match, group) => `:\"${group}n\"`);\n    try {\n        return JSON.parse(serializedData, (_, value) => {\n            const isCustomFormatBigInt = typeof value === \"string\" && value.match(/^\\d+n$/);\n            if (isCustomFormatBigInt)\n                return BigInt(value.substring(0, value.length - 1));\n            return value;\n        });\n    }\n    catch (e) {\n        return JSON.parse(json);\n    }\n};\nfunction safeJsonParse(value) {\n    if (typeof value !== \"string\") {\n        (0, log_1.logDebug)(value);\n        throw new Error(`Cannot safe json parse value of type ${typeof value}`);\n    }\n    try {\n        return JSONParse(value);\n    }\n    catch (e) {\n        // eslint-disable-next-line no-console\n        console.error(\"safeJsonParse error:\", e);\n        return value;\n    }\n}\nfunction safeJsonStringify(value) {\n    return typeof value === \"string\" ? value : JSONStringify(value) || \"\";\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.okxfromString = okxfromString;\nexports.okxtoString = okxtoString;\nexports.alloc = alloc;\nexports.allocUnsafe = allocUnsafe;\nconst basics_1 = require(\"multiformats/basics\");\nconst log_1 = require(\"../utils/log\");\nfunction okxfromString(string, encoding = 'utf8') {\n    const base = BASES[encoding];\n    (0, log_1.logDebug)(\"okxfromstring ====> \");\n    if (!base) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    return base.decoder.decode(`${base.prefix}${string}`);\n}\nfunction okxtoString(array, encoding = 'utf8') {\n    const base = BASES[encoding];\n    (0, log_1.logDebug)(\"okxtoString ====> \");\n    if (!base) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    return base.encoder.encode(array).substring(1);\n}\nfunction alloc(size = 0) {\n    return new Uint8Array(size);\n}\nfunction allocUnsafe(size = 0) {\n    return new Uint8Array(size);\n}\nfunction createCodec(name, prefix, encode, decode) {\n    return {\n        name,\n        prefix,\n        encoder: {\n            name,\n            prefix,\n            encode\n        },\n        decoder: { decode }\n    };\n}\nconst string = createCodec('utf8', 'u', buf => {\n    const decoder = new TextDecoder('utf8');\n    return 'u' + decoder.decode(buf);\n}, str => {\n    const encoder = new TextEncoder();\n    return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', buf => {\n    let result = 'a';\n    for (let i = 0; i < buf.length; i++) {\n        let bufNum = buf[i];\n        if (bufNum && String.fromCharCode(bufNum)) {\n            result += String.fromCharCode(bufNum);\n        }\n    }\n    return result;\n}, str => {\n    str = str.substring(1);\n    const buf = allocUnsafe(str.length);\n    for (let i = 0; i < str.length; i++) {\n        buf[i] = str.charCodeAt(i);\n    }\n    return buf;\n});\nconst BASES = Object.assign({ utf8: string, 'utf-8': string, hex: basics_1.bases.base16, latin1: ascii, ascii: ascii, binary: ascii }, basics_1.bases);\n","\"use strict\";\nvar _a, _b, _c, _d, _e, _f, _g;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isTmaPlatform = isTmaPlatform;\nexports.isInTMA = isInTMA;\nexports.inTg = inTg;\nexports.isInTelegramBrowser = isInTelegramBrowser;\nexports.sendExpand = sendExpand;\nexports.sendOpenTelegramLink = sendOpenTelegramLink;\nexports.versionCompare = versionCompare;\nconst url_1 = require(\"./url\");\nconst log_1 = require(\"./log\");\nconst protocol_1 = require(\"../protocol\");\nconst web_api_1 = require(\"./web-api\");\nlet initParams = {};\ntry {\n    let locationHash = location.hash.toString();\n    initParams = urlParseHashParams(locationHash);\n}\ncatch (e) { }\nlet tmaPlatform = 'unknown';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppPlatform) {\n    tmaPlatform = (_a = initParams.tgWebAppPlatform) !== null && _a !== void 0 ? _a : 'unknown';\n}\nif (tmaPlatform === 'unknown') {\n    const window = (0, url_1.getWindow)();\n    tmaPlatform = (_d = (_c = (_b = window === null || window === void 0 ? void 0 : window.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) === null || _c === void 0 ? void 0 : _c.platform) !== null && _d !== void 0 ? _d : 'unknown';\n}\nlet webAppVersion = '6.0';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppVersion) {\n    webAppVersion = initParams.tgWebAppVersion;\n}\nif (!webAppVersion) {\n    const window = (0, url_1.getWindow)();\n    webAppVersion = (_g = (_f = (_e = window === null || window === void 0 ? void 0 : window.Telegram) === null || _e === void 0 ? void 0 : _e.WebApp) === null || _f === void 0 ? void 0 : _f.version) !== null && _g !== void 0 ? _g : '6.0';\n}\n/**\n * Returns true if the app is running in TMA on the specified platform.\n * @param platforms\n */\nfunction isTmaPlatform(...platforms) {\n    return platforms.includes(tmaPlatform);\n}\n/**\n * Returns true if the app is running in TMA.\n */\nfunction isInTMA() {\n    var _a;\n    return tmaPlatform !== 'unknown' || !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n}\nfunction inTg() {\n    // return true\n    return isInTelegramBrowser() || isInTMA();\n}\n/**\n * Returns true if the app is running in the Telegram browser.\n */\nfunction isInTelegramBrowser() {\n    var _a;\n    const isTelegramWebview = !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebview);\n    return (isInTMA() || isTelegramWebview) && tmaPlatform === 'unknown';\n}\n/**\n * Expand the app window.\n */\nfunction sendExpand() {\n    postEvent('web_app_expand', {});\n}\n/**\n * Opens link in TMA or in new tab and returns a function that closes the tab.\n * @param link The link to open.\n * @param fallback The function to call if the link can't be opened in TMA.\n */\nfunction sendOpenTelegramLink(link, fallback) {\n    const url = new URL(link);\n    if (url.protocol !== 'http:' && url.protocol !== 'https:') {\n        if (fallback) {\n            return fallback();\n        }\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Url protocol is not supported: ${url}`);\n    }\n    if (url.hostname !== 't.me') {\n        if (fallback) {\n            return fallback();\n        }\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Url host is not supported: ${url}`);\n    }\n    const pathFull = url.pathname + url.search;\n    if (isIframe() || versionAtLeast('6.1')) {\n        postEvent('web_app_open_tg_link', { path_full: pathFull });\n    }\n    else {\n        (0, web_api_1.openLinkBlank)('https://t.me' + pathFull);\n    }\n}\nfunction isIframe() {\n    try {\n        const window = (0, url_1.getWindow)();\n        if (!window) {\n            return false;\n        }\n        return window.parent != null && window !== window.parent;\n    }\n    catch (e) {\n        return false;\n    }\n}\nfunction postEvent(eventType, eventData) {\n    try {\n        const window = (0, url_1.getWindow)();\n        if (!window) {\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Can't post event to parent window: window is not defined`);\n        }\n        if (window.TelegramWebviewProxy !== undefined) {\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.TelegramWebviewProxy.postEvent(eventType, JSON.stringify(eventData));\n        }\n        else if (window.external && 'notify' in window.external) {\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.external.notify(JSON.stringify({ eventType: eventType, eventData: eventData }));\n        }\n        else if (isIframe()) {\n            const trustedTarget = '*';\n            const message = JSON.stringify({ eventType: eventType, eventData: eventData });\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.parent.postMessage(message, trustedTarget);\n        }\n        else {\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Can't post event to TMA`);\n        }\n    }\n    catch (e) {\n        (0, log_1.logError)(`Can't post event to parent window: ${e}`);\n    }\n}\nfunction urlParseHashParams(locationHash) {\n    locationHash = locationHash.replace(/^#/, '');\n    let params = {};\n    if (!locationHash.length) {\n        return params;\n    }\n    if (locationHash.indexOf('=') < 0 && locationHash.indexOf('?') < 0) {\n        params._path = urlSafeDecode(locationHash);\n        return params;\n    }\n    let qIndex = locationHash.indexOf('?');\n    if (qIndex >= 0) {\n        let pathParam = locationHash.substr(0, qIndex);\n        params._path = urlSafeDecode(pathParam);\n        locationHash = locationHash.substr(qIndex + 1);\n    }\n    let query_params = urlParseQueryString(locationHash);\n    for (let k in query_params) {\n        params[k] = query_params[k];\n    }\n    return params;\n}\nfunction urlSafeDecode(urlencoded) {\n    try {\n        urlencoded = urlencoded.replace(/\\+/g, '%20');\n        return decodeURIComponent(urlencoded);\n    }\n    catch (e) {\n        return urlencoded;\n    }\n}\nfunction urlParseQueryString(queryString) {\n    let params = {};\n    if (!queryString.length) {\n        return params;\n    }\n    let queryStringParams = queryString.split('&');\n    let i, param, paramName, paramValue;\n    for (i = 0; i < queryStringParams.length; i++) {\n        param = queryStringParams[i].split('=');\n        paramName = urlSafeDecode(param[0]);\n        paramValue = param[1] == null ? null : urlSafeDecode(param[1]);\n        params[paramName] = paramValue;\n    }\n    return params;\n}\nfunction versionCompare(v1, v2) {\n    if (typeof v1 !== 'string')\n        v1 = '';\n    if (typeof v2 !== 'string')\n        v2 = '';\n    let v1List = v1.replace(/^\\s+|\\s+$/g, '').split('.');\n    let v2List = v2.replace(/^\\s+|\\s+$/g, '').split('.');\n    let a, i, p1, p2;\n    a = Math.max(v1List.length, v2List.length);\n    for (i = 0; i < a; i++) {\n        p1 = parseInt(v1List[i]) || 0;\n        p2 = parseInt(v2List[i]) || 0;\n        if (p1 === p2)\n            continue;\n        if (p1 > p2)\n            return 1;\n        return -1;\n    }\n    return 0;\n}\nfunction versionAtLeast(ver) {\n    return versionCompare(webAppVersion, ver) >= 0;\n}\n","\"use strict\";\nvar _a, _b, _c, _d;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.removeUrlLastSlash = removeUrlLastSlash;\nexports.addPathToUrl = addPathToUrl;\nexports.getUniversalLink = getUniversalLink;\nexports.openOKXDeeplink = openOKXDeeplink;\nexports.openOKXUniversalLink = openOKXUniversalLink;\nexports.openOKXDeeplinkWithFallback = openOKXDeeplinkWithFallback;\nexports.getWindow = getWindow;\nexports.isTelegramUrl = isTelegramUrl;\nexports.encodeTelegramUrlParameters = encodeTelegramUrlParameters;\nexports.encodeConnectParams = encodeConnectParams;\nexports.encodeTWAConnectURLParams = encodeTWAConnectURLParams;\nexports.getAppWalletDeepLink = getAppWalletDeepLink;\nexports.getAppWalletShortDeepLink = getAppWalletShortDeepLink;\nexports.getTelegramWalletTWAUrl = getTelegramWalletTWAUrl;\nexports.openOKXTMAWalletlinkWithFallback = openOKXTMAWalletlinkWithFallback;\nexports.isInTMA = isInTMA;\nexports.isInTelegramBrowser = isInTelegramBrowser;\nexports.getOKXLink = getOKXLink;\nconst protocol_1 = require(\"../protocol\");\nconst log_1 = require(\"./log\");\nconst constants_1 = require(\"../protocol/constants\");\nconst utils_1 = require(\"./utils\");\nconst tma_api_1 = require(\"./tma-api\");\nfunction removeUrlLastSlash(url) {\n    if (url.slice(-1) === '/') {\n        return url.slice(0, -1);\n    }\n    return url;\n}\nfunction addPathToUrl(url, path) {\n    return removeUrlLastSlash(url) + '/' + path;\n}\nfunction getUniversalLink(deeplinkUrl, useStandardUniversalLink = false) {\n    console.log(\"getUniversalLink deeplinkUrl:\", deeplinkUrl, \", useStandardUniversalLink:\", useStandardUniversalLink);\n    const replaceStrWithParam = `${protocol_1.standardDeeplink}?param=`;\n    if (!useStandardUniversalLink && deeplinkUrl.startsWith(replaceStrWithParam)) {\n        const cleanUrl = deeplinkUrl.replace(replaceStrWithParam, '');\n        (0, log_1.logDebug)(\"getUniversalLink cleanUrl:\", cleanUrl);\n        const deeplinkEncodeUrl = encodeURIComponent(cleanUrl);\n        (0, log_1.logDebug)(\"getUniversalLink standardUniversalLink:\", protocol_1.standardUniversalLink);\n        (0, log_1.logDebug)(\"getUniversalLink `${shortUniversalLink}?param=${deeplinkEncodeUrl}`:\", `${constants_1.shortUniversalLink}?param=${deeplinkEncodeUrl}`);\n        return `${constants_1.shortUniversalLink}?param=${deeplinkEncodeUrl}`;\n    }\n    else if (!useStandardUniversalLink && deeplinkUrl == protocol_1.standardDeeplink) {\n        (0, log_1.logDebug)(\"getUniversalLink shortUniversalLink:\", constants_1.shortUniversalLink);\n        return constants_1.shortUniversalLink;\n    }\n    else {\n        const deeplinkEncodeUrl = encodeURIComponent(deeplinkUrl);\n        console.log(\"getUniversalLink standardUniversalLink:\", protocol_1.standardUniversalLink);\n        return `${protocol_1.standardUniversalLink}?deeplink=${deeplinkEncodeUrl}`;\n    }\n}\nfunction openOKXDeeplink(deeplinkUrl) {\n    var _a;\n    const fullUrl = getUniversalLink(deeplinkUrl);\n    const isTelegram = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n    console.log(\"openOKXDeeplink fullUrl:\", fullUrl);\n    if (!(0, utils_1.isIos)()) {\n        let newWindow = null;\n        if (isTelegram) {\n            newWindow = window.open(deeplinkUrl, '_blank');\n        }\n        else {\n            window.location.href = deeplinkUrl;\n        }\n    }\n    else {\n        openOKXUniversalLink(fullUrl);\n    }\n}\nfunction openOKXUniversalLink(fullUrl) {\n    if (!(0, utils_1.isIos)()) {\n        // if (isTelegram) {\n        window.open(fullUrl, '_blank');\n        // } else {\n        //     window.location.href = fullUrl;\n        // }\n    }\n    else {\n        if (isInTMA()) {\n            window.open(fullUrl, '_blank');\n        }\n        else {\n            console.log(\"windowOpen[before]: \", Date.now());\n            if (window === null || window === void 0 ? void 0 : window.okxLogDebug) {\n                window.open(fullUrl, '_blank');\n            }\n            else {\n                window.open(fullUrl, '_self');\n            }\n            console.log(\"windowOpen[after]: \", Date.now());\n        }\n    }\n}\nfunction openOKXDeeplinkWithFallback(deeplinkUrl) {\n    var _a;\n    const fullUrl = getUniversalLink(deeplinkUrl);\n    const isTelegram = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n    console.log(\"openOKXDeeplinkWithFallback fullUrl:\", fullUrl);\n    let deepLinkOpened = false;\n    const timeoutDuration = 3000; // 1.5秒的等待时间\n    const downloadUrl = protocol_1.standardUniversalLink;\n    console.log(\"openOKXDeeplinkWithFallback standardUniversalLink:\", protocol_1.standardUniversalLink);\n    if (!(0, utils_1.isIos)()) {\n        let newWindow = null;\n        var fallbackToDownloadPage = () => {\n            if (!deepLinkOpened) {\n                if (newWindow) {\n                    newWindow.open(fullUrl, '_self');\n                }\n                else {\n                    window.open(fullUrl, '_blank');\n                }\n            }\n        };\n        if (isTelegram) {\n            newWindow = window.open(deeplinkUrl, '_blank');\n        }\n        else {\n            window.location.href = deeplinkUrl;\n        }\n        setTimeout(fallbackToDownloadPage, timeoutDuration);\n        window.addEventListener('blur', () => {\n            deepLinkOpened = true;\n        }, { once: true });\n        document.addEventListener('visibilitychange', () => {\n            if (document.visibilityState === 'hidden') {\n                deepLinkOpened = true;\n            }\n        });\n    }\n    else {\n        if (isTelegram) {\n            window.open(fullUrl, '_blank');\n        }\n        else {\n            console.log(\"windowOpen[before]: \", Date.now());\n            if (window === null || window === void 0 ? void 0 : window.okxLogDebug) {\n                window.open(fullUrl, '_blank');\n            }\n            else {\n                window.open(fullUrl, '_self');\n            }\n            console.log(\"windowOpen[after]: \", Date.now());\n        }\n    }\n}\nfunction getWindow() {\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    return undefined;\n}\nfunction isTelegramUrl(link) {\n    if (!link) {\n        return false;\n    }\n    const url = new URL(link);\n    return url.protocol === 'tg:' || url.hostname === 't.me';\n}\nfunction encodeTelegramUrlParameters(parameters) {\n    let encodedParameters = parameters;\n    encodedParameters = encodedParameters.replace(/\\./g, '%2E');\n    encodedParameters = encodedParameters.replace(/-/g, '%2D');\n    encodedParameters = encodedParameters.replace(/_/g, '%5F');\n    encodedParameters = encodedParameters.replace(/&/g, '-');\n    encodedParameters = encodedParameters.replace(/=/g, '__');\n    encodedParameters = encodedParameters.replace(/%/g, '--');\n    return encodedParameters;\n}\nfunction encodeConnectParams(connectRequest) {\n    const connectRequestStr = JSON.stringify(connectRequest);\n    (0, log_1.logDebug)(\"url encodeConnectParams connectRequestStr \", connectRequestStr);\n    const utf8Array = new TextEncoder().encode(connectRequestStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    // .replace(/\\+/g, '-')\n    // .replace(/\\//g, '_')\n    // .replace(/=+$/, ''); //Compatible with older versions of iOS. Cannot be added directly  (Base64 URL Safe)\n    (0, log_1.logDebug)(\"url encodeConnectParams base64Encoded \", base64Encoded);\n    return base64Encoded;\n}\nfunction encodeTWAConnectURLParams(connectRequest) {\n    const connectRequestStr = JSON.stringify({ topic: connectRequest.topic, clientId: connectRequest.clientId });\n    (0, log_1.logDebug)(\"url encodeConnectParams connectRequestStr\", connectRequestStr);\n    const utf8Array = new TextEncoder().encode(connectRequestStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    return base64Encoded;\n}\nfunction getAppWalletDeepLink(connectParam) {\n    return `${protocol_1.standardDeeplink}?param=${connectParam}`;\n}\nfunction getAppWalletShortDeepLink(topic, clientId) {\n    return `${constants_1.shortUniversalLink}?topic=${topic}${(0, utils_1.getLastSixMd5Hash)(clientId)}`;\n}\n//  make telegram okx wallet TWA url\nfunction getTelegramWalletTWAUrl(connectParam, redirectStr) {\n    let base64Content = { okxconnect: \"\", redirect: \"\", extraparams: \"\" };\n    if (connectParam) {\n        base64Content.okxconnect = connectParam;\n    }\n    if (redirectStr) {\n        base64Content.redirect = redirectStr;\n    }\n    let base64ContentStr = JSON.stringify(base64Content);\n    const utf8Array = new TextEncoder().encode(base64ContentStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    const urlSafeBase64 = (0, utils_1.toSafeBase64FromBase64)(base64Encoded);\n    (0, log_1.logDebug)('[TWA] open link:', base64Content, base64Encoded);\n    if (connectParam || redirectStr) {\n        if (!isInTMA()) {\n            // return `http://localhost:5173?tgWebAppStartParam=${urlSafeBase64}`\n            if ((0, constants_1.getTestTwaUrl)()) {\n                return `${(0, constants_1.getTestTwaUrl)()}?tgWebAppStartParam=${urlSafeBase64}`;\n            }\n            else {\n                return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}&startapp=${urlSafeBase64}`;\n            }\n        }\n        else {\n            if ((0, constants_1.getTestTgTwaUrl)()) {\n                return `${(0, constants_1.getTestTgTwaUrl)()}?startapp=${urlSafeBase64}`;\n            }\n            else {\n                return `https://t.me/${constants_1.tgwalletName}/start?startapp=${urlSafeBase64}`;\n            }\n        }\n    }\n    if (!isInTMA()) {\n        // return \"http://localhost:5173\"\n        if ((0, constants_1.getTestTwaUrl)()) {\n            return `${(0, constants_1.getTestTwaUrl)()}`;\n        }\n        else {\n            return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}`;\n        }\n    }\n    else {\n        if ((0, constants_1.getTestTgTwaUrl)()) {\n            return `${(0, constants_1.getTestTgTwaUrl)()}`;\n        }\n        else {\n            return `https://t.me/${constants_1.tgwalletName}/start`;\n        }\n    }\n}\n//  open TWA url in telegram\nfunction openOKXTMAWalletlinkWithFallback(twaDeepLink) {\n    var _a, _b, _c, _d, _e;\n    (0, log_1.logDebug)('[TWA] open link:', twaDeepLink, \"isInTMA ==> \", isInTMA());\n    if (!isInTMA()) {\n        if ((0, constants_1.getTestTwaUrl)()) {\n            window.open(twaDeepLink, '_blank');\n        }\n        else {\n            window.open(twaDeepLink, '_self');\n        }\n    }\n    else {\n        if ((_b = (_a = getWindow()) === null || _a === void 0 ? void 0 : _a.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) {\n            (_e = (_d = (_c = getWindow()) === null || _c === void 0 ? void 0 : _c.Telegram) === null || _d === void 0 ? void 0 : _d.WebApp) === null || _e === void 0 ? void 0 : _e.openTelegramLink(twaDeepLink);\n        }\n        else {\n            (0, tma_api_1.sendOpenTelegramLink)(twaDeepLink);\n        }\n    }\n}\n/**\n * Returns true if the app is running in TMA.\n */\nfunction urlSafeDecode(urlencoded) {\n    try {\n        urlencoded = urlencoded.replace(/\\+/g, '%20');\n        return decodeURIComponent(urlencoded);\n    }\n    catch (e) {\n        return urlencoded;\n    }\n}\nfunction urlParseQueryString(queryString) {\n    let params = {};\n    if (!queryString.length) {\n        return params;\n    }\n    let queryStringParams = queryString.split('&');\n    let i, param, paramName, paramValue;\n    for (i = 0; i < queryStringParams.length; i++) {\n        param = queryStringParams[i].split('=');\n        paramName = urlSafeDecode(param[0]);\n        paramValue = param[1] == null ? null : urlSafeDecode(param[1]);\n        params[paramName] = paramValue;\n    }\n    return params;\n}\nfunction urlParseHashParams(locationHash) {\n    locationHash = locationHash.replace(/^#/, '');\n    let params = {};\n    if (!locationHash.length) {\n        return params;\n    }\n    if (locationHash.indexOf('=') < 0 && locationHash.indexOf('?') < 0) {\n        params._path = urlSafeDecode(locationHash);\n        return params;\n    }\n    let qIndex = locationHash.indexOf('?');\n    if (qIndex >= 0) {\n        let pathParam = locationHash.substr(0, qIndex);\n        params._path = urlSafeDecode(pathParam);\n        locationHash = locationHash.substr(qIndex + 1);\n    }\n    let query_params = urlParseQueryString(locationHash);\n    for (let k in query_params) {\n        params[k] = query_params[k];\n    }\n    return params;\n}\nlet initParams = {};\ntry {\n    let locationHash = location.hash.toString();\n    initParams = urlParseHashParams(locationHash);\n}\ncatch (e) { }\nlet tmaPlatform = 'unknown';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppPlatform) {\n    tmaPlatform = (_a = initParams.tgWebAppPlatform) !== null && _a !== void 0 ? _a : 'unknown';\n}\nif (tmaPlatform === 'unknown') {\n    const window = getWindow();\n    tmaPlatform = (_d = (_c = (_b = window === null || window === void 0 ? void 0 : window.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) === null || _c === void 0 ? void 0 : _c.platform) !== null && _d !== void 0 ? _d : 'unknown';\n}\nfunction isInTMA() {\n    var _a;\n    return tmaPlatform !== 'unknown' || !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n}\n/**\n * Returns true if the app is running in the Telegram browser.\n */\nfunction isInTelegramBrowser() {\n    var _a;\n    const isTelegramWebview = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebview);\n    return (isInTMA() || isTelegramWebview) && tmaPlatform === 'unknown';\n}\nfunction getOKXLink(connectRequest, useMini = false, tmaReturnUrl) {\n    (0, log_1.logDebug)(`url  getOKXLink() called connectRequest==> ${JSON.stringify(connectRequest)}  useMini=> ${useMini}  tmaReturnUrl==> ${tmaReturnUrl}`);\n    if (useMini) {\n        var encodeTGParams = encodeTWAConnectURLParams(connectRequest);\n        return getTelegramWalletTWAUrl(encodeTGParams, tmaReturnUrl !== null && tmaReturnUrl !== void 0 ? tmaReturnUrl : \"back\");\n    }\n    else {\n        if ((0, utils_1.useShortLink)()) {\n            return getAppWalletShortDeepLink(connectRequest.topic, connectRequest.clientId);\n        }\n        else {\n            const base64Encoded = encodeConnectParams(connectRequest);\n            return `${protocol_1.standardDeeplink}?param=${base64Encoded}`;\n        }\n    }\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isValidObject = exports.RANDOM_LENGTH = exports.isBrowser = exports.resolveLocalStorage = exports.hasLocalStorage = exports.hasBuiltInWebSocket = exports.resolveWebSocketImplementation = void 0;\nexports.hexToByteArray = hexToByteArray;\nexports.getChainId = getChainId;\nexports.toHexString = toHexString;\nexports.concatUint8Arrays = concatUint8Arrays;\nexports.splitToUint8Arrays = splitToUint8Arrays;\nexports.base64encode = base64encode;\nexports.base64decode = base64decode;\nexports.checkWSUrl = checkWSUrl;\nexports.hashKey = hashKey;\nexports.generateRandomBytes32 = generateRandomBytes32;\nexports.generateTopic = generateTopic;\nexports.isIos = isIos;\nexports.getLastSixMd5Hash = getLastSixMd5Hash;\nexports.toSafeBase64FromBase64 = toSafeBase64FromBase64;\nexports.useShortLink = useShortLink;\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst tweetnacl_util_1 = __importDefault(require(\"tweetnacl-util\"));\nconst to_string_1 = require(\"uint8arrays/to-string\");\nconst sha256_1 = require(\"@stablelib/sha256\");\nconst safejson_1 = require(\"./safejson\");\nconst log_1 = require(\"./log\");\nconst stringUtils_1 = require(\"../utils/stringUtils\");\nconst crypto_js_1 = __importDefault(require(\"crypto-js\"));\nconst BASE16 = \"base16\";\nfunction hexToByteArray(hexString) {\n    if (hexString.length % 2 !== 0) {\n        throw new Error(`Cannot convert ${hexString} to bytesArray`);\n    }\n    const result = new Uint8Array(hexString.length / 2);\n    for (let i = 0; i < hexString.length; i += 2) {\n        result[i / 2] = parseInt(hexString.slice(i, i + 2), 16);\n    }\n    return result;\n}\nfunction getChainId(chain) {\n    return chain.includes(\":\") ? chain.split(\":\")[1] : chain;\n}\nfunction toHexString(byteArray) {\n    let hexString = '';\n    byteArray.forEach(byte => {\n        hexString += ('0' + (byte & 0xff).toString(16)).slice(-2);\n    });\n    return hexString;\n}\nfunction concatUint8Arrays(buffer1, buffer2) {\n    const mergedArray = new Uint8Array(buffer1.length + buffer2.length);\n    mergedArray.set(buffer1);\n    mergedArray.set(buffer2, buffer1.length);\n    return mergedArray;\n}\nfunction splitToUint8Arrays(array, index) {\n    if (index >= array.length) {\n        throw new Error('Index is out of buffer');\n    }\n    const subArray1 = array.slice(0, index);\n    const subArray2 = array.slice(index);\n    return [subArray1, subArray2];\n}\nfunction encodeUint8Array(value, urlSafe) {\n    const encoded = tweetnacl_util_1.default.encodeBase64(value);\n    if (!urlSafe) {\n        return encoded;\n    }\n    return encodeURIComponent(encoded);\n}\nfunction decodeToUint8Array(value, urlSafe) {\n    if (urlSafe) {\n        value = decodeURIComponent(value);\n    }\n    return tweetnacl_util_1.default.decodeBase64(value);\n}\nfunction base64encode(value, urlSafe) {\n    let uint8Array;\n    if (value instanceof Uint8Array) {\n        uint8Array = value;\n    }\n    else {\n        if (typeof value !== 'string') {\n            value = (0, safejson_1.safeJsonStringify)(value);\n        }\n        uint8Array = tweetnacl_util_1.default.decodeUTF8(value);\n    }\n    return encodeUint8Array(uint8Array, urlSafe);\n}\nfunction base64decode(value, urlSafe) {\n    const decodedUint8Array = decodeToUint8Array(value, urlSafe);\n    return {\n        toString() {\n            return tweetnacl_util_1.default.encodeUTF8(decodedUint8Array);\n        },\n        toObject() {\n            try {\n                return (0, safejson_1.safeJsonParse)(tweetnacl_util_1.default.encodeUTF8(decodedUint8Array));\n            }\n            catch (e) {\n                return null;\n            }\n        },\n        toUint8Array() {\n            return decodedUint8Array;\n        }\n    };\n}\nfunction checkWSUrl(url) {\n    const match = url.match(new RegExp(/^\\w+:/, \"gi\"));\n    if (!match || !match.length) {\n        return false;\n    }\n    let scheme = match[0];\n    if (scheme === undefined) {\n        return false;\n    }\n    return new RegExp(\"^wss?:\").test(scheme);\n}\nconst resolveWebSocketImplementation = () => {\n    if (typeof WebSocket !== \"undefined\") {\n        return WebSocket;\n    }\n    else if (typeof global !== \"undefined\" && typeof global.WebSocket !== \"undefined\") {\n        return global.WebSocket;\n    }\n    else if (typeof window !== \"undefined\" && typeof window.WebSocket !== \"undefined\") {\n        return window.WebSocket;\n    }\n    else if (typeof self !== \"undefined\" && typeof self.WebSocket !== \"undefined\") {\n        return self.WebSocket;\n    }\n    return WebSocket;\n    //\n    // return require(\"ws\");\n};\nexports.resolveWebSocketImplementation = resolveWebSocketImplementation;\nconst hasBuiltInWebSocket = () => typeof WebSocket !== \"undefined\" ||\n    (typeof global !== \"undefined\" && typeof global.WebSocket !== \"undefined\") ||\n    (typeof window !== \"undefined\" && typeof window.WebSocket !== \"undefined\") ||\n    (typeof self !== \"undefined\" && typeof self.WebSocket !== \"undefined\");\nexports.hasBuiltInWebSocket = hasBuiltInWebSocket;\nconst hasLocalStorage = () => (typeof global !== \"undefined\" && (typeof global.localStorage !== \"undefined\")) ||\n    (typeof window !== \"undefined\" && typeof window.localStorage !== \"undefined\");\nexports.hasLocalStorage = hasLocalStorage;\nconst resolveLocalStorage = () => {\n    if (typeof global !== \"undefined\" && typeof global.localStorage !== \"undefined\") {\n        return global.localStorage;\n    }\n    else if (typeof window !== \"undefined\" && typeof window.localStorage !== \"undefined\") {\n        return window.localStorage;\n    }\n    return localStorage;\n};\nexports.resolveLocalStorage = resolveLocalStorage;\nconst isBrowser = () => typeof window !== \"undefined\";\nexports.isBrowser = isBrowser;\nexports.RANDOM_LENGTH = 32;\nfunction hashKey(key, encode = BASE16) {\n    (0, log_1.logDebug)(`hash key called ${key}`);\n    const result = (0, sha256_1.hash)((0, stringUtils_1.okxfromString)(key, encode));\n    return (0, to_string_1.toString)(result, encode);\n}\nfunction generateRandomBytes32() {\n    return tweetnacl_1.default.randomBytes(exports.RANDOM_LENGTH);\n}\nfunction generateTopic() {\n    let randomBytes32 = generateRandomBytes32();\n    (0, log_1.logDebug)(`generate topic called ${randomBytes32}`);\n    return hashKey((0, to_string_1.toString)(randomBytes32, BASE16));\n}\nconst isValidObject = (obj) => Object.getPrototypeOf(obj) === Object.prototype && Object.keys(obj).length;\nexports.isValidObject = isValidObject;\nfunction isIos() {\n    const userAgent = navigator.userAgent;\n    const maxTouchPoints = navigator.maxTouchPoints || 0;\n    // 检测 iPhone、iPod 和传统的 iPad\n    const isIOSDevice = /iPad|iPhone|iPod/.test(userAgent) && !window.MSStream;\n    // 针对 iPadOS 13 及以上的设备进行额外判断\n    const isIPadOS = (userAgent.includes('Mac') && maxTouchPoints > 1);\n    (0, log_1.logDebug)(`utils isIos >>>isIOSDevice: ${isIOSDevice}    >> isIPadOS: ${isIPadOS}`);\n    // 如果是 iOS 设备或者是 iPadOS 设备，返回 true\n    return isIOSDevice || isIPadOS;\n}\nfunction getLastSixMd5Hash(input) {\n    // 生成 MD5 哈希\n    const hash = crypto_js_1.default.MD5(input).toString();\n    // 获取最后六位\n    return hash.slice(-6);\n}\nfunction toSafeBase64FromBase64(base64) {\n    return base64\n        .replace(/=/g, \"\")\n        .replace(/\\+/g, \"-\")\n        .replace(/\\//g, \"_\");\n}\nfunction useShortLink() {\n    return !!window.useShortLink;\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.openLink = openLink;\nexports.openLinkBlank = openLinkBlank;\nexports.openDeeplinkWithFallback = openDeeplinkWithFallback;\nexports.isMobileUserAgent = isMobileUserAgent;\nexports.getUserAgent = getUserAgent;\nexports.isOS = isOS;\nexports.isBrowser = isBrowser;\nconst ua_parser_js_1 = __importDefault(require(\"ua-parser-js\"));\nconst log_1 = require(\"./log\");\nconst tma_api_1 = require(\"./tma-api\");\nfunction openLink(href, target = '_self') {\n    (0, log_1.logDebug)('openLink', href, target);\n    window.open(href, target, 'noopener noreferrer');\n}\nfunction openLinkBlank(href) {\n    openLink(href, '_blank');\n}\nfunction openDeeplinkWithFallback(href, fallback) {\n    const doFallback = () => {\n        if (isBrowser('safari') || (isOS('android') && isBrowser('firefox'))) {\n            // Safari does not support fallback to direct link.\n            return;\n        }\n        fallback();\n    };\n    const fallbackTimeout = setTimeout(() => doFallback(), 500);\n    window.addEventListener('blur', () => clearTimeout(fallbackTimeout), { once: true });\n    if (isOS('android') && (0, tma_api_1.inTg)()) {\n        openLink(href, '_blank');\n    }\n    else {\n        openLink(href, '_self');\n    }\n}\nfunction isMobileUserAgent() {\n    let check = false;\n    (function (a) {\n        if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) ||\n            /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.slice(0, 4)))\n            check = true;\n    })(navigator.userAgent ||\n        navigator.vendor ||\n        window.opera);\n    return check;\n}\nfunction getUserAgent() {\n    var _a, _b, _c;\n    const results = new ua_parser_js_1.default().getResult();\n    const osName = (_a = results.os.name) === null || _a === void 0 ? void 0 : _a.toLowerCase();\n    const deviceModel = (_b = results.device.model) === null || _b === void 0 ? void 0 : _b.toLowerCase();\n    let os;\n    switch (true) {\n        case deviceModel === 'ipad':\n            os = 'ipad';\n            break;\n        case osName === 'ios':\n            os = 'ios';\n            break;\n        case osName === 'android':\n            os = 'android';\n            break;\n        case osName === 'mac os':\n            os = 'macos';\n            break;\n        case osName === 'linux':\n            os = 'linux';\n            break;\n        case osName === null || osName === void 0 ? void 0 : osName.includes('windows'):\n            os = 'windows';\n            break;\n    }\n    const browserName = (_c = results.browser.name) === null || _c === void 0 ? void 0 : _c.toLowerCase();\n    let browser;\n    switch (true) {\n        case browserName === 'chrome':\n            browser = 'chrome';\n            break;\n        case browserName === 'firefox':\n            browser = 'firefox';\n            break;\n        case browserName === null || browserName === void 0 ? void 0 : browserName.includes('safari'):\n            browser = 'safari';\n            break;\n        case browserName === null || browserName === void 0 ? void 0 : browserName.includes('opera'):\n            browser = 'opera';\n            break;\n    }\n    return {\n        os,\n        browser\n    };\n}\nfunction isOS(...os) {\n    return os.includes(getUserAgent().os);\n}\nfunction isBrowser(...browser) {\n    return browser.includes(getUserAgent().browser);\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXSolanaProvider = void 0;\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXSolanaProvider {\n    getRealChainId(chainId) {\n        if (chainId == null) {\n            if (this.chainsSet.size == 1) {\n                let realChain = \"\";\n                let map = this.defaultChainMap;\n                this.chainsSet.forEach(function (chain) {\n                    if (map.has(chain)) {\n                        realChain = map.get(chain);\n                    }\n                });\n                if (realChain == \"\") {\n                    throw new Error(\"unsupported chainId\");\n                }\n                else {\n                    return realChain;\n                }\n            }\n            else {\n                throw new Error(\"connected to multiple solana chains,chainId can not be null\");\n            }\n        }\n        else {\n            if (chainId.startsWith(\"svm\")) {\n                return chainId;\n            }\n            else {\n                if (this.caip.includes(chainId)) {\n                    return chainId;\n                }\n                else {\n                    throw new Error(\"wrong chainId\");\n                }\n            }\n        }\n    }\n    getConnectedNamespace() {\n        var _a, _b, _c;\n        (_c = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces) === null || _b === void 0 ? void 0 : _b['solana']) === null || _c === void 0 ? void 0 : _c.chains.forEach(chain => {\n            this.chainsSet.add(chain.split(\":\")[0]);\n        });\n    }\n    constructor(provider) {\n        this.chainsSet = new Set();\n        this.caip = [\n            \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n            \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n            \"sonic:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n            \"sonic:EtWTRABZaYq6iMfeYKouRu166VU2xqa1\"\n        ];\n        this.defaultChainMap = new Map();\n        this.provider = provider;\n        this.defaultChainMap.set(\"solana\", \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\");\n        this.defaultChainMap.set(\"sonic\", \"sonic:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\");\n        this.getConnectedNamespace();\n    }\n    signMessage(message, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            let realMessage = message;\n            let tx = null;\n            try {\n                const transaction = bs58_1.default.decode(message);\n                try {\n                    tx = web3_js_1.Transaction.from(transaction);\n                }\n                catch (error) {\n                    tx = web3_js_1.VersionedTransaction.deserialize(transaction);\n                }\n            }\n            catch (e) {\n            }\n            if (tx != null) {\n                return new Promise((resolve, reject) => {\n                    reject(\"Please sign with normal message\");\n                });\n            }\n            if (((_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.wallet) === null || _b === void 0 ? void 0 : _b.appName) == \"OKX Wallet\") {\n                realMessage = bs58_1.default.encode(new TextEncoder().encode(message));\n            }\n            else {\n                realMessage = message;\n            }\n            chainId = this.getRealChainId(chainId);\n            try {\n                let data = {\n                    \"chainId\": chainId,\n                    \"method\": \"solana_signMessage\",\n                    \"params\": {\n                        \"message\": realMessage,\n                        \"pubkey\": (_c = this.getAccount(chainId)) === null || _c === void 0 ? void 0 : _c.address\n                    },\n                    injectParams: {\n                        message: message,\n                        pubkey: (_d = this.getAccount(chainId)) === null || _d === void 0 ? void 0 : _d.address\n                    }\n                };\n                let signedMessage = yield this.provider.request(data, chainId);\n                (0, core_1.logDebug)(\"signMessage111\", signedMessage);\n                if ('result' in signedMessage) {\n                    let successData = signedMessage.result;\n                    return new Promise((resolve, reject) => {\n                        var _a;\n                        resolve({\n                            \"signature\": bs58_1.default.decode(successData),\n                            \"publicKey\": (_a = this.getAccount(chainId)) === null || _a === void 0 ? void 0 : _a.address\n                        });\n                    });\n                }\n                else {\n                    (0, core_1.logDebug)(\"signMessage111\", signedMessage);\n                    return new Promise((resolve, reject) => {\n                        resolve(signedMessage.error);\n                    });\n                }\n            }\n            catch (error) {\n                console.error('方法数据回调失败 --Error--', error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d;\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['solana']) === null || _b === void 0 ? void 0 : _b.accounts[0];\n        if (chainId != null) {\n            account = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces['solana']) === null || _d === void 0 ? void 0 : _d.accounts.filter(function (account) {\n                return account.startsWith(chainId);\n            })[0];\n        }\n        (0, core_1.logDebug)(\"getAccount\", account);\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const address = account.split(':')[2];\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address,\n            publicKey: new web3_js_1.PublicKey(address)\n        };\n    }\n    signTransaction(transaction, chainId) {\n        var _a, _b;\n        (0, core_1.logDebug)(\"OKXSolanaProvider\", typeof transaction);\n        chainId = this.getRealChainId(chainId);\n        try {\n            let serializedMessage = transaction.serialize({\n                requireAllSignatures: false,\n                verifySignatures: false,\n            });\n            let data = { \"data\": bs58_1.default.encode(serializedMessage), \"from\": (_a = this.getAccount(chainId)) === null || _a === void 0 ? void 0 : _a.address };\n            return this.getSignedTransaction(\"solana_signTransaction\", data, chainId, transaction);\n        }\n        catch (e) {\n            let serializedMessage = transaction.serialize();\n            let data = { \"data\": bs58_1.default.encode(serializedMessage), \"from\": (_b = this.getAccount(chainId)) === null || _b === void 0 ? void 0 : _b.address };\n            return this.getSignedTransaction(\"solana_signTransaction\", data, chainId, transaction);\n        }\n    }\n    signAllTransactions(transactions, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getRealChainId(chainId);\n            try {\n                var array = transactions.map((tx) => {\n                    var _a;\n                    var serializedMessage;\n                    if (tx instanceof web3_js_1.VersionedTransaction) {\n                        serializedMessage = tx.serialize();\n                    }\n                    else {\n                        serializedMessage = tx.serialize({\n                            requireAllSignatures: false,\n                            verifySignatures: false,\n                        });\n                    }\n                    return { \"data\": bs58_1.default.encode(serializedMessage), \"from\": (_a = this.getAccount(chainId)) === null || _a === void 0 ? void 0 : _a.address };\n                });\n                const response = yield this.provider.request({\n                    \"method\": \"solana_signAllTransactions\",\n                    \"params\": {\n                        \"transactions\": array\n                    },\n                    injectParams: transactions\n                }, chainId);\n                if (\"result\" in response) {\n                    let result = response.result;\n                    let newTransactions = JSON.parse(result).map((s) => {\n                        let c = bs58_1.default.decode(s);\n                        try {\n                            let transaction = web3_js_1.Transaction.from(c);\n                            (0, core_1.logDebug)(\"verifySignatures\", transaction.verifySignatures());\n                            return transaction;\n                        }\n                        catch (error) {\n                            return web3_js_1.VersionedTransaction.deserialize(c);\n                        }\n                    });\n                    return new Promise((resolve, reject) => {\n                        resolve(newTransactions);\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        resolve(response);\n                    });\n                }\n            }\n            catch (error) {\n                (0, core_1.logDebug)(\"getSignedTransaction\", error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    signAndSendTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b;\n            chainId = this.getRealChainId(chainId);\n            try {\n                let data = {};\n                try {\n                    let serializedMessage = transaction.serialize({\n                        requireAllSignatures: false,\n                        verifySignatures: false,\n                    });\n                    data = { \"data\": bs58_1.default.encode(serializedMessage), \"from\": (_a = this.getAccount(chainId)) === null || _a === void 0 ? void 0 : _a.address };\n                }\n                catch (e) {\n                    let serializedMessage = transaction.serialize();\n                    data = { \"data\": bs58_1.default.encode(serializedMessage), \"from\": (_b = this.getAccount(chainId)) === null || _b === void 0 ? void 0 : _b.address };\n                }\n                let signature = yield this.provider.request({\n                    \"method\": \"solana_signAndSendTransaction\",\n                    \"params\": data,\n                    injectParams: transaction\n                }, chainId);\n                if ('result' in signature) {\n                    let successData = signature.result;\n                    return new Promise((resolve, reject) => {\n                        resolve(successData);\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        resolve(signature);\n                    });\n                }\n            }\n            catch (error) {\n                (0, core_1.logDebug)(\"getSignedTransaction\", error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    getSignedTransaction(method, transactionStr, chainId, transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let signature = yield this.provider.request({\n                    \"method\": method,\n                    \"params\": transactionStr,\n                    injectParams: transaction\n                }, chainId);\n                if ('result' in signature) {\n                    let successData = signature.result;\n                    let c = bs58_1.default.decode(successData);\n                    let resultTx;\n                    try {\n                        resultTx = web3_js_1.Transaction.from(c);\n                    }\n                    catch (error) {\n                        resultTx = web3_js_1.VersionedTransaction.deserialize(c);\n                    }\n                    if (!(resultTx instanceof web3_js_1.VersionedTransaction)) {\n                        (0, core_1.logDebug)(\"verifySignatures\", resultTx.verifySignatures());\n                    }\n                    return new Promise((resolve, reject) => {\n                        resolve(resultTx);\n                    });\n                }\n                else if (\"injectResult\" in signature) {\n                    (0, core_1.logDebug)(\"getSignedTransaction injectResult\");\n                    let resultTx = signature.injectResult;\n                    return new Promise((resolve, reject) => {\n                        resolve(resultTx);\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        reject(signature);\n                    });\n                }\n            }\n            catch (error) {\n                (0, core_1.logDebug)(\"getSignedTransaction\", error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n}\nexports.OKXSolanaProvider = OKXSolanaProvider;\nexports.default = OKXSolanaProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXSolanaProvider = void 0;\nvar OKXSolanaProvider_1 = require(\"./OKXSolanaProvider\");\nObject.defineProperty(exports, \"OKXSolanaProvider\", { enumerable: true, get: function () { return OKXSolanaProvider_1.OKXSolanaProvider; } });\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toUserFriendlyAddress = exports.removeUrlLastSlash = exports.addPathToUrl = exports.createVersionInfo = exports.BrowserEventDispatcher = exports.createTransactionSigningFailedEvent = exports.createTransactionSignedEvent = exports.createTransactionSentForSignatureEvent = exports.createDisconnectionEvent = exports.createConnectionStartedEvent = exports.createConnectionRestoringStartedEvent = exports.createConnectionRestoringErrorEvent = exports.createConnectionRestoringCompletedEvent = exports.createConnectionErrorEvent = exports.createConnectionCompletedEvent = exports.createResponseVersionEvent = exports.createRequestVersionEvent = exports.OKX_TON_CONNECTION_AND_TRANSACTION_EVENT = exports.OKXTonConnect = void 0;\nvar okx_connect_ton_1 = require(\"./okx-connect-ton\");\nObject.defineProperty(exports, \"OKXTonConnect\", { enumerable: true, get: function () { return okx_connect_ton_1.OKXTonConnect; } });\n__exportStar(require(\"@okxconnect/core\"), exports);\nvar tracker_1 = require(\"./tracker\");\nObject.defineProperty(exports, \"OKX_TON_CONNECTION_AND_TRANSACTION_EVENT\", { enumerable: true, get: function () { return tracker_1.OKX_TON_CONNECTION_AND_TRANSACTION_EVENT; } });\nObject.defineProperty(exports, \"createRequestVersionEvent\", { enumerable: true, get: function () { return tracker_1.createRequestVersionEvent; } });\nObject.defineProperty(exports, \"createResponseVersionEvent\", { enumerable: true, get: function () { return tracker_1.createResponseVersionEvent; } });\nObject.defineProperty(exports, \"createConnectionCompletedEvent\", { enumerable: true, get: function () { return tracker_1.createConnectionCompletedEvent; } });\nObject.defineProperty(exports, \"createConnectionErrorEvent\", { enumerable: true, get: function () { return tracker_1.createConnectionErrorEvent; } });\nObject.defineProperty(exports, \"createConnectionRestoringCompletedEvent\", { enumerable: true, get: function () { return tracker_1.createConnectionRestoringCompletedEvent; } });\nObject.defineProperty(exports, \"createConnectionRestoringErrorEvent\", { enumerable: true, get: function () { return tracker_1.createConnectionRestoringErrorEvent; } });\nObject.defineProperty(exports, \"createConnectionRestoringStartedEvent\", { enumerable: true, get: function () { return tracker_1.createConnectionRestoringStartedEvent; } });\nObject.defineProperty(exports, \"createConnectionStartedEvent\", { enumerable: true, get: function () { return tracker_1.createConnectionStartedEvent; } });\nObject.defineProperty(exports, \"createDisconnectionEvent\", { enumerable: true, get: function () { return tracker_1.createDisconnectionEvent; } });\nObject.defineProperty(exports, \"createTransactionSentForSignatureEvent\", { enumerable: true, get: function () { return tracker_1.createTransactionSentForSignatureEvent; } });\nObject.defineProperty(exports, \"createTransactionSignedEvent\", { enumerable: true, get: function () { return tracker_1.createTransactionSignedEvent; } });\nObject.defineProperty(exports, \"createTransactionSigningFailedEvent\", { enumerable: true, get: function () { return tracker_1.createTransactionSigningFailedEvent; } });\nObject.defineProperty(exports, \"BrowserEventDispatcher\", { enumerable: true, get: function () { return tracker_1.BrowserEventDispatcher; } });\nObject.defineProperty(exports, \"createVersionInfo\", { enumerable: true, get: function () { return tracker_1.createVersionInfo; } });\nvar utils_1 = require(\"./utils\");\nObject.defineProperty(exports, \"addPathToUrl\", { enumerable: true, get: function () { return utils_1.addPathToUrl; } });\nObject.defineProperty(exports, \"removeUrlLastSlash\", { enumerable: true, get: function () { return utils_1.removeUrlLastSlash; } });\nObject.defineProperty(exports, \"toUserFriendlyAddress\", { enumerable: true, get: function () { return utils_1.toUserFriendlyAddress; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTonConnectInner = void 0;\nconst bridge_provider_1 = require(\"./provider/bridge/bridge-provider\");\nconst core_1 = require(\"@okxconnect/core\");\nconst feature_support_1 = require(\"./utils/feature-support\");\nconst ton_connect_tracker_1 = require(\"./tracker/ton-connect-tracker\");\nconst send_transaction_parser_1 = require(\"./parsers/send-transaction-parser\");\nconst bridge_connection_storage_1 = require(\"./provider/bridge-connection-storage\");\nconst constants_1 = require(\"./utils/constants\");\nclass OKXTonConnectInner {\n    constructor(options) {\n        this._wallet = null;\n        this.provider = null;\n        this.statusChangeSubscriptions = [];\n        this.statusChangeErrorSubscriptions = [];\n        this.openUniversalLink = this.provider ? this.provider.openUniversalLink : false;\n        this.connectors = [core_1.AppwalletConnector.getConnector()];\n        (0, core_1.checkMetaData)(options.metaData);\n        if (!options.metaData) {\n            (0, core_1.logDebug)(\"OKXTonConnect constructor error: options.metaData is nil\");\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, 'dapp metaData can not be null');\n        }\n        (0, core_1.logDebug)(\"OKXTonConnect constructor options:\", JSON.stringify(options));\n        this.dappSettings = {\n            metaData: Object.assign(Object.assign({}, options.metaData), { url: window.location.hostname, origin: window.location.origin }),\n        };\n        this.tracker = new ton_connect_tracker_1.TonConnectTracker({\n            OKXtonConnectSdkVersion: constants_1.OKXtonConnectSdkVersion\n        });\n        this.storage = new core_1.Storage(constants_1.OKXCONNECTOR_TON_KEY + this.dappSettings.metaData.name, constants_1.OKXCONNECTOR_TON_KEY);\n        this.bridgeConnectionStorage = new bridge_connection_storage_1.BridgeConnectionStorage(this.storage);\n    }\n    registerConnector(connectors) {\n        this.connectors = connectors;\n    }\n    /**\n     * Shows if the wallet is connected right now.\n     */\n    get connected() {\n        return this._wallet !== null;\n    }\n    /**\n     * Current connected account or null if no account is connected.\n     */\n    get account() {\n        var _a;\n        return ((_a = this._wallet) === null || _a === void 0 ? void 0 : _a.account) || null;\n    }\n    /**\n     * Current connected wallet or null if no account is connected.\n     */\n    get wallet() {\n        return this._wallet;\n    }\n    set wallet(value) {\n        this._wallet = value;\n        this.statusChangeSubscriptions.forEach(callback => callback(this._wallet));\n    }\n    connect(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            (0, core_1.logDebug)('ton-Connect ==>> connect_1 >> request:', request);\n            if (this.connected) {\n                (0, core_1.logError)(\"It's already connected to OKX Wallet, please call disconnect() first\");\n            }\n            yield ((_a = this.provider) === null || _a === void 0 ? void 0 : _a.closeConnection(false, true));\n            if (!this.provider) {\n                this.provider = new bridge_provider_1.BridgeProvider(this.storage, this.dappSettings.metaData.name, this.connectors);\n            }\n            this.provider.listen(this.walletEventsListener.bind(this));\n            this.tracker.trackConnectionStarted();\n            return yield this.provider.connect(this.createConnectRequest(request), request === null || request === void 0 ? void 0 : request.redirect, request === null || request === void 0 ? void 0 : request.openUniversalLink, request === null || request === void 0 ? void 0 : request.tmaReturnUrl);\n        });\n    }\n    walletEventsListener(e) {\n        (0, core_1.logDebug)('ton-Connect ==>> walletEventsListener_1 >> e:', e);\n        switch (e.event) {\n            case 'connect':\n                this.onWalletConnected(e.payload);\n                break;\n            case 'connect_error':\n                this.onWalletConnectError(e.payload);\n                break;\n            case 'disconnect':\n                this.onWalletDisconnected('wallet');\n        }\n    }\n    onWalletConnected(connectEvent) {\n        (0, core_1.logDebug)('ton-Connect ==>> onWalletConnected_1 >> connectEvent:', connectEvent);\n        const tonAccountItem = connectEvent.items.find(item => item.name === 'ton_addr');\n        const tonProofItem = connectEvent.items.find(item => item.name === 'ton_proof');\n        if (!tonAccountItem) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, 'ton_addr connection item was not found');\n        }\n        const wallet = {\n            device: connectEvent.device,\n            provider: this.provider.type,\n            account: {\n                address: tonAccountItem.address,\n                chain: tonAccountItem.network,\n                walletStateInit: tonAccountItem.walletStateInit,\n                publicKey: tonAccountItem.publicKey\n            }\n        };\n        if (tonProofItem) {\n            wallet.connectItems = {\n                tonProof: tonProofItem\n            };\n        }\n        this.wallet = wallet;\n        (0, core_1.logDebug)('ton-Connect ==>> onWalletConnected_2 >> wallet:', wallet);\n        this.tracker.trackConnectionCompleted(wallet);\n    }\n    onWalletConnectError(connectEventError) {\n        var _a;\n        (0, core_1.logDebug)('ton-Connect ==>> onWalletConnectError_1 >> connectEventError:', connectEventError);\n        const error = new core_1.OKXConnectError(connectEventError.code, connectEventError.message);\n        (0, core_1.logDebug)('ton-Connect ==>> onWalletConnectError_1 >> error:', error);\n        this.statusChangeErrorSubscriptions.forEach(errorsHandler => errorsHandler(error));\n        this.tracker.trackConnectionError((_a = connectEventError.message) !== null && _a !== void 0 ? _a : \"\", connectEventError.code);\n    }\n    onWalletDisconnected(scope) {\n        this.tracker.trackDisconnection(this.wallet, scope);\n        this.wallet = null;\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            (0, core_1.logDebug)('ton-Connect ==>> disconnect_1');\n            if (!this.connected) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, 'wallet is not connected');\n            }\n            (0, core_1.logDebug)('ton-Connect ==>> disconnect_222');\n            this.onWalletDisconnected('dapp');\n            yield ((_a = this.provider) === null || _a === void 0 ? void 0 : _a.disconnect());\n        });\n    }\n    onStatusChange(callback, errorsHandler) {\n        this.statusChangeSubscriptions.push(callback);\n        if (errorsHandler) {\n            this.statusChangeErrorSubscriptions.push(errorsHandler);\n        }\n        return () => {\n            this.statusChangeSubscriptions = this.statusChangeSubscriptions.filter(item => item !== callback);\n            if (errorsHandler) {\n                this.statusChangeErrorSubscriptions = this.statusChangeErrorSubscriptions.filter(item => item !== errorsHandler);\n            }\n        };\n    }\n    restoreConnection() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            (0, core_1.logDebug)('ton-Connect ==>> restoreConnection_1');\n            this.tracker.trackConnectionRestoringStarted();\n            let provider = null;\n            try {\n                provider = yield bridge_provider_1.BridgeProvider.fromStorage(this.storage, this.dappSettings.metaData.name, this.connectors);\n            }\n            catch (_b) {\n                this.tracker.trackConnectionRestoringError('Provider is not restored');\n                yield this.bridgeConnectionStorage.removeConnection();\n                provider === null || provider === void 0 ? void 0 : provider.closeConnection();\n                provider = null;\n                return;\n            }\n            if (!provider) {\n                (0, core_1.logError)('Provider is not restored');\n                this.tracker.trackConnectionRestoringError('Provider is not restored');\n                return;\n            }\n            (0, core_1.logDebug)('ton-Connect ==>> restoreConnection_2 ==>> Provider is restored ');\n            (_a = this.provider) === null || _a === void 0 ? void 0 : _a.closeConnection(true, false);\n            this.provider = provider;\n            provider.listen(this.walletEventsListener.bind(this));\n            yield this.provider.restoreConnection();\n            if (this.connected) {\n                this.tracker.trackConnectionRestoringCompleted(this.wallet);\n            }\n            else {\n                this.tracker.trackConnectionRestoringError('Connection restoring failed');\n            }\n        });\n    }\n    sendTransaction(transaction, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            (0, core_1.logDebug)('ton-Connect ==>> sendTransaction_1', transaction);\n            this.checkConnection();\n            (0, feature_support_1.checkSendTransactionSupport)(this.wallet.device.features, {\n                requiredMessagesNumber: transaction.messages.length\n            });\n            this.tracker.trackTransactionSentForSignature(this.wallet, transaction);\n            (0, core_1.logDebug)('ton-Connect ==>> sendTransaction_2 ==>> check params');\n            const { validUntil } = transaction, tx = __rest(transaction, [\"validUntil\"]);\n            const from = transaction.from || this.account.address;\n            let network = this.account.chain;\n            (0, core_1.logDebug)('ton-Connect ==>> sendTransaction_2 ==>> await sendRequest', network);\n            if ((0, core_1.isIos)() && !(options === null || options === void 0 ? void 0 : options.doNotOpenWallet)) {\n                (_a = this.provider) === null || _a === void 0 ? void 0 : _a.openOKXWallet();\n            }\n            const response = yield this.provider.sendRequest(send_transaction_parser_1.sendTransactionParser.convertToRpcRequest(Object.assign(Object.assign({}, tx), { valid_until: validUntil, from,\n                network })), {\n                onRequestSent: () => {\n                    var _a, _b;\n                    if (!(0, core_1.isIos)() && !(options === null || options === void 0 ? void 0 : options.doNotOpenWallet)) {\n                        (_a = this.provider) === null || _a === void 0 ? void 0 : _a.openOKXWallet();\n                    }\n                    (_b = options === null || options === void 0 ? void 0 : options.onRequestSent) === null || _b === void 0 ? void 0 : _b.call(options);\n                }\n            });\n            (0, core_1.logDebug)('ton-Connect ==>> sendTransaction_3 ==>>sendRequest response:', response);\n            if (send_transaction_parser_1.sendTransactionParser.isError(response)) {\n                this.tracker.trackTransactionSigningFailed(this.wallet, transaction, response.error.message, response.error.code);\n                throw new core_1.OKXConnectError(response.error.code, response.error.message);\n            }\n            const result = send_transaction_parser_1.sendTransactionParser.convertFromRpcResponse(response);\n            this.tracker.trackTransactionSigned(this.wallet, transaction, result);\n            return result;\n        });\n    }\n    checkConnection() {\n        (0, core_1.logDebug)('ton-Connect ==>> checkConnection');\n        if (!this.connected) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, \"Wallet not connected\");\n        }\n    }\n    createConnectRequest(request) {\n        (0, core_1.logDebug)('ton-Connect ==>> createConnectRequest');\n        const params = {\n            ton_addr: {\n                name: 'ton_addr'\n            }\n        };\n        if (request === null || request === void 0 ? void 0 : request.tonProof) {\n            params.ton_proof = {\n                name: 'ton_proof',\n                payload: request.tonProof\n            };\n        }\n        return {\n            dappInfo: this.dappSettings.metaData,\n            params: params\n        };\n    }\n    static getWallets() {\n        return this.walletsList;\n    }\n}\nexports.OKXTonConnectInner = OKXTonConnectInner;\nOKXTonConnectInner.walletsList = [(0, core_1.creatOKXWalletInfo)()];\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTonConnect = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nconst okx_connect_ton_inner_1 = require(\"./okx-connect-ton-inner\");\nclass OKXTonConnect {\n    constructor(options) {\n        try {\n            (0, core_1.logDebug)('OKXTonConnect constructor called');\n            if (window && window.okxConnectTonsdkinwindow && window.okxConnectTonsdkinwindow instanceof okx_connect_ton_inner_1.OKXTonConnectInner) {\n                this.tonInner = window.okxConnectTonsdkinwindow;\n                (0, core_1.logDebug)('OKXTonConnect constructor old called');\n            }\n            else {\n                this.tonInner = new okx_connect_ton_inner_1.OKXTonConnectInner(options);\n                (0, core_1.logDebug)('OKXTonConnect constructor new called');\n                this.registerConnector([core_1.AppwalletConnector.getConnector()]);\n                if (window) {\n                    window.okxConnectTonsdkinwindow = this.tonInner;\n                }\n            }\n        }\n        catch (error) {\n            throw error;\n        }\n    }\n    /**\n     * Shows if the wallet is connected right now.\n     */\n    get connected() {\n        return this.tonInner.connected;\n    }\n    get openUniversalLink() {\n        return this.tonInner.openUniversalLink;\n    }\n    get provider() {\n        return this.tonInner.provider;\n    }\n    /**\n     * Current connected account or null if no account is connected.\n     */\n    get account() {\n        return this.tonInner.account;\n    }\n    /**\n     * Current connected wallet or null if no account is connected.\n     */\n    get wallet() {\n        return this.tonInner.wallet;\n    }\n    set wallet(value) {\n        this.tonInner.wallet = value;\n    }\n    connect(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.tonInner.connect(request);\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.tonInner.disconnect();\n        });\n    }\n    onStatusChange(callback, errorsHandler) {\n        return this.tonInner.onStatusChange(callback, errorsHandler);\n    }\n    restoreConnection() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.tonInner.restoreConnection();\n        });\n    }\n    sendTransaction(transaction, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.tonInner.sendTransaction(transaction, options);\n        });\n    }\n    static getWallets() {\n        return okx_connect_ton_inner_1.OKXTonConnectInner.getWallets();\n    }\n    registerConnector(connectors) {\n        this.tonInner.registerConnector(connectors);\n    }\n}\nexports.OKXTonConnect = OKXTonConnect;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RpcParser = void 0;\nclass RpcParser {\n    isError(response) {\n        return 'error' in response;\n    }\n}\nexports.RpcParser = RpcParser;\n","\"use strict\";\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sendTransactionParser = void 0;\nconst rpc_parser_1 = require(\"./rpc-parser\");\nclass SendTransactionParser extends rpc_parser_1.RpcParser {\n    convertToRpcRequest(request) {\n        const { redirect } = request, params = __rest(request, [\"redirect\"]);\n        return {\n            method: \"ton_sendTransaction\",\n            redirect: redirect,\n            params: params,\n        };\n    }\n    convertFromRpcResponse(rpcResponse) {\n        return {\n            boc: rpcResponse.result.toString()\n        };\n    }\n}\nexports.sendTransactionParser = new SendTransactionParser();\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BridgeConnectionStorage = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass BridgeConnectionStorage {\n    constructor(storage) {\n        this.storage = storage;\n        this.storeKey = 'ton_connect_info_adapter_universal';\n    }\n    storeConnection(connection) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"BridgeConnectionStorage ==>> storeConnection ==>> connection:\", connection);\n            return this.storage.saveContent(JSON.stringify(connection), this.storeKey);\n        });\n    }\n    removeConnection() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"BridgeConnectionStorage ==>> removeConnection\");\n            return this.storage.clearCache(this.storeKey);\n        });\n    }\n    getConnection() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const stored = this.storage.getItem(this.storeKey);\n            (0, core_1.logDebug)(\"BridgeConnectionStorage ==>> getConnection ==>>this.storage: \", this.storage);\n            if (!stored || !(stored === null || stored === void 0 ? void 0 : stored.content)) {\n                return null;\n            }\n            try {\n                const content = stored === null || stored === void 0 ? void 0 : stored.content;\n                if (content) {\n                    let connection;\n                    connection = JSON.parse(content);\n                    (0, core_1.logDebug)(\"BridgeConnectionStorage ==>> getConnection ==>>connection: \", connection);\n                    return connection;\n                }\n                else {\n                    return null;\n                }\n            }\n            catch (error) {\n                return null;\n            }\n        });\n    }\n    getHttpConnection() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const connection = yield this.getConnection();\n            if (!connection) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, 'Trying to read HTTP connection source while nothing is stored');\n            }\n            return connection;\n        });\n    }\n    storeLastWalletEventId(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const connection = yield this.getConnection();\n            if (connection && ('connectEvent' in connection)) {\n                connection.lastWalletEventId = id;\n                return this.storeConnection(connection);\n            }\n        });\n    }\n    getLastWalletEventId() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const connection = yield this.getConnection();\n            if (connection && 'lastWalletEventId' in connection) {\n                return connection.lastWalletEventId;\n            }\n            return undefined;\n        });\n    }\n}\nexports.BridgeConnectionStorage = BridgeConnectionStorage;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BridgeProvider = void 0;\nconst bridge_connection_1 = require(\"./models/bridge-connection\");\nconst core_1 = require(\"@okxconnect/core\");\nconst bridge_connection_storage_1 = require(\"../bridge-connection-storage\");\nconst constants_1 = require(\"../../utils/constants\");\nconst ton_connect_tracker_1 = require(\"../../tracker/ton-connect-tracker\");\nclass BridgeProvider {\n    constructor(storage, appname = undefined, connectors) {\n        this.storage = storage;\n        this.type = 'http';\n        this.listeners = [];\n        this.walletConnectionSource = { \"universalLink\": core_1.standardUniversalLink };\n        this.openUniversalLink = false;\n        this.engine = new core_1.Engine(appname);\n        this.engine.registerConnector(connectors);\n        this.connectionStorage = new bridge_connection_storage_1.BridgeConnectionStorage(storage);\n        this.tracker = new ton_connect_tracker_1.TonConnectTracker({\n            OKXtonConnectSdkVersion: constants_1.OKXtonConnectSdkVersion\n        });\n        (0, core_1.getDefaultReporter)().configVersionAndSide('tonsdk-1.5.2', 'dapp', appname);\n    }\n    static fromStorage(storage_1) {\n        return __awaiter(this, arguments, void 0, function* (storage, appname = undefined, connectors) {\n            (0, core_1.logDebug)('bridge-provider ==>> fromStorage ==>>storage:', storage);\n            (0, core_1.reportLog)('bridge-provider ==>> fromStorage');\n            const bridgeConnectionStorage = new bridge_connection_storage_1.BridgeConnectionStorage(storage);\n            const connection = yield bridgeConnectionStorage.getHttpConnection();\n            if ((0, bridge_connection_1.isPendingConnectionHttp)(connection)) {\n                return null;\n            }\n            const provider = new BridgeProvider(storage, appname, connectors);\n            provider.openUniversalLink = connection.openUniversalLink;\n            return provider;\n        });\n    }\n    connect(message, redirect, openUniversalLink, tmaReturnUrl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('bridge-provider ==>> connect_1 ==>>message:', message);\n            (0, core_1.logDebug)('bridge-provider ==>> connect_1 ==>>redirect:', redirect);\n            (0, core_1.logDebug)('bridge-provider ==>> connect_1 ==>>openUniversalLink:', openUniversalLink);\n            (0, core_1.logDebug)('bridge-provider ==>> connect_1 ==>>tmaReturnUrl:', tmaReturnUrl);\n            (0, core_1.reportLog)('bridge-provider ==>> connect');\n            return new Promise((resolve, reject) => {\n                try {\n                    this.openUniversalLink = openUniversalLink;\n                    if (this.openUniversalLink === undefined) {\n                        this.openUniversalLink = (0, core_1.isMobileUserAgent)();\n                    }\n                    let tonNameSpace = {\n                        namespace: \"ton\",\n                        chains: [\"ton:-239\"],\n                        params: message.params,\n                    };\n                    let tonRequest = {\n                        name: \"requestAccounts\",\n                        requiredNamespaces: [tonNameSpace]\n                    };\n                    let engineRequest = [];\n                    // Easy to identify tonsdk\n                    if (message.params.ton_addr) {\n                        engineRequest.push(message.params.ton_addr);\n                    }\n                    if (message.params.ton_proof) {\n                        engineRequest.push(message.params.ton_proof);\n                    }\n                    engineRequest.push(tonRequest); //Universal data\n                    let config = {\n                        dappInfo: message.dappInfo,\n                        openUniversalUrl: this.openUniversalLink,\n                        redirect: redirect,\n                        tmaReturnUrl: tmaReturnUrl,\n                    };\n                    this.engine.universalConnect(engineRequest, config, (info) => {\n                        (0, core_1.logDebug)(`bridge-provider: connect: info>>>> ${JSON.stringify(info)}`);\n                        try {\n                            const base64Encoded = (0, core_1.encodeConnectParams)(info.connectRequest);\n                            const deepLink = (0, core_1.getAppWalletDeepLink)(base64Encoded);\n                            const universalUrl = (0, core_1.getUniversalLink)(deepLink);\n                            this.tracker.trackConnectionInfoBeforeJump(info);\n                            resolve(universalUrl);\n                        }\n                        catch (error) {\n                            reject(error);\n                        }\n                    }).then((session) => {\n                        (0, core_1.logDebug)(`bridge-provider: connect: success>>>> ${JSON.stringify(session)}`);\n                        this.connectSuccessHandle(session);\n                    }).catch((e) => {\n                        (0, core_1.logDebug)(`bridge-provider: connect: catch>>>> ${JSON.stringify(e)}`);\n                        const errorMessage = {\n                            event: 'connect_error',\n                            requestId: Number(Date.now()),\n                            payload: {\n                                code: e.code,\n                                message: e.message,\n                            },\n                        };\n                        (0, core_1.logDebug)('bridge-provider ==>> connectListener_4 ==>>connect_error:', errorMessage);\n                        this.listeners.forEach(listener => listener(errorMessage));\n                        reject(e);\n                    });\n                }\n                catch (error) {\n                    console.error('bridge-provider connect try catch error:>>>', JSON.stringify(error));\n                    reject(error);\n                }\n            });\n        });\n    }\n    listen(callback) {\n        this.listeners.push(callback);\n        return () => (this.listeners = this.listeners.filter(listener => listener !== callback));\n    }\n    disconnectListener() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('bridge-provider ==>> disconnectListener');\n            (0, core_1.reportLog)('bridge-provider ==>> disconnectListener');\n            const disconnectMessage = {\n                event: 'disconnect',\n                requestId: Number(1),\n                payload: {},\n            };\n            this.listeners.forEach(listener => listener(disconnectMessage));\n            yield this.closeConnection();\n        });\n    }\n    connectSuccessHandle(response) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b;\n            try {\n                const namespaces = (_a = response.namespaces) === null || _a === void 0 ? void 0 : _a[\"ton\"];\n                const payload = namespaces.payload;\n                const wallet = response.wallet;\n                if (!namespaces || !payload || !wallet || !payload.ton_addr) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n                }\n                const ton_addr = payload.ton_addr;\n                const sessionConfig = response.sessionConfig;\n                let itemArr = [];\n                if (payload.ton_addr) {\n                    itemArr.push(payload.ton_addr);\n                }\n                if (payload.ton_proof) {\n                    itemArr.push(payload.ton_proof);\n                }\n                const tonDeviceInfo = {\n                    platform: wallet.platform,\n                    appName: wallet.appName,\n                    appVersion: wallet.appVersion,\n                    maxProtocolVersion: wallet.maxProtocolVersion,\n                    features: ['ton_sendTransaction'],\n                };\n                const tonConnectInfo = {\n                    type: 'http',\n                    lastWalletEventId: Number(Date.now()),\n                    connectEvent: {\n                        event: 'connect',\n                        payload: {\n                            items: itemArr,\n                            device: tonDeviceInfo,\n                        },\n                    },\n                    connectionSource: this.walletConnectionSource,\n                    channelId: response.topic,\n                    openUniversalLink: sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.openUniversalUrl,\n                };\n                (0, core_1.logDebug)('bridge-provider ==>> connectSuccessHandle_2 ==>>storeConnection:', tonConnectInfo);\n                yield this.connectionStorage.storeConnection(tonConnectInfo);\n                (_b = this.engine) === null || _b === void 0 ? void 0 : _b.addDisconnectListener(this.disconnectListener.bind(this));\n                const successMessage = {\n                    event: 'connect',\n                    requestId: tonConnectInfo.lastWalletEventId,\n                    payload: tonConnectInfo.connectEvent.payload,\n                };\n                (0, core_1.logDebug)('bridge-provider ==>> connectSuccessHandle_3 ==>>listeners.forEach:', successMessage);\n                this.listeners.forEach(listener => listener(successMessage));\n            }\n            catch (error) {\n                (0, core_1.logDebug)('bridge-provider ==>> connectSuccessHandle_4 ==>>error:', error);\n                const errorMessage = {\n                    event: 'connect_error',\n                    requestId: Number(Date.now()),\n                    payload: {\n                        code: core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR,\n                        message: \"Connect success  connectSuccessHandle response error\",\n                    },\n                };\n                (0, core_1.logDebug)('bridge-provider ==>> connectSuccessHandle_4 ==>>connect_error:', errorMessage);\n                this.listeners.forEach(listener => listener(errorMessage));\n            }\n        });\n    }\n    closeConnection() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false, needOpenUrl = false) {\n            var _a, _b;\n            (0, core_1.logDebug)('bridge-provider ==>> closeConnection ==>>fromRestore:', fromRestore, ' needOpenUrl:', needOpenUrl);\n            (0, core_1.reportLog)('bridge-provider ==>> closeConnection');\n            this.listeners = [];\n            if (!needOpenUrl) {\n                yield ((_a = this.engine) === null || _a === void 0 ? void 0 : _a.connectManagerDisconnect(fromRestore));\n            }\n            if (!fromRestore) {\n                (_b = this.engine) === null || _b === void 0 ? void 0 : _b.clearData();\n                yield this.connectionStorage.removeConnection();\n            }\n        });\n    }\n    restoreConnection() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            (0, core_1.logDebug)('bridge-provider ==>> restoreConnection_1');\n            (0, core_1.reportLog)('bridge-provider ==>> restoreConnection');\n            const storedConnection = yield this.connectionStorage.getHttpConnection();\n            if (!storedConnection) {\n                return;\n            }\n            if ((0, bridge_connection_1.isPendingConnectionHttp)(storedConnection)) {\n                return;\n            }\n            (0, core_1.logDebug)('bridge-provider ==>> restoreConnection_2 ==>>storedConnection.channelId:', storedConnection.channelId);\n            if (storedConnection.channelId) {\n                try {\n                    const successMessage = {\n                        event: 'connect',\n                        requestId: Number(0),\n                        payload: storedConnection.connectEvent.payload,\n                    };\n                    this.listeners.forEach(listener => listener(successMessage));\n                    this.engine.setConnectConnector(storedConnection.connectEvent.payload.device);\n                    const channelId = storedConnection.channelId;\n                    (0, core_1.logDebug)('bridge-provider ==>> restoreConnection_3 ==>>this.engine.restoreConnect:', channelId);\n                    (_a = this.engine) === null || _a === void 0 ? void 0 : _a.addDisconnectListener(this.disconnectListener.bind(this));\n                    yield this.engine.restoreconnectFromTopic(channelId);\n                }\n                catch (e) {\n                    (0, core_1.logDebug)('bridge-provider ==>> restoreConnection_4 ==>>closeConnection_1');\n                    yield this.closeConnection();\n                }\n            }\n            else {\n                (0, core_1.logDebug)('bridge-provider ==>> restoreConnection_4 ==>>closeConnection_2');\n                yield this.closeConnection();\n            }\n        });\n    }\n    openOKXWallet() {\n        (0, core_1.logDebug)('bridge-provider ==>> openOKXWallet', this.openUniversalLink);\n        (0, core_1.reportLog)('bridge-provider ==>> openOKXWallet');\n        if (this.openUniversalLink) {\n            (0, core_1.openOKXDeeplink)(core_1.standardDeeplink);\n        }\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('bridge-provider ==>> disconnect_1');\n            (0, core_1.reportLog)('bridge-provider ==>> disconnect');\n            return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n                let called = false;\n                const onRequestSent = () => {\n                    if (!called) {\n                        called = true;\n                        this.closeConnection().then(resolve);\n                    }\n                };\n                try {\n                    yield this.sendRequest({ method: 'disconnect' }, { onRequestSent: onRequestSent, attempts: 1 });\n                }\n                catch (e) {\n                    if (!called) {\n                        this.closeConnection().then(resolve);\n                    }\n                }\n                finally {\n                    onRequestSent();\n                }\n            }));\n        });\n    }\n    sendRequest(request, options, ttl) {\n        (0, core_1.logDebug)('bridge-provider ==>> sendRequest');\n        (0, core_1.reportLog)('bridge-provider ==>> sendRequest');\n        return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                yield ((_a = this.engine) === null || _a === void 0 ? void 0 : _a.send(request, {\n                    resolve: function (response) {\n                        resolve(response);\n                    },\n                    onAck: function () {\n                        var _a;\n                        (_a = options === null || options === void 0 ? void 0 : options.onRequestSent) === null || _a === void 0 ? void 0 : _a.call(options);\n                    }\n                }, ttl));\n            }\n            catch (e) {\n                reject(e);\n            }\n        }));\n    }\n}\nexports.BridgeProvider = BridgeProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isPendingConnectionHttp = isPendingConnectionHttp;\nfunction isPendingConnectionHttp(connection) {\n    return !('connectEvent' in connection);\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BrowserEventDispatcher = void 0;\n/**\n * A concrete implementation of EventDispatcher that dispatches events to the browser window.\n */\nclass BrowserEventDispatcher {\n    constructor() {\n        /**\n         * The window object, possibly undefined in a server environment.\n         * @private\n         */\n        this.window = window;\n    }\n    /**\n     * Dispatches an event with the given name and details to the browser window.\n     * @param eventName - The name of the event to dispatch.\n     * @param eventDetails - The details of the event to dispatch.\n     * @returns A promise that resolves when the event has been dispatched.\n     */\n    dispatchEvent(eventName, eventDetails) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            const event = new CustomEvent(eventName, { detail: eventDetails });\n            (_a = this.window) === null || _a === void 0 ? void 0 : _a.dispatchEvent(event);\n        });\n    }\n    /**\n     * Adds an event listener to the browser window.\n     * @param eventName - The name of the event to listen for.\n     * @param listener - The listener to add.\n     * @param options - The options for the listener.\n     * @returns A function that removes the listener.\n     */\n    addEventListener(eventName, listener, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            (_a = this.window) === null || _a === void 0 ? void 0 : _a.addEventListener(eventName, listener, options);\n            return () => {\n                var _a;\n                return (_a = this.window) === null || _a === void 0 ? void 0 : _a.removeEventListener(eventName, listener);\n            };\n        });\n    }\n}\nexports.BrowserEventDispatcher = BrowserEventDispatcher;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BrowserEventDispatcher = exports.createVersionInfo = exports.createTransactionSigningFailedEvent = exports.createTransactionSignedEvent = exports.createTransactionSentForSignatureEvent = exports.createDisconnectionEvent = exports.createConnectionStartedEvent = exports.createConnectionRestoringStartedEvent = exports.createConnectionRestoringErrorEvent = exports.createConnectionRestoringCompletedEvent = exports.createConnectionErrorEvent = exports.createConnectionCompletedEvent = exports.createResponseVersionEvent = exports.createRequestVersionEvent = exports.OKX_TON_CONNECTION_AND_TRANSACTION_EVENT = void 0;\nvar tracker_constants_1 = require(\"./tracker-constants\");\nObject.defineProperty(exports, \"OKX_TON_CONNECTION_AND_TRANSACTION_EVENT\", { enumerable: true, get: function () { return tracker_constants_1.OKX_TON_CONNECTION_AND_TRANSACTION_EVENT; } });\nvar types_1 = require(\"./types\");\nObject.defineProperty(exports, \"createRequestVersionEvent\", { enumerable: true, get: function () { return types_1.createRequestVersionEvent; } });\nObject.defineProperty(exports, \"createResponseVersionEvent\", { enumerable: true, get: function () { return types_1.createResponseVersionEvent; } });\nObject.defineProperty(exports, \"createConnectionCompletedEvent\", { enumerable: true, get: function () { return types_1.createConnectionCompletedEvent; } });\nObject.defineProperty(exports, \"createConnectionErrorEvent\", { enumerable: true, get: function () { return types_1.createConnectionErrorEvent; } });\nObject.defineProperty(exports, \"createConnectionRestoringCompletedEvent\", { enumerable: true, get: function () { return types_1.createConnectionRestoringCompletedEvent; } });\nObject.defineProperty(exports, \"createConnectionRestoringErrorEvent\", { enumerable: true, get: function () { return types_1.createConnectionRestoringErrorEvent; } });\nObject.defineProperty(exports, \"createConnectionRestoringStartedEvent\", { enumerable: true, get: function () { return types_1.createConnectionRestoringStartedEvent; } });\nObject.defineProperty(exports, \"createConnectionStartedEvent\", { enumerable: true, get: function () { return types_1.createConnectionStartedEvent; } });\nObject.defineProperty(exports, \"createDisconnectionEvent\", { enumerable: true, get: function () { return types_1.createDisconnectionEvent; } });\nObject.defineProperty(exports, \"createTransactionSentForSignatureEvent\", { enumerable: true, get: function () { return types_1.createTransactionSentForSignatureEvent; } });\nObject.defineProperty(exports, \"createTransactionSignedEvent\", { enumerable: true, get: function () { return types_1.createTransactionSignedEvent; } });\nObject.defineProperty(exports, \"createTransactionSigningFailedEvent\", { enumerable: true, get: function () { return types_1.createTransactionSigningFailedEvent; } });\nObject.defineProperty(exports, \"createVersionInfo\", { enumerable: true, get: function () { return types_1.createVersionInfo; } });\nvar browser_event_dispatcher_1 = require(\"./browser-event-dispatcher\");\nObject.defineProperty(exports, \"BrowserEventDispatcher\", { enumerable: true, get: function () { return browser_event_dispatcher_1.BrowserEventDispatcher; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TonConnectTracker = void 0;\nconst types_1 = require(\"./types\");\nconst browser_event_dispatcher_1 = require(\"./browser-event-dispatcher\");\n/**\n * Tracker for TonConnect user actions, such as transaction signing, connection, etc.\n *\n * List of events:\n *  * `connection-started`: when a user starts connecting a wallet.\n *  * `connection-completed`: when a user successfully connected a wallet.\n *  * `connection-error`: when a user cancels a connection or there is an error during the connection process.\n *  * `connection-restoring-started`: when the dApp starts restoring a connection.\n *  * `connection-restoring-completed`: when the dApp successfully restores a connection.\n *  * `connection-restoring-error`: when the dApp fails to restore a connection.\n *  * `disconnection`: when a user starts disconnecting a wallet.\n *  * `transaction-sent-for-signature`: when a user sends a transaction for signature.\n *  * `transaction-signed`: when a user successfully signs a transaction.\n *  * `transaction-signing-failed`: when a user cancels transaction signing or there is an error during the signing process.\n *\n\n *\n * @internal\n */\nclass TonConnectTracker {\n    /**\n     * Version of the library.\n     */\n    get version() {\n        return (0, types_1.createVersionInfo)({\n            okx_ton_connect_sdk_lib: this.OKXtonConnectSdkVersion,\n            okx_connect_ui_lib: this.OKXConnectUiVersion,\n        });\n    }\n    constructor(options) {\n        /**\n         * Event prefix for user actions.\n         * @private\n         */\n        this.eventPrefix = 'okx-ton-connect-';\n        this.OKXConnectUiVersion = null;\n        this.eventDispatcher = new browser_event_dispatcher_1.BrowserEventDispatcher();\n        this.OKXtonConnectSdkVersion = options.OKXtonConnectSdkVersion;\n        this.init().catch();\n    }\n    init() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this.setRequestVersionHandler();\n                this.OKXConnectUiVersion = yield this.requestTonConnectUiVersion();\n            }\n            catch (e) { }\n        });\n    }\n    /**\n     * Set request version handler.\n     * @private\n     */\n    setRequestVersionHandler() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.eventDispatcher.addEventListener('okx-ton-connect-request-version', () => __awaiter(this, void 0, void 0, function* () {\n                yield this.eventDispatcher.dispatchEvent('okx-ton-connect-response-version', (0, types_1.createResponseVersionEvent)(this.OKXtonConnectSdkVersion));\n            }));\n        });\n    }\n    /**\n     * Request TonConnect UI version.\n     * @private\n     */\n    requestTonConnectUiVersion() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    yield this.eventDispatcher.addEventListener('okx-connect-ui-response-version', (event) => {\n                        resolve(event.detail.version);\n                    }, { once: true });\n                    yield this.eventDispatcher.dispatchEvent('okx-connect-ui-request-version', (0, types_1.createRequestVersionEvent)());\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }));\n        });\n    }\n    /**\n     * Emit user action event to the window.\n     * @param eventDetails\n     * @private\n     */\n    dispatchUserActionEvent(eventDetails) {\n        try {\n            this.eventDispatcher\n                .dispatchEvent(`${this.eventPrefix}${eventDetails.type}`, eventDetails)\n                .catch();\n        }\n        catch (e) { }\n    }\n    /**\n     * Track connection init event.\n     * @param args\n     */\n    trackConnectionStarted(...args) {\n        try {\n            const event = (0, types_1.createConnectionStartedEvent)(this.version, ...args);\n            this.dispatchUserActionEvent(event);\n        }\n        catch (e) { }\n    }\n    /**\n     * Track connection connecting event.\n     * @param args\n     */\n    trackConnectionDeepLink(...args) {\n        try {\n            const event = (0, types_1.createConnectionDeepLinkEvent)(...args);\n            this.dispatchUserActionEvent(event);\n        }\n        catch (e) { }\n    }\n    /**\n     * Track connection success event.\n     * @param args\n     */\n    trackConnectionCompleted(...args) {\n        try {\n            const event = (0, types_1.createConnectionCompletedEvent)(this.version, ...args);\n            this.dispatchUserActionEvent(event);\n        }\n        catch (e) { }\n    }\n    trackConnectionInfoBeforeJump(args) {\n        try {\n            const event = (0, types_1.createConnectionInfoBeforeJumpEvent)(args);\n            this.dispatchUserActionEvent(event);\n        }\n        catch (e) { }\n    }\n    /**\n     * Track connection error event.\n     * @param args\n     */\n    trackConnectionError(...args) {\n        try {\n            const event = (0, types_1.createConnectionErrorEvent)(this.version, ...args);\n            this.dispatchUserActionEvent(event);\n        }\n        catch (e) { }\n    }\n    /**\n     * Track connection restoring init event.\n     * @param args\n     */\n    trackConnectionRestoringStarted(...args) {\n        try {\n            const event = (0, types_1.createConnectionRestoringStartedEvent)(this.version, ...args);\n            this.dispatchUserActionEvent(event);\n        }\n        catch (e) { }\n    }\n    /**\n     * Track connection restoring success event.\n     * @param args\n     */\n    trackConnectionRestoringCompleted(...args) {\n        try {\n            const event = (0, types_1.createConnectionRestoringCompletedEvent)(this.version, ...args);\n            this.dispatchUserActionEvent(event);\n        }\n        catch (e) { }\n    }\n    /**\n     * Track connection restoring error event.\n     * @param args\n     */\n    trackConnectionRestoringError(...args) {\n        try {\n            const event = (0, types_1.createConnectionRestoringErrorEvent)(this.version, ...args);\n            this.dispatchUserActionEvent(event);\n        }\n        catch (e) { }\n    }\n    /**\n     * Track disconnect event.\n     * @param args\n     */\n    trackDisconnection(...args) {\n        try {\n            const event = (0, types_1.createDisconnectionEvent)(this.version, ...args);\n            this.dispatchUserActionEvent(event);\n        }\n        catch (e) { }\n    }\n    /**\n     * Track transaction init event.\n     * @param args\n     */\n    trackTransactionSentForSignature(...args) {\n        try {\n            const event = (0, types_1.createTransactionSentForSignatureEvent)(this.version, ...args);\n            this.dispatchUserActionEvent(event);\n        }\n        catch (e) { }\n    }\n    /**\n     * Track transaction signed event.\n     * @param args\n     */\n    trackTransactionSigned(...args) {\n        try {\n            const event = (0, types_1.createTransactionSignedEvent)(this.version, ...args);\n            this.dispatchUserActionEvent(event);\n        }\n        catch (e) { }\n    }\n    /**\n     * Track transaction error event.\n     * @param args\n     */\n    trackTransactionSigningFailed(...args) {\n        try {\n            const event = (0, types_1.createTransactionSigningFailedEvent)(this.version, ...args);\n            this.dispatchUserActionEvent(event);\n        }\n        catch (e) { }\n    }\n}\nexports.TonConnectTracker = TonConnectTracker;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_TON_CONNECTION_AND_TRANSACTION_EVENT = void 0;\nvar OKX_TON_CONNECTION_AND_TRANSACTION_EVENT;\n(function (OKX_TON_CONNECTION_AND_TRANSACTION_EVENT) {\n    OKX_TON_CONNECTION_AND_TRANSACTION_EVENT[\"OKX_TON_CONNECTION_STARTED\"] = \"okx-ton-connect-connection-started\";\n    OKX_TON_CONNECTION_AND_TRANSACTION_EVENT[\"OKX_TON_CONNECTION_COMPLETED\"] = \"okx-ton-connect-connection-completed\";\n    OKX_TON_CONNECTION_AND_TRANSACTION_EVENT[\"OKX_TON_CONNECTION_ERROR\"] = \"okx-ton-connect-connection-error\";\n    OKX_TON_CONNECTION_AND_TRANSACTION_EVENT[\"OKX_TON_CONNECTION_RESTORING_STARTED\"] = \"okx-ton-connect-connection-restoring-started\";\n    OKX_TON_CONNECTION_AND_TRANSACTION_EVENT[\"OKX_TON_CONNECTION_RESTORING_COMPLETED\"] = \"okx-ton-connect-connection-restoring-completed\";\n    OKX_TON_CONNECTION_AND_TRANSACTION_EVENT[\"OKX_TON_CONNECTION_RESTORING_ERROR\"] = \"okx-ton-connect-connection-restoring-error\";\n    OKX_TON_CONNECTION_AND_TRANSACTION_EVENT[\"OKX_TON_DISCONNECTION\"] = \"okx-ton-connect-disconnection\";\n    OKX_TON_CONNECTION_AND_TRANSACTION_EVENT[\"OKX_TON_TRANSACTION_SENT_FOR_SIGNATURE\"] = \"okx-ton-connect-transaction-sent-for-signature\";\n    OKX_TON_CONNECTION_AND_TRANSACTION_EVENT[\"OKX_TON_TRANSACTION_SIGNED\"] = \"okx-ton-connect-transaction-signed\";\n    OKX_TON_CONNECTION_AND_TRANSACTION_EVENT[\"OKX_TON_TRANSACTION_SIGNING_FAILED\"] = \"okx-ton-connect-transaction-signing-failed\";\n})(OKX_TON_CONNECTION_AND_TRANSACTION_EVENT || (exports.OKX_TON_CONNECTION_AND_TRANSACTION_EVENT = OKX_TON_CONNECTION_AND_TRANSACTION_EVENT = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createRequestVersionEvent = createRequestVersionEvent;\nexports.createResponseVersionEvent = createResponseVersionEvent;\nexports.createVersionInfo = createVersionInfo;\nexports.createConnectionStartedEvent = createConnectionStartedEvent;\nexports.createConnectionDeepLinkEvent = createConnectionDeepLinkEvent;\nexports.createConnectionInfoBeforeJumpEvent = createConnectionInfoBeforeJumpEvent;\nexports.createConnectionCompletedEvent = createConnectionCompletedEvent;\nexports.createConnectionErrorEvent = createConnectionErrorEvent;\nexports.createConnectionRestoringStartedEvent = createConnectionRestoringStartedEvent;\nexports.createConnectionRestoringCompletedEvent = createConnectionRestoringCompletedEvent;\nexports.createConnectionRestoringErrorEvent = createConnectionRestoringErrorEvent;\nexports.createTransactionSentForSignatureEvent = createTransactionSentForSignatureEvent;\nexports.createTransactionSignedEvent = createTransactionSignedEvent;\nexports.createTransactionSigningFailedEvent = createTransactionSigningFailedEvent;\nexports.createDisconnectionEvent = createDisconnectionEvent;\n/**\n * Create a request version event.\n */\nfunction createRequestVersionEvent() {\n    return {\n        type: 'request-version'\n    };\n}\n/**\n * Create a response version event.\n * @param version\n */\nfunction createResponseVersionEvent(version) {\n    return {\n        type: 'response-version',\n        version: version\n    };\n}\n/**\n * Create a version info.\n * @param version\n */\nfunction createVersionInfo(version) {\n    return {\n        okx_ton_connect_sdk_lib: version.okx_ton_connect_sdk_lib,\n        okx_connect_ui_lib: version.okx_connect_ui_lib\n    };\n}\nfunction createConnectionInfo(version, wallet) {\n    var _a, _b, _c, _d, _e, _f, _g, _h;\n    const isTonProof = ((_a = wallet === null || wallet === void 0 ? void 0 : wallet.connectItems) === null || _a === void 0 ? void 0 : _a.tonProof) && 'proof' in wallet.connectItems.tonProof;\n    const authType = isTonProof ? 'ton_proof' : 'ton_addr';\n    return {\n        wallet_address: (_c = (_b = wallet === null || wallet === void 0 ? void 0 : wallet.account) === null || _b === void 0 ? void 0 : _b.address) !== null && _c !== void 0 ? _c : null,\n        wallet_type: (_d = wallet === null || wallet === void 0 ? void 0 : wallet.device.appName) !== null && _d !== void 0 ? _d : null,\n        wallet_version: (_e = wallet === null || wallet === void 0 ? void 0 : wallet.device.appVersion) !== null && _e !== void 0 ? _e : null,\n        auth_type: authType,\n        custom_data: Object.assign({ chain_id: (_g = (_f = wallet === null || wallet === void 0 ? void 0 : wallet.account) === null || _f === void 0 ? void 0 : _f.chain) !== null && _g !== void 0 ? _g : null, provider: (_h = wallet === null || wallet === void 0 ? void 0 : wallet.provider) !== null && _h !== void 0 ? _h : null }, createVersionInfo(version))\n    };\n}\n/**\n * Create a connection init event.\n */\nfunction createConnectionStartedEvent(version) {\n    return {\n        type: 'connection-started',\n        custom_data: createVersionInfo(version)\n    };\n}\n/**\n * Create a connection init event.\n */\nfunction createConnectionDeepLinkEvent(deeplinkUrl) {\n    return {\n        type: 'connection-get-deeplink',\n        deeplinkUrl: deeplinkUrl,\n    };\n}\n// okx-ton-connect-connection-info-before-jump\nfunction createConnectionInfoBeforeJumpEvent(connectInfo) {\n    return {\n        type: 'connection-info-before-jump',\n        connectInfo: connectInfo,\n    };\n}\n/**\n * Create a connection completed event.\n * @param version\n * @param wallet\n */\nfunction createConnectionCompletedEvent(version, wallet) {\n    return Object.assign({ type: 'connection-completed', is_success: true }, createConnectionInfo(version, wallet));\n}\n/**\n * Create a connection error event.\n * @param version\n * @param error_message\n * @param errorCode\n */\nfunction createConnectionErrorEvent(version, error_message, errorCode) {\n    return {\n        type: 'connection-error',\n        is_success: false,\n        error_message: error_message,\n        error_code: errorCode !== null && errorCode !== void 0 ? errorCode : null,\n        custom_data: createVersionInfo(version)\n    };\n}\n/**\n * Create a connection restoring started event.\n */\nfunction createConnectionRestoringStartedEvent(version) {\n    return {\n        type: 'connection-restoring-started',\n        custom_data: createVersionInfo(version)\n    };\n}\n/**\n * Create a connection restoring completed event.\n * @param version\n * @param wallet\n */\nfunction createConnectionRestoringCompletedEvent(version, wallet) {\n    return Object.assign({ type: 'connection-restoring-completed', is_success: true }, createConnectionInfo(version, wallet));\n}\n/**\n * Create a connection restoring error event.\n * @param version\n * @param errorMessage\n */\nfunction createConnectionRestoringErrorEvent(version, errorMessage) {\n    return {\n        type: 'connection-restoring-error',\n        is_success: false,\n        error_message: errorMessage,\n        custom_data: createVersionInfo(version)\n    };\n}\nfunction createTransactionInfo(wallet, transaction) {\n    var _a, _b, _c, _d;\n    return {\n        valid_until: (_a = String(transaction.validUntil)) !== null && _a !== void 0 ? _a : null,\n        from: (_d = (_b = transaction.from) !== null && _b !== void 0 ? _b : (_c = wallet === null || wallet === void 0 ? void 0 : wallet.account) === null || _c === void 0 ? void 0 : _c.address) !== null && _d !== void 0 ? _d : null,\n        messages: transaction.messages.map(message => {\n            var _a, _b;\n            return ({\n                address: (_a = message.address) !== null && _a !== void 0 ? _a : null,\n                amount: (_b = message.amount) !== null && _b !== void 0 ? _b : null\n            });\n        })\n    };\n}\n/**\n * Create a transaction init event.\n * @param version\n * @param wallet\n * @param transaction\n */\nfunction createTransactionSentForSignatureEvent(version, wallet, transaction) {\n    return Object.assign(Object.assign({ type: 'transaction-sent-for-signature' }, createConnectionInfo(version, wallet)), createTransactionInfo(wallet, transaction));\n}\n/**\n * Create a transaction signed event.\n * @param version\n * @param wallet\n * @param transaction\n * @param signedTransaction\n */\nfunction createTransactionSignedEvent(version, wallet, transaction, signedTransaction) {\n    return Object.assign(Object.assign({ type: 'transaction-signed', is_success: true, signed_transaction: signedTransaction.boc }, createConnectionInfo(version, wallet)), createTransactionInfo(wallet, transaction));\n}\n/**\n * Create a transaction error event.\n * @param version\n * @param wallet\n * @param transaction\n * @param errorMessage\n * @param errorCode\n */\nfunction createTransactionSigningFailedEvent(version, wallet, transaction, errorMessage, errorCode) {\n    return Object.assign(Object.assign({ type: 'transaction-signing-failed', is_success: false, error_message: errorMessage, error_code: errorCode !== null && errorCode !== void 0 ? errorCode : null }, createConnectionInfo(version, wallet)), createTransactionInfo(wallet, transaction));\n}\n/**\n * Create a disconnect event.\n * @param version\n * @param wallet\n * @param scope\n * @returns\n */\nfunction createDisconnectionEvent(version, wallet, scope) {\n    return Object.assign({ type: 'disconnection', scope: scope }, createConnectionInfo(version, wallet));\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toUserFriendlyAddress = toUserFriendlyAddress;\nconst core_1 = require(\"@okxconnect/core\");\nconst noBounceableTag = 0x51;\nconst testOnlyTag = 0x80;\n/**\n * Converts raw TON address to no-bounceable user-friendly format. [See details]{@link https://ton.org/docs/learn/overviews/addresses#user-friendly-address}\n * @param hexAddress raw TON address formatted as \"0:<hex string without 0x>\".\n * @param [testOnly=false] convert address to test-only form. [See details]{@link https://ton.org/docs/learn/overviews/addresses#user-friendly-address}\n */\nfunction toUserFriendlyAddress(hexAddress, testOnly = false) {\n    const { wc, hex } = parseHexAddress(hexAddress);\n    let tag = noBounceableTag;\n    if (testOnly) {\n        tag |= testOnlyTag;\n    }\n    const addr = new Int8Array(34);\n    addr[0] = tag;\n    addr[1] = wc;\n    addr.set(hex, 2);\n    const addressWithChecksum = new Uint8Array(36);\n    addressWithChecksum.set(addr);\n    addressWithChecksum.set(crc16(addr), 34);\n    // let addressBase64 = Base64.encode(addressWithChecksum);\n    let addressBase64 = (0, core_1.base64encode)(addressWithChecksum, false);\n    return addressBase64.replace(/\\+/g, '-').replace(/\\//g, '_');\n}\nfunction parseHexAddress(hexAddress) {\n    if (!hexAddress.includes(':')) {\n        throw new Error(`Wrong address ${hexAddress}. Address must include \":\".`);\n    }\n    const parts = hexAddress.split(':');\n    if (parts.length !== 2) {\n        throw new Error(`Wrong address ${hexAddress}. Address must include \":\" only once.`);\n    }\n    const wc = parseInt(parts[0]);\n    if (wc !== 0 && wc !== -1) {\n        throw new Error(`Wrong address ${hexAddress}. WC must be eq 0 or -1, but ${wc} received.`);\n    }\n    const hex = parts[1];\n    if ((hex === null || hex === void 0 ? void 0 : hex.length) !== 64) {\n        throw new Error(`Wrong address ${hexAddress}. Hex part must be 64bytes length, but ${hex === null || hex === void 0 ? void 0 : hex.length} received.`);\n    }\n    return {\n        wc,\n        hex: hexToBytes(hex)\n    };\n}\nfunction crc16(data) {\n    const poly = 0x1021;\n    let reg = 0;\n    const message = new Uint8Array(data.length + 2);\n    message.set(data);\n    for (let byte of message) {\n        let mask = 0x80;\n        while (mask > 0) {\n            reg <<= 1;\n            if (byte & mask) {\n                reg += 1;\n            }\n            mask >>= 1;\n            if (reg > 0xffff) {\n                reg &= 0xffff;\n                reg ^= poly;\n            }\n        }\n    }\n    return new Uint8Array([Math.floor(reg / 256), reg % 256]);\n}\nconst toByteMap = {};\nfor (let ord = 0; ord <= 0xff; ord++) {\n    let s = ord.toString(16);\n    if (s.length < 2) {\n        s = '0' + s;\n    }\n    toByteMap[s] = ord;\n}\nfunction hexToBytes(hex) {\n    hex = hex.toLowerCase();\n    const length2 = hex.length;\n    if (length2 % 2 !== 0) {\n        throw new Error('Hex string must have length a multiple of 2: ' + hex);\n    }\n    const length = length2 / 2;\n    const result = new Uint8Array(length);\n    for (let i = 0; i < length; i++) {\n        const doubled = i * 2;\n        const hexSubstring = hex.substring(doubled, doubled + 2);\n        if (!toByteMap.hasOwnProperty(hexSubstring)) {\n            throw new Error('Invalid hex character: ' + hexSubstring);\n        }\n        result[i] = toByteMap[hexSubstring];\n    }\n    return result;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCONNECTOR_TON_KEY = exports.OKXtonConnectSdkVersion = void 0;\nexports.OKXtonConnectSdkVersion = '1';\nexports.OKXCONNECTOR_TON_KEY = \"OKXStorage_ctc\";\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkSendTransactionSupport = checkSendTransactionSupport;\nconst core_1 = require(\"@okxconnect/core\");\nfunction checkSendTransactionSupport(features, options) {\n    const supportsDeprecatedSendTransactionFeature = features.includes('ton_sendTransaction');\n    if (!supportsDeprecatedSendTransactionFeature) {\n        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Wallet doesn't support SendTransaction feature.\");\n    }\n    if (4 < options.requiredMessagesNumber) {\n        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, `Wallet is not able to handle such SendTransaction request. Max support messages number is ${4}, but ${options.requiredMessagesNumber} is required.`);\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toUserFriendlyAddress = exports.removeUrlLastSlash = exports.addPathToUrl = void 0;\nvar url_1 = require(\"./url\");\nObject.defineProperty(exports, \"addPathToUrl\", { enumerable: true, get: function () { return url_1.addPathToUrl; } });\nObject.defineProperty(exports, \"removeUrlLastSlash\", { enumerable: true, get: function () { return url_1.removeUrlLastSlash; } });\nvar address_1 = require(\"./address\");\nObject.defineProperty(exports, \"toUserFriendlyAddress\", { enumerable: true, get: function () { return address_1.toUserFriendlyAddress; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.removeUrlLastSlash = removeUrlLastSlash;\nexports.addPathToUrl = addPathToUrl;\nfunction removeUrlLastSlash(url) {\n    if (url.slice(-1) === '/') {\n        return url.slice(0, -1);\n    }\n    return url;\n}\nfunction addPathToUrl(url, path) {\n    return removeUrlLastSlash(url) + '/' + path;\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXBtcProvider = void 0;\nconst _1 = require(\"./\");\nclass OKXBtcProvider {\n    constructor(provider) {\n        this.caip = [\n            \"btc:mainnet\",\n            \"fractal:mainnet\"\n        ];\n        this.provider = provider;\n    }\n    getAddressForChainId(chainId) {\n        var _a, _b;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let accounts = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['btc']) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        });\n        if (accounts == undefined || accounts.length < 0) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `no connected account`);\n        }\n        let account = accounts[0];\n        const address = account.split(':')[2];\n        return address;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let extra = (_c = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['btc']) === null || _b === void 0 ? void 0 : _b.extra) === null || _c === void 0 ? void 0 : _c[chainId];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"compressedPublicKey\"];\n        }\n        return {\n            address: this.getAddressForChainId(chainId),\n            publicKey: publicKey\n        };\n    }\n    /**\n     *\n     * @param signStr\n     * @param chainId\n     * @param type\n     * @returns\n     */\n    signMessage(chainId, signStr, type) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (signStr === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signMessage parmas error`);\n            }\n            let params = {\n                signStr: signStr,\n                from: this.getAddressForChainId(chainId)\n            };\n            if (type) {\n                params.type = type;\n            }\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signMessage\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param toAddress\n     * @param satoshis\n     * @param options { feeRate: 0 }\n     * @returns\n     */\n    sendBitcoin(chainId, toAddress, satoshis, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            let params = {\n                from: this.getAddressForChainId(chainId),\n                to: toAddress,\n                value: (satoshis / 100000000).toString(),\n            };\n            if (options === null || options === void 0 ? void 0 : options.feeRate) {\n                params[\"satBytes\"] = options.feeRate.toString();\n            }\n            let result = yield this.send(chainId, params);\n            if (result !== undefined && ('txhash' in result)) {\n                // return txhash directly\n                return result.txhash;\n            }\n            // or return unexpected result\n            return result;\n        });\n    }\n    //  from - string：当前连接的钱包的 BTC 地址\n    //  to - string：接受 BTC 的地址\n    //  value - string：发送 BTC 的数量\n    //  satBytes - string： (可选) 自定义费率\n    //  memo - string： (可选) 指定 outputs OP_RETURN 内容 示例\n    //  memoPos - number： (可选) 指定 outputs OP_RETURN 输出位置，如果传了 memo 则必须传入 memoPos 指定位置，否则 memo 不生效\n    send(chainId, input) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (!this.checkParameters(input, 'to', 'value')) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send parmas  error`);\n            }\n            input[\"from\"] = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: 'btc_send',\n                    params: input\n                }, chainId);\n                if ('result' in ret) {\n                    return {\n                        txhash: ret.result\n                    };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param psbtHex string 要签名的 psbt 的十六进制字符串\n     * @param options object { autoFinalized: 0 }\n     */\n    signPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.signPsbts(chainId, [psbtHex], [options]).then(psbtResults => {\n                    let results = JSON.parse(psbtResults);\n                    resolve(results[0]);\n                }).catch(error => {\n                    reject(error);\n                });\n            });\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHexs Array\n     * @param options Array [{ autoFinalized: 0 }]\n     * @returns\n     */\n    signPsbts(chainId, psbtHexs, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHexs === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHexs: psbtHexs,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signPsbts\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHex string\n     * @param options object\n     * @returns\n     */\n    signAndPushPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHex === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHex: psbtHex,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signAndPushPsbt\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return JSON.parse(ret.result);\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param address string, receiver address\n     * @param inscriptionId string, 铭文 ID + 协议，没有传协议则默认是 Ordinals NFT ，目前仅支持 Ordinals 及 Atomicals 协议\n     * @param options object, { feeRate: number } custom rates\n     */\n    sendInscription(chainId, address, inscriptionId, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let extension = {\n                address: address,\n                inscriptionId: inscriptionId,\n                options: options\n            };\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (address === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method sendInscription params error`);\n            }\n            var feeRate = 0;\n            if (options && ('feeRate' in options)) {\n                feeRate = options.feeRate;\n            }\n            let coinId = '';\n            let from = this.getAddressForChainId(chainId);\n            var protocolId = 7; //ProtocolIdBRCNFT\n            if (inscriptionId !== 'undefined') {\n                let atomicSuffix = \"-Atomicals\";\n                let ordinalsSuffix = \"-Ordinals\";\n                if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(atomicSuffix.toLowerCase())) {\n                    protocolId = 8; //WXRCProtocolIdARCNFT\n                    inscriptionId = this.removeSuffix(inscriptionId, atomicSuffix);\n                }\n                else if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(ordinalsSuffix.toLowerCase())) {\n                    inscriptionId = this.removeSuffix(inscriptionId, ordinalsSuffix);\n                }\n            }\n            let params = {\n                scenario: 5,\n                feeRate: feeRate,\n                txType: \"20\",\n                to: address,\n                batchBean: [\n                    {\n                        coinAmount: \"1\",\n                        nftId: inscriptionId,\n                        protocolId: protocolId,\n                        coinId: coinId,\n                        inscriptionId: \"\",\n                        from: from\n                    }\n                ],\n                extension: extension\n            };\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_sendInscription\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    removeSuffix(str, suffix) {\n        if (str.endsWith(suffix)) {\n            return str.slice(0, str.length - suffix.length);\n        }\n        return str;\n    }\n    checkParameters(params, ...keys) {\n        var unexistKeys = [];\n        keys.forEach(key => {\n            if (!(`${key}` in params)) {\n                unexistKeys.push(key);\n            }\n        });\n        if (unexistKeys.length > 0) {\n            console.log('not find key: ', unexistKeys.join(\",\"));\n            return false;\n        }\n        return true;\n    }\n    /**\n     *\n     * @param chainId eg. btc:mainnet\n     * @returns eg. btc\n     */\n    checkChainId(chainId) {\n        if (this.caip.includes(chainId)) {\n            let [namespaceKey, _] = chainId.split(\":\");\n            return namespaceKey;\n        }\n        return undefined;\n    }\n}\nexports.OKXBtcProvider = OKXBtcProvider;\nexports.default = OKXBtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCosmosProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXCosmosProvider {\n    constructor(provider) {\n        this.provider = provider;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e, _f;\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount chainId:\", chainId);\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount namespaces:\", JSON.stringify((_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces));\n        let account = (_c = (_b = this.provider.session) === null || _b === void 0 ? void 0 : _b.namespaces[core_1.NameSpaceKeyCosmos]) === null || _c === void 0 ? void 0 : _c.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount account:\", JSON.stringify(account));\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount address:\", address);\n        let extra = (_f = (_e = (_d = this.provider.session) === null || _d === void 0 ? void 0 : _d.namespaces[core_1.NameSpaceKeyCosmos]) === null || _e === void 0 ? void 0 : _e.extra) === null || _f === void 0 ? void 0 : _f[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n            console.log(\"aptos_publicKey\", publicKey);\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            algo: \"secp256k1\",\n            address: address,\n            bech32Address: address,\n            pubKey: this.hexToUint8Array(publicKey),\n        };\n    }\n    signArbitrary(chainId, signerAddress, data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const base64Encoded = window.btoa(data);\n            const signDoc = {\n                chain_id: \"\",\n                account_number: \"0\",\n                sequence: \"0\",\n                fee: {\n                    gas: \"0\",\n                    amount: []\n                },\n                msgs: [{\n                        \"type\": \"sign/MsgSignData\",\n                        \"value\": {\n                            \"signer\": signerAddress,\n                            \"data\": base64Encoded\n                        }\n                    }],\n                memo: \"\"\n            };\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signArbitrary\",\n                \"params\": {\n                    \"signer\": signerAddress,\n                    \"chain_id\": chainId.split(\":\")[1],\n                    \"data\": signDoc\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    if (typeof ret.result == \"string\") {\n                        return JSON.parse(ret.result);\n                    }\n                    else {\n                        return ret.result;\n                    }\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signAmino(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (signDoc.msgs[0].type == \"sign/MsgSignData\") {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signArbitrary\",\n                    \"params\": {\n                        \"signer\": signerAddress,\n                        \"chain_id\": chainId.split(\":\")[1],\n                        \"data\": signDoc\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        return ret.result;\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    return error;\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                }\n            }\n            else {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signAmino\",\n                    \"params\": {\n                        \"signer\": signerAddress,\n                        \"chainId\": chainId.split(\":\")[1],\n                        \"sign_doc\": signDoc,\n                        \"signOptions\": signOptions\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        const resData = JSON.parse(ret.result);\n                        console.log(\"signdoc\", signDoc, resData.signDoc);\n                        signDoc.fee = resData.signDoc.fee;\n                        return { signed: signDoc, signature: resData.signature };\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                    return error;\n                }\n            }\n        });\n    }\n    signDirect(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const object = {\n                bodyBytes: this.bufferToHex(signDoc.bodyBytes),\n                authInfoBytes: this.bufferToHex(signDoc.authInfoBytes),\n                chainId: signDoc.chainId,\n                accountNumber: signDoc.accountNumber ? signDoc.accountNumber.toString() : null,\n                signOptions: signOptions ? signOptions : null\n            };\n            let data = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signDirect\",\n                \"params\": {\n                    \"signer\": signerAddress,\n                    \"chainId\": chainId.split(\":\")[1],\n                    \"sign_doc\": object,\n                }\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    const res = JSON.parse(ret.result);\n                    console.log(\"signdirect result\", res);\n                    signDoc.authInfoBytes = this.messageToBuffer(res.signDoc.authInfoBytes);\n                    return { signed: signDoc, signature: res.signature };\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    messageToBuffer(message) {\n        var buffer = Uint8Array.from([]);\n        try {\n            if (typeof message === \"string\") {\n                buffer = this.hexToUint8Array(message.replace(\"0x\", \"\"));\n            }\n            else {\n                buffer = Uint8Array.from(message);\n            }\n        }\n        catch (err) {\n            console.log(`messageToBuffer error: ${err}`);\n        }\n        return buffer;\n    }\n    bufferToHex(arr) {\n        let output = [...new Uint8Array(arr)]\n            .map(x => x.toString(16).padStart(2, '0'))\n            .join('');\n        return '0x' + output;\n    }\n    hexToUint8Array(hexString) {\n        if (hexString.length % 2 !== 0) {\n            throw \"Invalid hexString\";\n        }\n        var arrayBuffer = new Uint8Array(hexString.length / 2);\n        for (var i = 0; i < hexString.length; i += 2) {\n            var byteValue = parseInt(hexString.substr(i, 2), 16);\n            if (isNaN(byteValue)) {\n                throw \"Invalid hexString\";\n            }\n            arrayBuffer[i / 2] = byteValue;\n        }\n        return arrayBuffer;\n    }\n}\nexports.OKXCosmosProvider = OKXCosmosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXStarknetProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXStarknetProvider {\n    constructor(provider) {\n        this.STARKNET_CHAIN_ID = \"starknet:mainnet\";\n        this.provider = provider;\n    }\n    getChain(chainId) {\n        if (chainId == null) {\n            chainId = this.STARKNET_CHAIN_ID;\n        }\n        if (chainId != this.STARKNET_CHAIN_ID) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, \"The chainId:\" + chainId + \"is wrong for OKXStarknetProvider\");\n        }\n        return chainId;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e;\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[core_1.NameSpaceKeyStarknet]) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        let extra = (_e = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces[core_1.NameSpaceKeyStarknet]) === null || _d === void 0 ? void 0 : _d.extra) === null || _e === void 0 ? void 0 : _e[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address,\n            pubKey: publicKey\n        };\n    }\n    /**\n     *\n     * @param chainId\n     * @param signerAddress\n     * @param data: { types, primaryType, domain, message } as TypedData\n     * @returns [signedDataR, signedDataS]\n     */\n    signMessage(signerAddress, typedData, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            if (signerAddress.length == 0) {\n                signerAddress = this.getAccount(chainId)[\"address\"];\n            }\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"starknet_signMessage\",\n                \"params\": {\n                    \"accountAddress\": signerAddress,\n                    \"typedData\": typedData\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    let results = ret.result;\n                    if (typeof results == 'string') {\n                        results = JSON.parse(results);\n                    }\n                    return [results[\"signedDataR\"], results[\"signedDataS\"]];\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     * sendTransaction\n     * @param chainId\n     * @param signerAddress\n     * @param transaction\n     * @returns { transaction_hash }\n     */\n    sendTransaction(signerAddress, transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let transactionData = {\n                \"accountAddress\": signerAddress,\n                \"executionRequest\": transaction\n            };\n            let data = {\n                \"method\": \"starknet_sendTransaction\",\n                \"params\": {\n                    \"data\": JSON.stringify(transactionData),\n                    \"from\": signerAddress\n                }\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return { transaction_hash: ret.result };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     *\n     * signMessage old API（rarely used, no need provide to external）\n     * @param chainId\n     * @param payload\n     * @returns {transaction_hash, class_hash}\n     */\n    signMessageDeclareContractPayload(payload, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            try {\n                let data = {\n                    \"method\": \"starknet_signMessage\",\n                    \"params\": payload\n                };\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return {\n                        \"transaction_hash\": ret.result[\"txHash\"],\n                        \"class_hash\": ret.result[\"classHash\"]\n                    };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     * sendTransaction old API（rarely used, no need provide to external）\n     * @param chainId\n     * @param signerAddress\n     * @param calls\n     * @param abis\n     * @param transactionsDetail\n     * @returns { transaction_hash }\n     */\n    /// todo： \n    /// 修改方法名\n    /// chainId 放后面\n    sendMessageExecuteTransactionDetail(signerAddress, calls, abis, transactionsDetail, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            const transactions = Array.isArray(calls) ? calls : [calls];\n            const executionRequest = {\n                \"calls\": transactions,\n                \"abis\": abis,\n                \"transactionsDetail\": {\n                    \"nonce\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.nonce,\n                    \"maxFee\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.nonce,\n                    \"version\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.version,\n                }\n            };\n            return this.sendTransaction(signerAddress, executionRequest, chainId);\n        });\n    }\n}\nexports.OKXStarknetProvider = OKXStarknetProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTonProvider = void 0;\nconst _1 = require(\"./\");\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXTonProvider {\n    constructor(generator) {\n        this.statusChangeSubscriptions = [];\n        this.statusChangeErrorSubscriptions = [];\n        this.provider = generator;\n        this.provider.on(\"connect\", () => {\n            let tonWallet = this.wallet();\n            (0, core_1.logDebug)(\"OKXTONProvider event connect:\", JSON.stringify(tonWallet));\n            this.statusChangeSubscriptions.forEach(callback => callback(tonWallet));\n        });\n        this.provider.on(\"reconnect\", () => {\n            let tonWallet = this.wallet();\n            (0, core_1.logDebug)(\"OKXTONProvider event reconnect:\", JSON.stringify(tonWallet));\n            this.statusChangeSubscriptions.forEach(callback => callback(tonWallet));\n        });\n        this.provider.on(\"disconnect\", () => {\n            (0, core_1.logDebug)(\"OKXTONProvider event disconnect:\");\n            this.statusChangeSubscriptions.forEach(callback => callback(null));\n        });\n        this.provider.on(\"connect_error\", (error) => {\n            (0, core_1.logDebug)(\"OKXTONProvider event connect_error:\", JSON.stringify(error));\n            this.statusChangeErrorSubscriptions.forEach(errorsHandler => errorsHandler(error));\n        });\n    }\n    connected() {\n        if (this.provider.connected()) {\n            return !!this.provider.session.namespaces[\"ton\"];\n        }\n        return false;\n    }\n    account() {\n        try {\n            if (!this.provider.session) {\n                return null;\n            }\n            let tonNameSpace = this.provider.session.namespaces['ton'];\n            if (!tonNameSpace || !tonNameSpace.payload || !tonNameSpace.payload.ton_addr) {\n                return null;\n            }\n            let ton_addr = tonNameSpace.payload.ton_addr;\n            return {\n                address: ton_addr.address,\n                chain: ton_addr.network,\n                walletStateInit: ton_addr.walletStateInit,\n                publicKey: ton_addr.publicKey,\n            };\n        }\n        catch (e) {\n            (0, core_1.logDebug)(\"OKXTONProvider account  error:\", JSON.stringify(e));\n            return null;\n        }\n    }\n    wallet() {\n        if (this.connected()) {\n            try {\n                let sessionWallet = this.provider.session.wallet;\n                let tonDeviceInfo = {\n                    platform: sessionWallet.platform,\n                    appName: sessionWallet.appName,\n                    appVersion: sessionWallet.appVersion,\n                    maxProtocolVersion: sessionWallet.maxProtocolVersion,\n                    features: ['ton_sendTransaction'],\n                };\n                const wallet = {\n                    device: tonDeviceInfo,\n                    provider: \"http\",\n                    account: this.account()\n                };\n                let tonNameSpace = this.provider.session.namespaces['ton'];\n                if (tonNameSpace && tonNameSpace.payload && tonNameSpace.payload.ton_proof) {\n                    wallet.connectItems = {\n                        tonProof: tonNameSpace.payload.ton_proof\n                    };\n                }\n                (0, core_1.logDebug)(\"OKXTONProvider wallet :\", JSON.stringify(wallet));\n                return wallet;\n            }\n            catch (e) {\n                (0, core_1.logDebug)(\"OKXTONProvider wallet  error:\", JSON.stringify(e));\n                return null;\n            }\n        }\n        return null;\n    }\n    onStatusChange(callback, errorsHandler) {\n        this.statusChangeSubscriptions.push(callback);\n        if (errorsHandler) {\n            this.statusChangeErrorSubscriptions.push(errorsHandler);\n        }\n        return () => {\n            this.statusChangeSubscriptions = this.statusChangeSubscriptions.filter(item => item !== callback);\n            if (errorsHandler) {\n                this.statusChangeErrorSubscriptions = this.statusChangeErrorSubscriptions.filter(item => item !== errorsHandler);\n            }\n        };\n    }\n    sendTransaction(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (transaction.network && transaction.network !== core_1.TONCHAIN.MAINNET) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, 'OKXTONProvider sendTransaction network error');\n            }\n            if (!transaction.network) {\n                transaction.network = core_1.TONCHAIN.MAINNET;\n            }\n            if (this.provider.session) {\n                if (!transaction.from) {\n                    const accounts = this.provider.requestAccountsWithNamespace('ton');\n                    transaction.from = accounts[0];\n                }\n            }\n            const requestParams = {\n                method: \"ton_sendTransaction\",\n                params: transaction,\n            };\n            let chain = 'ton:' + core_1.TONCHAIN.MAINNET;\n            (0, core_1.logDebug)(\"OKXTONProvider sendTransaction transaction----:\", chain, JSON.stringify(requestParams));\n            return this.provider.request(requestParams, chain);\n        });\n    }\n}\nexports.OKXTonProvider = OKXTonProvider;\nexports.default = OKXTonProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTronProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXTronProvider {\n    constructor(provider) {\n        this.TRON_CHAIN_ID = \"tron:mainnet\";\n        this.provider = provider;\n    }\n    getChain(chainId) {\n        if (chainId == null) {\n            chainId = this.TRON_CHAIN_ID;\n        }\n        if (chainId != this.TRON_CHAIN_ID) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, \"The chainId:\" + chainId + \"is wrong for OKXTronProvider\");\n        }\n        return chainId;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e;\n        chainId = this.getChain(chainId);\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[core_1.NameSpaceKeyTron]) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        let extra = (_e = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces[core_1.NameSpaceKeyTron]) === null || _d === void 0 ? void 0 : _d.extra) === null || _e === void 0 ? void 0 : _e[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address\n        };\n    }\n    stringToHex(str) {\n        let hex = '';\n        for (let i = 0; i < str.length; i++) {\n            hex += str.charCodeAt(i).toString(16).padStart(2, '0');\n        }\n        return hex;\n    }\n    signMessage(data, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"tron_signMessage\",\n                \"params\": {\n                    \"message\": this.stringToHex(data)\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signMessageV2(data, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"tron_signMessageV2\",\n                \"params\": {\n                    \"message\": data\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let data = {\n                \"method\": \"tron_signTransaction\",\n                \"params\": transaction\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    let signedTx;\n                    if (typeof ret.result == \"string\") {\n                        signedTx = JSON.parse(ret.result);\n                    }\n                    else {\n                        signedTx = ret.result;\n                    }\n                    let realSignTx = {};\n                    realSignTx.visible = signedTx.visible;\n                    realSignTx.txID = signedTx.txID;\n                    let rawData = {};\n                    rawData.contract = signedTx.raw_data.contract;\n                    rawData.expiration = signedTx.raw_data.expiration;\n                    rawData.ref_block_bytes = signedTx.raw_data.ref_block_bytes;\n                    rawData.fee_limit = signedTx.raw_data.fee_limit;\n                    rawData.ref_block_hash = signedTx.raw_data.ref_block_hash;\n                    rawData.timestamp = signedTx.raw_data.timestamp;\n                    realSignTx.raw_data = rawData;\n                    realSignTx.raw_data_hex = signedTx.raw_data_hex;\n                    realSignTx.signature = signedTx.signature;\n                    return realSignTx;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signAndSendTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let data = {\n                \"method\": \"tron_signAndSendTransaction\",\n                \"params\": transaction\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n}\nexports.OKXTronProvider = OKXTronProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXUniversalProvider = void 0;\nconst eip155_1 = require(\"./provider/providers/eip155\");\nconst sui_1 = require(\"./provider/providers/sui\");\nconst constants_1 = require(\"./provider/constants\");\nconst eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\nconst client_1 = require(\"./packages/sign-client/client\");\nconst core_1 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"./packages/utils/namespaces\");\nconst solana_1 = __importDefault(require(\"./provider/providers/solana\"));\nconst btc_1 = __importDefault(require(\"./provider/providers/btc\"));\nconst aptos_1 = __importDefault(require(\"./provider/providers/aptos\"));\nconst ton_1 = __importDefault(require(\"./provider/providers/ton\"));\nconst cosmos_1 = __importDefault(require(\"./provider/providers/cosmos\"));\nconst tron_1 = __importDefault(require(\"./provider/providers/tron\"));\nconst utils_1 = require(\"./provider/utils\");\nconst packages_1 = require(\"./packages\");\nconst provider_1 = require(\"./provider\");\nconst starknet_1 = __importDefault(require(\"./provider/providers/starknet\"));\nclass OKXUniversalProvider {\n    static init(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider init() called');\n            (0, core_1.checkMetaData)(opts.dappMetaData);\n            // ignore rpc provider check by default\n            (0, utils_1.setGlobal)('disableProviderPing', true);\n            let provider;\n            if (window && window.okxConnectUniversalinwindow && window.okxConnectUniversalinwindow instanceof OKXUniversalProvider) {\n                (0, core_1.logDebug)('OKXUniversalConnect init() old called');\n                provider = window.okxConnectUniversalinwindow;\n            }\n            else {\n                (0, core_1.logDebug)('OKXUniversalConnect init() new called');\n                provider = new OKXUniversalProvider(opts);\n                if (window) {\n                    window.okxConnectUniversalinwindow = provider;\n                }\n                yield provider.initialize();\n            }\n            (0, core_1.getDefaultReporter)().configVersionAndSide('universalprovider-1.5.2', 'dapp', provider.providerOpts.dappMetaData.name);\n            return provider;\n        });\n    }\n    constructor(opts) {\n        this.rpcProviders = {};\n        this.events = new eventemitter3_1.default();\n        if (!opts.connector || opts.connector.length == 0) {\n            opts.connector = [core_1.AppwalletConnector.getConnector(), core_1.TgwalletConnector.getConnector()];\n        }\n        this.providerOpts = opts;\n    }\n    request(args, chain) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider request() called');\n            (0, core_1.reportLog)('OKXUniversalProvider request() called');\n            if (!this.connected()) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            (0, core_1.logDebug)('OKXUniversalProvider request()  connected ');\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return yield this.getProvider(namespace).request(requestParam);\n        });\n    }\n    buildRequestParamFromRequest(args, chain) {\n        var _a;\n        (0, core_1.logDebug)(\"UniversalProvider request args >>>>>>>: \", chain, (0, core_1.safeJsonStringify)(args));\n        let [namespace, chainId] = this.validateChain(chain);\n        if (!this.session) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Please call connect() before request()\");\n        }\n        let keyArr = Object.keys(this.session.namespaces);\n        if (!chain && keyArr && keyArr.length > 1) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Multiple chains have been linked, the request method requires chain`);\n        }\n        if (namespace == \"aptos\" && chainId == \"mainnet\") {\n            namespace = \"aptos\";\n            chainId = \"637\";\n        }\n        if (namespace == \"movement\" && chainId == \"testnet\") {\n            namespace = \"aptos\";\n            chainId = \"70000060\";\n        }\n        const requestParam = Object.assign(Object.assign({}, args), { chainId: `${namespace}:${chainId}`, redirect: (_a = args.redirect) !== null && _a !== void 0 ? _a : this.sessionConfig.redirect });\n        return { namespace, requestParam };\n    }\n    enable() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.client) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (!this.session) {\n                if (this.connectOpts) {\n                    yield this.connect(this.connectOpts);\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n                }\n            }\n            const accounts = yield this.requestAccounts();\n            return accounts;\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider disconnect() called');\n            (0, core_1.reportLog)('provider disconnect called');\n            if (!this.session) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n                let called = false;\n                const onRequestSent = () => __awaiter(this, void 0, void 0, function* () {\n                    if (!called) {\n                        called = true;\n                        yield this.disconnectAndEmit();\n                        yield this.cleanup();\n                        resolve();\n                        (0, core_1.logDebug)(\"UniversalProvider disconnect Disconnected\");\n                        (0, core_1.reportLog)('provider disconnect disconnected');\n                    }\n                });\n                try {\n                    yield this.client.disconnect();\n                    yield onRequestSent();\n                }\n                catch (e) {\n                    yield onRequestSent();\n                }\n            }));\n        });\n    }\n    disconnectAndEmit() {\n        var _a, _b;\n        this.client.engine.clearData();\n        this.events.emit(\"disconnect\", { topic: (_a = this.session) === null || _a === void 0 ? void 0 : _a.topic });\n        this.events.emit(\"session_delete\", { topic: (_b = this.session) === null || _b === void 0 ? void 0 : _b.topic });\n    }\n    aptosChainNameToGeneralId(chainId) {\n        if (chainId == \"aptos:mainnet\") {\n            return \"aptos:637\";\n        }\n        else if (chainId == \"movement:testnet\") {\n            return \"aptos:70000060\";\n        }\n        else {\n            return chainId;\n        }\n    }\n    replaceAptos(opts) {\n        var _a, _b;\n        let aptosNameSpace = (_a = opts.namespaces) === null || _a === void 0 ? void 0 : _a[\"aptos\"];\n        if (aptosNameSpace != undefined) {\n            let realNS = this.replaceAptosInner(aptosNameSpace);\n            if (opts.namespaces != undefined && \"aptos\" in opts.namespaces && realNS != undefined) {\n                opts.namespaces.aptos = realNS;\n            }\n        }\n        let optionAptosNameSpace = (_b = opts.optionalNamespaces) === null || _b === void 0 ? void 0 : _b[\"aptos\"];\n        if (optionAptosNameSpace != undefined) {\n            let realOptionNS = this.replaceAptosInner(optionAptosNameSpace);\n            if (opts.optionalNamespaces != undefined && \"aptos\" in opts.optionalNamespaces && realOptionNS != undefined) {\n                opts.optionalNamespaces.aptos = realOptionNS;\n            }\n        }\n        return opts;\n    }\n    replaceAptosInner(aptosNameSpace) {\n        var _a;\n        if (aptosNameSpace != undefined) {\n            aptosNameSpace.chains = (_a = aptosNameSpace.chains) === null || _a === void 0 ? void 0 : _a.map(chainId => {\n                return this.aptosChainNameToGeneralId(chainId);\n            });\n            if (aptosNameSpace.defaultChain != undefined) {\n                aptosNameSpace.defaultChain = this.aptosChainNameToGeneralId(aptosNameSpace.defaultChain);\n            }\n        }\n        return aptosNameSpace;\n    }\n    replaceAptosGeneralIdWithNetName(chainId) {\n        if (chainId.includes(\"aptos:637\")) {\n            chainId = chainId.replace(\"aptos:637\", \"aptos:mainnet\");\n        }\n        else if (chainId.includes(\"aptos:70000060\")) {\n            chainId = chainId.replace(\"aptos:70000060\", \"movement:testnet\");\n        }\n        return chainId;\n    }\n    replaceSessionAptos(session) {\n        var _a;\n        let namespaces = (_a = session === null || session === void 0 ? void 0 : session.namespaces) === null || _a === void 0 ? void 0 : _a[\"aptos\"];\n        if (namespaces != undefined && namespaces.chains != undefined) {\n            namespaces.chains = namespaces.chains.map(chain => {\n                return this.replaceAptosGeneralIdWithNetName(chain);\n            });\n            namespaces.accounts = namespaces.accounts.map((account) => {\n                return this.replaceAptosGeneralIdWithNetName(account);\n            });\n            let extra = {};\n            Object.keys(namespaces.extra || {}).forEach((key, index) => {\n                let newKey = this.replaceAptosGeneralIdWithNetName(key);\n                extra[this.replaceAptosGeneralIdWithNetName(key)] = Object.values((session === null || session === void 0 ? void 0 : session.namespaces[\"aptos\"].extra) || {})[index];\n            });\n            namespaces.extra = extra;\n        }\n        (0, core_1.logDebug)(\"replaceSessionAptos\", session);\n    }\n    connected() {\n        (0, core_1.logDebug)('OKXUniversalProvider connected() called');\n        (0, core_1.reportLog)('provider connected called');\n        let disconnectInner = () => {\n            try {\n                this.cleanup();\n                this.client.engine.connectManagerDisconnect();\n            }\n            catch (e) {\n                (0, core_1.logDebug)(\"Error during disconnect:\", e);\n            }\n        };\n        try {\n            if (!this.session)\n                return false;\n            if (!this.client.engine.getCurrentConnectionReady(Object.keys(this.session.namespaces))) {\n                disconnectInner();\n                return false;\n            }\n            return true;\n        }\n        catch (e) {\n            disconnectInner();\n            return false;\n        }\n    }\n    connectAndSign(opts, signRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() called');\n            const updatedOpts = Object.assign(Object.assign({}, opts), { signRequest });\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() opts:', JSON.stringify(opts));\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() signRequest:', JSON.stringify(signRequest));\n            return yield this.connect(updatedOpts);\n        });\n    }\n    connect(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider connect() called');\n            (0, core_1.reportLog)('provider connect called');\n            if (!this.client) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (this.connected()) {\n                return this.session;\n            }\n            opts = this.replaceAptos(opts);\n            (0, core_1.logDebug)(`OKXUniversalProvider connect >>>>`, JSON.stringify(opts));\n            if (opts.sessionConfig === undefined) {\n                opts.sessionConfig = {};\n            }\n            if (opts.sessionConfig.openUniversalUrl === undefined) {\n                opts.sessionConfig.openUniversalUrl = (0, core_1.isMobileUserAgent)();\n            }\n            this.setNamespaces(opts);\n            try {\n                (0, core_1.logDebug)(`UniversalProvider connect opts.stringify ====> ${JSON.stringify(opts)}`);\n                let session = yield this.client.connect(opts);\n                this.replaceSessionAptos(session);\n                (0, core_1.logDebug)(`UniversalProvider connect success ====> ${JSON.stringify(session)}`);\n                if (session) {\n                    this.session = session;\n                    this.client.session = session;\n                    this.setConnectConnector();\n                    (0, core_1.logDebug)(`OKXUniversalProvider connect success opts>>>>`, JSON.stringify(opts));\n                    this.onConnect();\n                    if (opts.signRequest && opts.signRequest.length > 0) {\n                        let requestItem = opts.signRequest[0];\n                        let signResponseList = [];\n                        if (typeof window !== \"undefined\" && window && window.okxConnectUniversalUIinwindow) { //from UI\n                            (0, core_1.logDebug)(`OKXUniversalProvider connect success, us UI SDK>>>>`);\n                            if (this.session.signResponse && this.session.signResponse.length > 0) { // >=6.96\n                                signResponseList = this.session.signResponse;\n                            }\n                        }\n                        else {\n                            (0, core_1.logDebug)(`OKXUniversalProvider connect success, us Universal SDK>>>>`);\n                            if (this.session.signResponse && this.session.signResponse.length > 0) { // >=6.96\n                                signResponseList = this.session.signResponse;\n                            }\n                            else {\n                                signResponseList.push((0, packages_1.creatNotSupportMethodItemReplay)(requestItem));\n                            }\n                        }\n                        (0, core_1.logDebug)(`UniversalProvider connect success connectRequestReply ====> ${JSON.stringify(signResponseList)}`);\n                        setTimeout(() => {\n                            this.events.emit(\"connect_signResponse\", signResponseList);\n                        }, 100);\n                    }\n                    return session;\n                }\n                return undefined;\n            }\n            catch (error) {\n                (0, core_1.logDebug)(`UniversalProvider connect error ====> `, JSON.stringify(error));\n                throw error;\n            }\n        });\n    }\n    syncAllAddresses() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if ((0, provider_1.syncAddressAvailable)(this.session.wallet)) {\n                return this.client.syncAllAddress();\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n            }\n        });\n    }\n    setConnectConnector() {\n        var _a;\n        this.client.setConnectConnector((_a = this.session) === null || _a === void 0 ? void 0 : _a.wallet);\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    setDefaultChain(chain, rpcUrl) {\n        (0, core_1.logDebug)('OKXUniversalProvider setDefaultChain() called');\n        // chain = this.aptosChainNameToGeneralId(chain)\n        try {\n            // ignore without active session\n            if (!this.connected())\n                return;\n            const [namespace, chainId] = this.validateChain(chain);\n            const provider = this.getProvider(namespace);\n            provider.setDefaultChain(chainId, rpcUrl);\n        }\n        catch (error) {\n            // ignore the error if the fx is used prematurely before namespaces are set\n            if (!/Please call connect/.test(error.message))\n                throw error;\n        }\n    }\n    checkStorage() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let sessionInfoStr = yield this.getFromStore(\"connectSession\");\n            (0, core_1.logDebug)(sessionInfoStr);\n            if (sessionInfoStr) {\n                (0, core_1.logDebug)(`checkStorage error start`);\n                try {\n                    let sessionInfo = sessionInfoStr;\n                    this.session = sessionInfo;\n                    this.client.session = this.session;\n                    this.setConnectConnector();\n                    yield this.client.restoreconnect(sessionInfo);\n                    this.sessionConfig = sessionInfo.sessionConfig;\n                    this.client.sessionConfig = this.sessionConfig;\n                    (0, core_1.logDebug)('[evm u-provider] do reconnection', this.session);\n                    this.createProviders();\n                    this.registerEventListeners();\n                    setTimeout(() => {\n                        this.events.emit(\"reconnect\", { session: this.session });\n                    }, 100);\n                }\n                catch (e) {\n                    yield this.cleanup();\n                    (0, core_1.logDebug)(`checkStorage error ${JSON.stringify(e)}`);\n                }\n            }\n        });\n    }\n    initialize() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider initialize() called');\n            (0, core_1.reportLog)('provider initialize called');\n            const data = Object.assign({ url: window.location.hostname, origin: window.location.origin }, this.providerOpts.dappMetaData);\n            this.client = new client_1.SignClient(data, this.events);\n            this.registerConnector(this.providerOpts.connector);\n            yield this.checkStorage();\n        });\n    }\n    createProviders() {\n        if (!this.client) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n        }\n        if (!this.connected()) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Session not initialized. Please call connect() before enable()\");\n        }\n        const providersToCreate = [\n            ...new Set(Object.keys(this.session.namespaces)\n                .filter((namespace) => { var _a, _b; return ((_b = (_a = this.session.namespaces[namespace]) === null || _a === void 0 ? void 0 : _a.accounts) === null || _b === void 0 ? void 0 : _b.length) > 0; })\n                .map((namespace) => (0, namespaces_1.parseNamespaceKey)(namespace))),\n        ];\n        providersToCreate.forEach((namespace) => {\n            if (!this.session)\n                return;\n            const namespacesValue = this.session.namespaces;\n            const currentNameSpace = namespacesValue[namespace];\n            (0, core_1.logDebug)(\"init eip155 >> \", currentNameSpace);\n            switch (namespace) {\n                case \"eip155\":\n                    const opts = {\n                        namespace: currentNameSpace\n                    };\n                    this.rpcProviders[namespace] = new eip155_1.Eip155Provider(opts, this.client, this.events);\n                    break;\n                case \"solana\":\n                    const opts1 = {\n                        namespace: currentNameSpace\n                    };\n                    let solanaProvider = new solana_1.default(opts1, \"solana\", this.client, this.events);\n                    this.rpcProviders[namespace] = solanaProvider;\n                    let sonicProvider = new solana_1.default(opts1, \"sonic\", this.client, this.events);\n                    this.rpcProviders['sonic'] = sonicProvider;\n                    let svmProvider = new solana_1.default(opts1, \"svm\", this.client, this.events);\n                    this.rpcProviders['svm'] = svmProvider;\n                    // this.rpcProviders[namespace] = new SolanaProvider(opts1, () => { return this.session; });\n                    break;\n                case \"ton\":\n                    const optsTon = {\n                        namespace: currentNameSpace\n                    };\n                    let tonProvider = new ton_1.default(optsTon, this.client, this.events);\n                    this.rpcProviders[namespace] = tonProvider;\n                    break;\n                case \"sui\":\n                    const optsSui = {\n                        namespace: currentNameSpace\n                    };\n                    let suiProvider = new sui_1.SuiProvider(optsSui, this.client, this.events);\n                    suiProvider.name = \"sui\";\n                    this.rpcProviders[namespace] = suiProvider;\n                    break;\n                case \"btc\":\n                    const optsBtc = {\n                        namespace: currentNameSpace\n                    };\n                    let btcProvider = new btc_1.default(optsBtc, \"btc\", this.client, this.events);\n                    this.rpcProviders[\"btc\"] = btcProvider;\n                    let fbProvider = new btc_1.default(optsBtc, \"fractal\", this.client, this.events);\n                    this.rpcProviders[\"fractal\"] = fbProvider;\n                    break;\n                case \"aptos\":\n                    let aptosProvider = new aptos_1.default({\n                        namespace: currentNameSpace\n                    }, \"aptos\", this.client, this.events);\n                    this.rpcProviders[namespace] = aptosProvider;\n                    let moveProvider = new aptos_1.default({\n                        namespace: currentNameSpace\n                    }, \"movement\", this.client, this.events);\n                    this.rpcProviders[\"movement\"] = moveProvider;\n                    break;\n                case \"cosmos\":\n                    let cosmosProvider = new cosmos_1.default({\n                        namespace: currentNameSpace\n                    }, this.client, this.events);\n                    this.rpcProviders[namespace] = cosmosProvider;\n                    break;\n                case \"tron\":\n                    let tronProvider = new tron_1.default({\n                        namespace: currentNameSpace\n                    }, this.client, this.events);\n                    this.rpcProviders[namespace] = tronProvider;\n                    break;\n                case \"starknet\":\n                    let starknetProvider = new starknet_1.default({\n                        namespace: currentNameSpace\n                    }, \"starknet\", this.client, this.events);\n                    this.rpcProviders[namespace] = starknetProvider;\n                    break;\n            }\n        });\n    }\n    registerEventListeners() {\n        if (typeof this.client === \"undefined\") {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client is not initialized\");\n        }\n        this.client.engine.addDisconnectListener(() => {\n            this.disconnectAndEmit();\n            this.cleanup();\n        });\n        this.on(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, (caip2ChainId) => {\n            this.onChainChanged(caip2ChainId);\n        });\n        this.on(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, (nameSpaces) => {\n            if (nameSpaces) {\n                const nameSpacekey = Object.keys(nameSpaces)[0];\n                if (this.session) {\n                    this.session.namespaces[nameSpacekey] = nameSpaces[nameSpacekey];\n                    if (this.session) {\n                        this.persist(\"connectSession\", this.session);\n                        this.events.emit(\"session_update\", this.session);\n                    }\n                    (0, core_1.logDebug)(\"PROVIDER_EVENTS.UPDATE_NAMESPACES this.session... ->>>\", JSON.stringify(this.session));\n                }\n            }\n        });\n    }\n    getProvider(namespace) {\n        (0, core_1.logDebug)('current get providers', this.rpcProviders);\n        (0, core_1.logDebug)('query namespace: ', namespace);\n        return this.rpcProviders[namespace];\n    }\n    setNamespaces(params) {\n        this.connectOpts = params;\n        const { namespaces, sessionConfig } = params;\n        const data = {\n            origin: window.location.origin,\n            url: window.location.hostname,\n            name: this.providerOpts.dappMetaData.name,\n            icon: this.providerOpts.dappMetaData.icon,\n        };\n        this.sessionConfig = Object.assign({ dappInfo: data }, sessionConfig);\n        (0, core_1.logDebug)(\"setNamespaces sessionConfig>>>\", this.sessionConfig);\n        this.client.sessionConfig = this.sessionConfig;\n        this.persist(\"sessionConfig\", sessionConfig);\n    }\n    validateChain(chain) {\n        var _a;\n        let [namespace, chainId] = (chain === null || chain === void 0 ? void 0 : chain.split(\":\")) || [\"\", \"\"];\n        if (!this.session || !this.session.namespaces || !Object.keys(this.session.namespaces).length) {\n            (0, core_1.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        if (namespace) {\n            if (!this.isChainNamespaceInSession(namespace)) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace '${namespace}' is not configured. Please call connect() first with namespace config.`);\n            }\n            if (chainId && chain) {\n                (0, core_1.logDebug)('this.session.namespaces -->> ', namespace, JSON.stringify(this.session.namespaces));\n                const chainsArr = (_a = this.session.namespaces[namespace]) === null || _a === void 0 ? void 0 : _a.chains;\n                (0, core_1.logDebug)('get chainsArr & chain', JSON.stringify(chainsArr), chain);\n                if (chainsArr && !chainsArr.includes(chain)) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace not include the chain '${chain}'`);\n                }\n            }\n        }\n        if (namespace && chainId) {\n            (0, core_1.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        let defaultNamespace = (0, namespaces_1.parseNamespaceKey)(Object.keys(this.session.namespaces)[0]);\n        const defaultChain = this.rpcProviders[defaultNamespace].getDefaultChain();\n        (0, core_1.logDebug)('get default chain:', defaultChain);\n        return [defaultNamespace, defaultChain];\n    }\n    isChainNamespaceInSession(namespaceStr) {\n        var _a, _b;\n        if (Object.keys(((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces) || {})\n            .map((key) => (0, namespaces_1.parseNamespaceKey)(key))\n            .includes(namespaceStr)) {\n            return true;\n        }\n        let isChainNamespaceInSession = false;\n        Object.values(((_b = this.session) === null || _b === void 0 ? void 0 : _b.namespaces) || {})\n            .forEach(namespace => {\n            namespace.chains.forEach(chain => {\n                if (chain.split(\":\")[0] == namespaceStr) {\n                    isChainNamespaceInSession = true;\n                }\n            });\n        });\n        return isChainNamespaceInSession;\n    }\n    requestAccountsWithNamespace(namespace) {\n        return this.getProvider(namespace).requestAccounts();\n    }\n    requestDefaultChainWithNamespace(namespace) {\n        return this.getProvider(namespace).getDefaultChain();\n    }\n    requestAccounts() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const [namespace] = this.validateChain();\n            return yield this.getProvider(namespace).requestAccounts();\n        });\n    }\n    onChainChanged(caip2Chain) {\n        var _a;\n        if (!((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces))\n            return;\n        const [namespace, chainId] = this.validateChain(caip2Chain);\n        if (!chainId)\n            return;\n        if (this.session.namespaces[namespace]) {\n            this.session.namespaces[namespace].defaultChain = chainId;\n            this.persist(\"connectSession\", this.session);\n        }\n        this.events.emit(\"chainChanged\", chainId);\n    }\n    onConnect() {\n        this.createProviders();\n        if (this.session) {\n            this.persist(\"connectSession\", this.session);\n        }\n        this.events.emit(\"connect\", { session: this.session });\n        this.registerEventListeners();\n    }\n    cleanup() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.session = undefined;\n            this.client.session = undefined;\n            this.setConnectConnector();\n            this.sessionProperties = undefined;\n            this.persist(\"optionalNamespaces\", undefined);\n            this.persist(\"sessionProperties\", undefined);\n            this.persist(\"connectSession\", undefined);\n        });\n    }\n    persist(key, data) {\n        (0, core_1.logDebug)('[evm u-provider] persisit data', key, data);\n        return this.client.engine.saveSessionContent(key, data);\n    }\n    getFromStore(key) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.client.engine.getSessionContent(key);\n        });\n    }\n    showRequestModal(args, chain) {\n        try {\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return this.getProvider(namespace).showRequestModal(requestParam);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    openWallet(engineConnectInfo, connector) {\n        this.client.openWallet(engineConnectInfo, connector);\n    }\n    registerConnector(connectors) {\n        this.client.registerConnector(connectors);\n    }\n}\nexports.OKXUniversalProvider = OKXUniversalProvider;\nexports.default = OKXUniversalProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXStarknetProvider = exports.OKXTronProvider = exports.OKXTonProvider = exports.OKXCosmosProvider = exports.OKXBtcProvider = exports.OKXUniversalProvider = void 0;\n__exportStar(require(\"./provider/types\"), exports);\n__exportStar(require(\"./packages\"), exports);\nvar OKXUniversalProvider_1 = require(\"./OKXUniversalProvider\");\nObject.defineProperty(exports, \"OKXUniversalProvider\", { enumerable: true, get: function () { return OKXUniversalProvider_1.OKXUniversalProvider; } });\nvar OKXBtcProvider_1 = require(\"./OKXBtcProvider\");\nObject.defineProperty(exports, \"OKXBtcProvider\", { enumerable: true, get: function () { return OKXBtcProvider_1.OKXBtcProvider; } });\nvar OKXCosmosProvider_1 = require(\"./OKXCosmosProvider\");\nObject.defineProperty(exports, \"OKXCosmosProvider\", { enumerable: true, get: function () { return OKXCosmosProvider_1.OKXCosmosProvider; } });\nvar OKXTonProvider_1 = require(\"./OKXTonProvider\");\nObject.defineProperty(exports, \"OKXTonProvider\", { enumerable: true, get: function () { return OKXTonProvider_1.OKXTonProvider; } });\nvar OKXTronProvider_1 = require(\"./OKXTronProvider\");\nObject.defineProperty(exports, \"OKXTronProvider\", { enumerable: true, get: function () { return OKXTronProvider_1.OKXTronProvider; } });\nvar OKXStarknetProvider_1 = require(\"./OKXStarknetProvider\");\nObject.defineProperty(exports, \"OKXStarknetProvider\", { enumerable: true, get: function () { return OKXStarknetProvider_1.OKXStarknetProvider; } });\n__exportStar(require(\"@okxconnect/core\"), exports);\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./utils\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SignClient = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"../utils/namespaces\");\nconst ConnectMethodUtils_1 = require(\"../utils/ConnectMethodUtils\");\nconst constants_1 = require(\"../../provider/constants\");\nclass SignClient extends core_1.ISignClient {\n    constructor(metaData, events) {\n        super(metaData);\n        // ---------- Engine ----------------------------------------------- //\n        this.connect = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    var connectRequest = [];\n                    (0, core_1.logDebug)(`client connect params >>>`, JSON.stringify(params));\n                    var requestAccountItem = {\n                        name: \"requestAccounts\",\n                        requiredNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.namespaces),\n                        optionalNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.optionalNamespaces),\n                    };\n                    this.engine.setSessionConnectingListener(() => {\n                        (0, core_1.logDebug)(`sessionConnectingListener >>>`);\n                        this.events.emit(constants_1.PROVIDER_EVENTS.SESSION_CONNECTING);\n                    });\n                    if (params.signRequest) {\n                        requestAccountItem.connectRequestMethods = yield (0, ConnectMethodUtils_1.connectMethodsToConnectWalletMethods)(params.signRequest, requestAccountItem.requiredNamespaces);\n                    }\n                    connectRequest.push(requestAccountItem);\n                    (0, core_1.logDebug)(`client connect connectRequest >>>`, JSON.stringify(connectRequest));\n                    this.engine.universalConnect(connectRequest, Object.assign({ dappInfo: this.metadata }, params.sessionConfig), (info) => {\n                        if (info && info.connectRequest) {\n                            (0, core_1.logDebug)(`universalConect info.connectRequest :`, info.connectRequest);\n                            (0, core_1.logDebug)(`universalConect url:`, (0, core_1.getOKXLink)(info.connectRequest, this.sessionConfig.useMini));\n                            this.events.emit(\"display_uri\", (0, core_1.getOKXLink)(info.connectRequest, this.sessionConfig.useMini));\n                            this.events.emit(\"short_display_uri\", (0, core_1.getAppWalletShortDeepLink)(info.connectRequest.topic, info.connectRequest.clientId));\n                            (0, core_1.logDebug)(`universalConect EngineConnectInfo  ${JSON.stringify(info)}`);\n                            this.events.emit(\"okx_engine_connect_params\", info);\n                        }\n                    }).then((session) => __awaiter(this, void 0, void 0, function* () {\n                        (0, namespaces_1.fillParamsToSession)(session, params.namespaces, params.optionalNamespaces, this.sessionConfig);\n                        (0, core_1.logDebug)(`signClient: connect: session ${JSON.stringify(session)}`);\n                        if (params.signRequest) {\n                            yield (0, ConnectMethodUtils_1.connectMethodsResponseUpdate)(session, params.signRequest);\n                        }\n                        resolve(session);\n                    })).catch((e) => {\n                        (0, core_1.logDebug)(`signClient: connect: catch ${JSON.stringify(e)}`);\n                        this.events.emit(\"connect_error\", e);\n                        reject(e);\n                    });\n                }\n                catch (error) {\n                    (0, core_1.logDebug)(`signClient: connect:  ${JSON.stringify(error)}`);\n                    reject(error);\n                }\n            }));\n        });\n        this.restoreconnect = (sessionConfig) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.restoreconnect(sessionConfig, (session) => {\n                    if (session) {\n                        resolve(session);\n                    }\n                    else {\n                        reject();\n                    }\n                });\n            });\n        });\n        this.reject = (params) => __awaiter(this, void 0, void 0, function* () {\n        });\n        this.request = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                (0, core_1.logDebug)(\"clint request --params>>>> >\", (_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl, (0, core_1.safeJsonStringify)(params));\n                try {\n                    // this.sessionConfig\n                    if (((_b = this.sessionConfig) === null || _b === void 0 ? void 0 : _b.openUniversalUrl) && (0, core_1.isIos)()) {\n                        this.openOKXWallet();\n                    }\n                    yield this.engine.send(params, {\n                        resolve: (response) => {\n                            delete response.requestId;\n                            (0, core_1.logDebug)(\"clint request --response >\", (0, core_1.safeJsonStringify)(response));\n                            if (('error' in response) && response.error) {\n                                let error = response.error;\n                                reject(new core_1.OKXConnectError(response.error.code, response.method + \":\" + error.message));\n                            }\n                            else {\n                                resolve(response);\n                            }\n                        },\n                        onAck: () => {\n                            var _a;\n                            if (!(0, core_1.isIos)() && ((_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl)) {\n                                this.openOKXWallet();\n                            }\n                        }\n                    });\n                }\n                catch (e) {\n                    (0, core_1.logDebug)(\"clint request --error:\", e);\n                    reject(e);\n                }\n            }));\n        });\n        this.disconnect = () => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.send({\n                    method: \"disconnect\"\n                }, {\n                    onAck: () => {\n                        resolve();\n                    }\n                }, 86400000).catch((error) => {\n                    console.log(`disconnect : ${JSON.stringify(error)}`);\n                    reject(error);\n                });\n            });\n        });\n        this.engine = new core_1.Engine(metaData.name);\n        this.events = events;\n        this.metadata = metaData;\n    }\n    openOKXWallet() {\n        // if (this.openUniversalUrl){\n        (0, core_1.logDebug)('bridge-provider ==>> connect_5');\n        this.engine.openWallet({ tmaReturnUrl: this.sessionConfig.tmaReturnUrl });\n        // if (this.sessionConfig?.useMini){\n        //     let url = getTelegramWalletTWAUrl(undefined,this.sessionConfig.tmaReturnUrl)\n        //     openOKXTMAWalletlinkWithFallback(url)\n        // }else{\n        //     openOKXDeeplink(standardDeeplink);\n        // }\n        // }\n    }\n    syncAllAddress() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.send({\n                    method: \"sync_all_addresses\"\n                }, {\n                    resolve: (response) => {\n                        delete response.requestId;\n                        (0, core_1.logDebug)(\"clint syncAllAddress --response >\", JSON.stringify(response));\n                        if (('error' in response) && response.error) {\n                            let error = response.error;\n                            reject(new core_1.OKXConnectError(response.error.code, response.method + \":\" + error.message));\n                        }\n                        else {\n                            let allAddressStr = response.result;\n                            resolve((0, ConnectMethodUtils_1.syncResoonseToRequire)(allAddressStr));\n                        }\n                    }\n                }).catch((error) => {\n                    console.log(`disconnect : ${JSON.stringify(error)}`);\n                    reject(error);\n                });\n            });\n        });\n    }\n    registerConnector(connectors) {\n        this.engine.registerConnector(connectors);\n    }\n    openWallet(engineConnectInfo, connector) {\n        this.engine.openWallet(engineConnectInfo, connector);\n    }\n    setConnectConnector(wallet) {\n        this.engine.setConnectConnector(wallet);\n    }\n}\nexports.SignClient = SignClient;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.connectSupportMethods = void 0;\nexports.creatNotSupportMethodItemReplay = creatNotSupportMethodItemReplay;\nexports.connectMethodsAdaptOldVersion = connectMethodsAdaptOldVersion;\nexports.connectMethodsResponseUpdate = connectMethodsResponseUpdate;\nexports.connectMethodsToConnectWalletMethods = connectMethodsToConnectWalletMethods;\nexports.syncResoonseToRequire = syncResoonseToRequire;\nconst core_1 = require(\"@okxconnect/core\");\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst uint8array_extras_1 = require(\"uint8array-extras\");\nconst provider_1 = require(\"../../provider\");\nfunction isArray(value) {\n    return typeof value === \"object\" && value !== null && Array.isArray(value);\n}\nfunction isRecord(value) {\n    return typeof value === \"object\" && value !== null && !Array.isArray(value);\n}\n// \"wallet_addEthereumChain\",\n// \"solana_signMessage\",  There are risks\nexports.connectSupportMethods = Object.freeze([\n    \"personal_sign\",\n    \"sui_signMessage\",\n    \"sui_signPersonalMessage\",\n    \"btc_signMessage\",\n    \"aptos_signMessage\",\n    \"cosmos_signArbitrary\",\n    \"tron_signMessage\",\n    \"tron_signMessageV2\",\n    \"starknet_signMessage\",\n    \"sync_all_addresses\"\n]);\nfunction creatNotSupportMethodItemReplay(requestParams) {\n    let notSupportError = new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n    var errorItem = {\n        method: requestParams.method,\n        chainId: requestParams.chainId,\n        error: {\n            code: notSupportError.code,\n            message: notSupportError.message\n        },\n    };\n    return errorItem;\n}\nfunction connectMethodsAdaptOldVersion(requestParams, session) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b, _c, _d, _e;\n        try {\n            (0, core_1.logDebug)(\"connectMethodsAdaptOldVersion start params :\", JSON.stringify(requestParams));\n            let callBackParams = {};\n            if (requestParams.method === \"solana_signMessage\") {\n                let solAccount = (_a = session.namespaces[core_1.NameSpaceKeySOL]) === null || _a === void 0 ? void 0 : _a.accounts.filter(function (account1) {\n                    return account1.startsWith(requestParams.chainId);\n                })[0];\n                const solAddress = (0, provider_1.fromAccountToAddress)(solAccount);\n                if (requestParams.params && solAddress && \"message\" in requestParams.params) {\n                    let realMessage = requestParams.params.message;\n                    if (((_b = session.wallet) === null || _b === void 0 ? void 0 : _b.appName) == \"OKX Wallet\") {\n                        realMessage = bs58_1.default.encode((0, uint8array_extras_1.stringToUint8Array)(realMessage));\n                    }\n                    requestParams.params = {\n                        message: realMessage,\n                        \"pubkey\": solAddress\n                    };\n                    callBackParams = {\n                        publicKey: solAddress\n                    };\n                    (0, core_1.logDebug)(\"solana_signMessage account and address:\", JSON.stringify(solAccount), solAddress);\n                    (0, core_1.logDebug)(\"solana_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"sui_signMessage\" || requestParams.method === \"sui_signPersonalMessage\") {\n                if (\"message\" in requestParams.params && requestParams.params.message) {\n                    let suiMessage = JSON.parse(JSON.stringify(requestParams.params.message));\n                    let convertedArray = Object.values(suiMessage);\n                    let uint8Array = new Uint8Array(convertedArray);\n                    let decoder = new TextDecoder(\"utf8\");\n                    let b64encoded = btoa(decoder.decode(uint8Array));\n                    requestParams.params = {\n                        message: atob(b64encoded),\n                    };\n                    console.log(\"sui_signMessag suiMessagee suiMessageb64:>>>>\", JSON.stringify(requestParams.params), b64encoded);\n                    if (requestParams.method === \"sui_signMessage\") {\n                        callBackParams = {\n                            \"messageBytes\": b64encoded,\n                            \"signature\": \"\"\n                        };\n                    }\n                    else if (requestParams.method === \"sui_signPersonalMessage\") {\n                        callBackParams = {\n                            \"bytes\": b64encoded,\n                            \"signature\": \"\"\n                        };\n                    }\n                    (0, core_1.logDebug)(\"sui_signMessage/sui_signPersonalMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"btc_signMessage\") {\n                let btcAccounts = (_c = session.namespaces[core_1.NameSpaceKeyBtc]) === null || _c === void 0 ? void 0 : _c.accounts.filter(function (account2) {\n                    return account2.startsWith(requestParams.chainId);\n                });\n                let btcAccount = btcAccounts[0];\n                const btcAddress = (0, provider_1.fromAccountToAddress)(btcAccount);\n                (0, core_1.logDebug)(\"btc_signMessage account and address:\", JSON.stringify(btcAccount), btcAddress);\n                if (btcAddress) {\n                    if (\"message\" in requestParams.params && requestParams.params.message && typeof requestParams.params.message === 'string') {\n                        requestParams.params = {\n                            from: btcAddress,\n                            signStr: requestParams.params.message\n                        };\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                    }\n                    requestParams.params[\"from\"] = btcAddress;\n                    (0, core_1.logDebug)(\"btc_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"aptos_signMessage\") {\n                let paramData = requestParams.params;\n                let aptosAccount = (_d = session.namespaces[core_1.NameSpaceKeyAptos]) === null || _d === void 0 ? void 0 : _d.accounts.filter(function (account3) {\n                    return account3.startsWith(requestParams.chainId);\n                })[0];\n                let aptosAddress = (0, provider_1.fromAccountToAddress)(aptosAccount);\n                if (paramData && aptosAddress) {\n                    let prefix = \"APTOS\";\n                    let message = \"\", nonce = \"\";\n                    var fullMessage = prefix;\n                    let application = window.location.protocol + \"//\" + window.location.hostname;\n                    if (\"address\" in paramData && paramData.address) {\n                        fullMessage += \"\\naddress: \" + aptosAddress;\n                    }\n                    if (\"application\" in paramData && paramData.application) {\n                        fullMessage += \"\\napplication: \" + application;\n                    }\n                    let aptosChainId = 1;\n                    if (\"chainId\" in paramData && paramData.chainId) {\n                        if (paramData.chainId == \"aptos:mainnet\") {\n                            aptosChainId = 1;\n                        }\n                        else if (paramData.chainId == \"movement:testnet\") {\n                            aptosChainId = 2;\n                        }\n                        fullMessage += \"\\nchainId: \" + aptosChainId;\n                    }\n                    if (\"message\" in paramData) {\n                        fullMessage += \"\\nmessage: \" + paramData.message;\n                        message = paramData.message;\n                    }\n                    if (\"nonce\" in paramData) {\n                        fullMessage += \"\\nnonce: \" + paramData.nonce;\n                        nonce = paramData.nonce;\n                    }\n                    const utf8Array = new TextEncoder().encode(fullMessage);\n                    const hex = Array.from(utf8Array)\n                        .map(byte => byte.toString(16).padStart(2, \"0\"))\n                        .join(\"\");\n                    requestParams.params = {\n                        \"message\": hex,\n                    };\n                    (0, core_1.logDebug)(\"aptos_signMessage requestParams:\", JSON.stringify(requestParams));\n                    callBackParams = {\n                        address: aptosAddress,\n                        application: application,\n                        chainId: aptosChainId,\n                        fullMessage: fullMessage,\n                        message: message,\n                        nonce: nonce,\n                        prefix: prefix,\n                        signature: \"\",\n                    };\n                    (0, core_1.logDebug)(\"aptos_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"cosmos_signArbitrary\") {\n                let cosmosAccount = (_e = session === null || session === void 0 ? void 0 : session.namespaces[core_1.NameSpaceKeyCosmos]) === null || _e === void 0 ? void 0 : _e.accounts.filter(function (account_cosmos) {\n                    return account_cosmos.startsWith(requestParams.chainId);\n                })[0];\n                const cosmosAddress = (0, provider_1.fromAccountToAddress)(cosmosAccount);\n                let cosmosData = requestParams.params[\"message\"];\n                const cosmosBase64Encoded = (0, uint8array_extras_1.stringToBase64)(cosmosData);\n                (0, core_1.logDebug)(\"cosmos_signArbitrary account and address:\", JSON.stringify(cosmosAccount), cosmosAddress);\n                (0, core_1.logDebug)(\"cosmos_signArbitrary cosmosBase64Encoded:\", cosmosBase64Encoded);\n                if (cosmosData && cosmosAddress) {\n                    const signDoc = {\n                        chain_id: \"\",\n                        account_number: \"0\",\n                        sequence: \"0\",\n                        fee: {\n                            gas: \"0\",\n                            amount: []\n                        },\n                        msgs: [{\n                                \"type\": \"sign/MsgSignData\",\n                                \"value\": {\n                                    \"signer\": cosmosAddress,\n                                    \"data\": cosmosBase64Encoded\n                                }\n                            }],\n                        memo: \"\"\n                    };\n                    requestParams.params = {\n                        \"signer\": cosmosAddress,\n                        \"chain_id\": requestParams.chainId.split(\":\")[1],\n                        \"data\": signDoc\n                    };\n                    (0, core_1.logDebug)(\"cosmos_signArbitrary callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            (0, core_1.logDebug)(\"sol_handleSignatureData end params:\", JSON.stringify(requestParams));\n        }\n        catch (error) {\n            throw error;\n        }\n    });\n}\nfunction connectMethodsResponseUpdate(session, requestParams) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a;\n        try {\n            if (session.signResponse) {\n                (0, core_1.logDebug)(\"connectMethodsResponseUpdate signResponse:\", JSON.stringify(session.signResponse));\n                (0, core_1.logDebug)(\"connectMethodsResponseUpdate session.namespaces:\", JSON.stringify(session.namespaces));\n                for (const methodItem of session.signResponse) {\n                    (0, core_1.logDebug)(\"connectMethodsResponseUpdate methodItem:\", JSON.stringify(methodItem));\n                    if (\"result\" in methodItem) {\n                        if (methodItem.method === \"solana_signMessage\") {\n                            let solanaSuccessData = methodItem.result;\n                            (0, core_1.logDebug)(\"solana_signMessage methodItem.chainId:\", methodItem.chainId);\n                            let account = (_a = session.namespaces[core_1.NameSpaceKeySOL]) === null || _a === void 0 ? void 0 : _a.accounts.filter(function (account) {\n                                (0, core_1.logDebug)(\"solana_signMessage account:\", account);\n                                return account.startsWith(methodItem.chainId);\n                            })[0];\n                            (0, core_1.logDebug)(\"solana_signMessage result account:\", solanaSuccessData, account);\n                            if (solanaSuccessData && account) {\n                                methodItem.result = {\n                                    \"signature\": bs58_1.default.decode(solanaSuccessData),\n                                    \"publicKey\": (0, provider_1.fromAccountToAddress)(account)\n                                };\n                            }\n                        }\n                        else if (methodItem.method === \"sui_signMessage\" || methodItem.method === \"sui_signPersonalMessage\") {\n                            let suiMethod = requestParams.filter(function (requestMethod) {\n                                return requestMethod.method === methodItem.method;\n                            })[0];\n                            if (suiMethod && suiMethod.params && \"message\" in suiMethod.params) {\n                                let suiMessage = suiMethod.params.message;\n                                let suiMessageb64 = btoa(suiMessage);\n                                console.log(\"sui_signMessag suiMessagee suiMessageb64:>>>>\", suiMessage, suiMessageb64);\n                                if (methodItem.method === \"sui_signMessage\") {\n                                    methodItem.result = {\n                                        \"messageBytes\": suiMessageb64,\n                                        \"signature\": methodItem.result\n                                    };\n                                }\n                                else if (methodItem.method === \"sui_signPersonalMessage\") {\n                                    methodItem.result = {\n                                        \"bytes\": suiMessageb64,\n                                        \"signature\": methodItem.result\n                                    };\n                                }\n                            }\n                        }\n                        else if (methodItem.method === \"aptos_signMessage\") {\n                            if (methodItem.chainId === \"aptos:637\") {\n                                methodItem.chainId = \"aptos:mainnet\";\n                            }\n                            else if (methodItem.chainId === \"aptos:70000060\") {\n                                methodItem.chainId = \"movement:testnet\";\n                            }\n                            methodItem.result = JSON.parse(methodItem.result);\n                            console.log(\"aptos_signMessage result methodItem.result before:>>>>\", JSON.stringify(methodItem.result));\n                            if (methodItem.result && \"signature\" in methodItem.result) {\n                                let aptosSignature = methodItem.result.signature;\n                                if (aptosSignature && aptosSignature.startsWith(\"0x\")) {\n                                    aptosSignature = aptosSignature.slice(2, aptosSignature.length);\n                                    methodItem.result.signature = aptosSignature;\n                                }\n                            }\n                            console.log(\"aptos_signMessage result methodItem.result after:>>>>\", JSON.stringify(methodItem.result));\n                        }\n                        else if (methodItem.method === \"cosmos_signArbitrary\") {\n                            methodItem.result = JSON.parse(methodItem.result);\n                        }\n                        else if (methodItem.method == 'starknet_signMessage') {\n                            let results = methodItem.result;\n                            if (typeof results == 'string') {\n                                results = JSON.parse(results);\n                            }\n                            methodItem.result = [results[\"signedDataR\"], results[\"signedDataS\"]];\n                        }\n                        else if (methodItem.method == 'sync_all_addresses') {\n                            methodItem.result = syncResoonseToRequire(methodItem.result);\n                        }\n                    }\n                }\n            }\n        }\n        catch (error) {\n            (0, core_1.logDebug)(\"connectMethodsResponseUpdate signResponse Error:\", JSON.stringify(error));\n            throw error;\n        }\n    });\n}\nfunction connectMethodsToConnectWalletMethods(params, requireNameSpace) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            (0, core_1.logDebug)(\"connectMethodsToConnectWalletMethods requestMethods:\", JSON.stringify(params));\n            const result = [];\n            //TODO  后面需要打开限制\n            if (params && params.length > 1) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connectAndSign/openModalAndSign signRequest only support one data`);\n            }\n            if (!requireNameSpace && params && params.length > 0) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error , RequestMethods cannot be added when the NameSpace is empty`);\n            }\n            // check chianId\n            for (const methodItem of params) {\n                if (methodItem.method === \"aptos_signMessage\") { //update chainId\n                    if (methodItem.chainId === \"aptos:mainnet\") {\n                        methodItem.chainId = \"aptos:637\";\n                    }\n                    else if (methodItem.chainId === \"movement:testnet\") {\n                        methodItem.chainId = \"aptos:70000060\";\n                    }\n                }\n                // check chianId\n                if (methodItem.method === \"wallet_addEthereumChain\") {\n                    var includeEip155 = requireNameSpace === null || requireNameSpace === void 0 ? void 0 : requireNameSpace.some(space => space.namespace.includes(\"eip155\"));\n                    if (!includeEip155) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error, When using '${methodItem.method}', the EVM chain needs to be included in the NameSpace`);\n                    }\n                }\n                else if (methodItem.method === \"sync_all_addresses\") {\n                    if ((0, provider_1.syncAddressHostAvailable)()) {\n                        methodItem.chainId = \"\";\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                    }\n                }\n                else {\n                    const includeChain = !!(requireNameSpace === null || requireNameSpace === void 0 ? void 0 : requireNameSpace.some(space => space.chains.some(chain => chain.includes(`${methodItem.chainId}`))));\n                    if (!includeChain) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error, When using '${methodItem.method}', NameSpace must contain '${methodItem.chainId}'`);\n                    }\n                }\n            }\n            for (const item of params) {\n                if (!exports.connectSupportMethods.includes(item.method)) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect requestMethods not support method, method: '${item.method}'`);\n                }\n                if (item.method === \"wallet_addEthereumChain\") {\n                    if (Array.isArray(item.params)) {\n                        const paramsArr = item.params;\n                        if (paramsArr && paramsArr.length === 1) {\n                            const firstParam = paramsArr[0];\n                            if (isRecord(firstParam)) {\n                                item.params = firstParam;\n                            }\n                        }\n                        else if (paramsArr && paramsArr.length > 1) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params only support one data, method: '${item.method}'`);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is nil, method: '${item.method}'`);\n                        }\n                    }\n                }\n                else if (item.method === \"personal_sign\") {\n                    if (isArray(item.params)) {\n                        if (item.params && item.params.length !== 1) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params error,  method: '${item.method}' `);\n                        }\n                        let firstObj = item.params[0];\n                        if (firstObj && typeof firstObj === 'string') {\n                            item.params = {\n                                message: firstObj\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                }\n                else if (item.method === \"sui_signMessage\" || item.method === \"sui_signPersonalMessage\") {\n                    if (isRecord(item.params) && 'message' in item.params) {\n                        if (item.params.message) {\n                            (0, core_1.logDebug)(\"sui_signMessage item.params.message :\", item.params.message);\n                            let message = JSON.parse(JSON.stringify(item.params.message));\n                            let convertedArray = Object.values(message);\n                            let uint8Array = new Uint8Array(convertedArray);\n                            let decoder = new TextDecoder(\"utf8\");\n                            let b64encoded = btoa(decoder.decode(uint8Array));\n                            item.params.message = atob(b64encoded);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"solana_signMessage\") {\n                    if (isRecord(item.params) && 'message' in item.params) {\n                        if (item.params.message && typeof item.params.message === 'string') {\n                            item.params[\"bs58Message\"] = bs58_1.default.encode((0, uint8array_extras_1.stringToUint8Array)(item.params.message));\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"aptos_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (item.chainId && (item.chainId === \"aptos:637\" || item.chainId === \"aptos:70000060\")) {\n                            var aptosParams = item.params;\n                            var currentURL = window.location.protocol + \"//\" + window.location.hostname;\n                            let signChainId = 1;\n                            if (item.chainId === \"aptos:637\") {\n                            }\n                            else if (item.chainId === \"aptos:70000060\") {\n                                signChainId = 2;\n                            }\n                            item.params = {\n                                data: aptosParams,\n                                applicationUrl: currentURL,\n                                prefix: \"APTOS\",\n                                aptosChainId: signChainId\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params chainId is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"cosmos_signArbitrary\") {\n                    if (isRecord(item.params)) {\n                        if (item.params.message && typeof item.params.message === 'string') {\n                            const base64Encoded = (0, uint8array_extras_1.stringToBase64)(item.params.message);\n                            let cosmosChain = item.chainId.split(\":\")[1];\n                            if (cosmosChain) {\n                                item.params = {\n                                    chain_id: cosmosChain,\n                                    data: {\n                                        chain_id: \"\",\n                                        account_number: \"0\",\n                                        sequence: \"0\",\n                                        fee: {\n                                            gas: \"0\",\n                                            amount: []\n                                        },\n                                        msgs: [{\n                                                \"type\": \"sign/MsgSignData\",\n                                                \"value\": {\n                                                    \"signer\": \"\", //address\n                                                    \"data\": base64Encoded\n                                                }\n                                            }],\n                                        memo: \"\"\n                                    }\n                                };\n                            }\n                            else {\n                                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params chainId is error,  method: '${item.method}' `);\n                            }\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params message is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method == \"tron_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (\"message\" in item.params && item.params.message && typeof item.params.message === 'string') {\n                            item.params.message = stringToHex(item.params.message);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method == \"btc_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (\"message\" in item.params && item.params.message && typeof item.params.message === 'string') {\n                            item.params = {\n                                signStr: item.params.message\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                (0, core_1.logDebug)(\"connectMethodsToConnectWalletMethods item:\", JSON.stringify(item));\n                result.push(item);\n            }\n            return result;\n        }\n        catch (error) {\n            throw error;\n        }\n    });\n}\nfunction stringToHex(str) {\n    let hex = '';\n    for (let i = 0; i < str.length; i++) {\n        hex += str.charCodeAt(i).toString(16).padStart(2, '0');\n    }\n    return hex;\n}\nfunction syncResoonseToRequire(responseAddressStr) {\n    const allAddress = JSON.parse(responseAddressStr);\n    const result = {\n        type: allAddress.type,\n        isEvm: allAddress.isEvm,\n        walletName: allAddress.walletName,\n        deriveName: allAddress.deriveName,\n        addresses: allAddress.addresses.map((addr) => ({\n            coinId: addr.ci,\n            address: addr.a && addr.a !== 'null' ? addr.a : allAddress.evmAddress,\n        })),\n    };\n    return result;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.creatNotSupportMethodItemReplay = exports.connectMethodsAdaptOldVersion = void 0;\nvar ConnectMethodUtils_1 = require(\"./ConnectMethodUtils\");\nObject.defineProperty(exports, \"connectMethodsAdaptOldVersion\", { enumerable: true, get: function () { return ConnectMethodUtils_1.connectMethodsAdaptOldVersion; } });\nObject.defineProperty(exports, \"creatNotSupportMethodItemReplay\", { enumerable: true, get: function () { return ConnectMethodUtils_1.creatNotSupportMethodItemReplay; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAccountsChains = getAccountsChains;\nexports.nameSpaceToConnectWalletNameSpace = nameSpaceToConnectWalletNameSpace;\nexports.fillParamsToSession = fillParamsToSession;\nexports.isCaipNamespace = isCaipNamespace;\nexports.parseNamespaceKey = parseNamespaceKey;\nconst core_1 = require(\"@okxconnect/core\");\nfunction getAccountsChains(accounts) {\n    const chains = [];\n    accounts.forEach((account) => {\n        const [chain, chainId] = account.split(\":\");\n        chains.push(`${chain}:${chainId}`);\n    });\n    return chains;\n}\nfunction nameSpaceToConnectWalletNameSpace(namespaces) {\n    var result = [];\n    if (!namespaces) {\n        return result;\n    }\n    Object.keys(namespaces).forEach((key) => {\n        if (key === core_1.NameSpaceKeyEip155 || key === core_1.NameSpaceKeySOL || key === core_1.NameSpaceKeySui || key === core_1.NameSpaceKeyAptos\n            || key == core_1.NameSpaceKeyBtc || key === core_1.NameSpaceKeyTON || key === core_1.NameSpaceKeyCosmos || key === core_1.NameSpaceKeyTron || key === core_1.NameSpaceKeyStarknet) {\n            if (namespaces[key].chains) {\n                result.push({\n                    namespace: key,\n                    chains: namespaces[key].chains,\n                    params: namespaces[key].params\n                });\n            }\n        }\n    });\n    return result;\n}\nfunction fillParamsToSession(session, namespaces, optionalNamespaces, sessionConfig) {\n    // Helper function to merge rpcMaps\n    const mergeRpcMap = (targetRpcMap, sourceRpcMap) => {\n        Object.assign(targetRpcMap, sourceRpcMap);\n    };\n    // Merge function for namespaces\n    const mergeNamespaces = (target, source) => {\n        for (const key in source) {\n            if (source.hasOwnProperty(key) && source[key].rpcMap) {\n                if (source[key].rpcMap) {\n                    if (!target[key].rpcMap) {\n                        target[key].rpcMap = {};\n                    }\n                    // 合并 rpcMap\n                    mergeRpcMap(target[key].rpcMap, source[key].rpcMap);\n                }\n                if (source[key].defaultChain && target[key].defaultChain === undefined) {\n                    //defaultChain need in session nameSpace\n                    if (target[key].chains.some(chain => chain.split(\":\")[1] === source[key].defaultChain)) {\n                        target[key].defaultChain = source[key].defaultChain;\n                    }\n                }\n            }\n        }\n    };\n    // 合并 namespaces\n    if (namespaces) {\n        mergeNamespaces(session.namespaces, namespaces);\n    }\n    // 合并 optionalNamespaces\n    if (optionalNamespaces) {\n        mergeNamespaces(session.namespaces, optionalNamespaces);\n    }\n    for (const key in session.namespaces) {\n        const namespace = session.namespaces[key];\n        if (!(namespace === null || namespace === void 0 ? void 0 : namespace.accounts) || namespace.accounts.length === 0) {\n            delete session.namespaces[key];\n        }\n    }\n    if (session.namespaces[core_1.NameSpaceKeyBtc] && session.wallet.appName === core_1.OKXWalletName) {\n        fixMobileBtcSession(session.namespaces[core_1.NameSpaceKeyBtc]);\n    }\n    session.sessionConfig = sessionConfig;\n}\nfunction fixMobileBtcSession(btcNameSpace) {\n    try {\n        if (btcNameSpace && btcNameSpace.extra) {\n            var data = btcNameSpace.extra;\n            Object.keys(data).forEach(key => {\n                const item = data[key];\n                if (Number(item.addressType) === 6) {\n                    item.publicKey = item.compressedPublicKey.slice(2);\n                }\n                else {\n                    item.publicKey = item.compressedPublicKey;\n                }\n            });\n        }\n    }\n    catch (e) {\n        (0, core_1.logDebug)(\"namespaces fixMobileBtcSession error\");\n    }\n}\n/**\n * util designed for Wallets that builds namespaces structure by provided supported chains, methods, events & accounts.\n * It takes required & optional namespaces provided in the session proposal\n * along with the supported chains/methods/events/accounts by the wallet and returns a structured namespaces object\n * @param {BuildApprovedNamespacesParams} params\n * @returns {SessionTypes.Namespaces}\n */\n// export function buildApprovedNamespaces(\n//   params: BuildApprovedNamespacesParams,\n// ): SessionTypes.Namespaces {\n//   const {\n//     proposal: { requiredNamespaces, optionalNamespaces = {} },\n//     supportedNamespaces,\n//   } = params;\n//   const normalizedRequired = normalizeNamespaces(requiredNamespaces);\n//   const normalizedOptional = normalizeNamespaces(optionalNamespaces);\n//\n//   // build approved namespaces\n//   const namespaces = {};\n//   Object.keys(supportedNamespaces).forEach((namespace) => {\n//     const supportedChains = supportedNamespaces[namespace].chains;\n//     const supportedMethods = supportedNamespaces[namespace].methods;\n//     const supportedEvents = supportedNamespaces[namespace].events;\n//     const supportedAccounts = supportedNamespaces[namespace].accounts;\n//\n//     supportedChains.forEach((chain) => {\n//       if (!supportedAccounts.some((account) => account.includes(chain))) {\n//         throw new Error(`No accounts provided for chain ${chain} in namespace ${namespace}`);\n//       }\n//     });\n//\n//     namespaces[namespace] = {\n//       chains: supportedChains,\n//       methods: supportedMethods,\n//       events: supportedEvents,\n//       accounts: supportedAccounts,\n//     };\n//   });\n//\n//   // verify all required namespaces are supported\n//   const err = isConformingNamespaces(requiredNamespaces, namespaces, \"approve()\");\n//   if (err) throw new Error(err.message);\n//\n//   const approvedNamespaces = {};\n//\n//   // if both required & optional namespaces are empty, return all supported namespaces by the wallet\n//   if (!Object.keys(requiredNamespaces).length && !Object.keys(optionalNamespaces).length)\n//     return namespaces;\n//\n//   // assign accounts for the required namespaces\n//   Object.keys(normalizedRequired).forEach((requiredNamespace) => {\n//     const chains = supportedNamespaces[requiredNamespace].chains.filter((chain) =>\n//       normalizedRequired[requiredNamespace]?.chains?.includes(chain),\n//     );\n//     const methods = supportedNamespaces[requiredNamespace].methods.filter((method) =>\n//       normalizedRequired[requiredNamespace]?.methods?.includes(method),\n//     );\n//     const events = supportedNamespaces[requiredNamespace].events.filter((event) =>\n//       normalizedRequired[requiredNamespace]?.events?.includes(event),\n//     );\n//\n//     const accounts = chains\n//       .map((chain: string) =>\n//         supportedNamespaces[requiredNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[requiredNamespace] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   });\n//\n//   // add optional namespaces\n//   Object.keys(normalizedOptional).forEach((optionalNamespace) => {\n//     if (!supportedNamespaces[optionalNamespace]) return;\n//\n//     const chainsToAdd = normalizedOptional[optionalNamespace]?.chains?.filter((chain) =>\n//       supportedNamespaces[optionalNamespace].chains.includes(chain),\n//     );\n//     const methodsToAdd = supportedNamespaces[optionalNamespace].methods.filter((method) =>\n//       normalizedOptional[optionalNamespace]?.methods?.includes(method),\n//     );\n//     const eventsToAdd = supportedNamespaces[optionalNamespace].events.filter((event) =>\n//       normalizedOptional[optionalNamespace]?.events?.includes(event),\n//     );\n//\n//     const accountsToAdd = chainsToAdd\n//       ?.map((chain: string) =>\n//         supportedNamespaces[optionalNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[optionalNamespace] = {\n//       chains: mergeArrays(approvedNamespaces[optionalNamespace]?.chains, chainsToAdd),\n//       methods: mergeArrays(approvedNamespaces[optionalNamespace]?.methods, methodsToAdd),\n//       events: mergeArrays(approvedNamespaces[optionalNamespace]?.events, eventsToAdd),\n//       accounts: mergeArrays(approvedNamespaces[optionalNamespace]?.accounts, accountsToAdd),\n//     };\n//   });\n//\n//   return approvedNamespaces;\n// }\nfunction isCaipNamespace(namespace) {\n    return namespace.includes(\":\");\n}\nfunction parseNamespaceKey(namespace) {\n    return isCaipNamespace(namespace) ? namespace.split(\":\")[0] : namespace;\n}\n/**\n * Converts\n * ```\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * ```\n * into\n * ```\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *```\n */\n// export function normalizeNamespaces(\n//   namespaces: ProposalTypes.RequiredNamespaces,\n// ): ProposalTypes.RequiredNamespaces {\n//   const normalizedNamespaces = {} as ProposalTypes.RequiredNamespaces;\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       methods: mergeArrays(methods, normalizedNamespaces[normalizedKey]?.methods),\n//       events: mergeArrays(events, normalizedNamespaces[normalizedKey]?.events),\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n// export function getNamespacesFromAccounts(accounts: string[]) {\n//   const namespaces = {};\n//   accounts?.forEach((account) => {\n//     const [namespace, chainId] = account.split(\":\");\n//     if (!namespaces[namespace]) {\n//       namespaces[namespace] = {\n//         accounts: [],\n//         chains: [],\n//         events: [],\n//       };\n//     }\n//     namespaces[namespace].accounts.push(account);\n//     namespaces[namespace].chains.push(`${namespace}:${chainId}`);\n//   });\n//\n//   return namespaces;\n// }\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PROVIDER_EVENTS = void 0;\nexports.PROVIDER_EVENTS = {\n    DEFAULT_CHAIN_CHANGED: \"default_chain_changed\",\n    UPDATE_NAMESPACES: \"update_name_spaces\",\n    SESSION_CONNECTING: \"session_connecting\"\n};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./values\"), exports);\n__exportStar(require(\"./events\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GENERIC_SUBPROVIDER_NAME = exports.RPC_URL = exports.STORAGE = exports.CONTEXT = exports.WC_VERSION = exports.PROTOCOL = exports.RELAY_URL = exports.LOGGER = void 0;\nexports.LOGGER = \"error\";\nexports.RELAY_URL = \"wss://relay.walletconnect.com\";\nexports.PROTOCOL = \"wc\";\nexports.WC_VERSION = 2;\nexports.CONTEXT = \"universal_provider\";\nexports.STORAGE = `${exports.PROTOCOL}@${exports.WC_VERSION}:${exports.CONTEXT}:`;\nexports.RPC_URL = \"https://rpc.walletconnect.com/v1/\";\nexports.GENERIC_SUBPROVIDER_NAME = \"generic\";\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./types\"), exports);\n__exportStar(require(\"./utils\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass AptosProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"aptos\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"aptos request --args--string>\", (0, core_1.safeJsonStringify)(args));\n            (0, core_1.logDebug)(\"aptos provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = AptosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass BtcProvider {\n    constructor(opts, name, client, events) {\n        this.name = core_1.NameSpaceKeyBtc;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"btc request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"btc provider namespace: \", JSON.stringify(this.namespace));\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = BtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass CosmosProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyCosmos;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"cosmos request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"cosmos provider namespace: \", JSON.stringify(this.namespace));\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = CosmosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Eip155Provider = void 0;\nconst utils_1 = require(\"../utils\");\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nclass Eip155Provider {\n    constructor(opts, client, events) {\n        this.name = \"eip155\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = parseInt(this.getDefaultChain());\n        // rpc\n        this.httpProviders = this.createHttpProviders();\n        (0, core_1.logDebug)(\"eip155 constructor --opts.namespace-->\", opts.namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    isArray(value) {\n        return typeof value === \"object\" && value !== null && Array.isArray(value);\n    }\n    updateRequestParams(args) {\n        let isDic = args.params && typeof args.params === 'object' && !Array.isArray(args.params);\n        if (args.method === 'wallet_switchEthereumChain') {\n            const switchChainId = args.chainId.split(\":\")[1];\n            // const hexChainId = parseInt(switchChainId, 16);\n            const decimalNumber = parseInt(switchChainId, 10);\n            if (isNaN(decimalNumber)) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid decimal number,  chainId: '${switchChainId}' `);\n            }\n            if (!args.params) {\n                args.params = { chainId: '0x' + decimalNumber.toString(16) };\n            }\n            else if (isDic) { //为 Record<string, unknown>\n                let params = args.params;\n                if (!('chainId' in params)) {\n                    params['chainId'] = '0x' + decimalNumber.toString(16);\n                    args.params = params;\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params error ,  method: '${args.method}' `);\n            }\n        }\n        else if (args.method === 'personal_sign'\n            || args.method === 'eth_signTypedData_v4'\n            || args.method === 'eth_sendTransaction'\n            || args.method === 'wallet_watchAsset') {\n            if (!args.params) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params is nil, method: '${args.method}'`);\n            }\n            if (this.isRecord(args.params)) {\n                let params = args.params;\n                (0, core_1.logDebug)(\"eip155 updateRequestParams params>\", JSON.stringify(params));\n                if ('chainId' in params) {\n                    const selectedChainId = args.chainId.split(\":\")[1];\n                    const chainNum = parseInt(selectedChainId, 10);\n                    let paramsChainString = String(params.chainId);\n                    let paramsChainId;\n                    if (paramsChainString.startsWith(this.name) && args.chainId === paramsChainString) { //为\n                        paramsChainId = chainNum;\n                    }\n                    else if (paramsChainString.startsWith(\"0x\")) {\n                        paramsChainId = parseInt(paramsChainString, 16);\n                    }\n                    else if (!isNaN(Number(paramsChainString))) { //数字\n                        paramsChainId = parseInt(paramsChainString, 10);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid params.chainId format, method: '${args.method}'`);\n                    }\n                    if (chainNum !== paramsChainId) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params.chainId not equal chain,  method: '${args.method}' `);\n                    }\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid request params type, method: '${args.method}'`);\n            }\n        }\n    }\n    //adapt array\n    adaptArray(args) {\n        if (args.method === 'wallet_switchEthereumChain'\n            || args.method === 'wallet_addEthereumChain'\n            || args.method === 'wallet_watchAsset'\n            || args.method === 'eth_sendTransaction') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr) {\n                    if (paramsArr.length === 1) {\n                        let firstParam = args.params[0];\n                        if (this.isRecord(firstParam)) {\n                            args.params = firstParam;\n                        }\n                    }\n                    else if (paramsArr.length > 1) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                    }\n                }\n            }\n        }\n        else if (args.method === 'eth_signTypedData_v4') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr && paramsArr.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                }\n                else if (paramsArr && paramsArr.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let messageObj = {};\n                if (paramsArr && paramsArr.length === 2) {\n                    let addressObj = args.params[0]; //address\n                    if (addressObj && typeof addressObj === 'string') { //check address\n                        let isEqual = false;\n                        this.namespace.accounts.forEach((account) => {\n                            let chainAddress = (0, utils_1.fromAccountToAddress)(account);\n                            if (chainAddress.toLowerCase() === addressObj.toLowerCase()) {\n                                isEqual = true;\n                            }\n                        });\n                        (0, core_1.logDebug)(\"eip155 adaptArray eth_signTypedData_v4 >>>isEqual: \", isEqual);\n                        if (!isEqual) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error, not equal,  method: '${args.method}' `);\n                        }\n                        if (this.isRecord(args.params[1])) {\n                            messageObj = args.params[1];\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error , not string,  method: '${args.method}' `);\n                    }\n                }\n                else if (paramsArr && paramsArr.length === 1) {\n                    if (this.isRecord(args.params[0])) {\n                        messageObj = args.params[0];\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                    }\n                }\n                try {\n                    let messages = JSON.stringify(messageObj);\n                    args.params = {\n                        typedDataJson: messages\n                    };\n                }\n                catch (err) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params call JSON.stringify() failed,  method: '${args.method}' `);\n                }\n            }\n        }\n        else if (args.method === 'personal_sign') {\n            if (this.isArray(args.params)) {\n                if (args.params && args.params.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params error,  method: '${args.method}' `);\n                }\n                else if (args.params && args.params.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let firstObj = args.params[0];\n                let secondObj = args.params[1];\n                if (secondObj && typeof secondObj === 'string') { //check address\n                    let isEqual = false;\n                    this.namespace.accounts.forEach((account) => {\n                        let chainAddress = (0, utils_1.fromAccountToAddress)(account);\n                        if (chainAddress.toLowerCase() === secondObj.toLowerCase()) {\n                            isEqual = true;\n                        }\n                    });\n                    (0, core_1.logDebug)(\"eip155 adaptArray personal_sign >>>isEqual: \", isEqual);\n                    if (!isEqual) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error,  method: '${args.method}' `);\n                    }\n                }\n                if (firstObj && typeof firstObj === 'string') {\n                    args.params = {\n                        message: firstObj\n                    };\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is error,  method: '${args.method}' `);\n                }\n            }\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"eth_requestAccounts\":\n            case \"eth_accounts\":\n            case \"eth_chainId\":\n                return false;\n            case \"eth_sendTransaction\":\n            case \"eth_signTransaction\":\n            case \"eth_sign\":\n            case \"personal_sign\":\n            case \"eth_signTypedData\":\n            case \"wallet_addEthereumChain\":\n            case \"wallet_watchAsset\":\n            case \"eth_signTypedData_v4\":\n                return true;\n            case \"wallet_switchEthereumChain\": {\n                this.adaptArray(args);\n                this.updateRequestParams(args);\n                const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n                return !this.isChainApproved(parsedChainId);\n            }\n            default:\n                return false;\n        }\n        return false;\n    }\n    configAddressAdaptInjectWallet(args) {\n        this.namespace.accounts.forEach((account) => {\n            if (account.includes(args.chainId)) {\n                args.address = (0, utils_1.fromAccountToAddress)(account);\n            }\n        });\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.adaptArray(args);\n            (0, core_1.logDebug)(\"eip155 request --args--string>\", JSON.stringify(args));\n            this.updateRequestParams(args);\n            (0, core_1.logDebug)(\"eip155 request --params--string>\", JSON.stringify(args));\n            this.configAddressAdaptInjectWallet(args);\n            switch (args.method) {\n                case \"eth_requestAccounts\":\n                    return this.getAccounts();\n                case \"eth_accounts\":\n                    return this.getAccounts();\n                case \"eth_chainId\":\n                    return parseInt(this.getDefaultChain());\n                case \"wallet_switchEthereumChain\": {\n                    return (yield this.handleSwitchChain(args));\n                }\n                case \"wallet_addEthereumChain\":\n                    return this.addEthereumChain(args);\n                default:\n                    break;\n            }\n            if (this.namespace.methods.includes(args.method)) {\n                // personal_sign\n                // eth_signTypedData_v4\n                // eth_sendTransaction\n                // wallet_watchAsset\n                try {\n                    const response = yield this.client.request(args);\n                    (0, core_1.logDebug)(\"eip155 request --response----string>\", JSON.stringify(response));\n                    if (this.isRecord(response)) {\n                        if ('result' in response) {\n                            let result = response.result;\n                            if (result && typeof result === 'string' && (result === \"true\" || result === \"false\")) {\n                                (0, core_1.logDebug)(\"eip155 request --wallet_watchAsset>>>>\", result === \"true\");\n                                return (result === \"true\");\n                            }\n                            return response.result;\n                        }\n                    }\n                    return response;\n                }\n                catch (e) {\n                    (0, core_1.logDebug)(`eip155 request --response --error--string> e instanceof OKXConnectError ${e instanceof core_1.OKXConnectError}`, JSON.stringify(e));\n                    throw e;\n                }\n            }\n            else {\n                (0, core_1.logDebug)('[RPC] request begin');\n                return yield this.getHttpProvider().request(args);\n            }\n        });\n    }\n    addEthereumChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let resultData = (yield this.client.request(args));\n            try {\n                if ('result' in resultData) {\n                    let successData = resultData;\n                    let account = resultData.result;\n                    if (account) {\n                        const nameSpace = account.split(\":\")[0];\n                        const chainId = account.split(\":\")[1];\n                        const chain = nameSpace + ':' + chainId;\n                        let newNameSpace = this.namespace;\n                        this.namespace.accounts.push(account);\n                        this.namespace.chains.push(chain);\n                        if (this.isRecord(args.params)) {\n                            if (\"rpcUrls\" in args.params) {\n                                let rpcUrls = args.params.rpcUrls;\n                                let rpcUrl = rpcUrls ? rpcUrls[0] : undefined;\n                                if (rpcUrl) {\n                                    if (this.namespace.rpcMap) {\n                                        this.namespace.rpcMap[chainId] = rpcUrl;\n                                    }\n                                    else {\n                                        this.namespace.rpcMap = {\n                                            [chainId]: rpcUrl\n                                        };\n                                    }\n                                    this.setHttpProvider(chainId, rpcUrl);\n                                }\n                            }\n                        }\n                        this.events.emit(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, {\n                            eip155: this.namespace\n                        });\n                    }\n                }\n                else {\n                    new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request error`);\n                }\n            }\n            catch (error) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request  error`);\n            }\n            return null;\n        });\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        this.chainId = parseInt(chainId);\n        // set rpc\n        if (!this.httpProviders[chainId]) {\n            const rpc = rpcUrl || (0, utils_1.getRpcUrl)(`${this.name}:${chainId}`, this.namespace);\n            if (!rpc) {\n                // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n                (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            }\n            else {\n                this.setHttpProvider(chainId, rpc);\n            }\n        }\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId.toString();\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // ---------- Private ----------------------------------------------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"eip155 getAccounts \", accounts, this.chainId);\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => {\n                return (0, utils_1.fromAccountToAddress)(account);\n            })),\n        ];\n    }\n    getHexChainIdFromRequest(args) {\n        let params = args.params;\n        let hexChainId = \"0x0\";\n        if (params && \"chainId\" in params) {\n            hexChainId = params.chainId;\n        }\n        hexChainId = hexChainId.startsWith(\"0x\") ? hexChainId : `0x${hexChainId}`;\n        (0, core_1.logDebug)(\"handleSwitchChain -->args \", args);\n        (0, core_1.logDebug)(\"handleSwitchChain -->hexChainId \", hexChainId);\n        const parsedChainId = parseInt(hexChainId, 16);\n        (0, core_1.logDebug)(\"handleSwitchChain -->parsedChainId \", parsedChainId);\n        return { parsedChainId, hexChainId };\n    }\n    handleSwitchChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n            if (this.isChainApproved(parsedChainId)) {\n                this.setDefaultChain(`${parsedChainId}`);\n            }\n            else {\n                try {\n                    const resultData = (yield this.client.request(Object.assign(Object.assign({}, args), { params: {\n                            chainId: hexChainId,\n                        } })));\n                    if ('result' in resultData) {\n                        let successData = resultData;\n                        let account = resultData.result;\n                        if (account) {\n                            const nameSpace = account.split(\":\")[0];\n                            const chainId = account.split(\":\")[1];\n                            const chain = nameSpace + ':' + chainId;\n                            let newNameSpace = this.namespace;\n                            this.namespace.accounts.push(account);\n                            this.namespace.chains.push(chain);\n                            (0, core_1.logDebug)(\"handleSwitchChain -->wallet_switchEthereumChain \", resultData);\n                            this.setDefaultChain(`${parsedChainId}`);\n                            this.events.emit(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, {\n                                eip155: this.namespace\n                            });\n                        }\n                    }\n                    else {\n                        new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request error`);\n                    }\n                }\n                catch (error) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request  error`);\n                }\n            }\n            return null;\n        });\n    }\n    isChainApproved(chainId) {\n        return this.namespace.chains.includes(`${this.name}:${chainId}`);\n    }\n    // rpc\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            //   throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            (0, core_1.logDebug)('get parsed chain and rpc:', parsedChainId, parsedRpc);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        (0, core_1.logDebug)('get http providermap:', http);\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n}\nexports.Eip155Provider = Eip155Provider;\nexports.default = Eip155Provider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcConnection = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nconst DEFAULT_HTTP_HEADERS = {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n};\nconst DEFAULT_HTTP_METHOD = \"POST\";\nconst DEFAULT_FETCH_OPTS = {\n    headers: DEFAULT_HTTP_HEADERS,\n    method: DEFAULT_HTTP_METHOD,\n};\n// Source: https://nodejs.org/api/events.html#emittersetmaxlistenersn\nconst EVENT_EMITTER_MAX_LISTENERS_DEFAULT = 10;\nclass JsonRpcConnection {\n    constructor(url, disableProviderPing = false) {\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n        this.events = new eventemitter3_1.EventEmitter();\n        this.isAvailable = false;\n        this.registering = false;\n        if (!(0, core_2.isHttpUrl)(url)) {\n            throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n        }\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n    }\n    get connected() {\n        return this.isAvailable;\n    }\n    get connecting() {\n        return this.registering;\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            yield this.register(url);\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                throw new Error(\"Connection already closed\");\n            }\n            this.onClose();\n        });\n    }\n    send(payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                yield this.register();\n            }\n            try {\n                const body = (0, core_1.safeJsonStringify)(payload);\n                const res = yield (0, cross_fetch_1.default)(this.url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                const data = yield res.json();\n                this.onPayload({ data });\n            }\n            catch (e) {\n                this.onError(payload.id, e);\n            }\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    register() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            if (!(0, core_2.isHttpUrl)(url)) {\n                throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n            }\n            if (this.registering) {\n                return new Promise((resolve, reject) => {\n                    this.events.once(\"register_error\", (error) => {\n                        reject(error);\n                    });\n                    this.events.once(\"open\", () => {\n                        if (typeof this.isAvailable === \"undefined\") {\n                            return reject(new Error(\"HTTP connection is missing or invalid\"));\n                        }\n                        resolve();\n                    });\n                });\n            }\n            this.url = url;\n            this.registering = true;\n            try {\n                if (!this.disableProviderPing) {\n                    const body = (0, core_1.safeJsonStringify)({ id: 1, jsonrpc: \"2.0\", method: \"test\", params: [] });\n                    yield (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                }\n                this.onOpen();\n            }\n            catch (e) {\n                const error = this.parseError(e);\n                this.events.emit(\"register_error\", error);\n                this.onClose();\n                throw error;\n            }\n        });\n    }\n    onOpen() {\n        this.isAvailable = true;\n        this.registering = false;\n        this.events.emit(\"open\");\n    }\n    onClose() {\n        this.isAvailable = false;\n        this.registering = false;\n        this.events.emit(\"close\");\n    }\n    onPayload(e) {\n        if (typeof e.data === \"undefined\")\n            return;\n        const payload = typeof e.data === \"string\" ? (0, core_1.safeJsonParse)(e.data) : e.data;\n        this.events.emit(\"payload\", payload);\n    }\n    onError(id, e) {\n        const error = this.parseError(e);\n        const message = error.message || error.toString();\n        const payload = (0, core_2.formatJsonRpcError)(id, message);\n        this.events.emit(\"payload\", payload);\n    }\n    parseError(e, url = this.url) {\n        return (0, core_2.parseConnectionError)(e, url, \"HTTP\");\n    }\n}\nexports.JsonRpcConnection = JsonRpcConnection;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcProvider = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst types_1 = require(\"../../types\");\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nclass JsonRpcProvider extends types_1.IJSONRpcProvider {\n    constructor(connection) {\n        super(connection);\n        this.events = new eventemitter3_1.EventEmitter();\n        this.connected = false;\n        this.connecting = false;\n        this.hasRegisteredEventListeners = false;\n        this.connection = this.setConnection(connection);\n        if (this.connection.connected) {\n            this.registerEventListeners();\n        }\n    }\n    connect() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            yield this.open(connection);\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.close();\n        });\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    request(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.requestStrict((0, core_1.formatJsonRpcRequest)(request.method, request.params || [], (0, core_1.getBigIntRpcId)().toString()), // casting to any is required in order to use BigInt as rpcId\n            context);\n        });\n    }\n    // ---------- Protected ----------------------------------------------- //\n    requestStrict(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                if (!this.connection.connected) {\n                    try {\n                        yield this.open();\n                    }\n                    catch (e) {\n                        reject(e);\n                    }\n                }\n                this.events.on(`${request.id}`, (response) => {\n                    if ((0, core_1.isJsonRpcError)(response)) {\n                        reject(response.error);\n                    }\n                    else {\n                        resolve(response.result);\n                    }\n                });\n                try {\n                    (0, core_2.logDebug)('[RPC] >>> send request', request, context);\n                    yield this.connection.send(request, context);\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }));\n        });\n    }\n    setConnection(connection = this.connection) {\n        return connection;\n    }\n    onPayload(payload) {\n        this.events.emit(\"payload\", payload);\n        if ((0, core_1.isJsonRpcResponse)(payload)) {\n            this.events.emit(`${payload.id}`, payload);\n        }\n        else {\n            this.events.emit(\"message\", {\n                type: payload.method,\n                data: payload.params,\n            });\n        }\n    }\n    onClose(event) {\n        // Code 3000 indicates an abnormal closure signalled by the relay -> emit an error in this case.\n        if (event && event.code === 3000) {\n            this.events.emit(\"error\", new Error(`WebSocket connection closed abnormally with code: ${event.code} ${event.reason ? `(${event.reason})` : \"\"}`));\n        }\n        this.events.emit(\"disconnect\");\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            if (this.connection === connection && this.connection.connected)\n                return;\n            if (this.connection.connected)\n                this.close();\n            if (typeof connection === \"string\") {\n                yield this.connection.open(connection);\n                connection = this.connection;\n            }\n            this.connection = this.setConnection(connection);\n            yield this.connection.open();\n            this.registerEventListeners();\n            this.events.emit(\"connect\");\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.connection.close();\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    registerEventListeners() {\n        if (this.hasRegisteredEventListeners)\n            return;\n        this.connection.on(\"payload\", (payload) => this.onPayload(payload));\n        this.connection.on(\"close\", (event) => this.onClose(event));\n        this.connection.on(\"error\", (error) => this.events.emit(\"error\", error));\n        this.connection.on(\"register_error\", (_error) => this.onClose());\n        this.hasRegisteredEventListeners = true;\n    }\n}\nexports.JsonRpcProvider = JsonRpcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SolanaProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SolanaProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"solana\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"solana request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"solana provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    //   {\n    //     \"chains\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\" ],\n    //     \"accounts\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp:F7wnJc5wiBGy1k87jv6gyNwE3jMEWd18oTQiYsF1xVG7\"],\n    //     \"methods\": [\n    //         \"solana_signTransaction\",\n    //         \"solana_signMessage\"\n    //     ],\n    //     \"defaultChain\": \"5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\"\n    // }\n    // TODO:确认上面的defaultChain是否正确（没有solana前缀）\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"solana\"))) {\n                chainId = `solana:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.SolanaProvider = SolanaProvider;\nexports.default = SolanaProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass StarknetProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"starknet\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"starknet request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"starknet provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Wallet doesn't support\" + args.method);\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = StarknetProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SuiProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SuiProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeySui;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"sui request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"sui provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"sui\"))) {\n                chainId = `sui:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"sui_signMessage\":\n            case \"sui_signPersonalMessage\":\n            case \"sui_signTransactionBlock\":\n            case \"sui_signAndExecuteTransactionBlock\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.SuiProvider = SuiProvider;\nexports.default = SuiProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass TONProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyTON;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            (0, core_1.logDebug)(\"TONProvider request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"TONProvider request provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                if (!args.params) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params is nil\");\n                }\n                if (this.isRecord(args.params)) {\n                    const _e = args.params, { validUntil } = _e, newParams = __rest(_e, [\"validUntil\"]);\n                    let fromAddress = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n                    if ('from' in newParams) {\n                        fromAddress = newParams.from || ((_d = (_c = this.namespace.payload) === null || _c === void 0 ? void 0 : _c.ton_addr) === null || _d === void 0 ? void 0 : _d.address);\n                    }\n                    args.params['from'] = fromAddress;\n                    args.params['network'] = this.getDefaultChain();\n                    args.params['valid_until'] = validUntil;\n                    let response = yield this.client.request(args);\n                    if (this.isRecord(response) && 'result' in response) {\n                        const result = {\n                            boc: response.result.toString()\n                        };\n                        (0, core_1.logDebug)(\"TONProvider request provider response: \", JSON.stringify(response));\n                        (0, core_1.logDebug)(\"TONProvider request provider result: \", JSON.stringify(result));\n                        return result;\n                    }\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton_send request response is nil\");\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params type add nil\");\n                }\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        var _a, _b;\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"ton getAccounts accounts :\", accounts);\n        (0, core_1.logDebug)(\"ton getAccounts .namespace :\", JSON.stringify(this.namespace));\n        if (!accounts) {\n            return [];\n        }\n        let address = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n        (0, core_1.logDebug)(\"ton getAccounts address :\", address);\n        if (address) {\n            return [\n                address\n            ];\n        }\n        return [];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"ton_sendTransaction\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.default = TONProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass TronProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyTron;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"tron request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"tron provider namespace: \", JSON.stringify(this.namespace));\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = TronProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./providers\"), exports);\n__exportStar(require(\"./misc\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IJSONRpcProvider = exports.IJSONRpcConnection = void 0;\nclass IJSONRpcConnection {\n}\nexports.IJSONRpcConnection = IJSONRpcConnection;\nclass IJSONRpcProvider {\n    constructor(opt) {\n    }\n}\nexports.IJSONRpcProvider = IJSONRpcProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setGlobal = exports.getGlobal = void 0;\nconst globals = {};\nconst getGlobal = (key) => {\n    return globals[key];\n};\nexports.getGlobal = getGlobal;\nconst setGlobal = (key, value) => {\n    globals[key] = value;\n};\nexports.setGlobal = setGlobal;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./misc\"), exports);\n__exportStar(require(\"./globals\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRpcUrl = getRpcUrl;\nexports.getChainId = getChainId;\nexports.fromAccountToAddress = fromAccountToAddress;\nexports.convertChainIdToNumber = convertChainIdToNumber;\nexports.parseChainId = parseChainId;\nexports.mergeArrays = mergeArrays;\nexports.syncAddressAvailable = syncAddressAvailable;\nexports.syncAddressHostAvailable = syncAddressHostAvailable;\nconst core_1 = require(\"@okxconnect/core\");\nfunction getRpcUrl(chainId, rpc, projectId) {\n    var _a;\n    const chain = parseChainId(chainId);\n    // no default\n    return (((_a = rpc.rpcMap) === null || _a === void 0 ? void 0 : _a[chain.reference]) ||\n        ``);\n}\nfunction getChainId(chain) {\n    return chain.includes(\":\") ? chain.split(\":\")[1] : chain;\n}\nfunction fromAccountToAddress(account) {\n    if (!account) {\n        return \"\";\n    }\n    try {\n        let addressArr = account.split(\":\").slice(2);\n        let address = addressArr.length > 0 ? addressArr.join(\":\") : \"\";\n        (0, core_1.logDebug)(\"fromAccountToAddress address and account:\", address, account);\n        return address;\n    }\n    catch (e) {\n        (0, core_1.logError)(\"fromAccountToAddress error:\", account);\n        return \"\";\n    }\n}\n// export function validateChainApproval(chain: string, chains: string[]): void {\n//   if (!chains.includes(chain)) {\n//     throw new Error(\n//       `Chain '${chain}' not approved. Please use one of the following: ${chains.toString()}`,\n//     );\n//   }\n// }\n// export function getChainsFromApprovedSession(accounts: string[]): string[] {\n//   return accounts.map((address) => `${address.split(\":\")[0]}:${address.split(\":\")[1]}`);\n// }\n// export function getAccountsFromSession(namespace: string, session: SessionTypes.Struct): string[] {\n//   // match namespaces e.g. eip155 with eip155:1\n//   const matchedNamespaceKeys = Object.keys(session.namespaces).filter((key) =>\n//     key.includes(namespace),\n//   );\n//   if (!matchedNamespaceKeys.length) return [];\n//   const accounts: string[] = [];\n//   matchedNamespaceKeys.forEach((key) => {\n//     const accountsForNamespace = session.namespaces[key].accounts;\n//     accounts.push(...accountsForNamespace);\n//   });\n//   return accounts;\n// }\n// export function mergeRequiredOptionalNamespaces(\n//   required: NamespaceConfig = {},\n//   optional: NamespaceConfig = {},\n// ){\n//   const requiredNamespaces = normalizeNamespaces(required);\n//   const optionalNamespaces = normalizeNamespaces(optional);\n//    return merge.merge(requiredNamespaces,optionalNamespaces)\n// }\n/**\n * Converts\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * into\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *\n */\n// export function normalizeNamespaces(namespaces: NamespaceConfig): NamespaceConfig {\n//   const normalizedNamespaces: NamespaceConfig = {};\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const rpcMap = values.rpcMap || {};\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       ...values,\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       rpcMap: { ...rpcMap, ...normalizedNamespaces[normalizedKey]?.rpcMap },\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n//\n// export function parseCaip10Account(caip10Account: string): string {\n//   return caip10Account.includes(\":\") ? caip10Account.split(\":\")[2] : caip10Account;\n// }\n/**\n * Populates the chains array for each namespace with the chains extracted from the accounts if are otherwise missing\n */\n// export function populateNamespacesChains(\n//   namespaces: SessionTypes.Namespaces,\n// ): Record<string, SessionTypes.Namespace> {\n//   const parsedNamespaces: Record<string, SessionTypes.Namespace> = {};\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const accounts = values.accounts || [];\n//     // If the key includes a CAIP separator `:` we know it's a namespace + chainId (e.g. `eip155:1`)\n//     const chains = isCaipNamespace(key)\n//       ? [key]\n//       : values.chains\n//       ? values.chains\n//       : getChainsFromApprovedSession(values.accounts);\n//     parsedNamespaces[key] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   }\n//   return parsedNamespaces;\n// }\nfunction convertChainIdToNumber(chainId) {\n    if (typeof chainId === \"number\")\n        return chainId;\n    if (chainId.includes(\"0x\")) {\n        return parseInt(chainId, 16);\n    }\n    chainId = chainId.includes(\":\") ? chainId.split(\":\")[1] : chainId;\n    return isNaN(Number(chainId)) ? chainId : Number(chainId);\n}\nconst CAIP_DELIMITER = \":\";\nfunction parseChainId(chain) {\n    const [namespace, reference] = chain.split(CAIP_DELIMITER);\n    return { namespace, reference };\n}\nfunction mergeArrays(a = [], b = []) {\n    return [...new Set([...a, ...b])];\n}\nfunction syncAddressAvailable(wallet) {\n    if (!wallet) {\n        return false;\n    }\n    if (wallet.appName !== 'OKX Wallet') {\n        return false;\n    }\n    if ((0, core_1.versionCompare)('6.97.0', wallet.appVersion) > 0) {\n        return false;\n    }\n    return syncAddressHostAvailable();\n}\nfunction syncAddressHostAvailable() {\n    try {\n        return !!(window.okxGlobal);\n    }\n    catch (e) {\n        return false;\n    }\n}\n","<template>\n  <div id=\"app\">\n    <el-container>\n      <el-header>OKX Connect</el-header>\n      <el-main>\n        <el-card class=\"wallet-info\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Wallet Info</div>\n          </template>\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Wallet Address:</strong> {{ getWalletAddress }}\n            </el-col>\n          </el-row>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Status :</strong> {{ currentStatus }}\n            </el-col>\n          </el-row>\n\n        </el-card>\n\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Connect Params</div>\n          </template>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"12\">\n              <el-checkbox v-model=\"withUI\" @change=\"handleWithUI\">\n                Show UI</el-checkbox>\n            </el-col>\n\n            <el-col :span=\"12\">\n              <el-checkbox v-model=\"universalToTG\" @change=\"handleUniversalToTG\">\n                Use mini wallet</el-checkbox>\n            </el-col>\n          </el-row>\n\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Modals</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"modals\" placeholder=\"Modals\" @change=\"handleModalsSelect\" multiple>\n                <el-option label=\"Before\" value=\"before\" />\n                <el-option label=\"Success\" value=\"success\" />\n                <el-option label=\"Error\" value=\"error\" />\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center; justify-content: space-between;\">\n            <el-col :span=\"6\" style=\"gap: 2px\">\n              <p style=\"font-size: 11pt; margin: 0px\">Return Strategy</p>\n              <p style=\"font-size: 9pt; margin: 0px\">(Mobile only)</p>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-select\n                v-model=\"returnStrategy\"\n                @change=\"handleReturnStrategySelect\"\n                placeholder=\"Return Strategy\"\n              >\n                <el-option\n                  v-for=\"strategy in returnStrategies\"\n                  :key=\"`return-strategy-select-option-${strategy}`\"\n                  :label=\"strategy\"\n                  :value=\"strategy\"\n                />\n              </el-select>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-input\n                v-if=\"returnStrategy === 'deeplink'\"\n                v-model=\"deeplink\"\n                @change=\"handleReturnStrategyDeeplink\"\n                placeholder=\"Deeplink\"\n                :disabled=\"returnStrategy !== 'deeplink'\"\n                style=\"margin: 0px\"\n              />\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Lang</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"language\" @change=\"handleLanguageSelect\" placeholder=\"Language\">\n                <el-option v-for=\"locale in locales\" :key=\"`language-select-option-${locale}`\" :label=\"locale\"\n                  :value=\"locale\" />\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Theme</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"theme\" @change=\"handleThemeSelect\" placeholder=\"Theme\">\n                <el-option label=\"LIGHT\" :value=\"THEME.LIGHT\" />\n                <el-option label=\"DARK\" :value=\"THEME.DARK\" />\n              </el-select>\n            </el-col>\n          </el-row>\n\n<!--          <el-row>-->\n<!--          <el-row style=\"align-items: center\">-->\n<!--            <el-col :span=\"4\">-->\n<!--              <p style=\"font-size: 11pt\">Connect</p>-->\n<!--              <p style=\"font-size: 11pt\">Methods</p>-->\n<!--            </el-col>-->\n<!--            <el-col :span=\"20\">-->\n<!--              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" placeholder=\"Methods\">-->\n<!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n<!--                           :value=\"methods\" />-->\n\n<!--              </el-select>-->\n<!--            </el-col>-->\n<!--          </el-row>-->\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Connect</p>\n              <p style=\"font-size: 11pt\">Methods</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" multiple placeholder=\"methods\">\n                <el-option\n                    v-for=\"item in connectMethods\"\n                    :key=\"item\"\n                    :label=\"item\"\n                    :value=\"item\">\n                </el-option>\n              </el-select>\n\n\n<!--              <el-select v-model=\"selectedMethod\" placeholder=\"Methods\" @change=\"handleConnectMethodsSelect\" multiple>-->\n<!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n<!--                           :value=\"methods\" />-->\n<!--              </el-select>-->\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">ton_proof</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-input v-model=\"tonProofValue\"  placeholder=\"input ton_proof\"></el-input>\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" align=\"middle\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Required Chains</div>\n            </el-col>\n            <el-col\n              :span=\"6\"\n              v-for=\"item in Object.keys(availableChains)\"\n              :key=\"item\"\n            >\n              <el-checkbox\n                v-model=\"availableChains[item].checked\"\n                :disabled=\"!areChainsInit\"\n                >{{ availableChains[item].name }}</el-checkbox\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" align=\"middle\" style=\"margin-top: 20px\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Optional Chains</div>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(43114)\" @change=\"() => handleOptionChange(43114)\">\n                AVAX</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(10)\" @change=\"() => handleOptionChange(10)\">OP</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(8453)\" @change=\"() => handleOptionChange(8453)\">\n                BASE</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(99781165)\"\n                @change=\"() => handleOptionChange(99781165)\">Nonexist</el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp')\" @change=\"() => handleOptionChange('solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp')\">Solana</el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('ton:-239')\" @change=\"() => handleOptionChange('ton:-239')\">Ton</el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('btc:mainnet')\" @change=\"() => handleOptionChange('btc:mainnet')\">btc</el-checkbox>\n            </el-col>\n\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"initBtnClicked\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectInitStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                type=\"primary\"\n                @click=\"connectBtnClicked\"\n                icon=\"el-icon-connection\"\n                :disabled=\"!areChainsInit\"\n                >{{ connectStatusStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"syncAllAddressClick\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ syncAllAddressStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                type=\"danger\"\n                @click=\"disconnectAction\"\n                icon=\"el-icon-switch-button\"\n                :disabled=\"!areChainsInit || walletAddress.length == 0\"\n                >{{ disconnectStatusStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n          <teleport to=\"body\">\n            <div v-if=\"showModal\" class=\"modal-overlay\" @click=\"closeModal\">\n              <div class=\"modal-content\" @click.stop>\n                <button class=\"close-button\" @click=\"closeModal\">\n                  &times;\n                </button>\n                <h2>Scan to connect</h2>\n                <qrcode-vue :value=\"qrValue\" :size=\"350\" level=\"L\" />\n              </div>\n            </div>\n          </teleport>\n        </el-card>\n\n        <!-- 发送交易 -->\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Transactions</div>\n          </template>\n\n          <el-tabs v-model=\"activeTab\" type=\"border-card\" @tab-click=\"clickActiveTab\">\n            <!-- ETH -->\n            <el-tab-pane label=\"ETH\" name=\"eip155:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to ETH)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve TONCoin)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(eth mint\n                    nft)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add SPX6900)\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TON\" name=\"ton:-239\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_getAccount\">ton_getAccount</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_sendTransaction\">ton_sendTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- solana -->\n            <el-tab-pane label=\"Sol\" name=\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- Sui-->\n            <el-tab-pane label=\"Sui\" name=\"sui:mainnet\">\n              <SuiPanel @generateTransactionParams=\"sui_generateTransactionParams\" />\n            </el-tab-pane>\n            <!-- BTC -->\n            <el-tab-pane label=\"BTC\" name=\"btc:mainnet\">\n              <BTCPanel @generateTransactionParams=\"btc_generateTransactionParams\" />\n            </el-tab-pane>\n\n            <!-- Fractal BTC -->\n            <el-tab-pane label=\"Fractal\" name=\"fractal:mainnet\">\n              <FractalPanel @generateTransactionParams=\"fractal_generateTransactionParams\" />\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Tron\" name=\"tron:mainnet\">\n              <TronTransactionPanel\n                  @generateTransactionParams=\"tron_generateTransactionParams\"\n                  @generateTransactionResult=\"tron_getTransactionResult\" />\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Aptos\" name=\"aptos:mainnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signTransaction\">aptos_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"aptos_signAndSubmitTransaction\">aptos_signAndSubmitTransaction</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Cosmos\" name=\"cosmos:cosmoshub-4\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <!-- Polygon-->\n            <el-tab-pane label=\"Polygon\" name=\"eip155:137\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send POL)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve sushi)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(polygon mint\n                    nft)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add LGNS)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_testRpc()\">wallet_testRpc(Polygon)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\"\n                  >eth_sendTransaction(转账FUSE)</el-button\n                  >\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\"\n                  >eth_sendTransaction(授权USDC)</el-button\n                  >\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- BSC-->\n            <el-tab-pane label=\"BNB\" name=\"eip155:56\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to BNB)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve POSI)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add FET)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_testRpc()\">wallet_testRpc(check balance on eth)</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Fuse\" name=\"eip155:122\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_swap\">eth_sendTransaction(Swap)</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Sonic testnet\" name=\"svm:70000062\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Movement\" name=\"movement:testnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"move_signTransaction\">move_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"move_signAndSubmitTransaction\">move_signAndSubmitTransaction</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n\n            <el-tab-pane label=\"osmos\" name=\"cosmos:osmosis-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"SEI\" name=\"cosmos:pacific-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Starknet\" name=\"starknet:mainnet\">\n              <StarknetPanel ref=\"starknetPanelRef\" @generateTransactionParams=\"starknet_generateTransactionParams\" @generateTransactionResult=\"starknet_getTransactionResult\" />\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TEST \" name=\"test:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"testBase64UrlSafe\">testBase64UrlSafe</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n          </el-tabs>\n\n          <el-col :xs=\"24\" :sm=\"24\" style=\"margin: 16px 0px;\">\n            <el-row style=\"align-items: center; justify-content: space-between; margin-bottom: 8px;\">\n              <el-col :span=\"4\">\n                <p style=\"font-size: 11pt; margin: 0px; text-align: start\">Redirect param (only for ETH, Polygon, BNB, Fuse)</p>\n              </el-col>\n              <el-col :span=\"9\">\n                <el-select\n                  v-model=\"redirect\"\n                  @change=\"handleRedirectSelect\"\n                  placeholder=\"Return Strategy\"\n                  :disabled=\"!canChainAddRedirectParam()\"\n                  >\n                  <el-option\n                    v-for=\"strategy in returnStrategies\"\n                    :key=\"`return-strategy-select-option-${strategy}`\"\n                    :label=\"strategy\"\n                    :value=\"strategy\"\n                  />\n                </el-select>\n              </el-col>\n              <el-col :span=\"10\">\n                <el-input\n                  v-if=\"redirect === 'deeplink'\"\n                  v-model=\"redirectDeeplink\"\n                  @change=\"handleRedirectDeeplink\"\n                  placeholder=\"Deeplink\"\n                  :disabled=\"!canChainAddRedirectParam() || redirect !== 'deeplink'\"\n                  style=\"margin: 0px\"\n                />\n              </el-col>\n            </el-row>\n            <el-button\n              type=\"primary\" @click=\"addRedirectParam()\"\n              :disabled=\"!canChainAddRedirectParam() || !testTransaction\"\n            >\n              Add redirect param to data\n            </el-button>\n          </el-col>\n\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Data:</div>\n            <el-input v-model=\"testTransaction\" type=\"textarea\" :rows=\"5\" placeholder=\"sendTransactions\"></el-input>\n          </el-col>\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Result :</div>\n            <el-input v-model=\"testboc\" type=\"textarea\" :rows=\"5\" placeholder=\"boc\"></el-input>\n          </el-col>\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button type=\"primary\" :disabled=\"sendBtnDisabled\" @click=\"sendTransaction()\">{{\n                testTransactionStr\n                }}</el-button>\n            </el-col>\n          </el-row>\n        </el-card>\n      </el-main>\n    </el-container>\n  </div>\n</template>\n\n<style scoped>\n/* 重置全局边距和内边距 */\nbody,\nhtml {\n  margin: 0;\n  padding: 0;\n  height: 100%;\n}\n\n/* 确保 app 容器占满整个视口 */\n#app {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin: 0 auto;\n  /* 居中 */\n  max-width: 600px;\n  /* 设置最大宽度 */\n  padding: 0 20px;\n  /* 添加一些左右内边距 */\n}\n\n/* 调整 el-container 样式 */\n.el-container {\n  min-height: 100vh;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n}\n\n/* 调整 el-header 样式 */\n.el-header {\n  background-color: #333333;\n  color: white;\n  height: 50px;\n  line-height: 50px;\n  font-size: 18px;\n  font-weight: bold;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1000;\n}\n\n/* 调整 el-main 样式 */\n.el-main {\n  padding: 70px 0 20px;\n  /* 增加顶部内边距以避免被固定header遮挡 */\n  flex-grow: 1;\n}\n\n.el-card {\n  margin-bottom: 20px;\n}\n\n.info-row {\n  margin-bottom: 10px;\n}\n\n.input-label {\n  margin-bottom: 5px;\n  text-align: left;\n}\n\n.el-input {\n  margin-bottom: 10px;\n}\n\n/* 通用按钮样式 */\n.wallet-actions .el-button,\n.transaction .el-button,\n.clear-cache .el-button {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 40px;\n}\n\n.wallet-actions .el-button span,\n.transaction .el-button span,\n.clear-cache .el-button span {\n  margin: 0 auto;\n}\n\n/* 按钮行间距 */\n.wallet-actions .button-row,\n.transaction .button-row {\n  margin-bottom: 8px;\n}\n\n.wallet-actions .button-row:last-child,\n.transaction .button-row:last-child {\n  margin-bottom: 0;\n}\n\n/* 调整图标和文字的对齐 */\n.wallet-actions .el-button [class^=\"el-icon-\"],\n.transaction .el-button [class^=\"el-icon-\"],\n.clear-cache .el-button [class^=\"el-icon-\"] {\n  margin-right: 5px;\n  vertical-align: middle;\n}\n\n/* 新增：调整发送交易按钮与输入框的间距 */\n.transaction .el-row:not(:last-child) {\n  margin-bottom: 10px;\n}\n\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.modal-content {\n  background-color: white;\n  padding: 20px;\n  border-radius: 8px;\n  text-align: center;\n  position: relative;\n  max-width: 90%;\n  width: 400px;\n}\n\n.close-button {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  font-size: 24px;\n  border: none;\n  background: none;\n  cursor: pointer;\n}\n\n/* 响应式调整 */\n@media (max-width: 600px) {\n  #app {\n    padding: 0 10px;\n  }\n\n  .el-main {\n    padding: 60px 0 10px;\n  }\n}\n</style>\n<script>\nimport {OKX_CONNECT_ERROR_CODES, safeJsonStringify,getAppWalletDeepLink,getUniversalLink} from \"@okxconnect/core\"\nimport {\n  OKXBtcProvider,\n  OKXUniversalProvider,\n  OKXCosmosProvider,\n  OKXTonProvider,\n  OKXTronProvider,\n  OKXStarknetProvider\n} from \"@okxconnect/universal-provider\"\nimport {OKXSolanaProvider} from \"@okxconnect/solana-provider\";\nimport {\n  Connection,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n  TransactionMessage,\n  VersionedTransaction\n} from '@solana/web3.js';\nimport {OKXSuiProvider as SuiAdapter} from \"@okxconnect/sui-provider\"\nimport QrcodeVue from 'qrcode.vue'\n\nimport {OKXAptosProvider} from \"@okxconnect/aptos-provider\";\nimport {Aptos, AptosConfig, Network} from \"@aptos-labs/ts-sdk\";\n\nimport BTCPanel from \"./components/BtcTransactionPanel.vue\";\nimport FractalPanel from \"./components/FractalTransactionPanel.vue\"\nimport SuiPanel from \"./components/SuiTransactionPanel.vue\";\nimport StarknetPanel from \"./components/StarknetTransactionPanel.vue\";\n\nimport {OKXUniversalConnectUI, THEME} from \"@okxconnect/ui\";\nimport {ethers} from 'ethers';\nimport VConsole from 'vconsole';\nimport nacl from \"tweetnacl\";\nconst { verifyADR36Amino } = require('@keplr-wallet/cosmos')\nconst { fromBech32 } = require('@cosmjs/encoding')\nimport { verifyPersonalMessageSignature } from '@mysten/sui/verify';\nimport {useShortLink} from \"@okxconnect/core\";\nimport TronTransactionPanel from \"@/components/TronTransactionPanel.vue\";\nimport {TronWeb} from \"tronweb\";\nimport { RpcProvider as StarknetRpcProvider, Account as StarknetAccount } from \"starknet\";\nimport { ref, toRaw } from \"vue\";\nnew VConsole();\n\nconst allChains = {\n  1: { name: \"Eth\", checked: false },\n  56: { name: \"BNB\", checked: false },\n  137: { name: \"Polygon\", checked: false },\n  122: { name: \"Fuse\", checked: false },\n  \"ton:-239\":{name: \"TON\",checked: false},\n  \"btc:mainnet\": { name: \"BTC\", checked: false },\n  \"sui:mainnet\": { name: \"Sui\", checked: false },\n  \"aptos:mainnet\": { name: \"Aptos\", checked: false },\n  \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\": {\n    name: \"Solana\",\n    checked: false,\n  },\n  \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\": {\n    name: \"Sol testnet\",\n    checked: false,\n  },\n  \"svm:70000062\": {\n    name: \"Sonic testnet\",\n    checked: false,\n  },\n  \"movement:testnet\": { name: \"Movement\", checked: false },\n  \"fractal:mainnet\": { name: \"Fractal\", checked: false },\n  \"cosmos:osmosis-1\": {name: \"Osmos\", checked: false},\n  \"cosmos:cosmoshub-4\": {name: \"Cosmos\", checked: false},\n  \"cosmos:pacific-1\": {name: \"SEI\", checked: false},\n  \"cosmos:abvdefg\": {name: \"cosmos:abvdefg\", checked: false},\n  \"tron:mainnet\": {name: \"tron\", checked: false},\n  997865: { name: \"Non Exist chain\", checked: false },\n  2020: { name: \"Ronin\", checked: false },\n  1666600000: { name: \"Harmony\", checked: false },\n  \"starknet:mainnet\": { name: \"starknet\", checked: false }\n};\n\nconst chainsThatCanAddRedirectParam = [\n  \"eip\"\n]\n\nvar optionChains = new Set([]);\nvar selectedModals = [\"before\", \"success\", \"error\"];\nvar selectedReturnStrategy = \"none\";\nvar selectedDeepLink = \"tg://resolve\";\nvar selectedLanguage = \"en_US\";\nvar selectedTheme = THEME.LIGHT;\n\n// import QrcodeVue from 'qrcode.vue'\nexport default {\n  name: \"App\",\n  components: {\n    TronTransactionPanel,\n    QrcodeVue,\n    BTCPanel,\n    FractalPanel,\n    SuiPanel,\n    StarknetPanel\n  },\n\n  setup() {\n    const sendBtnDisabled = ref(false)\n\n    return {\n      sendBtnDisabled\n    }\n  },\n  data: () => {\n    return {\n      activeTab: \"eip155:1\",\n      testTopic: \"\",\n      testPublicKey: \"\",\n      testProofPayload: \"\",\n      tonProofValue:\"\",\n      pendingDeepLink: \"-\",\n      logList: [],\n      connectReady: false,\n      connectStatusStr: \"Connect\",\n      syncAllAddressStr: \"syncAllAddress\",\n      connectInitStr: \"init test\",\n      disconnectStatusStr: \"Disconnect\",\n      localPubKey: \"\",\n      localSecKey: \"\",\n      testTransaction: \"\",\n      selectedChain: \"eip155:1\",\n      testTransactionStr: \"Send\",\n      walletAddress: \"\",\n      testboc: \"\",\n      ProofPayloadVerify: \"\",\n      showModal: false,\n      showVerifyRow: false,\n      qrValue: \"https://www.okx.com/download\",\n      currentStatus: \"\",\n      areChainsInit: false,\n      availableChains: allChains,\n      isOptionalChecked: (chainId) => {\n        return optionChains.has(chainId);\n      },\n      withUI: localStorage.getItem(\"autoRefresh\") != \"false\",\n      universalToTG: localStorage.getItem(\"universalToTG\") != \"false\",\n      modals: selectedModals,\n      returnStrategies: [\"none\", \"back\", \"deeplink\"],\n      returnStrategy: selectedReturnStrategy,\n      deeplink: selectedDeepLink,\n      locales: [\n        \"en_US\",\n        \"ru_RU\",\n        \"zh_CN\",\n        \"zh\",\n        \"ar_AE\",\n        \"cs_CZ\",\n        \"de_DE\",\n        \"es_ES\",\n        \"es_LAT\",\n        \"fr_FR\",\n        \"id_ID\",\n        \"it_IT\",\n        \"nl_NL\",\n        \"pl_PL\",\n        \"pt_BR\",\n        \"pt_PT\",\n        \"ro_RO\",\n        \"tr_TR\",\n        \"uk_UA\",\n        \"vi_VN\",\n        \"zh_TW\"\n      ],\n      selectedMethod:[],\n      selectedMethodData:[],\n      connectMethods:[\n        \"wallet_addEthereumChain(ETH)\",\n        \"personal_sign(ETH)\",\n        \"solana_signMessage(Sol mainnet)\",\n        \"sui_signMessage(Sui mainnet)\",\n        \"sui_signPersonalMessage(Sui mainnet)\",\n        \"btc_signMessage(BTC)\",\n        \"aptos_signMessage(aptos mainnet)\",\n        \"cosmos_signArbitrary(cosmoshub)\",\n        \"test_noSupport_eth(ETH)\",\n        \"tron_signMessage\",\n        \"tron_signMessageV2\",\n        \"starknet_signMessage\",\n        \"sync_all_addresses\"\n      ],\n\n      language: selectedLanguage,\n      theme: selectedTheme,\n      THEME: THEME,\n      redirect: selectedReturnStrategy,\n      redirectDeeplink: selectedDeepLink,\n      handleWithUI: (isChecked) => {\n        localStorage.setItem(\"autoRefresh\", `${isChecked}`);\n        location.reload();\n      },\n      handleUniversalToTG: (isChecked) => {\n        localStorage.setItem(\"universalToTG\", `${isChecked}`);\n      },\n      handleOptionChange: (chainId) => {\n        if (optionChains.has(chainId)) {\n          optionChains.delete(chainId);\n        } else {\n          optionChains.add(chainId);\n        }\n      },\n      starknetPanelTypedData: ''\n    };\n  },\n  computed: {\n    getWalletAddress: function () {\n      return this.walletAddress;\n    },\n  },\n  methods: {\n    isChecked(chainId) {\n      return this.selectedChains.has(chainId);\n    },\n\n    initChains(newChains) {\n      if (newChains.length > 0) {\n        const updatedChains = Object.assign({}, this.availableChains);\n        for (const chainId of newChains) {\n          if (updatedChains[chainId]){\n            updatedChains[chainId].checked = !updatedChains[chainId].checked;\n          }\n        }\n        this.availableChains = updatedChains;\n      }\n\n      this.areChainsInit = true;\n    },\n\n    async clickActiveTab(tab) {\n      const tabName = tab.props ? tab.props.name : tab.name;\n      this.selectedChain = tabName;\n      console.log(`已切换到链 :`, tabName);\n\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      if (tabName == \"starknet:mainnet\") {\n        this.sendBtnDisabled = true\n      }else {\n        this.sendBtnDisabled = false\n      }\n\n      window.provider.setDefaultChain(this.selectedChain);\n    },\n\n    async initBtnClicked() {\n      window.okxLogDebug = true\n      var initCall;\n      if (!this.withUI) {\n        initCall = OKXUniversalProvider.init({\n          dappMetaData: {\n            name: \"univer test dapp\",\n            icon: \"https://avatars.githubusercontent.com/u/37784886\",\n          },\n        });\n      } else {\n        initCall = OKXUniversalConnectUI.init({\n          dappMetaData: {\n            icon: \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\",\n            name: \"OKX WalletConnect UI Demo\",\n          },\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: 'all',\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme\n          },\n        });\n      }\n\n      initCall.then((provider) => {\n        window.provider = provider;\n        window.tonProvider = new OKXTonProvider(window.provider);\n        window.tonProvider.onStatusChange((walletInfo) => {\n              console.log('TONConnection onStatusChange:', JSON.stringify(walletInfo));\n            }, (err) => {\n              console.log('TONConnection onStatusChange error:', err);\n            }\n        )\n\n        if (window.provider instanceof OKXUniversalConnectUI) {\n          window.provider.onModalStateChange((state)=>{\n            console.log(`onModalStateChange   ${JSON.stringify(state)}`)\n          })\n        }\n\n        console.log(\"init finished:\", provider);\n        console.log(\"init finished session:\", JSON.stringify(provider.session));\n\n        if (provider.session?.namespaces) {\n          const newChains = [];\n          console.log(\"namespaces\", provider.session.namespaces);\n          Object.entries(provider.session.namespaces).forEach(([key, value]) => {\n            if (key === \"eip155\") {\n              value.chains.forEach((chain) => {\n                newChains.push(parseInt(chain.substring(7)));\n              });\n            }\n            else {\n              value.chains.forEach((chain) => {\n                newChains.push(chain);\n              });\n            }\n          });\n\n          console.log(\"existing chains:\", newChains);\n          this.initChains(newChains);\n        } else {\n          this.initChains([]);\n        }\n\n        provider.on(\"display_uri\", (uri) => {\n          if (!useShortLink()){\n            if (this.isPC()) {\n              if (uri && !this.withUI && !this.universalToTG) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          }\n          console.log(\"通知>>>display_uri  ==> \", uri);\n        });\n\n        provider.on(\"connect_signResponse\", (items) => {\n          console.log(\"通知>>>connect_signResponse  ==> \", JSON.stringify(items));\n          this.verifyMessage(items)\n        })\n\n        provider.on(\"short_display_uri\", (uri) => {\n          if (useShortLink()){\n            if (this.isPC()) {\n              if (uri && !this.withUI && !this.universalToTG) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          }\n          console.log(\"通知>>>short_display_uri  ==> \", uri);\n        });\n\n\n        provider.on(\"session_connecting\", () => {\n          if (useShortLink()){\n            alert(\"session_connecting\")\n          }\n          console.log(\"通知>>>session_connecting  ==> \");\n        });\n\n        provider.on(\"connect\", (session) => {\n          console.log(\"通知>>>get connect session\", session);\n        });\n        provider.on(\"reconnect\", (session) => {\n          console.log(\"通知>>>get reconnect session\", session);\n          this.walletAddress = \"connected\";\n        });\n        provider.on(\"disconnect\", ({ topic }) => {\n          console.log(`通知>>>get disconnect  ${topic}`);\n          this.walletAddress = \"disconnecteddddd\";\n        });\n        provider.on(\"session_delete\", ({ topic }) => {\n          console.log(`通知>>>get session_delete  ${topic}`);\n        });\n        provider.on(\"session_update\", (session) => {\n          console.log(`通知>>>get session_update `, JSON.stringify(session));\n        });\n      });\n    },\n\n    async connectBtnClicked() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        this.testTonSdk();\n      } else {\n        console.log(`connectBtnClicked provider not finish init`);\n      }\n    },\n\n    async syncAllAddressClick() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        if (window.provider instanceof OKXUniversalProvider){\n          if (window.provider.connected()){\n            try {\n              let message = await window.provider.syncAllAddresses()\n              if (typeof message == \"string\") {\n                this.testboc = message\n              } else {\n                this.testboc = JSON.stringify(message)\n              }\n            }catch (e) {\n              this.testboc = JSON.stringify(e)\n            }\n          }else{\n            this.testboc = \"not connected\"\n          }\n        }\n\n      } else {\n        console.log(`syncAllAddress provider not finish init`);\n      }\n    },\n\n    async disconnectAction() {\n      try {\n        console.log(\"get disconnect wallet btn clicked\");\n        // await TON.disconnect();\n        var provider = window.provider;\n        await provider.disconnect();\n        this.walletAddress = \"disconnected\";\n      } catch (error) {\n        console.log(\"Disconnect  error ==>> \", error.message);\n        this.currentStatus = error.message;\n      }\n    },\n\n    async eth_requestAccounts() {\n      var data = { method: \"eth_requestAccounts\" };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_chainId() {\n      var data = { method: \"eth_chainId\" };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async wallet_switchEthereumChain() {\n      var data = { method: \"wallet_switchEthereumChain\" };\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async wallet_addEthereumChain() {\n      var data = {\n        method: \"wallet_addEthereumChain\",\n        params: {\n          blockExplorerUrls: [\"https://explorer.fuse.io\"],\n          chainId: \"0x7a\",\n          chainName: \"Fuse\",\n          nativeCurrency: { name: \"Fuse\", symbol: \"FUSE\", decimals: 18 },\n          rpcUrls: [\"https://rpc.fuse.io\"],\n        },\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n    async personal_sign() {\n      if (this.selectedChain === \"eip155:1\") {\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0x1ca023f10e157d148deed210f8bee193657a1eaa7f187909e20a9dc3b071dbc364c41fde37960c05093359f410a061ec8a7dca8c0c39fc7c1e24de8a3329775d1b\n\n        var accounts = await window.provider.request(\n          { method: \"eth_requestAccounts\" },\n          \"eip155:1\"\n        );\n        var address = accounts[0];\n        console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n        var dataETH = {\n          method: \"personal_sign\",\n          params: [\n            \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n            address,\n          ],\n        };\n\n        this.testTransaction = JSON.stringify(dataETH);\n      } else if (\n        this.selectedChain === \"eip155:137\" ||\n        this.selectedChain === \"eip155:122\"\n      ) {\n        // method\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0xebda9cfa2af43999058dffa0107031d1ef7fc0252dca85dcbd22ea097af922ca39b64d509ef61ce42b7641c5840b8a80337ffd1411b13e87e2260a3f1b6c151c1b\n\n        var dataPolygon = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n        this.testTransaction = JSON.stringify(dataPolygon);\n      } else if (this.selectedChain === \"eip155:56\") {\n        var data = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n\n        this.testTransaction = JSON.stringify(data);\n      }\n    },\n\n    async eth_sendTransaction_swap() {\n      var data = {\n        method: \"eth_sendTransaction\",\n        chainId: \"eip155:122\",\n        params: {\n          value: \"0x38d7ea4c68000\",\n          gas: \"0x2665f\",\n          to: \"0xf2614A233c7C3e7f08b1F887Ba133a13f1eb2c55\",\n          from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n          data: \"0x2646478b000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee00000000000000000000000000000000000000000000000000038d7ea4c68000000000000000000000000000620fd5fa44be6af63715ef4e65ddfa0387ad13f5000000000000000000000000000000000000000000000000000000000000001b000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000700301ffff0201602352A9Eb5234466Eac23E59e7B99bCaE79C39c0BE9e53fd7EDaC9F859882AfdDa116645287C629040BE9e53fd7EDaC9F859882AfdDa116645287C62900602352A9Eb5234466Eac23E59e7B99bCaE79C39c01f2F3e73be57031114dd1f4E75c1DD87658be7F0E000bb800000000000000000000000000000000\",\n        },\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_signTypedData_v4() {\n      // method\n      // eth_signTypedData\n      // address\n      // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n      // valid\n      // true\n      // result\n      // 0xa8bb3c6b33a119d2d567c7632195c21988df778006082742125a591f5c633f716107883a37f7de6531a6312a5f69022135bf46fe5ab77905b62c82b3395f985e1b\n      //\n\n      // var data = {\n      //   \"method\": \"eth_signTypedData_v4\",\n      //   \"params\": {\n      //     \"typedDataJson\":\"{\\\"types\\\":{\\\"EIP712Domain\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"version\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"chainId\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"name\\\":\\\"verifyingContract\\\",\\\"type\\\":\\\"address\\\"}],\\\"Person\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"wallet\\\",\\\"type\\\":\\\"address\\\"}],\\\"Mail\\\":[{\\\"name\\\":\\\"from\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"to\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"contents\\\",\\\"type\\\":\\\"string\\\"}]},\\\"primaryType\\\":\\\"Mail\\\",\\\"domain\\\":{\\\"name\\\":\\\"Ether Mail\\\",\\\"version\\\":\\\"1\\\",\\\"chainId\\\":1,\\\"verifyingContract\\\":\\\"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\\\"},\\\"message\\\":{\\\"from\\\":{\\\"name\\\":\\\"Cow\\\",\\\"wallet\\\":\\\"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\\\"},\\\"to\\\":{\\\"name\\\":\\\"Bob\\\",\\\"wallet\\\":\\\"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\\\"},\\\"contents\\\":\\\"Hello, Bob!\\\"}}\"\n      // }}\n\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n        this.selectedChain\n      );\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n      var data = {\n        method: \"eth_signTypedData_v4\",\n        params: [\n          address,\n          {\n            types: {\n              EIP712Domain: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"version\",\n                  type: \"string\",\n                },\n                {\n                  name: \"chainId\",\n                  type: \"uint256\",\n                },\n                {\n                  name: \"verifyingContract\",\n                  type: \"address\",\n                },\n              ],\n              Person: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"wallet\",\n                  type: \"address\",\n                },\n              ],\n              Mail: [\n                {\n                  name: \"from\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"to\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"contents\",\n                  type: \"string\",\n                },\n              ],\n            },\n            primaryType: \"Mail\",\n            domain: {\n              name: \"Ether Mail\",\n              version: \"1\",\n              chainId: 1,\n              verifyingContract: \"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\",\n            },\n            message: {\n              from: {\n                name: \"Cow\",\n                wallet: \"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\",\n              },\n              to: {\n                name: \"Bob\",\n                wallet: \"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\",\n              },\n              contents: \"Hello, Bob!\",\n            },\n          },\n        ],\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_sendTransaction_transfer() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            chainId: \"0x1\",\n            to: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            value: \"0x5af3107a4000\",\n            maxPriorityFeePerGas: \"0x3b9aca00\",\n            gas: \"0x5e56\",\n            maxFeePerGas: \"0x2643b9db8\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gasPrice: \"0x17003f6530\",\n            nonce: \"0x0d30\",\n            data: \"0x\",\n            value: \"0x00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasLimit: \"0x5208\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x5e56\",\n            value: \"0x5af3107a4000\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasPrice: \"0x3b9aca00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            chainId: \"0x38\",\n          },\n        };\n      }else if(this.selectedChain === \"eip155:122\"){\n         data =   {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            value: \"0x0\",\n            chainId: \"0x7a\",\n          }\n        }\n      }\n\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n        this.selectedChain\n      );\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"to\"] = address;\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_approve() {\n      var data = {};\n\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000000000000022d473030f116ddee9f6b43ac78ba3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x582d872a1b094fc48f5de31d3b73f2d9be47def1\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000f6f8096ac575b0\",\n            to: \"0x0b3F868E0BE5597D5DB7fEB59E1CADBb0fdDa50a\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            value: \"0x0\",\n            gas: \"0xe117\",\n            gasPrice: \"0xb2d05e00\",\n            data: \"0x095ea7b300000000000000000000000031c2f6fcff4f8759b3bd5bf0e1084a055615c768ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x5CA42204cDaa70d5c773946e69dE942b85CA6706\",\n          },\n        };\n      }else if (this.selectedChain === 'eip155:122'){\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000000000000013b3\",\n            to: \"0x620fd5fa44BE6af63715Ef4E65DDFA0387aD13F5\",\n          },\n        };\n      }\n\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n        this.selectedChain\n      );\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_mint() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x4cacb\",\n            data: \"0xa64dfa75000000000000000000000000ed688002f3797599db8b4feacfe8b1dda0df1c8d000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cecb15396825a895ff8da8fc2d2c77a234dccee00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f6261667962656968643737366b6177706e71336f6f6a6635693274787a76617737737164656b34616a776472637472703261366f626b70723773792f7b69647dan            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x30795\",\n            data: \"0xa64dfa75000000000000000000000000341b3687f0309778f08f29336b2c4b9c38b9f110000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f62616679626569686a6279676b68747a71376b68377434336266686e676e793236337668766f6578716a6d6e377161716166366e717a64743777712f7b69647dan            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      }\n\n      let str = JSON.stringify(data);\n      console.log(\"-----长度--->\", str.length);\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n          this.selectedChain\n      );\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async wallet_testRpc() {\n      let provider = window.provider;\n      provider.setDefaultChain(\n        `eip155:56`,\n        `https://eth-mainnet.g.alchemy.com/v2/NxUfYJUr-TQtEpLmSXhhD5pXn70GwsyV`\n      );\n      var data = {\n        method: \"eth_getBalance\",\n        params: [\"0x8D97689C9818892B700e27F316cc3E41e17fBeb9\", \"latest\"],\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async wallet_watchAsset() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xe0f63a424a4439cbe457d80e4f4b51ad25b2c56c\",\n              symbol: \"SPX6900\",\n              image:\n                \"https://assets.coingecko.com/coins/images/31401/standard/sticker_%281%29.jpg?1702371083\",\n              decimals: 8,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xeB51D9A39AD5EEF215dC0Bf39a8821ff804A0F01\",\n              symbol: \"LGNS\",\n              image: \"https://polygonscan.com/token/images/originlgns_32.png\",\n              decimals: 9,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0x031b41e504677879370e9dbcf937283a8691fa7f\",\n              symbol: \"FET\",\n              image: \"https://bscscan.com/token/images/fetch_32.png\",\n              decimals: 18,\n            },\n          },\n        };\n      }\n\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async ton_sendTransaction() {\n      var data  = {\n        \"messages\":[{\"address\":\"EQARULUYsmJq1RiZ-YiH-IJLcAZUVkVff-KBPwEmmaQGH6aC\",\"amount\":\"205000000\",\"payload\":\"te6cckEBAgEAhwABbQ+KfqUAAADNgG7tIEATEtAIAO87mQKicbKgHIk4pSPP4k5xhHqutqYgAB7USnesDnCcECwbgQMBAJUlk4VhgBD3JEg1TUr75iTijBghOKm/sxNDXUBl7CD6WMut0Q85x4RafwA/Es89DBXoTxuqxVFxyBbzt9Rav2HBUKl7hmkvLuKHLBCW57aK\"}],\n        \"validUntil\":1792481054,\n        \"network\":'-239'}\n      this.testTransaction = JSON.stringify(data)\n    },\n    ton_getAccount() {\n      this.testTransaction = \"这里是同步获取 不再需要点击 <<发送交易>>\"\n      let result =   window.tonProvider.account()\n      if (result) {\n        this.testboc = JSON.stringify(result);\n      } else {\n        this.testboc = 'null'\n      }\n    },\n\n    async tonUniversalLog() {\n      console.log(\"ton 信息: tonProvider  connected:\",window.tonProvider.connected())\n      console.log(\"ton 信息: tonProvider  account:\",JSON.stringify(window.tonProvider.account()))\n      console.log(\"ton 信息: tonProvider  wallet:\",JSON.stringify(window.tonProvider.wallet()))\n    },\n\n    async sendTransactionAlert() {\n      //\n      const response = await fetch(`https://apitest.fireverse.ai/oauth/okx/getNonce?publicAddress=0x0cecb15396825a895ff8da8fc2d2c77a234dccee`);\n      const data = await response.json();\n      console.log(\"请求数据----\",JSON.stringify(data))\n      await this.personal_sign()\n      if (confirm(\"Are you want to sign message?\")) {\n        this.sendTransaction();\n      }\n\n      // window.open(\"https://www.okx.com/download?deeplink=okx%3A%2F%2Fweb3%2Fwallet%2Fconnect\",'_self')\n    },\n\n    async sendTransaction() {\n      if (this.selectedChain.startsWith(\"aptos\")\n          || this.selectedChain.startsWith(\"movement\")\n          || this.selectedChain.startsWith(\"solana\")\n          || this.selectedChain.startsWith(\"sonic\")\n          || this.selectedChain.startsWith(\"cosmos\")) {\n        return\n      }\n      console.log(\"sendTransaction\", window.provider);\n      console.log(\"sendTransaction内容11------\", this.testTransaction);\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      if (this.testTransaction && window.provider) {\n        // eslint-disable-next-line no-undef\n        const sendData = JSON.parse(this.testTransaction);\n        try {\n          console.log(\"sendTransaction-----22method>>\", sendData.method);\n\n          let chainId = \"eip155:1\";\n          if (this.selectedChain) {\n            chainId = this.selectedChain;\n            console.log(\n              \"sendTransaction-----this.selectedChain>>\",\n              this.selectedChain\n            );\n          }\n          console.log(\"windowOpen[click_1]: \", Date.now());\n          if (chainId == \"sui:mainnet\") {\n            const adapter = new SuiAdapter(window.provider);\n            var suiResult = \"invalid result\";\n            if (this.currentSuiMethod == 'sui_getAccount') {\n              let result = adapter.getAccount()\n              if (typeof result == \"string\") {\n                this.testboc = result\n              } else {\n                this.testboc = JSON.stringify(result)\n              }\n            }\n            if (this.currentSuiMethod == \"sui_signTransaction\") {\n              suiResult = await adapter.signTransaction(\n                this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signAndExecuteTransaction\") {\n              suiResult = await adapter.signAndExecuteTransaction(\n                this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signMessage\") {\n              console.log(\"signMessage----\", this.currentSuiTransaction);\n              suiResult = await adapter.signMessage(this.currentSuiTransaction);\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_signPersonalMessage\") {\n              console.log(\n                \"signPersonalMessage----\",\n                this.currentSuiTransaction\n              );\n              suiResult = await adapter.signPersonalMessage(\n                this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_testRpc\") {\n              console.log(\"test rpc----\", this.currentSuiTransaction);\n              console.log(\n                `请求数据发送 rpc ----->> ${JSON.stringify(sendData)}`\n              );\n              const res = await window.provider.request(sendData, chainId);\n              console.log(`请求数据回调 rpc ----->> ${JSON.stringify(result)}`);\n              if (typeof res == \"string\") {\n                this.testboc = res;\n              } else {\n                this.testboc = JSON.stringify(res);\n              }\n            }\n            console.log(\"windowOpen[click_2]: \", Date.now());\n            return;\n          }else if(chainId === \"ton:-239\"){\n            console.log(\n                `请求数据发送 sendTransaction ---ton-->> ${JSON.stringify(sendData)}`\n            );\n            let result =  await window.tonProvider.sendTransaction(sendData)\n            console.log(\n                `请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`\n            );\n            if (typeof result == \"string\") {\n              this.testboc = result;\n            } else {\n              this.testboc = JSON.stringify(result);\n            }\n            return\n          }\n\n          if (chainId == 'btc:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var btcResult = 'invalid result'\n\n            if (this.currentBtcMethod == 'btc_signMessage') {\n              btcResult = await btcAdapter.signMessage(chainId, this.currentBtcTransaction[\"signStr\"])\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_send') {\n              btcResult = await btcAdapter.send(chainId, this.currentBtcTransaction)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signPsbt') {\n              btcResult = await btcAdapter.signPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n\n              this.hexToBase64(btcResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentBtcMethod == 'btc_signPsbts') {\n              btcResult = await btcAdapter.signPsbts(chainId, this.currentBtcTransaction.psbtHexs, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_sendInscription') {\n              btcResult = await btcAdapter.sendInscription(chainId, this.currentBtcTransaction.address, this.currentBtcTransaction.inscriptionId, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signAndPushPsbt') {\n              btcResult = await btcAdapter.signAndPushPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            }else if (this.currentBtcMethod == 'btc_sendBitcoin') {\n              btcResult = await btcAdapter.sendBitcoin(chainId, this.currentBtcTransaction.toAddress, this.currentBtcTransaction.satoshis, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            }else if (this.currentBtcMethod == 'btc_getAccount'){\n              btcResult = btcAdapter.getAccount(chainId)\n              this.testboc = JSON.stringify(btcResult)\n            }\n\n            return\n          }\n\n          if (chainId == 'fractal:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var fractalResult = 'invalid result'\n\n            if (this.currentFractalMethod == 'fractal_signMessage') {\n              fractalResult = await btcAdapter.signMessage(chainId, this.currentFractalTransaction['signStr'])\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_send') {\n              fractalResult = await btcAdapter.send(chainId, this.currentFractalTransaction)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signPsbt') {\n              fractalResult = await btcAdapter.signPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.hexToBase64(fractalResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentFractalMethod == 'fractal_signPsbts') {\n              fractalResult = await btcAdapter.signPsbts(chainId, this.currentFractalTransaction.psbtHexs, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_sendInscription') {\n              fractalResult = await btcAdapter.sendInscription(chainId, this.currentFractalTransaction.address, this.currentFractalTransaction.inscriptionId, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signAndPushPsbt') {\n              fractalResult = await btcAdapter.signAndPushPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            }else if (this.currentFractalMethod == 'fractal_sendBitcoin') {\n              fractalResult = await btcAdapter.sendBitcoin(chainId, this.currentFractalTransaction.toAddress, this.currentFractalTransaction.satoshis, this.currentFractalTransaction.options)\n\n              this.testboc = JSON.stringify(fractalResult)\n            }else if (this.currentFractalMethod == 'fractal_getAccount'){\n              fractalResult = btcAdapter.getAccount(chainId)\n              this.testboc = JSON.stringify(fractalResult)\n            }\n\n            return\n          }\n\n          console.log(`请求数据发送 sendTransaction ----->> ${JSON.stringify(sendData)}`)\n          var result = await window.provider.request(sendData, chainId)\n          console.log(`请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`)\n\n          console.log(\"windowOpen[click_3]: \", Date.now());\n          if (typeof result == \"string\") {\n            this.testboc = result;\n          } else {\n            this.testboc = JSON.stringify(result);\n          }\n          console.log(\"方法数据回调 --this.testboc--\", this.testboc);\n        } catch (error) {\n          console.error(\"方法数据回调失败 --Error--\", error.message);\n\n          if (error.code === OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n            this.testboc = error.message;\n          } else {\n            this.testboc = \"wrong signature！\" + error.message;\n          }\n        }\n      } else {\n        alert(\"Please input transaction data\");\n      }\n    },\n\n    hexToBase64(hexStr) {\n      var bytes = [];\n      for (var i = 0; i < hexStr.length; i += 2) {\n        bytes.push(parseInt(hexStr.substr(i, 2), 16));\n      }\n      const buffer = new Uint8Array(bytes)\n      const blob = new Blob([buffer]);\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = function (e) {\n          var base64Data = e.target.result.split(\",\")[1]\n          resolve(base64Data);\n        };\n        reader.onerror = function (e) {\n          reject(e);\n        };\n        reader.readAsDataURL(blob);\n      });\n    },\n    testBase64UrlSafe(){\n      let datatest = {\"protocolVer\":1,\"topic\":\"8a7a4c3be73802d0ae2587123ade7bb79f27433b9aa3ca589a2208a2089eecfd\",\"clientId\":\"5f1bbf9eac92160affa7ef04d0a710817ddb6d8c22ebbd6263e86f059930b404\",\"requestId\":\"1731383250054\",\"dAppInfo\":{\"url\":\"connect.oker.vip\",\"origin\":\"https://connect.oker.vip\",\"name\":\"univer test dapp\",\"icon\":\"https://avatars.githubusercontent.com/u/37784886\"},\"requests\":[{\"name\":\"requestAccounts\",\"requiredNamespaces\":[{\"namespace\":\"aptos\",\"chains\":[\"aptos:637\"]}],\"optionalNamespaces\":[],\"connectRequestMethods\":[{\"chainId\":\"aptos:637\",\"method\":\"aptos_signMessage\",\"params\":{\"data\":{\"address\":true,\"application\":true,\"chainId\":true,\"message\":\"123 中文测试!\",\"nonce\":\"1234\"},\"applicationUrl\":\"https://connect.oker.vip\",\"prefix\":\"APTOS\",\"aptosChainId\":\"1\"}}]}],\"redirect\":\"none\"}\n      let json = JSON.stringify(datatest)\n      const utf8Array = new TextEncoder().encode(json);\n      let binary = '';\n      utf8Array.forEach(byte => {\n        binary += String.fromCharCode(byte);\n      });\n\n      let firstStr =  btoa(binary)\n      console.log(\"字符串编码1>>>>\",firstStr)\n      firstStr = firstStr.replace(/\\+/g, '-')  // 替换 '+'\n      console.log(\"字符串编码2>>>>\",firstStr)\n      firstStr = firstStr.replace(/\\//g, '_')  // 替换 '/'\n      console.log(\"字符串编码3>>>>\",firstStr)\n      firstStr = firstStr.replace(/=+$/, '');  // 移除 '=';\n      console.log(\"字符串编码4>>>>\",firstStr)\n\n      let showUrl =  getUniversalLink(getAppWalletDeepLink(firstStr))\n      console.log(\"字符串编码5>>>>\",showUrl)\n      this.qrValue = showUrl;\n      this.showModal = true;\n    },\n\n\n    async testTonSdk() {\n      // 1. connect\n      //  create sub providers for each namespace/chain\n      let nameSpacesChains = [];\n      let optSpaceChains = [];\n\n      let solanaChains = [\n        \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n        \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n        \"svm:70000062\",\n      ];\n      let hasEip155, hasSolana, hasSui, hasBtc, hasAptos, hasTon, hasCosmos, hasTron, hasStarknet = false\n\n      let suiChains = [\n        \"sui:mainnet\",\n      ];\n\n      let btcChains = [\n        \"btc:mainnet\",\n        \"fractal:mainnet\"\n      ];\n\n      const chains = Object.entries(this.availableChains)\n          .filter((chain) => chain[1].checked)\n          .map((chain) => chain[0]);\n      console.log(`chains  ===> ${chains.values()}`)\n      chains.forEach(function (chainId) {\n        console.log(`chains.forEach chainId  ===> ${chainId}`)\n\n        if (solanaChains.includes(chainId)) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"ton\")) {\n          nameSpacesChains.push(chainId)\n          hasTon = true\n          return\n        }\n        if (typeof chainId == 'string' && (chainId.startsWith(\"aptos\") || chainId.startsWith(\"movement\"))) {\n          nameSpacesChains.push(chainId)\n          hasAptos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId)\n          hasSolana = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"cosmos\")) {\n          nameSpacesChains.push(chainId)\n          hasCosmos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"tron\")) {\n          nameSpacesChains.push(chainId)\n          hasTron = true\n          return\n        }\n\n        if (typeof chainId == 'string' && chainId.startsWith(\"starknet\")) {\n          nameSpacesChains.push(chainId)\n          hasStarknet = true\n          return\n        }\n\n        if (suiChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`);\n          nameSpacesChains.push(chainId);\n          hasSui = true;\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`)\n          nameSpacesChains.push(chainId)\n          hasBtc = true\n          return\n        }\n\n        hasEip155 = true\n        nameSpacesChains.push(`eip155:${chainId}`)\n      })\n\n\n      optionChains.forEach(function (chainId) {\n        if (solanaChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n        if (typeof chainId == \"string\" && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (suiChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          optSpaceChains.push(chainId)\n          return\n        }\n\n        if (chainId.startsWith('ton')) {\n          optSpaceChains.push(chainId)\n          return\n        }\n\n        optSpaceChains.push(`eip155:${chainId}`)\n      })\n\n      console.log(`namespaceChains  ===> ${JSON.stringify(nameSpacesChains)}`);\n      var connectData = {};\n      if (nameSpacesChains && nameSpacesChains.length > 0) {\n        var requireData = {};\n\n        if (hasEip155) {\n          requireData.eip155 = {\n            chains: nameSpacesChains.filter((item) =>\n              item.startsWith(\"eip155\")\n            ),\n            defaultChain: nameSpacesChains.filter((item) =>\n              item.startsWith(\"eip155\")\n            )[0],\n          };\n        }\n        if (hasSolana) {\n          requireData.solana = {\n            chains: nameSpacesChains.filter(\n              (item) =>\n                item.startsWith(\"solana\") ||\n                item.startsWith(\"sonic\") ||\n                item.startsWith(\"svm\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n              (item) =>\n                item.startsWith(\"solana\") ||\n                item.startsWith(\"sonic\") ||\n                item.startsWith(\"svm\")\n            )[0],\n          };\n        }\n\n        if (hasCosmos) {\n          requireData.cosmos = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            )[0],\n          }\n        }\n        if (hasTron) {\n          requireData.tron = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            )[0],\n          }\n        }\n        if (hasStarknet) {\n          requireData.starknet = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"starknet\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"starknet\")\n            )[0],\n          }\n        }\n        if (hasTon) {\n\n          //\n          let tonParams = {\n            ton_addr:{\n              name: 'ton_addr',\n            }\n          };\n          if (this.tonProofValue){\n            tonParams = {\n              ton_addr:{\n                name: 'ton_addr',\n              },\n              ton_proof:{\n                name: 'ton_proof',\n                payload: this.tonProofValue,\n              }\n            };\n          }\n\n\n          requireData.ton = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"ton\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"ton\"))[0],\n            params:tonParams\n          };\n        }\n\n        if (hasSui) {\n          requireData.sui = {\n            chains: nameSpacesChains.filter((item) => item.startsWith(\"sui\")),\n            defaultChain: nameSpacesChains.filter((item) =>\n              item.startsWith(\"sui\")\n            )[0],\n            rpcMap: {\n              \"sui:mainnet\": \"https://www.okx.com/fullnode/sui/discover/rpc\"\n            }\n          };\n        }\n        if (hasAptos) {\n          requireData.aptos = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\"))[0]\n          }\n        }\n\n        if (hasBtc) {\n          let btcChains = nameSpacesChains.filter(item => item.startsWith(\"btc\") || item.startsWith(\"fractal\"))\n          requireData.btc = {\n            chains: btcChains,\n            defaultChain: btcChains[0]\n          }\n        }\n        console.log(`requireData  ===> ${JSON.stringify(requireData)}`)\n        connectData['namespaces'] = requireData;\n        console.log(JSON.stringify(connectData))\n      }\n\n      if (optSpaceChains && optSpaceChains.length > 0) {\n        const optData = {};\n\n        const eip155Chains = optSpaceChains.filter((item) => item.startsWith(\"eip155\"));\n        if (eip155Chains.length > 0) {\n          optData[\"eip155\"] = {\n            chains: eip155Chains,\n            defaultChain: eip155Chains[0],\n          };\n        }\n\n        const solanaChains = optSpaceChains.filter((item) => item.startsWith(\"solana\"));\n        if (solanaChains.length > 0) {\n          optData[\"solana\"] = {\n            chains: solanaChains,\n            defaultChain: solanaChains[0],\n          };\n        }\n\n        const tonChains = optSpaceChains.filter((item) => item.startsWith(\"ton\"));\n        if (tonChains.length > 0) {\n\n          let tonParams = {\n            ton_addr:{\n              name: 'ton_addr',\n            }\n          };\n          if (this.tonProofValue){\n            tonParams = {\n              ton_addr:{\n                name: 'ton_addr',\n              },\n              ton_proof:{\n                name: 'ton_proof',\n                payload: this.tonProofValue,\n              }\n            };\n          }\n\n\n          optData[\"ton\"] = {\n            chains: tonChains,\n            defaultChain: tonChains[0],\n            params: tonParams\n          };\n        }\n\n        const btcChains = optSpaceChains.filter((item) => item.startsWith(\"btc\"));\n        if (btcChains.length > 0) {\n          optData[\"btc\"] = {\n            chains: btcChains,\n            defaultChain: btcChains[0],\n          };\n        }\n\n        connectData[\"optionalNamespaces\"] = optData;\n      }\n\n      if (nameSpacesChains.length === 0 && optSpaceChains.length === 0) {\n        //未选择链\n        alert(\"Please select a chain from above to continue\");\n        return;\n      }\n      console.log(\"=====>connectData \");\n      console.log(connectData);\n\n      var connectMethod;\n      let signMethods = this.getCurrentSelectedMethodData();\n      if (window.provider instanceof OKXUniversalConnectUI) {\n        if (signMethods && signMethods.length>0){\n          connectMethod = window.provider.openModalAndSign(connectData,JSON.parse(JSON.stringify(signMethods)));\n        }else {\n          connectMethod = window.provider.openModal(connectData);\n        }\n      } else {\n        if (this.universalToTG){\n          connectData.sessionConfig = {\n            useMini:true,\n            openUniversalUrl:true,\n            tmaReturnUrl:'back'\n          }\n        }else{\n          connectData.sessionConfig = {\n            redirect: selectedReturnStrategy\n          }\n        }\n        if (signMethods && signMethods.length>0){\n          connectMethod = window.provider.connectAndSign(connectData,JSON.parse(JSON.stringify(signMethods)));\n        }else {\n          connectMethod = window.provider.connect(connectData);\n        }\n      }\n\n      await connectMethod\n        .then((result) => {\n          // 2. set defaul chain\n          this.walletAddress = \"connected\";\n          if (this.isPC()) {\n            this.showModal = false;\n          }\n          if (result){\n            this.testboc = JSON.stringify(result)\n          }\n\n          if (window.provider.session && window.provider.session.namespaces){\n            let ton = window.provider.session.namespaces[\"ton\"];\n          console.log(\"是否包含ton\",ton)\n            if (ton){\n              this.tonUniversalLog()\n            }\n          }\n        })\n        .catch((error) => {\n          if (error.code == 301) {\n            setTimeout(() => {\n              alert(error.message)\n            }, 0.5);\n          } else if (error.message){\n            alert(error.message)\n          }\n          console.error(\"发生了错误：\", error);\n        });\n    },\n\n    getCurrentSelectedMethodData(){// 连接签名\n      var methodList = [];\n      this.selectedMethod.forEach(method =>{\n        switch (method) {\n          case \"wallet_addEthereumChain(ETH)\":\n            methodList.push({\n              method: \"wallet_addEthereumChain\",\n              chainId:\"eip155:1\",\n              params: {\n                blockExplorerUrls: [\"https://explorer.fuse.io\"],\n                chainId: \"0x7a\",\n                chainName: \"Fuse\",\n                nativeCurrency: { name: \"Fuse\", symbol: \"FUSE\", decimals: 18 },\n                rpcUrls: [\"https://rpc.fuse.io\"],\n              },\n            })\n            break;\n          case \"personal_sign(ETH)\":\n            methodList.push(\n              {\n                method: \"personal_sign\",\n                chainId: \"eip155:1\",\n                params: [\n                  \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n                ],\n              });\n            break;\n          case \"solana_signMessage(Sol mainnet)\":\n            methodList.push(\n              {\n                \"chainId\": \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n                \"method\": \"solana_signMessage\",\n                \"params\": {\n                  \"message\": \"Hello Solana\",\n                }\n              }\n            );\n            break;\n          case \"sui_signMessage(Sui mainnet)\":\n          case \"sui_signPersonalMessage(Sui mainnet)\": {\n            let suiData = [\n              76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n              109, 111, 118, 101,\n            ];\n            let uint8Array = new Uint8Array(suiData);\n            let currentMethod = \"sui_signMessage\";\n            this.currentSuiTransaction = {\n              message:uint8Array\n            }\n\n            if(method.startsWith(\"sui_signPersonalMessage\")){\n              currentMethod = \"sui_signPersonalMessage\";\n            }\n            methodList.push(\n                {\n                  method: currentMethod,\n                  chainId: \"sui:mainnet\",\n                  params: {\n                    message: uint8Array,\n                  }\n                }\n            );\n            break;\n          }\n          case \"btc_signMessage(BTC)\":\n            methodList.push(\n              {\n                method: \"btc_signMessage\",\n                chainId: \"btc:mainnet\",\n                params: {\n                  message: \"Welcome to BTC\"\n                }\n              }\n            )\n            break;\n          case \"aptos_signMessage(aptos mainnet)\":\n            methodList.push(\n              {\n                \"chainId\": \"aptos:mainnet\",\n                \"method\": \"aptos_signMessage\",\n                \"params\": {\n                  address: true,\n                  application: true,\n                  chainId: true,\n                  message: \"Hello Aptos\",\n                  nonce: \"1234\"\n                }\n              }\n            )\n            break;\n          case \"cosmos_signArbitrary(cosmoshub)\":\n            methodList.push(\n                {\n                  \"chainId\": \"cosmos:cosmoshub-4\",\n                  \"method\": \"cosmos_signArbitrary\",\n                  \"params\": {\n                    message: \"test cosmos\"\n                  }\n                }\n            )\n\n            break;\n          case \"test_noSupport_eth(ETH)\":\n            methodList.push(\n                {\n                  chainId: \"eip155:1\",\n                  method: \"test_noSupport_eth\",\n                  params: {\n                    message: \"test hello\",\n                  }\n                }\n            )\n            break;\n          case \"sync_all_addresses\":\n            methodList.push(\n                {\n                  method: \"sync_all_addresses\",\n                });\n            break;\n          case \"tron_signMessage\":\n            methodList.push(\n                {\n                  chainId:\"tron:mainnet\",\n                  method: \"tron_signMessage\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n          case \"tron_signMessageV2\":\n            methodList.push(\n                {\n                  chainId:\"tron:mainnet\",\n                  method: \"tron_signMessageV2\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n\n            //\n          case \"starknet_signMessage\": {\n            const signData = {\n              \"domain\": {\n                \"chainId\": \"0x534e5f4d41494e\",\n                \"name\": \"STRKFarm\",\n                \"version\": \"1\"\n              },\n              \"message\": {\n                \"document\": \"app.strkfarm.xyz/tnc/v1\",\n                \"message\": \"Read and Agree T&C\"\n              },\n              \"primaryType\": \"Tnc\",\n              \"types\": {\n                \"StarkNetDomain\": [\n                  {\n                    \"name\": \"name\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"version\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"chainId\",\n                    \"type\": \"felt\"\n                  }\n                ],\n                \"Tnc\": [\n                  {\n                    \"name\": \"message\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"document\",\n                    \"type\": \"felt\"\n                  }\n                ]\n              }\n            }\n            methodList.push({\n              chainId:\"starknet:mainnet\",\n              method: \"starknet_signMessage\",\n              params: {\n                accountAddress: \"\",\n                typedData: signData\n              }\n            })\n          }\n            break\n          default:\n\n            break;\n        }\n      })\n      this.selectedMethodData = methodList\n      return methodList\n\n    },\n\n    closeModal() {\n      this.showModal = false;\n    },\n\n    isPC() {\n      const userAgentInfo = navigator.userAgent;\n      console.log(\"current device ua is ===>\", userAgentInfo);\n\n      const Agents = [\n        \"Android\",\n        \"iPhone\",\n        \"SymbianOS\",\n        \"Windows Phone\",\n        \"iPad\",\n        \"iPod\",\n      ];\n      let flag = true;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = false;\n          break;\n        }\n      }\n      return flag;\n    },\n    isSafariOrChrome() {\n      const userAgentInfo = navigator.userAgent;\n      const Agents = [\"Safari\", \"Chrome\"];\n      let flag = false;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = true;\n          break;\n        }\n      }\n      return flag;\n    },\n\n    /// solana\n    async sol_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      let data = {\n        method: \"solana_signMessage\",\n        params: {\n          message: \"Hello Solana\",\n          pubkey: \"\",\n        },\n      };\n      this.testTransaction = JSON.stringify(data);\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let message = await provider.signMessage(\n          \"Hello Solana\",\n          this.selectedChain\n      );\n      console.log(\"solana_signMessage Result:\",JSON.stringify(message))\n      const result1 = nacl.sign.detached.verify(\n          new TextEncoder().encode(\"Hello Solana\"),\n          message.signature,\n          new PublicKey(message.publicKey).toBytes()\n      );\n      console.log(result1)\n\n      if (typeof message == \"string\") {\n        this.testboc = result1;\n      } else {\n        this.testboc = result1;\n      }\n    },\n\n    async aptos_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      let data = {\n        address: true,\n        application: true,\n        chainId: true,\n        message: \"Hello Aptos\",\n        nonce: \"1234\"\n      }\n\n      let provider = new OKXAptosProvider(window.provider)\n      let message = await provider.signMessage(data, this.selectedChain)\n      this.testTransaction = JSON.stringify(data)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n          functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async move_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async move_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n          functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n        },\n      });\n\n      // let data = {\n      //   \"arguments\": [\"100000\",[\"0\",\"0\",\"10533\"],[\"10\",\"5\",\"5\"],[\"false\",\"false\",\"true\"]],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x3\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\",\"0x73eb84966be67e4697fc5ae75173ca6c35089e802650f75422ab49a8729704ec::coin::DooDoo\",\"0x53a30a6e5936c0a4c5140daed34de39d17ca7fcae08f947c02e979cef98a3719::coin::LSD\",\"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::CurveV1\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x54cb0bb2c18564b86e34539b9f89cfe1186e39d89fce54e1cd007b8e61673a85::bin_steps::X80\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async sol_signVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(\n        provider.getAccount(\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\").address\n      );\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n         recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signTransaction(\n        transaction,\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAndSendVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n        transaction,\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllVersionedTransactions() {\n      let provider = new OKXSolanaProvider(window.provider);\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n        [transaction],\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signTransaction() {\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n         recentBlockhash: blockhash,\n      }).add(\n        SystemProgram.transfer({\n          fromPubkey: new PublicKey(provider.getAccount().address),\n          toPubkey: new PublicKey(provider.getAccount().address),\n          lamports: 1000,\n        })\n      );\n\n      this.testTransaction = safeJsonStringify(transaction)\n      let result = await provider.signTransaction(\n        transaction,\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllTransactions() {\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n        SystemProgram.transfer({\n          fromPubkey: new PublicKey(provider.getAccount().address),\n          toPubkey: new PublicKey(provider.getAccount().address),\n          lamports: \"100\",\n        })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n        [transaction],\n        this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    getSolConnect() {\n      let rpc = \"https://www.okx.com/fullnode/sol/discover/rpc\"\n      if (this.selectedChain === \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\") {\n        rpc = \"https://www.okx.com//fullnode/sol/discover/rpc\"\n      } else if (this.selectedChain === \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\"){\n        rpc = \"https://www.okx.com/fullnode/soltestnet/discover/rpc\"\n      } else if (this.selectedChain === \"svm:70000062\") {\n        rpc = \"https://www.okx.com/fullnode/sonic/testnet/discover/rpc\"\n      }\n      return rpc\n    },\n\n    async sol_signAndSendTransaction() {\n\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n        SystemProgram.transfer({\n          fromPubkey: new PublicKey(provider.getAccount().address),\n          toPubkey: new PublicKey(provider.getAccount().address),\n          lamports: \"100\",\n        })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n        transaction,\n        this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async cosmos_signArbitrary() {\n      let provider = new OKXCosmosProvider(window.provider)\n      let message = await provider.signArbitrary(this.selectedChain, provider.getAccount(this.selectedChain).address, \"test cosmos\")\n      if (typeof message == \"string\") {\n        this.testboc = message;\n      } else {\n        let isValid =  await this.cosmos_verifySignArbitrary(provider.getAccount(this.selectedChain).address,\"test cosmos\",message.signature, message.pub_key.value)\n        console.log(\"verify\",isValid)\n        this.testboc = \"verify:\" + isValid + JSON.stringify(message);\n      }\n    },\n\n    async cosmos_verifySignArbitrary(signer, data, signature, pubkey) {\n      try {\n        console.log(\"cosmos_verifySignArbitrary signer:\",signer)\n        console.log(\"cosmos_verifySignArbitrary data:\",JSON.stringify(data))\n        console.log(\"cosmos_verifySignArbitrary signature:\",signature)\n        console.log(\"cosmos_verifySignArbitrary pubkey:\",pubkey)\n\n        // 将bech32地址转换为公钥\n        const {prefix: prefixStr} = fromBech32(signer)\n\n        const signatureBuffer = Buffer.from(signature, 'base64');\n\n        const uint8Signature = new Uint8Array(signatureBuffer); // Convert the buffer to an Uint8Array\n\n        const pubKeyValueBuffer = Buffer.from(pubkey, 'base64'); // Decode the base64 encoded value\n\n        const pubKeyUint8Array = new Uint8Array(pubKeyValueBuffer); // Convert the buffer to an Uint8Array\n\n        // 验证签名\n        return await verifyADR36Amino(\n            prefixStr,\n            signer,\n            data,\n            pubKeyUint8Array,\n            uint8Signature\n        )\n      } catch (err) {\n        console.error('Verification failed:', err)\n        return false\n      }\n    },\n\n    async cosmos_signAmino(){\n      let provider = new OKXCosmosProvider(window.provider)\n      // const rpcUrl = 'https://osmosis-rpc.publicnode.com:443';\n      // const client = await StargateClient.connect(rpcUrl);\n      // const height = await client.getHeight();\n      // let address = provider.getAccount(this.selectedChain).address\n      // const sequence = await client.getSequence(address)\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      // let signDoc = makeSignDoc(\n      //     transaction.msgs,\n      //     transaction.fee,\n      //     this.selectedChain.split(\":\")[1],\n      //     transaction.memo,\n      //     transaction.accountNumber,\n      //     transaction.sequence,\n      // )\n      let signDoc = {\n        \"chain_id\": \"osmosis-1\",\n        \"account_number\": \"630104\",\n        \"sequence\": \"480\",\n        \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]},\n        \"msgs\": [{\n          \"type\": \"osmosis/poolmanager/swap-exact-amount-in\",\n          \"value\": {\n            \"sender\": \"osmo1u6lts9ng4etxj0zdaxsada6zgl8dudpgelmuyu\",\n            \"routes\": [{\n              \"pool_id\": \"1096\",\n              \"token_out_denom\": \"ibc/987C17B11ABC2B20019178ACE62929FE9840202CE79498E29FE8E5CB02B7C0A4\"\n            }, {\n              \"pool_id\": \"611\",\n              \"token_out_denom\": \"ibc/27394FB092D2ECCD56123C74F36E4C1F926001CEADA9CA97EA622B25F41E5EB2\"\n            }],\n            \"token_in\": {\"denom\": \"uosmo\", \"amount\": \"100\"},\n            \"token_out_min_amount\": \"8\"\n          }\n        }],\n        \"memo\": \"FE\",\n        \"timeout_height\": \"23603788\",\n        \"signOptions\": {\n          \"useOneClickTrading\": false,\n          \"preferNoSetFee\": true,\n          \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]}\n        }\n      }\n\n\n\n\n\n\n\n      // let signOption = {\n      //   memo: true, // optional\n      //   fee: true, // optional\n      //   gasRate: {\n      //     // optional\n      //     average: \"0.2\",\n      //     low: \"0.02\",\n      //     tiny: \"0.002\",\n      //   },\n      // }\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signAmino(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, signDoc)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    messageToBuffer(message) {\n      var buffer = Buffer.from([]);\n      try {\n        if (typeof message === \"string\") {\n          buffer = Buffer.from(message.replace(\"0x\", \"\"), \"hex\");\n        } else {\n          buffer = Buffer.from(message);\n        }\n      } catch (err) {\n        console.log(`messageToBuffer error: ${err}`);\n      }\n      return buffer;\n    },\n\n\n\n    async cosmos_signDirect() {\n      let provider = new OKXCosmosProvider(window.provider)\n\n      let signDoc = {\n        \"bodyBytes\": this.messageToBuffer(\"0x0ac1010a292f6962632e6170706c69636174696f6e732e7472616e736665722e76312e4d73675472616e736665721293010a087472616e7366657212096368616e6e656c2d301a0d0a05756f736d6f120431303030222b6f736d6f3175366c7473396e67346574786a307a64617873616461367a676c386475647067656c6d7579752a2d636f736d6f733175366c7473396e67346574786a307a64617873616461367a676c386475647067337967766a773207080410ebe3f90a3880b0bcafd18cec8218\"),\n        \"authInfoBytes\": this.messageToBuffer(\"0x0a510a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a2102446e19e94ac0e83ea896d2712507577eb39fbdd2d6ae9f0fc0b9759f1fbaba9012040a02080118e00312140a0e0a05756f736d6f1205323530303010859a11\"),\n        \"chainId\": \"osmosis-1\",\n        \"accountNumber\": \"630104\",\n      }\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signDirect(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, transaction)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    sui_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentSuiTransaction = params\n      this.currentSuiMethod = flag\n    },\n\n    btc_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentBtcTransaction = params\n      this.currentBtcMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n\n    fractal_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentFractalTransaction = params\n      this.currentFractalMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n    tron_getTransactionResult(result) {\n      if (typeof result == \"string\") {\n        this.testboc = result\n      } else {\n        this.testboc = JSON.stringify(result)\n      }\n    },\n    tron_generateTransactionParams(params){\n      if (typeof params == \"string\") {\n        this.testTransaction = params\n      } else {\n        this.testTransaction = JSON.stringify(params)\n      }\n    },\n\n    starknet_getTransactionResult(result) {\n      if (typeof result == \"string\") {\n        this.testboc = result\n      } else {\n        this.testboc = JSON.stringify(result)\n      }\n    },\n\n    starknet_generateTransactionParams(params) {\n      if (typeof params == \"string\") {\n        this.testTransaction = params\n      } else {\n        this.testTransaction = JSON.stringify(params)\n      }\n    },\n\n    handleModalsSelect(modals) {\n      selectedModals = modals;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: modals.length === 3 ? \"all\" : modals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n\n    handleReturnStrategySelect(returnStrategy) {\n      selectedReturnStrategy = returnStrategy === \"deeplink\" ? this.deeplink : returnStrategy;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      } else {\n        if (window.provider.sessionConfig) {\n          window.provider.sessionConfig.redirect = selectedReturnStrategy;\n        } else {\n          window.provider.sessionConfig = {\n            redirect: selectedReturnStrategy\n          };\n        }\n      }\n    },\n\n    handleReturnStrategyDeeplink(deeplink) {\n      console.log('handleReturnStrategyDeeplink', deeplink)\n      selectedReturnStrategy = deeplink;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: deeplink,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      } else {\n        if (window.provider.sessionConfig) {\n          window.provider.sessionConfig.redirect = deeplink;\n        } else {\n          window.provider.sessionConfig = {\n            redirect: deeplink\n          };\n        }\n      }\n    },\n\n    handleLanguageSelect(language) {\n      selectedLanguage = language;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: language,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n    handleConnectMethodsSelect() {\n      console.log(\"当前的方法 this.selectedMethod>>>>\",this.selectedMethod);\n    },\n\n    eth_verifyMessage(message, signature,ethAddress) {\n      console.log(\"eth_verifyMessage   message>>>\",message)\n      console.log(\"eth_verifyMessage   signature>>>\",signature)\n      console.log(\"eth_verifyMessage   ethAddress>>>\",ethAddress)\n      if (!message || !signature){\n        return \"\"\n      }\n      let originalMessage = message\n      if (message.startsWith(\"0x\")){\n        originalMessage = originalMessage.replace(/^0x/, '');\n        let str = '';\n        for (let i = 0; i < originalMessage.length; i += 2) {\n          const byte = originalMessage.slice(i, i + 2);\n          str += String.fromCharCode(parseInt(byte, 16));\n        }\n        originalMessage = str\n      }\n      console.log(\"eth_verifyMessage   originalMessage>>>\",originalMessage)\n\n      // const messageHash = ethers.utils.hashMessage(originalMessage);\n      const recoveredAddress = ethers.utils.verifyMessage(originalMessage, signature);\n      console.log(\"eth_verifyMessage recoveredAddress:\", recoveredAddress);\n      return recoveredAddress.toLowerCase() === ethAddress.toLowerCase();\n    },\n\n    async verifyMessage(list){ //连接验签\n\n        if (window.provider && window.provider.session && list && list.length>0){\n          let verifyList = {}\n          for (let methodItem of list){\n            if (\"result\" in methodItem && \"method\" in methodItem){\n              let requestItme = this.selectedMethodData.filter(item => item.method === methodItem.method)[0];\n              console.log(\"验证签名 请求>>>:\", JSON.stringify(requestItme));\n              console.log(\"验证签名 结果>>>:\", JSON.stringify(methodItem));\n              if (methodItem.method === \"personal_sign\"){\n                let ethAddress = await window.provider.request({ method: \"eth_requestAccounts\" },methodItem.chainId)\n                ethAddress = ethAddress[0];\n                console.log(\"验证eth 钱包地址>>>:\", ethAddress);\n                let ethMessage = requestItme.params[0]\n                console.log(\"验证eth 签名消息体>>:\", JSON.stringify(ethMessage));\n                verifyList[methodItem.method] = this.eth_verifyMessage(ethMessage,methodItem.result,ethAddress)\n              }else if(methodItem.method === \"solana_signMessage\"){\n                let solanaMessage = methodItem.result\n                if (\"signature\" in solanaMessage && \"publicKey\" in solanaMessage){\n                  const verifySol = nacl.sign.detached.verify(\n                      new TextEncoder().encode(\"Hello Solana\"),\n                      solanaMessage.signature,\n                      new PublicKey(solanaMessage.publicKey).toBytes()\n                  );\n                  verifyList[methodItem.method] = verifySol\n                }else {\n                  verifyList[methodItem.method] = false\n                }\n              }else if(methodItem.method === \"sui_signPersonalMessage\" || methodItem.method === \"sui_signMessage\"){\n                let suiResult =  this.sui_verifySignature(methodItem.result);\n                  verifyList[methodItem.method] = (await suiResult).result\n              }else if(methodItem.method === \"btc_signMessage\"){\n\n                verifyList[methodItem.method] = \"Not verified yet\"\n\n              }else if(methodItem.method === \"aptos_signMessage\"){\n                let aptosMessage = methodItem.result\n                let aptosProvider = new OKXAptosProvider(window.provider)\n                let  aptosPublicKey  = aptosProvider.getAccount(methodItem.chainId)?.publicKey\n\n                let signStr = aptosMessage.signature\n                if (signStr.startsWith(\"0x\")) {\n                  signStr = signStr.slice(2, signStr.length)\n                }\n\n                console.log(\"aptos_signMessage aptosPublicKey And signStr\",aptosPublicKey,signStr)\n                verifyList[methodItem.method] = nacl.sign.detached.verify(\n                    Buffer.from(aptosMessage.fullMessage),\n                    Buffer.from(signStr, 'hex'),\n                    Buffer.from(aptosPublicKey, 'hex'),\n                );\n              }else if(methodItem.method === \"cosmos_signArbitrary\"){\n                let cosmosProvider = new OKXCosmosProvider(window.provider)\n                let cosmosAddress = cosmosProvider.getAccount(methodItem.chainId)?.address\n                let cosmosMessage = methodItem.result\n                let isValid =  await this.cosmos_verifySignArbitrary(cosmosAddress,\"test cosmos\",cosmosMessage.signature, cosmosMessage.pub_key.value)\n                verifyList[methodItem.method] = isValid\n\n              }else if (methodItem.method === \"tron_signMessage\") {\n                let tronMessage = methodItem.result\n                let tronWeb = new TronWeb({\n                  \"fullHost\": 'https://api.trongrid.io',\n                  \"headers\": {},\n                  \"privateKey\": ''\n                })\n                let provider = new OKXTronProvider(window.provider)\n                verifyList[methodItem.method] = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), tronMessage, provider.getAccount(\"tron:mainnet\").address)\n              } else if (methodItem.method === \"tron_signMessageV2\") {\n                let tronMessage = methodItem.result\n                let tronWeb = new TronWeb({\n                  \"fullHost\": 'https://api.trongrid.io',\n                  \"headers\": {},\n                  \"privateKey\": ''\n                })\n                const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", tronMessage);\n                let provider = new OKXTronProvider(window.provider)\n\n                verifyList[methodItem.method] = base58Address === provider.getAccount(\"tron:mainnet\").address\n              }else if (methodItem.method === \"starknet_signMessage\") {\n                let res = methodItem.result\n                let signData = this.starknetPanelTypedData\n\n                const rpcProvider = new StarknetRpcProvider({ nodeUrl: \"https://free-rpc.nethermind.io/mainnet-juno/v0_7\" });\n\n                let provider = new OKXStarknetProvider(window.provider)\n                let address = provider.getAccount(\"starknet:mainnet\").address\n                let pk = \"0x123\"; /// random pk\n                const account = new StarknetAccount(rpcProvider, address, pk)\n\n                let that = this\n                account.verifyMessage(signData, res).then(function (isValid) {\n                  that.testTransaction = `Verifyed result: \\n${isValid}`\n                }).catch(function (error) {\n                  that.testTransaction = `Verifyed failed: \\n${error}`\n                })\n                verifyList[methodItem.method] = \"starknet is verifying signature...\"\n              }\n              else {\n                verifyList[methodItem.method] = \"Not verified yet\"\n\n              }\n            }else if(\"method\" in methodItem && \"error\" in methodItem) {\n              verifyList[methodItem.method] = methodItem.error\n            }\n\n          }\n\n          console.log(\"验证签名 最后的结果>>>:\", JSON.stringify(verifyList));\n          this.testTransaction = \"签名验证结果如下: \\n\" + JSON.stringify(verifyList)\n        }else {\n          console.log(\"验证签名 window.provider.session.connectMethodsReply 为空:\");\n\n        }\n\n    },\n\n    handleThemeSelect(theme) {\n      selectedTheme = theme;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: theme,\n          },\n        };\n      }\n    },\n\n    async sui_verifySignature(signatureResult) {\n      let resultObj = signatureResult\n      let result = false\n      let msg = ''\n      try {\n        /// 获取当前account\n        const adapter = new SuiAdapter(window.provider);\n        let account = adapter.getAccount()\n        console.log(`Account中获取的address：${account.address}`)\n\n        /// 验证签名\n        let pubKey = await verifyPersonalMessageSignature(this.currentSuiTransaction.message, resultObj.signature)\n        let address = pubKey.toSuiAddress()\n        console.log(`验签结果计算得到address：${address}`)\n\n        /// 对比pubKey\n        console.log(`account pubkey: ${account.publicKey}`,)\n        console.log(`result pubkey: ${pubKey.toBase64()}`)\n        result = (account.address === address) && (account.publicKey === pubKey.toBase64())\n\n        msg = `address verify: ${account.address === address}\\npublicKey verify: ${account.publicKey === pubKey.toBase64()}`\n        console.log(\"signature verify success: \", pubKey)\n      } catch (e) {\n        console.log(\"signature verify failed: \", e)\n      }\n      return {\n        result,\n        msg\n      }\n    },\n\n\n    handleRedirectSelect(input) {\n      this.redirect = input;\n    },\n\n    handleRedirectDeeplink(input) {\n      this.redirectDeeplink = input;\n    },\n\n    addRedirectParam() {\n      if (this.testTransaction) {\n        const newTransaction = JSON.parse(this.testTransaction);\n        newTransaction.redirect = this.redirect === 'deeplink' ? this.redirectDeeplink : this.redirect;\n        this.testTransaction = JSON.stringify(newTransaction);\n      }\n    },\n\n    canChainAddRedirectParam() {\n      return chainsThatCanAddRedirectParam.some((c) => this.selectedChain.startsWith(c));\n    }\n  },\n  created() {\n    // for (const eventName of Object.values(OKX_TON_CONNECTION_AND_TRANSACTION_EVENT)) {\n    //   console.log(eventName);\n    //   window.addEventListener(eventName, (event) => {\n    //     console.log(eventName,event.detail)\n    //     this.currentStatus = eventName\n    //   });\n    // }\n  },\n\n  mounted() {\n\n    var scriptTag = document.createElement(\"script\");\n    scriptTag.src = \"https://telegram.org/js/telegram-web-app.js\";\n    scriptTag.id = \"tgsdk\";\n    document.getElementsByTagName('head')[0].appendChild(scriptTag);\n\n    this.connectReady = true;\n    document.title = \"OKX Connect\";\n    this.initBtnClicked()\n\n    console.log(\"挂载成功:\")\n    if (this.$refs.starknetPanelRef) {\n      this.starknetPanelTypedData = toRaw(this.$refs.starknetPanelRef.signData)\n      console.log(\"111: \", this.starknetPanelTypedData)\n    }else {\n      console.log(\"222\")\n    }\n  },\n};\n</script>\n","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_getAccount()\">getAccount(BTC)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signMessage()\">signMessage(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_send()\">send(BTC)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendBitcoin()\">sendBitcoin(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signPsbt_up()\">signPsbt(上架NFT)</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"btc_signAndPushPsbt_up()\">signAndPushPsbt(上架NFT)</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在OKX App选择要上架的Btc NFT，点击【上架】\n        </li>\n        <li>\n          2. 弹出签名面板，点开高级选项，查看\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出上架流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendInscription()\">sendInscription(BTC)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Btc NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount\n    }\n  },\n  methods: {\n\n    btc_getAccount() {\n      this.$emit('generateTransactionParams', {}, \"btc_getAccount\")\n    },\n\n    btc_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to BTC\"\n      };\n      this.$emit('generateTransactionParams', params, \"btc_signMessage\")\n    },\n\n    btc_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"btc_send\")\n    },\n\n    btc_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"btc_sendBitcoin\")\n    },\n\n    btc_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"btc_signPsbt\")\n    },\n\n    btc_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"btc_signAndPushPsbt\")\n    },\n\n    btc_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"btc_sendInscription\")\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./BtcTransactionPanel.vue?vue&type=template&id=376d03bc&scoped=true\"\nimport script from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./BtcTransactionPanel.vue?vue&type=style&index=0&id=376d03bc&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-376d03bc\"]])\n\nexport default __exports__","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_getAccount()\">getAccount(Fractal)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signMessage()\">signMessage(Fractal)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_send()\">send(Fractal)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_sendBitcoin()\">sendBitcoin(Fractal)</el-button>\n\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signPsbt_up()\">signPsbt(上架NFT)</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_signAndPushPsbt_up()\">signAndPushPsbt(上架NFT)</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在OKX App选择要上架的Fractal NFT，点击【上架】\n        </li>\n        <li>\n          2. 弹出签名面板，点开高级选项，查看\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出上架流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_sendInscription()\">sendInscription(Fractal)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Fractal NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount\n    }\n  },\n  methods: {\n\n    fractal_getAccount() {\n      this.$emit('generateTransactionParams', {}, \"fractal_getAccount\")\n    },\n\n    fractal_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to UniSat!\\n\\nClick to sign in and accept the UniSat Terms of Service (https://unisat.io/terms-of-service.html) and Privacy Policy (https://unisat.io/privacy-policy.html).\\n    \\nThis request will not trigger a blockchain transaction.\\n    \\nYour authentication status will reset after 24 hours.\\n    \\nWallet address:\\nbc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\\n    \\nNonce:\\n162d70e3-8c21-4cfd-9a22-9bf0a4b7be51\\n\"\n      };\n      this.$emit('generateTransactionParams', params, \"fractal_signMessage\")\n    },\n\n    fractal_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_send\")\n    },\n\n    fractal_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_sendBitcoin\")\n    },\n\n    fractal_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"fractal_signPsbt\")\n    },\n\n    fractal_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"fractal_signAndPushPsbt\")\n    },\n\n    fractal_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"fractal_sendInscription\")\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./FractalTransactionPanel.vue?vue&type=template&id=fb2f7e38&scoped=true\"\nimport script from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./FractalTransactionPanel.vue?vue&type=style&index=0&id=fb2f7e38&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-fb2f7e38\"]])\n\nexport default __exports__","<script>\n\nimport {getFullnodeUrl, SuiClient} from \"@mysten/sui/client\";\nimport {Transaction as SuiTransaction} from '@mysten/sui/transactions';\n\nexport default {\n  name: \"SuiTransactionPanel\",\n  methods: {\n    sui_getAccount() {\n      this.$emit('generateTransactionParams', '', \"sui_getAccount\")\n    },\n\n    //对单个交易签名（不发送)\n    async sui_signMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signMessage\")\n    },\n\n    async sui_signPersonalMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signPersonalMessage\")\n    },\n\n    sui_signTransaction2() {\n      // 定义要转移的金额和目标地址\n      const amount = 109; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    async sui_requestRpc() {\n      let provider = window.provider;\n      provider.setDefaultChain(\n          `sui:mainnet`,\n          `https://fullnode.mainnet.sui.io:443`\n      );\n      var data = {\n        method: \"suix_getBalance\",\n        params: [\n          \"0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae\",\n          \"0x168da5bf1f48dafc111b0a488fa454aca95e0b5e::usdc::USDC\",\n        ],\n      };\n\n      this.$emit(\"generateTransactionParams\", data, \"sui_testRpc\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 102; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signAndExecuteTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n      this.$emit(\"generateTransactionParams\", input, \"sui_signAndExecuteTransaction\")\n    },\n\n    /// generate txBytes and txSerialize\n    async generateTsBytesAndSerizlize(input) {\n      /// txBytes and txSerialize may be constructed in advance by the dapp side\n      let resultTuple = [\"\", \"\"];\n      if (\n          \"txBytes\" in input &&\n          input.txBytes.length > 0 &&\n          \"txSerialize\" in input &&\n          input.txSerialize.length > 0\n      ) {\n        resultTuple = [input.txBytes, input.txSerialize];\n      }\n\n      /// Otherwise, a transactionBlock parameter is required.\n      if (!(\"transactionBlock\" in input)) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      // if (this.walletAddress != \"connected\") {\n      //   alert(\"请先连接钱包\");\n      //   return new Promise((resolve) => {\n      //     resolve(resultTuple);\n      //   });\n      // }\n\n      let senderAccounts = window.provider.requestAccountsWithNamespace(\"sui\");\n      if (senderAccounts.length == 0) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      try {\n        let rpcUrl = getFullnodeUrl(\"mainnet\");\n        rpcUrl = \"https://www.okx.com/fullnode/sui/discover/rpc\"\n        const suiClient = new SuiClient({ url: rpcUrl });\n\n        /// sender is required\n        input.transactionBlock.setSender(senderAccounts[0]);\n        const result = await input.transactionBlock.build({\n          client: suiClient,\n        });\n        const txBytes = Buffer(result).toString(\"base64\");\n        const txSerialize = await SuiTransaction.from(txBytes).toJSON();\n        resultTuple = [txBytes, txSerialize];\n      } catch (error) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      return new Promise((resolve) => {\n        resolve(resultTuple)\n      })\n    },\n\n    //签名并发送交易\n    sui_signAndExecuteTransaction() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n        \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.testTransaction = JSON.stringify(input);\n      this.currentSuiTransaction = input;\n      this.currentSuiMethod = \"sui_signAndExecuteTransaction\";\n    },\n  },\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_getAccount()\">getAccount(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signMessage()\">signMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signPersonalMessage()\">signPersonalMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signTransaction2()\">signTransaction(Sui)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signAndExecuteTransaction()\">sendTransaction(Sui)</el-button>\n      <div style=\"font-size: 12px; color: gray;\">(send to Rally Tiger account)</div>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_requestRpc()\">RPC_getBalance</el-button>\n      <div style=\"font-size: 12px; color: gray;\">get USDC balance of address:</div>\n      <div style=\"font-size: 12px; color: gray\">0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae</div>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signTransaction_pre_execution()\">signTransaction(prepared data)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signAndExecuteTransaction_pre_execution()\">sendTransaction(prepared data)</el-button>\n    </el-col>\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./SuiTransactionPanel.vue?vue&type=template&id=56a8eddf&scoped=true\"\nimport script from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./SuiTransactionPanel.vue?vue&type=style&index=0&id=56a8eddf&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-56a8eddf\"]])\n\nexport default __exports__","<script>\nimport { OKXStarknetProvider } from \"@okxconnect/universal-provider\";\nimport { CallData, uint256, RpcProvider, Account } from \"starknet\";\n\nexport default {\n  name: \"StarknetTransactionPanel\",\n  methods: {\n    async starknet_signMessage() {\n      this.address = this.getCurrentAddress()\n      if (this.address === \"\") {\n        alert(\"address can't be ''\");\n        return\n      }\n\n      let signData = this.signData\n      this.$emit(\"generateTransactionParams\", JSON.stringify(signData))\n      let provider = new OKXStarknetProvider(window.provider)\n      let res = await provider.signMessage(this.address, signData, \"starknet:mainnet\")\n      if (res.code) {\n        if (res.code == 301) {\n          let msg = \"Wallet address is registering, please try again later!\"\n          alert(msg)\n          this.$emit(\"generateTransactionResult\", msg, \"starknet_signMessage\")\n        }\n        this.$emit(\"generateTransactionResult\", res, \"starknet_signMessage\")\n        return\n      }\n      console.log(res)\n\n      const rpcProvider = new RpcProvider({ nodeUrl: \"https://free-rpc.nethermind.io/mainnet-juno/v0_7\" });\n      let pk = \"0x123\"; /// random pk\n      const account = new Account(rpcProvider, this.address, pk)\n      let that = this\n      account.verifyMessage(signData, res).then(function (isValid) {\n        that.$emit(\"generateTransactionResult\", \"verify:\" + isValid + \"\\n\" + res, \"starknet_signMessage\")\n      }).catch(function (error) {\n        that.$emit(\"generateTransactionResult\", \"failed:\" + error + \"\\n\" + res, \"starknet_signMessage\")\n      })\n    },\n\n    async starknet_sendTransaction() {\n      this.address = this.getCurrentAddress()\n      if (this.address === \"\") {\n        alert(\"address can't be ''\");\n        return\n      }\n\n      let val = uint256.bnToUint256(120000000000000000)\n      const transferCalldata = CallData.compile({\n        to: \"0x00b909cefa36ab6bc26f5887a867e46ef162238f0a171b1c2974b665afd4237f\",\n        value: val\n      })\n\n      // const ETHTokenAddress = \"0x049d36570d4e46f48e99674bd3fcc84644ddd6b96f7c741b1562b82f9e004dc7\"\n      // const STARKTokenAddress = \"0x04718f5a0fc34cc1af16a1cdee98ffb20c31f5cd61d6ab07201858f4287c938d\"\n      const DAITokenAddress = \"0x00da114221cb83fa859dbdb4c44beeaa0bb37c7537ad5ae66fe5e0efd20e6eb3\"\n\n      const invokeParams = {\n        calls: [\n          {\n            contract_address: DAITokenAddress,\n            entry_point: \"transfer\",\n            calldata: transferCalldata\n          }\n        ],\n      }\n\n      this.$emit(\"generateTransactionParams\", JSON.stringify(invokeParams))\n      let provider = new OKXStarknetProvider(window.provider)\n\n      let that = this\n      provider.sendTransaction(this.address, invokeParams, \"starknet:mainnet\").then(function(res){\n        console.log(\"starknet_sendTransaction result \", res)\n        that.$emit(\"generateTransactionResult\", res, \"starknet_sendTransaction\")\n      }).catch(function(error) {\n        if (error.code == 301) {\n          let msg = \"Wallet address is registering, please try again later!\"\n          alert(msg)\n          that.$emit(\"generateTransactionResult\", msg, \"starknet_sendTransaction\")\n        }else {\n          that.$emit(\"generateTransactionResult\", error, \"starknet_sendTransaction\")\n        }\n      });\n    },\n\n    getCurrentAddress() {\n      let provider = new OKXStarknetProvider(window.provider)\n      const address = provider.getAccount(\"starknet:mainnet\")?.address\n      return address\n    },\n\n    getPublicKey() {\n      let provider = new OKXStarknetProvider(window.provider)\n      const account = provider.getAccount(\"starknet:mainnet\")\n      console.log(\"获取到的account是：\")\n      console.log(account)\n      return \"05d8e5e9c1dd686246716c888159271d2f13986cb4acee46164e2c4e034629c0\"\n    }\n  },\n\n  data() {\n    const signData = {\n        \"domain\": {\n          \"chainId\": \"0x534e5f4d41494e\",\n          \"name\": \"STRKFarm\",\n          \"version\": \"1\"\n        },\n        \"message\": {\n          \"document\": \"app.strkfarm.xyz/tnc/v1\",\n          \"message\": \"Read and Agree T&C\"\n        },\n        \"primaryType\": \"Tnc\",\n        \"types\": {\n          \"StarkNetDomain\": [\n            {\n              \"name\": \"name\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"version\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"chainId\",\n              \"type\": \"felt\"\n            }\n          ],\n          \"Tnc\": [\n            {\n              \"name\": \"message\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"document\",\n              \"type\": \"felt\"\n            }\n          ]\n        }\n    }\n\n    return {\n      signData\n    }\n  }\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"starknet_signMessage()\">signMessage</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 验签不成功的话，请尝试连接VPN\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"starknet_sendTransaction(true)\">\n        sendTransaction\n      </el-button>\n\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 发送0.12个DAI到0x00b9...4237f的地址\n        </li>\n        <li>\n          2. 请保证你的钱包有足够的DAI\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./StarknetTransactionPanel.vue?vue&type=template&id=082fda2b&scoped=true\"\nimport script from \"./StarknetTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./StarknetTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./StarknetTransactionPanel.vue?vue&type=style&index=0&id=082fda2b&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-082fda2b\"]])\n\nexport default __exports__","<script>\n\n\nimport {OKXTronProvider} from \"@okxconnect/universal-provider\";\nimport {TronWeb} from \"tronweb\";\n\nexport default {\n  name: \"TronTransactionPanel\",\n  methods: {\n\n    async tron_signMessage() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessage(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n\n      const verify = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), res, provider.getAccount(\"tron:mainnet\").address)\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" + res, \"tron_signMessage\")\n    },\n\n    async tron_signMessageV2() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessageV2(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", res);\n      console.log(\"tron_signMessageV2_base58Address\", base58Address)\n      console.log(\"tron_signMessageV2_address\", provider.getAccount(\"tron:mainnet\").address)\n      const verify = base58Address === provider.getAccount(\"tron:mainnet\").address\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" +  res, \"tron_signMessage\")\n    },\n\n    async tron_signTransaction(isOnlySign) {\n      let provider = new OKXTronProvider(window.provider)\n        let tronWeb = new TronWeb({\n          \"fullHost\": 'https://api.trongrid.io',\n          \"headers\": {},\n          \"privateKey\": ''\n        })\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const transaction = await tronWeb.transactionBuilder.sendTrx(\"TGBcVLMnVtvJzjPWZpPiYBgwwb7th1w3BF\", 1000, address);\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let res = await provider.signTransaction( transaction, \"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", res, \"tron_signTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async getContract() {\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41b4a428ab7092c2f1395f376ce297033b3bb446c1\"\n      \n      try {\n        const contract = await tronWeb.trx.getContract(contractAddress)\n        const abi = contract.abi.entrys;\n        console.log(\"获取到的合约：\")\n        console.log(abi)\n      } catch (error) {\n        console.log(\"Error getting contract ABI:\", error);\n      }\n    },\n    \n    async tron_signAndSendTransactionContract(isOnlySign) {\n      // this.getContract()\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41e95812d8d5b5412d2b9f3a4d5a87ca15c5c51f33\"\n      let provider = new OKXTronProvider(window.provider)\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const parameter = [\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n      ]\n      const ret = await tronWeb.transactionBuilder.triggerSmartContract(contractAddress, \"quote(uint256,uint256,uint256)\", {}, parameter, address);\n      console.log(\"=====>transaction: \")\n      console.log(ret);\n      this.$emit(\"generateTransactionParams\", ret.transaction)\n      if (isOnlySign) {\n        let tx = await provider.signTransaction( ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async tron_signAndSendTransactionApprove(isOnlySign) {\n      let contractAddress = \"41b4a428ab7092c2f1395f376ce297033b3bb446c1\"\n      let provider = new OKXTronProvider(window.provider)\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const parameter = [\n        {type: 'address', value: contractAddress},\n        {type: 'uint256', value: 1000},\n      ]\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      const ret = await tronWeb.transactionBuilder.triggerSmartContract(contractAddress, \"approve(address,uint256)\", {}, parameter, address);\n\n      let transaction = ret.transaction\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let tx = await provider.signTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n\n    }\n\n  }\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessage()\">tron_signMessage</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessageV2()\">tron_signMessageV2</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(true)\">\n        tron_signTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(true)\">\n        tron_signTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(true)\">\n        tron_signTransaction(Approve)\n      </el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(false)\">\n        tron_signAndSendTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(false)\">\n        tron_signAndSendTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(false)\">\n        tron_signAndSendTransaction(approve)\n      </el-button>\n    </el-col>\n\n\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./TronTransactionPanel.vue?vue&type=template&id=55a13ab0&scoped=true\"\nimport script from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./TronTransactionPanel.vue?vue&type=style&index=0&id=55a13ab0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-55a13ab0\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=869aeca2&scoped=true\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=869aeca2&scoped=true&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-869aeca2\"]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport ElementPlus from 'element-plus'\nimport 'element-plus/dist/index.css'\nimport App from './App.vue'\n\nconst app = createApp(App)\n\napp.use(ElementPlus)\napp.mount('#app')","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? function(obj) { return Object.getPrototypeOf(obj); } : function(obj) { return obj.__proto__; };\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(function(key) { def[key] = function() { return value[key]; }; });\n\t}\n\tdef['default'] = function() { return value; };\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkokxconnectdemo\"] = self[\"webpackChunkokxconnectdemo\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(88076); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["require","Object","defineProperty","exports","value","AptosUtils","getTransaction","o","transaction","rawTransaction","payload","entryFunction","typeArgs","type_args","typeArguments","Array","forEach","typeTag","push","toString","realArguments","this","getTypeArguments","args","i","arguments","function","module_name","address","data","name","identifier","function_name","type","type_arguments","getArguments","array","j","length","y","values","subArray","dealArrayElements","e","Uint8Array","t","isArray","r","n","assign","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","next","rejected","result","done","then","apply","OKXAptosProvider","buffer_1","AptosUtils_1","core_1","constructor","provider","chainsSet","Set","getConnectedNamespace","defaultNetwork","network","requestDefaultChainWithNamespace","NameSpaceKeyAptos","currentChainId","getRealChainId","chainId","size","Error","_a","_b","_c","session","namespaces","chains","chain","add","getAccount","_d","_e","_f","_g","_h","_j","account","accounts","filter","startsWith","logDebug","accountArray","split","console","log","extra","publicKey","undefined","substring","signMessage","realChain","prefix","message","nonce","fullMessage","application","window","location","protocol","hostname","buffer","Buffer","from","hex","bufferToHex","injectParams","signedMessage","request","successData","signStr","slice","signature","error","signTransaction","tx","signAndSubmitTransaction","buf","OKXAptosProvider_1","enumerable","get","CONNECT_METHOD_BATCH_FETCHMSG","CONNECT_METHOD_FETCHMSG","CONNECT_METHOD_RECEIVE","CONNECT_METHOD_UNSUB","CONNECT_METHOD_SUB","CONNECT_METHOD_PUBLISH","CONNECT_METHOD_LOGIN","CONNECT_METHOD_PUSH","__createBinding","create","m","k","k2","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","__setModuleDefault","v","__importStar","ownKeys","getOwnPropertyNames","ar","prototype","hasOwnProperty","call","mod","OKXWalletConnector","constants_1","storageconstants_1","storage_1","utils_1","utils_2","eventemitter3_1","protocol_1","report_1","WS","resolveWebSocketImplementation","url","events","EventEmitter","state","ConnectorState","InitState","selectedUrlIndex","retryCount","timeOutLimit","checkWSUrl","heartbeatTimer","connectionTimeoutTimer","connectURLStorage","Storage","OKXCONNECTOR_CACHE_KEY","connecting","Connecting","onPayload","rsp","Date","now","emit","onClose","event","socket","code","onError","id","msg","onopen","onmessage","onclose","Connected","emitError","errorEvent","heartbeat","clearTimeout","OnError","readyState","WebSocket","OPEN","send","setTimeout","bind","tryRegistOpen","logError","registOpen","inRetry","toUTCString","URLSearchParams","startTimeOutTimer","hasBuiltInWebSocket","onerror","close","on","resetTimeOutTimer","OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE","FINISHED","checkMaxRetry","OKXCONNECTOR_WS_URL_LIST","connectionTryNext","nextUrl","getNextSelectUrl","CANCELED","pendingSocket","TIME_OUT","reportEvent","OKXReportType","LOG","cacheSuccessUrlSelect","saveContent","onVisibleChanged","document","visibilityState","once","err","OKXConnectError","OKX_CONNECT_ERROR_CODES","CONNECTION_ERROR","connect","removeEventListener","addEventListener","disconnect","Disconnected","currentStatus","addListener","decrypt","success","failed","listenPayloadHandler","removeListener","parsedEvent","safeJsonParse","params","rawMsg","failHandler","addPackageParse","callback","payloadHandler","param","listener","off","doLogin","safeJsonStringify","getMsgPayloadFromHistory","tmpMsg","jsonstr","onOpen","openHandler","ConnectionManager","connect_1","commands_1","jwtconstants_1","crypto_1","jwt_1","safejson_1","log_1","url_1","appname","connectStorage","OKXCONNECTOR_CACHE_KEY_DAPP","crypto","SessionCrypto","inTMA","isInTMA","reportLog","keyPairInfo","getCachedCryptoKeyPair","jwtKeyPair","getCachedJWTKeyPair","saveJWTKeyPair","connector","OKXCONNECTOR_WS_URL_1","packageId","connectedWalletPK","currentTopic","refreshPackageId","saveCryptoKeyPair","keyPair","cacheInfo","encryptStoreMsg","OKXCONNECTOR_CRYPTO_KEY","kp","getAndDecrypt","content","clearCache","strkeyPair","toHexString","secretKey","OKXCONNECTOR_JWT_KEY","strKeyPairInfo","hexToByteArray","generateKeyPair","isWalletPKReady","makeJWT","topic","signJWT","OKXCONNECTOR_JWT_SIDE","OKXCONNECTOR_JWT_TTL","parsePackage","input_1","input","ignoreACK","sendACK","getItem","OKXCONNECTOR_TOKEN_CACHE","inputObj","messageId","sendReceive","restoreConnect","getConnectInfo","generateTopic","info","channelId","clientId","stringifyKeypair","fromRestore","timeLog","getTime","lastConnectId","cachedSenderPublicKey","OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE","jwtToken","timeOne","timeF","sendFetchAndConsumeMessages","timeTh","catch","jsonrpc","CONNECT_JSONRPC_VER","method","token","replace","parsedMessage","fail","msgObj","trimStart","sendRaw","ttl","OKXCONNECTOR_MESSAGE_TTL","msg_1","encrypt","msgId_1","success_1","msgId","reason","sendConnectSessionInfo","fetchedMessages","hasMore","receivedMsgs","timeFive","cleanCache","saveSessionContent","key","OKXCONNECTOR_SESSION_PREFIX_KEY","jsonData","getSessionContent","jsonStr","object","getCurrentConnectionReady","OKXCONNECTOR_WS_URL_IDX_KEY","OKXCONNECTOR_WS_URL_3","OKXCONNECTOR_WS_URL_2","EVENT_EMITTER_MAX_LISTENERS","Engine","iconnector_1","ws_connector_1","connectionManager_1","sessionUtils_1","connector_1","wallet_info_1","appName","connectors","useConnector","connectionManager","addConnectionListener","isInject","getConnector","InjectConnector","registerConnector","WsConnector","setConnectionManager","hasWsConnector","universalConnect","sessionConfig","connectInfoAndUrl","JSON","stringify","universalRequest","item","connectInfo","requestId","openUniversalLink","openUniversalUrl","universalConnectRequest","protocolVer","Number","tonConnectSdkVersion","dAppInfo","dappInfo","requests","redirect","base64Encoded","encodeConnectParams","openOKXLink","getOKXLink","useMini","tmaReturnUrl","openMethod","OkxwalletInjectConnector","openWallet","connectRequest","openOKXTMAWalletlinkWithFallback","useShortLink","openOKXUniversalLink","openOKXDeeplinkWithFallback","isIOS","isIos","addOnConnectResultListener","response","connectResponse","buildNameSpacesByConnectResponse","UNKNOWN_ERROR","walletName","responses","wallet","tag","OKXWalletName","OKX_APP_WALLET","OKXMiniWalletName","OKX_TG_WALLET","OKXInjectWalletName","OKX_INJECT_WALLET","find","getTag","methodsResponse","connectRequestMethods","signResponse","sendSession","connectResultListener","setOnConnectResultListener","engineConnectInfo","requestAnswer","clearData","addDisconnectListener","disconnecter","getTagByappName","setConnectConnector","setSessionConnectingListener","sessionConnectingListener","restoreconnect","sessionInfo","onConnectResult","restoreconnectFromTopic","namespaceKeys","connectManagerDisconnect","jsonResponse","WalletConnectionManager","walletConnectionManager_1","engine_1","__importDefault","MULTICODEC_ED25519_LENGTH","MULTICODEC_ED25519_HEADER","MULTICODEC_ED25519_BASE","MULTICODEC_ED25519_ENCODING","DID_METHOD","DID_PREFIX","DID_DELIMITER","KEY_PAIR_SEED_LENGTH","DATA_ENCODING","JSON_ENCODING","JWT_ENCODING","JWT_DELIMITER","JWT_IRIDIUM_TYP","JWT_IRIDIUM_ALG","JWTHeaderType","decodeJSON","encodeJSON","encodeIss","decodeIss","encodeSig","decodeSig","encodeData","decodeData","encodeJWT","decodeJWT","verifyJWT","ed25519","tweetnacl_1","stringUtils_1","default","sign","str","okxtoString","okxfromString","val","publicKeyStr","join","issuer","multicodec","bytes","encoded","header","jwt","sub_1","aud_1","ttl_1","keyPair_1","sub","aud","iat","Math","floor","alg","typ","iss","exp","act","detached","verify","OKXCONNECTOR_JWT_WALLET_SIDE","buildRequestAccountNameSpacesByConnectResponse","requestAccountNameSpaces","universalResponse","filterAccount","namespace","ton_addr","tonAddress","tonProof","ton_proof","addresses","methods","addressItem","addressArr","utils_3","crypto_js_1","subKey","beforeKey","localStorage","resolveLocalStorage","checkAndUpgradeCache","storeKey","cipherIV","cacheStr","cacheKey","cache","cacheObj","fromCacheKey","toCacheKey","setItem","removeItem","timestamp","saveItem","localKey","totalCacheStr","getCachedPBKDF2InfoKey","pwLen","saltLen","pw","iv","salt","OKXCONNECTOR_STORAGER_CRYPTO_SALT","randomBytes","OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD","OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV","ivBuffer","PBKDF2","iterations","storeInfo","AES","enc","Utf8","OKXCONNECTOR_STORAGE_CIPHER_METHOD","OKXCONNECTOR_TON_KEY","WalletConnectionManagerEvent","WalletConnectionManagerTopicInfoCacheKey","RECEIVE_REQUEST","walletConnectionConstants_1","communicateEvents","sessionCryptoInfoMap","Map","inLogin","isLogined","offset","topicId","isTopicPublicKeyExist","timestampStr","parseInternalMsg","internalMsg","internalObj","origin","originContent","base64decode","updateClientId","cid","lastCheck","getLastSixMd5Hash","dappPublicKey","syncCacheSessionInfo","topic_1","_k","_l","isInternalData","inner_message","inner_topic","messageObj","sessionInfoString","base64Content","inner_connection","toObject","decryptWallet","recovrySessionInfoFromCache","cacheMap","topicItem","cryptoItem","cryptoKeyPair","set","cacheSessionInfo","sync","duplicatedTopics","includes","delete","appendTopic","sessionPublicKey","subscribeTopics","confirmAppendingTopics","keys","getSessionPublicKey","getCurrentCachedTopicIdList","needPublicKey","useRaw","connectedDappPK","cryptoObject","encryptWallet","sendUnsubscribe","sendBatchFetchAndConsumeMessages","topicIdList","topics","withInternalData","finishCount","idx","AppwalletConnector","instance","super","walletNameKey","shortUniversalLink","appConnectEncodeParams","appDeepLink","getAppWalletDeepLink","isOS","openDeeplinkWithFallback","stackDeepLink","openLinkBlank","standardUniversalLink","TgwalletConnector","appwallet_connector_1","inject_connector_1","tgwallet_connector_1","okxwallet_inject_connector_1","provider_1","SolProvider_1","AptosPrivider_1","media_1","disconnectListener","providerMap","enable","NameSpaceKeyEip155","Eip155Provider","NameSpaceKeySOL","SolProvider","AptosProvider","getInjectProvider","nameSpace","mapKey","entries","BAD_REQUEST_ERROR","okxwallet","requestAccounts","version","getVersion","platform","navigator","appVersion","maxProtocolVersion","responseItem","getAccountByRequestWallets","requiredNamespaces","optionalNamespaces","getRequestId","newRequest","onAck","injectProvider","USER_REJECTS_ERROR","errorResponse","CHAIN_NOT_SUPPORTED","_","allReady","every","namespaceKey","connectReady","toJSON","isDevice","namespacesKey","connectWalletNameSpace","accountsItem","sessionAccounts","areEqual","sort","index","needPop","walletInfo","accountResult","walletInfoItem","requestWallets","allNameSpace","walletInfoFirst","itemResult","parseConnectResponse","encodeTGParams","encodeTWAConnectURLParams","tgUrl","getTelegramWalletTWAUrl","pendingRequests","getDefaultReporter","beginReport","handleResponse","bindRequestForPromise","clear","nonceLength","sessionKeyPair","createKeypairFromString","createKeypair","box","createNonce","receiverPublicKey","encodedMessage","TextEncoder","encode","encrypted","concatInfo","concatUint8Arrays","hexResult","encodedResult","base64encode","senderPublicKey","messageByteArray","toUint8Array","internalMessage","splitToUint8Arrays","decrypted","open","TextDecoder","decode","__exportStar","p","hasOKXInjectedProvider","getWindowProviderNamespace","providerSearch","property","path","_provider","AptosMethods","SOLANAMethods","Eip55Methods","InjectUtils_1","aptos","hash","METHOD_NOT_SUPPORTED","resotreConnect","connectRequestWalletResponse","connectChain","chainStr","selectedAddress","coinType","nameSpaceResponse","bs58_1","solana","bufferResult","injectResult","allResult","signAllTransactions","signAndSendResult","signAndSendTransaction","namespaceChainId","ethParams","typedDataJson","switchChainId","parseInt","resultSwitch","getChainId","chainHex","resultMe","currentChain","TON_CHAINS","COSMOS_CHAINS","APTOS_CHAINS","SUI_CHAINS","SOLANA_CHAINS","BTC_CHAINS","MAINNET","FRACTAL","TESTNET","SONIC_TESTNET","COSMOS_MAINNET","IEngine","ISignClient","ISignClientEvents","IEngineEvents","client","creatOKXInjectWalletInfo","creatOKXMiniAppWalletInfo","creatOKXWalletInfo","getBigIntRpcId","formatJsonRpcRequest","isJsonRpcError","isJsonRpcResponse","parseConnectionError","isHttpUrl","formatJsonRpcError","json_rpc_1","isJsonRpcPayload","isJsonRpcRequest","isJsonRpcResult","payloadId","formatJsonRpcResult","isReservedErrorCode","getError","getErrorByCode","formatErrorMessage","isWsUrl","okx_connect_error_1","IncrementalRandomGenerator","bits","Uint16Array","Uint32Array","initialValue","getNextValue","uint8Generator","uint16Generator","date","BigInt","RESERVED_ERROR_CODES","STANDARD_ERROR_MAP","DEFAULT_ERROR","match","INTERNAL_ERROR","SERVER_ERROR","getUrlProtocol","matches","RegExp","matchRegexProtocol","regex","test","CONNECT_ITEM_ERROR_CODES","TONCHAIN","connect_wallet_1","connect_event_1","getTestTwaUrl","okxTesttwaUrl","getTestTgTwaUrl","okxTestTgtwaUrl","tgwalletAppName","tgwalletName","standardDeeplink","downloadUrl","okxDeeplink","SERVER_ERROR_CODE_RANGE","INVALID_PARAMS","METHOD_NOT_FOUND","INVALID_REQUEST","PARSE_ERROR","getDefaultMessageByCode","setPrototypeOf","ALREADY_CONNECTED_ERROR","NOT_CONNECTED_ERROR","UNKNOWN_APP_ERROR","USER_REJECTS_ERROR_CAUSE_REGISTER","NameSpaceKeyStarknet","NameSpaceKeyTron","NameSpaceKeyCosmos","NameSpaceKeyBtc","NameSpaceKeySui","NameSpaceKeyTON","misc_1","chains_1","callForSuccess","fn","options","attempts","delayMs","lastError","delay","timeout","signal","aborted","timeoutId","checkMetaData","versionCompare","isBrowser","isMobileUserAgent","openLink","toSafeBase64FromBase64","isValidObject","getAppWalletShortDeepLink","encodeTelegramUrlParameters","isTelegramUrl","openOKXDeeplink","getUniversalLink","logWarning","call_for_success_1","web_api_1","tma_api_1","request_1","debug","forceReport","defaultReporter","OKXReporter","packageJson","okxLogDebug","reduce","sendRecordContent","warn","action","content_1","mediaNotTouch","mediaTouch","maxWidth","media","mediaMin","mediaMax","mediaMinMax","device","getWindow","isTmaPlatform","width","innerWidth","tablet","mobile","isMobile","isTelegram","TelegramWebviewProxy","maxTouchPoints","px","pxMin","pxMax","OKXReportSide","versionStr","cross_fetch_1","localforage_1","reportApiList","reportCacheKey","reportUUIDKey","MAX_LIMIT_REPORTCOUNT","DEFAULT_HTTP_HEADERS","Accept","DEFAULT_HTTP_METHOD","DEFAULT_FETCH_OPTS","headers","PAGE_IN","PAGE_OUT","CLICK","DAPP","WALLET","fetchListWithTimeout","urls_1","args_1","urls","controller","AbortController","fetchPromise","timeoutPromise","abort","race","ok","status","currentSide","currentVersion","storage","createInstance","recordList","currentUUID","configVersionAndSide","side","recordCacheKey","reportPlatform","startErrorCatching","records","uuid","sendCachedRecords","cachedErrors","sendRecord","record","body","res","pathname","language","ua","userAgent","reportItem","lang","markRecordItem","sendList","map","allSettled","results","keepIndex","splice","markRecord","Report_WalletType_Key","Report_Proceed_QRCode_Click","Report_ChooseType_Download_Click","Report_ChooseType_ConnectWallet_Click","Report_Proceed_Retry_Click","Report_ChooseType_ConnectWallet_View","Report_Loading_ConnectWallet_View","Report_Proceed_QRCode_View","Report_Proceed_Proceed_View","dappMetaData","icon","JSONStringify","JSONParse","json","numbersBiggerThanMaxInt","serializedData","group","parse","isCustomFormatBigInt","alloc","allocUnsafe","basics_1","string","encoding","base","BASES","decoder","encoder","createCodec","ascii","bufNum","String","fromCharCode","charCodeAt","utf8","bases","base16","latin1","binary","inTg","isInTelegramBrowser","sendExpand","sendOpenTelegramLink","initParams","locationHash","urlParseHashParams","tmaPlatform","tgWebAppPlatform","Telegram","WebApp","webAppVersion","tgWebAppVersion","platforms","isTelegramWebview","TelegramWebview","postEvent","link","fallback","URL","pathFull","search","isIframe","versionAtLeast","path_full","parent","eventType","eventData","external","notify","trustedTarget","postMessage","indexOf","_path","urlSafeDecode","qIndex","pathParam","substr","query_params","urlParseQueryString","urlencoded","decodeURIComponent","queryString","paramName","paramValue","queryStringParams","v1","v2","a","p1","p2","v1List","v2List","max","ver","removeUrlLastSlash","addPathToUrl","deeplinkUrl","useStandardUniversalLink","replaceStrWithParam","cleanUrl","deeplinkEncodeUrl","encodeURIComponent","fullUrl","newWindow","href","deepLinkOpened","timeoutDuration","fallbackToDownloadPage","parameters","encodedParameters","connectRequestStr","utf8Array","btoa","connectParam","redirectStr","okxconnect","extraparams","base64ContentStr","urlSafeBase64","twaDeepLink","openTelegramLink","RANDOM_LENGTH","hasLocalStorage","hashKey","generateRandomBytes32","tweetnacl_util_1","to_string_1","sha256_1","BASE16","hexString","byteArray","byte","buffer1","buffer2","mergedArray","subArray1","subArray2","encodeUint8Array","urlSafe","encodeBase64","decodeToUint8Array","decodeBase64","uint8Array","decodeUTF8","decodedUint8Array","encodeUTF8","scheme","global","self","randomBytes32","obj","getPrototypeOf","isIOSDevice","MSStream","isIPadOS","MD5","base64","getUserAgent","ua_parser_js_1","target","doFallback","fallbackTimeout","check","vendor","opera","getResult","osName","os","toLowerCase","deviceModel","model","browserName","browser","OKXSolanaProvider","web3_js_1","defaultChainMap","has","caip","realMessage","Transaction","VersionedTransaction","deserialize","pubkey","PublicKey","serializedMessage","serialize","requireAllSignatures","verifySignatures","getSignedTransaction","transactions","newTransactions","s","c","transactionStr","resultTx","OKXSolanaProvider_1","toUserFriendlyAddress","createVersionInfo","BrowserEventDispatcher","createTransactionSigningFailedEvent","createTransactionSignedEvent","createTransactionSentForSignatureEvent","createDisconnectionEvent","createConnectionStartedEvent","createConnectionRestoringStartedEvent","createConnectionRestoringErrorEvent","createConnectionRestoringCompletedEvent","createConnectionErrorEvent","createConnectionCompletedEvent","createResponseVersionEvent","createRequestVersionEvent","OKX_TON_CONNECTION_AND_TRANSACTION_EVENT","OKXTonConnect","okx_connect_ton_1","tracker_1","__rest","getOwnPropertySymbols","propertyIsEnumerable","OKXTonConnectInner","bridge_provider_1","feature_support_1","ton_connect_tracker_1","send_transaction_parser_1","bridge_connection_storage_1","_wallet","statusChangeSubscriptions","statusChangeErrorSubscriptions","metaData","dappSettings","tracker","TonConnectTracker","OKXtonConnectSdkVersion","bridgeConnectionStorage","BridgeConnectionStorage","connected","closeConnection","BridgeProvider","listen","walletEventsListener","trackConnectionStarted","createConnectRequest","onWalletConnected","onWalletConnectError","onWalletDisconnected","connectEvent","tonAccountItem","items","tonProofItem","walletStateInit","connectItems","trackConnectionCompleted","connectEventError","errorsHandler","trackConnectionError","scope","trackDisconnection","onStatusChange","restoreConnection","trackConnectionRestoringStarted","fromStorage","trackConnectionRestoringError","removeConnection","trackConnectionRestoringCompleted","sendTransaction","checkConnection","checkSendTransactionSupport","features","requiredMessagesNumber","messages","trackTransactionSentForSignature","validUntil","doNotOpenWallet","openOKXWallet","sendRequest","sendTransactionParser","convertToRpcRequest","valid_until","onRequestSent","isError","trackTransactionSigningFailed","convertFromRpcResponse","trackTransactionSigned","getWallets","walletsList","okx_connect_ton_inner_1","okxConnectTonsdkinwindow","tonInner","RpcParser","rpc_parser_1","SendTransactionParser","rpcResponse","boc","storeConnection","connection","getConnection","stored","getHttpConnection","storeLastWalletEventId","lastWalletEventId","getLastWalletEventId","bridge_connection_1","listeners","walletConnectionSource","engine","connectionStorage","isPendingConnectionHttp","tonNameSpace","tonRequest","engineRequest","config","deepLink","universalUrl","trackConnectionInfoBeforeJump","connectSuccessHandle","errorMessage","disconnectMessage","itemArr","tonDeviceInfo","tonConnectInfo","connectionSource","successMessage","needOpenUrl","storedConnection","called","dispatchEvent","eventName","eventDetails","CustomEvent","detail","tracker_constants_1","types_1","browser_event_dispatcher_1","okx_ton_connect_sdk_lib","okx_connect_ui_lib","OKXConnectUiVersion","eventPrefix","eventDispatcher","init","setRequestVersionHandler","requestTonConnectUiVersion","dispatchUserActionEvent","trackConnectionDeepLink","createConnectionDeepLinkEvent","createConnectionInfoBeforeJumpEvent","createConnectionInfo","isTonProof","authType","wallet_address","wallet_type","wallet_version","auth_type","custom_data","chain_id","is_success","error_message","errorCode","error_code","createTransactionInfo","amount","signedTransaction","signed_transaction","noBounceableTag","testOnlyTag","hexAddress","testOnly","wc","parseHexAddress","addr","Int8Array","addressWithChecksum","crc16","addressBase64","parts","hexToBytes","poly","reg","mask","toByteMap","ord","length2","doubled","hexSubstring","supportsDeprecatedSendTransactionFeature","address_1","OKXBtcProvider","_1","getAddressForChainId","ns","checkChainId","ret","errorData","sendBitcoin","toAddress","satoshis","to","feeRate","txhash","checkParameters","signPsbt","psbtHex","signPsbts","psbtResults","psbtHexs","signAndPushPsbt","sendInscription","inscriptionId","extension","coinId","protocolId","atomicSuffix","ordinalsSuffix","endsWith","removeSuffix","scenario","txType","batchBean","coinAmount","nftId","suffix","unexistKeys","OKXCosmosProvider","algo","bech32Address","pubKey","hexToUint8Array","signArbitrary","signerAddress","signDoc","account_number","sequence","fee","gas","msgs","memo","signData","signAmino","signOptions","resData","signed","signDirect","bodyBytes","authInfoBytes","accountNumber","messageToBuffer","arr","output","x","padStart","arrayBuffer","byteValue","isNaN","OKXStarknetProvider","STARKNET_CHAIN_ID","getChain","typedData","transactionData","transaction_hash","signMessageDeclareContractPayload","sendMessageExecuteTransactionDetail","calls","abis","transactionsDetail","executionRequest","OKXTonProvider","tonWallet","sessionWallet","requestAccountsWithNamespace","requestParams","OKXTronProvider","TRON_CHAIN_ID","stringToHex","signMessageV2","signedTx","realSignTx","visible","txID","rawData","contract","raw_data","expiration","ref_block_bytes","fee_limit","ref_block_hash","raw_data_hex","OKXUniversalProvider","eip155_1","sui_1","client_1","namespaces_1","solana_1","btc_1","aptos_1","ton_1","cosmos_1","tron_1","packages_1","starknet_1","opts","setGlobal","okxConnectUniversalinwindow","initialize","providerOpts","rpcProviders","requestParam","buildRequestParamFromRequest","getProvider","validateChain","keyArr","connectOpts","disconnectAndEmit","cleanup","aptosChainNameToGeneralId","replaceAptos","aptosNameSpace","realNS","replaceAptosInner","optionAptosNameSpace","realOptionNS","defaultChain","replaceAptosGeneralIdWithNetName","replaceSessionAptos","disconnectInner","connectAndSign","signRequest","updatedOpts","setNamespaces","onConnect","requestItem","signResponseList","okxConnectUniversalUIinwindow","creatNotSupportMethodItemReplay","syncAllAddresses","syncAddressAvailable","syncAllAddress","setDefaultChain","rpcUrl","checkStorage","sessionInfoStr","getFromStore","createProviders","registerEventListeners","SignClient","providersToCreate","parseNamespaceKey","namespacesValue","currentNameSpace","opts1","solanaProvider","sonicProvider","svmProvider","optsTon","tonProvider","optsSui","suiProvider","SuiProvider","optsBtc","btcProvider","fbProvider","aptosProvider","moveProvider","cosmosProvider","tronProvider","starknetProvider","PROVIDER_EVENTS","DEFAULT_CHAIN_CHANGED","caip2ChainId","onChainChanged","UPDATE_NAMESPACES","nameSpaces","nameSpacekey","persist","isChainNamespaceInSession","chainsArr","defaultNamespace","getDefaultChain","namespaceStr","caip2Chain","sessionProperties","showRequestModal","OKXUniversalProvider_1","OKXBtcProvider_1","OKXCosmosProvider_1","OKXTonProvider_1","OKXTronProvider_1","OKXStarknetProvider_1","ConnectMethodUtils_1","requestAccountItem","nameSpaceToConnectWalletNameSpace","SESSION_CONNECTING","connectMethodsToConnectWalletMethods","metadata","fillParamsToSession","connectMethodsResponseUpdate","allAddressStr","syncResoonseToRequire","connectSupportMethods","connectMethodsAdaptOldVersion","uint8array_extras_1","isRecord","notSupportError","errorItem","callBackParams","solAccount","account1","solAddress","fromAccountToAddress","stringToUint8Array","suiMessage","convertedArray","b64encoded","atob","btcAccounts","account2","btcAccount","btcAddress","paramData","aptosAccount","account3","aptosAddress","aptosChainId","cosmosAccount","account_cosmos","cosmosAddress","cosmosData","cosmosBase64Encoded","stringToBase64","methodItem","solanaSuccessData","suiMethod","requestMethod","suiMessageb64","aptosSignature","requireNameSpace","includeEip155","some","space","syncAddressHostAvailable","includeChain","paramsArr","firstParam","firstObj","aptosParams","currentURL","signChainId","applicationUrl","cosmosChain","responseAddressStr","allAddress","isEvm","deriveName","ci","evmAddress","freeze","getAccountsChains","isCaipNamespace","mergeRpcMap","targetRpcMap","sourceRpcMap","mergeNamespaces","source","rpcMap","fixMobileBtcSession","btcNameSpace","addressType","compressedPublicKey","GENERIC_SUBPROVIDER_NAME","RPC_URL","STORAGE","CONTEXT","WC_VERSION","PROTOCOL","RELAY_URL","LOGGER","JsonRpcConnection_1","JsonRpcProvider_1","httpProviders","createHttpProviders","updateNamespace","getAccounts","setHttpProvider","http","parsedChainId","parsedRpc","getRpcUrl","httpProvider","createHttpProvider","getHttpProvider","rpc","JsonRpcProvider","JsonRpcConnection","getGlobal","BtcProvider","CosmosProvider","updateRequestParams","isDic","decimalNumber","selectedChainId","chainNum","paramsChainId","paramsChainString","adaptArray","addressObj","isEqual","chainAddress","secondObj","hexChainId","getHexChainIdFromRequest","isChainApproved","configAddressAdaptInjectWallet","handleSwitchChain","addEthereumChain","resultData","rpcUrls","eip155","core_2","disableProviderPing","isAvailable","registering","register","parseError","IJSONRpcProvider","hasRegisteredEventListeners","setConnection","context","requestStrict","_error","SolanaProvider","getPubkey","getWalletAddress","components","StarknetProvider","TONProvider","newParams","fromAddress","TronProvider","IJSONRpcConnection","opt","globals","convertChainIdToNumber","parseChainId","mergeArrays","projectId","reference","CAIP_DELIMITER","b","okxGlobal","_createElementBlock","_hoisted_1","_createVNode","_component_el_container","_withCtx","_component_el_header","_cache","_createTextVNode","_component_el_main","_component_el_card","class","_createElementVNode","style","_component_el_row","_component_el_col","span","_toDisplayString","$options","_ctx","_component_el_checkbox","modelValue","withUI","$event","onChange","handleWithUI","universalToTG","handleUniversalToTG","_component_el_select","modals","placeholder","handleModalsSelect","multiple","_component_el_option","label","returnStrategy","handleReturnStrategySelect","_Fragment","_renderList","returnStrategies","strategy","_createBlock","_component_el_input","deeplink","handleReturnStrategyDeeplink","disabled","_createCommentVNode","handleLanguageSelect","locales","locale","theme","handleThemeSelect","THEME","LIGHT","DARK","selectedMethod","handleConnectMethodsSelect","connectMethods","tonProofValue","gutter","align","availableChains","checked","areChainsInit","isOptionalChecked","handleOptionChange","_component_el_button","onClick","initBtnClicked","connectInitStr","connectBtnClicked","connectStatusStr","syncAllAddressClick","syncAllAddressStr","disconnectAction","walletAddress","disconnectStatusStr","_Teleport","showModal","closeModal","_withModifiers","_component_qrcode_vue","qrValue","level","_component_el_tabs","activeTab","onTabClick","clickActiveTab","_component_el_tab_pane","eth_requestAccounts","eth_chainId","wallet_switchEthereumChain","wallet_addEthereumChain","personal_sign","eth_signTypedData_v4","eth_sendTransaction_transfer","eth_sendTransaction_approve","eth_sendTransaction_mint","wallet_watchAsset","ton_getAccount","ton_sendTransaction","sol_signMessage","sol_signTransaction","sol_signVersionedTransaction","sol_signAllTransactions","sol_signAllVersionedTransactions","sol_signAndSendTransaction","sol_signAndSendVersionedTransaction","_component_SuiPanel","onGenerateTransactionParams","sui_generateTransactionParams","_component_BTCPanel","btc_generateTransactionParams","_component_FractalPanel","fractal_generateTransactionParams","_component_TronTransactionPanel","tron_generateTransactionParams","onGenerateTransactionResult","tron_getTransactionResult","aptos_signMessage","aptos_signTransaction","aptos_signAndSubmitTransaction","cosmos_signArbitrary","cosmos_signAmino","cosmos_signDirect","wallet_testRpc","eth_sendTransaction_swap","move_signTransaction","move_signAndSubmitTransaction","_component_StarknetPanel","ref","starknet_generateTransactionParams","starknet_getTransactionResult","testBase64UrlSafe","xs","sm","handleRedirectSelect","canChainAddRedirectParam","redirectDeeplink","handleRedirectDeeplink","addRedirectParam","testTransaction","rows","testboc","$setup","sendBtnDisabled","testTransactionStr","btc_getAccount","btc_signMessage","sendAmount","clearable","btc_send","sendSatoshisAmount","btc_sendBitcoin","btc_signPsbt_up","btc_signAndPushPsbt_up","receiver","btc_sendInscription","props","setup","$emit","alert","autoFinalized","__exports__","fractal_getAccount","fractal_signMessage","fractal_send","fractal_sendBitcoin","fractal_signPsbt_up","fractal_signAndPushPsbt_up","fractal_sendInscription","sui_getAccount","sui_signMessage","sui_signPersonalMessage","sui_signTransaction2","sui_signAndExecuteTransaction","sui_requestRpc","sui_signTransaction_pre_execution","sui_signAndExecuteTransaction_pre_execution","recipientAddress","SuiTransaction","coin","splitCoins","transferObjects","transactionBlock","showEffects","txBytes","txSerialize","generateTsBytesAndSerizlize","resultTuple","senderAccounts","getFullnodeUrl","suiClient","SuiClient","setSender","build","currentSuiTransaction","currentSuiMethod","starknet_signMessage","starknet_sendTransaction","getCurrentAddress","rpcProvider","RpcProvider","nodeUrl","pk","Account","that","verifyMessage","isValid","uint256","bnToUint256","transferCalldata","CallData","compile","DAITokenAddress","invokeParams","contract_address","entry_point","calldata","getPublicKey","tron_signMessage","tron_signMessageV2","tron_signTransaction","tron_signAndSendTransactionContract","tron_signAndSendTransactionApprove","tronWeb","TronWeb","trx","base58Address","verifyMessageV2","isOnlySign","transactionBuilder","sendTrx","getContract","contractAddress","abi","entrys","parameter","triggerSmartContract","verifyADR36Amino","fromBech32","VConsole","allChains","chainsThatCanAddRedirectParam","optionChains","selectedModals","selectedReturnStrategy","selectedDeepLink","selectedLanguage","selectedTheme","TronTransactionPanel","QrcodeVue","BTCPanel","FractalPanel","SuiPanel","StarknetPanel","testTopic","testPublicKey","testProofPayload","pendingDeepLink","logList","localPubKey","localSecKey","selectedChain","ProofPayloadVerify","showVerifyRow","selectedMethodData","isChecked","reload","starknetPanelTypedData","computed","selectedChains","initChains","newChains","updatedChains","tab","tabName","initCall","OKXUniversalConnectUI","actionsConfiguration","uiPreferences","onModalStateChange","uri","isPC","testTonSdk","blockExplorerUrls","chainName","nativeCurrency","symbol","decimals","dataETH","dataPolygon","types","EIP712Domain","Person","Mail","primaryType","domain","verifyingContract","contents","maxPriorityFeePerGas","maxFeePerGas","gasPrice","gasLimit","image","tonUniversalLog","sendTransactionAlert","fetch","confirm","sendData","adapter","SuiAdapter","suiResult","signAndExecuteTransaction","sui_verifySignature","signPersonalMessage","btcAdapter","btcResult","currentBtcMethod","currentBtcTransaction","hexToBase64","bs64Str","fractalResult","currentFractalMethod","currentFractalTransaction","hexStr","blob","Blob","reader","FileReader","onload","base64Data","readAsDataURL","datatest","firstStr","showUrl","hasEip155","hasSolana","hasSui","hasBtc","hasAptos","hasTon","hasCosmos","hasTron","nameSpacesChains","optSpaceChains","solanaChains","hasStarknet","suiChains","btcChains","connectMethod","connectData","requireData","cosmos","tron","starknet","tonParams","ton","sui","btc","optData","eip155Chains","tonChains","signMethods","getCurrentSelectedMethodData","openModalAndSign","openModal","methodList","suiData","currentMethod","accountAddress","userAgentInfo","Agents","flag","isSafariOrChrome","result1","nacl","toBytes","AptosConfig","Network","Aptos","simple","sender","functionArguments","Connection","getSolConnect","blockhash","getLatestBlockhash","versionedTransactionMessage","TransactionMessage","payerKey","recentBlockhash","instructions","SystemProgram","transfer","fromPubkey","toPubkey","lamports","compileToV0Message","feePayer","cosmos_verifySignArbitrary","pub_key","signer","prefixStr","signatureBuffer","uint8Signature","pubKeyValueBuffer","pubKeyUint8Array","uiOptions","eth_verifyMessage","ethAddress","originalMessage","recoveredAddress","ethers","list","verifyList","requestItme","ethMessage","solanaMessage","verifySol","aptosMessage","aptosPublicKey","cosmosMessage","tronMessage","StarknetRpcProvider","StarknetAccount","signatureResult","resultObj","verifyPersonalMessageSignature","toSuiAddress","toBase64","newTransaction","created","mounted","scriptTag","createElement","src","getElementsByTagName","appendChild","title","$refs","starknetPanelRef","toRaw","render","app","createApp","App","use","ElementPlus","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","loaded","__webpack_modules__","amdO","deferred","O","chunkIds","priority","notFulfilled","Infinity","getter","d","leafPrototypes","getProto","__proto__","mode","def","current","definition","g","globalThis","Function","prop","Symbol","toStringTag","nmd","paths","children","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}