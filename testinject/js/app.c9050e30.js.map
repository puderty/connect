{"version":3,"file":"js/app.c9050e30.js","mappings":"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","sources":["webpack://okxconnectdemo/../packages/aptos-provider/src/AptosUtils.js","webpack://okxconnectdemo/../packages/aptos-provider/src/OKXAptosProvider.js","webpack://okxconnectdemo/../packages/aptos-provider/src/index.js","webpack://okxconnectdemo/../packages/solana-provider/src/OKXSolanaProvider.js","webpack://okxconnectdemo/../packages/solana-provider/src/index.js","webpack://okxconnectdemo/./src/App.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue?1b44","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue?e4fb","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue?aa83","webpack://okxconnectdemo/./src/components/StarknetTransactionPanel.vue","webpack://okxconnectdemo/./src/components/StarknetTransactionPanel.vue?1a06","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue?089a","webpack://okxconnectdemo/./src/App.vue?7ccd","webpack://okxconnectdemo/./src/main.js","webpack://okxconnectdemo/webpack/bootstrap","webpack://okxconnectdemo/webpack/runtime/amd options","webpack://okxconnectdemo/webpack/runtime/chunk loaded","webpack://okxconnectdemo/webpack/runtime/compat get default export","webpack://okxconnectdemo/webpack/runtime/create fake namespace object","webpack://okxconnectdemo/webpack/runtime/define property getters","webpack://okxconnectdemo/webpack/runtime/global","webpack://okxconnectdemo/webpack/runtime/hasOwnProperty shorthand","webpack://okxconnectdemo/webpack/runtime/make namespace object","webpack://okxconnectdemo/webpack/runtime/node module decorator","webpack://okxconnectdemo/webpack/runtime/jsonp chunk loading","webpack://okxconnectdemo/webpack/startup"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AptosUtils = void 0;\nclass AptosUtils {\n    static getTransaction(o) {\n        if (\"rawTransaction\" in o) {\n            let transaction = o;\n            if (\"entryFunction\" in transaction.rawTransaction.payload) {\n                let entryFunction = transaction.rawTransaction.payload.entryFunction;\n                let typeArgs = entryFunction.type_args;\n                let typeArguments = new Array();\n                typeArgs.forEach(typeTag => {\n                    typeArguments.push(typeTag.toString());\n                });\n                let realArguments = new Array();\n                this.getTypeArguments(entryFunction.args, realArguments);\n                let i = {\n                    arguments: realArguments,\n                    function: `${entryFunction.module_name.address.data ? entryFunction.module_name.address.toString() : entryFunction.module_name.address}::${entryFunction.module_name.name.identifier ? entryFunction.module_name.name.identifier : entryFunction.module_name.name}::${entryFunction.function_name.identifier ? entryFunction.function_name.identifier : entryFunction.function_name}`,\n                    type: \"entry_function_payload\",\n                    type_arguments: typeArguments\n                };\n                return this.getArguments(i);\n            }\n        }\n        return o;\n    }\n    static getTypeArguments(args, array) {\n        for (let j = 0; j < args.length; j++) {\n            let y = args[j];\n            if (\"values\" in y && y.values != null && y.values instanceof Array) {\n                let subArray = new Array();\n                array.push(subArray);\n                this.getTypeArguments(y.values, subArray);\n            }\n            else {\n                this.dealArrayElements(y, array);\n            }\n        }\n    }\n    static dealArrayElements(e, array) {\n        if (\"value\" in e && e.value != null) {\n            array.push(e.value.toString());\n        }\n        else if (\"data\" in e && e.data != null && e.data instanceof Uint8Array) {\n            return array.push(e.toString());\n        }\n        else {\n            return array.push(e.toString());\n        }\n    }\n    static getArguments(e) {\n        if (\"arguments\" in e) {\n            let t = e.arguments;\n            if (Array.isArray(t)) {\n                let r = new Array();\n                t.forEach(n => {\n                    if (n instanceof Uint8Array) {\n                        let o = new Array();\n                        n.forEach(i => {\n                            o.push(i);\n                        });\n                        r.push(o);\n                    }\n                    else\n                        r.push(n);\n                });\n                e = Object.assign(Object.assign({}, e), { arguments: r });\n            }\n        }\n        return e;\n    }\n}\nexports.AptosUtils = AptosUtils;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXAptosProvider = void 0;\nconst buffer_1 = require(\"buffer\");\nconst AptosUtils_1 = require(\"./AptosUtils\");\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXAptosProvider {\n    constructor(provider) {\n        this.chainsSet = new Set();\n        this.provider = provider;\n        this.getConnectedNamespace();\n    }\n    get defaultNetwork() {\n        let network = this.provider.requestDefaultChainWithNamespace(core_1.NameSpaceKeyAptos);\n        return network;\n    }\n    get currentChainId() {\n        return `aptos:${this.defaultNetwork}`;\n    }\n    getRealChainId(chainId) {\n        // if (chainId == \"aptos:mainnet\") {\n        //     return \"aptos:637\"\n        // } else if (chainId == \"movement:testnet\") {\n        //     return \"aptos:70000060\"\n        // }\n        if (chainId == null) {\n            if (this.chainsSet.size == 1) {\n                return this.currentChainId;\n            }\n            else {\n                throw new Error(\"connected to multiple aptos chains,chainId can not be null\");\n            }\n        }\n        else {\n            return chainId;\n        }\n    }\n    getConnectedNamespace() {\n        var _a, _b, _c;\n        (_c = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces) === null || _b === void 0 ? void 0 : _b['aptos']) === null || _c === void 0 ? void 0 : _c.chains.forEach(chain => {\n            this.chainsSet.add(chain);\n        });\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n        chainId = this.getRealChainId(chainId);\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['aptos']) === null || _b === void 0 ? void 0 : _b.accounts[0];\n        if (chainId != null) {\n            account = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces['aptos']) === null || _d === void 0 ? void 0 : _d.accounts.filter(function (account) {\n                return account.startsWith(chainId);\n            })[0];\n        }\n        (0, core_1.logDebug)(\"getAccount\", account);\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        console.log(\"aptos_publicKey\", (_f = (_e = this.provider.session) === null || _e === void 0 ? void 0 : _e.namespaces['aptos']) === null || _f === void 0 ? void 0 : _f.extra);\n        let extra = (_j = (_h = (_g = this.provider.session) === null || _g === void 0 ? void 0 : _g.namespaces['aptos']) === null || _h === void 0 ? void 0 : _h.extra) === null || _j === void 0 ? void 0 : _j[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n            if (publicKey != undefined && publicKey.startsWith(\"0x\")) {\n                publicKey = publicKey.substring(2);\n            }\n            console.log(\"aptos_publicKey\", publicKey);\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address,\n            publicKey: publicKey\n        };\n    }\n    signMessage(payload, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            let realChain = this.getRealChainId(chainId);\n            try {\n                let prefix = \"APTOS\";\n                let address = (_a = this.getAccount(realChain)) === null || _a === void 0 ? void 0 : _a.address;\n                let message = \"\", nonce = \"\";\n                var fullMessage = prefix;\n                let application = window.location.protocol + \"//\" + window.location.hostname;\n                if (\"address\" in payload && payload.address) {\n                    fullMessage += \"\\naddress: \" + address;\n                }\n                if (\"application\" in payload && payload.application) {\n                    fullMessage += \"\\napplication: \" + application;\n                }\n                if (\"chainId\" in payload && payload.chainId) {\n                    let chainId = 1;\n                    if (realChain == \"aptos:mainnet\") {\n                        chainId = 1;\n                    }\n                    else if (realChain == \"movement:testnet\") {\n                        chainId = 2;\n                    }\n                    fullMessage += \"\\nchainId: \" + chainId;\n                }\n                if (\"message\" in payload) {\n                    fullMessage += \"\\nmessage: \" + payload.message;\n                    message = payload.message;\n                }\n                if (\"nonce\" in payload) {\n                    fullMessage += \"\\nnonce: \" + payload.nonce;\n                    nonce = payload.nonce;\n                }\n                console.log(\"signMessage\", fullMessage);\n                const buffer = buffer_1.Buffer.from(fullMessage);\n                const hex = this.bufferToHex(buffer);\n                let data = {\n                    \"chainId\": realChain,\n                    \"method\": \"aptos_signMessage\",\n                    \"params\": {\n                        \"message\": hex,\n                    },\n                    injectParams: payload,\n                };\n                let signedMessage = yield this.provider.request(data, realChain);\n                if ('result' in signedMessage) {\n                    let successData = signedMessage.result;\n                    let signStr = successData;\n                    if (successData.startsWith(\"0x\")) {\n                        signStr = successData.slice(2, successData.length);\n                    }\n                    // try {\n                    //     let publicKey = this.getAccount(realChain)?.publicKey\n                    //     if (publicKey != undefined) {\n                    //         console.log(\"apt_signMessage\", Buffer.from(successData, 'hex'))\n                    //         console.log(\"apt_signMessage\", successData)\n                    //\n                    //         const verified = nacl.sign.detached.verify(\n                    //             Buffer.from(fullMessage),\n                    //             Buffer.from(signStr, 'hex'),\n                    //             Buffer.from(publicKey, 'hex'),\n                    //         );\n                    //         console.log(\"signMessage\", verified);\n                    //     }\n                    // } catch (_) {\n                    // }\n                    return new Promise((resolve, reject) => {\n                        resolve({\n                            address: address,\n                            application: application,\n                            chainId: realChain,\n                            fullMessage: fullMessage,\n                            message: message,\n                            nonce: nonce,\n                            prefix: prefix,\n                            signature: signStr,\n                            // verified:verified\n                        });\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        if (\"error\" in signedMessage) {\n                            resolve(signedMessage.error);\n                        }\n                    });\n                }\n            }\n            catch (error) {\n                console.error('方法数据回调失败 --Error--', error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    signTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let tx = AptosUtils_1.AptosUtils.getTransaction(transaction);\n            console.log(\"signTransaction\", tx);\n            let realChain = this.getRealChainId(chainId);\n            try {\n                let signature = yield this.provider.request({\n                    \"method\": \"aptos_signTransaction\",\n                    \"params\": tx\n                }, realChain);\n                if ('result' in signature) {\n                    let successData = signature.result;\n                    return new Promise((resolve, reject) => {\n                        resolve(buffer_1.Buffer.from(successData));\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        reject(signature);\n                    });\n                }\n            }\n            catch (error) {\n                (0, core_1.logDebug)(\"getSignedTransaction\", error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    signAndSubmitTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let tx = AptosUtils_1.AptosUtils.getTransaction(transaction);\n            console.log(\"signAndSubmitTransaction\", tx);\n            let realChain = this.getRealChainId(chainId);\n            try {\n                let signature = yield this.provider.request({\n                    \"method\": \"aptos_signAndSubmitTransaction\",\n                    \"params\": tx\n                }, realChain);\n                if ('result' in signature) {\n                    let successData = signature.result;\n                    return new Promise((resolve, reject) => {\n                        resolve(successData);\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        reject(signature);\n                    });\n                }\n            }\n            catch (error) {\n                (0, core_1.logDebug)(\"getSignedTransaction\", error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    bufferToHex(buf) {\n        return \"0x\" + buffer_1.Buffer.from(buf).toString(\"hex\");\n    }\n}\nexports.OKXAptosProvider = OKXAptosProvider;\nexports.default = OKXAptosProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXAptosProvider = void 0;\nvar OKXAptosProvider_1 = require(\"./OKXAptosProvider\");\nObject.defineProperty(exports, \"OKXAptosProvider\", { enumerable: true, get: function () { return OKXAptosProvider_1.OKXAptosProvider; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXSolanaProvider = void 0;\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXSolanaProvider {\n    getRealChainId(chainId) {\n        if (chainId == null) {\n            if (this.chainsSet.size == 1) {\n                let realChain = \"\";\n                let map = this.defaultChainMap;\n                this.chainsSet.forEach(function (chain) {\n                    if (map.has(chain)) {\n                        realChain = map.get(chain);\n                    }\n                });\n                if (realChain == \"\") {\n                    throw new Error(\"unsupported chainId\");\n                }\n                else {\n                    return realChain;\n                }\n            }\n            else {\n                throw new Error(\"connected to multiple solana chains,chainId can not be null\");\n            }\n        }\n        else {\n            if (chainId.startsWith(\"svm\")) {\n                return chainId;\n            }\n            else {\n                if (this.caip.includes(chainId)) {\n                    return chainId;\n                }\n                else {\n                    throw new Error(\"wrong chainId\");\n                }\n            }\n        }\n    }\n    getConnectedNamespace() {\n        var _a, _b, _c;\n        (_c = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces) === null || _b === void 0 ? void 0 : _b['solana']) === null || _c === void 0 ? void 0 : _c.chains.forEach(chain => {\n            this.chainsSet.add(chain.split(\":\")[0]);\n        });\n    }\n    constructor(provider) {\n        this.chainsSet = new Set();\n        this.caip = [\n            \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n            \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n            \"sonic:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n            \"sonic:EtWTRABZaYq6iMfeYKouRu166VU2xqa1\"\n        ];\n        this.defaultChainMap = new Map();\n        this.provider = provider;\n        this.defaultChainMap.set(\"solana\", \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\");\n        this.defaultChainMap.set(\"sonic\", \"sonic:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\");\n        this.getConnectedNamespace();\n    }\n    signMessage(message, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            let realMessage = message;\n            if (((_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.wallet) === null || _b === void 0 ? void 0 : _b.appName) == \"OKX Wallet\") {\n                realMessage = bs58_1.default.encode(new TextEncoder().encode(message));\n            }\n            else {\n                realMessage = message;\n            }\n            chainId = this.getRealChainId(chainId);\n            try {\n                let data = {\n                    \"chainId\": chainId,\n                    \"method\": \"solana_signMessage\",\n                    \"params\": {\n                        \"message\": realMessage,\n                        \"pubkey\": (_c = this.getAccount(chainId)) === null || _c === void 0 ? void 0 : _c.address\n                    },\n                    injectParams: {\n                        message: message,\n                        pubkey: (_d = this.getAccount(chainId)) === null || _d === void 0 ? void 0 : _d.address\n                    }\n                };\n                let signedMessage = yield this.provider.request(data, chainId);\n                (0, core_1.logDebug)(\"signMessage111\", signedMessage);\n                if ('result' in signedMessage) {\n                    let successData = signedMessage.result;\n                    return new Promise((resolve, reject) => {\n                        var _a;\n                        resolve({\n                            \"signature\": bs58_1.default.decode(successData),\n                            \"publicKey\": (_a = this.getAccount(chainId)) === null || _a === void 0 ? void 0 : _a.address\n                        });\n                    });\n                }\n                else {\n                    (0, core_1.logDebug)(\"signMessage111\", signedMessage);\n                    return new Promise((resolve, reject) => {\n                        resolve(signedMessage.error);\n                    });\n                }\n            }\n            catch (error) {\n                console.error('方法数据回调失败 --Error--', error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d;\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['solana']) === null || _b === void 0 ? void 0 : _b.accounts[0];\n        if (chainId != null) {\n            account = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces['solana']) === null || _d === void 0 ? void 0 : _d.accounts.filter(function (account) {\n                return account.startsWith(chainId);\n            })[0];\n        }\n        (0, core_1.logDebug)(\"getAccount\", account);\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const address = account.split(':')[2];\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address,\n            publicKey: new web3_js_1.PublicKey(address)\n        };\n    }\n    signTransaction(transaction, chainId) {\n        var _a, _b;\n        (0, core_1.logDebug)(\"OKXSolanaProvider\", typeof transaction);\n        chainId = this.getRealChainId(chainId);\n        try {\n            let serializedMessage = transaction.serialize({\n                requireAllSignatures: false,\n                verifySignatures: false,\n            });\n            let data = { \"data\": bs58_1.default.encode(serializedMessage), \"from\": (_a = this.getAccount(chainId)) === null || _a === void 0 ? void 0 : _a.address };\n            return this.getSignedTransaction(\"solana_signTransaction\", data, chainId, transaction);\n        }\n        catch (e) {\n            let serializedMessage = transaction.serialize();\n            let data = { \"data\": bs58_1.default.encode(serializedMessage), \"from\": (_b = this.getAccount(chainId)) === null || _b === void 0 ? void 0 : _b.address };\n            return this.getSignedTransaction(\"solana_signTransaction\", data, chainId, transaction);\n        }\n    }\n    signAllTransactions(transactions, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getRealChainId(chainId);\n            try {\n                var array = transactions.map((tx) => {\n                    var _a;\n                    var serializedMessage;\n                    if (tx instanceof web3_js_1.VersionedTransaction) {\n                        serializedMessage = tx.serialize();\n                    }\n                    else {\n                        serializedMessage = tx.serialize({\n                            requireAllSignatures: false,\n                            verifySignatures: false,\n                        });\n                    }\n                    return { \"data\": bs58_1.default.encode(serializedMessage), \"from\": (_a = this.getAccount(chainId)) === null || _a === void 0 ? void 0 : _a.address };\n                });\n                const response = yield this.provider.request({\n                    \"method\": \"solana_signAllTransactions\",\n                    \"params\": {\n                        \"transactions\": array\n                    },\n                    injectParams: transactions\n                }, chainId);\n                if (\"result\" in response) {\n                    let result = response.result;\n                    let newTransactions = JSON.parse(result).map((s) => {\n                        let c = bs58_1.default.decode(s);\n                        try {\n                            let transaction = web3_js_1.Transaction.from(c);\n                            (0, core_1.logDebug)(\"verifySignatures\", transaction.verifySignatures());\n                            return transaction;\n                        }\n                        catch (error) {\n                            return web3_js_1.VersionedTransaction.deserialize(c);\n                        }\n                    });\n                    return new Promise((resolve, reject) => {\n                        resolve(newTransactions);\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        resolve(response);\n                    });\n                }\n            }\n            catch (error) {\n                (0, core_1.logDebug)(\"getSignedTransaction\", error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    signAndSendTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b;\n            chainId = this.getRealChainId(chainId);\n            try {\n                let data = {};\n                try {\n                    let serializedMessage = transaction.serialize({\n                        requireAllSignatures: false,\n                        verifySignatures: false,\n                    });\n                    data = { \"data\": bs58_1.default.encode(serializedMessage), \"from\": (_a = this.getAccount(chainId)) === null || _a === void 0 ? void 0 : _a.address };\n                }\n                catch (e) {\n                    let serializedMessage = transaction.serialize();\n                    data = { \"data\": bs58_1.default.encode(serializedMessage), \"from\": (_b = this.getAccount(chainId)) === null || _b === void 0 ? void 0 : _b.address };\n                }\n                let signature = yield this.provider.request({\n                    \"method\": \"solana_signAndSendTransaction\",\n                    \"params\": data,\n                    injectParams: transaction\n                }, chainId);\n                if ('result' in signature) {\n                    let successData = signature.result;\n                    return new Promise((resolve, reject) => {\n                        resolve(successData);\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        resolve(signature);\n                    });\n                }\n            }\n            catch (error) {\n                (0, core_1.logDebug)(\"getSignedTransaction\", error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    getSignedTransaction(method, transactionStr, chainId, transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let signature = yield this.provider.request({\n                    \"method\": method,\n                    \"params\": transactionStr,\n                    injectParams: transaction\n                }, chainId);\n                if ('result' in signature) {\n                    let successData = signature.result;\n                    let c = bs58_1.default.decode(successData);\n                    let resultTx;\n                    try {\n                        resultTx = web3_js_1.Transaction.from(c);\n                    }\n                    catch (error) {\n                        resultTx = web3_js_1.VersionedTransaction.deserialize(c);\n                    }\n                    if (!(resultTx instanceof web3_js_1.VersionedTransaction)) {\n                        (0, core_1.logDebug)(\"verifySignatures\", resultTx.verifySignatures());\n                    }\n                    return new Promise((resolve, reject) => {\n                        resolve(resultTx);\n                    });\n                }\n                else if (\"injectResult\" in signature) {\n                    (0, core_1.logDebug)(\"getSignedTransaction injectResult\");\n                    let resultTx = signature.injectResult;\n                    return new Promise((resolve, reject) => {\n                        resolve(resultTx);\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        reject(signature);\n                    });\n                }\n            }\n            catch (error) {\n                (0, core_1.logDebug)(\"getSignedTransaction\", error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n}\nexports.OKXSolanaProvider = OKXSolanaProvider;\nexports.default = OKXSolanaProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXSolanaProvider = void 0;\nvar OKXSolanaProvider_1 = require(\"./OKXSolanaProvider\");\nObject.defineProperty(exports, \"OKXSolanaProvider\", { enumerable: true, get: function () { return OKXSolanaProvider_1.OKXSolanaProvider; } });\n","<template>\n  <div id=\"app\">\n    <el-container>\n      <el-header>OKX Connect</el-header>\n      <el-main>\n        <el-card class=\"wallet-info\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Wallet Info</div>\n          </template>\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Wallet Address:</strong> {{ getWalletAddress }}\n            </el-col>\n          </el-row>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Status :</strong> {{ currentStatus }}\n            </el-col>\n          </el-row>\n\n        </el-card>\n\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Connect Params</div>\n          </template>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"12\">\n              <el-checkbox v-model=\"withUI\" @change=\"handleWithUI\">\n                Show UI</el-checkbox>\n            </el-col>\n\n            <el-col :span=\"12\">\n              <el-checkbox v-model=\"universalToTG\" @change=\"handleUniversalToTG\">\n                Use mini wallet</el-checkbox>\n            </el-col>\n          </el-row>\n\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Modals</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"modals\" placeholder=\"Modals\" @change=\"handleModalsSelect\" multiple>\n                <el-option label=\"Before\" value=\"before\" />\n                <el-option label=\"Success\" value=\"success\" />\n                <el-option label=\"Error\" value=\"error\" />\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center; justify-content: space-between;\">\n            <el-col :span=\"6\" style=\"gap: 2px\">\n              <p style=\"font-size: 11pt; margin: 0px\">Return Strategy</p>\n              <p style=\"font-size: 9pt; margin: 0px\">(Mobile only)</p>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-select\n                v-model=\"returnStrategy\"\n                @change=\"handleReturnStrategySelect\"\n                placeholder=\"Return Strategy\"\n              >\n                <el-option\n                  v-for=\"strategy in returnStrategies\"\n                  :key=\"`return-strategy-select-option-${strategy}`\"\n                  :label=\"strategy\"\n                  :value=\"strategy\"\n                />\n              </el-select>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-input\n                v-if=\"returnStrategy === 'deeplink'\"\n                v-model=\"deeplink\"\n                @change=\"handleReturnStrategyDeeplink\"\n                placeholder=\"Deeplink\"\n                :disabled=\"returnStrategy !== 'deeplink'\"\n                style=\"margin: 0px\"\n              />\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Lang</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"language\" @change=\"handleLanguageSelect\" placeholder=\"Language\">\n                <el-option v-for=\"locale in locales\" :key=\"`language-select-option-${locale}`\" :label=\"locale\"\n                  :value=\"locale\" />\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Theme</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"theme\" @change=\"handleThemeSelect\" placeholder=\"Theme\">\n                <el-option label=\"LIGHT\" :value=\"THEME.LIGHT\" />\n                <el-option label=\"DARK\" :value=\"THEME.DARK\" />\n              </el-select>\n            </el-col>\n          </el-row>\n\n<!--          <el-row>-->\n<!--          <el-row style=\"align-items: center\">-->\n<!--            <el-col :span=\"4\">-->\n<!--              <p style=\"font-size: 11pt\">Connect</p>-->\n<!--              <p style=\"font-size: 11pt\">Methods</p>-->\n<!--            </el-col>-->\n<!--            <el-col :span=\"20\">-->\n<!--              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" placeholder=\"Methods\">-->\n<!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n<!--                           :value=\"methods\" />-->\n\n<!--              </el-select>-->\n<!--            </el-col>-->\n<!--          </el-row>-->\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Connect</p>\n              <p style=\"font-size: 11pt\">Methods</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" multiple placeholder=\"methods\">\n                <el-option\n                    v-for=\"item in connectMethods\"\n                    :key=\"item\"\n                    :label=\"item\"\n                    :value=\"item\">\n                </el-option>\n              </el-select>\n\n\n<!--              <el-select v-model=\"selectedMethod\" placeholder=\"Methods\" @change=\"handleConnectMethodsSelect\" multiple>-->\n<!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n<!--                           :value=\"methods\" />-->\n<!--              </el-select>-->\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">ton_proof</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-input v-model=\"tonProofValue\"  placeholder=\"input ton_proof\"></el-input>\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" align=\"middle\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Required Chains</div>\n            </el-col>\n            <el-col\n              :span=\"6\"\n              v-for=\"item in Object.keys(availableChains)\"\n              :key=\"item\"\n            >\n              <el-checkbox\n                v-model=\"availableChains[item].checked\"\n                :disabled=\"!areChainsInit\"\n                >{{ availableChains[item].name }}</el-checkbox\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" align=\"middle\" style=\"margin-top: 20px\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Optional Chains</div>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(43114)\" @change=\"() => handleOptionChange(43114)\">\n                AVAX</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(10)\" @change=\"() => handleOptionChange(10)\">OP</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(8453)\" @change=\"() => handleOptionChange(8453)\">\n                BASE</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(99781165)\"\n                @change=\"() => handleOptionChange(99781165)\">Nonexist</el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp')\" @change=\"() => handleOptionChange('solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp')\">Solana</el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('ton:-239')\" @change=\"() => handleOptionChange('ton:-239')\">Ton</el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('btc:mainnet')\" @change=\"() => handleOptionChange('btc:mainnet')\">btc</el-checkbox>\n            </el-col>\n\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"initBtnClicked\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectInitStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                type=\"primary\"\n                @click=\"connectBtnClicked\"\n                icon=\"el-icon-connection\"\n                :disabled=\"!areChainsInit\"\n                >{{ connectStatusStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"syncAllAddressClick\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ syncAllAddressStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                type=\"danger\"\n                @click=\"disconnectAction\"\n                icon=\"el-icon-switch-button\"\n                :disabled=\"!areChainsInit || walletAddress.length == 0\"\n                >{{ disconnectStatusStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n          <teleport to=\"body\">\n            <div v-if=\"showModal\" class=\"modal-overlay\" @click=\"closeModal\">\n              <div class=\"modal-content\" @click.stop>\n                <button class=\"close-button\" @click=\"closeModal\">\n                  &times;\n                </button>\n                <h2>Scan to connect</h2>\n                <qrcode-vue :value=\"qrValue\" :size=\"350\" level=\"L\" />\n              </div>\n            </div>\n          </teleport>\n        </el-card>\n\n        <!-- 发送交易 -->\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Transactions</div>\n          </template>\n\n          <el-tabs v-model=\"activeTab\" type=\"border-card\" @tab-click=\"clickActiveTab\">\n            <!-- ETH -->\n            <el-tab-pane label=\"ETH\" name=\"eip155:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to ETH)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve TONCoin)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(eth mint\n                    nft)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add SPX6900)\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TON\" name=\"ton:-239\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_getAccount\">ton_getAccount</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_sendTransaction\">ton_sendTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- solana -->\n            <el-tab-pane label=\"Sol\" name=\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- Sui-->\n            <el-tab-pane label=\"Sui\" name=\"sui:mainnet\">\n              <SuiPanel @generateTransactionParams=\"sui_generateTransactionParams\" />\n            </el-tab-pane>\n            <!-- BTC -->\n            <el-tab-pane label=\"BTC\" name=\"btc:mainnet\">\n              <BTCPanel @generateTransactionParams=\"btc_generateTransactionParams\" />\n            </el-tab-pane>\n\n            <!-- Fractal BTC -->\n            <el-tab-pane label=\"Fractal\" name=\"fractal:mainnet\">\n              <FractalPanel @generateTransactionParams=\"fractal_generateTransactionParams\" />\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Tron\" name=\"tron:mainnet\">\n              <TronTransactionPanel\n                  @generateTransactionParams=\"tron_generateTransactionParams\"\n                  @generateTransactionResult=\"tron_getTransactionResult\" />\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Aptos\" name=\"aptos:mainnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signTransaction\">aptos_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"aptos_signAndSubmitTransaction\">aptos_signAndSubmitTransaction</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Cosmos\" name=\"cosmos:cosmoshub-4\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <!-- Polygon-->\n            <el-tab-pane label=\"Polygon\" name=\"eip155:137\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send POL)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve sushi)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(polygon mint\n                    nft)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add LGNS)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_testRpc()\">wallet_testRpc(Polygon)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\"\n                  >eth_sendTransaction(转账FUSE)</el-button\n                  >\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\"\n                  >eth_sendTransaction(授权USDC)</el-button\n                  >\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- BSC-->\n            <el-tab-pane label=\"BNB\" name=\"eip155:56\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to BNB)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve POSI)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add FET)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_testRpc()\">wallet_testRpc(check balance on eth)</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Fuse\" name=\"eip155:122\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_swap\">eth_sendTransaction(Swap)</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Sonic testnet\" name=\"svm:70000062\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Movement\" name=\"movement:testnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"move_signTransaction\">move_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"move_signAndSubmitTransaction\">move_signAndSubmitTransaction</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n\n            <el-tab-pane label=\"osmos\" name=\"cosmos:osmosis-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"SEI\" name=\"cosmos:pacific-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Starknet\" name=\"starknet:mainnet\">\n              <StarknetPanel ref=\"starknetPanelRef\" @generateTransactionParams=\"starknet_generateTransactionParams\" @generateTransactionResult=\"starknet_getTransactionResult\" />\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TEST \" name=\"test:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"testBase64UrlSafe\">testBase64UrlSafe</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n          </el-tabs>\n\n          <el-col :xs=\"24\" :sm=\"24\" style=\"margin: 16px 0px;\">\n            <el-row style=\"align-items: center; justify-content: space-between; margin-bottom: 8px;\">\n              <el-col :span=\"4\">\n                <p style=\"font-size: 11pt; margin: 0px; text-align: start\">Redirect param (only for ETH, Polygon, BNB, Fuse)</p>\n              </el-col>\n              <el-col :span=\"9\">\n                <el-select\n                  v-model=\"redirect\"\n                  @change=\"handleRedirectSelect\"\n                  placeholder=\"Return Strategy\"\n                  :disabled=\"!canChainAddRedirectParam()\"\n                  >\n                  <el-option\n                    v-for=\"strategy in returnStrategies\"\n                    :key=\"`return-strategy-select-option-${strategy}`\"\n                    :label=\"strategy\"\n                    :value=\"strategy\"\n                  />\n                </el-select>\n              </el-col>\n              <el-col :span=\"10\">\n                <el-input\n                  v-if=\"redirect === 'deeplink'\"\n                  v-model=\"redirectDeeplink\"\n                  @change=\"handleRedirectDeeplink\"\n                  placeholder=\"Deeplink\"\n                  :disabled=\"!canChainAddRedirectParam() || redirect !== 'deeplink'\"\n                  style=\"margin: 0px\"\n                />\n              </el-col>\n            </el-row>\n            <el-button\n              type=\"primary\" @click=\"addRedirectParam()\"\n              :disabled=\"!canChainAddRedirectParam() || !testTransaction\"\n            >\n              Add redirect param to data\n            </el-button>\n          </el-col>\n\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Data:</div>\n            <el-input v-model=\"testTransaction\" type=\"textarea\" :rows=\"5\" placeholder=\"sendTransactions\"></el-input>\n          </el-col>\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Result :</div>\n            <el-input v-model=\"testboc\" type=\"textarea\" :rows=\"5\" placeholder=\"boc\"></el-input>\n          </el-col>\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button type=\"primary\" :disabled=\"sendBtnDisabled\" @click=\"sendTransaction()\">{{\n                testTransactionStr\n                }}</el-button>\n            </el-col>\n          </el-row>\n        </el-card>\n      </el-main>\n    </el-container>\n  </div>\n</template>\n\n<style scoped>\n/* 重置全局边距和内边距 */\nbody,\nhtml {\n  margin: 0;\n  padding: 0;\n  height: 100%;\n}\n\n/* 确保 app 容器占满整个视口 */\n#app {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin: 0 auto;\n  /* 居中 */\n  max-width: 600px;\n  /* 设置最大宽度 */\n  padding: 0 20px;\n  /* 添加一些左右内边距 */\n}\n\n/* 调整 el-container 样式 */\n.el-container {\n  min-height: 100vh;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n}\n\n/* 调整 el-header 样式 */\n.el-header {\n  background-color: #333333;\n  color: white;\n  height: 50px;\n  line-height: 50px;\n  font-size: 18px;\n  font-weight: bold;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1000;\n}\n\n/* 调整 el-main 样式 */\n.el-main {\n  padding: 70px 0 20px;\n  /* 增加顶部内边距以避免被固定header遮挡 */\n  flex-grow: 1;\n}\n\n.el-card {\n  margin-bottom: 20px;\n}\n\n.info-row {\n  margin-bottom: 10px;\n}\n\n.input-label {\n  margin-bottom: 5px;\n  text-align: left;\n}\n\n.el-input {\n  margin-bottom: 10px;\n}\n\n/* 通用按钮样式 */\n.wallet-actions .el-button,\n.transaction .el-button,\n.clear-cache .el-button {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 40px;\n}\n\n.wallet-actions .el-button span,\n.transaction .el-button span,\n.clear-cache .el-button span {\n  margin: 0 auto;\n}\n\n/* 按钮行间距 */\n.wallet-actions .button-row,\n.transaction .button-row {\n  margin-bottom: 8px;\n}\n\n.wallet-actions .button-row:last-child,\n.transaction .button-row:last-child {\n  margin-bottom: 0;\n}\n\n/* 调整图标和文字的对齐 */\n.wallet-actions .el-button [class^=\"el-icon-\"],\n.transaction .el-button [class^=\"el-icon-\"],\n.clear-cache .el-button [class^=\"el-icon-\"] {\n  margin-right: 5px;\n  vertical-align: middle;\n}\n\n/* 新增：调整发送交易按钮与输入框的间距 */\n.transaction .el-row:not(:last-child) {\n  margin-bottom: 10px;\n}\n\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.modal-content {\n  background-color: white;\n  padding: 20px;\n  border-radius: 8px;\n  text-align: center;\n  position: relative;\n  max-width: 90%;\n  width: 400px;\n}\n\n.close-button {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  font-size: 24px;\n  border: none;\n  background: none;\n  cursor: pointer;\n}\n\n/* 响应式调整 */\n@media (max-width: 600px) {\n  #app {\n    padding: 0 10px;\n  }\n\n  .el-main {\n    padding: 60px 0 10px;\n  }\n}\n</style>\n<script>\nimport {OKX_CONNECT_ERROR_CODES, safeJsonStringify,getAppWalletDeepLink,getUniversalLink} from \"@okxconnect/core\"\nimport {\n  OKXBtcProvider,\n  OKXUniversalProvider,\n  OKXCosmosProvider,\n  OKXTonProvider,\n  OKXTronProvider,\n  OKXStarknetProvider\n} from \"@okxconnect/universal-provider\"\nimport {OKXSolanaProvider} from \"@okxconnect/solana-provider\";\nimport {\n  Connection,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n  TransactionMessage,\n  VersionedTransaction\n} from '@solana/web3.js';\nimport {OKXSuiProvider as SuiAdapter} from \"@okxconnect/sui-provider\"\nimport QrcodeVue from 'qrcode.vue'\n\nimport {OKXAptosProvider} from \"@okxconnect/aptos-provider\";\nimport {Aptos, AptosConfig, Network} from \"@aptos-labs/ts-sdk\";\n\nimport BTCPanel from \"./components/BtcTransactionPanel.vue\";\nimport FractalPanel from \"./components/FractalTransactionPanel.vue\"\nimport SuiPanel from \"./components/SuiTransactionPanel.vue\";\nimport StarknetPanel from \"./components/StarknetTransactionPanel.vue\";\n\nimport {OKXUniversalConnectUI, THEME} from \"@okxconnect/ui\";\nimport {ethers} from 'ethers';\nimport VConsole from 'vconsole';\nimport nacl from \"tweetnacl\";\nconst { verifyADR36Amino } = require('@keplr-wallet/cosmos')\nconst { fromBech32 } = require('@cosmjs/encoding')\nimport { verifyPersonalMessageSignature } from '@mysten/sui/verify';\nimport {useShortLink} from \"@okxconnect/core\";\nimport TronTransactionPanel from \"@/components/TronTransactionPanel.vue\";\nimport {TronWeb} from \"tronweb\";\nimport { RpcProvider as StarknetRpcProvider, Account as StarknetAccount } from \"starknet\";\nimport { ref, toRaw } from \"vue\";\nnew VConsole();\n\nconst allChains = {\n  1: { name: \"Eth\", checked: false },\n  56: { name: \"BNB\", checked: false },\n  137: { name: \"Polygon\", checked: false },\n  122: { name: \"Fuse\", checked: false },\n  \"ton:-239\":{name: \"TON\",checked: false},\n  \"btc:mainnet\": { name: \"BTC\", checked: false },\n  \"sui:mainnet\": { name: \"Sui\", checked: false },\n  \"aptos:mainnet\": { name: \"Aptos\", checked: false },\n  \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\": {\n    name: \"Solana\",\n    checked: false,\n  },\n  \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\": {\n    name: \"Sol testnet\",\n    checked: false,\n  },\n  \"svm:70000062\": {\n    name: \"Sonic testnet\",\n    checked: false,\n  },\n  \"movement:testnet\": { name: \"Movement\", checked: false },\n  \"fractal:mainnet\": { name: \"Fractal\", checked: false },\n  \"cosmos:osmosis-1\": {name: \"Osmos\", checked: false},\n  \"cosmos:cosmoshub-4\": {name: \"Cosmos\", checked: false},\n  \"cosmos:pacific-1\": {name: \"SEI\", checked: false},\n  \"cosmos:abvdefg\": {name: \"cosmos:abvdefg\", checked: false},\n  \"tron:mainnet\": {name: \"tron\", checked: false},\n  997865: { name: \"Non Exist chain\", checked: false },\n  2020: { name: \"Ronin\", checked: false },\n  1666600000: { name: \"Harmony\", checked: false },\n  \"starknet:mainnet\": { name: \"starknet\", checked: false }\n};\n\nconst chainsThatCanAddRedirectParam = [\n  \"eip\"\n]\n\nvar optionChains = new Set([]);\nvar selectedModals = [\"before\", \"success\", \"error\"];\nvar selectedReturnStrategy = \"none\";\nvar selectedDeepLink = \"tg://resolve\";\nvar selectedLanguage = \"en_US\";\nvar selectedTheme = THEME.LIGHT;\n\n// import QrcodeVue from 'qrcode.vue'\nexport default {\n  name: \"App\",\n  components: {\n    TronTransactionPanel,\n    QrcodeVue,\n    BTCPanel,\n    FractalPanel,\n    SuiPanel,\n    StarknetPanel\n  },\n\n  setup() {\n    const sendBtnDisabled = ref(false)\n\n    return {\n      sendBtnDisabled\n    }\n  },\n  data: () => {\n    return {\n      activeTab: \"eip155:1\",\n      testTopic: \"\",\n      testPublicKey: \"\",\n      testProofPayload: \"\",\n      tonProofValue:\"\",\n      pendingDeepLink: \"-\",\n      logList: [],\n      connectReady: false,\n      connectStatusStr: \"Connect\",\n      syncAllAddressStr: \"syncAllAddress\",\n      connectInitStr: \"init test\",\n      disconnectStatusStr: \"Disconnect\",\n      localPubKey: \"\",\n      localSecKey: \"\",\n      testTransaction: \"\",\n      selectedChain: \"eip155:1\",\n      testTransactionStr: \"Send\",\n      walletAddress: \"\",\n      testboc: \"\",\n      ProofPayloadVerify: \"\",\n      showModal: false,\n      showVerifyRow: false,\n      qrValue: \"https://www.okx.com/download\",\n      currentStatus: \"\",\n      areChainsInit: false,\n      availableChains: allChains,\n      isOptionalChecked: (chainId) => {\n        return optionChains.has(chainId);\n      },\n      withUI: localStorage.getItem(\"autoRefresh\") != \"false\",\n      universalToTG: localStorage.getItem(\"universalToTG\") != \"false\",\n      modals: selectedModals,\n      returnStrategies: [\"none\", \"back\", \"deeplink\"],\n      returnStrategy: selectedReturnStrategy,\n      deeplink: selectedDeepLink,\n      locales: [\n        \"en_US\",\n        \"ru_RU\",\n        \"zh_CN\",\n        \"zh\",\n        \"ar_AE\",\n        \"cs_CZ\",\n        \"de_DE\",\n        \"es_ES\",\n        \"es_LAT\",\n        \"fr_FR\",\n        \"id_ID\",\n        \"it_IT\",\n        \"nl_NL\",\n        \"pl_PL\",\n        \"pt_BR\",\n        \"pt_PT\",\n        \"ro_RO\",\n        \"tr_TR\",\n        \"uk_UA\",\n        \"vi_VN\",\n        \"zh_TW\"\n      ],\n      selectedMethod:[],\n      selectedMethodData:[],\n      connectMethods:[\n        \"wallet_addEthereumChain(ETH)\",\n        \"personal_sign(ETH)\",\n        \"solana_signMessage(Sol mainnet)\",\n        \"sui_signMessage(Sui mainnet)\",\n        \"sui_signPersonalMessage(Sui mainnet)\",\n        \"btc_signMessage(BTC)\",\n        \"aptos_signMessage(aptos mainnet)\",\n        \"cosmos_signArbitrary(cosmoshub)\",\n        \"test_noSupport_eth(ETH)\",\n        \"tron_signMessage\",\n        \"tron_signMessageV2\",\n        \"starknet_signMessage\",\n        \"sync_all_addresses\"\n      ],\n\n      language: selectedLanguage,\n      theme: selectedTheme,\n      THEME: THEME,\n      redirect: selectedReturnStrategy,\n      redirectDeeplink: selectedDeepLink,\n      handleWithUI: (isChecked) => {\n        localStorage.setItem(\"autoRefresh\", `${isChecked}`);\n        location.reload();\n      },\n      handleUniversalToTG: (isChecked) => {\n        localStorage.setItem(\"universalToTG\", `${isChecked}`);\n      },\n      handleOptionChange: (chainId) => {\n        if (optionChains.has(chainId)) {\n          optionChains.delete(chainId);\n        } else {\n          optionChains.add(chainId);\n        }\n      },\n      starknetPanelTypedData: ''\n    };\n  },\n  computed: {\n    getWalletAddress: function () {\n      return this.walletAddress;\n    },\n  },\n  methods: {\n    isChecked(chainId) {\n      return this.selectedChains.has(chainId);\n    },\n\n    initChains(newChains) {\n      if (newChains.length > 0) {\n        const updatedChains = Object.assign({}, this.availableChains);\n        for (const chainId of newChains) {\n          if (updatedChains[chainId]){\n            updatedChains[chainId].checked = !updatedChains[chainId].checked;\n          }\n        }\n        this.availableChains = updatedChains;\n      }\n\n      this.areChainsInit = true;\n    },\n\n    async clickActiveTab(tab) {\n      const tabName = tab.props ? tab.props.name : tab.name;\n      this.selectedChain = tabName;\n      console.log(`已切换到链 :`, tabName);\n\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      if (tabName == \"starknet:mainnet\") {\n        this.sendBtnDisabled = true\n      }else {\n        this.sendBtnDisabled = false\n      }\n\n      window.provider.setDefaultChain(this.selectedChain);\n    },\n\n    async initBtnClicked() {\n      window.okxLogDebug = true\n      var initCall;\n      if (!this.withUI) {\n        initCall = OKXUniversalProvider.init({\n          dappMetaData: {\n            name: \"univer test dapp\",\n            icon: \"https://avatars.githubusercontent.com/u/37784886\",\n          },\n        });\n      } else {\n        initCall = OKXUniversalConnectUI.init({\n          dappMetaData: {\n            icon: \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\",\n            name: \"OKX WalletConnect UI Demo\",\n          },\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: 'all',\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme\n          },\n        });\n      }\n\n      initCall.then((provider) => {\n        window.provider = provider;\n        window.tonProvider = new OKXTonProvider(window.provider);\n        window.tonProvider.onStatusChange((walletInfo) => {\n              console.log('TONConnection onStatusChange:', JSON.stringify(walletInfo));\n            }, (err) => {\n              console.log('TONConnection onStatusChange error:', err);\n            }\n        )\n\n        if (window.provider instanceof OKXUniversalConnectUI) {\n          window.provider.onModalStateChange((state)=>{\n            console.log(`onModalStateChange   ${JSON.stringify(state)}`)\n          })\n        }\n\n        console.log(\"init finished:\", provider);\n        console.log(\"init finished session:\", JSON.stringify(provider.session));\n\n        if (provider.session?.namespaces) {\n          const newChains = [];\n          console.log(\"namespaces\", provider.session.namespaces);\n          Object.entries(provider.session.namespaces).forEach(([key, value]) => {\n            if (key === \"eip155\") {\n              value.chains.forEach((chain) => {\n                newChains.push(parseInt(chain.substring(7)));\n              });\n            }\n            else {\n              value.chains.forEach((chain) => {\n                newChains.push(chain);\n              });\n            }\n          });\n\n          console.log(\"existing chains:\", newChains);\n          this.initChains(newChains);\n        } else {\n          this.initChains([]);\n        }\n\n        provider.on(\"display_uri\", (uri) => {\n          if (!useShortLink()){\n            if (this.isPC()) {\n              if (uri && !this.withUI && !this.universalToTG) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          }\n          console.log(\"通知>>>display_uri  ==> \", uri);\n        });\n\n        provider.on(\"connect_signResponse\", (items) => {\n          console.log(\"通知>>>connect_signResponse  ==> \", JSON.stringify(items));\n          this.verifyMessage(items)\n        })\n\n        provider.on(\"short_display_uri\", (uri) => {\n          if (useShortLink()){\n            if (this.isPC()) {\n              if (uri && !this.withUI && !this.universalToTG) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          }\n          console.log(\"通知>>>short_display_uri  ==> \", uri);\n        });\n\n\n        provider.on(\"session_connecting\", () => {\n          if (useShortLink()){\n            alert(\"session_connecting\")\n          }\n          console.log(\"通知>>>session_connecting  ==> \");\n        });\n\n        provider.on(\"connect\", (session) => {\n          console.log(\"通知>>>get connect session\", session);\n        });\n        provider.on(\"reconnect\", (session) => {\n          console.log(\"通知>>>get reconnect session\", session);\n          this.walletAddress = \"connected\";\n        });\n        provider.on(\"disconnect\", ({ topic }) => {\n          console.log(`通知>>>get disconnect  ${topic}`);\n          this.walletAddress = \"disconnecteddddd\";\n        });\n        provider.on(\"session_delete\", ({ topic }) => {\n          console.log(`通知>>>get session_delete  ${topic}`);\n        });\n        provider.on(\"session_update\", (session) => {\n          console.log(`通知>>>get session_update `, JSON.stringify(session));\n        });\n      });\n    },\n\n    async connectBtnClicked() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        this.testTonSdk();\n      } else {\n        console.log(`connectBtnClicked provider not finish init`);\n      }\n    },\n\n    async syncAllAddressClick() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        if (window.provider instanceof OKXUniversalProvider){\n          if (window.provider.connected()){\n            try {\n              let message = await window.provider.syncAllAddresses()\n              if (typeof message == \"string\") {\n                this.testboc = message\n              } else {\n                this.testboc = JSON.stringify(message)\n              }\n            }catch (e) {\n              this.testboc = JSON.stringify(e)\n            }\n          }else{\n            this.testboc = \"not connected\"\n          }\n        }\n\n      } else {\n        console.log(`syncAllAddress provider not finish init`);\n      }\n    },\n\n    async disconnectAction() {\n      try {\n        console.log(\"get disconnect wallet btn clicked\");\n        // await TON.disconnect();\n        var provider = window.provider;\n        await provider.disconnect();\n        this.walletAddress = \"disconnected\";\n      } catch (error) {\n        console.log(\"Disconnect  error ==>> \", error.message);\n        this.currentStatus = error.message;\n      }\n    },\n\n    async eth_requestAccounts() {\n      var data = { method: \"eth_requestAccounts\" };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_chainId() {\n      var data = { method: \"eth_chainId\" };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async wallet_switchEthereumChain() {\n      var data = { method: \"wallet_switchEthereumChain\" };\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async wallet_addEthereumChain() {\n      var data = {\n        method: \"wallet_addEthereumChain\",\n        params: {\n          blockExplorerUrls: [\"https://explorer.fuse.io\"],\n          chainId: \"0x7a\",\n          chainName: \"Fuse\",\n          nativeCurrency: { name: \"Fuse\", symbol: \"FUSE\", decimals: 18 },\n          rpcUrls: [\"https://rpc.fuse.io\"],\n        },\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n    async personal_sign() {\n      if (this.selectedChain === \"eip155:1\") {\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0x1ca023f10e157d148deed210f8bee193657a1eaa7f187909e20a9dc3b071dbc364c41fde37960c05093359f410a061ec8a7dca8c0c39fc7c1e24de8a3329775d1b\n\n        var accounts = await window.provider.request(\n          { method: \"eth_requestAccounts\" },\n          \"eip155:1\"\n        );\n        var address = accounts[0];\n        console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n        var dataETH = {\n          method: \"personal_sign\",\n          params: [\n            \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n            address,\n          ],\n        };\n\n        this.testTransaction = JSON.stringify(dataETH);\n      } else if (\n        this.selectedChain === \"eip155:137\" ||\n        this.selectedChain === \"eip155:122\"\n      ) {\n        // method\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0xebda9cfa2af43999058dffa0107031d1ef7fc0252dca85dcbd22ea097af922ca39b64d509ef61ce42b7641c5840b8a80337ffd1411b13e87e2260a3f1b6c151c1b\n\n        var dataPolygon = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n        this.testTransaction = JSON.stringify(dataPolygon);\n      } else if (this.selectedChain === \"eip155:56\") {\n        var data = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n\n        this.testTransaction = JSON.stringify(data);\n      }\n    },\n\n    async eth_sendTransaction_swap() {\n      var data = {\n        method: \"eth_sendTransaction\",\n        chainId: \"eip155:122\",\n        params: {\n          value: \"0x38d7ea4c68000\",\n          gas: \"0x2665f\",\n          to: \"0xf2614A233c7C3e7f08b1F887Ba133a13f1eb2c55\",\n          from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n          data: \"0x2646478b000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee00000000000000000000000000000000000000000000000000038d7ea4c68000000000000000000000000000620fd5fa44be6af63715ef4e65ddfa0387ad13f5000000000000000000000000000000000000000000000000000000000000001b000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000700301ffff0201602352A9Eb5234466Eac23E59e7B99bCaE79C39c0BE9e53fd7EDaC9F859882AfdDa116645287C629040BE9e53fd7EDaC9F859882AfdDa116645287C62900602352A9Eb5234466Eac23E59e7B99bCaE79C39c01f2F3e73be57031114dd1f4E75c1DD87658be7F0E000bb800000000000000000000000000000000\",\n        },\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_signTypedData_v4() {\n      // method\n      // eth_signTypedData\n      // address\n      // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n      // valid\n      // true\n      // result\n      // 0xa8bb3c6b33a119d2d567c7632195c21988df778006082742125a591f5c633f716107883a37f7de6531a6312a5f69022135bf46fe5ab77905b62c82b3395f985e1b\n      //\n\n      // var data = {\n      //   \"method\": \"eth_signTypedData_v4\",\n      //   \"params\": {\n      //     \"typedDataJson\":\"{\\\"types\\\":{\\\"EIP712Domain\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"version\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"chainId\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"name\\\":\\\"verifyingContract\\\",\\\"type\\\":\\\"address\\\"}],\\\"Person\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"wallet\\\",\\\"type\\\":\\\"address\\\"}],\\\"Mail\\\":[{\\\"name\\\":\\\"from\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"to\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"contents\\\",\\\"type\\\":\\\"string\\\"}]},\\\"primaryType\\\":\\\"Mail\\\",\\\"domain\\\":{\\\"name\\\":\\\"Ether Mail\\\",\\\"version\\\":\\\"1\\\",\\\"chainId\\\":1,\\\"verifyingContract\\\":\\\"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\\\"},\\\"message\\\":{\\\"from\\\":{\\\"name\\\":\\\"Cow\\\",\\\"wallet\\\":\\\"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\\\"},\\\"to\\\":{\\\"name\\\":\\\"Bob\\\",\\\"wallet\\\":\\\"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\\\"},\\\"contents\\\":\\\"Hello, Bob!\\\"}}\"\n      // }}\n\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n        this.selectedChain\n      );\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n      var data = {\n        method: \"eth_signTypedData_v4\",\n        params: [\n          address,\n          {\n            types: {\n              EIP712Domain: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"version\",\n                  type: \"string\",\n                },\n                {\n                  name: \"chainId\",\n                  type: \"uint256\",\n                },\n                {\n                  name: \"verifyingContract\",\n                  type: \"address\",\n                },\n              ],\n              Person: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"wallet\",\n                  type: \"address\",\n                },\n              ],\n              Mail: [\n                {\n                  name: \"from\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"to\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"contents\",\n                  type: \"string\",\n                },\n              ],\n            },\n            primaryType: \"Mail\",\n            domain: {\n              name: \"Ether Mail\",\n              version: \"1\",\n              chainId: 1,\n              verifyingContract: \"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\",\n            },\n            message: {\n              from: {\n                name: \"Cow\",\n                wallet: \"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\",\n              },\n              to: {\n                name: \"Bob\",\n                wallet: \"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\",\n              },\n              contents: \"Hello, Bob!\",\n            },\n          },\n        ],\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_sendTransaction_transfer() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            chainId: \"0x1\",\n            to: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            value: \"0x5af3107a4000\",\n            maxPriorityFeePerGas: \"0x3b9aca00\",\n            gas: \"0x5e56\",\n            maxFeePerGas: \"0x2643b9db8\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gasPrice: \"0x17003f6530\",\n            nonce: \"0x0d30\",\n            data: \"0x\",\n            value: \"0x00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasLimit: \"0x5208\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x5e56\",\n            value: \"0x5af3107a4000\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasPrice: \"0x3b9aca00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            chainId: \"0x38\",\n          },\n        };\n      }else if(this.selectedChain === \"eip155:122\"){\n         data =   {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            value: \"0x0\",\n            chainId: \"0x7a\",\n          }\n        }\n      }\n\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n        this.selectedChain\n      );\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"to\"] = address;\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_approve() {\n      var data = {};\n\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000000000000022d473030f116ddee9f6b43ac78ba3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x582d872a1b094fc48f5de31d3b73f2d9be47def1\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000f6f8096ac575b0\",\n            to: \"0x0b3F868E0BE5597D5DB7fEB59E1CADBb0fdDa50a\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            value: \"0x0\",\n            gas: \"0xe117\",\n            gasPrice: \"0xb2d05e00\",\n            data: \"0x095ea7b300000000000000000000000031c2f6fcff4f8759b3bd5bf0e1084a055615c768ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x5CA42204cDaa70d5c773946e69dE942b85CA6706\",\n          },\n        };\n      }else if (this.selectedChain === 'eip155:122'){\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000000000000013b3\",\n            to: \"0x620fd5fa44BE6af63715Ef4E65DDFA0387aD13F5\",\n          },\n        };\n      }\n\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n        this.selectedChain\n      );\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_mint() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x4cacb\",\n            data: \"0xa64dfa75000000000000000000000000ed688002f3797599db8b4feacfe8b1dda0df1c8d000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cecb15396825a895ff8da8fc2d2c77a234dccee00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f6261667962656968643737366b6177706e71336f6f6a6635693274787a76617737737164656b34616a776472637472703261366f626b70723773792f7b69647d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002an            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x30795\",\n            data: \"0xa64dfa75000000000000000000000000341b3687f0309778f08f29336b2c4b9c38b9f110000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f62616679626569686a6279676b68747a71376b68377434336266686e676e793236337668766f6578716a6d6e377161716166366e717a64743777712f7b69647dan            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      }\n\n      let str = JSON.stringify(data);\n      console.log(\"-----长度--->\", str.length);\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n          this.selectedChain\n      );\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async wallet_testRpc() {\n      let provider = window.provider;\n      provider.setDefaultChain(\n        `eip155:56`,\n        `https://eth-mainnet.g.alchemy.com/v2/NxUfYJUr-TQtEpLmSXhhD5pXn70GwsyV`\n      );\n      var data = {\n        method: \"eth_getBalance\",\n        params: [\"0x8D97689C9818892B700e27F316cc3E41e17fBeb9\", \"latest\"],\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async wallet_watchAsset() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xe0f63a424a4439cbe457d80e4f4b51ad25b2c56c\",\n              symbol: \"SPX6900\",\n              image:\n                \"https://assets.coingecko.com/coins/images/31401/standard/sticker_%281%29.jpg?1702371083\",\n              decimals: 8,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xeB51D9A39AD5EEF215dC0Bf39a8821ff804A0F01\",\n              symbol: \"LGNS\",\n              image: \"https://polygonscan.com/token/images/originlgns_32.png\",\n              decimals: 9,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0x031b41e504677879370e9dbcf937283a8691fa7f\",\n              symbol: \"FET\",\n              image: \"https://bscscan.com/token/images/fetch_32.png\",\n              decimals: 18,\n            },\n          },\n        };\n      }\n\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async ton_sendTransaction() {\n      var data  = {\n        \"messages\":[{\"address\":\"EQARULUYsmJq1RiZ-YiH-IJLcAZUVkVff-KBPwEmmaQGH6aC\",\"amount\":\"205000000\",\"payload\":\"te6cckEBAgEAhwABbQ+KfqUAAADNgG7tIEATEtAIAO87mQKicbKgHIk4pSPP4k5xhHqutqYgAB7USnesDnCcECwbgQMBAJUlk4VhgBD3JEg1TUr75iTijBghOKm/sxNDXUBl7CD6WMut0Q85x4RafwA/Es89DBXoTxuqxVFxyBbzt9Rav2HBUKl7hmkvLuKHLBCW57aK\"}],\n        \"validUntil\":1792481054,\n        \"network\":'-239'}\n      this.testTransaction = JSON.stringify(data)\n    },\n    ton_getAccount() {\n      this.testTransaction = \"这里是同步获取 不再需要点击 <<发送交易>>\"\n      let result =   window.tonProvider.account()\n      if (result) {\n        this.testboc = JSON.stringify(result);\n      } else {\n        this.testboc = 'null'\n      }\n    },\n\n    async tonUniversalLog() {\n      console.log(\"ton 信息: tonProvider  connected:\",window.tonProvider.connected())\n      console.log(\"ton 信息: tonProvider  account:\",JSON.stringify(window.tonProvider.account()))\n      console.log(\"ton 信息: tonProvider  wallet:\",JSON.stringify(window.tonProvider.wallet()))\n    },\n\n    async sendTransactionAlert() {\n      //\n      const response = await fetch(`https://apitest.fireverse.ai/oauth/okx/getNonce?publicAddress=0x0cecb15396825a895ff8da8fc2d2c77a234dccee`);\n      const data = await response.json();\n      console.log(\"请求数据----\",JSON.stringify(data))\n      await this.personal_sign()\n      if (confirm(\"Are you want to sign message?\")) {\n        this.sendTransaction();\n      }\n\n      // window.open(\"https://www.okx.com/download?deeplink=okx%3A%2F%2Fweb3%2Fwallet%2Fconnect\",'_self')\n    },\n\n    async sendTransaction() {\n      if (this.selectedChain.startsWith(\"aptos\")\n          || this.selectedChain.startsWith(\"movement\")\n          || this.selectedChain.startsWith(\"solana\")\n          || this.selectedChain.startsWith(\"sonic\")\n          || this.selectedChain.startsWith(\"cosmos\")) {\n        return\n      }\n      console.log(\"sendTransaction\", window.provider);\n      console.log(\"sendTransaction内容11------\", this.testTransaction);\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      if (this.testTransaction && window.provider) {\n        // eslint-disable-next-line no-undef\n        const sendData = JSON.parse(this.testTransaction);\n        try {\n          console.log(\"sendTransaction-----22method>>\", sendData.method);\n\n          let chainId = \"eip155:1\";\n          if (this.selectedChain) {\n            chainId = this.selectedChain;\n            console.log(\n              \"sendTransaction-----this.selectedChain>>\",\n              this.selectedChain\n            );\n          }\n          console.log(\"windowOpen[click_1]: \", Date.now());\n          if (chainId == \"sui:mainnet\") {\n            const adapter = new SuiAdapter(window.provider);\n            var suiResult = \"invalid result\";\n            if (this.currentSuiMethod == 'sui_getAccount') {\n              let result = adapter.getAccount()\n              if (typeof result == \"string\") {\n                this.testboc = result\n              } else {\n                this.testboc = JSON.stringify(result)\n              }\n            }\n            if (this.currentSuiMethod == \"sui_signTransaction\") {\n              suiResult = await adapter.signTransaction(\n                this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signAndExecuteTransaction\") {\n              suiResult = await adapter.signAndExecuteTransaction(\n                this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signMessage\") {\n              console.log(\"signMessage----\", this.currentSuiTransaction);\n              suiResult = await adapter.signMessage(this.currentSuiTransaction);\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_signPersonalMessage\") {\n              console.log(\n                \"signPersonalMessage----\",\n                this.currentSuiTransaction\n              );\n              suiResult = await adapter.signPersonalMessage(\n                this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_testRpc\") {\n              console.log(\"test rpc----\", this.currentSuiTransaction);\n              console.log(\n                `请求数据发送 rpc ----->> ${JSON.stringify(sendData)}`\n              );\n              const res = await window.provider.request(sendData, chainId);\n              console.log(`请求数据回调 rpc ----->> ${JSON.stringify(result)}`);\n              if (typeof res == \"string\") {\n                this.testboc = res;\n              } else {\n                this.testboc = JSON.stringify(res);\n              }\n            }\n            console.log(\"windowOpen[click_2]: \", Date.now());\n            return;\n          }else if(chainId === \"ton:-239\"){\n            console.log(\n                `请求数据发送 sendTransaction ---ton-->> ${JSON.stringify(sendData)}`\n            );\n            let result =  await window.tonProvider.sendTransaction(sendData)\n            console.log(\n                `请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`\n            );\n            if (typeof result == \"string\") {\n              this.testboc = result;\n            } else {\n              this.testboc = JSON.stringify(result);\n            }\n            return\n          }\n\n          if (chainId == 'btc:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var btcResult = 'invalid result'\n\n            if (this.currentBtcMethod == 'btc_signMessage') {\n              btcResult = await btcAdapter.signMessage(chainId, this.currentBtcTransaction[\"signStr\"])\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_send') {\n              btcResult = await btcAdapter.send(chainId, this.currentBtcTransaction)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signPsbt') {\n              btcResult = await btcAdapter.signPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n\n              this.hexToBase64(btcResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentBtcMethod == 'btc_signPsbts') {\n              btcResult = await btcAdapter.signPsbts(chainId, this.currentBtcTransaction.psbtHexs, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_sendInscription') {\n              btcResult = await btcAdapter.sendInscription(chainId, this.currentBtcTransaction.address, this.currentBtcTransaction.inscriptionId, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signAndPushPsbt') {\n              btcResult = await btcAdapter.signAndPushPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            }else if (this.currentBtcMethod == 'btc_sendBitcoin') {\n              btcResult = await btcAdapter.sendBitcoin(chainId, this.currentBtcTransaction.toAddress, this.currentBtcTransaction.satoshis, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            }else if (this.currentBtcMethod == 'btc_getAccount'){\n              btcResult = btcAdapter.getAccount(chainId)\n              this.testboc = JSON.stringify(btcResult)\n            }\n\n            return\n          }\n\n          if (chainId == 'fractal:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var fractalResult = 'invalid result'\n\n            if (this.currentFractalMethod == 'fractal_signMessage') {\n              fractalResult = await btcAdapter.signMessage(chainId, this.currentFractalTransaction['signStr'])\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_send') {\n              fractalResult = await btcAdapter.send(chainId, this.currentFractalTransaction)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signPsbt') {\n              fractalResult = await btcAdapter.signPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.hexToBase64(fractalResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentFractalMethod == 'fractal_signPsbts') {\n              fractalResult = await btcAdapter.signPsbts(chainId, this.currentFractalTransaction.psbtHexs, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_sendInscription') {\n              fractalResult = await btcAdapter.sendInscription(chainId, this.currentFractalTransaction.address, this.currentFractalTransaction.inscriptionId, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signAndPushPsbt') {\n              fractalResult = await btcAdapter.signAndPushPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            }else if (this.currentFractalMethod == 'fractal_sendBitcoin') {\n              fractalResult = await btcAdapter.sendBitcoin(chainId, this.currentFractalTransaction.toAddress, this.currentFractalTransaction.satoshis, this.currentFractalTransaction.options)\n\n              this.testboc = JSON.stringify(fractalResult)\n            }else if (this.currentFractalMethod == 'fractal_getAccount'){\n              fractalResult = btcAdapter.getAccount(chainId)\n              this.testboc = JSON.stringify(fractalResult)\n            }\n\n            return\n          }\n\n          console.log(`请求数据发送 sendTransaction ----->> ${JSON.stringify(sendData)}`)\n          var result = await window.provider.request(sendData, chainId)\n          console.log(`请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`)\n\n          console.log(\"windowOpen[click_3]: \", Date.now());\n          if (typeof result == \"string\") {\n            this.testboc = result;\n          } else {\n            this.testboc = JSON.stringify(result);\n          }\n          console.log(\"方法数据回调 --this.testboc--\", this.testboc);\n        } catch (error) {\n          console.error(\"方法数据回调失败 --Error--\", error.message);\n\n          if (error.code === OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n            this.testboc = error.message;\n          } else {\n            this.testboc = \"wrong signature！\" + error.message;\n          }\n        }\n      } else {\n        alert(\"Please input transaction data\");\n      }\n    },\n\n    hexToBase64(hexStr) {\n      var bytes = [];\n      for (var i = 0; i < hexStr.length; i += 2) {\n        bytes.push(parseInt(hexStr.substr(i, 2), 16));\n      }\n      const buffer = new Uint8Array(bytes)\n      const blob = new Blob([buffer]);\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = function (e) {\n          var base64Data = e.target.result.split(\",\")[1]\n          resolve(base64Data);\n        };\n        reader.onerror = function (e) {\n          reject(e);\n        };\n        reader.readAsDataURL(blob);\n      });\n    },\n    testBase64UrlSafe(){\n      let datatest = {\"protocolVer\":1,\"topic\":\"8a7a4c3be73802d0ae2587123ade7bb79f27433b9aa3ca589a2208a2089eecfd\",\"clientId\":\"5f1bbf9eac92160affa7ef04d0a710817ddb6d8c22ebbd6263e86f059930b404\",\"requestId\":\"1731383250054\",\"dAppInfo\":{\"url\":\"connect.oker.vip\",\"origin\":\"https://connect.oker.vip\",\"name\":\"univer test dapp\",\"icon\":\"https://avatars.githubusercontent.com/u/37784886\"},\"requests\":[{\"name\":\"requestAccounts\",\"requiredNamespaces\":[{\"namespace\":\"aptos\",\"chains\":[\"aptos:637\"]}],\"optionalNamespaces\":[],\"connectRequestMethods\":[{\"chainId\":\"aptos:637\",\"method\":\"aptos_signMessage\",\"params\":{\"data\":{\"address\":true,\"application\":true,\"chainId\":true,\"message\":\"123 中文测试!\",\"nonce\":\"1234\"},\"applicationUrl\":\"https://connect.oker.vip\",\"prefix\":\"APTOS\",\"aptosChainId\":\"1\"}}]}],\"redirect\":\"none\"}\n      let json = JSON.stringify(datatest)\n      const utf8Array = new TextEncoder().encode(json);\n      let binary = '';\n      utf8Array.forEach(byte => {\n        binary += String.fromCharCode(byte);\n      });\n\n      let firstStr =  btoa(binary)\n      console.log(\"字符串编码1>>>>\",firstStr)\n      firstStr = firstStr.replace(/\\+/g, '-')  // 替换 '+'\n      console.log(\"字符串编码2>>>>\",firstStr)\n      firstStr = firstStr.replace(/\\//g, '_')  // 替换 '/'\n      console.log(\"字符串编码3>>>>\",firstStr)\n      firstStr = firstStr.replace(/=+$/, '');  // 移除 '=';\n      console.log(\"字符串编码4>>>>\",firstStr)\n\n      let showUrl =  getUniversalLink(getAppWalletDeepLink(firstStr))\n      console.log(\"字符串编码5>>>>\",showUrl)\n      this.qrValue = showUrl;\n      this.showModal = true;\n    },\n\n\n    async testTonSdk() {\n      // 1. connect\n      //  create sub providers for each namespace/chain\n      let nameSpacesChains = [];\n      let optSpaceChains = [];\n\n      let solanaChains = [\n        \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n        \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n        \"svm:70000062\",\n      ];\n      let hasEip155, hasSolana, hasSui, hasBtc, hasAptos, hasTon, hasCosmos, hasTron, hasStarknet = false\n\n      let suiChains = [\n        \"sui:mainnet\",\n      ];\n\n      let btcChains = [\n        \"btc:mainnet\",\n        \"fractal:mainnet\"\n      ];\n\n      const chains = Object.entries(this.availableChains)\n          .filter((chain) => chain[1].checked)\n          .map((chain) => chain[0]);\n      console.log(`chains  ===> ${chains.values()}`)\n      chains.forEach(function (chainId) {\n        console.log(`chains.forEach chainId  ===> ${chainId}`)\n\n        if (solanaChains.includes(chainId)) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"ton\")) {\n          nameSpacesChains.push(chainId)\n          hasTon = true\n          return\n        }\n        if (typeof chainId == 'string' && (chainId.startsWith(\"aptos\") || chainId.startsWith(\"movement\"))) {\n          nameSpacesChains.push(chainId)\n          hasAptos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId)\n          hasSolana = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"cosmos\")) {\n          nameSpacesChains.push(chainId)\n          hasCosmos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"tron\")) {\n          nameSpacesChains.push(chainId)\n          hasTron = true\n          return\n        }\n\n        if (typeof chainId == 'string' && chainId.startsWith(\"starknet\")) {\n          nameSpacesChains.push(chainId)\n          hasStarknet = true\n          return\n        }\n\n        if (suiChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`);\n          nameSpacesChains.push(chainId);\n          hasSui = true;\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`)\n          nameSpacesChains.push(chainId)\n          hasBtc = true\n          return\n        }\n\n        hasEip155 = true\n        nameSpacesChains.push(`eip155:${chainId}`)\n      })\n\n\n      optionChains.forEach(function (chainId) {\n        if (solanaChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n        if (typeof chainId == \"string\" && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (suiChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          optSpaceChains.push(chainId)\n          return\n        }\n\n        if (chainId.startsWith('ton')) {\n          optSpaceChains.push(chainId)\n          return\n        }\n\n        optSpaceChains.push(`eip155:${chainId}`)\n      })\n\n      console.log(`namespaceChains  ===> ${JSON.stringify(nameSpacesChains)}`);\n      var connectData = {};\n      if (nameSpacesChains && nameSpacesChains.length > 0) {\n        var requireData = {};\n\n        if (hasEip155) {\n          requireData.eip155 = {\n            chains: nameSpacesChains.filter((item) =>\n              item.startsWith(\"eip155\")\n            ),\n            defaultChain: nameSpacesChains.filter((item) =>\n              item.startsWith(\"eip155\")\n            )[0],\n          };\n        }\n        if (hasSolana) {\n          requireData.solana = {\n            chains: nameSpacesChains.filter(\n              (item) =>\n                item.startsWith(\"solana\") ||\n                item.startsWith(\"sonic\") ||\n                item.startsWith(\"svm\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n              (item) =>\n                item.startsWith(\"solana\") ||\n                item.startsWith(\"sonic\") ||\n                item.startsWith(\"svm\")\n            )[0],\n          };\n        }\n\n        if (hasCosmos) {\n          requireData.cosmos = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            )[0],\n          }\n        }\n        if (hasTron) {\n          requireData.tron = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            )[0],\n          }\n        }\n        if (hasStarknet) {\n          requireData.starknet = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"starknet\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"starknet\")\n            )[0],\n          }\n        }\n        if (hasTon) {\n\n          //\n          let tonParams = {\n            ton_addr:{\n              name: 'ton_addr',\n            }\n          };\n          if (this.tonProofValue){\n            tonParams = {\n              ton_addr:{\n                name: 'ton_addr',\n              },\n              ton_proof:{\n                name: 'ton_proof',\n                payload: this.tonProofValue,\n              }\n            };\n          }\n\n\n          requireData.ton = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"ton\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"ton\"))[0],\n            params:tonParams\n          };\n        }\n\n        if (hasSui) {\n          requireData.sui = {\n            chains: nameSpacesChains.filter((item) => item.startsWith(\"sui\")),\n            defaultChain: nameSpacesChains.filter((item) =>\n              item.startsWith(\"sui\")\n            )[0],\n            rpcMap: {\n              \"sui:mainnet\": \"https://www.okx.com/fullnode/sui/discover/rpc\"\n            }\n          };\n        }\n        if (hasAptos) {\n          requireData.aptos = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\"))[0]\n          }\n        }\n\n        if (hasBtc) {\n          let btcChains = nameSpacesChains.filter(item => item.startsWith(\"btc\") || item.startsWith(\"fractal\"))\n          requireData.btc = {\n            chains: btcChains,\n            defaultChain: btcChains[0]\n          }\n        }\n        console.log(`requireData  ===> ${JSON.stringify(requireData)}`)\n        connectData['namespaces'] = requireData;\n        console.log(JSON.stringify(connectData))\n      }\n\n      if (optSpaceChains && optSpaceChains.length > 0) {\n        const optData = {};\n\n        const eip155Chains = optSpaceChains.filter((item) => item.startsWith(\"eip155\"));\n        if (eip155Chains.length > 0) {\n          optData[\"eip155\"] = {\n            chains: eip155Chains,\n            defaultChain: eip155Chains[0],\n          };\n        }\n\n        const solanaChains = optSpaceChains.filter((item) => item.startsWith(\"solana\"));\n        if (solanaChains.length > 0) {\n          optData[\"solana\"] = {\n            chains: solanaChains,\n            defaultChain: solanaChains[0],\n          };\n        }\n\n        const tonChains = optSpaceChains.filter((item) => item.startsWith(\"ton\"));\n        if (tonChains.length > 0) {\n\n          let tonParams = {\n            ton_addr:{\n              name: 'ton_addr',\n            }\n          };\n          if (this.tonProofValue){\n            tonParams = {\n              ton_addr:{\n                name: 'ton_addr',\n              },\n              ton_proof:{\n                name: 'ton_proof',\n                payload: this.tonProofValue,\n              }\n            };\n          }\n\n\n          optData[\"ton\"] = {\n            chains: tonChains,\n            defaultChain: tonChains[0],\n            params: tonParams\n          };\n        }\n\n        const btcChains = optSpaceChains.filter((item) => item.startsWith(\"btc\"));\n        if (btcChains.length > 0) {\n          optData[\"btc\"] = {\n            chains: btcChains,\n            defaultChain: btcChains[0],\n          };\n        }\n\n        connectData[\"optionalNamespaces\"] = optData;\n      }\n\n      if (nameSpacesChains.length === 0 && optSpaceChains.length === 0) {\n        //未选择链\n        alert(\"Please select a chain from above to continue\");\n        return;\n      }\n      console.log(\"=====>connectData \");\n      console.log(connectData);\n\n      var connectMethod;\n      let signMethods = this.getCurrentSelectedMethodData();\n      if (window.provider instanceof OKXUniversalConnectUI) {\n        if (signMethods && signMethods.length>0){\n          connectMethod = window.provider.openModalAndSign(connectData,JSON.parse(JSON.stringify(signMethods)));\n        }else {\n          connectMethod = window.provider.openModal(connectData);\n        }\n      } else {\n        if (this.universalToTG){\n          connectData.sessionConfig = {\n            useMini:true,\n            openUniversalUrl:true,\n            tmaReturnUrl:'back'\n          }\n        }else{\n          connectData.sessionConfig = {\n            redirect: selectedReturnStrategy\n          }\n        }\n        if (signMethods && signMethods.length>0){\n          connectMethod = window.provider.connectAndSign(connectData,JSON.parse(JSON.stringify(signMethods)));\n        }else {\n          connectMethod = window.provider.connect(connectData);\n        }\n      }\n\n      await connectMethod\n        .then((result) => {\n          // 2. set defaul chain\n          this.walletAddress = \"connected\";\n          if (this.isPC()) {\n            this.showModal = false;\n          }\n          if (result){\n            this.testboc = JSON.stringify(result)\n          }\n\n          if (window.provider.session && window.provider.session.namespaces){\n            let ton = window.provider.session.namespaces[\"ton\"];\n          console.log(\"是否包含ton\",ton)\n            if (ton){\n              this.tonUniversalLog()\n            }\n          }\n        })\n        .catch((error) => {\n          if (error.code == 301) {\n            setTimeout(() => {\n              alert(error.message)\n            }, 0.5);\n          } else if (error.message){\n            alert(error.message)\n          }\n          console.error(\"发生了错误：\", error);\n        });\n    },\n\n    getCurrentSelectedMethodData(){// 连接签名\n      var methodList = [];\n      this.selectedMethod.forEach(method =>{\n        switch (method) {\n          case \"wallet_addEthereumChain(ETH)\":\n            methodList.push({\n              method: \"wallet_addEthereumChain\",\n              chainId:\"eip155:1\",\n              params: {\n                blockExplorerUrls: [\"https://explorer.fuse.io\"],\n                chainId: \"0x7a\",\n                chainName: \"Fuse\",\n                nativeCurrency: { name: \"Fuse\", symbol: \"FUSE\", decimals: 18 },\n                rpcUrls: [\"https://rpc.fuse.io\"],\n              },\n            })\n            break;\n          case \"personal_sign(ETH)\":\n            methodList.push(\n              {\n                method: \"personal_sign\",\n                chainId: \"eip155:1\",\n                params: [\n                  \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n                ],\n              });\n            break;\n          case \"solana_signMessage(Sol mainnet)\":\n            methodList.push(\n              {\n                \"chainId\": \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n                \"method\": \"solana_signMessage\",\n                \"params\": {\n                  \"message\": \"Hello Solana\",\n                }\n              }\n            );\n            break;\n          case \"sui_signMessage(Sui mainnet)\":\n          case \"sui_signPersonalMessage(Sui mainnet)\": {\n            let suiData = [\n              76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n              109, 111, 118, 101,\n            ];\n            let uint8Array = new Uint8Array(suiData);\n            let currentMethod = \"sui_signMessage\";\n            this.currentSuiTransaction = {\n              message:uint8Array\n            }\n\n            if(method.startsWith(\"sui_signPersonalMessage\")){\n              currentMethod = \"sui_signPersonalMessage\";\n            }\n            methodList.push(\n                {\n                  method: currentMethod,\n                  chainId: \"sui:mainnet\",\n                  params: {\n                    message: uint8Array,\n                  }\n                }\n            );\n            break;\n          }\n          case \"btc_signMessage(BTC)\":\n            methodList.push(\n              {\n                method: \"btc_signMessage\",\n                chainId: \"btc:mainnet\",\n                params: {\n                  message: \"Welcome to BTC\"\n                }\n              }\n            )\n            break;\n          case \"aptos_signMessage(aptos mainnet)\":\n            methodList.push(\n              {\n                \"chainId\": \"aptos:mainnet\",\n                \"method\": \"aptos_signMessage\",\n                \"params\": {\n                  address: true,\n                  application: true,\n                  chainId: true,\n                  message: \"Hello Aptos\",\n                  nonce: \"1234\"\n                }\n              }\n            )\n            break;\n          case \"cosmos_signArbitrary(cosmoshub)\":\n            methodList.push(\n                {\n                  \"chainId\": \"cosmos:cosmoshub-4\",\n                  \"method\": \"cosmos_signArbitrary\",\n                  \"params\": {\n                    message: \"test cosmos\"\n                  }\n                }\n            )\n\n            break;\n          case \"test_noSupport_eth(ETH)\":\n            methodList.push(\n                {\n                  chainId: \"eip155:1\",\n                  method: \"test_noSupport_eth\",\n                  params: {\n                    message: \"test hello\",\n                  }\n                }\n            )\n            break;\n          case \"sync_all_addresses\":\n            methodList.push(\n                {\n                  method: \"sync_all_addresses\",\n                });\n            break;\n          case \"tron_signMessage\":\n            methodList.push(\n                {\n                  chainId:\"tron:mainnet\",\n                  method: \"tron_signMessage\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n          case \"tron_signMessageV2\":\n            methodList.push(\n                {\n                  chainId:\"tron:mainnet\",\n                  method: \"tron_signMessageV2\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n\n            //\n          case \"starknet_signMessage\": {\n            const signData = {\n              \"domain\": {\n                \"chainId\": \"0x534e5f4d41494e\",\n                \"name\": \"STRKFarm\",\n                \"version\": \"1\"\n              },\n              \"message\": {\n                \"document\": \"app.strkfarm.xyz/tnc/v1\",\n                \"message\": \"Read and Agree T&C\"\n              },\n              \"primaryType\": \"Tnc\",\n              \"types\": {\n                \"StarkNetDomain\": [\n                  {\n                    \"name\": \"name\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"version\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"chainId\",\n                    \"type\": \"felt\"\n                  }\n                ],\n                \"Tnc\": [\n                  {\n                    \"name\": \"message\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"document\",\n                    \"type\": \"felt\"\n                  }\n                ]\n              }\n            }\n            methodList.push({\n              chainId:\"starknet:mainnet\",\n              method: \"starknet_signMessage\",\n              params: {\n                accountAddress: \"\",\n                typedData: signData\n              }\n            })\n          }\n            break\n          default:\n\n            break;\n        }\n      })\n      this.selectedMethodData = methodList\n      return methodList\n\n    },\n\n    closeModal() {\n      this.showModal = false;\n    },\n\n    isPC() {\n      const userAgentInfo = navigator.userAgent;\n      console.log(\"current device ua is ===>\", userAgentInfo);\n\n      const Agents = [\n        \"Android\",\n        \"iPhone\",\n        \"SymbianOS\",\n        \"Windows Phone\",\n        \"iPad\",\n        \"iPod\",\n      ];\n      let flag = true;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = false;\n          break;\n        }\n      }\n      return flag;\n    },\n    isSafariOrChrome() {\n      const userAgentInfo = navigator.userAgent;\n      const Agents = [\"Safari\", \"Chrome\"];\n      let flag = false;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = true;\n          break;\n        }\n      }\n      return flag;\n    },\n\n    /// solana\n    async sol_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      let data = {\n        method: \"solana_signMessage\",\n        params: {\n          message: \"Hello Solana\",\n          pubkey: \"\",\n        },\n      };\n      this.testTransaction = JSON.stringify(data);\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let message = await provider.signMessage(\n          \"Hello Solana\",\n          this.selectedChain\n      );\n      console.log(\"solana_signMessage Result:\",JSON.stringify(message))\n      const result1 = nacl.sign.detached.verify(\n          new TextEncoder().encode(\"Hello Solana\"),\n          message.signature,\n          new PublicKey(message.publicKey).toBytes()\n      );\n      console.log(result1)\n\n      if (typeof message == \"string\") {\n        this.testboc = result1;\n      } else {\n        this.testboc = result1;\n      }\n    },\n\n    async aptos_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      let data = {\n        address: true,\n        application: true,\n        chainId: true,\n        message: \"Hello Aptos\",\n        nonce: \"1234\"\n      }\n\n      let provider = new OKXAptosProvider(window.provider)\n      let message = await provider.signMessage(data, this.selectedChain)\n      this.testTransaction = JSON.stringify(data)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n          functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async move_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async move_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n          functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n        },\n      });\n\n      // let data = {\n      //   \"arguments\": [\"100000\",[\"0\",\"0\",\"10533\"],[\"10\",\"5\",\"5\"],[\"false\",\"false\",\"true\"]],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x3\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\",\"0x73eb84966be67e4697fc5ae75173ca6c35089e802650f75422ab49a8729704ec::coin::DooDoo\",\"0x53a30a6e5936c0a4c5140daed34de39d17ca7fcae08f947c02e979cef98a3719::coin::LSD\",\"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::CurveV1\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x54cb0bb2c18564b86e34539b9f89cfe1186e39d89fce54e1cd007b8e61673a85::bin_steps::X80\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async sol_signVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(\n        provider.getAccount(\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\").address\n      );\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n         recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signTransaction(\n        transaction,\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAndSendVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n        transaction,\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllVersionedTransactions() {\n      let provider = new OKXSolanaProvider(window.provider);\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n        [transaction],\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signTransaction() {\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n         recentBlockhash: blockhash,\n      }).add(\n        SystemProgram.transfer({\n          fromPubkey: new PublicKey(provider.getAccount().address),\n          toPubkey: new PublicKey(provider.getAccount().address),\n          lamports: 1000,\n        })\n      );\n\n      this.testTransaction = safeJsonStringify(transaction)\n      let result = await provider.signTransaction(\n        transaction,\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllTransactions() {\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n        SystemProgram.transfer({\n          fromPubkey: new PublicKey(provider.getAccount().address),\n          toPubkey: new PublicKey(provider.getAccount().address),\n          lamports: \"100\",\n        })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n        [transaction],\n        this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    getSolConnect() {\n      let rpc = \"https://www.okx.com/fullnode/sol/discover/rpc\"\n      if (this.selectedChain === \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\") {\n        rpc = \"https://www.okx.com//fullnode/sol/discover/rpc\"\n      } else if (this.selectedChain === \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\"){\n        rpc = \"https://www.okx.com/fullnode/soltestnet/discover/rpc\"\n      } else if (this.selectedChain === \"svm:70000062\") {\n        rpc = \"https://www.okx.com/fullnode/sonic/testnet/discover/rpc\"\n      }\n      return rpc\n    },\n\n    async sol_signAndSendTransaction() {\n\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n        SystemProgram.transfer({\n          fromPubkey: new PublicKey(provider.getAccount().address),\n          toPubkey: new PublicKey(provider.getAccount().address),\n          lamports: \"100\",\n        })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n        transaction,\n        this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async cosmos_signArbitrary() {\n      let provider = new OKXCosmosProvider(window.provider)\n      let message = await provider.signArbitrary(this.selectedChain, provider.getAccount(this.selectedChain).address, \"test cosmos\")\n      if (typeof message == \"string\") {\n        this.testboc = message;\n      } else {\n        let isValid =  await this.cosmos_verifySignArbitrary(provider.getAccount(this.selectedChain).address,\"test cosmos\",message.signature, message.pub_key.value)\n        console.log(\"verify\",isValid)\n        this.testboc = \"verify:\" + isValid + JSON.stringify(message);\n      }\n    },\n\n    async cosmos_verifySignArbitrary(signer, data, signature, pubkey) {\n      try {\n        console.log(\"cosmos_verifySignArbitrary signer:\",signer)\n        console.log(\"cosmos_verifySignArbitrary data:\",JSON.stringify(data))\n        console.log(\"cosmos_verifySignArbitrary signature:\",signature)\n        console.log(\"cosmos_verifySignArbitrary pubkey:\",pubkey)\n\n        // 将bech32地址转换为公钥\n        const {prefix: prefixStr} = fromBech32(signer)\n\n        const signatureBuffer = Buffer.from(signature, 'base64');\n\n        const uint8Signature = new Uint8Array(signatureBuffer); // Convert the buffer to an Uint8Array\n\n        const pubKeyValueBuffer = Buffer.from(pubkey, 'base64'); // Decode the base64 encoded value\n\n        const pubKeyUint8Array = new Uint8Array(pubKeyValueBuffer); // Convert the buffer to an Uint8Array\n\n        // 验证签名\n        return await verifyADR36Amino(\n            prefixStr,\n            signer,\n            data,\n            pubKeyUint8Array,\n            uint8Signature\n        )\n      } catch (err) {\n        console.error('Verification failed:', err)\n        return false\n      }\n    },\n\n    async cosmos_signAmino(){\n      let provider = new OKXCosmosProvider(window.provider)\n      // const rpcUrl = 'https://osmosis-rpc.publicnode.com:443';\n      // const client = await StargateClient.connect(rpcUrl);\n      // const height = await client.getHeight();\n      // let address = provider.getAccount(this.selectedChain).address\n      // const sequence = await client.getSequence(address)\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      // let signDoc = makeSignDoc(\n      //     transaction.msgs,\n      //     transaction.fee,\n      //     this.selectedChain.split(\":\")[1],\n      //     transaction.memo,\n      //     transaction.accountNumber,\n      //     transaction.sequence,\n      // )\n      let signDoc = {\n        \"chain_id\": \"osmosis-1\",\n        \"account_number\": \"630104\",\n        \"sequence\": \"480\",\n        \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]},\n        \"msgs\": [{\n          \"type\": \"osmosis/poolmanager/swap-exact-amount-in\",\n          \"value\": {\n            \"sender\": \"osmo1u6lts9ng4etxj0zdaxsada6zgl8dudpgelmuyu\",\n            \"routes\": [{\n              \"pool_id\": \"1096\",\n              \"token_out_denom\": \"ibc/987C17B11ABC2B20019178ACE62929FE9840202CE79498E29FE8E5CB02B7C0A4\"\n            }, {\n              \"pool_id\": \"611\",\n              \"token_out_denom\": \"ibc/27394FB092D2ECCD56123C74F36E4C1F926001CEADA9CA97EA622B25F41E5EB2\"\n            }],\n            \"token_in\": {\"denom\": \"uosmo\", \"amount\": \"100\"},\n            \"token_out_min_amount\": \"8\"\n          }\n        }],\n        \"memo\": \"FE\",\n        \"timeout_height\": \"23603788\",\n        \"signOptions\": {\n          \"useOneClickTrading\": false,\n          \"preferNoSetFee\": true,\n          \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]}\n        }\n      }\n\n\n\n\n\n\n\n      // let signOption = {\n      //   memo: true, // optional\n      //   fee: true, // optional\n      //   gasRate: {\n      //     // optional\n      //     average: \"0.2\",\n      //     low: \"0.02\",\n      //     tiny: \"0.002\",\n      //   },\n      // }\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signAmino(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, signDoc)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    messageToBuffer(message) {\n      var buffer = Buffer.from([]);\n      try {\n        if (typeof message === \"string\") {\n          buffer = Buffer.from(message.replace(\"0x\", \"\"), \"hex\");\n        } else {\n          buffer = Buffer.from(message);\n        }\n      } catch (err) {\n        console.log(`messageToBuffer error: ${err}`);\n      }\n      return buffer;\n    },\n\n\n\n    async cosmos_signDirect() {\n      let provider = new OKXCosmosProvider(window.provider)\n\n      let signDoc = {\n        \"bodyBytes\": this.messageToBuffer(\"0x0ac1010a292f6962632e6170706c69636174696f6e732e7472616e736665722e76312e4d73675472616e736665721293010a087472616e7366657212096368616e6e656c2d301a0d0a05756f736d6f120431303030222b6f736d6f3175366c7473396e67346574786a307a64617873616461367a676c386475647067656c6d7579752a2d636f736d6f733175366c7473396e67346574786a307a64617873616461367a676c386475647067337967766a773207080410ebe3f90a3880b0bcafd18cec8218\"),\n        \"authInfoBytes\": this.messageToBuffer(\"0x0a510a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a2102446e19e94ac0e83ea896d2712507577eb39fbdd2d6ae9f0fc0b9759f1fbaba9012040a02080118e00312140a0e0a05756f736d6f1205323530303010859a11\"),\n        \"chainId\": \"osmosis-1\",\n        \"accountNumber\": \"630104\",\n      }\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signDirect(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, transaction)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    sui_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentSuiTransaction = params\n      this.currentSuiMethod = flag\n    },\n\n    btc_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentBtcTransaction = params\n      this.currentBtcMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n\n    fractal_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentFractalTransaction = params\n      this.currentFractalMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n    tron_getTransactionResult(result) {\n      if (typeof result == \"string\") {\n        this.testboc = result\n      } else {\n        this.testboc = JSON.stringify(result)\n      }\n    },\n    tron_generateTransactionParams(params){\n      if (typeof params == \"string\") {\n        this.testTransaction = params\n      } else {\n        this.testTransaction = JSON.stringify(params)\n      }\n    },\n\n    starknet_getTransactionResult(result) {\n      if (typeof result == \"string\") {\n        this.testboc = result\n      } else {\n        this.testboc = JSON.stringify(result)\n      }\n    },\n\n    starknet_generateTransactionParams(params) {\n      if (typeof params == \"string\") {\n        this.testTransaction = params\n      } else {\n        this.testTransaction = JSON.stringify(params)\n      }\n    },\n\n    handleModalsSelect(modals) {\n      selectedModals = modals;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: modals.length === 3 ? \"all\" : modals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n\n    handleReturnStrategySelect(returnStrategy) {\n      selectedReturnStrategy = returnStrategy === \"deeplink\" ? this.deeplink : returnStrategy;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      } else {\n        if (window.provider.sessionConfig) {\n          window.provider.sessionConfig.redirect = selectedReturnStrategy;\n        } else {\n          window.provider.sessionConfig = {\n            redirect: selectedReturnStrategy\n          };\n        }\n      }\n    },\n\n    handleReturnStrategyDeeplink(deeplink) {\n      console.log('handleReturnStrategyDeeplink', deeplink)\n      selectedReturnStrategy = deeplink;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: deeplink,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      } else {\n        if (window.provider.sessionConfig) {\n          window.provider.sessionConfig.redirect = deeplink;\n        } else {\n          window.provider.sessionConfig = {\n            redirect: deeplink\n          };\n        }\n      }\n    },\n\n    handleLanguageSelect(language) {\n      selectedLanguage = language;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: language,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n    handleConnectMethodsSelect() {\n      console.log(\"当前的方法 this.selectedMethod>>>>\",this.selectedMethod);\n    },\n\n    eth_verifyMessage(message, signature,ethAddress) {\n      console.log(\"eth_verifyMessage   message>>>\",message)\n      console.log(\"eth_verifyMessage   signature>>>\",signature)\n      console.log(\"eth_verifyMessage   ethAddress>>>\",ethAddress)\n      if (!message || !signature){\n        return \"\"\n      }\n      let originalMessage = message\n      if (message.startsWith(\"0x\")){\n        originalMessage = originalMessage.replace(/^0x/, '');\n        let str = '';\n        for (let i = 0; i < originalMessage.length; i += 2) {\n          const byte = originalMessage.slice(i, i + 2);\n          str += String.fromCharCode(parseInt(byte, 16));\n        }\n        originalMessage = str\n      }\n      console.log(\"eth_verifyMessage   originalMessage>>>\",originalMessage)\n\n      // const messageHash = ethers.utils.hashMessage(originalMessage);\n      const recoveredAddress = ethers.utils.verifyMessage(originalMessage, signature);\n      console.log(\"eth_verifyMessage recoveredAddress:\", recoveredAddress);\n      return recoveredAddress.toLowerCase() === ethAddress.toLowerCase();\n    },\n\n    async verifyMessage(list){ //连接验签\n\n        if (window.provider && window.provider.session && list && list.length>0){\n          let verifyList = {}\n          for (let methodItem of list){\n            if (\"result\" in methodItem && \"method\" in methodItem){\n              let requestItme = this.selectedMethodData.filter(item => item.method === methodItem.method)[0];\n              console.log(\"验证签名 请求>>>:\", JSON.stringify(requestItme));\n              console.log(\"验证签名 结果>>>:\", JSON.stringify(methodItem));\n              if (methodItem.method === \"personal_sign\"){\n                let ethAddress = await window.provider.request({ method: \"eth_requestAccounts\" },methodItem.chainId)\n                ethAddress = ethAddress[0];\n                console.log(\"验证eth 钱包地址>>>:\", ethAddress);\n                let ethMessage = requestItme.params[0]\n                console.log(\"验证eth 签名消息体>>:\", JSON.stringify(ethMessage));\n                verifyList[methodItem.method] = this.eth_verifyMessage(ethMessage,methodItem.result,ethAddress)\n              }else if(methodItem.method === \"solana_signMessage\"){\n                let solanaMessage = methodItem.result\n                if (\"signature\" in solanaMessage && \"publicKey\" in solanaMessage){\n                  const verifySol = nacl.sign.detached.verify(\n                      new TextEncoder().encode(\"Hello Solana\"),\n                      solanaMessage.signature,\n                      new PublicKey(solanaMessage.publicKey).toBytes()\n                  );\n                  verifyList[methodItem.method] = verifySol\n                }else {\n                  verifyList[methodItem.method] = false\n                }\n              }else if(methodItem.method === \"sui_signPersonalMessage\" || methodItem.method === \"sui_signMessage\"){\n                let suiResult =  this.sui_verifySignature(methodItem.result);\n                  verifyList[methodItem.method] = (await suiResult).result\n              }else if(methodItem.method === \"btc_signMessage\"){\n\n                verifyList[methodItem.method] = \"Not verified yet\"\n\n              }else if(methodItem.method === \"aptos_signMessage\"){\n                let aptosMessage = methodItem.result\n                let aptosProvider = new OKXAptosProvider(window.provider)\n                let  aptosPublicKey  = aptosProvider.getAccount(methodItem.chainId)?.publicKey\n\n                let signStr = aptosMessage.signature\n                if (signStr.startsWith(\"0x\")) {\n                  signStr = signStr.slice(2, signStr.length)\n                }\n\n                console.log(\"aptos_signMessage aptosPublicKey And signStr\",aptosPublicKey,signStr)\n                verifyList[methodItem.method] = nacl.sign.detached.verify(\n                    Buffer.from(aptosMessage.fullMessage),\n                    Buffer.from(signStr, 'hex'),\n                    Buffer.from(aptosPublicKey, 'hex'),\n                );\n              }else if(methodItem.method === \"cosmos_signArbitrary\"){\n                let cosmosProvider = new OKXCosmosProvider(window.provider)\n                let cosmosAddress = cosmosProvider.getAccount(methodItem.chainId)?.address\n                let cosmosMessage = methodItem.result\n                let isValid =  await this.cosmos_verifySignArbitrary(cosmosAddress,\"test cosmos\",cosmosMessage.signature, cosmosMessage.pub_key.value)\n                verifyList[methodItem.method] = isValid\n\n              }else if (methodItem.method === \"tron_signMessage\") {\n                let tronMessage = methodItem.result\n                let tronWeb = new TronWeb({\n                  \"fullHost\": 'https://api.trongrid.io',\n                  \"headers\": {},\n                  \"privateKey\": ''\n                })\n                let provider = new OKXTronProvider(window.provider)\n                verifyList[methodItem.method] = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), tronMessage, provider.getAccount(\"tron:mainnet\").address)\n              } else if (methodItem.method === \"tron_signMessageV2\") {\n                let tronMessage = methodItem.result\n                let tronWeb = new TronWeb({\n                  \"fullHost\": 'https://api.trongrid.io',\n                  \"headers\": {},\n                  \"privateKey\": ''\n                })\n                const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", tronMessage);\n                let provider = new OKXTronProvider(window.provider)\n\n                verifyList[methodItem.method] = base58Address === provider.getAccount(\"tron:mainnet\").address\n              }else if (methodItem.method === \"starknet_signMessage\") {\n                let res = methodItem.result\n                let signData = this.starknetPanelTypedData\n\n                const rpcProvider = new StarknetRpcProvider({ nodeUrl: \"https://free-rpc.nethermind.io/mainnet-juno/v0_7\" });\n\n                let provider = new OKXStarknetProvider(window.provider)\n                let address = provider.getAccount(\"starknet:mainnet\").address\n                let pk = \"0x123\"; /// random pk\n                const account = new StarknetAccount(rpcProvider, address, pk)\n\n                let that = this\n                account.verifyMessage(signData, res).then(function (isValid) {\n                  that.testTransaction = `Verifyed result: \\n${isValid}`\n                }).catch(function (error) {\n                  that.testTransaction = `Verifyed failed: \\n${error}`\n                })\n                verifyList[methodItem.method] = \"starknet is verifying signature...\"\n              }\n              else {\n                verifyList[methodItem.method] = \"Not verified yet\"\n\n              }\n            }else if(\"method\" in methodItem && \"error\" in methodItem) {\n              verifyList[methodItem.method] = methodItem.error\n            }\n\n          }\n\n          console.log(\"验证签名 最后的结果>>>:\", JSON.stringify(verifyList));\n          this.testTransaction = \"签名验证结果如下: \\n\" + JSON.stringify(verifyList)\n        }else {\n          console.log(\"验证签名 window.provider.session.connectMethodsReply 为空:\");\n\n        }\n\n    },\n\n    handleThemeSelect(theme) {\n      selectedTheme = theme;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: theme,\n          },\n        };\n      }\n    },\n\n    async sui_verifySignature(signatureResult) {\n      let resultObj = signatureResult\n      let result = false\n      let msg = ''\n      try {\n        /// 获取当前account\n        const adapter = new SuiAdapter(window.provider);\n        let account = adapter.getAccount()\n        console.log(`Account中获取的address：${account.address}`)\n\n        /// 验证签名\n        let pubKey = await verifyPersonalMessageSignature(this.currentSuiTransaction.message, resultObj.signature)\n        let address = pubKey.toSuiAddress()\n        console.log(`验签结果计算得到address：${address}`)\n\n        /// 对比pubKey\n        console.log(`account pubkey: ${account.publicKey}`,)\n        console.log(`result pubkey: ${pubKey.toBase64()}`)\n        result = (account.address === address) && (account.publicKey === pubKey.toBase64())\n\n        msg = `address verify: ${account.address === address}\\npublicKey verify: ${account.publicKey === pubKey.toBase64()}`\n        console.log(\"signature verify success: \", pubKey)\n      } catch (e) {\n        console.log(\"signature verify failed: \", e)\n      }\n      return {\n        result,\n        msg\n      }\n    },\n\n\n    handleRedirectSelect(input) {\n      this.redirect = input;\n    },\n\n    handleRedirectDeeplink(input) {\n      this.redirectDeeplink = input;\n    },\n\n    addRedirectParam() {\n      if (this.testTransaction) {\n        const newTransaction = JSON.parse(this.testTransaction);\n        newTransaction.redirect = this.redirect === 'deeplink' ? this.redirectDeeplink : this.redirect;\n        this.testTransaction = JSON.stringify(newTransaction);\n      }\n    },\n\n    canChainAddRedirectParam() {\n      return chainsThatCanAddRedirectParam.some((c) => this.selectedChain.startsWith(c));\n    }\n  },\n  created() {\n    // for (const eventName of Object.values(OKX_TON_CONNECTION_AND_TRANSACTION_EVENT)) {\n    //   console.log(eventName);\n    //   window.addEventListener(eventName, (event) => {\n    //     console.log(eventName,event.detail)\n    //     this.currentStatus = eventName\n    //   });\n    // }\n  },\n\n  mounted() {\n\n    var scriptTag = document.createElement(\"script\");\n    scriptTag.src = \"https://telegram.org/js/telegram-web-app.js\";\n    scriptTag.id = \"tgsdk\";\n    document.getElementsByTagName('head')[0].appendChild(scriptTag);\n\n    this.connectReady = true;\n    document.title = \"OKX Connect\";\n    this.initBtnClicked()\n\n    console.log(\"挂载成功:\")\n    if (this.$refs.starknetPanelRef) {\n      this.starknetPanelTypedData = toRaw(this.$refs.starknetPanelRef.signData)\n      console.log(\"111: \", this.starknetPanelTypedData)\n    }else {\n      console.log(\"222\")\n    }\n  },\n};\n</script>\n","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_getAccount()\">getAccount(BTC)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signMessage()\">signMessage(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_send()\">send(BTC)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendBitcoin()\">sendBitcoin(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signPsbt_up()\">signPsbt(上架NFT)</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"btc_signAndPushPsbt_up()\">signAndPushPsbt(上架NFT)</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在OKX App选择要上架的Btc NFT，点击【上架】\n        </li>\n        <li>\n          2. 弹出签名面板，点开高级选项，查看\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出上架流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendInscription()\">sendInscription(BTC)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Btc NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount\n    }\n  },\n  methods: {\n\n    btc_getAccount() {\n      this.$emit('generateTransactionParams', {}, \"btc_getAccount\")\n    },\n\n    btc_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to BTC\"\n      };\n      this.$emit('generateTransactionParams', params, \"btc_signMessage\")\n    },\n\n    btc_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"btc_send\")\n    },\n\n    btc_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"btc_sendBitcoin\")\n    },\n\n    btc_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"btc_signPsbt\")\n    },\n\n    btc_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"btc_signAndPushPsbt\")\n    },\n\n    btc_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"btc_sendInscription\")\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./BtcTransactionPanel.vue?vue&type=template&id=376d03bc&scoped=true\"\nimport script from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./BtcTransactionPanel.vue?vue&type=style&index=0&id=376d03bc&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-376d03bc\"]])\n\nexport default __exports__","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_getAccount()\">getAccount(Fractal)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signMessage()\">signMessage(Fractal)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_send()\">send(Fractal)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_sendBitcoin()\">sendBitcoin(Fractal)</el-button>\n\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signPsbt_up()\">signPsbt(上架NFT)</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_signAndPushPsbt_up()\">signAndPushPsbt(上架NFT)</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在OKX App选择要上架的Fractal NFT，点击【上架】\n        </li>\n        <li>\n          2. 弹出签名面板，点开高级选项，查看\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出上架流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_sendInscription()\">sendInscription(Fractal)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Fractal NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount\n    }\n  },\n  methods: {\n\n    fractal_getAccount() {\n      this.$emit('generateTransactionParams', {}, \"fractal_getAccount\")\n    },\n\n    fractal_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to UniSat!\\n\\nClick to sign in and accept the UniSat Terms of Service (https://unisat.io/terms-of-service.html) and Privacy Policy (https://unisat.io/privacy-policy.html).\\n    \\nThis request will not trigger a blockchain transaction.\\n    \\nYour authentication status will reset after 24 hours.\\n    \\nWallet address:\\nbc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\\n    \\nNonce:\\n162d70e3-8c21-4cfd-9a22-9bf0a4b7be51\\n\"\n      };\n      this.$emit('generateTransactionParams', params, \"fractal_signMessage\")\n    },\n\n    fractal_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_send\")\n    },\n\n    fractal_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_sendBitcoin\")\n    },\n\n    fractal_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"fractal_signPsbt\")\n    },\n\n    fractal_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"fractal_signAndPushPsbt\")\n    },\n\n    fractal_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"fractal_sendInscription\")\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./FractalTransactionPanel.vue?vue&type=template&id=fb2f7e38&scoped=true\"\nimport script from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./FractalTransactionPanel.vue?vue&type=style&index=0&id=fb2f7e38&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-fb2f7e38\"]])\n\nexport default __exports__","<script>\n\nimport {getFullnodeUrl, SuiClient} from \"@mysten/sui/client\";\nimport {Transaction as SuiTransaction} from '@mysten/sui/transactions';\n\nexport default {\n  name: \"SuiTransactionPanel\",\n  methods: {\n    sui_getAccount() {\n      this.$emit('generateTransactionParams', '', \"sui_getAccount\")\n    },\n\n    //对单个交易签名（不发送)\n    async sui_signMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signMessage\")\n    },\n\n    async sui_signPersonalMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signPersonalMessage\")\n    },\n\n    sui_signTransaction2() {\n      // 定义要转移的金额和目标地址\n      const amount = 109; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    async sui_requestRpc() {\n      let provider = window.provider;\n      provider.setDefaultChain(\n          `sui:mainnet`,\n          `https://fullnode.mainnet.sui.io:443`\n      );\n      var data = {\n        method: \"suix_getBalance\",\n        params: [\n          \"0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae\",\n          \"0x168da5bf1f48dafc111b0a488fa454aca95e0b5e::usdc::USDC\",\n        ],\n      };\n\n      this.$emit(\"generateTransactionParams\", data, \"sui_testRpc\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 102; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signAndExecuteTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n      this.$emit(\"generateTransactionParams\", input, \"sui_signAndExecuteTransaction\")\n    },\n\n    /// generate txBytes and txSerialize\n    async generateTsBytesAndSerizlize(input) {\n      /// txBytes and txSerialize may be constructed in advance by the dapp side\n      let resultTuple = [\"\", \"\"];\n      if (\n          \"txBytes\" in input &&\n          input.txBytes.length > 0 &&\n          \"txSerialize\" in input &&\n          input.txSerialize.length > 0\n      ) {\n        resultTuple = [input.txBytes, input.txSerialize];\n      }\n\n      /// Otherwise, a transactionBlock parameter is required.\n      if (!(\"transactionBlock\" in input)) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      // if (this.walletAddress != \"connected\") {\n      //   alert(\"请先连接钱包\");\n      //   return new Promise((resolve) => {\n      //     resolve(resultTuple);\n      //   });\n      // }\n\n      let senderAccounts = window.provider.requestAccountsWithNamespace(\"sui\");\n      if (senderAccounts.length == 0) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      try {\n        let rpcUrl = getFullnodeUrl(\"mainnet\");\n        rpcUrl = \"https://www.okx.com/fullnode/sui/discover/rpc\"\n        const suiClient = new SuiClient({ url: rpcUrl });\n\n        /// sender is required\n        input.transactionBlock.setSender(senderAccounts[0]);\n        const result = await input.transactionBlock.build({\n          client: suiClient,\n        });\n        const txBytes = Buffer(result).toString(\"base64\");\n        const txSerialize = await SuiTransaction.from(txBytes).toJSON();\n        resultTuple = [txBytes, txSerialize];\n      } catch (error) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      return new Promise((resolve) => {\n        resolve(resultTuple)\n      })\n    },\n\n    //签名并发送交易\n    sui_signAndExecuteTransaction() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n        \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.testTransaction = JSON.stringify(input);\n      this.currentSuiTransaction = input;\n      this.currentSuiMethod = \"sui_signAndExecuteTransaction\";\n    },\n  },\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_getAccount()\">getAccount(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signMessage()\">signMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signPersonalMessage()\">signPersonalMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signTransaction2()\">signTransaction(Sui)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signAndExecuteTransaction()\">sendTransaction(Sui)</el-button>\n      <div style=\"font-size: 12px; color: gray;\">(send to Rally Tiger account)</div>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_requestRpc()\">RPC_getBalance</el-button>\n      <div style=\"font-size: 12px; color: gray;\">get USDC balance of address:</div>\n      <div style=\"font-size: 12px; color: gray\">0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae</div>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signTransaction_pre_execution()\">signTransaction(prepared data)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signAndExecuteTransaction_pre_execution()\">sendTransaction(prepared data)</el-button>\n    </el-col>\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./SuiTransactionPanel.vue?vue&type=template&id=56a8eddf&scoped=true\"\nimport script from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./SuiTransactionPanel.vue?vue&type=style&index=0&id=56a8eddf&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-56a8eddf\"]])\n\nexport default __exports__","<script>\nimport { OKXStarknetProvider } from \"@okxconnect/universal-provider\";\nimport { CallData, uint256, RpcProvider, Account } from \"starknet\";\n\nexport default {\n  name: \"StarknetTransactionPanel\",\n  methods: {\n    async starknet_signMessage() {\n      this.address = this.getCurrentAddress()\n      if (this.address === \"\") {\n        alert(\"address can't be ''\");\n        return\n      }\n\n      let signData = this.signData\n      this.$emit(\"generateTransactionParams\", JSON.stringify(signData))\n      let provider = new OKXStarknetProvider(window.provider)\n      let res = await provider.signMessage(this.address, signData, \"starknet:mainnet\")\n      if (res.code) {\n        if (res.code == 301) {\n          let msg = \"Wallet address is registering, please try again later!\"\n          alert(msg)\n          this.$emit(\"generateTransactionResult\", msg, \"starknet_signMessage\")\n        }\n        this.$emit(\"generateTransactionResult\", res, \"starknet_signMessage\")\n        return\n      }\n      console.log(res)\n\n      const rpcProvider = new RpcProvider({ nodeUrl: \"https://free-rpc.nethermind.io/mainnet-juno/v0_7\" });\n      let pk = \"0x123\"; /// random pk\n      const account = new Account(rpcProvider, this.address, pk)\n      let that = this\n      account.verifyMessage(signData, res).then(function (isValid) {\n        that.$emit(\"generateTransactionResult\", \"verify:\" + isValid + \"\\n\" + res, \"starknet_signMessage\")\n      }).catch(function (error) {\n        that.$emit(\"generateTransactionResult\", \"failed:\" + error + \"\\n\" + res, \"starknet_signMessage\")\n      })\n    },\n\n    async starknet_sendTransaction() {\n      this.address = this.getCurrentAddress()\n      if (this.address === \"\") {\n        alert(\"address can't be ''\");\n        return\n      }\n\n      let val = uint256.bnToUint256(120000000000000000)\n      const transferCalldata = CallData.compile({\n        to: \"0x00b909cefa36ab6bc26f5887a867e46ef162238f0a171b1c2974b665afd4237f\",\n        value: val\n      })\n\n      // const ETHTokenAddress = \"0x049d36570d4e46f48e99674bd3fcc84644ddd6b96f7c741b1562b82f9e004dc7\"\n      // const STARKTokenAddress = \"0x04718f5a0fc34cc1af16a1cdee98ffb20c31f5cd61d6ab07201858f4287c938d\"\n      const DAITokenAddress = \"0x00da114221cb83fa859dbdb4c44beeaa0bb37c7537ad5ae66fe5e0efd20e6eb3\"\n\n      const invokeParams = {\n        calls: [\n          {\n            contract_address: DAITokenAddress,\n            entry_point: \"transfer\",\n            calldata: transferCalldata\n          }\n        ],\n      }\n\n      this.$emit(\"generateTransactionParams\", JSON.stringify(invokeParams))\n      let provider = new OKXStarknetProvider(window.provider)\n\n      let that = this\n      provider.sendTransaction(this.address, invokeParams, \"starknet:mainnet\").then(function(res){\n        console.log(\"starknet_sendTransaction result \", res)\n        that.$emit(\"generateTransactionResult\", res, \"starknet_sendTransaction\")\n      }).catch(function(error) {\n        if (error.code == 301) {\n          let msg = \"Wallet address is registering, please try again later!\"\n          alert(msg)\n          that.$emit(\"generateTransactionResult\", msg, \"starknet_sendTransaction\")\n        }else {\n          that.$emit(\"generateTransactionResult\", error, \"starknet_sendTransaction\")\n        }\n      });\n    },\n\n    getCurrentAddress() {\n      let provider = new OKXStarknetProvider(window.provider)\n      const address = provider.getAccount(\"starknet:mainnet\")?.address\n      return address\n    },\n\n    getPublicKey() {\n      let provider = new OKXStarknetProvider(window.provider)\n      const account = provider.getAccount(\"starknet:mainnet\")\n      console.log(\"获取到的account是：\")\n      console.log(account)\n      return \"05d8e5e9c1dd686246716c888159271d2f13986cb4acee46164e2c4e034629c0\"\n    }\n  },\n\n  data() {\n    const signData = {\n        \"domain\": {\n          \"chainId\": \"0x534e5f4d41494e\",\n          \"name\": \"STRKFarm\",\n          \"version\": \"1\"\n        },\n        \"message\": {\n          \"document\": \"app.strkfarm.xyz/tnc/v1\",\n          \"message\": \"Read and Agree T&C\"\n        },\n        \"primaryType\": \"Tnc\",\n        \"types\": {\n          \"StarkNetDomain\": [\n            {\n              \"name\": \"name\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"version\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"chainId\",\n              \"type\": \"felt\"\n            }\n          ],\n          \"Tnc\": [\n            {\n              \"name\": \"message\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"document\",\n              \"type\": \"felt\"\n            }\n          ]\n        }\n    }\n\n    return {\n      signData\n    }\n  }\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"starknet_signMessage()\">signMessage</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 验签不成功的话，请尝试连接VPN\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"starknet_sendTransaction(true)\">\n        sendTransaction\n      </el-button>\n\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 发送0.12个DAI到0x00b9...4237f的地址\n        </li>\n        <li>\n          2. 请保证你的钱包有足够的DAI\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./StarknetTransactionPanel.vue?vue&type=template&id=082fda2b&scoped=true\"\nimport script from \"./StarknetTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./StarknetTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./StarknetTransactionPanel.vue?vue&type=style&index=0&id=082fda2b&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-082fda2b\"]])\n\nexport default __exports__","<script>\n\n\nimport {OKXTronProvider} from \"@okxconnect/universal-provider\";\nimport {TronWeb} from \"tronweb\";\n\nexport default {\n  name: \"TronTransactionPanel\",\n  methods: {\n\n    async tron_signMessage() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessage(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n\n      const verify = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), res, provider.getAccount(\"tron:mainnet\").address)\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" + res, \"tron_signMessage\")\n    },\n\n    async tron_signMessageV2() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessageV2(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", res);\n      console.log(\"tron_signMessageV2_base58Address\", base58Address)\n      console.log(\"tron_signMessageV2_address\", provider.getAccount(\"tron:mainnet\").address)\n      const verify = base58Address === provider.getAccount(\"tron:mainnet\").address\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" +  res, \"tron_signMessage\")\n    },\n\n    async tron_signTransaction(isOnlySign) {\n      let provider = new OKXTronProvider(window.provider)\n        let tronWeb = new TronWeb({\n          \"fullHost\": 'https://api.trongrid.io',\n          \"headers\": {},\n          \"privateKey\": ''\n        })\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const transaction = await tronWeb.transactionBuilder.sendTrx(\"TGBcVLMnVtvJzjPWZpPiYBgwwb7th1w3BF\", 1000, address);\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let res = await provider.signTransaction( transaction, \"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", res, \"tron_signTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async getContract() {\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41b4a428ab7092c2f1395f376ce297033b3bb446c1\"\n      \n      try {\n        const contract = await tronWeb.trx.getContract(contractAddress)\n        const abi = contract.abi.entrys;\n        console.log(\"获取到的合约：\")\n        console.log(abi)\n      } catch (error) {\n        console.log(\"Error getting contract ABI:\", error);\n      }\n    },\n    \n    async tron_signAndSendTransactionContract(isOnlySign) {\n      // this.getContract()\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41e95812d8d5b5412d2b9f3a4d5a87ca15c5c51f33\"\n      let provider = new OKXTronProvider(window.provider)\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const parameter = [\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n      ]\n      const ret = await tronWeb.transactionBuilder.triggerSmartContract(contractAddress, \"quote(uint256,uint256,uint256)\", {}, parameter, address);\n      console.log(\"=====>transaction: \")\n      console.log(ret);\n      this.$emit(\"generateTransactionParams\", ret.transaction)\n      if (isOnlySign) {\n        let tx = await provider.signTransaction( ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async tron_signAndSendTransactionApprove(isOnlySign) {\n      let contractAddress = \"41b4a428ab7092c2f1395f376ce297033b3bb446c1\"\n      let provider = new OKXTronProvider(window.provider)\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const parameter = [\n        {type: 'address', value: contractAddress},\n        {type: 'uint256', value: 1000},\n      ]\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      const ret = await tronWeb.transactionBuilder.triggerSmartContract(contractAddress, \"approve(address,uint256)\", {}, parameter, address);\n\n      let transaction = ret.transaction\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let tx = await provider.signTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n\n    }\n\n  }\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessage()\">tron_signMessage</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessageV2()\">tron_signMessageV2</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(true)\">\n        tron_signTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(true)\">\n        tron_signTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(true)\">\n        tron_signTransaction(Approve)\n      </el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(false)\">\n        tron_signAndSendTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(false)\">\n        tron_signAndSendTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(false)\">\n        tron_signAndSendTransaction(approve)\n      </el-button>\n    </el-col>\n\n\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./TronTransactionPanel.vue?vue&type=template&id=55a13ab0&scoped=true\"\nimport script from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./TronTransactionPanel.vue?vue&type=style&index=0&id=55a13ab0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-55a13ab0\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=869aeca2&scoped=true\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=869aeca2&scoped=true&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-869aeca2\"]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport ElementPlus from 'element-plus'\nimport 'element-plus/dist/index.css'\nimport App from './App.vue'\n\nconst app = createApp(App)\n\napp.use(ElementPlus)\napp.mount('#app')","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? function(obj) { return Object.getPrototypeOf(obj); } : function(obj) { return obj.__proto__; };\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(function(key) { def[key] = function() { return value[key]; }; });\n\t}\n\tdef['default'] = function() { return value; };\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkokxconnectdemo\"] = self[\"webpackChunkokxconnectdemo\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(88076); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["require","Object","defineProperty","exports","value","AptosUtils","getTransaction","o","transaction","rawTransaction","payload","entryFunction","typeArgs","type_args","typeArguments","Array","forEach","typeTag","push","toString","realArguments","this","getTypeArguments","args","i","arguments","function","module_name","address","data","name","identifier","function_name","type","type_arguments","getArguments","array","j","length","y","values","subArray","dealArrayElements","e","Uint8Array","t","isArray","r","n","assign","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","next","rejected","result","done","then","apply","OKXAptosProvider","buffer_1","AptosUtils_1","core_1","constructor","provider","chainsSet","Set","getConnectedNamespace","defaultNetwork","network","requestDefaultChainWithNamespace","NameSpaceKeyAptos","currentChainId","getRealChainId","chainId","size","Error","_a","_b","_c","session","namespaces","chains","chain","add","getAccount","_d","_e","_f","_g","_h","_j","account","accounts","filter","startsWith","logDebug","accountArray","split","console","log","extra","publicKey","undefined","substring","signMessage","realChain","prefix","message","nonce","fullMessage","application","window","location","protocol","hostname","buffer","Buffer","from","hex","bufferToHex","injectParams","signedMessage","request","successData","signStr","slice","signature","error","signTransaction","tx","signAndSubmitTransaction","buf","OKXAptosProvider_1","enumerable","get","__importDefault","mod","__esModule","OKXSolanaProvider","web3_js_1","bs58_1","map","defaultChainMap","has","caip","includes","Map","set","realMessage","wallet","appName","default","encode","TextEncoder","pubkey","decode","PublicKey","serializedMessage","serialize","requireAllSignatures","verifySignatures","getSignedTransaction","signAllTransactions","transactions","VersionedTransaction","response","newTransactions","JSON","parse","s","c","Transaction","deserialize","signAndSendTransaction","method","transactionStr","resultTx","injectResult","OKXSolanaProvider_1","id","_createElementBlock","_hoisted_1","_createVNode","_component_el_container","_withCtx","_component_el_header","_cache","_createTextVNode","_","_component_el_main","_component_el_card","class","header","_createElementVNode","style","_component_el_row","_component_el_col","span","_toDisplayString","$options","getWalletAddress","_ctx","currentStatus","_component_el_checkbox","modelValue","withUI","$event","onChange","handleWithUI","universalToTG","handleUniversalToTG","_component_el_select","modals","placeholder","handleModalsSelect","multiple","_component_el_option","label","returnStrategy","handleReturnStrategySelect","_Fragment","_renderList","returnStrategies","strategy","_createBlock","key","_component_el_input","deeplink","handleReturnStrategyDeeplink","disabled","_createCommentVNode","language","handleLanguageSelect","locales","locale","theme","handleThemeSelect","THEME","LIGHT","DARK","selectedMethod","handleConnectMethodsSelect","connectMethods","item","tonProofValue","gutter","align","keys","availableChains","checked","areChainsInit","isOptionalChecked","handleOptionChange","_component_el_button","onClick","initBtnClicked","icon","connectInitStr","connectBtnClicked","connectStatusStr","syncAllAddressClick","syncAllAddressStr","disconnectAction","walletAddress","disconnectStatusStr","_Teleport","to","showModal","closeModal","_withModifiers","_component_qrcode_vue","qrValue","level","_component_el_tabs","activeTab","onTabClick","clickActiveTab","_component_el_tab_pane","eth_requestAccounts","eth_chainId","wallet_switchEthereumChain","wallet_addEthereumChain","personal_sign","eth_signTypedData_v4","eth_sendTransaction_transfer","eth_sendTransaction_approve","eth_sendTransaction_mint","wallet_watchAsset","ton_getAccount","ton_sendTransaction","sol_signMessage","sol_signTransaction","sol_signVersionedTransaction","sol_signAllTransactions","sol_signAllVersionedTransactions","sol_signAndSendTransaction","sol_signAndSendVersionedTransaction","_component_SuiPanel","onGenerateTransactionParams","sui_generateTransactionParams","_component_BTCPanel","btc_generateTransactionParams","_component_FractalPanel","fractal_generateTransactionParams","_component_TronTransactionPanel","tron_generateTransactionParams","onGenerateTransactionResult","tron_getTransactionResult","aptos_signMessage","aptos_signTransaction","aptos_signAndSubmitTransaction","cosmos_signArbitrary","cosmos_signAmino","cosmos_signDirect","wallet_testRpc","eth_sendTransaction_swap","move_signTransaction","move_signAndSubmitTransaction","_component_StarknetPanel","ref","starknet_generateTransactionParams","starknet_getTransactionResult","testBase64UrlSafe","xs","sm","redirect","handleRedirectSelect","canChainAddRedirectParam","redirectDeeplink","handleRedirectDeeplink","addRedirectParam","testTransaction","rows","testboc","$setup","sendBtnDisabled","sendTransaction","testTransactionStr","btc_getAccount","btc_signMessage","sendAmount","clearable","btc_send","sendSatoshisAmount","btc_sendBitcoin","psbtHex","btc_signPsbt_up","btc_signAndPushPsbt_up","nftId","receiver","btc_sendInscription","props","msg","String","setup","methods","$emit","params","alert","toAddress","satoshis","options","feeRate","autoFinalized","inscriptionId","__exports__","fractal_getAccount","fractal_signMessage","fractal_send","fractal_sendBitcoin","fractal_signPsbt_up","fractal_signAndPushPsbt_up","fractal_sendInscription","sui_getAccount","sui_signMessage","sui_signPersonalMessage","sui_signTransaction2","sui_signAndExecuteTransaction","sui_requestRpc","sui_signTransaction_pre_execution","sui_signAndExecuteTransaction_pre_execution","uint8Array","input","amount","recipientAddress","SuiTransaction","coin","splitCoins","gas","transferObjects","transactionBlock","showEffects","setDefaultChain","txBytes","txSerialize","generateTsBytesAndSerizlize","resultTuple","senderAccounts","requestAccountsWithNamespace","rpcUrl","getFullnodeUrl","suiClient","SuiClient","url","setSender","build","client","toJSON","stringify","currentSuiTransaction","currentSuiMethod","starknet_signMessage","starknet_sendTransaction","getCurrentAddress","signData","OKXStarknetProvider","res","code","rpcProvider","RpcProvider","nodeUrl","pk","Account","that","verifyMessage","isValid","catch","val","uint256","bnToUint256","transferCalldata","CallData","compile","DAITokenAddress","invokeParams","calls","contract_address","entry_point","calldata","getPublicKey","tron_signMessage","tron_signMessageV2","tron_signTransaction","tron_signAndSendTransactionContract","tron_signAndSendTransactionApprove","OKXTronProvider","tronWeb","TronWeb","verify","trx","signMessageV2","base58Address","verifyMessageV2","isOnlySign","transactionBuilder","sendTrx","getContract","contractAddress","contract","abi","entrys","parameter","ret","triggerSmartContract","verifyADR36Amino","fromBech32","VConsole","allChains","chainsThatCanAddRedirectParam","optionChains","selectedModals","selectedReturnStrategy","selectedDeepLink","selectedLanguage","selectedTheme","components","TronTransactionPanel","QrcodeVue","BTCPanel","FractalPanel","SuiPanel","StarknetPanel","testTopic","testPublicKey","testProofPayload","pendingDeepLink","logList","connectReady","localPubKey","localSecKey","selectedChain","ProofPayloadVerify","showVerifyRow","localStorage","getItem","selectedMethodData","isChecked","setItem","reload","delete","starknetPanelTypedData","computed","selectedChains","initChains","newChains","updatedChains","tab","tabName","initCall","okxLogDebug","OKXUniversalConnectUI","init","dappMetaData","actionsConfiguration","uiPreferences","OKXUniversalProvider","tonProvider","OKXTonProvider","onStatusChange","walletInfo","err","onModalStateChange","state","entries","parseInt","on","uri","useShortLink","isPC","items","topic","Date","now","testTonSdk","connected","syncAllAddresses","disconnect","blockExplorerUrls","chainName","nativeCurrency","symbol","decimals","rpcUrls","dataETH","dataPolygon","types","EIP712Domain","Person","Mail","primaryType","domain","version","verifyingContract","contents","maxPriorityFeePerGas","maxFeePerGas","gasPrice","gasLimit","str","image","tonUniversalLog","sendTransactionAlert","fetch","json","confirm","sendData","adapter","SuiAdapter","suiResult","signAndExecuteTransaction","sui_verifySignature","signPersonalMessage","btcAdapter","OKXBtcProvider","btcResult","currentBtcMethod","currentBtcTransaction","send","signPsbt","hexToBase64","bs64Str","signPsbts","psbtHexs","sendInscription","signAndPushPsbt","sendBitcoin","fractalResult","currentFractalMethod","currentFractalTransaction","OKX_CONNECT_ERROR_CODES","USER_REJECTS_ERROR","hexStr","bytes","substr","blob","Blob","reader","FileReader","onload","base64Data","target","onerror","readAsDataURL","datatest","utf8Array","binary","byte","fromCharCode","firstStr","btoa","replace","showUrl","getUniversalLink","getAppWalletDeepLink","hasEip155","hasSolana","hasSui","hasBtc","hasAptos","hasTon","hasCosmos","hasTron","nameSpacesChains","optSpaceChains","solanaChains","hasStarknet","suiChains","btcChains","connectMethod","connectData","requireData","eip155","defaultChain","solana","cosmos","tron","starknet","tonParams","ton_addr","ton_proof","ton","sui","rpcMap","aptos","btc","optData","eip155Chains","tonChains","signMethods","getCurrentSelectedMethodData","openModalAndSign","openModal","sessionConfig","useMini","openUniversalUrl","tmaReturnUrl","connectAndSign","connect","setTimeout","methodList","suiData","currentMethod","accountAddress","typedData","userAgentInfo","navigator","userAgent","Agents","flag","v","indexOf","isSafariOrChrome","result1","nacl","detached","toBytes","config","AptosConfig","Network","MAINNET","Aptos","simple","sender","functionArguments","safeJsonStringify","connection","Connection","getSolConnect","blockhash","getLatestBlockhash","versionedTransactionMessage","TransactionMessage","payerKey","recentBlockhash","instructions","SystemProgram","transfer","fromPubkey","toPubkey","lamports","compileToV0Message","feePayer","rpc","OKXCosmosProvider","signArbitrary","cosmos_verifySignArbitrary","pub_key","signer","prefixStr","signatureBuffer","uint8Signature","pubKeyValueBuffer","pubKeyUint8Array","signDoc","signAmino","messageToBuffer","signDirect","uiOptions","eth_verifyMessage","ethAddress","originalMessage","recoveredAddress","ethers","toLowerCase","list","verifyList","methodItem","requestItme","ethMessage","solanaMessage","verifySol","aptosMessage","aptosProvider","aptosPublicKey","cosmosProvider","cosmosAddress","cosmosMessage","tronMessage","StarknetRpcProvider","StarknetAccount","signatureResult","resultObj","pubKey","verifyPersonalMessageSignature","toSuiAddress","toBase64","newTransaction","some","created","mounted","scriptTag","document","createElement","src","getElementsByTagName","appendChild","title","$refs","starknetPanelRef","toRaw","render","app","createApp","App","use","ElementPlus","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","loaded","__webpack_modules__","call","m","amdO","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","every","splice","getter","d","a","leafPrototypes","getProto","getPrototypeOf","obj","__proto__","mode","ns","create","def","current","getOwnPropertyNames","definition","g","globalThis","Function","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","children","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}