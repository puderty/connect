{"version":3,"file":"js/app.d1085ec9.js","mappings":"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","sources":["webpack://okxconnectdemo/../packages/aptos-provider/src/AptosUtils.js","webpack://okxconnectdemo/../packages/aptos-provider/src/OKXAptosProvider.js","webpack://okxconnectdemo/../packages/aptos-provider/src/index.js","webpack://okxconnectdemo/../packages/core/src/connect/commands.js","webpack://okxconnectdemo/../packages/core/src/connect/connect.js","webpack://okxconnectdemo/../packages/core/src/connect/connectionManager.js","webpack://okxconnectdemo/../packages/core/src/connect/constants.js","webpack://okxconnectdemo/../packages/core/src/connect/engine.js","webpack://okxconnectdemo/../packages/core/src/connect/index.js","webpack://okxconnectdemo/../packages/core/src/connect/jwt.js","webpack://okxconnectdemo/../packages/core/src/connect/jwtconstants.js","webpack://okxconnectdemo/../packages/core/src/connect/sessionUtils.js","webpack://okxconnectdemo/../packages/core/src/connect/storage.js","webpack://okxconnectdemo/../packages/core/src/connect/storageconstants.js","webpack://okxconnectdemo/../packages/core/src/connect/walletConnectionConstants.js","webpack://okxconnectdemo/../packages/core/src/connect/walletConnectionManager.js","webpack://okxconnectdemo/../packages/core/src/connector/appwallet-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/iconnector.js","webpack://okxconnectdemo/../packages/core/src/connector/index.js","webpack://okxconnectdemo/../packages/core/src/connector/inject-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/okxwallet-inject-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/tgwallet-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/ws-connector.js","webpack://okxconnectdemo/../packages/core/src/crypto/crypto.js","webpack://okxconnectdemo/../packages/core/src/index.js","webpack://okxconnectdemo/../packages/core/src/inject/InjectUtils.js","webpack://okxconnectdemo/../packages/core/src/inject/index.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/AptosProvider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/SolProvider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/TONProvider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/eip155Provider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/index.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/sui-provider.js","webpack://okxconnectdemo/../packages/core/src/protocol/chains.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/engine.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/json-rpc.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/connect-event.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/connect-wallet.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/wallet-info.js","webpack://okxconnectdemo/../packages/core/src/protocol/constants.js","webpack://okxconnectdemo/../packages/core/src/protocol/error/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/error/okx-connect.error.js","webpack://okxconnectdemo/../packages/core/src/protocol/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/misc.js","webpack://okxconnectdemo/../packages/core/src/utils/call-for-success.js","webpack://okxconnectdemo/../packages/core/src/utils/index.js","webpack://okxconnectdemo/../packages/core/src/utils/log.js","webpack://okxconnectdemo/../packages/core/src/utils/media.js","webpack://okxconnectdemo/../packages/core/src/utils/report.js","webpack://okxconnectdemo/../packages/core/src/utils/reportconstants.js","webpack://okxconnectdemo/../packages/core/src/utils/request.js","webpack://okxconnectdemo/../packages/core/src/utils/safejson.js","webpack://okxconnectdemo/../packages/core/src/utils/stringUtils.js","webpack://okxconnectdemo/../packages/core/src/utils/tma-api.js","webpack://okxconnectdemo/../packages/core/src/utils/url.js","webpack://okxconnectdemo/../packages/core/src/utils/utils.js","webpack://okxconnectdemo/../packages/core/src/utils/web-api.js","webpack://okxconnectdemo/../packages/solana-provider/src/OKXSolanaProvider.js","webpack://okxconnectdemo/../packages/solana-provider/src/index.js","webpack://okxconnectdemo/../packages/sui-provider/src/OKXSuiProvider.js","webpack://okxconnectdemo/../packages/sui-provider/src/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXBtcProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXCosmosProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXStarknetProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXTonProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXTronProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXUniversalProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/sign-client/client.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/ConnectMethodUtils.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/namespaces.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/events.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/values.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/aptos.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/btc.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/cosmos.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/eip155.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcConnection.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/solana.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/starknet.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/sui.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/ton.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/tron.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/misc.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/providers.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/globals.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/misc.js","webpack://okxconnectdemo/./src/App.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue?1b44","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue?e4fb","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue?aa83","webpack://okxconnectdemo/./src/components/StarknetTransactionPanel.vue","webpack://okxconnectdemo/./src/components/StarknetTransactionPanel.vue?1a06","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue?089a","webpack://okxconnectdemo/./src/App.vue?7ccd","webpack://okxconnectdemo/./src/main.js","webpack://okxconnectdemo/webpack/bootstrap","webpack://okxconnectdemo/webpack/runtime/amd options","webpack://okxconnectdemo/webpack/runtime/chunk loaded","webpack://okxconnectdemo/webpack/runtime/compat get default export","webpack://okxconnectdemo/webpack/runtime/create fake namespace object","webpack://okxconnectdemo/webpack/runtime/define property getters","webpack://okxconnectdemo/webpack/runtime/global","webpack://okxconnectdemo/webpack/runtime/hasOwnProperty shorthand","webpack://okxconnectdemo/webpack/runtime/make namespace object","webpack://okxconnectdemo/webpack/runtime/node module decorator","webpack://okxconnectdemo/webpack/runtime/jsonp chunk loading","webpack://okxconnectdemo/webpack/startup"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AptosUtils = void 0;\nclass AptosUtils {\n    static getTransaction(o) {\n        if (\"rawTransaction\" in o) {\n            let transaction = o;\n            if (\"entryFunction\" in transaction.rawTransaction.payload) {\n                let entryFunction = transaction.rawTransaction.payload.entryFunction;\n                let typeArgs = entryFunction.type_args;\n                let typeArguments = new Array();\n                typeArgs.forEach(typeTag => {\n                    typeArguments.push(typeTag.toString());\n                });\n                let realArguments = new Array();\n                this.getTypeArguments(entryFunction.args, realArguments);\n                let i = {\n                    arguments: realArguments,\n                    function: `${entryFunction.module_name.address.data ? entryFunction.module_name.address.toString() : entryFunction.module_name.address}::${entryFunction.module_name.name.identifier ? entryFunction.module_name.name.identifier : entryFunction.module_name.name}::${entryFunction.function_name.identifier ? entryFunction.function_name.identifier : entryFunction.function_name}`,\n                    type: \"entry_function_payload\",\n                    type_arguments: typeArguments\n                };\n                return this.getArguments(i);\n            }\n        }\n        return o;\n    }\n    static getTypeArguments(args, array) {\n        for (let j = 0; j < args.length; j++) {\n            let y = args[j];\n            if (\"values\" in y && y.values != null && y.values instanceof Array) {\n                let subArray = new Array();\n                array.push(subArray);\n                this.getTypeArguments(y.values, subArray);\n            }\n            else {\n                this.dealArrayElements(y, array);\n            }\n        }\n    }\n    static dealArrayElements(e, array) {\n        if (\"value\" in e && e.value != null) {\n            array.push(e.value.toString());\n        }\n        else if (\"data\" in e && e.data != null && e.data instanceof Uint8Array) {\n            return array.push(e.toString());\n        }\n        else {\n            return array.push(e.toString());\n        }\n    }\n    static getArguments(e) {\n        if (\"arguments\" in e) {\n            let t = e.arguments;\n            if (Array.isArray(t)) {\n                let r = new Array();\n                t.forEach(n => {\n                    if (n instanceof Uint8Array) {\n                        let o = new Array();\n                        n.forEach(i => {\n                            o.push(i);\n                        });\n                        r.push(o);\n                    }\n                    else\n                        r.push(n);\n                });\n                e = Object.assign(Object.assign({}, e), { arguments: r });\n            }\n        }\n        return e;\n    }\n}\nexports.AptosUtils = AptosUtils;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXAptosProvider = void 0;\nconst buffer_1 = require(\"buffer\");\nconst AptosUtils_1 = require(\"./AptosUtils\");\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXAptosProvider {\n    constructor(provider) {\n        this.chainsSet = new Set();\n        this.provider = provider;\n        this.getConnectedNamespace();\n    }\n    get defaultNetwork() {\n        let network = this.provider.requestDefaultChainWithNamespace(core_1.NameSpaceKeyAptos);\n        return network;\n    }\n    get currentChainId() {\n        return `aptos:${this.defaultNetwork}`;\n    }\n    getRealChainId(chainId) {\n        // if (chainId == \"aptos:mainnet\") {\n        //     return \"aptos:637\"\n        // } else if (chainId == \"movement:testnet\") {\n        //     return \"aptos:70000060\"\n        // }\n        if (chainId == null) {\n            if (this.chainsSet.size == 1) {\n                return this.currentChainId;\n            }\n            else {\n                throw new Error(\"connected to multiple aptos chains,chainId can not be null\");\n            }\n        }\n        else {\n            return chainId;\n        }\n    }\n    getConnectedNamespace() {\n        var _a, _b, _c;\n        (_c = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces) === null || _b === void 0 ? void 0 : _b['aptos']) === null || _c === void 0 ? void 0 : _c.chains.forEach(chain => {\n            this.chainsSet.add(chain);\n        });\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n        chainId = this.getRealChainId(chainId);\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['aptos']) === null || _b === void 0 ? void 0 : _b.accounts[0];\n        if (chainId != null) {\n            account = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces['aptos']) === null || _d === void 0 ? void 0 : _d.accounts.filter(function (account) {\n                return account.startsWith(chainId);\n            })[0];\n        }\n        (0, core_1.logDebug)(\"getAccount\", account);\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        console.log(\"aptos_publicKey\", (_f = (_e = this.provider.session) === null || _e === void 0 ? void 0 : _e.namespaces['aptos']) === null || _f === void 0 ? void 0 : _f.extra);\n        let extra = (_j = (_h = (_g = this.provider.session) === null || _g === void 0 ? void 0 : _g.namespaces['aptos']) === null || _h === void 0 ? void 0 : _h.extra) === null || _j === void 0 ? void 0 : _j[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n            if (publicKey != undefined && publicKey.startsWith(\"0x\")) {\n                publicKey = publicKey.substring(2);\n            }\n            console.log(\"aptos_publicKey\", publicKey);\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address,\n            publicKey: publicKey\n        };\n    }\n    signMessage(payload, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            let realChain = this.getRealChainId(chainId);\n            try {\n                let prefix = \"APTOS\";\n                let address = (_a = this.getAccount(realChain)) === null || _a === void 0 ? void 0 : _a.address;\n                let message = \"\", nonce = \"\";\n                var fullMessage = prefix;\n                let application = window.location.protocol + \"//\" + window.location.hostname;\n                if (\"address\" in payload && payload.address) {\n                    fullMessage += \"\\naddress: \" + address;\n                }\n                if (\"application\" in payload && payload.application) {\n                    fullMessage += \"\\napplication: \" + application;\n                }\n                if (\"chainId\" in payload && payload.chainId) {\n                    let chainId = 1;\n                    if (realChain == \"aptos:mainnet\") {\n                        chainId = 1;\n                    }\n                    else if (realChain == \"movement:testnet\") {\n                        chainId = 2;\n                    }\n                    fullMessage += \"\\nchainId: \" + chainId;\n                }\n                if (\"message\" in payload) {\n                    fullMessage += \"\\nmessage: \" + payload.message;\n                    message = payload.message;\n                }\n                if (\"nonce\" in payload) {\n                    fullMessage += \"\\nnonce: \" + payload.nonce;\n                    nonce = payload.nonce;\n                }\n                console.log(\"signMessage\", fullMessage);\n                const buffer = buffer_1.Buffer.from(fullMessage);\n                const hex = this.bufferToHex(buffer);\n                let data = {\n                    \"chainId\": realChain,\n                    \"method\": \"aptos_signMessage\",\n                    \"params\": {\n                        \"message\": hex,\n                    },\n                    injectParams: payload,\n                };\n                let signedMessage = yield this.provider.request(data, realChain);\n                if ('result' in signedMessage) {\n                    let successData = signedMessage.result;\n                    let signStr = successData;\n                    if (successData.startsWith(\"0x\")) {\n                        signStr = successData.slice(2, successData.length);\n                    }\n                    // try {\n                    //     let publicKey = this.getAccount(realChain)?.publicKey\n                    //     if (publicKey != undefined) {\n                    //         console.log(\"apt_signMessage\", Buffer.from(successData, 'hex'))\n                    //         console.log(\"apt_signMessage\", successData)\n                    //\n                    //         const verified = nacl.sign.detached.verify(\n                    //             Buffer.from(fullMessage),\n                    //             Buffer.from(signStr, 'hex'),\n                    //             Buffer.from(publicKey, 'hex'),\n                    //         );\n                    //         console.log(\"signMessage\", verified);\n                    //     }\n                    // } catch (_) {\n                    // }\n                    return new Promise((resolve, reject) => {\n                        resolve({\n                            address: address,\n                            application: application,\n                            chainId: realChain,\n                            fullMessage: fullMessage,\n                            message: message,\n                            nonce: nonce,\n                            prefix: prefix,\n                            signature: signStr,\n                            // verified:verified\n                        });\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        if (\"error\" in signedMessage) {\n                            resolve(signedMessage.error);\n                        }\n                    });\n                }\n            }\n            catch (error) {\n                console.error('方法数据回调失败 --Error--', error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    signTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let tx = AptosUtils_1.AptosUtils.getTransaction(transaction);\n            console.log(\"signTransaction\", tx);\n            let realChain = this.getRealChainId(chainId);\n            try {\n                let signature = yield this.provider.request({\n                    \"method\": \"aptos_signTransaction\",\n                    \"params\": tx\n                }, realChain);\n                if ('result' in signature) {\n                    let successData = signature.result;\n                    return new Promise((resolve, reject) => {\n                        resolve(buffer_1.Buffer.from(successData));\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        reject(signature);\n                    });\n                }\n            }\n            catch (error) {\n                (0, core_1.logDebug)(\"getSignedTransaction\", error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    signAndSubmitTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let tx = AptosUtils_1.AptosUtils.getTransaction(transaction);\n            console.log(\"signAndSubmitTransaction\", tx);\n            let realChain = this.getRealChainId(chainId);\n            try {\n                let signature = yield this.provider.request({\n                    \"method\": \"aptos_signAndSubmitTransaction\",\n                    \"params\": tx\n                }, realChain);\n                if ('result' in signature) {\n                    let successData = signature.result;\n                    return new Promise((resolve, reject) => {\n                        resolve(successData);\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        reject(signature);\n                    });\n                }\n            }\n            catch (error) {\n                (0, core_1.logDebug)(\"getSignedTransaction\", error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    bufferToHex(buf) {\n        return \"0x\" + buffer_1.Buffer.from(buf).toString(\"hex\");\n    }\n}\nexports.OKXAptosProvider = OKXAptosProvider;\nexports.default = OKXAptosProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXAptosProvider = void 0;\nvar OKXAptosProvider_1 = require(\"./OKXAptosProvider\");\nObject.defineProperty(exports, \"OKXAptosProvider\", { enumerable: true, get: function () { return OKXAptosProvider_1.OKXAptosProvider; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_METHOD_BATCH_FETCHMSG = exports.CONNECT_METHOD_FETCHMSG = exports.CONNECT_METHOD_RECEIVE = exports.CONNECT_METHOD_UNSUB = exports.CONNECT_METHOD_SUB = exports.CONNECT_METHOD_PUBLISH = exports.CONNECT_METHOD_LOGIN = exports.CONNECT_METHOD_PUSH = void 0;\n// --------------- ws methods -------------\nexports.CONNECT_METHOD_PUSH = \"push\";\nexports.CONNECT_METHOD_LOGIN = \"login\";\nexports.CONNECT_METHOD_PUBLISH = \"publish\";\nexports.CONNECT_METHOD_SUB = \"subscribe\";\nexports.CONNECT_METHOD_UNSUB = \"unsubscribe\";\nexports.CONNECT_METHOD_RECEIVE = \"receive\";\nexports.CONNECT_METHOD_FETCHMSG = \"fetchMessages\";\nexports.CONNECT_METHOD_BATCH_FETCHMSG = \"batchFetchMessages\";\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXWalletConnector = void 0;\nconst constants_1 = require(\"./constants\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils\");\nconst utils_2 = require(\"../utils/utils\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst log = __importStar(require(\"../utils/log\"));\nconst protocol_1 = require(\"../protocol\");\nconst report_1 = require(\"../utils/report\");\nconst WS = (0, utils_2.resolveWebSocketImplementation)();\nclass OKXWalletConnector {\n    constructor(url) {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.state = constants_1.ConnectorState.InitState;\n        this.selectedUrlIndex = 0;\n        // reconnect\n        this.retryCount = 0;\n        // default timeout limit: 8 sec\n        this.timeOutLimit = 8000;\n        if (!(0, utils_2.checkWSUrl)(url)) {\n            throw new Error(`CONNECTOR: invalid url ${url}`);\n        }\n        this.url = url;\n        this.heartbeatTimer = null;\n        this.connectionTimeoutTimer = null;\n        this.connectURLStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY + storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n    }\n    get connecting() {\n        return this.state == constants_1.ConnectorState.Connecting;\n    }\n    // ------------------------------------------------------\n    onPayload(e) {\n        if (typeof e.data === \"undefined\")\n            return;\n        log.logDebug('get received data');\n        log.logDebug(e);\n        if (typeof e.data === \"string\") {\n            let rsp = e.data;\n            if (rsp === \"pong\") {\n                log.logDebug(`CONNECT: receive pong ${Date.now().toString()}`);\n                return;\n            }\n        }\n        this.events.emit(\"payload\", e.data);\n    }\n    onClose(event) {\n        var _a;\n        log.logDebug('socket get closed: ', (_a = this.socket) === null || _a === void 0 ? void 0 : _a.url, event.code);\n        this.socket = undefined;\n        this.events.emit(\"close\", event);\n    }\n    onError(id, e) {\n        const payload = { id: id, msg: e.toString() };\n        this.events.emit(\"payload\", payload);\n    }\n    onopen(socket) {\n        socket.onmessage = (event) => this.onPayload(event);\n        socket.onclose = (event) => this.onClose(event);\n        this.socket = socket;\n        this.state = constants_1.ConnectorState.Connected;\n        this.events.emit(\"open\");\n    }\n    // ------------------------------------------------------\n    emitError(errorEvent) {\n        this.events.emit(\"fail\", errorEvent);\n    }\n    // ------------------------------------------------------\n    heartbeat() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.heartbeatTimer) {\n                clearTimeout(this.heartbeatTimer);\n            }\n            if (this.state != constants_1.ConnectorState.Connected && this.state != constants_1.ConnectorState.OnError) {\n                log.logDebug('heart beat close');\n                return;\n            }\n            if (!this.socket) {\n                log.logDebug('socket not exist');\n                if (this.state == constants_1.ConnectorState.Connected || this.state == constants_1.ConnectorState.OnError) {\n                    log.logDebug('socket reconnect by heartbeat');\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                        this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n                    }\n                }\n                return;\n            }\n            if (this.socket.readyState !== WebSocket.OPEN) {\n                log.logDebug('socket not ready');\n                if (this.state == constants_1.ConnectorState.Connected || this.state == constants_1.ConnectorState.OnError) {\n                    log.logDebug('socket reconnect by heartbeat with state', this.state, this.socket.readyState);\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                        this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n                    }\n                }\n                return;\n            }\n            log.logDebug(`send ping heart beat: ${Date.now().toString()}, ${this.socket}`);\n            this.socket.send(\"ping\");\n            this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n        });\n    }\n    registOpen(url = this.url, inRetry = false) {\n        if (!(0, utils_2.checkWSUrl)(url)) {\n            throw new Error(`CONNECTOR: invalid url ${url}`);\n        }\n        this.url = url;\n        if (!inRetry) {\n            log.logDebug('Connection connect:', this.url, new Date().toUTCString());\n        }\n        this.state = constants_1.ConnectorState.Connecting;\n        const origin = new URLSearchParams(url).get(\"origin\");\n        return new Promise((resolve, reject) => {\n            const socket = new WS(url, []);\n            log.logDebug('Connection connect Begin:', this.url, new Date().toUTCString());\n            this.startTimeOutTimer(socket);\n            if ((0, utils_2.hasBuiltInWebSocket)()) {\n                log.logDebug('Add socket error handler');\n                socket.onerror = () => {\n                    reject(new Error('socket error'));\n                    socket.close();\n                };\n            }\n            else {\n                log.logDebug('Add socket error handler');\n                socket.on(\"error\", () => {\n                    reject(new Error('socket error'));\n                    socket.close();\n                });\n            }\n            socket.onopen = () => {\n                log.logDebug('socket opened');\n                this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.FINISHED);\n                this.onopen(socket);\n                this.heartbeat();\n                resolve(socket);\n            };\n        });\n    }\n    checkMaxRetry() {\n        log.logDebug('current retry count:', this.retryCount, 'of', constants_1.OKXCONNECTOR_WS_URL_LIST.length);\n        return this.retryCount > (constants_1.OKXCONNECTOR_WS_URL_LIST.length * 3);\n    }\n    connectionTryNext() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.checkMaxRetry()) {\n                //TODO: mark descent\n                this.retryCount += 1;\n                let nextUrl = this.getNextSelectUrl();\n                log.logDebug('Connection retry:', nextUrl, new Date().toUTCString());\n                return this.registOpen(nextUrl, true);\n            }\n            else {\n                log.logDebug('Max Connection retry ', this.retryCount, new Date().toUTCString());\n            }\n        });\n    }\n    startTimeOutTimer(socket) {\n        if (this.connectionTimeoutTimer) {\n            this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.CANCELED);\n        }\n        this.pendingSocket = socket;\n        this.connectionTimeoutTimer = setTimeout(() => {\n            if (this.pendingSocket) {\n                this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.TIME_OUT);\n            }\n        }, this.timeOutLimit);\n    }\n    resetTimeOutTimer(code) {\n        var _a;\n        // 1. cancel connecting pending sockets\n        if (code == constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.TIME_OUT) {\n            // 2. remove timer\n            clearTimeout(this.connectionTimeoutTimer);\n            (_a = this.pendingSocket) === null || _a === void 0 ? void 0 : _a.close();\n            this.pendingSocket = undefined;\n            log.reportEvent(report_1.OKXReportType.LOG, 'timeout', this.retryCount.toString());\n            throw new Error('socket timeout');\n        }\n        else {\n            this.pendingSocket = undefined;\n            // 2. remove timer\n            clearTimeout(this.connectionTimeoutTimer);\n        }\n    }\n    cacheSuccessUrlSelect() {\n        this.connectURLStorage.saveContent(this.selectedUrlIndex.toString(), storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n    }\n    // private getSuccessUrlSelect(): string {\n    //     let selectIndex = this.connectURLStorage.getItem(OKXCONNECTOR_CACHE_KEY)?.content\n    //     let index = 0\n    //     if (selectIndex) {\n    //         index = Number(selectIndex)\n    //     }\n    //     this.selectedUrlIndex = index\n    //     return OKXCONNECTOR_WS_URL_LIST[index]\n    // }\n    getNextSelectUrl() {\n        this.selectedUrlIndex += 1;\n        this.selectedUrlIndex = this.selectedUrlIndex % constants_1.OKXCONNECTOR_WS_URL_LIST.length;\n        return constants_1.OKXCONNECTOR_WS_URL_LIST[this.selectedUrlIndex];\n    }\n    // ------------------------------------------------------\n    onVisibleChanged() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (document.visibilityState === 'visible') {\n                // check and restore\n                log.logDebug(`get changed ${this.state}, ${this.socket}`);\n                if (this.state == constants_1.ConnectorState.Connected && typeof this.socket === \"undefined\") {\n                    log.logDebug('CONNECTION need reopen');\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                    }\n                    return;\n                }\n            }\n        });\n    }\n    tryRegistOpen() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            if (this.connecting) {\n                log.logDebug('tryRegistOpen => connecting state');\n                return new Promise((resolve, reject) => {\n                    this.events.once('fail', (e) => {\n                        log.logDebug('tryRegistOpen => connecting fail listener', e);\n                        return reject(e);\n                    });\n                    this.events.once(\"open\", () => {\n                        if (typeof this.socket == \"undefined\") {\n                            return reject(new Error(\"Connect lost\"));\n                        }\n                        return resolve(this.socket);\n                    });\n                });\n            }\n            log.logDebug('tryRegistOpen => try registOpen until retry limit is hit');\n            let inRetry = false;\n            while (!this.checkMaxRetry() && !this.socket) {\n                try {\n                    log.logDebug('tryRegistOpen => call registOpen, try count:', this.retryCount, inRetry);\n                    yield this.registOpen(url, inRetry);\n                }\n                catch (err) {\n                    log.logDebug('tryRegistOpen => registOpen failed', err);\n                    this.retryCount += 1;\n                    url = this.getNextSelectUrl();\n                    inRetry = true;\n                }\n            }\n            log.logDebug('tryRegistOpen => exit while loop', this.retryCount, this.socket);\n            if (!this.socket && this.checkMaxRetry()) {\n                log.logDebug('tryRegistOpen => failed to open a socket', this.retryCount, this.socket);\n                this.retryCount = 0;\n                this.state = constants_1.ConnectorState.OnError;\n                this.emitError(new Error('tryRegistOpen failed'));\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CONNECTION_ERROR, \"Failed to connect\");\n            }\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this.tryRegistOpen();\n                // listener for reconnect\n                document.removeEventListener('visibilitychange', this.onVisibleChanged.bind(this));\n                document.addEventListener('visibilitychange', this.onVisibleChanged.bind(this));\n            }\n            catch (e) {\n                log.logDebug('connect => failed to connect', e);\n                throw e;\n            }\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.state = constants_1.ConnectorState.Disconnected;\n            return new Promise((resolve, reject) => {\n                if (typeof this.socket === \"undefined\") {\n                    // reject(new Error(\"CONNECTION closed\"))\n                    resolve();\n                    return;\n                }\n                this.socket.onclose = (event) => {\n                    this.onClose(event);\n                    resolve();\n                };\n                this.socket.close();\n                if (this.heartbeatTimer) {\n                    clearTimeout(this.heartbeatTimer);\n                }\n            });\n        });\n    }\n    currentStatus() {\n        return {\n            state: this.state,\n            url: this.url\n        };\n    }\n    // event will be jsonstr\n    /// @params Promise\n    /// @params success/failed callback\n    addListener(event, decrypt, success, failed) {\n        if (this.listenPayloadHandler) {\n            this.events.removeListener(\"payload\", this.listenPayloadHandler);\n        }\n        this.listenPayloadHandler = (e) => {\n            var _a;\n            log.logDebug(`<<< get payload ${e}`);\n            let parsedEvent = (0, utils_1.safeJsonParse)(e);\n            // parse the data to chose success or failed\n            if (parsedEvent.params && parsedEvent.params.data) {\n                let rawMsg = (_a = parsedEvent.params.data) === null || _a === void 0 ? void 0 : _a.message;\n                if (rawMsg) {\n                    try {\n                        let msg = decrypt(rawMsg);\n                        if (msg === undefined) {\n                            log.logDebug(`CONNECT: decrypt undefined`);\n                            failed(event, 'Decrypt undefined');\n                        }\n                        else {\n                            success(event, msg);\n                        }\n                    }\n                    catch (e) {\n                        log.logDebug(`CONNECT: decrypt failed: ${e}`);\n                        failed(event, e.message);\n                    }\n                }\n            }\n        };\n        this.events.on(\"payload\", this.listenPayloadHandler);\n        if (this.failHandler) {\n            this.events.removeListener(\"fail\", this.failHandler);\n        }\n        this.failHandler = (e) => {\n            if (e) {\n                log.logDebug(`CONNECT failed: ${e}`);\n                failed(event, e.message);\n            }\n            else {\n                failed(event, \"Unkonow error\");\n            }\n        };\n        this.events.on(\"fail\", this.failHandler);\n    }\n    addPackageParse(callback) {\n        if (this.payloadHandler) {\n            this.events.removeListener(\"payload\", this.payloadHandler);\n        }\n        this.payloadHandler = (e) => __awaiter(this, void 0, void 0, function* () {\n            // parse the data to chose success or failed\n            log.logDebug(`CONNECTION @[${new Date().toUTCString()}] <<<< received e:${e}`);\n            let param = (0, utils_1.safeJsonParse)(e);\n            yield callback(param);\n        });\n        this.events.on(\"payload\", this.payloadHandler);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    send(doLogin, payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (typeof this.socket === \"undefined\") {\n                    log.logDebug(`>>> send payload undefined ${payload}`);\n                    // this.socket = await this.registOpen();\n                    yield doLogin();\n                }\n                log.logDebug(`CONNECTION @[${new Date().toUTCString()}]>>> send payload ${(0, utils_1.safeJsonStringify)(payload)}`);\n                if (this.socket) {\n                    this.socket.send((0, utils_1.safeJsonStringify)(payload));\n                }\n            }\n            catch (e) {\n                this.onError(payload.id, e);\n            }\n        });\n    }\n    getMsgPayloadFromHistory(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof msg === \"undefined\")\n                return;\n            let tmpMsg = {\n                params: {\n                    data: msg\n                }\n            };\n            let jsonstr = (0, utils_1.safeJsonStringify)(msg);\n            log.logDebug('get received data from history');\n            log.logDebug(jsonstr);\n            jsonstr = (0, utils_1.safeJsonStringify)(tmpMsg);\n            this.events.emit(\"payload\", jsonstr);\n        });\n    }\n    onOpen(callback) {\n        if (this.openHandler) {\n            this.events.removeListener(\"open\", this.openHandler);\n        }\n        this.openHandler = () => __awaiter(this, void 0, void 0, function* () {\n            log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> ws opened: `);\n            yield callback();\n        });\n        this.events.on(\"open\", this.openHandler);\n        this.cacheSuccessUrlSelect();\n    }\n}\nexports.OKXWalletConnector = OKXWalletConnector;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionManager = void 0;\nconst connect_1 = require(\"./connect\");\nconst commands_1 = require(\"./commands\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst jwtconstants_1 = require(\"./jwtconstants\");\nconst constants_1 = require(\"./constants\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils/utils\");\nconst crypto_1 = require(\"../crypto/crypto\");\nconst jwt_1 = require(\"./jwt\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst report_1 = require(\"../utils/report\");\nconst url_1 = require(\"../utils/url\");\nclass ConnectionManager {\n    constructor(appname = undefined) {\n        this.events = new eventemitter3_1.EventEmitter();\n        // local storage\n        this.connectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY_DAPP + appname, storageconstants_1.OKXCONNECTOR_CACHE_KEY_DAPP);\n        this.crypto = new crypto_1.SessionCrypto();\n        let inTMA = (0, url_1.isInTMA)();\n        (0, log_1.logDebug)('do init:', inTMA);\n        log.reportLog('connection manager do init');\n        if (inTMA) {\n            // recovery from cache\n            const keyPairInfo = this.getCachedCryptoKeyPair();\n            (0, log_1.logDebug)('use same pk:', keyPairInfo);\n            this.crypto = new crypto_1.SessionCrypto(keyPairInfo);\n        }\n        this.jwtKeyPair = this.getCachedJWTKeyPair();\n        this.saveJWTKeyPair(this.jwtKeyPair);\n        // wss connection\n        this.connector = new connect_1.OKXWalletConnector(constants_1.OKXCONNECTOR_WS_URL_1);\n        this.packageId = Date.now();\n        // connection state\n        this.connectedWalletPK = '';\n        this.currentTopic = '';\n        log.logDebug(`this.connectedWalletPK  constructor   ${this.connectedWalletPK}`);\n    }\n    refreshPackageId() {\n        this.packageId = Date.now();\n    }\n    saveCryptoKeyPair(keyPair) {\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(keyPair);\n        // encrypt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_CRYPTO_KEY);\n    }\n    getCachedCryptoKeyPair() {\n        // decrypt kp\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_CRYPTO_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            log.logDebug('get cached crypto key:');\n            log.logDebug(content);\n            let keyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            return keyPairInfo;\n        }\n        else {\n            this.connectStorage.clearCache();\n        }\n        return null;\n    }\n    saveJWTKeyPair(keyPair) {\n        var strkeyPair = {\n            publicKey: (0, utils_1.toHexString)(keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(keyPair.secretKey)\n        };\n        log.logDebug('save jwt kp');\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(strkeyPair);\n        log.logDebug(cacheInfo);\n        // encrypt jwt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_JWT_KEY);\n    }\n    getCachedJWTKeyPair() {\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            // TODO: decrypt jwt kp\n            log.logDebug('get cached jwt kp:');\n            log.logDebug(content);\n            let strKeyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            log.logDebug('save jwt kp');\n            log.logDebug(strKeyPairInfo);\n            var keyPair = {\n                publicKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.publicKey),\n                secretKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.secretKey)\n            };\n            return keyPair;\n        }\n        else {\n            return (0, jwt_1.generateKeyPair)();\n        }\n    }\n    isWalletPKReady() {\n        log.logDebug(`isWalletPKReady  ===> ${this.connectedWalletPK}`);\n        return this.connectedWalletPK.length > 0;\n    }\n    makeJWT(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, jwt_1.signJWT)(topic, jwtconstants_1.OKXCONNECTOR_JWT_SIDE, jwtconstants_1.OKXCONNECTOR_JWT_TTL, // 24h\n            this.jwtKeyPair);\n        });\n    }\n    parsePackage(input_1) {\n        return __awaiter(this, arguments, void 0, function* (input, ignoreACK = false) {\n            var _a, _b, _c, _d, _e;\n            this.events.emit(input.id, input);\n            // send back ACK\n            if (!ignoreACK) {\n                yield this.sendACK(input.id, true);\n                let topic = (_a = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE)) === null || _a === void 0 ? void 0 : _a.content;\n                if (topic) {\n                    let inputObj = input;\n                    if ((_c = (_b = inputObj.params) === null || _b === void 0 ? void 0 : _b.data) === null || _c === void 0 ? void 0 : _c.messageId) {\n                        this.refreshPackageId();\n                        yield this.sendReceive(this.packageId.toString(), (_e = (_d = inputObj.params) === null || _d === void 0 ? void 0 : _d.data) === null || _e === void 0 ? void 0 : _e.messageId, topic);\n                    }\n                }\n            }\n        });\n    }\n    restoreConnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.reportLog('connection manager restore connection');\n            log.logDebug(`connectionManager  restoreConenct   ${topic}`);\n            if ((typeof topic !== 'string') || topic.length === 0) {\n                throw new Error('CONNECTION: invalid topic');\n            }\n            log.logDebug(`connectionManager  restoreConenct   disconnect`);\n            yield this.disconnect(true);\n            this.connectStorage.saveContent(topic, storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`connectionManager  restoreConenct   conect`);\n            yield this.connect(true);\n        });\n    }\n    getConnectInfo() {\n        var topic = (0, utils_1.generateTopic)();\n        log.logDebug(`generate topic token: ${topic}`);\n        log.reportLog('connection manager generate connection info');\n        this.currentTopic = topic;\n        const info = {\n            channelId: topic,\n            clientId: this.crypto.stringifyKeypair().publicKey,\n        };\n        return info;\n    }\n    connect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            this.timeLog = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---enter->\", this.timeLog);\n            log.reportLog('connection manager begin connect');\n            let lastConnectId = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            //1. generate topic & jwt\n            var topic = this.currentTopic;\n            log.logDebug(`generate topic token: ${topic}`);\n            // crypto keypair\n            if (fromRestore) {\n                if (typeof lastConnectId !== 'undefined' && lastConnectId !== null) {\n                    log.logDebug(`read last connect id: ${lastConnectId}`);\n                    topic = lastConnectId.content;\n                }\n                var cachedSenderPublicKey = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                if (cachedSenderPublicKey) {\n                    this.connectedWalletPK = cachedSenderPublicKey.content;\n                    (0, log_1.logDebug)(`connectionManager connect() this.connectedWalletPK : ${this.connectedWalletPK}`);\n                }\n                log.reportLog('connection manager do restore connection');\n            }\n            if (fromRestore) {\n                // recovery from cache\n                const keyPairInfo = this.getCachedCryptoKeyPair();\n                if (keyPairInfo) {\n                    this.crypto = new crypto_1.SessionCrypto(keyPairInfo);\n                }\n            }\n            log.logDebug(`use crypto client id: ${this.crypto.stringifyKeypair().publicKey}`);\n            // cache topic\n            this.connectStorage.saveContent(topic, storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            var jwtToken = yield this.makeJWT(topic);\n            log.logDebug(`generate jwt token: ${jwtToken}`);\n            this.connectStorage.saveContent(jwtToken, 'jwt');\n            return new Promise((resolve, reject) => {\n                // 1. when websocket opened\n                this.connector.onOpen(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug(`1. connector on open`);\n                    log.reportLog('1. connect ws open');\n                    const timeOne = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---open->\", timeOne - this.timeLog);\n                    //2. send jwt to login\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when login');\n                            log.reportLog('2. connect login failed');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // throw error\n                            reject(error);\n                        }\n                        //3. send subscribe\n                        this.refreshPackageId();\n                        this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                            // ack\n                            if (rsp && rsp.error) {\n                                log.logError('failed when subscribe');\n                                log.reportLog('3. connect subscribe failed');\n                                yield this.connector.disconnect();\n                                var error = new Error();\n                                error.message = rsp.error.message;\n                                error.name = rsp.error.code.toString();\n                                // throw error\n                                reject(error);\n                            }\n                            this.refreshPackageId();\n                            log.logDebug(`4. subscribe callback then send fetch: ${this.packageId}`);\n                            log.reportLog('4. subscribe callback then send fetch');\n                            const timeF = new Date().getTime();\n                            (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n                            // 4. fetch messages\n                            yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                            resolve();\n                        }));\n                        log.logDebug(`3. login callback then send subscribe: ${this.packageId}`);\n                        log.reportLog('3. connect subscribe failed');\n                        const timeTh = new Date().getTime();\n                        (0, log_1.logDebug)(\"ConnectTime---login callback->\", timeTh - this.timeLog);\n                        yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                            log.logDebug('CONNECT: reconnect before send');\n                            yield this.connector.connect()\n                                .catch((err) => {\n                                (0, log_1.logDebug)('ConnectionManager connect error', err);\n                                reject(err);\n                            });\n                        }), {\n                            id: this.packageId.toString(),\n                            jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                            method: commands_1.CONNECT_METHOD_SUB,\n                            params: {\n                                topic: topic\n                            }\n                        });\n                    }));\n                    log.logDebug(`2. login called`);\n                    log.reportLog('2. connection manager connect call login');\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        yield this.connector.connect()\n                            .catch((err) => {\n                            (0, log_1.logDebug)('ConnectionManager connect error', err);\n                            reject(err);\n                        });\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_LOGIN,\n                        params: {\n                            token: jwtToken\n                        }\n                    });\n                    // 4. listen when dapp back to front, receive wallet public key\n                    this.connector.addPackageParse((event) => {\n                        var _a;\n                        log.logDebug(`connect: parse package`);\n                        log.logDebug(event);\n                        if (!(\"params\" in event) || !(\"data\" in event[\"params\"])) {\n                            this.parsePackage(event, true);\n                            return;\n                        }\n                        let rawMsg = (_a = event.params.data) === null || _a === void 0 ? void 0 : _a.message;\n                        if (typeof rawMsg !== 'undefined') {\n                            rawMsg = rawMsg.replace(/'/g, '\"');\n                            let parsedMessage = (0, safejson_1.safeJsonParse)(rawMsg);\n                            if (typeof parsedMessage !== 'string' && \"clientId\" in parsedMessage && parsedMessage.clientId && parsedMessage.clientId.length > 0) {\n                                this.connectedWalletPK = parsedMessage.clientId;\n                                log.logDebug(`this.connectedWalletPK  addPackageParse   ${this.connectedWalletPK}`);\n                                // exchange sender public key\n                                // cache wallet public key\n                                this.connectStorage.saveContent(this.connectedWalletPK, storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                                // cache crypto keypair\n                                this.saveCryptoKeyPair(this.crypto.stringifyKeypair());\n                            }\n                        }\n                        // ignore receive echo\n                        this.parsePackage(event, event.method === commands_1.CONNECT_METHOD_RECEIVE);\n                    });\n                }));\n                this.connector.connect().catch((err) => {\n                    (0, log_1.logDebug)('ConnectionManager connect error', err);\n                    reject(err);\n                });\n            });\n        });\n    }\n    disconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            yield this.connector.disconnect();\n            log.reportLog('connect disconnect');\n            //clean cached topic\n            //如果是恢复连接，就不清理解密public key\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            if (!fromRestore) {\n                this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                this.connectedWalletPK = '';\n                (0, log_1.logDebug)(`connectionManager disconnect() this.connectedWalletPK : ${this.connectedWalletPK}`);\n            }\n        });\n    }\n    addListener(event, success, fail) {\n        this.connector.addListener((0, safejson_1.safeJsonStringify)(event), (rawMsg) => {\n            rawMsg = rawMsg.replace(/'/g, '\"');\n            log.logDebug(`addListener ===> ${rawMsg}`);\n            if (typeof rawMsg !== 'undefined') {\n                var msgObj = (0, safejson_1.safeJsonParse)(rawMsg);\n                var msg = msgObj.message;\n                let result;\n                if (msg.trimStart().startsWith('{')) {\n                    result = msg;\n                }\n                else {\n                    if (msgObj.clientId && msgObj.clientId.length > 0) {\n                        this.connectedWalletPK = msgObj.clientId;\n                        this.connectStorage.saveContent(this.connectedWalletPK, storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                        log.logDebug(`this.connectedWalletPK  addListener   ${this.connectedWalletPK}`);\n                        log.logDebug(`this.cryptoKey  addListener   ${(0, utils_1.toHexString)(this.crypto.keyPair.publicKey)}`);\n                        // cache crypto keypair\n                        this.saveCryptoKeyPair(this.crypto.stringifyKeypair());\n                    }\n                    result = this.crypto.decrypt(msg, this.connectedWalletPK);\n                }\n                log.logDebug(`addListener ===> ${result}`);\n                return result;\n            }\n            return undefined;\n        }, success, fail);\n    }\n    sendRaw(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.logDebug(`message send =====> ${msg}`);\n            log.reportLog('connect send raw msg');\n            let message = msg;\n            log.logDebug(`message send =====encrypt message.length>>>> ${message.length}`);\n            // only one topic\n            let topic = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`message send =====topic>>>> ${topic === null || topic === void 0 ? void 0 : topic.content}`);\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                method: commands_1.CONNECT_METHOD_PUBLISH,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                params: {\n                    message: {\n                        topic: topic === null || topic === void 0 ? void 0 : topic.content,\n                        message: message,\n                        ttl: constants_1.OKXCONNECTOR_MESSAGE_TTL\n                    }\n                } // crypted\n            };\n            this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                // ack\n                if (rsp && rsp.error) {\n                    log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                }\n                else if (rsp && !rsp.error) {\n                    log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                }\n            }));\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n            return this.packageId;\n        });\n    }\n    send(msg_1) {\n        return __awaiter(this, arguments, void 0, function* (msg, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL) {\n            // make send msg payload\n            log.logDebug(`message send =====> ${msg}`);\n            log.reportLog('connect send msg');\n            if (!this.isWalletPKReady()) {\n                // channel not ready\n                throw new Error('connection not finish');\n            }\n            let message = this.crypto.encrypt(msg, this.connectedWalletPK);\n            log.logDebug(`message send =====encrypt message.length>>>> ${message.length}`);\n            log.reportEvent(report_1.OKXReportType.LOG, 'msg_size', message.length.toString());\n            // only one topic\n            let topic = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`message send =====topic>>>> ${topic === null || topic === void 0 ? void 0 : topic.content}`);\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                method: commands_1.CONNECT_METHOD_PUBLISH,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                params: {\n                    message: {\n                        topic: topic === null || topic === void 0 ? void 0 : topic.content,\n                        message: message,\n                        ttl: ttl\n                    }\n                } // crypted\n            };\n            this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                // ack\n                if (rsp && rsp.error) {\n                    log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                }\n                else if (rsp && !rsp.error) {\n                    log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                }\n            }));\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n            return this.packageId;\n        });\n    }\n    sendACK(msgId_1, success_1) {\n        return __awaiter(this, arguments, void 0, function* (msgId, success, reason = undefined) {\n            if (success === true) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    result: true\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n            else if (reason) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    error: {\n                        code: reason.code, //int\n                        message: reason.message\n                    }\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    // send receive\n    sendReceive(msgId, messageId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECEIVE,\n                params: {\n                    data: {\n                        messageId: messageId,\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendConnectSessionInfo(msgId, messageId, topic, params) {\n        return __awaiter(this, void 0, void 0, function* () {\n        });\n    }\n    // send receive\n    // 1. fetch all \n    // 2. send back receive\n    // 3. check has more, if so, repeat from 1st step\n    sendFetchAndConsumeMessages(msgId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(msgId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic == topic) {\n                                let messageId = msg.messageId;\n                                log.reportLog('5. get fetch result');\n                                yield this.connector.getMsgPayloadFromHistory(msg);\n                                // send receive command to relay server\n                                this.refreshPackageId();\n                                yield this.sendReceive(this.packageId.toString(), messageId, topic);\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            log.reportLog('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_FETCHMSG,\n                params: {\n                    data: {\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    cleanCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.reportLog('connection cache clean called');\n            this.connectStorage.clearCache();\n        });\n    }\n    saveSessionContent(key, data) {\n        if (!data) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(data);\n        this.connectStorage.encryptStoreMsg(jsonData, storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n    }\n    getSessionContent(key) {\n        let jsonStr = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        if (jsonStr) {\n            let object = (0, safejson_1.safeJsonParse)(jsonStr);\n            return object;\n        }\n        return undefined;\n    }\n    getCurrentConnectionReady() {\n        return this.isWalletPKReady();\n    }\n}\nexports.ConnectionManager = ConnectionManager;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectorState = exports.CONNECT_JSONRPC_VER = exports.OKXCONNECTOR_MESSAGE_TTL = exports.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE = exports.OKXCONNECTOR_WS_URL_LIST = exports.OKXCONNECTOR_WS_URL_IDX_KEY = exports.OKXCONNECTOR_WS_URL_3 = exports.OKXCONNECTOR_WS_URL_2 = exports.OKXCONNECTOR_WS_URL_1 = exports.EVENT_EMITTER_MAX_LISTENERS = void 0;\nexports.EVENT_EMITTER_MAX_LISTENERS = 10;\nexports.OKXCONNECTOR_WS_URL_1 = \"wss://wsdexpri.okx.com/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_2 = \"wss://wsdexpri.okx.ac/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_3 = \"wss://wsdexpri.coinall.ltd/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_IDX_KEY = \"wuik\";\nexports.OKXCONNECTOR_WS_URL_LIST = [\n    exports.OKXCONNECTOR_WS_URL_1,\n    exports.OKXCONNECTOR_WS_URL_2,\n    exports.OKXCONNECTOR_WS_URL_3,\n];\nexports.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE = {\n    TIME_OUT: 3990,\n    CANCELED: 3991,\n    FINISHED: 3992,\n};\nexports.OKXCONNECTOR_MESSAGE_TTL = 300000;\n// --------------- JSON RPC ---------------\nexports.CONNECT_JSONRPC_VER = \"2.0\";\nexports.ConnectorState = {\n    InitState: 0,\n    Connecting: 1,\n    Connected: 2,\n    Disconnected: 3,\n    OnError: 4,\n};\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Engine = void 0;\nconst protocol_1 = require(\"../protocol\");\nconst utils_1 = require(\"../utils\");\nconst iconnector_1 = require(\"../connector/iconnector\");\nconst ws_connector_1 = require(\"../connector/ws-connector\");\nconst connectionManager_1 = require(\"./connectionManager\");\nconst sessionUtils_1 = require(\"./sessionUtils\");\nconst connector_1 = require(\"../connector\");\nconst wallet_info_1 = require(\"../protocol/connect/wallet-info\");\nclass Engine {\n    constructor(appName) {\n        this.connectors = [];\n        this.useConnector = undefined;\n        this.connectionManager = new connectionManager_1.ConnectionManager(appName);\n        this.addConnectionListener();\n    }\n    isInject() {\n        return this.getConnector() instanceof connector_1.InjectConnector;\n    }\n    getConnector() {\n        if (this.useConnector) {\n            return this.useConnector;\n        }\n    }\n    registerConnector(connectors) {\n        this.connectors = connectors;\n        for (const connector of connectors) {\n            if (connector instanceof ws_connector_1.WsConnector) {\n                connector.setConnectionManager(this.connectionManager);\n            }\n        }\n    }\n    hasWsConnector() {\n        for (const connector of this.connectors) {\n            if (connector instanceof ws_connector_1.WsConnector) {\n                return true;\n            }\n        }\n        return false;\n    }\n    universalConnect(request, sessionConfig, connectInfoAndUrl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.addConnectionListener();\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b, _c, _d;\n                try {\n                    (0, utils_1.logDebug)(\"engine universalConnect request :\", JSON.stringify(request));\n                    (0, utils_1.logDebug)(\"engine universalConnect sessionConfig :\", JSON.stringify(sessionConfig));\n                    let universalRequest = [];\n                    request.forEach((item) => {\n                        let name = item.name;\n                        if (name.startsWith(\"requestAccounts\") || name.startsWith(\"ton\")) {\n                            universalRequest.push(item);\n                        }\n                    });\n                    (0, utils_1.logDebug)(\"engine universalConnect universalRequest :\", JSON.stringify(universalRequest));\n                    const connectInfo = this.connectionManager.getConnectInfo();\n                    const requestId = Date.now().toString();\n                    let openUniversalLink = (_a = sessionConfig.openUniversalUrl) !== null && _a !== void 0 ? _a : false;\n                    const universalConnectRequest = {\n                        protocolVer: Number(protocol_1.tonConnectSdkVersion),\n                        topic: connectInfo.channelId,\n                        clientId: connectInfo.clientId,\n                        requestId: requestId,\n                        dAppInfo: sessionConfig.dappInfo,\n                        requests: universalRequest,\n                        redirect: (_b = sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect) !== null && _b !== void 0 ? _b : \"none\"\n                    };\n                    const base64Encoded = (0, utils_1.encodeConnectParams)(universalConnectRequest);\n                    universalConnectRequest.redirect = (_c = sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect) !== null && _c !== void 0 ? _c : \"none\";\n                    (0, utils_1.logDebug)('engine universalConnect ==>>universalConnectRequest:', JSON.stringify(universalConnectRequest));\n                    var openOKXLink = \"\";\n                    // open app wallet\n                    if (openUniversalLink) {\n                        openOKXLink = (0, utils_1.getOKXLink)(universalConnectRequest, sessionConfig.useMini, sessionConfig.tmaReturnUrl);\n                        (0, utils_1.logDebug)('engine universalConnect ==>>openOKXLink:', openOKXLink);\n                    }\n                    const openMethod = () => {\n                        if (this.connectors.length == 1 && this.connectors[0] instanceof connector_1.OkxwalletInjectConnector) {\n                            return this.connectors[0].openWallet({\n                                connectRequest: universalConnectRequest\n                            });\n                        }\n                        else {\n                            if (sessionConfig.useMini) {\n                                return (0, utils_1.openOKXTMAWalletlinkWithFallback)(openOKXLink);\n                            }\n                            if ((0, utils_1.useShortLink)()) {\n                                return (0, utils_1.openOKXUniversalLink)(openOKXLink);\n                            }\n                            return (0, utils_1.openOKXDeeplinkWithFallback)(openOKXLink);\n                        }\n                    };\n                    (0, utils_1.logDebug)('engine universalConnect ==>>openOKXLink:', openOKXLink);\n                    const isIOS = (0, utils_1.isIos)();\n                    if (isIOS && openUniversalLink) {\n                        (0, utils_1.logDebug)(`engine universalConnect ==>>isIOS: ${isIOS}   openUniversalLink: ${openUniversalLink}`);\n                        openMethod();\n                    }\n                    this.addOnConnectResultListener((response) => {\n                        var _a, _b, _c, _d;\n                        try {\n                            this.addOnConnectResultListener(undefined);\n                            let connectResponse = response;\n                            if (connectResponse.method == \"connect\") {\n                                (0, utils_1.logDebug)(\"engin  universalConnect success connectResponse:>>>\", JSON.stringify(connectResponse));\n                                let namespaces = (0, sessionUtils_1.buildNameSpacesByConnectResponse)(connectResponse);\n                                if (namespaces) {\n                                    let walletName = undefined;\n                                    if (((_b = (_a = connectResponse.payload) === null || _a === void 0 ? void 0 : _a.responses) === null || _b === void 0 ? void 0 : _b[0]) && \"walletName\" in connectResponse.payload.responses[0]) {\n                                        walletName = connectResponse.payload.responses[0]['walletName'];\n                                    }\n                                    let appName = (_c = connectResponse.payload) === null || _c === void 0 ? void 0 : _c.wallet.appName;\n                                    var tag;\n                                    switch (appName) {\n                                        case wallet_info_1.OKXWalletName:\n                                            tag = iconnector_1.OKX_APP_WALLET;\n                                            break;\n                                        case wallet_info_1.OKXMiniWalletName:\n                                            tag = iconnector_1.OKX_TG_WALLET;\n                                            break;\n                                        case wallet_info_1.OKXInjectWalletName:\n                                            tag = iconnector_1.OKX_INJECT_WALLET;\n                                            break;\n                                    }\n                                    var connector = this.connectors.find((connector) => connector.getTag() === tag);\n                                    if (!connector) {\n                                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n                                    }\n                                    let session = Object.assign({ topic: connectInfo.channelId, sessionConfig: sessionConfig, namespaces: namespaces }, (connectResponse.payload && {\n                                        wallet: Object.assign(Object.assign({}, connectResponse.payload.wallet), { walletName: walletName })\n                                    }));\n                                    let methodsResponse = connectResponse.payload.responses.find(item => item.name === 'requestAccounts');\n                                    if (methodsResponse && methodsResponse.connectRequestMethods) {\n                                        session.signResponse = methodsResponse.connectRequestMethods;\n                                    }\n                                    (0, utils_1.logDebug)(\"engin  universalConnect success session:>>>\", JSON.stringify(session));\n                                    resolve(session);\n                                    this.setUseConnector(connector);\n                                }\n                                else {\n                                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n                                }\n                            }\n                            else if (connectResponse.method == \"connect_error\" && ((_d = connectResponse.payload) === null || _d === void 0 ? void 0 : _d.code) != undefined) {\n                                throw new protocol_1.OKXConnectError(connectResponse.payload.code);\n                            }\n                        }\n                        catch (e) {\n                            reject(e);\n                        }\n                    });\n                    if (this.hasWsConnector()) {\n                        yield ((_d = this.connectionManager) === null || _d === void 0 ? void 0 : _d.disconnect(false));\n                        try {\n                            yield this.connectionManager.connect();\n                        }\n                        catch (e) {\n                            (0, utils_1.logDebug)('Engine universalConnect error', e);\n                            throw e;\n                        }\n                        (0, utils_1.logDebug)('engin  universalConnect ==>> connectInfoAndUrl:', connectInfoAndUrl);\n                        this.sendSession(base64Encoded);\n                    }\n                    if (!isIOS && openUniversalLink) {\n                        openMethod();\n                    }\n                    (0, utils_1.logDebug)('engin  universalConnect ==>> connectInfoAndUrl:', connectInfoAndUrl);\n                    if (connectInfoAndUrl) {\n                        const info = {\n                            connectRequest: universalConnectRequest,\n                            redirect: sessionConfig.redirect,\n                            tmaReturnUrl: sessionConfig.tmaReturnUrl,\n                        };\n                        (0, utils_1.logDebug)(\"universalConnect connectInfoAndUrl info :\", JSON.stringify(info));\n                        connectInfoAndUrl(info);\n                    }\n                }\n                catch (error) {\n                    (0, utils_1.logDebug)(\"Engine universalConnect catch error\", error);\n                    reject(error);\n                }\n            }));\n        });\n    }\n    addOnConnectResultListener(connectResultListener) {\n        for (const connector of this.connectors) {\n            if (connector instanceof connector_1.InjectConnector) {\n                connector.setOnConnectResultListener(connectResultListener);\n            }\n        }\n        this.connectResultListener = connectResultListener;\n    }\n    openWallet(engineConnectInfo, connector) {\n        var _a;\n        if (connector) {\n            connector.openWallet(engineConnectInfo);\n        }\n        else {\n            (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.openWallet(engineConnectInfo);\n        }\n    }\n    send(request, requestAnswer, ttl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            return (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.send(request, requestAnswer, ttl);\n        });\n    }\n    clearData() {\n        var _a;\n        (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.clearData();\n    }\n    addDisconnectListener(disconnecter) {\n        var _a;\n        (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.addDisconnectListener(disconnecter);\n    }\n    saveSessionContent(key, data) {\n        this.connectionManager.saveSessionContent(key, data);\n    }\n    getSessionContent(key) {\n        var _a;\n        var session = this.connectionManager.getSessionContent(key);\n        if (session) {\n            var tag = \"\";\n            if (typeof session === \"object\") {\n                tag = this.getTagByappName((_a = session.wallet) === null || _a === void 0 ? void 0 : _a.appName);\n            }\n            if (this.connectors.find((connector) => {\n                return connector.getTag() === tag;\n            })) {\n                return session;\n            }\n        }\n        return undefined;\n    }\n    getTagByappName(appName) {\n        var tag = '';\n        if (appName) {\n            switch (appName) {\n                case wallet_info_1.OKXWalletName:\n                    tag = iconnector_1.OKX_APP_WALLET;\n                    break;\n                case wallet_info_1.OKXMiniWalletName:\n                    tag = iconnector_1.OKX_TG_WALLET;\n                    break;\n                case wallet_info_1.OKXInjectWalletName:\n                    tag = iconnector_1.OKX_INJECT_WALLET;\n            }\n        }\n        return tag;\n    }\n    setConnectConnector(wallet) {\n        var tag = this.getTagByappName(wallet === null || wallet === void 0 ? void 0 : wallet.appName);\n        if (!tag)\n            return;\n        this.setUseConnector(this.connectors.find((connector) => {\n            return connector.getTag() === tag;\n        }));\n    }\n    setUseConnector(connector) {\n        this.useConnector = connector;\n        if (connector instanceof ws_connector_1.WsConnector) {\n            connector.addConnectionListener();\n        }\n    }\n    // for es connect\n    setSessionConnectingListener(sessionConnectingListener) {\n        this.sessionConnectingListener = sessionConnectingListener;\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.restoreconnect(sessionInfo, onConnectResult));\n        });\n    }\n    restoreconnectFromTopic(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.getConnector() instanceof ws_connector_1.WsConnector) {\n                yield this.getConnector().restoreconnectFromTopic(topic);\n            }\n        });\n    }\n    getCurrentConnectionReady(namespaceKeys) {\n        var _a;\n        return !!((_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.getCurrentConnectionReady(namespaceKeys));\n    }\n    connectManagerDisconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            var _a;\n            yield ((_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.connectManagerDisconnect(fromRestore));\n        });\n    }\n    sendSession(sessionInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, utils_1.logDebug)('[Connect] sendSession called:', sessionInfo);\n            const requestId = Date.now().toString();\n            let request = {\n                method: 'session_info',\n                params: { sessionInfo: sessionInfo }\n            };\n            yield this.connectionManager.sendRaw(JSON.stringify(Object.assign(Object.assign({}, request), { requestId: requestId })));\n        });\n    }\n    addConnectionListener() {\n        var _a;\n        (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.addListener(\"sdk_response\", (event, msg) => {\n            var jsonResponse = (0, utils_1.safeJsonParse)(msg);\n            (0, utils_1.logDebug)(`Engine ==>> addListener ==> success ==> ${jsonResponse}`);\n            if (jsonResponse.method === 'connect' || jsonResponse.method === 'connect_error') {\n                if (this.connectResultListener) {\n                    this.connectResultListener(jsonResponse);\n                }\n            }\n            else if (jsonResponse.method === \"session_connecting\") {\n                (0, utils_1.logDebug)(\"Engine ==>> handleResponse_4  ===> sessionConnectingListener\");\n                if (this.sessionConnectingListener) {\n                    (0, utils_1.logDebug)(\"Engine ==>> handleResponse_4  ===> sessionConnectingListener not null\");\n                    this.sessionConnectingListener();\n                    this.sessionConnectingListener = undefined;\n                }\n            }\n        }, function () {\n        });\n    }\n}\nexports.Engine = Engine;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Storage = exports.Engine = exports.WalletConnectionManager = exports.ConnectionManager = exports.OKXWalletConnector = void 0;\nvar connect_1 = require(\"./connect\");\nObject.defineProperty(exports, \"OKXWalletConnector\", { enumerable: true, get: function () { return connect_1.OKXWalletConnector; } });\nvar connectionManager_1 = require(\"./connectionManager\");\nObject.defineProperty(exports, \"ConnectionManager\", { enumerable: true, get: function () { return connectionManager_1.ConnectionManager; } });\nvar walletConnectionManager_1 = require(\"./walletConnectionManager\");\nObject.defineProperty(exports, \"WalletConnectionManager\", { enumerable: true, get: function () { return walletConnectionManager_1.WalletConnectionManager; } });\nvar engine_1 = require(\"./engine\");\nObject.defineProperty(exports, \"Engine\", { enumerable: true, get: function () { return engine_1.Engine; } });\nvar storage_1 = require(\"./storage\");\nObject.defineProperty(exports, \"Storage\", { enumerable: true, get: function () { return storage_1.Storage; } });\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MULTICODEC_ED25519_LENGTH = exports.MULTICODEC_ED25519_HEADER = exports.MULTICODEC_ED25519_BASE = exports.MULTICODEC_ED25519_ENCODING = exports.DID_METHOD = exports.DID_PREFIX = exports.DID_DELIMITER = exports.KEY_PAIR_SEED_LENGTH = exports.DATA_ENCODING = exports.JSON_ENCODING = exports.JWT_ENCODING = exports.JWT_DELIMITER = exports.JWT_IRIDIUM_TYP = exports.JWT_IRIDIUM_ALG = exports.JWTHeaderType = void 0;\nexports.generateKeyPair = generateKeyPair;\nexports.decodeJSON = decodeJSON;\nexports.encodeJSON = encodeJSON;\nexports.encodeIss = encodeIss;\nexports.decodeIss = decodeIss;\nexports.encodeSig = encodeSig;\nexports.decodeSig = decodeSig;\nexports.encodeData = encodeData;\nexports.decodeData = decodeData;\nexports.encodeJWT = encodeJWT;\nexports.decodeJWT = decodeJWT;\nexports.signJWT = signJWT;\nexports.verifyJWT = verifyJWT;\nconst ed25519 = __importStar(require(\"@stablelib/ed25519\"));\nconst safejson_1 = require(\"../utils/safejson\");\nconst utils_1 = require(\"../utils/utils\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst log = __importStar(require(\"../utils/log\"));\nconst stringUtils_1 = require(\"../utils/stringUtils\");\nexports.JWTHeaderType = \"dapp\";\nexports.JWT_IRIDIUM_ALG = \"EdDSA\";\nexports.JWT_IRIDIUM_TYP = \"JWT\";\nexports.JWT_DELIMITER = \".\";\nexports.JWT_ENCODING = \"base64url\";\nexports.JSON_ENCODING = \"utf8\";\nexports.DATA_ENCODING = \"utf8\";\nexports.KEY_PAIR_SEED_LENGTH = 32;\nexports.DID_DELIMITER = \":\";\nexports.DID_PREFIX = \"did\";\nexports.DID_METHOD = \"key\";\nexports.MULTICODEC_ED25519_ENCODING = \"base58btc\";\nexports.MULTICODEC_ED25519_BASE = \"z\";\nexports.MULTICODEC_ED25519_HEADER = \"K36\";\nexports.MULTICODEC_ED25519_LENGTH = 32;\nfunction generateKeyPair() {\n    // let local_seed = randomBytes(KEY_PAIR_SEED_LENGTH)\n    // return ed25519.generateKeyPairFromSeed(local_seed);\n    return tweetnacl_1.default.sign.keyPair();\n}\nfunction decodeJSON(str) {\n    return (0, safejson_1.safeJsonParse)((0, stringUtils_1.okxtoString)((0, stringUtils_1.okxfromString)(str, exports.JWT_ENCODING), exports.JSON_ENCODING));\n}\nfunction encodeJSON(val) {\n    return (0, stringUtils_1.okxtoString)((0, stringUtils_1.okxfromString)((0, safejson_1.safeJsonStringify)(val), exports.JSON_ENCODING), exports.JWT_ENCODING);\n}\nfunction encodeIss(publicKey) {\n    log.logDebug(`publicKey: ${(0, utils_1.toHexString)(publicKey)}`);\n    var publicKeyStr = (0, stringUtils_1.okxtoString)(publicKey, exports.MULTICODEC_ED25519_ENCODING);\n    return [exports.DID_PREFIX, exports.DID_METHOD, publicKeyStr].join(exports.DID_DELIMITER);\n}\nfunction decodeIss(issuer) {\n    const [prefix, method, multicodec] = issuer.split(exports.DID_DELIMITER);\n    if (prefix !== exports.DID_PREFIX || method !== exports.DID_METHOD) {\n        throw new Error(`Issuer must be a DID with method \"key\"`);\n    }\n    if (multicodec === undefined) {\n        throw new Error('multicodec is undefined');\n    }\n    const publicKey = (0, stringUtils_1.okxfromString)(multicodec, exports.MULTICODEC_ED25519_ENCODING);\n    if (publicKey === undefined || publicKey.length !== exports.MULTICODEC_ED25519_LENGTH) {\n        throw new Error(`Issuer must be a public key with length 32 bytes`);\n    }\n    return publicKey;\n}\n// ---------- Signature ----------------------------------------------- //\nfunction encodeSig(bytes) {\n    return (0, stringUtils_1.okxtoString)(bytes, exports.JWT_ENCODING);\n}\nfunction decodeSig(encoded) {\n    return (0, stringUtils_1.okxfromString)(encoded, exports.JWT_ENCODING);\n}\n// ---------- Data ----------------------------------------------- //\nfunction encodeData(params) {\n    return (0, stringUtils_1.okxfromString)([encodeJSON(params.header), encodeJSON(params.payload)].join(exports.JWT_DELIMITER), exports.DATA_ENCODING);\n}\nfunction decodeData(data) {\n    var _a, _b;\n    const params = (0, stringUtils_1.okxtoString)(data, exports.DATA_ENCODING).split(exports.JWT_DELIMITER);\n    const header = decodeJSON((_a = params[0]) !== null && _a !== void 0 ? _a : '{}');\n    const payload = decodeJSON((_b = params[1]) !== null && _b !== void 0 ? _b : '{}');\n    return { header, payload };\n}\n// ---------- JWT ----------------------------------------------- //\nfunction encodeJWT(params) {\n    return [encodeJSON(params.header), encodeJSON(params.payload), encodeSig(params.signature)].join(exports.JWT_DELIMITER);\n}\nfunction decodeJWT(jwt) {\n    var _a, _b, _c;\n    const params = jwt.split(exports.JWT_DELIMITER);\n    const header = decodeJSON((_a = params[0]) !== null && _a !== void 0 ? _a : '{}');\n    const payload = decodeJSON((_b = params[1]) !== null && _b !== void 0 ? _b : '{}');\n    const signature = decodeSig((_c = params[2]) !== null && _c !== void 0 ? _c : '{}');\n    const data = (0, stringUtils_1.okxfromString)(params.slice(0, 2).join(exports.JWT_DELIMITER), exports.DATA_ENCODING);\n    return { header, payload, signature, data };\n}\nfunction signJWT(sub_1, aud_1, ttl_1, keyPair_1) {\n    return __awaiter(this, arguments, void 0, function* (sub, aud, ttl, keyPair, iat = Math.floor(Date.now())) {\n        const header = { alg: exports.JWT_IRIDIUM_ALG, typ: exports.JWT_IRIDIUM_TYP };\n        const iss = encodeIss(keyPair.publicKey);\n        const exp = iat + ttl;\n        const act = \"authenticate user\";\n        const payload = { iss, sub, aud, act, iat, exp };\n        const data = encodeData({ header, payload });\n        // const signature = ed25519.sign(keyPair.secretKey, data);\n        log.logDebug(`get sec kp: ${keyPair.secretKey} {${keyPair.secretKey.length}}`);\n        const signature = tweetnacl_1.default.sign.detached(data, keyPair.secretKey);\n        return encodeJWT({ header, payload, signature });\n    });\n}\nfunction verifyJWT(jwt) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { header, payload, data, signature } = decodeJWT(jwt);\n        if (header.alg !== exports.JWT_IRIDIUM_ALG || header.typ !== exports.JWT_IRIDIUM_TYP) {\n            throw new Error(\"JWT must use EdDSA algorithm\");\n        }\n        const publicKey = decodeIss(payload.iss);\n        return ed25519.verify(publicKey, data, signature);\n    });\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCONNECTOR_JWT_TTL = exports.OKXCONNECTOR_JWT_WALLET_SIDE = exports.OKXCONNECTOR_JWT_SIDE = void 0;\nexports.OKXCONNECTOR_JWT_SIDE = \"wallet\";\nexports.OKXCONNECTOR_JWT_WALLET_SIDE = \"dapp\";\nexports.OKXCONNECTOR_JWT_TTL = 86400000;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.buildNameSpacesByConnectResponse = buildNameSpacesByConnectResponse;\nexports.buildRequestAccountNameSpacesByConnectResponse = buildRequestAccountNameSpacesByConnectResponse;\nconst log_1 = require(\"../utils/log\");\nfunction buildNameSpacesByConnectResponse(connectResponse) {\n    let requestAccountNameSpaces = buildRequestAccountNameSpacesByConnectResponse(connectResponse);\n    return requestAccountNameSpaces;\n}\nfunction buildRequestAccountNameSpacesByConnectResponse(connectResponse) {\n    let result = {};\n    (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start connectResponse111>>', JSON.stringify(connectResponse));\n    let universalResponse = connectResponse.payload.responses.find(item => item.name === 'requestAccounts');\n    if (universalResponse && universalResponse.accounts) {\n        let filterAccount = [];\n        for (const item of universalResponse.accounts) {\n            if (item.namespace === \"ton\") {\n                if (item.data && item.data.ton_addr) {\n                    if (item.data.ton_addr.address && item.data.ton_addr.address.length > 0) {\n                        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start TON>>', JSON.stringify(item));\n                        filterAccount.push(item);\n                    }\n                }\n            }\n            else {\n                (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start other>>', JSON.stringify(item));\n                filterAccount.push(item);\n            }\n        }\n        universalResponse.accounts = filterAccount;\n    }\n    const tonAddress = connectResponse.payload.responses.find(item => item.name === 'ton_addr');\n    const tonProof = connectResponse.payload.responses.find(item => item.name === 'ton_proof');\n    if (tonAddress && !universalResponse) { //adapt tonsdk\n        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse adapt ton data >>');\n        let address = tonAddress.address;\n        address = 'ton:' + tonAddress.network + \":\" + address;\n        let data = {\n            ton_addr: tonAddress\n        };\n        if (tonProof) {\n            data.ton_proof = tonProof;\n        }\n        universalResponse = {\n            name: \"requestAccounts\",\n            accounts: [{\n                    namespace: 'ton',\n                    addresses: [address],\n                    methods: ['ton_sendTransaction'],\n                    extra: {},\n                    data: data,\n                }]\n        };\n    }\n    (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse end universalResponse>>>', JSON.stringify(universalResponse));\n    universalResponse.accounts.forEach(item => {\n        var chains = [];\n        var accounts = [];\n        item.addresses.forEach(addressItem => {\n            var addressArr = addressItem.split(\":\");\n            (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse addressArr>>', addressArr.length);\n            if (addressArr.length >= 3) {\n                let chain = addressArr.slice(0, 2).join(\":\");\n                chains.push(chain);\n                accounts.push(addressItem);\n                (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse chain:>>', chain, \"addressItem:\", addressItem);\n            }\n        });\n        if (item.data && item.data.ton_addr) {\n            item.data.ton_addr.name = 'ton_addr';\n        }\n        if (item.data && item.data.ton_proof) {\n            item.data.ton_proof.name = 'ton_proof';\n        }\n        result[item.namespace] = {\n            chains: chains,\n            accounts: accounts,\n            methods: item.methods,\n            extra: item.extra,\n            payload: item.data\n        };\n        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse result>>', JSON.stringify(result));\n    });\n    return result;\n}\n/*export function buildTonNameSpaceByConnectResponse(connectResponse: ConnectResponseSuccess): Namespaces | undefined {\n    const tonAddrItem: TonAddressItemReply = connectResponse.payload.responses.find(\n        item => item.name === 'ton_addr'\n    ) as TonAddressItemReply;\n\n    const tonProfItem: TonProofItemReply = connectResponse.payload.responses.find(\n        item => item.name === 'ton_proof'\n    ) as TonProofItemReply;\n\n    if (!tonAddrItem) {\n        return undefined\n    }\n\n    return {\n        NameSpaceKeyTON: {\n            chains: [tonAddrItem.network],\n            accounts: [],\n            methods: connectResponse.payload.wallet.features?.ton,\n            payload: {\n                tonAccount: {\n                    address: tonAddrItem.address,\n                    chain: tonAddrItem.network,\n                    walletStateInit: tonAddrItem.walletStateInit,\n                    publicKey: tonAddrItem.publicKey\n                },\n                tonProof: tonProfItem\n            }\n        }\n    }\n}*/\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Storage = void 0;\nconst storageconstants_1 = require(\"./storageconstants\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst utils_1 = require(\"../utils/utils\");\nconst utils_2 = require(\"../utils\");\nconst log = __importStar(require(\"../utils/log\"));\nconst utils_3 = require(\"../utils\");\nconst crypto_js_1 = require(\"crypto-js\");\nclass Storage {\n    constructor(subKey, beforeKey = undefined) {\n        const localStorage = (0, utils_1.resolveLocalStorage)();\n        // 0. check and upgrade beforeKey\n        log.logDebug('------ update before cache ------');\n        if (beforeKey) {\n            this.checkAndUpgradeCache(beforeKey, subKey);\n        }\n        // 1. load data from local storage\n        this.storeKey = '';\n        this.cipherIV = '';\n        this.subKey = subKey;\n        log.logDebug('--------get current local storage --------');\n        log.logDebug(localStorage);\n        const cacheStr = localStorage.getItem(Storage.cacheKey + subKey);\n        if (typeof cacheStr === \"undefined\" || cacheStr === null) {\n            log.logDebug(\"with no cache\");\n            this.cache = {};\n            return;\n        }\n        log.logDebug(cacheStr);\n        if ((cacheStr === null || cacheStr === void 0 ? void 0 : cacheStr.length) > 0) {\n            var cacheObj = (0, utils_2.safeJsonParse)(cacheStr);\n            this.cache = cacheObj;\n        }\n        log.logDebug(`get cache obj: ${this.cache}`);\n        if (typeof this.cache === 'undefined' || this.cache == null) {\n            this.cache = {};\n        }\n    }\n    checkAndUpgradeCache(fromCacheKey, toCacheKey) {\n        if (fromCacheKey && fromCacheKey.length > 0 && toCacheKey && toCacheKey.length > 0) {\n            // 1. get all infos from from-cache-key\n            log.logDebug('--------get current local storage --------');\n            log.logDebug(localStorage);\n            const cacheStr = localStorage.getItem(Storage.cacheKey + fromCacheKey);\n            if (typeof cacheStr === \"undefined\" || cacheStr === null) {\n                log.logDebug(\"no pre cache content\");\n                return;\n            }\n            log.logDebug(cacheStr);\n            if ((cacheStr === null || cacheStr === void 0 ? void 0 : cacheStr.length) > 0) {\n                // 2. save to to-cache-key\n                log.logDebug(\"write in cache content: \", fromCacheKey, '->', toCacheKey);\n                localStorage.setItem(Storage.cacheKey + toCacheKey, cacheStr);\n                // 3. clean from item\n                log.logDebug(\"clean in cache content: \", fromCacheKey);\n                localStorage.removeItem(Storage.cacheKey + fromCacheKey);\n            }\n        }\n        else {\n            log.logDebug('no pre cache key:', fromCacheKey);\n        }\n    }\n    saveContent(content, key, id = '-') {\n        let item = {\n            id: id,\n            timestamp: Date.now().toString(),\n            content: content\n        };\n        this.saveItem(item, key);\n    }\n    saveItem(item, key) {\n        let localKey = Storage.cacheKey + this.subKey;\n        const localStorage = (0, utils_1.resolveLocalStorage)();\n        log.logDebug(this.cache);\n        log.logDebug(`get cache obj: ${this.cache}, ${key}, ${item}`);\n        this.cache[key] = item;\n        let totalCacheStr = (0, utils_2.safeJsonStringify)(this.cache);\n        log.logDebug(`STORAGE: ${key} @ ${this.cache}`);\n        localStorage.setItem(localKey, totalCacheStr);\n    }\n    getItem(key) {\n        log.logDebug(`STORAGE >> getItem: ${key} @ ${this.cache}`);\n        return this.cache[key];\n    }\n    getCachedPBKDF2InfoKey() {\n        var _a, _b, _c, _d;\n        const pwLen = 32;\n        const saltLen = 24;\n        if (this.storeKey.length > 0 && ((_a = this.cipherIV) === null || _a === void 0 ? void 0 : _a.length) > 0) {\n            return {\n                pw: this.storeKey,\n                iv: this.cipherIV\n            };\n        }\n        let salt = (_b = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGER_CRYPTO_SALT)) === null || _b === void 0 ? void 0 : _b.content;\n        if (!salt) {\n            salt = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(saltLen));\n            this.saveContent(salt, storageconstants_1.OKXCONNECTOR_STORAGER_CRYPTO_SALT);\n        }\n        let pw = (_c = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD)) === null || _c === void 0 ? void 0 : _c.content;\n        if (!pw) {\n            pw = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(pwLen));\n            this.saveContent(pw, storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD);\n        }\n        let cipherIV = (_d = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV)) === null || _d === void 0 ? void 0 : _d.content;\n        if (!cipherIV) {\n            // let ivBuffer = Buffer.from(nacl.randomBytes(16))\n            let ivBuffer = tweetnacl_1.default.randomBytes(16);\n            cipherIV = (0, utils_1.toHexString)(ivBuffer);\n            this.saveContent(cipherIV, storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV);\n        }\n        this.cipherIV = cipherIV;\n        this.storeKey = (0, crypto_js_1.PBKDF2)(pw, salt, { iterations: 10 }).toString();\n        return {\n            pw: this.storeKey,\n            iv: this.cipherIV\n        };\n    }\n    encryptStoreMsg(msg, key) {\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg start ${Date.now()}`);\n        let storeInfo = this.getCachedPBKDF2InfoKey();\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg mid ${Date.now()}`);\n        var result = crypto_js_1.AES.encrypt(msg, storeInfo.pw).toString();\n        this.saveContent(result, key);\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg end ${Date.now()}`);\n    }\n    getAndDecrypt(key) {\n        (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt start ${Date.now()}`);\n        let item = this.getItem(key);\n        if (item && item.content) {\n            let storeInfo = this.getCachedPBKDF2InfoKey();\n            (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt mid ${Date.now()}`);\n            let result = crypto_js_1.AES.decrypt(item.content, storeInfo.pw).toString(crypto_js_1.enc.Utf8);\n            (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt end ${Date.now()}`);\n            return result;\n        }\n        return null;\n    }\n    clearCache(key = undefined) {\n        if (key === undefined) {\n            // clean all\n            this.cache = {};\n            let localKey = Storage.cacheKey + this.subKey;\n            localStorage.setItem(localKey, '');\n        }\n        else {\n            let localKey = Storage.cacheKey + this.subKey;\n            const localStorage = (0, utils_1.resolveLocalStorage)();\n            log.logDebug(this.cache);\n            this.cache[key] = null;\n            let totalCacheStr = (0, utils_2.safeJsonStringify)(this.cache);\n            log.logDebug(`STORAGE: clean key ${key} @ ${this.cache}`);\n            localStorage.setItem(localKey, totalCacheStr);\n        }\n    }\n}\nexports.Storage = Storage;\nStorage.cacheKey = 'OKXStorageKey';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCONNECTOR_STORAGE_CIPHER_METHOD = exports.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV = exports.OKXCONNECTOR_STORAGER_CRYPTO_SALT = exports.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD = exports.OKXCONNECTOR_TON_KEY = exports.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE = exports.OKXCONNECTOR_TOKEN_CACHE = exports.OKXCONNECTOR_JWT_KEY = exports.OKXCONNECTOR_SESSION_PREFIX_KEY = exports.OKXCONNECTOR_CRYPTO_KEY = exports.OKXCONNECTOR_CACHE_KEY_DAPP = exports.OKXCONNECTOR_CACHE_KEY = void 0;\nexports.OKXCONNECTOR_CACHE_KEY = \"ck\";\nexports.OKXCONNECTOR_CACHE_KEY_DAPP = \"ck_dapp\";\nexports.OKXCONNECTOR_CRYPTO_KEY = \"cck_k\";\nexports.OKXCONNECTOR_SESSION_PREFIX_KEY = \"cspk_\";\nexports.OKXCONNECTOR_JWT_KEY = \"cjk_k\";\nexports.OKXCONNECTOR_TOKEN_CACHE = \"ct\";\nexports.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE = \"csp\";\nexports.OKXCONNECTOR_TON_KEY = \"OKXStorage_ctc\";\nexports.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD = \"scp\";\nexports.OKXCONNECTOR_STORAGER_CRYPTO_SALT = \"scs\";\nexports.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV = \"scpc\";\nexports.OKXCONNECTOR_STORAGE_CIPHER_METHOD = \"aes-256-cbc\";\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletConnectionManagerEvent = exports.WalletConnectionManagerTopicInfoCacheKey = void 0;\nexports.WalletConnectionManagerTopicInfoCacheKey = \"wcmtic\";\nexports.WalletConnectionManagerEvent = {\n    RECEIVE_REQUEST: \"payload\"\n};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletConnectionManager = void 0;\nconst connect_1 = require(\"./connect\");\nconst commands_1 = require(\"./commands\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst jwtconstants_1 = require(\"./jwtconstants\");\nconst constants_1 = require(\"./constants\");\nconst walletConnectionConstants_1 = require(\"./walletConnectionConstants\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils/utils\");\nconst crypto_1 = require(\"../crypto/crypto\");\nconst jwt_1 = require(\"./jwt\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst utils_2 = require(\"../utils\");\nclass WalletConnectionManager {\n    constructor() {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.communicateEvents = new eventemitter3_1.EventEmitter();\n        log.logDebug('connect manager construct');\n        // local storage\n        this.connectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n        // this.crypto = new SessionCrypto()\n        this.jwtKeyPair = this.getCachedJWTKeyPair();\n        this.saveJWTKeyPair(this.jwtKeyPair);\n        // wss connection\n        this.connector = new connect_1.OKXWalletConnector(constants_1.OKXCONNECTOR_WS_URL_1);\n        this.packageId = Date.now();\n        // connection state\n        this.sessionCryptoInfoMap = new Map();\n        // log.logDebug(`this.connectedWalletPK  constructor   ${this.connectedWalletPK}`)\n        this.inLogin = false;\n        this.isLogined = false;\n    }\n    refreshPackageId(offset = 0) {\n        this.packageId = Date.now() + offset;\n    }\n    saveCryptoKeyPair(topicId, keyPair) {\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(keyPair);\n        // encrypt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_CRYPTO_KEY + topicId);\n    }\n    getCachedCryptoKeyPair(topicId) {\n        // decrypt kp\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_CRYPTO_KEY + topicId);\n        const content = kp;\n        if (typeof content == 'string') {\n            log.logDebug('get cached crypto key:');\n            log.logDebug(content);\n            let keyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            return keyPairInfo;\n        }\n        else {\n            this.connectStorage.clearCache();\n        }\n        return null;\n    }\n    saveJWTKeyPair(keyPair) {\n        var strkeyPair = {\n            publicKey: (0, utils_1.toHexString)(keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(keyPair.secretKey)\n        };\n        log.logDebug('save jwt kp');\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(strkeyPair);\n        log.logDebug(cacheInfo);\n        // encrypt jwt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        log.logDebug('after save jwt kp');\n    }\n    getCachedJWTKeyPair() {\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            // TODO: decrypt jwt kp\n            log.logDebug('get cached jwt kp:');\n            log.logDebug(content);\n            let strKeyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            log.logDebug('save jwt kp');\n            log.logDebug(strKeyPairInfo);\n            var keyPair = {\n                publicKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.publicKey),\n                secretKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.secretKey)\n            };\n            return keyPair;\n        }\n        else {\n            return (0, jwt_1.generateKeyPair)();\n        }\n    }\n    isTopicPublicKeyExist(topicId) {\n        log.logDebug(`isTopicPublicKeyExist  ===> ${topicId}`);\n        return this.sessionCryptoInfoMap.get(topicId);\n    }\n    makeJWT(timestampStr) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, jwt_1.signJWT)(timestampStr, jwtconstants_1.OKXCONNECTOR_JWT_WALLET_SIDE, jwtconstants_1.OKXCONNECTOR_JWT_TTL, // 24h\n            this.jwtKeyPair);\n        });\n    }\n    parseInternalMsg(internalMsg) {\n        try {\n            let internalObj = (0, safejson_1.safeJsonParse)(internalMsg);\n            let origin = internalObj['ivur-igbfft-ptjip'];\n            if (origin && origin.length > 0) {\n                let originContent = (0, utils_2.base64decode)(origin, true);\n                return originContent.toString();\n            }\n        }\n        catch (error) {\n            log.logError('parse internal msg', error);\n        }\n    }\n    updateClientId(topic, clientId) {\n        let sessionInfo = this.sessionCryptoInfoMap.get(topic);\n        (0, log_1.logDebug)('updateClientId', sessionInfo, topic, clientId);\n        if (sessionInfo && clientId && clientId.length > 0) {\n            if (sessionInfo.cid) {\n                // check\n                let lastCheck = (0, utils_1.getLastSixMd5Hash)(clientId);\n                if (sessionInfo.cid == lastCheck) {\n                    sessionInfo.dappPublicKey = clientId;\n                }\n                else {\n                    log.logError('cid check failed', sessionInfo, topic, clientId);\n                }\n            }\n            else {\n                sessionInfo.dappPublicKey = clientId;\n            }\n            // \n            this.syncCacheSessionInfo();\n        }\n        return false;\n    }\n    parsePackage(topic_1, input_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, input, ignoreACK = false) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;\n            this.events.emit(input.id, input);\n            // emit event\n            let sessionInfo = this.sessionCryptoInfoMap.get(topic);\n            log.logDebug('get sessionInfo for decrypt topic:', topic);\n            log.logDebug('get sessionInfo for decrypt:', input.id, topic, sessionInfo, this.sessionCryptoInfoMap);\n            if (sessionInfo && input.params.data) {\n                if ((_a = input.params.data) === null || _a === void 0 ? void 0 : _a.message) {\n                    // try parse internal message\n                    if ((_b = input.params.data) === null || _b === void 0 ? void 0 : _b.isInternalData) {\n                        let inner_message = (_c = input.params.data) === null || _c === void 0 ? void 0 : _c.message;\n                        let inner_topic = (_d = input.params.data) === null || _d === void 0 ? void 0 : _d.topic;\n                        let originContent = this.parseInternalMsg(inner_message);\n                        (0, log_1.logDebug)('parse internal origin: ', originContent);\n                        if (originContent && originContent.length > 0) {\n                            this.communicateEvents.emit(\"origin\", originContent, inner_topic);\n                        }\n                    }\n                    else {\n                        // try parse message base64\n                        try {\n                            let message = (_e = input.params.data) === null || _e === void 0 ? void 0 : _e.message;\n                            if (message.trimStart().startsWith('{')) {\n                                let messageObj = (0, safejson_1.safeJsonParse)(message);\n                                if (messageObj.method) {\n                                    if (messageObj.method == 'session_info') {\n                                        let sessionInfoString = messageObj.params.sessionInfo;\n                                        let base64Content = (0, utils_2.base64decode)(sessionInfoString, false);\n                                        (0, log_1.logDebug)(\"wallet connection manager requset base64Content:\", base64Content);\n                                        (0, log_1.logDebug)(\"base64Content:\" + base64Content);\n                                        let inner_connection = base64Content.toObject();\n                                        this.updateClientId(topic, inner_connection.clientId);\n                                    }\n                                    (0, log_1.logDebug)('<<< parse raw msg:', topic, messageObj);\n                                    this.communicateEvents.emit(topic, message);\n                                }\n                            }\n                            else {\n                                let message = sessionInfo.crypto.decryptWallet((_f = input.params.data) === null || _f === void 0 ? void 0 : _f.message, sessionInfo.dappPublicKey);\n                                (0, log_1.logDebug)('<<< receive msg:', topic, message);\n                                this.communicateEvents.emit(topic, message);\n                            }\n                        }\n                        catch (error) {\n                            let message = sessionInfo.crypto.decryptWallet((_g = input.params.data) === null || _g === void 0 ? void 0 : _g.message, sessionInfo.dappPublicKey);\n                            (0, log_1.logDebug)('<<< receive msg:', topic, message);\n                            this.communicateEvents.emit(topic, message);\n                        }\n                    }\n                }\n                else {\n                }\n            }\n            // send back ACK\n            if (!ignoreACK) {\n                yield this.sendACK(input.id, true);\n                if (topic) {\n                    let inputObj = input;\n                    if ((_j = (_h = inputObj.params) === null || _h === void 0 ? void 0 : _h.data) === null || _j === void 0 ? void 0 : _j.messageId) {\n                        this.refreshPackageId();\n                        yield this.sendReceive(this.packageId.toString(), (_l = (_k = inputObj.params) === null || _k === void 0 ? void 0 : _k.data) === null || _l === void 0 ? void 0 : _l.messageId, topic);\n                    }\n                }\n            }\n        });\n    }\n    recovrySessionInfoFromCache() {\n        // get topic ids and keys from session\n        // WalletConnectionCryptoCacheMap\n        // {[topicId]: {cryptoKeypair: {publicKey:string, secretKey:string}, dappPublicKey:clientId}}\n        let jsonStr = this.connectStorage.getAndDecrypt(walletConnectionConstants_1.WalletConnectionManagerTopicInfoCacheKey);\n        log.logDebug('get cached sessionInfos:', jsonStr);\n        if (jsonStr) {\n            let cacheMap = (0, safejson_1.safeJsonParse)(jsonStr);\n            for (let topicId in cacheMap) {\n                let topicItem = cacheMap[topicId];\n                log.logDebug('make topicItem:', topicItem);\n                let cryptoItem = {\n                    topic: topicId,\n                    crypto: new crypto_1.SessionCrypto({\n                        publicKey: topicItem.cryptoKeyPair.publicKey,\n                        secretKey: topicItem.cryptoKeyPair.secretKey\n                    }),\n                    dappPublicKey: topicItem.dappPublicKey,\n                    cid: topicItem.cid\n                };\n                this.sessionCryptoInfoMap.set(topicId, cryptoItem);\n            }\n        }\n        log.logDebug('get cached sessionInfos map:', this.sessionCryptoInfoMap);\n    }\n    syncCacheSessionInfo() {\n        let cacheMap = {};\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            log.logDebug('for each Keys', topicId);\n            if (cryptoItem) {\n                cacheMap[topicId] = {\n                    cryptoKeyPair: cryptoItem.crypto.stringifyKeypair(),\n                    dappPublicKey: cryptoItem.dappPublicKey,\n                    cid: cryptoItem.cid\n                };\n            }\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(cacheMap);\n        log.logDebug('sync cache sessionInfos:', jsonData);\n        this.connectStorage.encryptStoreMsg(jsonData, walletConnectionConstants_1.WalletConnectionManagerTopicInfoCacheKey);\n    }\n    cacheSessionInfo(topic, sessionInfo, sync = true) {\n        let dappPublicKey = sessionInfo.dappPublicKey;\n        // 1. search dapp public related topic ids\n        let duplicatedTopics = [];\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            log.logDebug('for each Keys', topicId);\n            if (cryptoItem.dappPublicKey == dappPublicKey) {\n                log.logDebug('duplicated dapp public key:', topicId, dappPublicKey);\n                duplicatedTopics.push(topicId);\n            }\n        }\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            if (duplicatedTopics.includes(topicId)) {\n                this.sessionCryptoInfoMap.delete(topicId);\n            }\n        }\n        // discard useless topics\n        log.logDebug('cleaned connect session cache:', this.sessionCryptoInfoMap);\n        // 2. remove previous connected topic ids\n        // 3. write in current topic\n        this.sessionCryptoInfoMap.set(topic, sessionInfo);\n        // TODO: search domain info and then delete \n        log.logDebug('cache sessionInfo:', topic, sessionInfo, this.sessionCryptoInfoMap);\n        if (sync) {\n            this.syncCacheSessionInfo();\n        }\n        return duplicatedTopics;\n    }\n    // add and subscribe topic\n    appendTopic(topic, sessionPublicKey, cid) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('4.1. get append Topic:', topic);\n            // 1. check if connected\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                if (!this.isLogined) {\n                    var error = new Error();\n                    error.message = \"connection is not logined\";\n                    error.name = \"append error\";\n                    // throw error\n                    reject(error);\n                    return;\n                }\n                // 2. subscribe topic and session public key\n                let cryptoItem = {\n                    topic: topic,\n                    crypto: new crypto_1.SessionCrypto(),\n                    dappPublicKey: sessionPublicKey ? sessionPublicKey : \"\",\n                    cid: cid\n                };\n                let duplicatedTopics = this.cacheSessionInfo(topic, cryptoItem, false);\n                // make sure cache session info before subscribe\n                yield this.subscribeTopics(Array.from([topic]));\n                this.refreshPackageId();\n                log.logDebug(`5. subscribe callback then fetch append message: ${this.packageId}, ${topic}`);\n                log.reportLog(`5. subscribe callback then fetch append message`);\n                const timeF = new Date().getTime();\n                (0, log_1.logDebug)(\"Append --subscribe callback->\", timeF - this.timeLog);\n                resolve(duplicatedTopics);\n            }));\n        });\n    }\n    confirmAppendingTopics() {\n        this.syncCacheSessionInfo();\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.timeLog = new Date().getTime();\n            (0, log_1.logDebug)(\"[Wallet] ConnectTime---enter->\", this.timeLog);\n            log.reportLog('wallet connect connect called');\n            // 0. get cached topics and infos\n            let timestampStr = Date.now().toString();\n            var jwtToken = yield this.makeJWT(timestampStr);\n            log.logDebug(`generate jwt token: ${jwtToken}`);\n            this.connectStorage.saveContent(jwtToken, 'jwt');\n            this.recovrySessionInfoFromCache();\n            // 1.\n            return new Promise((resolve, reject) => {\n                // 1. when websocket opened\n                this.inLogin = true;\n                this.connector.onOpen(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug(`1. connector on open`);\n                    log.reportLog('1. wallet connect connect on open');\n                    const timeOne = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---open->\", timeOne - this.timeLog);\n                    //2. send jwt to login\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when login');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // throw error\n                            reject(error);\n                        }\n                        else {\n                            this.isLogined = true;\n                            resolve();\n                            // 3. subscribe cached topics\n                            log.logDebug('3. subscribe cached topics', this.sessionCryptoInfoMap);\n                            log.reportLog('3. wallet connect connect subscribe cached topics');\n                            if (this.sessionCryptoInfoMap.size > 0) {\n                                yield this.subscribeTopics(Array.from(this.sessionCryptoInfoMap.keys()));\n                            }\n                        }\n                    }));\n                    log.logDebug(`2. login called`);\n                    log.reportLog('2. wallet connect login called');\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        return yield this.connector.connect();\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_LOGIN,\n                        params: {\n                            token: jwtToken\n                        }\n                    });\n                }));\n                this.connector.connect().catch((err) => {\n                    (0, log_1.logDebug)('WalletConnectionManager connect error', err);\n                    reject(err);\n                });\n                // add callback\n                this.connector.addPackageParse((event) => {\n                    var _a, _b;\n                    log.logDebug(`connect: parse package`);\n                    log.logDebug(event);\n                    if (!(\"params\" in event) || !(\"data\" in event[\"params\"])) {\n                        this.parsePackage(\"\", event, true);\n                        return;\n                    }\n                    // ignore receive echo\n                    if ((_a = event.params.data) === null || _a === void 0 ? void 0 : _a.topic) {\n                        this.parsePackage((_b = event.params.data) === null || _b === void 0 ? void 0 : _b.topic, event, event.method === commands_1.CONNECT_METHOD_RECEIVE);\n                    }\n                });\n                // this.connector.addListener(safeJsonStringify(event), (rawMsg: string)=> {\n                //    rawMsg = rawMsg.replace(/'/g, '\"')\n                //    log.logDebug(`addListener ===> ${rawMsg}`)\n                //    if (typeof rawMsg !== 'undefined') {\n                //       var msgObj = safeJsonParse(rawMsg)\n                //       var msg = msgObj.message\n                //       let crypto = \n                //       var result = this.crypto.decrypt(msg, this.connectedWalletPK)\n                //       log.logDebug(`addListener ===> ${result}`)\n                //       return result\n                //    }\n                //    return undefined\n                // }, ()=>{\n                //    // emit success\n                // }, ()=>{\n                //    // emit fail\n                // })\n            });\n        });\n    }\n    // 获取对应topic session下的钱包公钥\n    // 在返回approve时需要填充到clientId字段中\n    getSessionPublicKey(topicId) {\n        if (this.isTopicPublicKeyExist(topicId)) {\n            let item = this.sessionCryptoInfoMap.get(topicId);\n            if (item) {\n                return (0, utils_1.toHexString)(item.crypto.keyPair.publicKey);\n            }\n        }\n        return undefined;\n    }\n    getCurrentCachedTopicIdList() {\n        return Array.from(this.sessionCryptoInfoMap.keys());\n    }\n    disconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            yield this.connector.disconnect();\n            //clean cached topic\n            //如果是恢复连接，就不清理解密public key\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            if (!fromRestore) {\n                this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n            }\n        });\n    }\n    send(topic_1, msg_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, msg, needPublicKey = false, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL, useRaw = false) {\n            var _a, _b;\n            // make send msg payload\n            log.logDebug(`message send =====> ${msg}`);\n            if (!this.isTopicPublicKeyExist(topic)) {\n                // channel not ready\n                throw new Error('connection not finish');\n            }\n            let connectedDappPK = (_a = this.sessionCryptoInfoMap.get(topic)) === null || _a === void 0 ? void 0 : _a.dappPublicKey;\n            let cryptoObject = (_b = this.sessionCryptoInfoMap.get(topic)) === null || _b === void 0 ? void 0 : _b.crypto;\n            let messageObj = undefined;\n            if (useRaw) {\n                messageObj = {\n                    message: msg,\n                };\n            }\n            if (cryptoObject && connectedDappPK && !useRaw) {\n                let message = cryptoObject.encryptWallet(msg, connectedDappPK);\n                messageObj = {\n                    message: message,\n                };\n            }\n            if (messageObj) {\n                if (needPublicKey && cryptoObject) {\n                    messageObj.clientId = (0, utils_1.toHexString)(cryptoObject.keyPair.publicKey);\n                    // let privateKey = toHexString(cryptoObject.keyPair.secretKey)\n                    // log.logDebug(`message send use dapp publicKey =====> ${connectedDappPK}`)\n                    // log.logDebug(`message send use publicKey =====> ${messageObj.clientId}`)\n                    // log.logDebug(`message send use secretKey =====> ${privateKey}`)\n                }\n                this.refreshPackageId();\n                const payload = {\n                    id: this.packageId.toString(),\n                    method: commands_1.CONNECT_METHOD_PUBLISH,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    params: {\n                        message: {\n                            topic: topic,\n                            message: (0, safejson_1.safeJsonStringify)(messageObj),\n                            ttl: ttl\n                        }\n                    } // crypted\n                };\n                this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                    // ack\n                    if (rsp && rsp.error) {\n                        log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                    }\n                    else if (rsp && !rsp.error) {\n                        log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                    }\n                }));\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n                return this.packageId;\n            }\n        });\n    }\n    sendACK(msgId_1, success_1) {\n        return __awaiter(this, arguments, void 0, function* (msgId, success, reason = undefined) {\n            if (success === true) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    result: true\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n            else if (reason) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    error: {\n                        code: reason.code, //int\n                        message: reason.message\n                    }\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    // send receive\n    sendReceive(msgId, messageId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECEIVE,\n                params: {\n                    data: {\n                        messageId: messageId,\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendUnsubscribe(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO: make disconnect payload\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), {\n                id: this.packageId.toString(),\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_UNSUB,\n                params: {\n                    topic: topic\n                }\n            });\n            // remove topicId\n            this.sessionCryptoInfoMap.delete(topic);\n            this.syncCacheSessionInfo();\n        });\n    }\n    // send receive\n    // 1. fetch all \n    // 2. send back receive\n    // 3. check has more, if so, repeat from 1st step\n    sendFetchAndConsumeMessages(msgId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(msgId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic == topic) {\n                                let messageId = msg.messageId;\n                                yield this.connector.getMsgPayloadFromHistory(msg);\n                                // send receive command to relay server\n                                this.refreshPackageId();\n                                yield this.sendReceive(this.packageId.toString(), messageId, topic);\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_FETCHMSG,\n                params: {\n                    data: {\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendBatchFetchAndConsumeMessages(packageId, topicIdList) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(packageId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic) {\n                                let messageId = msg.messageId;\n                                yield this.connector.getMsgPayloadFromHistory(msg);\n                                // send receive command to relay server\n                                this.refreshPackageId(i);\n                                yield this.sendReceive(this.packageId.toString(), messageId, msg.topic);\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendBatchFetchAndConsumeMessages(this.packageId.toString(), topicIdList);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            log.reportLog('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: packageId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_BATCH_FETCHMSG,\n                params: {\n                    topics: topicIdList,\n                    withInternalData: true\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                yield this.connector.connect();\n            }), payload);\n        });\n    }\n    cleanCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.connectStorage.clearCache();\n        });\n    }\n    saveSessionContent(key, data) {\n        if (!data) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(data);\n        this.connectStorage.encryptStoreMsg(jsonData, storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n    }\n    getSessionContent(key) {\n        let jsonStr = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        if (jsonStr) {\n            let object = (0, safejson_1.safeJsonParse)(jsonStr);\n            return object;\n        }\n        return undefined;\n    }\n    // subscribe then fetch messages for each topics\n    subscribeTopics(topicIdList) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)(\"4. topicid list\", topicIdList);\n            log.reportLog(\"4. topicid list\");\n            this.refreshPackageId();\n            const timeF = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let finishCount = 0;\n                //3. send subscribe\n                for (let idx = 0; idx < topicIdList.length; ++idx) {\n                    let topicId = topicIdList[idx];\n                    this.refreshPackageId(idx);\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when subscribe');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // reject(error)\n                            finishCount += 1;\n                            if (finishCount == topicIdList.length) {\n                                resolve();\n                            }\n                        }\n                        this.refreshPackageId(idx);\n                        const timeF = new Date().getTime();\n                        (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n                        finishCount += 1;\n                        if (finishCount == topicIdList.length) {\n                            // 4. fetch messages\n                            log.logDebug(`5. send fetch msg: ${this.packageId}, ${topicId}`);\n                            yield this.sendBatchFetchAndConsumeMessages(this.packageId.toString(), topicIdList);\n                            resolve();\n                        }\n                    }));\n                    log.logDebug(`3. login callback then send subscribe: ${this.packageId}, ${topicId}`);\n                    log.reportLog('3. login callback then send subscribe');\n                    const timeTh = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---login callback->\", timeTh - this.timeLog);\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        return yield this.connector.connect();\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_SUB,\n                        params: {\n                            topic: topicId\n                        }\n                    });\n                }\n            }));\n        });\n    }\n}\nexports.WalletConnectionManager = WalletConnectionManager;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AppwalletConnector = void 0;\nconst ws_connector_1 = require(\"./ws-connector\");\nconst iconnector_1 = require(\"./iconnector\");\nconst utils_1 = require(\"../utils\");\nconst constants_1 = require(\"../protocol/constants\");\nclass AppwalletConnector extends ws_connector_1.WsConnector {\n    static getConnector() {\n        if (!this.instance) {\n            this.instance = new AppwalletConnector();\n        }\n        return this.instance;\n    }\n    constructor() {\n        super();\n        this.walletName = 'OKX App';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectApp';\n    }\n    getTag() {\n        return iconnector_1.OKX_APP_WALLET;\n    }\n    openWallet(engineConnectInfo) {\n        var _a;\n        if (engineConnectInfo && engineConnectInfo.connectRequest) {\n            let connectRequest = engineConnectInfo.connectRequest;\n            (0, utils_1.logDebug)(`appwallet-connector openwallet before useSHortLink engineConnectInfo.connectRequest JSON ${JSON.stringify(engineConnectInfo)}`);\n            if ((0, utils_1.useShortLink)()) {\n                let shortUniversalLink = (0, utils_1.getOKXLink)(connectRequest);\n                (0, utils_1.openOKXUniversalLink)(shortUniversalLink);\n            }\n            else {\n                (0, utils_1.logDebug)(`appwallet-connector openwallet else connectRequest ${connectRequest}`);\n                let appConnectEncodeParams = (0, utils_1.encodeConnectParams)(Object.assign(Object.assign({}, connectRequest), { redirect: (_a = engineConnectInfo.redirect) !== null && _a !== void 0 ? _a : \"none\" }));\n                let appDeepLink = (0, utils_1.getAppWalletDeepLink)(appConnectEncodeParams);\n                (0, utils_1.openOKXDeeplinkWithFallback)(appDeepLink);\n            }\n        }\n        else {\n            if ((0, utils_1.isOS)('android')) {\n                (0, utils_1.openDeeplinkWithFallback)(constants_1.stackDeepLink, () => { });\n            }\n            else {\n                (0, utils_1.openLinkBlank)(constants_1.standardUniversalLink);\n            }\n        }\n    }\n}\nexports.AppwalletConnector = AppwalletConnector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_TG_WALLET = exports.OKX_APP_WALLET = exports.OKX_INJECT_WALLET = void 0;\nexports.OKX_INJECT_WALLET = \"okx_inject_wallet\";\nexports.OKX_APP_WALLET = \"okx_app_wallet\";\nexports.OKX_TG_WALLET = \"okx_tg_wallet\";\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OkxwalletInjectConnector = exports.WsConnector = exports.TgwalletConnector = exports.InjectConnector = exports.OKX_INJECT_WALLET = exports.OKX_APP_WALLET = exports.OKX_TG_WALLET = exports.AppwalletConnector = void 0;\nvar appwallet_connector_1 = require(\"./appwallet-connector\");\nObject.defineProperty(exports, \"AppwalletConnector\", { enumerable: true, get: function () { return appwallet_connector_1.AppwalletConnector; } });\nvar iconnector_1 = require(\"./iconnector\");\nObject.defineProperty(exports, \"OKX_TG_WALLET\", { enumerable: true, get: function () { return iconnector_1.OKX_TG_WALLET; } });\nObject.defineProperty(exports, \"OKX_APP_WALLET\", { enumerable: true, get: function () { return iconnector_1.OKX_APP_WALLET; } });\nObject.defineProperty(exports, \"OKX_INJECT_WALLET\", { enumerable: true, get: function () { return iconnector_1.OKX_INJECT_WALLET; } });\nvar inject_connector_1 = require(\"./inject-connector\");\nObject.defineProperty(exports, \"InjectConnector\", { enumerable: true, get: function () { return inject_connector_1.InjectConnector; } });\nvar tgwallet_connector_1 = require(\"./tgwallet-connector\");\nObject.defineProperty(exports, \"TgwalletConnector\", { enumerable: true, get: function () { return tgwallet_connector_1.TgwalletConnector; } });\nvar ws_connector_1 = require(\"./ws-connector\");\nObject.defineProperty(exports, \"WsConnector\", { enumerable: true, get: function () { return ws_connector_1.WsConnector; } });\nvar okxwallet_inject_connector_1 = require(\"./okxwallet-inject-connector\");\nObject.defineProperty(exports, \"OkxwalletInjectConnector\", { enumerable: true, get: function () { return okxwallet_inject_connector_1.OkxwalletInjectConnector; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InjectConnector = void 0;\nconst protocol_1 = require(\"../protocol\");\nconst utils_1 = require(\"../utils\");\nconst iconnector_1 = require(\"./iconnector\");\nconst SolProvider_1 = require(\"../inject/provider/SolProvider\");\nconst wallet_info_1 = require(\"../protocol/connect/wallet-info\");\nconst AptosProvider_1 = require(\"../inject/provider/AptosProvider\");\nconst media_1 = require(\"../utils/media\");\nconst TONProvider_1 = require(\"../inject/provider/TONProvider\");\nconst inject_1 = require(\"../inject\");\nconst sui_provider_1 = require(\"../inject/provider/sui-provider\");\nconst utils_2 = require(\"../utils/utils\");\nclass InjectConnector {\n    constructor() {\n        this.disconnectListener = [];\n        this.providerMap = new Map();\n        this.walletName = \"\";\n        this.walletNameKey = '';\n        this.enable = true;\n        this.providerMap.set(protocol_1.NameSpaceKeyEip155, new inject_1.Eip155Provider());\n        this.providerMap.set(protocol_1.NameSpaceKeySOL, new SolProvider_1.SolProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeyAptos, new AptosProvider_1.AptosProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeyTON, new TONProvider_1.TONProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeySui, new sui_provider_1.SuiProvider());\n    }\n    getInjectProvider(nameSpace) {\n        for (const [mapKey, value] of this.providerMap.entries()) {\n            if (nameSpace.includes(mapKey)) {\n                return value;\n            }\n        }\n        return undefined;\n    }\n    openWallet(engineConnectInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c;\n            (0, utils_1.logDebug)(\"InjectEngine connect begin:\", JSON.stringify(engineConnectInfo));\n            if (!engineConnectInfo) {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR);\n            }\n            var universalConnectRequest = engineConnectInfo.connectRequest;\n            try {\n                if (window && window.okxwallet) {\n                    if (universalConnectRequest.requests) {\n                        let requestAccounts = universalConnectRequest.requests\n                            .find(item => item.name === \"requestAccounts\");\n                        let version = yield window.okxwallet.getVersion();\n                        let result = {\n                            method: \"connect\",\n                            requestId: universalConnectRequest.requestId,\n                            payload: {\n                                wallet: {\n                                    platform: (_a = navigator.platform) !== null && _a !== void 0 ? _a : \"/\",\n                                    appName: wallet_info_1.OKXInjectWalletName,\n                                    appVersion: version !== null && version !== void 0 ? version : \"1.0.0\",\n                                    maxProtocolVersion: 1,\n                                },\n                                responses: []\n                            },\n                        };\n                        let responseItem = {\n                            name: \"requestAccounts\",\n                            accounts: [],\n                        };\n                        result.payload.responses.push(responseItem);\n                        yield this.disconnect();\n                        var accounts = yield this.getAccountByRequestWallets(true, (_b = requestAccounts.requiredNamespaces) !== null && _b !== void 0 ? _b : [], (_c = requestAccounts.optionalNamespaces) !== null && _c !== void 0 ? _c : []);\n                        if (accounts) {\n                            responseItem.accounts.push(...accounts);\n                            if (responseItem.accounts.length === 0) {\n                                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"connect connectAccounts is null\");\n                            }\n                        }\n                        else {\n                            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"connect requestWallets is null\");\n                        }\n                        if (this.connectResultListener) {\n                            this.connectResultListener(result);\n                        }\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR);\n                }\n            }\n            catch (error) {\n                var code = protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR;\n                var message = '';\n                if (error instanceof protocol_1.OKXConnectError) {\n                    code = error.code;\n                    message = error.message;\n                }\n                if (this.connectResultListener) {\n                    this.connectResultListener({\n                        requestId: \"-1\",\n                        method: 'connect_error',\n                        payload: {\n                            code: code\n                        }\n                    });\n                }\n            }\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, utils_1.logDebug)('InjectEngine ==>> disconnect  okxwallet.disconnect()');\n            if (window.okxwallet) {\n                yield window.okxwallet.disconnect();\n                (0, utils_1.logDebug)('InjectEngine ==>> disconnect end okxwallet.disconnect()');\n            }\n        });\n    }\n    getRequestId() {\n        const requestId = Date.now().toString();\n        (0, utils_1.logDebug)('InjectEngine ==>> getRequestId ==>', requestId);\n        return requestId;\n    }\n    send(request, requestAnswer) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                (0, utils_1.logDebug)(\"InjectEngine send  > request:\", (0, utils_1.safeJsonStringify)(request));\n                let newRequest = request;\n                if (newRequest.method === 'disconnect') {\n                    yield this.disconnect();\n                    this.disconnectListener = [];\n                    (_a = requestAnswer.onAck) === null || _a === void 0 ? void 0 : _a.call(requestAnswer);\n                    return;\n                }\n                const injectProvider = this.getInjectProvider(newRequest.chainId);\n                if (injectProvider) {\n                    injectProvider.send(newRequest).then(result => {\n                        var _a;\n                        (0, utils_1.logDebug)(\"InjectEngine ==>> send > result:\", result);\n                        (_a = requestAnswer.resolve) === null || _a === void 0 ? void 0 : _a.call(requestAnswer, result);\n                    }).catch(error => {\n                        var _a;\n                        let code = error.code;\n                        if (code === 4001) {\n                            code = protocol_1.OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR;\n                        }\n                        let errorResponse = {\n                            requestId: this.getRequestId(),\n                            method: request.method,\n                            error: {\n                                code: code,\n                                message: error.message\n                            }\n                        };\n                        (0, utils_1.logDebug)(\"InjectEngine ==>> send > errorResponse:\", JSON.stringify(errorResponse));\n                        (_a = requestAnswer.resolve) === null || _a === void 0 ? void 0 : _a.call(requestAnswer, errorResponse);\n                    });\n                    return;\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"InjectEngine ==>> send  ===> error:\", error);\n                return Promise.reject(error);\n            }\n        });\n    }\n    clearData() {\n        this.connectResultListener = undefined;\n    }\n    addDisconnectListener(disconnecter) {\n        this.disconnectListener.push(disconnecter);\n    }\n    setOnConnectResultListener(connectResultListener) {\n        this.connectResultListener = connectResultListener;\n    }\n    connectManagerDisconnect() {\n        return __awaiter(this, arguments, void 0, function* (_ = false) {\n        });\n    }\n    getCurrentConnectionReady(namespaceKeys) {\n        if (!namespaceKeys) {\n            return false;\n        }\n        const allReady = namespaceKeys.every(namespaceKey => { var _a; return (_a = this.getInjectProvider(namespaceKey)) === null || _a === void 0 ? void 0 : _a.connectReady(); });\n        return allReady;\n    }\n    getTag() {\n        return iconnector_1.OKX_INJECT_WALLET;\n    }\n    toJSON() {\n        return \"inject-connector\";\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        if (!window.okxwallet) {\n            onConnectResult(null);\n            return;\n        }\n        (0, utils_1.logDebug)(\"inject-connector restoreconnect --sessionInfo:\", JSON.stringify(sessionInfo));\n        var requiredNamespaces = [];\n        for (let namespacesKey in sessionInfo.namespaces) {\n            let connectWalletNameSpace = {\n                namespace: namespacesKey,\n                chains: sessionInfo.namespaces[namespacesKey].chains\n            };\n            if (namespacesKey === protocol_1.NameSpaceKeyAptos) {\n                let aptosChains = [];\n                sessionInfo.namespaces[namespacesKey].chains.forEach((chainStr) => {\n                    let aptosChain = (0, utils_2.replaceAptosChainName)(chainStr);\n                    aptosChains.push(aptosChain);\n                });\n                connectWalletNameSpace = {\n                    namespace: namespacesKey,\n                    chains: aptosChains\n                };\n            }\n            requiredNamespaces.push(connectWalletNameSpace);\n        }\n        (0, utils_1.logDebug)(\"inject-connector restoreconnect --requiredNamespaces:\", JSON.stringify(requiredNamespaces));\n        this.getAccountByRequestWallets(false, requiredNamespaces, [])\n            .then((accounts) => {\n            (0, utils_1.logDebug)(\"inject-connector restoreconnect --accounts:\", JSON.stringify(accounts));\n            //compare account with sessionInfo\n            let allEqual = true;\n            for (let namespacesKey in sessionInfo.namespaces) {\n                var accountsItem = accounts.find((item) => item.namespace === namespacesKey);\n                var sessionAccounts = sessionInfo.namespaces[namespacesKey].accounts;\n                if (!accountsItem) {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"resotreconnect error: accountItem error\");\n                }\n                const areEqual = accountsItem.addresses.length === sessionAccounts.length &&\n                    accountsItem.addresses.slice().sort().every((value, index) => {\n                        if (namespacesKey === protocol_1.NameSpaceKeyAptos) {\n                            let aptosAdd = sessionAccounts.slice().sort()[index];\n                            (0, utils_1.logDebug)(\"check aptos address -value and aptosAdd--\", value, aptosAdd);\n                            aptosAdd = (0, utils_2.replaceAptosChainName)(aptosAdd);\n                            return aptosAdd === value;\n                        }\n                        else {\n                            return value === sessionAccounts.slice().sort()[index];\n                        }\n                    });\n                if (!areEqual) {\n                    allEqual = false;\n                }\n            }\n            if (allEqual) {\n                onConnectResult(sessionInfo);\n            }\n            else {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"resotreconnect error: address not as same as session\");\n            }\n        }).catch((e) => {\n            (0, utils_1.logDebug)(\"inject-connector restoreconnect catch error\", JSON.stringify(e));\n            onConnectResult(null);\n        });\n    }\n    getAccountByRequestWallets(needPop, requiredNamespaces, optionalNamespaces) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                var walletInfo = [];\n                var accountResult = [];\n                if ((0, media_1.isDevice)(\"mobile\")) {\n                    var walletInfoItem = yield window.okxwallet.connectWallet(needPop, {\n                        requiredNamespaces: requiredNamespaces,\n                        optionalNamespaces: optionalNamespaces\n                    });\n                    walletInfo.push(walletInfoItem);\n                }\n                else {\n                    walletInfo = (yield window.okxwallet.requestWallets(needPop));\n                }\n                var allNameSpace = [...(requiredNamespaces !== null && requiredNamespaces !== void 0 ? requiredNamespaces : []), ...(optionalNamespaces !== null && optionalNamespaces !== void 0 ? optionalNamespaces : [])];\n                let walletInfoFirst = walletInfo[0];\n                (0, utils_1.logDebug)(\"InjectEngine connect connectAccounts:\", JSON.stringify(walletInfoFirst));\n                if (allNameSpace && walletInfoFirst && walletInfoFirst.address) {\n                    for (const [mapKey, provider] of this.providerMap.entries()) {\n                        let itemResult = yield provider.parseConnectResponse(needPop, allNameSpace, walletInfoFirst);\n                        if (itemResult) {\n                            accountResult.push(itemResult);\n                        }\n                    }\n                }\n                // check require\n                let cheeckRequire = requiredNamespaces.every(requireItem => {\n                    // requireItem.namespace\n                    let resultSel = accountResult.find(resultItem => {\n                        return resultItem.namespace === requireItem.namespace;\n                    });\n                    if (resultSel) {\n                        let hasChainAdd = requireItem.chains.every(chain => {\n                            let addItem = resultSel.addresses.find(address => {\n                                return address.startsWith(chain + \":\");\n                            });\n                            return !!addItem;\n                        });\n                        return hasChainAdd;\n                    }\n                    return false;\n                });\n                (0, utils_1.logDebug)(\"InjectEngine connect requiredNamespaces:\", JSON.stringify(requiredNamespaces));\n                (0, utils_1.logDebug)(\"InjectEngine connect accountResult:\", JSON.stringify(accountResult));\n                if (!cheeckRequire) {\n                    yield window.okxwallet.disconnect();\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED);\n                }\n                if (!(0, media_1.isDevice)(\"mobile\")) {\n                    yield window.okxwallet.requestWallets(needPop);\n                }\n                if (window.okxwallet) {\n                    window.okxwallet.on('accountsChanged', (accounts) => {\n                        (0, utils_1.logDebug)(\"Accounts Changed----->\", JSON.stringify(accounts));\n                        if (accounts && accounts.length === 0) {\n                            this.disconnectListener.forEach(listener => listener());\n                            this.disconnectListener = [];\n                        }\n                    });\n                }\n                return accountResult;\n            }\n            catch (e) {\n                if (e && typeof e === \"object\" && \"code\" in e) {\n                    if (e.code === 4001) {\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR);\n                    }\n                }\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n            }\n        });\n    }\n}\nexports.InjectConnector = InjectConnector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OkxwalletInjectConnector = void 0;\nconst inject_connector_1 = require(\"./inject-connector\");\nclass OkxwalletInjectConnector extends inject_connector_1.InjectConnector {\n    static getConnector() {\n        if (!this.instance) {\n            this.instance = new OkxwalletInjectConnector();\n        }\n        return this.instance;\n    }\n    constructor() {\n        super();\n        this.walletName = 'OKX Wallet extension';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectInjected';\n    }\n}\nexports.OkxwalletInjectConnector = OkxwalletInjectConnector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TgwalletConnector = void 0;\nconst ws_connector_1 = require(\"./ws-connector\");\nconst iconnector_1 = require(\"./iconnector\");\nconst utils_1 = require(\"../utils\");\nclass TgwalletConnector extends ws_connector_1.WsConnector {\n    static getConnector() {\n        if (!this.instance) {\n            this.instance = new TgwalletConnector();\n        }\n        return this.instance;\n    }\n    constructor() {\n        super();\n        this.walletName = 'OKX Mini Wallet';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectMini';\n    }\n    getTag() {\n        return iconnector_1.OKX_TG_WALLET;\n    }\n    openWallet(engineConnectInfo) {\n        var _a;\n        var encodeTGParams;\n        if (engineConnectInfo && engineConnectInfo.connectRequest) {\n            encodeTGParams = (0, utils_1.encodeTWAConnectURLParams)(Object.assign(Object.assign({}, engineConnectInfo.connectRequest), { redirect: \"none\" }));\n        }\n        var tgUrl = (0, utils_1.getTelegramWalletTWAUrl)(encodeTGParams, (_a = engineConnectInfo === null || engineConnectInfo === void 0 ? void 0 : engineConnectInfo.tmaReturnUrl) !== null && _a !== void 0 ? _a : \"back\");\n        (0, utils_1.openOKXTMAWalletlinkWithFallback)(tgUrl);\n    }\n}\nexports.TgwalletConnector = TgwalletConnector;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WsConnector = void 0;\nconst safejson_1 = require(\"../utils/safejson\");\nconst log_1 = require(\"../utils/log\");\nclass WsConnector {\n    constructor() {\n        this.disconnectListener = [];\n        this.walletName = '';\n        this.walletNameKey = '';\n        this.enable = true;\n        this.pendingRequests = new Map();\n        // report api begin\n        (0, log_1.getDefaultReporter)().beginReport();\n    }\n    setConnectionManager(connectionManager) {\n        this.connectionManager = connectionManager;\n    }\n    addConnectionListener() {\n        var _a;\n        (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.addListener(\"sdk_response\", (event, msg) => {\n            var jsonResponse = (0, safejson_1.safeJsonParse)(msg);\n            (0, log_1.logDebug)(`Engine ==>> addListener ==> success ==> ${jsonResponse}`);\n            this.handleResponse(event, jsonResponse);\n        }, function () {\n        });\n    }\n    addDisconnectListener(disconnecter) {\n        this.disconnectListener.push(disconnecter);\n    }\n    connectManagerDisconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.disconnect(fromRestore));\n        });\n    }\n    openWallet(engineConnectInfo) {\n    }\n    bindRequestForPromise(requestId, resolve) {\n        this.pendingRequests.set(requestId, resolve);\n    }\n    send(request, requestAnswer, ttl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b;\n            (0, log_1.logDebug)('Engine ==>> send  request==>', JSON.stringify(request));\n            const requestId = this.getRequestId();\n            try {\n                let packageId = yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.send(JSON.stringify(Object.assign(Object.assign({}, request), { requestId: requestId })), ttl));\n                if (packageId) {\n                    (_b = this.connectionManager) === null || _b === void 0 ? void 0 : _b.events.once(packageId.toString(), (event) => {\n                        var _a;\n                        (0, log_1.logDebug)(`Engine ==> send => onAck => ${(0, safejson_1.safeJsonStringify)(event)}`);\n                        if (event && event.result) {\n                            (_a = requestAnswer.onAck) === null || _a === void 0 ? void 0 : _a.call(requestAnswer);\n                        }\n                    });\n                }\n                if (requestAnswer.resolve) {\n                    this.bindRequestForPromise(requestId, requestAnswer.resolve);\n                }\n            }\n            catch (e) {\n                return Promise.reject(e);\n            }\n        });\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.restoreConnect(sessionInfo.topic));\n            onConnectResult(sessionInfo);\n        });\n    }\n    restoreconnectFromTopic(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.restoreConnect(topic));\n        });\n    }\n    getRequestId() {\n        const requestId = Date.now().toString();\n        (0, log_1.logDebug)('Engine ==>> getRequestId ==>', requestId);\n        return requestId;\n    }\n    handleResponse(event, response) {\n        (0, log_1.logDebug)(`Engine ==>> handleResponse_1  ======>response: ${(0, safejson_1.safeJsonStringify)(response)}`, event);\n        if (\"requestId\" in response) {\n            (0, log_1.logDebug)(\"Engine ==>> handleResponse_2  ===> in response\");\n            let requestId = response.requestId;\n            const resolve = this.pendingRequests.get(requestId);\n            if (resolve) {\n                (0, log_1.logDebug)(\"Engine ==>> handleResponse_3  ===> find resolve:\", resolve);\n                resolve(response);\n                // 从pendingRequests中删除这个Promise\n                this.pendingRequests.delete(requestId);\n            }\n            else {\n                (0, log_1.logDebug)(\"Engine ==>> handleResponse_3  ===> not find resolve:\");\n                if (response.method === \"disconnect\") {\n                    this.disconnectListener.forEach(listener => listener());\n                    this.disconnectListener = [];\n                    this.clearData();\n                }\n            }\n        }\n    }\n    getCurrentConnectionReady() {\n        var _a;\n        return !!((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getCurrentConnectionReady());\n    }\n    saveSessionContent(key, data) {\n        var _a;\n        (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.saveSessionContent(key, data);\n    }\n    getSessionContent(key) {\n        var _a;\n        return (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getSessionContent(key);\n    }\n    setOnConnectResultListener(connectResultListener) {\n        this.connectResultListener = connectResultListener;\n    }\n    getTag() {\n        return \"\";\n    }\n    toJSON() {\n        return \"ws-connector\";\n    }\n    clearData() {\n        this.pendingRequests.clear();\n    }\n}\nexports.WsConnector = WsConnector;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SessionCrypto = void 0;\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst utils_1 = require(\"../utils/utils\");\nclass SessionCrypto {\n    constructor(keyPair = undefined) {\n        this.nonceLength = 24;\n        this.sessionKeyPair = keyPair ? this.createKeypairFromString(keyPair) : this.createKeypair();\n    }\n    createKeypair() {\n        return tweetnacl_1.default.box.keyPair();\n    }\n    createKeypairFromString(keyPair) {\n        return {\n            publicKey: (0, utils_1.hexToByteArray)(keyPair.publicKey),\n            secretKey: (0, utils_1.hexToByteArray)(keyPair.secretKey),\n        };\n    }\n    createNonce() {\n        return tweetnacl_1.default.randomBytes(this.nonceLength);\n    }\n    get keyPair() {\n        return this.sessionKeyPair;\n    }\n    // dapp 加密:\n    // base64(hex（nonce+加密内容）)\n    encrypt(message, receiverPublicKey) {\n        const encodedMessage = new TextEncoder().encode(message);\n        const nonce = this.createNonce();\n        const encrypted = tweetnacl_1.default.box(encodedMessage, nonce, (0, utils_1.hexToByteArray)(receiverPublicKey), this.keyPair.secretKey);\n        let concatInfo = (0, utils_1.concatUint8Arrays)(nonce, encrypted);\n        var hexResult = (0, utils_1.toHexString)(concatInfo);\n        var encodedResult = new TextEncoder().encode(hexResult);\n        return (0, utils_1.base64encode)(encodedResult, false);\n    }\n    // 钱包加密内容\n    // 注意：没有中间hex的环节\n    // base64（nonce+加密内容)\n    encryptWallet(message, receiverPublicKey) {\n        const encodedMessage = new TextEncoder().encode(message);\n        const nonce = this.createNonce();\n        const encrypted = tweetnacl_1.default.box(encodedMessage, nonce, (0, utils_1.hexToByteArray)(receiverPublicKey), this.keyPair.secretKey);\n        let concatInfo = (0, utils_1.concatUint8Arrays)(nonce, encrypted);\n        return (0, utils_1.base64encode)(concatInfo, false);\n    }\n    // dapp 解密\n    // base64(split(nonce+加密内容))\n    decrypt(message, senderPublicKey) {\n        let base64Content = (0, utils_1.base64decode)(message, true);\n        let messageByteArray = base64Content.toUint8Array();\n        const [nonce, internalMessage] = (0, utils_1.splitToUint8Arrays)(messageByteArray, this.nonceLength);\n        const decrypted = tweetnacl_1.default.box.open(internalMessage, nonce, (0, utils_1.hexToByteArray)(senderPublicKey), this.keyPair.secretKey);\n        if (!decrypted) {\n            throw new Error(`Decryption error: \\n message: ${message.toString()} \\n sender pubkey: ${senderPublicKey.toString()} \\n keypair pubkey: ${(0, utils_1.toHexString)(this.keyPair.publicKey)} \\n keypair secretkey: ${(0, utils_1.toHexString)(this.keyPair.secretKey)}`);\n        }\n        return new TextDecoder().decode(decrypted);\n    }\n    // dapp 解密\n    // base64(hextoByte(split(nonce+加密内容)))\n    decryptWallet(message, senderPublicKey) {\n        let base64Content = (0, utils_1.base64decode)(message, true);\n        let messageByteArray = (0, utils_1.hexToByteArray)(base64Content.toString());\n        const [nonce, internalMessage] = (0, utils_1.splitToUint8Arrays)(messageByteArray, this.nonceLength);\n        const decrypted = tweetnacl_1.default.box.open(internalMessage, nonce, (0, utils_1.hexToByteArray)(senderPublicKey), this.keyPair.secretKey);\n        if (!decrypted) {\n            throw new Error(`Decryption error: \\n message: ${message.toString()} \\n sender pubkey: ${senderPublicKey.toString()} \\n keypair pubkey: ${(0, utils_1.toHexString)(this.keyPair.publicKey)} \\n keypair secretkey: ${(0, utils_1.toHexString)(this.keyPair.secretKey)}`);\n        }\n        return new TextDecoder().decode(decrypted);\n    }\n    stringifyKeypair() {\n        return {\n            publicKey: (0, utils_1.toHexString)(this.keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(this.keyPair.secretKey)\n        };\n    }\n}\nexports.SessionCrypto = SessionCrypto;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./connect\"), exports);\n__exportStar(require(\"./protocol\"), exports);\n__exportStar(require(\"./utils\"), exports);\n__exportStar(require(\"./inject\"), exports);\n__exportStar(require(\"./connector\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SuiMethods = exports.TONMethods = exports.AptosMethods = exports.SOLANAMethods = exports.Eip55Methods = void 0;\nexports.hasOKXInjectedProvider = hasOKXInjectedProvider;\nfunction hasOKXInjectedProvider() {\n    if (typeof getWindowProviderNamespace(\"okxwallet\") !== 'undefined') {\n        return true;\n    }\n    return false;\n}\nfunction getWindowProviderNamespace(namespace) {\n    const providerSearch = (provider, namespace) => {\n        const [property, ...path] = namespace.split('.');\n        const _provider = provider[property];\n        if (_provider) {\n            if (path.length === 0)\n                return _provider;\n            return providerSearch(_provider, path.join('.'));\n        }\n    };\n    if (typeof window !== 'undefined')\n        return providerSearch(window, namespace);\n}\nexports.Eip55Methods = [\n    \"personal_sign\",\n    \"eth_signTypedData_v4\",\n    \"eth_sendTransaction\",\n    \"wallet_addEthereumChain\",\n    \"wallet_watchAsset\",\n    \"wallet_switchEthereumChain\",\n    \"eth_requestAccounts\",\n    \"eth_accounts\",\n    \"eth_chainId\"\n];\nexports.SOLANAMethods = [\n    \"solana_signTransaction\",\n    \"solana_signMessage\",\n    \"solana_signAllTransactions\",\n    \"solana_signAndSendTransaction\"\n];\nexports.AptosMethods = [\n    \"aptos_signMessage\",\n    \"aptos_signTransaction\",\n    \"aptos_signAndSubmitTransaction\"\n];\nexports.TONMethods = [\n    \"ton_sendTransaction\",\n];\nexports.SuiMethods = [\n    \"sui_signMessage\",\n    \"sui_signPersonalMessage\",\n    \"sui_signTransactionBlock\",\n    \"sui_signAndExecuteTransactionBlock\"\n];\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./InjectUtils\"), exports);\n__exportStar(require(\"./provider\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AptosProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nconst media_1 = require(\"../../utils/media\");\nclass AptosProvider {\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                (0, utils_1.logDebug)(\"AptosProvider send request:\", (0, utils_1.safeJsonStringify)(request));\n                yield this.restoreConnect();\n                const method = request.method;\n                let result;\n                switch (method) {\n                    case \"aptos_signMessage\":\n                        {\n                            if (request.injectParams) {\n                                let message = yield window.okxwallet.aptos.signMessage(request.injectParams);\n                                result = {\n                                    method: request.method,\n                                    result: message.signature,\n                                };\n                                (0, utils_1.logDebug)(\"AptosProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                                return result;\n                            }\n                            else {\n                                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `param is error method: '${method}'`);\n                            }\n                        }\n                        break;\n                    case \"aptos_signTransaction\":\n                        {\n                            (0, utils_1.logDebug)(\"AptosProvider Method>>>> :\", method);\n                            let message = yield window.okxwallet.aptos.signTransaction(request.params);\n                            result = {\n                                method: request.method,\n                                result: message,\n                            };\n                            (0, utils_1.logDebug)(\"AptosProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                            return result;\n                        }\n                        break;\n                    case \"aptos_signAndSubmitTransaction\":\n                        {\n                            (0, utils_1.logDebug)(\"AptosProvider Method>>>> :\", method);\n                            let message = yield window.okxwallet.aptos.signAndSubmitTransaction(request.params);\n                            result = {\n                                method: request.method,\n                                result: message.hash,\n                            };\n                            (0, utils_1.logDebug)(\"AptosProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                            return result;\n                        }\n                        break;\n                    default:\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, ` method: '${method}'`);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"AptosProvider send error:\", error);\n                throw error;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    disconnect() {\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return window.okxwallet.aptos.connect();\n        }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, connectWalletNameSpace, connectRequestWalletResponse) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let connectChain = [];\n            connectWalletNameSpace.forEach(item => {\n                if (item.namespace === protocol_1.NameSpaceKeyAptos) {\n                    connectChain.push(...item.chains);\n                }\n            });\n            let addresses = [];\n            let extra = {};\n            (0, utils_1.logDebug)(\"AptosProvider parseConnectResponse connectChain\", JSON.stringify(connectChain));\n            connectChain.forEach((chainStr) => {\n                let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                    return (addressItem.chainId === \"637\" && addressItem.coinType === 637) || (addressItem.namespaceChainId === chainStr);\n                });\n                if (selectedAddress) {\n                    addresses.push(chainStr + \":\" + selectedAddress.address);\n                    extra[chainStr] = {\n                        publicKey: selectedAddress.publicKey\n                    };\n                }\n            });\n            (0, utils_1.logDebug)(\"AptosProvider parseConnectResponse addresses\", JSON.stringify(addresses));\n            if (addresses && addresses.length > 0) {\n                let nameSpaceResponse = {\n                    namespace: protocol_1.NameSpaceKeyAptos,\n                    addresses: addresses,\n                    methods: [...InjectUtils_1.AptosMethods],\n                    extra: extra\n                };\n                return nameSpaceResponse;\n            }\n            return undefined;\n        });\n    }\n}\nexports.AptosProvider = AptosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SolProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass SolProvider {\n    // TOOD\n    // 问题: 是否需要切链  不切链, 主网 测试网络  sonic 如何区别\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                yield this.restoreConnect();\n                (0, utils_1.logDebug)(\"SolProvider send request:\", JSON.stringify(request));\n                const method = request.method;\n                let result;\n                if (request.injectParams) {\n                    switch (method) {\n                        case \"solana_signMessage\":\n                            {\n                                if (request.injectParams && typeof request.injectParams === 'object' && 'message' in request.injectParams) {\n                                    var message = (_a = request.injectParams) === null || _a === void 0 ? void 0 : _a.message;\n                                    const encodedMessage = new TextEncoder().encode(message);\n                                    const signedMessage = yield window.okxwallet.solana.signMessage(encodedMessage, \"utf8\");\n                                    result = {\n                                        method: request.method,\n                                        result: bs58_1.default.encode(signedMessage.signature),\n                                    };\n                                    (0, utils_1.logDebug)(\"SolProvider send result:\", JSON.stringify(signedMessage));\n                                    return result;\n                                }\n                                else {\n                                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `param is error method: '${method}'`);\n                                }\n                            }\n                            break;\n                        case \"solana_signTransaction\":\n                            {\n                                let bufferResult = yield window.okxwallet.solana.signTransaction(request.injectParams);\n                                (0, utils_1.logDebug)(\"SolProvider send bufferResult:\", JSON.stringify(bufferResult));\n                                result = {\n                                    method: request.method,\n                                    injectResult: bufferResult,\n                                };\n                                (0, utils_1.logDebug)(\"SolProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                                return result;\n                            }\n                            break;\n                        case \"solana_signAllTransactions\":\n                            {\n                                let allResult = yield window.okxwallet.solana.signAllTransactions(request.injectParams);\n                                (0, utils_1.logDebug)(\"SolProvider send result:\", (0, utils_1.safeJsonStringify)(allResult));\n                                result = {\n                                    method: request.method,\n                                    injectResult: allResult,\n                                };\n                                return result;\n                            }\n                            break;\n                        case \"solana_signAndSendTransaction\":\n                            {\n                                var signAndSendResult = yield window.okxwallet.solana.signAndSendTransaction(request.injectParams);\n                                (0, utils_1.logDebug)(\"SolProvider send result:\", (0, utils_1.safeJsonStringify)(signAndSendResult));\n                                result = {\n                                    method: request.method,\n                                    injectResult: signAndSendResult,\n                                };\n                                return result;\n                            }\n                            break;\n                        default:\n                            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, `method: '${method}'`);\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `param is error method: '${method}'`);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"SolProvider send error:\", error);\n                throw error;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    disconnect() {\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            const provider = window.okxwallet.solana;\n            return provider.connect();\n        }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, connectWalletNameSpace, connectRequestWalletResponse) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let connectChain = [];\n            connectWalletNameSpace.forEach(item => {\n                if (item.namespace === protocol_1.NameSpaceKeySOL) {\n                    connectChain.push(...item.chains);\n                }\n            });\n            let addresses = [];\n            let extra = {};\n            let accounts = {};\n            // if (!isDevice(\"mobile\")){\n            //      accounts = await window.okxwallet.solana.connect()\n            //     logDebug(\"parseConnectResponse solana.connect() :\",JSON.stringify(accounts))\n            // }\n            connectChain.forEach((chainStr) => {\n                let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                    return (addressItem.chainId === \"501\" && addressItem.coinType === 501)\n                        || (addressItem.namespaceChainId === chainStr);\n                });\n                if (selectedAddress) {\n                    addresses.push(chainStr + \":\" + selectedAddress.address);\n                    if (accounts && \"publicKey\" in accounts) {\n                        extra[chainStr] = accounts;\n                    }\n                    else {\n                        extra[chainStr] = {\n                            publicKey: selectedAddress.publicKey\n                        };\n                    }\n                }\n            });\n            if (addresses && addresses.length > 0) {\n                let nameSpaceResponse = {\n                    namespace: protocol_1.NameSpaceKeySOL,\n                    addresses: addresses,\n                    methods: [...InjectUtils_1.SOLANAMethods],\n                    extra: extra\n                };\n                (0, utils_1.logDebug)(\"parseConnectResponse nameSpaceResponse :\", JSON.stringify(nameSpaceResponse));\n                return nameSpaceResponse;\n            }\n            return undefined;\n        });\n    }\n}\nexports.SolProvider = SolProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TONProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass TONProvider {\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                (0, utils_1.logDebug)(\"TONProvider send request:\", (0, utils_1.safeJsonStringify)(request));\n                // await this.restoreConnect()//To initialize data in Discover\n                let tonParams = null;\n                switch (request.method) {\n                    case \"ton_sendTransaction\":\n                        if (request.params) {\n                            tonParams = {\n                                method: \"sendTransaction\",\n                                params: [JSON.stringify(request.params)],\n                                id: Date.now().toString()\n                            };\n                            (0, utils_1.logDebug)(\"TONProvider tonParams first:\", JSON.stringify(tonParams));\n                        }\n                        break;\n                    default:\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n                if (tonParams) {\n                    const resultMe = yield window.okxTonWallet.tonconnect.send(tonParams);\n                    (0, utils_1.logDebug)(\"TONProvider send request result:\", (0, utils_1.safeJsonStringify)(resultMe));\n                    if (resultMe.error) {\n                        throw new protocol_1.OKXConnectError(resultMe.error.code, resultMe.error.message);\n                    }\n                    return {\n                        result: resultMe.result,\n                        method: request.method,\n                    };\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"Eip155Provider encountered an error:\", error);\n                throw error;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    restoreConnect() {\n        // if (isDevice(\"mobile\") && window.okxTonWallet){\n        //     return  window.okxTonWallet.tonconnect.restoreConnection()\n        // }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, connectWalletNameSpace, connectRequestWalletResponse) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeyTON) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                connectChain.forEach((chainStr) => {\n                    let currentChain = (0, utils_1.getChainId)(chainStr);\n                    let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                        return (addressItem.chainId === \"607\" && addressItem.coinType === 607)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                    if (selectedAddress) {\n                        addresses.push(chainStr + \":\" + selectedAddress.address);\n                        extra[chainStr] = {\n                            publicKey: selectedAddress.publicKey\n                        };\n                    }\n                });\n                (0, utils_1.logDebug)(\"tonprovider parseConnectResponse needPop and addresses: \", needPop, JSON.stringify(addresses));\n                if (addresses && addresses.length > 0) {\n                    let ton = connectWalletNameSpace.find(tonItem => {\n                        return tonItem.namespace === protocol_1.NameSpaceKeyTON;\n                    });\n                    (0, utils_1.logDebug)(\"tonprovider parseConnectResponse ton: \", JSON.stringify(ton));\n                    let tonResult = undefined;\n                    if (needPop) { //connect\n                        (0, utils_1.logDebug)(\"parseConnectResponse ton: \", JSON.stringify(ton));\n                        if (ton && ton.params && ton.params.manifestUrl) {\n                            let itmes = [ton.params.ton_addr];\n                            let params = {\n                                manifestUrl: ton.params.manifestUrl,\n                                items: itmes\n                            };\n                            if (ton.params.ton_proof) {\n                                itmes.push(ton.params.ton_proof);\n                            }\n                            (0, utils_1.logDebug)(\"parseConnectResponse ton connect params: \", JSON.stringify(params));\n                            tonResult = (yield window.okxTonWallet.tonconnect.connect(2, params));\n                        }\n                        else {\n                            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"manifestUrl is nil\");\n                        }\n                    }\n                    else { //restore connect\n                        (0, utils_1.logDebug)(\"parseConnectResponse restore ton: \", JSON.stringify(ton));\n                        if ((0, media_1.isDevice)(\"mobile\")) {\n                            let params = {\n                                manifestUrl: \"url\",\n                                items: [{ \"name\": \"ton_addr\" }]\n                            };\n                            (0, utils_1.logDebug)(\"parseConnectResponse ton mobile  connect params>>\", JSON.stringify(params));\n                            tonResult = (yield window.okxTonWallet.tonconnect.connect(2, params));\n                        }\n                        else {\n                            tonResult = (yield window.okxTonWallet.tonconnect.restoreConnection());\n                        }\n                    }\n                    (0, utils_1.logDebug)(\"parseConnectResponse ton connect result: \", JSON.stringify(tonResult));\n                    if (tonResult) {\n                        if (tonResult.event === \"connect_error\") {\n                            throw new protocol_1.OKXConnectError(tonResult.payload.code, tonResult.payload.message);\n                        }\n                        else {\n                            let ton_addr = tonResult.payload.items.find(item => item.name === \"ton_addr\");\n                            let ton_proof = tonResult.payload.items.find(item => item.name === \"ton_proof\");\n                            let nameSpaceResponse = {\n                                namespace: protocol_1.NameSpaceKeyTON,\n                                addresses: addresses,\n                                methods: [...InjectUtils_1.TONMethods],\n                                extra: extra,\n                                data: {\n                                    ton_addr: ton_addr,\n                                    ton_proof: ton_proof\n                                }\n                            };\n                            return nameSpaceResponse;\n                        }\n                    }\n                }\n                return undefined;\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"tonprovider parseConnectResponse error: \", JSON.stringify(error));\n                throw error;\n            }\n        });\n    }\n}\nexports.TONProvider = TONProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Eip155Provider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass Eip155Provider {\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                (0, utils_1.logDebug)(\"Eip155Provider send request:\", (0, utils_1.safeJsonStringify)(request));\n                yield this.restoreConnect(); //To initialize data in Discover\n                let ethParams = null;\n                switch (request.method) {\n                    case \"personal_sign\":\n                        if (request.params && \"message\" in request.params) {\n                            ethParams = {\n                                method: request.method,\n                                params: [\n                                    request.params.message,\n                                    request.address,\n                                ],\n                            };\n                        }\n                        break;\n                    case \"eth_sendTransaction\":\n                    case \"wallet_addEthereumChain\":\n                    case \"wallet_switchEthereumChain\":\n                        {\n                            if (request.params) {\n                                ethParams = {\n                                    method: request.method,\n                                    params: [request.params],\n                                };\n                            }\n                        }\n                        break;\n                    case \"eth_signTypedData_v4\":\n                        {\n                            if (request.params && \"typedDataJson\" in request.params && ((_a = request.params) === null || _a === void 0 ? void 0 : _a.typedDataJson) && typeof request.params.typedDataJson === \"string\") {\n                                ethParams = {\n                                    method: request.method,\n                                    params: [\n                                        request.address,\n                                        request.params.typedDataJson,\n                                    ],\n                                };\n                            }\n                        }\n                        break;\n                    case \"wallet_watchAsset\":\n                        {\n                            if (request.params) {\n                                ethParams = {\n                                    method: request.method,\n                                    params: request.params,\n                                };\n                            }\n                        }\n                        break;\n                    default:\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n                if (ethParams) {\n                    // 特殊处理 \"wallet_switchEthereumChain\"\n                    if ((request.method === \"wallet_switchEthereumChain\" || request.method === \"wallet_addEthereumChain\")\n                        && request.params\n                        && \"chainId\" in request.params) {\n                        (0, utils_1.logDebug)(\"Eip155Provider send request switch requestParams:\", (0, utils_1.safeJsonStringify)(ethParams));\n                        const switchChainId = parseInt(request.params.chainId, 16).toString();\n                        yield window.okxwallet.request(ethParams);\n                        const resultSwitch = `eip155:${switchChainId}:${request.address}`;\n                        (0, utils_1.logDebug)(\"Eip155Provider send request switch result:\", resultSwitch);\n                        return {\n                            result: resultSwitch,\n                            method: request.method,\n                        };\n                    }\n                    else {\n                        const chain = (0, utils_1.getChainId)(request.chainId);\n                        const chainHex = `0x${Number(chain).toString(16)}`;\n                        (0, utils_1.logDebug)(\"Eip155Provider current chainId:\", chain, chainHex);\n                        if (chainHex) {\n                            yield window.okxwallet.request({\n                                method: \"wallet_switchEthereumChain\",\n                                params: [{ chainId: chainHex }],\n                            });\n                            (0, utils_1.logDebug)(\"Eip155Provider send request requestParams:\", chainHex, (0, utils_1.safeJsonStringify)(ethParams));\n                            const resultMe = yield window.okxwallet.request(ethParams);\n                            (0, utils_1.logDebug)(\"Eip155Provider send request result:\", (0, utils_1.safeJsonStringify)(resultMe));\n                            return {\n                                result: resultMe,\n                                method: request.method,\n                            };\n                        }\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"Eip155Provider encountered an error:\", error);\n                throw error;\n            }\n        });\n    }\n    connectReady() {\n        return true;\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return window.okxwallet.request({ method: 'eth_requestAccounts' });\n        }\n        return Promise.resolve();\n    }\n    parseConnectResponse(needPop, connectWalletNameSpace, connectRequestWalletResponse) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeyEip155) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                connectChain.forEach((chainStr) => {\n                    let currentChain = (0, utils_1.getChainId)(chainStr);\n                    let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                        return (addressItem.chainId === currentChain && addressItem.coinType === 60)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                    if (selectedAddress) {\n                        addresses.push(chainStr + \":\" + selectedAddress.address);\n                        extra[chainStr] = {\n                            publicKey: selectedAddress.publicKey\n                        };\n                    }\n                });\n                if (addresses && addresses.length > 0) {\n                    let nameSpaceResponse = {\n                        namespace: protocol_1.NameSpaceKeyEip155,\n                        addresses: addresses,\n                        methods: [...InjectUtils_1.Eip55Methods],\n                        extra: extra\n                    };\n                    return nameSpaceResponse;\n                }\n                return undefined;\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n}\nexports.Eip155Provider = Eip155Provider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./eip155Provider\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SuiProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst media_1 = require(\"../../utils/media\");\nconst InjectUtils_1 = require(\"../InjectUtils\");\nclass SuiProvider {\n    constructor() {\n        // const GlobalWallet: {\n        //     [key: string]: any;\n        //     register: (wallet: any) => void;\n        // } = {\n        //     register: (wallet) => {\n        //         GlobalWallet[wallet.chainName] = wallet; // 动态添加属性\n        //     },\n        // }\n        // const event = new CustomEvent('wallet-standard:app-ready', { detail: GlobalWallet });\n        // window.dispatchEvent(event);\n        // this.suiWallet = GlobalWallet[\"suiMainnet\"]\n        this.suiWallet = window.okxwallet.sui;\n    }\n    checkRequireNameSpace(requireNameSpace, connectRequestWalletResponse) {\n        return Promise.resolve(true);\n    }\n    connectReady() {\n        return true;\n    }\n    getSuiPublicKey() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const suiAccount = yield this.suiWallet.features['standard:connect'].connect();\n            const publicKey = suiAccount.accounts[0].publicKey;\n            return publicKey;\n        });\n    }\n    parseConnectResponse(needPop, connectWalletNameSpace, connectRequestWalletResponse) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let connectChain = [];\n                connectWalletNameSpace.forEach(item => {\n                    if (item.namespace === protocol_1.NameSpaceKeySui) {\n                        connectChain.push(...item.chains);\n                    }\n                });\n                let addresses = [];\n                let extra = {};\n                if (connectChain.length == 0) {\n                    return undefined;\n                }\n                const suiPublicKey = yield this.getSuiPublicKey();\n                connectChain.forEach((chainStr) => {\n                    let currentChain = (0, utils_1.getChainId)(chainStr);\n                    let selectedAddress = connectRequestWalletResponse.address.find((addressItem) => {\n                        return (addressItem.coinType === 784)\n                            || (addressItem.namespaceChainId === chainStr);\n                    });\n                    if (selectedAddress) {\n                        addresses.push(chainStr + \":\" + selectedAddress.address);\n                        extra[chainStr] = {\n                            publicKey: suiPublicKey\n                        };\n                    }\n                });\n                if (addresses && addresses.length > 0) {\n                    let nameSpaceResponse = {\n                        namespace: protocol_1.NameSpaceKeySui,\n                        addresses: addresses,\n                        methods: [...InjectUtils_1.SuiMethods],\n                        extra: extra\n                    };\n                    return nameSpaceResponse;\n                }\n                return undefined;\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n    restoreConnect() {\n        if ((0, media_1.isDevice)(\"mobile\")) {\n            return this.suiWallet.features['standard:connect'].connect();\n        }\n        return Promise.resolve();\n    }\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this.restoreConnect();\n                (0, utils_1.logDebug)(\"suiProvider send request:\", JSON.stringify(request));\n                const method = request.method;\n                let result;\n                if (request.injectParams && this.suiWallet) {\n                    let originalRarams = request.injectParams;\n                    switch (method) {\n                        case \"sui_signTransactionBlock\":\n                            const injectSignResult = yield this.suiWallet.features['sui:signTransactionBlock'].signTransactionBlock(originalRarams);\n                            //{transactionBlockBytes: 'AAACAAhmAAAAAAAAAAAgcveY+LcJkCRT1LtVxlZh6eBBVKUGdl…7bLNXSJ4Qz1jZurage0aGdH6Zb+4CAAAAAAAAIAo1AAAAAAAA', hash: '2pxcesyfKVCs3EegDYUDeQ28m3V3tn5VR32aUZSdg3dc', signature: 'ADDzSloxm5wEQX4BaTMJEON9t/xGgZ66ybiy5uT4TUimdl6Q9/…NeA3YOy/QsAD4XwjQ0rSuNkeKyfNy+VZPtJsmnKWswbGHSw=='}\n                            result = {\n                                method: \"sui_signTransactionBlock\",\n                                result: injectSignResult.signature\n                            };\n                            break;\n                        case \"sui_signAndExecuteTransactionBlock\":\n                            const injectSendResult = yield this.suiWallet.features['sui:signAndExecuteTransactionBlock'].signAndExecuteTransactionBlock(originalRarams);\n                            result = {\n                                method: \"sui_signAndExecuteTransactionBlock\",\n                                result: injectSendResult.digest\n                            };\n                            break;\n                        case \"sui_signMessage\":\n                            const injectResult = yield this.suiWallet.features['sui:signMessage'].signMessage(originalRarams);\n                            result = {\n                                method: \"sui_signMessage\",\n                                result: injectResult.signature\n                            };\n                            break;\n                        case \"sui_signPersonalMessage\":\n                            const injectPersonalResult = yield this.suiWallet.features['sui:signPersonalMessage'].signPersonalMessage(originalRarams);\n                            result = {\n                                method: \"sui_signPersonalMessage\",\n                                result: injectPersonalResult.signature\n                            };\n                            break;\n                    }\n                }\n                return result;\n            }\n            catch (e) {\n                (0, utils_1.logDebug)(\"suiProvider send error:\", e);\n                throw e;\n            }\n        });\n    }\n}\nexports.SuiProvider = SuiProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TON_CHAINS = exports.COSMOS_CHAINS = exports.APTOS_CHAINS = exports.SUI_CHAINS = exports.SOLANA_CHAINS = exports.BTC_CHAINS = void 0;\nexports.BTC_CHAINS = {\n    MAINNET: 'btc:mainnet',\n    FRACTAL: 'fractal:mainnet',\n};\nexports.SOLANA_CHAINS = {\n    MAINNET: 'solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp',\n    TESTNET: 'solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z',\n    SONIC_TESTNET: 'sonic:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z'\n};\nexports.SUI_CHAINS = {\n    MAINNET: 'sui:mainnet'\n};\nexports.APTOS_CHAINS = {\n    MAINNET: 'aptos:mainnet' // aptos mainnet\n};\nexports.COSMOS_CHAINS = {\n    COSMOS_MAINNET: 'cosmos:cosmoshub-4'\n};\nexports.TON_CHAINS = {\n    MAINNET: 'ton:-239', // mainnet\n};\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IEngine = exports.ISignClient = exports.ISignClientEvents = exports.IEngineEvents = void 0;\nconst eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\nclass IEngineEvents extends eventemitter3_1.default {\n    constructor() {\n        super();\n    }\n}\nexports.IEngineEvents = IEngineEvents;\nclass ISignClientEvents extends eventemitter3_1.default {\n    constructor() {\n        super();\n    }\n}\nexports.ISignClientEvents = ISignClientEvents;\nclass ISignClient {\n    constructor(data) {\n        this.data = data;\n    }\n}\nexports.ISignClient = ISignClient;\nclass IEngine {\n    constructor(client) {\n        this.client = client;\n    }\n}\nexports.IEngine = IEngine;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXWalletName = exports.creatOKXInjectWalletInfo = exports.creatOKXMiniAppWalletInfo = exports.creatOKXWalletInfo = exports.ISignClientEvents = exports.IEngine = exports.IEngineEvents = exports.ISignClient = exports.getBigIntRpcId = exports.formatJsonRpcRequest = exports.isJsonRpcError = exports.isJsonRpcResponse = exports.parseConnectionError = exports.isHttpUrl = exports.formatJsonRpcError = void 0;\nvar json_rpc_1 = require(\"./json-rpc\");\nObject.defineProperty(exports, \"formatJsonRpcError\", { enumerable: true, get: function () { return json_rpc_1.formatJsonRpcError; } });\nObject.defineProperty(exports, \"isHttpUrl\", { enumerable: true, get: function () { return json_rpc_1.isHttpUrl; } });\nObject.defineProperty(exports, \"parseConnectionError\", { enumerable: true, get: function () { return json_rpc_1.parseConnectionError; } });\nObject.defineProperty(exports, \"isJsonRpcResponse\", { enumerable: true, get: function () { return json_rpc_1.isJsonRpcResponse; } });\nObject.defineProperty(exports, \"isJsonRpcError\", { enumerable: true, get: function () { return json_rpc_1.isJsonRpcError; } });\nObject.defineProperty(exports, \"formatJsonRpcRequest\", { enumerable: true, get: function () { return json_rpc_1.formatJsonRpcRequest; } });\nObject.defineProperty(exports, \"getBigIntRpcId\", { enumerable: true, get: function () { return json_rpc_1.getBigIntRpcId; } });\nvar engine_1 = require(\"./engine\");\nObject.defineProperty(exports, \"ISignClient\", { enumerable: true, get: function () { return engine_1.ISignClient; } });\nObject.defineProperty(exports, \"IEngineEvents\", { enumerable: true, get: function () { return engine_1.IEngineEvents; } });\nObject.defineProperty(exports, \"IEngine\", { enumerable: true, get: function () { return engine_1.IEngine; } });\nObject.defineProperty(exports, \"ISignClientEvents\", { enumerable: true, get: function () { return engine_1.ISignClientEvents; } });\n__exportStar(require(\"./ton\"), exports);\nvar wallet_info_1 = require(\"./wallet-info\");\nObject.defineProperty(exports, \"creatOKXWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXWalletInfo; } });\nObject.defineProperty(exports, \"creatOKXMiniAppWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXMiniAppWalletInfo; } });\nObject.defineProperty(exports, \"creatOKXInjectWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXInjectWalletInfo; } });\nObject.defineProperty(exports, \"OKXWalletName\", { enumerable: true, get: function () { return wallet_info_1.OKXWalletName; } });\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isJsonRpcPayload = isJsonRpcPayload;\nexports.isJsonRpcRequest = isJsonRpcRequest;\nexports.isJsonRpcResponse = isJsonRpcResponse;\nexports.isJsonRpcResult = isJsonRpcResult;\nexports.isJsonRpcError = isJsonRpcError;\nexports.payloadId = payloadId;\nexports.getBigIntRpcId = getBigIntRpcId;\nexports.formatJsonRpcRequest = formatJsonRpcRequest;\nexports.formatJsonRpcResult = formatJsonRpcResult;\nexports.formatJsonRpcError = formatJsonRpcError;\nexports.isReservedErrorCode = isReservedErrorCode;\nexports.getError = getError;\nexports.getErrorByCode = getErrorByCode;\nexports.formatErrorMessage = formatErrorMessage;\nexports.isHttpUrl = isHttpUrl;\nexports.isWsUrl = isWsUrl;\nexports.parseConnectionError = parseConnectionError;\nfunction isJsonRpcPayload(payload) {\n    return (typeof payload === \"object\" &&\n        \"id\" in payload &&\n        \"jsonrpc\" in payload &&\n        payload.jsonrpc === \"2.0\");\n}\nfunction isJsonRpcRequest(payload) {\n    return isJsonRpcPayload(payload) && \"method\" in payload;\n}\nfunction isJsonRpcResponse(payload) {\n    return isJsonRpcPayload(payload) && (isJsonRpcResult(payload) || isJsonRpcError(payload));\n}\nfunction isJsonRpcResult(payload) {\n    return \"result\" in payload;\n}\nfunction isJsonRpcError(payload) {\n    return \"error\" in payload;\n}\nconst okx_connect_error_1 = require(\"../error/okx-connect.error\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nclass IncrementalRandomGenerator {\n    constructor(bits) {\n        this.i = 1;\n        const typedArray = bits === 8 ? new Uint8Array(1) : bits === 16 ? new Uint16Array(1) : new Uint32Array(1);\n        if (bits) {\n            this.initialValue = tweetnacl_1.default.randomBytes(bits / 8)[0];\n        }\n        else {\n            this.initialValue = 0;\n        }\n    }\n    getNextValue() {\n        return this.initialValue + this.i++;\n    }\n}\nconst uint8Generator = new IncrementalRandomGenerator(8);\nconst uint16Generator = new IncrementalRandomGenerator(16);\nfunction payloadId() {\n    const date = Date.now() * 1000;\n    const extra = uint8Generator.getNextValue();\n    return date + extra;\n}\nfunction getBigIntRpcId() {\n    const date = BigInt(Date.now()) * BigInt(1000000);\n    const extra = BigInt(uint16Generator.getNextValue());\n    return date + extra;\n}\nfunction formatJsonRpcRequest(method, params, id) {\n    return {\n        id: id || payloadId(),\n        jsonrpc: \"2.0\",\n        method,\n        params,\n    };\n}\nfunction formatJsonRpcResult(id, result) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        result,\n    };\n}\nfunction formatJsonRpcError(id, error, data) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        error: formatErrorMessage(error, data),\n    };\n}\nfunction isReservedErrorCode(code) {\n    return okx_connect_error_1.RESERVED_ERROR_CODES.includes(code);\n}\nfunction getError(type) {\n    if (!Object.keys(okx_connect_error_1.STANDARD_ERROR_MAP).includes(type)) {\n        return okx_connect_error_1.STANDARD_ERROR_MAP[okx_connect_error_1.DEFAULT_ERROR];\n    }\n    return okx_connect_error_1.STANDARD_ERROR_MAP[type];\n}\nfunction getErrorByCode(code) {\n    const match = Object.values(okx_connect_error_1.STANDARD_ERROR_MAP).find((e) => e.code === code);\n    if (!match) {\n        return okx_connect_error_1.STANDARD_ERROR_MAP[okx_connect_error_1.DEFAULT_ERROR];\n    }\n    return match;\n}\nfunction formatErrorMessage(error, data) {\n    if (typeof error === \"undefined\") {\n        return getError(okx_connect_error_1.INTERNAL_ERROR);\n    }\n    if (typeof error === \"string\") {\n        error = Object.assign(Object.assign({}, getError(okx_connect_error_1.SERVER_ERROR)), { message: error });\n    }\n    if (typeof data !== \"undefined\") {\n        error.data = data;\n    }\n    if (isReservedErrorCode(error.code)) {\n        error = getErrorByCode(error.code);\n    }\n    return error;\n}\nfunction getUrlProtocol(url) {\n    const matches = url.match(new RegExp(/^\\w+:/, \"gi\"));\n    if (!matches || !matches.length)\n        return;\n    return matches[0];\n}\nfunction matchRegexProtocol(url, regex) {\n    const protocol = getUrlProtocol(url);\n    if (typeof protocol === \"undefined\")\n        return false;\n    return new RegExp(regex).test(protocol);\n}\nfunction isHttpUrl(url) {\n    return matchRegexProtocol(url, \"^https?:\");\n}\nfunction isWsUrl(url) {\n    return matchRegexProtocol(url, \"^wss?:\");\n}\nfunction parseConnectionError(e, url, type) {\n    return e.message.includes(\"getaddrinfo ENOTFOUND\") || e.message.includes(\"connect ECONNREFUSED\")\n        ? new Error(`Unavailable ${type} RPC url at ${url}`)\n        : e;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_ITEM_ERROR_CODES = void 0;\nvar CONNECT_ITEM_ERROR_CODES;\n(function (CONNECT_ITEM_ERROR_CODES) {\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n})(CONNECT_ITEM_ERROR_CODES || (exports.CONNECT_ITEM_ERROR_CODES = CONNECT_ITEM_ERROR_CODES = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TONCHAIN = void 0;\nvar TONCHAIN;\n(function (TONCHAIN) {\n    TONCHAIN[\"MAINNET\"] = \"-239\";\n})(TONCHAIN || (exports.TONCHAIN = TONCHAIN = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_ITEM_ERROR_CODES = exports.TONCHAIN = void 0;\nvar connect_wallet_1 = require(\"./connect-wallet\");\nObject.defineProperty(exports, \"TONCHAIN\", { enumerable: true, get: function () { return connect_wallet_1.TONCHAIN; } });\nvar connect_event_1 = require(\"./connect-event\");\nObject.defineProperty(exports, \"CONNECT_ITEM_ERROR_CODES\", { enumerable: true, get: function () { return connect_event_1.CONNECT_ITEM_ERROR_CODES; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXInjectWalletName = exports.OKXMiniWalletName = exports.OKXWalletName = void 0;\nexports.creatOKXWalletInfo = creatOKXWalletInfo;\nexports.creatOKXMiniAppWalletInfo = creatOKXMiniAppWalletInfo;\nexports.creatOKXInjectWalletInfo = creatOKXInjectWalletInfo;\nexports.OKXWalletName = \"OKX Wallet\";\nexports.OKXMiniWalletName = \"OKX Mini Wallet\";\nexports.OKXInjectWalletName = \"OKX Inject Wallet\";\nfunction creatOKXWalletInfo() {\n    return {\n        \"appName\": \"okxAppWallet\",\n        \"name\": exports.OKXWalletName,\n        \"imageUrl\": \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\"\n    };\n}\nfunction creatOKXMiniAppWalletInfo() {\n    return {\n        \"appName\": \"okxMiniApp\",\n        \"name\": exports.OKXMiniWalletName,\n        \"imageUrl\": \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\"\n    };\n}\nfunction creatOKXInjectWalletInfo() {\n    return {\n        \"appName\": \"okxInjectWallet\",\n        \"name\": exports.OKXInjectWalletName,\n        \"imageUrl\": \"\"\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_MINI_WALLET_NAME = exports.OKX_APP_WALLET_NAME = exports.stackDeepLink = exports.tgwalletAppName = exports.tgwalletName = exports.tonConnectSdkVersion = exports.shortUniversalLink = exports.standardDeeplink = exports.downloadUrl = exports.standardUniversalLink = exports.okxDeeplink = void 0;\nexports.getTestTwaUrl = getTestTwaUrl;\nexports.getTestTgTwaUrl = getTestTgTwaUrl;\nexports.getBotNameAndAppName = getBotNameAndAppName;\nexports.okxDeeplink = 'okx://web3';\nexports.standardUniversalLink = typeof window !== \"undefined\" && window.location.hostname.includes(\"okx.com\")\n    ? \"https://link.okx.com/download\"\n    : \"https://www.okx.com/download\";\nexports.downloadUrl = \"https://www.okx.com/download\";\n// export const standardUniversalLink = 'http://localhost:5173';\nexports.standardDeeplink = `${exports.okxDeeplink}/wallet/connect`;\nexports.shortUniversalLink = `https://www.okx.com/ul/connect`;\n// export const standardDeeplink = 'http://localhost:5173';\nexports.tonConnectSdkVersion = '1';\n// export const tgwalletName: string = \"TCTestqdqwdqwdqBot\"\nexports.tgwalletName = \"OKX_WALLET_BOT\";\nexports.tgwalletAppName = \"start\";\n// https://t.me/OKX_WALLET_BOT/start\nexports.stackDeepLink = 'okx://web3?stack=true';\nfunction getTestTwaUrl() {\n    return window.okxTesttwaUrl;\n}\nfunction getTestTgTwaUrl() {\n    return window.okxTestTgtwaUrl;\n}\nfunction getBotNameAndAppName(url) {\n    const urlObj = new URL(url);\n    const pathnameParts = urlObj.pathname.split('/').filter(Boolean);\n    if (pathnameParts.length >= 2) {\n        const botName = pathnameParts[0]; // 获取 'test_12312313123_bot'\n        const appName = pathnameParts[1]; // 获取 'testtest'\n        return { botName, appName };\n    }\n}\nexports.OKX_APP_WALLET_NAME = 'OKX Wallet';\nexports.OKX_MINI_WALLET_NAME = 'OKX Mini Wallet';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_CONNECT_ERROR_CODES = exports.OKXConnectError = void 0;\nvar okx_connect_error_1 = require(\"./okx-connect.error\");\nObject.defineProperty(exports, \"OKXConnectError\", { enumerable: true, get: function () { return okx_connect_error_1.OKXConnectError; } });\nObject.defineProperty(exports, \"OKX_CONNECT_ERROR_CODES\", { enumerable: true, get: function () { return okx_connect_error_1.OKX_CONNECT_ERROR_CODES; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEFAULT_ERROR = exports.STANDARD_ERROR_MAP = exports.SERVER_ERROR_CODE_RANGE = exports.RESERVED_ERROR_CODES = exports.SERVER_ERROR = exports.INTERNAL_ERROR = exports.INVALID_PARAMS = exports.METHOD_NOT_FOUND = exports.INVALID_REQUEST = exports.PARSE_ERROR = exports.OKX_CONNECT_ERROR_CODES = exports.OKXConnectError = void 0;\nclass OKXConnectError extends Error {\n    constructor(code, message) {\n        if (message == undefined) {\n            message = getDefaultMessageByCode(code);\n        }\n        super(message);\n        this.code = code;\n        this.message = `${OKXConnectError.prefix} ${message ? '\\n' + message : ''}`;\n        Object.setPrototypeOf(this, OKXConnectError.prototype);\n    }\n    toJSON() {\n        return {\n            message: this.message,\n            code: this.code\n        };\n    }\n}\nexports.OKXConnectError = OKXConnectError;\nOKXConnectError.prefix = '[OKX_CONNECT_SDK_ERROR]';\nfunction getDefaultMessageByCode(code) {\n    if (code == OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR) {\n        return \"unknown error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR) {\n        return \"bad request error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.ALREADY_CONNECTED_ERROR) {\n        return \"already connected error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR) {\n        return \"not connected error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.UNKNOWN_APP_ERROR) {\n        return \"unknown app error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n        return \"user rejects error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR_CAUSE_REGISTER) {\n        return \"wallet address are registering\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED) {\n        return \"method not supported\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.CONNECTION_ERROR) {\n        return \"connect error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED) {\n        return \"chain not supported\";\n    }\n    return \"unknown error\";\n}\nvar OKX_CONNECT_ERROR_CODES;\n(function (OKX_CONNECT_ERROR_CODES) {\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"BAD_REQUEST_ERROR\"] = 1] = \"BAD_REQUEST_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"ALREADY_CONNECTED_ERROR\"] = 11] = \"ALREADY_CONNECTED_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"NOT_CONNECTED_ERROR\"] = 12] = \"NOT_CONNECTED_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"UNKNOWN_APP_ERROR\"] = 100] = \"UNKNOWN_APP_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"USER_REJECTS_ERROR\"] = 300] = \"USER_REJECTS_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"USER_REJECTS_ERROR_CAUSE_REGISTER\"] = 301] = \"USER_REJECTS_ERROR_CAUSE_REGISTER\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"CHAIN_NOT_SUPPORTED\"] = 500] = \"CHAIN_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"WALLET_NOT_SUPPORTED\"] = 600] = \"WALLET_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"CONNECTION_ERROR\"] = 700] = \"CONNECTION_ERROR\";\n})(OKX_CONNECT_ERROR_CODES || (exports.OKX_CONNECT_ERROR_CODES = OKX_CONNECT_ERROR_CODES = {}));\nexports.PARSE_ERROR = \"PARSE_ERROR\";\nexports.INVALID_REQUEST = \"INVALID_REQUEST\";\nexports.METHOD_NOT_FOUND = \"METHOD_NOT_FOUND\";\nexports.INVALID_PARAMS = \"INVALID_PARAMS\";\nexports.INTERNAL_ERROR = \"INTERNAL_ERROR\";\nexports.SERVER_ERROR = \"SERVER_ERROR\";\nexports.RESERVED_ERROR_CODES = [-32700, -32600, -32601, -32602, -32603];\nexports.SERVER_ERROR_CODE_RANGE = [-32000, -32099];\nexports.STANDARD_ERROR_MAP = {\n    [exports.PARSE_ERROR]: { code: -32700, message: \"Parse error\" },\n    [exports.INVALID_REQUEST]: { code: -32600, message: \"Invalid Request\" },\n    [exports.METHOD_NOT_FOUND]: { code: -32601, message: \"Method not found\" },\n    [exports.INVALID_PARAMS]: { code: -32602, message: \"Invalid params\" },\n    [exports.INTERNAL_ERROR]: { code: -32603, message: \"Internal error\" },\n    [exports.SERVER_ERROR]: { code: -32000, message: \"Server error\" },\n};\nexports.DEFAULT_ERROR = exports.SERVER_ERROR;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TON_CHAINS = exports.COSMOS_CHAINS = exports.APTOS_CHAINS = exports.SUI_CHAINS = exports.SOLANA_CHAINS = exports.BTC_CHAINS = exports.downloadUrl = exports.okxDeeplink = exports.tonConnectSdkVersion = exports.standardDeeplink = exports.standardUniversalLink = exports.NameSpaceKeyStarknet = exports.NameSpaceKeyTron = exports.NameSpaceKeyCosmos = exports.NameSpaceKeyAptos = exports.NameSpaceKeyBtc = exports.NameSpaceKeySui = exports.NameSpaceKeyTON = exports.NameSpaceKeySOL = exports.NameSpaceKeyEip155 = void 0;\n__exportStar(require(\"./error\"), exports);\nvar misc_1 = require(\"./misc\");\nObject.defineProperty(exports, \"NameSpaceKeyEip155\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyEip155; } });\nObject.defineProperty(exports, \"NameSpaceKeySOL\", { enumerable: true, get: function () { return misc_1.NameSpaceKeySOL; } });\nObject.defineProperty(exports, \"NameSpaceKeyTON\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyTON; } });\nObject.defineProperty(exports, \"NameSpaceKeySui\", { enumerable: true, get: function () { return misc_1.NameSpaceKeySui; } });\nObject.defineProperty(exports, \"NameSpaceKeyBtc\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyBtc; } });\nObject.defineProperty(exports, \"NameSpaceKeyAptos\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyAptos; } });\nObject.defineProperty(exports, \"NameSpaceKeyCosmos\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyCosmos; } });\nObject.defineProperty(exports, \"NameSpaceKeyTron\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyTron; } });\nObject.defineProperty(exports, \"NameSpaceKeyStarknet\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyStarknet; } });\nvar constants_1 = require(\"./constants\");\nObject.defineProperty(exports, \"standardUniversalLink\", { enumerable: true, get: function () { return constants_1.standardUniversalLink; } });\nObject.defineProperty(exports, \"standardDeeplink\", { enumerable: true, get: function () { return constants_1.standardDeeplink; } });\nObject.defineProperty(exports, \"tonConnectSdkVersion\", { enumerable: true, get: function () { return constants_1.tonConnectSdkVersion; } });\nObject.defineProperty(exports, \"okxDeeplink\", { enumerable: true, get: function () { return constants_1.okxDeeplink; } });\nObject.defineProperty(exports, \"downloadUrl\", { enumerable: true, get: function () { return constants_1.downloadUrl; } });\n__exportStar(require(\"./connect\"), exports);\nvar chains_1 = require(\"./chains\");\nObject.defineProperty(exports, \"BTC_CHAINS\", { enumerable: true, get: function () { return chains_1.BTC_CHAINS; } });\nObject.defineProperty(exports, \"SOLANA_CHAINS\", { enumerable: true, get: function () { return chains_1.SOLANA_CHAINS; } });\nObject.defineProperty(exports, \"SUI_CHAINS\", { enumerable: true, get: function () { return chains_1.SUI_CHAINS; } });\nObject.defineProperty(exports, \"APTOS_CHAINS\", { enumerable: true, get: function () { return chains_1.APTOS_CHAINS; } });\nObject.defineProperty(exports, \"COSMOS_CHAINS\", { enumerable: true, get: function () { return chains_1.COSMOS_CHAINS; } });\nObject.defineProperty(exports, \"TON_CHAINS\", { enumerable: true, get: function () { return chains_1.TON_CHAINS; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NameSpaceKeyStarknet = exports.NameSpaceKeyTron = exports.NameSpaceKeyCosmos = exports.NameSpaceKeyAptos = exports.NameSpaceKeyBtc = exports.NameSpaceKeySui = exports.NameSpaceKeyTON = exports.NameSpaceKeySOL = exports.NameSpaceKeyEip155 = void 0;\nexports.NameSpaceKeyEip155 = \"eip155\";\nexports.NameSpaceKeySOL = \"solana\";\nexports.NameSpaceKeyTON = \"ton\";\nexports.NameSpaceKeySui = \"sui\";\nexports.NameSpaceKeyBtc = \"btc\";\nexports.NameSpaceKeyAptos = \"aptos\";\nexports.NameSpaceKeyCosmos = \"cosmos\";\nexports.NameSpaceKeyTron = \"tron\";\nexports.NameSpaceKeyStarknet = \"starknet\";\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.callForSuccess = callForSuccess;\nexports.delay = delay;\n/**\n * Function to call ton api until we get response.\n * Because ton network is pretty unstable we need to make sure response is final.\n * @param {T} fn - function to call\n * @param {CallForSuccessOptions} [options] - optional configuration options\n */\nfunction callForSuccess(fn, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b;\n        const attempts = (_a = options === null || options === void 0 ? void 0 : options.attempts) !== null && _a !== void 0 ? _a : 3;\n        const delayMs = (_b = options === null || options === void 0 ? void 0 : options.delayMs) !== null && _b !== void 0 ? _b : 800;\n        if (typeof fn !== 'function') {\n            throw new Error(`Expected a function, got ${typeof fn}`);\n        }\n        let i = 0;\n        let lastError;\n        while (i < attempts) {\n            try {\n                return yield fn();\n            }\n            catch (err) {\n                lastError = err;\n                i++;\n                if (i < attempts) {\n                    yield delay(delayMs);\n                }\n            }\n        }\n        throw lastError;\n    });\n}\n/**\n * Delays the execution of code for a specified number of milliseconds.\n * @param {number} timeout - The number of milliseconds to delay the execution.\n * @param {DelayOptions} [options] - Optional configuration options for the delay.\n * @return {Promise<void>} - A promise that resolves after the specified delay, or rejects if the delay is aborted.\n */\nfunction delay(timeout, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            var _a, _b;\n            if ((_a = options === null || options === void 0 ? void 0 : options.signal) === null || _a === void 0 ? void 0 : _a.aborted) {\n                reject(new Error('Delay aborted'));\n                return;\n            }\n            const timeoutId = setTimeout(() => resolve(), timeout);\n            (_b = options === null || options === void 0 ? void 0 : options.signal) === null || _b === void 0 ? void 0 : _b.addEventListener('abort', () => {\n                clearTimeout(timeoutId);\n                reject(new Error('Delay aborted'));\n            });\n        });\n    });\n}\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkMetaData = exports.versionCompare = exports.isBrowser = exports.isOS = exports.isMobileUserAgent = exports.openDeeplinkWithFallback = exports.openLinkBlank = exports.openLink = exports.getChainId = exports.useShortLink = exports.toSafeBase64FromBase64 = exports.isValidObject = exports.isIos = exports.base64decode = exports.base64encode = exports.splitToUint8Arrays = exports.concatUint8Arrays = exports.toHexString = exports.hexToByteArray = exports.getOKXLink = exports.openOKXUniversalLink = exports.getAppWalletShortDeepLink = exports.encodeTWAConnectURLParams = exports.encodeConnectParams = exports.openOKXTMAWalletlinkWithFallback = exports.getTelegramWalletTWAUrl = exports.getAppWalletDeepLink = exports.encodeTelegramUrlParameters = exports.isTelegramUrl = exports.openOKXDeeplinkWithFallback = exports.openOKXDeeplink = exports.getUniversalLink = exports.safeJsonStringify = exports.safeJsonParse = exports.getDefaultReporter = exports.reportEvent = exports.reportLog = exports.logWarning = exports.logError = exports.logDebug = exports.callForSuccess = void 0;\nvar call_for_success_1 = require(\"./call-for-success\");\nObject.defineProperty(exports, \"callForSuccess\", { enumerable: true, get: function () { return call_for_success_1.callForSuccess; } });\nvar log_1 = require(\"./log\");\nObject.defineProperty(exports, \"logDebug\", { enumerable: true, get: function () { return log_1.logDebug; } });\nObject.defineProperty(exports, \"logError\", { enumerable: true, get: function () { return log_1.logError; } });\nObject.defineProperty(exports, \"logWarning\", { enumerable: true, get: function () { return log_1.logWarning; } });\nObject.defineProperty(exports, \"reportLog\", { enumerable: true, get: function () { return log_1.reportLog; } });\nObject.defineProperty(exports, \"reportEvent\", { enumerable: true, get: function () { return log_1.reportEvent; } });\nObject.defineProperty(exports, \"getDefaultReporter\", { enumerable: true, get: function () { return log_1.getDefaultReporter; } });\n__exportStar(require(\"./reportconstants\"), exports);\n__exportStar(require(\"./report\"), exports);\nvar safejson_1 = require(\"./safejson\");\nObject.defineProperty(exports, \"safeJsonParse\", { enumerable: true, get: function () { return safejson_1.safeJsonParse; } });\nObject.defineProperty(exports, \"safeJsonStringify\", { enumerable: true, get: function () { return safejson_1.safeJsonStringify; } });\nvar url_1 = require(\"./url\");\nObject.defineProperty(exports, \"getUniversalLink\", { enumerable: true, get: function () { return url_1.getUniversalLink; } });\nObject.defineProperty(exports, \"openOKXDeeplink\", { enumerable: true, get: function () { return url_1.openOKXDeeplink; } });\nObject.defineProperty(exports, \"openOKXDeeplinkWithFallback\", { enumerable: true, get: function () { return url_1.openOKXDeeplinkWithFallback; } });\nObject.defineProperty(exports, \"isTelegramUrl\", { enumerable: true, get: function () { return url_1.isTelegramUrl; } });\nObject.defineProperty(exports, \"encodeTelegramUrlParameters\", { enumerable: true, get: function () { return url_1.encodeTelegramUrlParameters; } });\nObject.defineProperty(exports, \"getAppWalletDeepLink\", { enumerable: true, get: function () { return url_1.getAppWalletDeepLink; } });\nObject.defineProperty(exports, \"getTelegramWalletTWAUrl\", { enumerable: true, get: function () { return url_1.getTelegramWalletTWAUrl; } });\nObject.defineProperty(exports, \"openOKXTMAWalletlinkWithFallback\", { enumerable: true, get: function () { return url_1.openOKXTMAWalletlinkWithFallback; } });\nObject.defineProperty(exports, \"encodeConnectParams\", { enumerable: true, get: function () { return url_1.encodeConnectParams; } });\nObject.defineProperty(exports, \"encodeTWAConnectURLParams\", { enumerable: true, get: function () { return url_1.encodeTWAConnectURLParams; } });\nObject.defineProperty(exports, \"getAppWalletShortDeepLink\", { enumerable: true, get: function () { return url_1.getAppWalletShortDeepLink; } });\nObject.defineProperty(exports, \"openOKXUniversalLink\", { enumerable: true, get: function () { return url_1.openOKXUniversalLink; } });\nObject.defineProperty(exports, \"getOKXLink\", { enumerable: true, get: function () { return url_1.getOKXLink; } });\nvar utils_1 = require(\"./utils\");\nObject.defineProperty(exports, \"hexToByteArray\", { enumerable: true, get: function () { return utils_1.hexToByteArray; } });\nObject.defineProperty(exports, \"toHexString\", { enumerable: true, get: function () { return utils_1.toHexString; } });\nObject.defineProperty(exports, \"concatUint8Arrays\", { enumerable: true, get: function () { return utils_1.concatUint8Arrays; } });\nObject.defineProperty(exports, \"splitToUint8Arrays\", { enumerable: true, get: function () { return utils_1.splitToUint8Arrays; } });\nObject.defineProperty(exports, \"base64encode\", { enumerable: true, get: function () { return utils_1.base64encode; } });\nObject.defineProperty(exports, \"base64decode\", { enumerable: true, get: function () { return utils_1.base64decode; } });\nObject.defineProperty(exports, \"isIos\", { enumerable: true, get: function () { return utils_1.isIos; } });\nObject.defineProperty(exports, \"isValidObject\", { enumerable: true, get: function () { return utils_1.isValidObject; } });\nObject.defineProperty(exports, \"toSafeBase64FromBase64\", { enumerable: true, get: function () { return utils_1.toSafeBase64FromBase64; } });\nObject.defineProperty(exports, \"useShortLink\", { enumerable: true, get: function () { return utils_1.useShortLink; } });\nObject.defineProperty(exports, \"getChainId\", { enumerable: true, get: function () { return utils_1.getChainId; } });\nvar web_api_1 = require(\"./web-api\");\nObject.defineProperty(exports, \"openLink\", { enumerable: true, get: function () { return web_api_1.openLink; } });\nObject.defineProperty(exports, \"openLinkBlank\", { enumerable: true, get: function () { return web_api_1.openLinkBlank; } });\nObject.defineProperty(exports, \"openDeeplinkWithFallback\", { enumerable: true, get: function () { return web_api_1.openDeeplinkWithFallback; } });\nObject.defineProperty(exports, \"isMobileUserAgent\", { enumerable: true, get: function () { return web_api_1.isMobileUserAgent; } });\nObject.defineProperty(exports, \"isOS\", { enumerable: true, get: function () { return web_api_1.isOS; } });\nObject.defineProperty(exports, \"isBrowser\", { enumerable: true, get: function () { return web_api_1.isBrowser; } });\nvar tma_api_1 = require(\"./tma-api\");\nObject.defineProperty(exports, \"versionCompare\", { enumerable: true, get: function () { return tma_api_1.versionCompare; } });\nvar request_1 = require(\"./request\");\nObject.defineProperty(exports, \"checkMetaData\", { enumerable: true, get: function () { return request_1.checkMetaData; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getDefaultReporter = getDefaultReporter;\nexports.logDebug = logDebug;\nexports.logError = logError;\nexports.logWarning = logWarning;\nexports.reportEvent = reportEvent;\nexports.reportLog = reportLog;\nconst debug = false;\nconst forceReport = false;\nconst report_1 = require(\"./report\");\nconst defaultReporter = new report_1.OKXReporter();\nfunction getDefaultReporter() {\n    return defaultReporter;\n}\nconst packageJson = require('../../package.json');\nconst version = packageJson.version;\nfunction logDebug(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.log(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction logError(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.error(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n            if (forceReport || !debug) {\n                let content = '';\n                content += [...args].reduce((result, item) => {\n                    if (typeof item == 'string') {\n                        result += ',' + item;\n                    }\n                    else if (typeof item == 'object') {\n                        result += JSON.stringify(item);\n                    }\n                });\n                defaultReporter.sendRecordContent(content, report_1.OKXReportType.LOG, '');\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction logWarning(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.warn(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction reportEvent(type, action, content) {\n    return __awaiter(this, void 0, void 0, function* () {\n        yield defaultReporter.sendRecordContent(content, type, action);\n    });\n}\nfunction reportLog(content_1) {\n    return __awaiter(this, arguments, void 0, function* (content, action = 'default') {\n        // await defaultReporter.sendRecordContent(content, OKXReportType.LOG, action)\n    });\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mediaNotTouch = exports.mediaTouch = exports.maxWidth = void 0;\nexports.isDevice = isDevice;\nexports.media = media;\nexports.mediaMin = mediaMin;\nexports.mediaMax = mediaMax;\nexports.mediaMinMax = mediaMinMax;\nconst web_api_1 = require(\"../utils/web-api\");\nconst tma_api_1 = require(\"../utils/tma-api\");\nconst url_1 = require(\"./url\");\nconst log_1 = require(\"./log\");\nexports.maxWidth = {\n    mobile: 440,\n    tablet: 1020\n};\nfunction isDevice(device) {\n    var _a;\n    const window = (0, url_1.getWindow)();\n    if (!window) {\n        return device === 'desktop';\n    }\n    // TODO: remove this check when weba will fix viewport width\n    if ((0, tma_api_1.isTmaPlatform)('weba')) {\n        return true;\n    }\n    const width = window.innerWidth;\n    switch (device) {\n        case 'desktop':\n            return width > exports.maxWidth.tablet;\n        case 'tablet':\n            return width > exports.maxWidth.mobile;\n        default:\n        case 'mobile':\n            let isMobile = width <= exports.maxWidth.mobile || (0, web_api_1.isOS)('ios', 'android', 'ipad');\n            if (isMobile) {\n                const isTelegram = !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n                const maxTouchPoints = navigator.maxTouchPoints || 0;\n                if (isTelegram && maxTouchPoints === 0) {\n                    isMobile = false;\n                }\n                (0, log_1.logDebug)(\"isDevice mobile isTelegram and maxTouchPoints:\", isMobile, isTelegram, maxTouchPoints);\n            }\n            return isMobile;\n    }\n}\nfunction media(device) {\n    switch (device) {\n        case 'mobile':\n            return `@media (max-width: ${exports.maxWidth.mobile}px)`;\n        case 'tablet':\n            return `@media (max-width: ${exports.maxWidth.tablet}px) (min-width: ${exports.maxWidth.mobile}px)`;\n        default:\n        case 'desktop':\n            return `@media (min-width: ${exports.maxWidth.tablet}px)`;\n    }\n}\nfunction mediaMin(px) {\n    return `@media (min-width: ${px}px)`;\n}\nfunction mediaMax(px) {\n    return `@media (max-width: ${px}px)`;\n}\nfunction mediaMinMax(pxMin, pxMax) {\n    return `@media (min-width: ${pxMin}px) and (max-width: ${pxMax}px)`;\n}\nexports.mediaTouch = '@media (hover: none)';\nexports.mediaNotTouch = '@media not all and (hover: none)';\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXReporter = exports.OKXReportSide = exports.OKXReportType = exports.versionStr = void 0;\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nconst log_1 = require(\"./log\");\nconst url_1 = require(\"./url\");\nconst utils_1 = require(\"../utils\");\nconst localforage_1 = __importDefault(require(\"localforage\"));\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nexports.versionStr = '1.6.5';\nconst reportApiList = [\n    'https://www.okx.com/dappstat/wallet-connect',\n    'https://www.okx.ac/dappstat/wallet-connect'\n];\nconst reportCacheKey = 'OKX_RP_CK';\nconst reportUUIDKey = 'OKX_RP_UUID_CK';\nconst MAX_LIMIT_REPORTCOUNT = 100;\nconst DEFAULT_HTTP_HEADERS = {\n    Accept: \"*/*\",\n    \"Content-Type\": \"text/plain\",\n};\nconst DEFAULT_HTTP_METHOD = \"POST\";\nconst DEFAULT_FETCH_OPTS = {\n    headers: DEFAULT_HTTP_HEADERS,\n    method: DEFAULT_HTTP_METHOD,\n};\nexports.OKXReportType = {\n    PAGE_IN: 'page_in',\n    PAGE_OUT: 'page_out',\n    CLICK: 'click',\n    LOG: 'log',\n};\nexports.OKXReportSide = {\n    DAPP: 'dapp',\n    WALLET: 'wallet',\n};\nclass IReporter {\n}\nconst fetchWithTimeout = (url, options, timeout = 5000) => {\n    const controller = new AbortController();\n    const signal = controller.signal;\n    const fetchPromise = (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, options), { signal }));\n    const timeoutPromise = new Promise((_, reject) => setTimeout(() => {\n        controller.abort();\n        reject(new Error('Request timed out'));\n    }, timeout));\n    return Promise.race([fetchPromise, timeoutPromise]);\n};\nconst fetchListWithTimeout = (urls_1, ...args_1) => __awaiter(void 0, [urls_1, ...args_1], void 0, function* (urls, options = {}, timeout = 5000) {\n    for (const url of urls) {\n        try {\n            const controller = new AbortController();\n            const signal = controller.signal;\n            const fetchPromise = (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, options), { signal }));\n            const timeoutPromise = new Promise((_, reject) => setTimeout(() => {\n                controller.abort();\n                reject(new Error('Request timed out'));\n            }, timeout));\n            const response = yield Promise.race([fetchPromise, timeoutPromise]);\n            if (response.ok) {\n                return response;\n            }\n            if (response.status == 502) {\n                console.error(`Fetch error status 502`, url);\n                return response;\n            }\n        }\n        catch (error) {\n            console.error(`Fetch error for ${url}:`, error);\n        }\n    }\n    console.error(`'All fetch attempts failed.'`);\n    throw new Error('All fetch attempts failed.');\n});\nclass OKXReporter {\n    constructor() {\n        this.currentSide = exports.OKXReportSide.DAPP;\n        this.currentVersion = exports.versionStr;\n        this.storage = localforage_1.default.createInstance({\n            name: \"OKXReporter\"\n        });\n        this.recordList = new Array();\n        this.currentUUID = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(16));\n    }\n    configVersionAndSide(version, side, appname) {\n        this.currentVersion = version;\n        this.currentSide = side;\n        this.appName = appname;\n    }\n    get recordCacheKey() {\n        return reportCacheKey + \"@\" + this.appName;\n    }\n    get reportPlatform() {\n        if ((0, utils_1.isMobileUserAgent)()) {\n            if ((0, utils_1.isIos)()) {\n                return 'iOS';\n            }\n            else {\n                return 'android';\n            }\n        }\n        else {\n            return 'pc';\n        }\n    }\n    beginReport() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.startErrorCatching();\n            let records = yield this.storage.getItem(this.recordCacheKey);\n            let uuid = yield this.storage.getItem(reportUUIDKey);\n            if (uuid) {\n                this.currentUUID = uuid;\n            }\n            else {\n                this.storage.setItem(reportUUIDKey, this.currentUUID);\n            }\n            if (records) {\n                this.recordList = records;\n                (0, log_1.logDebug)('resume records from cache length: ', this.recordList.length);\n                yield this.sendCachedRecords();\n            }\n        });\n    }\n    startErrorCatching() {\n        let window = (0, url_1.getWindow)();\n        if (window) {\n            (0, log_1.logDebug)('begin capture console error');\n            // window.onerror = (event: Event | string, source?: string, lineno?: number, colno?: number, error?: Error) => {\n            //     logDebug('capture error info:', error, source)\n            //     this.markRecord(error?.message+'/'+error?.name+'/'+error?.stack, OKXReportType.LOG, '', this.currentSide)\n            // }\n        }\n    }\n    cachedErrors() {\n        return this.recordList;\n    }\n    sendRecord(record) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    const body = JSON.stringify(record);\n                    (0, log_1.logDebug)('[REPORT] record: ', body);\n                    const res = yield fetchListWithTimeout(reportApiList, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body: body }));\n                    (0, log_1.logDebug)('[REPORT] get rsp:', res);\n                    if (res && res.status && res.status == 200) {\n                        this.recordList = this.recordList.filter((item) => {\n                            return item.timestamp != record.timestamp || item.content != record.content;\n                        });\n                        yield this.storage.setItem(this.recordCacheKey, this.recordList);\n                        resolve(true);\n                    }\n                    else {\n                        reject(false);\n                    }\n                }\n                catch (e) {\n                    (0, log_1.logDebug)('send record error:', e);\n                    resolve(true);\n                    // reject(e)\n                }\n            }));\n        });\n    }\n    sendRecordContent(content, type, action) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            let path = (_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.location.pathname;\n            let location = (_b = (0, url_1.getWindow)()) === null || _b === void 0 ? void 0 : _b.location.origin;\n            if (path && location) {\n                location = location + path;\n            }\n            let language = (_c = (0, url_1.getWindow)()) === null || _c === void 0 ? void 0 : _c.navigator.language;\n            let ua = (_d = (0, url_1.getWindow)()) === null || _d === void 0 ? void 0 : _d.navigator.userAgent;\n            let platform = this.reportPlatform;\n            let reportItem = {\n                uuid: this.currentUUID,\n                version: this.currentVersion,\n                content: content,\n                action: action,\n                side: this.currentSide,\n                timestamp: new Date().getTime(),\n                url: location,\n                lang: language,\n                type: type,\n                platform: platform,\n                \"user-agent\": ua\n            };\n            yield this.markRecordItem(reportItem);\n            yield this.sendRecord(reportItem);\n        });\n    }\n    sendCachedRecords() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let sendList = this.recordList.map(record => this.sendRecord(record));\n                (0, log_1.logDebug)('[REPORT] submit & clean recorded caches begin @', new Date().toUTCString());\n                Promise.allSettled(sendList).then((results) => {\n                    (0, log_1.logDebug)('[REPORT] submit & clean recorded caches ends @', new Date().toUTCString());\n                    let keepIndex = [];\n                    results.forEach((result, index) => {\n                        if (result.status == \"rejected\") {\n                            keepIndex.push(index);\n                        }\n                    });\n                    this.recordList = this.recordList.filter((_, index) => !keepIndex.includes(index));\n                    this.storage.setItem(this.recordCacheKey, this.recordList).then(function (value) {\n                        resolve();\n                    }).catch(function (err) {\n                        reject(err);\n                    });\n                });\n            }));\n        });\n    }\n    markRecordItem(item) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.recordList.push(item);\n            if (this.recordList.length > MAX_LIMIT_REPORTCOUNT) {\n                let offset = this.recordList.length - MAX_LIMIT_REPORTCOUNT;\n                this.recordList.splice(0, offset);\n            }\n            return new Promise((resolve, reject) => {\n                this.storage.setItem(this.recordCacheKey, this.recordList).then(function (value) {\n                    resolve(item);\n                }).catch(function (err) {\n                    reject(err);\n                });\n            });\n        });\n    }\n    markRecord(content, type, action, side) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            let path = (_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.location.pathname;\n            let location = (_b = (0, url_1.getWindow)()) === null || _b === void 0 ? void 0 : _b.location.origin;\n            if (path && location) {\n                location = location + path;\n            }\n            let language = (_c = (0, url_1.getWindow)()) === null || _c === void 0 ? void 0 : _c.navigator.language;\n            let platform = this.reportPlatform;\n            let ua = (_d = (0, url_1.getWindow)()) === null || _d === void 0 ? void 0 : _d.navigator.userAgent;\n            let reportItem = {\n                uuid: this.currentUUID,\n                version: this.currentVersion,\n                content: content,\n                action: action,\n                side: side,\n                timestamp: new Date().getTime(),\n                url: location,\n                lang: language,\n                type: type,\n                platform: platform,\n                \"user-agent\": ua\n            };\n            return yield this.markRecordItem(reportItem);\n        });\n    }\n}\nexports.OKXReporter = OKXReporter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Report_WalletType_Key = exports.Report_Proceed_QRCode_Click = exports.Report_ChooseType_Download_Click = exports.Report_ChooseType_ConnectWallet_Click = exports.Report_Proceed_Retry_Click = exports.Report_ChooseType_ConnectWallet_View = exports.Report_Loading_ConnectWallet_View = exports.Report_Proceed_QRCode_View = exports.Report_Proceed_Proceed_View = void 0;\nexports.Report_Proceed_Proceed_View = \"OKXConnectSDK_Proceed_Proceed_View\";\nexports.Report_Proceed_QRCode_View = \"OKXConnectSDK_Proceed_QRCode_View\";\nexports.Report_Loading_ConnectWallet_View = \"OKXConnectSDK_Loading_ConnectWallet_View\";\nexports.Report_ChooseType_ConnectWallet_View = \"OKXConnectSDK_ChooseType_ConnectWallet_View\";\nexports.Report_Proceed_Retry_Click = \"OKXConnectSDK_Proceed_Retry_Click\";\nexports.Report_ChooseType_ConnectWallet_Click = \"OKXConnectSDK_ChooseType_ConnectWallet_Click\";\nexports.Report_ChooseType_Download_Click = \"OKXConnectSDK_ChooseType_Download_Click\";\nexports.Report_Proceed_QRCode_Click = \"OKXConnectSDK_Proceed_QRCode_Click\";\nexports.Report_WalletType_Key = 'wallet_type';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkMetaData = checkMetaData;\nconst protocol_1 = require(\"../protocol\");\nfunction checkMetaData(dappMetaData) {\n    if (!dappMetaData) {\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"You have to specify a `dappMetaData`in the options.\");\n    }\n    if (!dappMetaData.name) {\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"dappName is required\");\n    }\n    if (!dappMetaData.icon) {\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"icon is required\");\n    }\n    return true;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.safeJsonParse = safeJsonParse;\nexports.safeJsonStringify = safeJsonStringify;\nconst log_1 = require(\"./log\");\nconst JSONStringify = (data) => JSON.stringify(data, (_, value) => (typeof value === \"bigint\" ? value.toString() + \"n\" : value));\n/*\n  Function to parse JSON.\n  If JSON has values in our custom format BigInt (strings with \"n\" character at the end), we just parse them to BigInt values.\n  If JSON has big number values, but not in our custom format, we copy it, and in a copy we convert those values to our custom format,\n  then parse them to BigInt values.\n  Other values (not big numbers and not our custom format BigInt values) are not affected and parsed as native JSON.parse() would parse them.\n*/\nconst JSONParse = (json) => {\n    /*\n      Big numbers are found and marked using Regex with this condition:\n      Number's length is bigger than 16 || Number's length is 16 and any numerical digit of the number is greater than that of the Number.MAX_SAFE_INTEGER\n      Additionally, it skips values that are strings (between double quotes).\n      */\n    // prettier-ignore\n    // eslint-disable-next-line no-useless-escape\n    const numbersBiggerThanMaxInt = /:(\\b\\d{17,}|\\b(?:[9](?:[1-9]07199254740991|0[1-9]7199254740991|00[8-9]199254740991|007[2-9]99254740991|007199[3-9]54740991|0071992[6-9]4740991|00719925[5-9]740991|007199254[8-9]40991|0071992547[5-9]0991|00719925474[1-9]991|00719925474099[2-9])))(?=[,\\}\\]]|$)/g;\n    const serializedData = json.replace(numbersBiggerThanMaxInt, (match, group) => `:\"${group}n\"`);\n    try {\n        return JSON.parse(serializedData, (_, value) => {\n            const isCustomFormatBigInt = typeof value === \"string\" && value.match(/^\\d+n$/);\n            if (isCustomFormatBigInt)\n                return BigInt(value.substring(0, value.length - 1));\n            return value;\n        });\n    }\n    catch (e) {\n        return JSON.parse(json);\n    }\n};\nfunction safeJsonParse(value) {\n    if (typeof value !== \"string\") {\n        (0, log_1.logDebug)(value);\n        throw new Error(`Cannot safe json parse value of type ${typeof value}`);\n    }\n    try {\n        return JSONParse(value);\n    }\n    catch (e) {\n        // eslint-disable-next-line no-console\n        console.error(\"safeJsonParse error:\", e);\n        return value;\n    }\n}\nfunction safeJsonStringify(value) {\n    return typeof value === \"string\" ? value : JSONStringify(value) || \"\";\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.okxfromString = okxfromString;\nexports.okxtoString = okxtoString;\nexports.alloc = alloc;\nexports.allocUnsafe = allocUnsafe;\nconst basics_1 = require(\"multiformats/basics\");\nconst log_1 = require(\"../utils/log\");\nfunction okxfromString(string, encoding = 'utf8') {\n    const base = BASES[encoding];\n    (0, log_1.logDebug)(\"okxfromstring ====> \");\n    if (!base) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    return base.decoder.decode(`${base.prefix}${string}`);\n}\nfunction okxtoString(array, encoding = 'utf8') {\n    const base = BASES[encoding];\n    (0, log_1.logDebug)(\"okxtoString ====> \");\n    if (!base) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    return base.encoder.encode(array).substring(1);\n}\nfunction alloc(size = 0) {\n    return new Uint8Array(size);\n}\nfunction allocUnsafe(size = 0) {\n    return new Uint8Array(size);\n}\nfunction createCodec(name, prefix, encode, decode) {\n    return {\n        name,\n        prefix,\n        encoder: {\n            name,\n            prefix,\n            encode\n        },\n        decoder: { decode }\n    };\n}\nconst string = createCodec('utf8', 'u', buf => {\n    const decoder = new TextDecoder('utf8');\n    return 'u' + decoder.decode(buf);\n}, str => {\n    const encoder = new TextEncoder();\n    return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', buf => {\n    let result = 'a';\n    for (let i = 0; i < buf.length; i++) {\n        let bufNum = buf[i];\n        if (bufNum && String.fromCharCode(bufNum)) {\n            result += String.fromCharCode(bufNum);\n        }\n    }\n    return result;\n}, str => {\n    str = str.substring(1);\n    const buf = allocUnsafe(str.length);\n    for (let i = 0; i < str.length; i++) {\n        buf[i] = str.charCodeAt(i);\n    }\n    return buf;\n});\nconst BASES = Object.assign({ utf8: string, 'utf-8': string, hex: basics_1.bases.base16, latin1: ascii, ascii: ascii, binary: ascii }, basics_1.bases);\n","\"use strict\";\nvar _a, _b, _c, _d, _e, _f, _g;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isTmaPlatform = isTmaPlatform;\nexports.isInTMA = isInTMA;\nexports.inTg = inTg;\nexports.isInTelegramBrowser = isInTelegramBrowser;\nexports.sendExpand = sendExpand;\nexports.sendOpenTelegramLink = sendOpenTelegramLink;\nexports.versionCompare = versionCompare;\nconst url_1 = require(\"./url\");\nconst log_1 = require(\"./log\");\nconst protocol_1 = require(\"../protocol\");\nconst web_api_1 = require(\"./web-api\");\nlet initParams = {};\ntry {\n    let locationHash = location.hash.toString();\n    initParams = urlParseHashParams(locationHash);\n}\ncatch (e) { }\nlet tmaPlatform = 'unknown';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppPlatform) {\n    tmaPlatform = (_a = initParams.tgWebAppPlatform) !== null && _a !== void 0 ? _a : 'unknown';\n}\nif (tmaPlatform === 'unknown') {\n    const window = (0, url_1.getWindow)();\n    tmaPlatform = (_d = (_c = (_b = window === null || window === void 0 ? void 0 : window.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) === null || _c === void 0 ? void 0 : _c.platform) !== null && _d !== void 0 ? _d : 'unknown';\n}\nlet webAppVersion = '6.0';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppVersion) {\n    webAppVersion = initParams.tgWebAppVersion;\n}\nif (!webAppVersion) {\n    const window = (0, url_1.getWindow)();\n    webAppVersion = (_g = (_f = (_e = window === null || window === void 0 ? void 0 : window.Telegram) === null || _e === void 0 ? void 0 : _e.WebApp) === null || _f === void 0 ? void 0 : _f.version) !== null && _g !== void 0 ? _g : '6.0';\n}\n/**\n * Returns true if the app is running in TMA on the specified platform.\n * @param platforms\n */\nfunction isTmaPlatform(...platforms) {\n    return platforms.includes(tmaPlatform);\n}\n/**\n * Returns true if the app is running in TMA.\n */\nfunction isInTMA() {\n    var _a;\n    return tmaPlatform !== 'unknown' || !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n}\nfunction inTg() {\n    // return true\n    return isInTelegramBrowser() || isInTMA();\n}\n/**\n * Returns true if the app is running in the Telegram browser.\n */\nfunction isInTelegramBrowser() {\n    var _a;\n    const isTelegramWebview = !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebview);\n    return (isInTMA() || isTelegramWebview) && tmaPlatform === 'unknown';\n}\n/**\n * Expand the app window.\n */\nfunction sendExpand() {\n    postEvent('web_app_expand', {});\n}\n/**\n * Opens link in TMA or in new tab and returns a function that closes the tab.\n * @param link The link to open.\n * @param fallback The function to call if the link can't be opened in TMA.\n */\nfunction sendOpenTelegramLink(link, fallback) {\n    const url = new URL(link);\n    if (url.protocol !== 'http:' && url.protocol !== 'https:') {\n        if (fallback) {\n            return fallback();\n        }\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Url protocol is not supported: ${url}`);\n    }\n    if (url.hostname !== 't.me') {\n        if (fallback) {\n            return fallback();\n        }\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Url host is not supported: ${url}`);\n    }\n    const pathFull = url.pathname + url.search;\n    if (isIframe() || versionAtLeast('6.1')) {\n        postEvent('web_app_open_tg_link', { path_full: pathFull });\n    }\n    else {\n        (0, web_api_1.openLinkBlank)('https://t.me' + pathFull);\n    }\n}\nfunction isIframe() {\n    try {\n        const window = (0, url_1.getWindow)();\n        if (!window) {\n            return false;\n        }\n        return window.parent != null && window !== window.parent;\n    }\n    catch (e) {\n        return false;\n    }\n}\nfunction postEvent(eventType, eventData) {\n    try {\n        const window = (0, url_1.getWindow)();\n        if (!window) {\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Can't post event to parent window: window is not defined`);\n        }\n        if (window.TelegramWebviewProxy !== undefined) {\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.TelegramWebviewProxy.postEvent(eventType, JSON.stringify(eventData));\n        }\n        else if (window.external && 'notify' in window.external) {\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.external.notify(JSON.stringify({ eventType: eventType, eventData: eventData }));\n        }\n        else if (isIframe()) {\n            const trustedTarget = '*';\n            const message = JSON.stringify({ eventType: eventType, eventData: eventData });\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.parent.postMessage(message, trustedTarget);\n        }\n        else {\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Can't post event to TMA`);\n        }\n    }\n    catch (e) {\n        (0, log_1.logError)(`Can't post event to parent window: ${e}`);\n    }\n}\nfunction urlParseHashParams(locationHash) {\n    locationHash = locationHash.replace(/^#/, '');\n    let params = {};\n    if (!locationHash.length) {\n        return params;\n    }\n    if (locationHash.indexOf('=') < 0 && locationHash.indexOf('?') < 0) {\n        params._path = urlSafeDecode(locationHash);\n        return params;\n    }\n    let qIndex = locationHash.indexOf('?');\n    if (qIndex >= 0) {\n        let pathParam = locationHash.substr(0, qIndex);\n        params._path = urlSafeDecode(pathParam);\n        locationHash = locationHash.substr(qIndex + 1);\n    }\n    let query_params = urlParseQueryString(locationHash);\n    for (let k in query_params) {\n        params[k] = query_params[k];\n    }\n    return params;\n}\nfunction urlSafeDecode(urlencoded) {\n    try {\n        urlencoded = urlencoded.replace(/\\+/g, '%20');\n        return decodeURIComponent(urlencoded);\n    }\n    catch (e) {\n        return urlencoded;\n    }\n}\nfunction urlParseQueryString(queryString) {\n    let params = {};\n    if (!queryString.length) {\n        return params;\n    }\n    let queryStringParams = queryString.split('&');\n    let i, param, paramName, paramValue;\n    for (i = 0; i < queryStringParams.length; i++) {\n        param = queryStringParams[i].split('=');\n        paramName = urlSafeDecode(param[0]);\n        paramValue = param[1] == null ? null : urlSafeDecode(param[1]);\n        params[paramName] = paramValue;\n    }\n    return params;\n}\nfunction versionCompare(v1, v2) {\n    if (typeof v1 !== 'string')\n        v1 = '';\n    if (typeof v2 !== 'string')\n        v2 = '';\n    let v1List = v1.replace(/^\\s+|\\s+$/g, '').split('.');\n    let v2List = v2.replace(/^\\s+|\\s+$/g, '').split('.');\n    let a, i, p1, p2;\n    a = Math.max(v1List.length, v2List.length);\n    for (i = 0; i < a; i++) {\n        p1 = parseInt(v1List[i]) || 0;\n        p2 = parseInt(v2List[i]) || 0;\n        if (p1 === p2)\n            continue;\n        if (p1 > p2)\n            return 1;\n        return -1;\n    }\n    return 0;\n}\nfunction versionAtLeast(ver) {\n    return versionCompare(webAppVersion, ver) >= 0;\n}\n","\"use strict\";\nvar _a, _b, _c, _d;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.removeUrlLastSlash = removeUrlLastSlash;\nexports.addPathToUrl = addPathToUrl;\nexports.getUniversalLink = getUniversalLink;\nexports.openOKXDeeplink = openOKXDeeplink;\nexports.openOKXUniversalLink = openOKXUniversalLink;\nexports.openOKXDeeplinkWithFallback = openOKXDeeplinkWithFallback;\nexports.getWindow = getWindow;\nexports.isTelegramUrl = isTelegramUrl;\nexports.encodeTelegramUrlParameters = encodeTelegramUrlParameters;\nexports.encodeConnectParams = encodeConnectParams;\nexports.encodeTWAConnectURLParams = encodeTWAConnectURLParams;\nexports.getAppWalletDeepLink = getAppWalletDeepLink;\nexports.getAppWalletShortDeepLink = getAppWalletShortDeepLink;\nexports.getTelegramWalletTWAUrl = getTelegramWalletTWAUrl;\nexports.openOKXTMAWalletlinkWithFallback = openOKXTMAWalletlinkWithFallback;\nexports.isInTMA = isInTMA;\nexports.isInTelegramBrowser = isInTelegramBrowser;\nexports.getOKXLink = getOKXLink;\nconst protocol_1 = require(\"../protocol\");\nconst log_1 = require(\"./log\");\nconst constants_1 = require(\"../protocol/constants\");\nconst utils_1 = require(\"./utils\");\nconst tma_api_1 = require(\"./tma-api\");\nfunction removeUrlLastSlash(url) {\n    if (url.slice(-1) === '/') {\n        return url.slice(0, -1);\n    }\n    return url;\n}\nfunction addPathToUrl(url, path) {\n    return removeUrlLastSlash(url) + '/' + path;\n}\nfunction getUniversalLink(deeplinkUrl, useStandardUniversalLink = false) {\n    console.log(\"getUniversalLink deeplinkUrl:\", deeplinkUrl, \", useStandardUniversalLink:\", useStandardUniversalLink);\n    /*const replaceStrWithParam = `${standardDeeplink}?param=`\n    if(!useStandardUniversalLink && deeplinkUrl.startsWith(replaceStrWithParam)){\n        const cleanUrl = deeplinkUrl.replace(replaceStrWithParam, '');\n        logDebug(\"getUniversalLink cleanUrl:\",cleanUrl)\n        const deeplinkEncodeUrl= encodeURIComponent(cleanUrl);\n        logDebug(\"getUniversalLink standardUniversalLink:\",standardUniversalLink)\n        logDebug(\"getUniversalLink `${shortUniversalLink}?param=${deeplinkEncodeUrl}`:\",`${shortUniversalLink}?param=${deeplinkEncodeUrl}`)\n        return `${shortUniversalLink}?param=${deeplinkEncodeUrl}`;\n    }else if(!useStandardUniversalLink && deeplinkUrl == standardDeeplink){\n        logDebug(\"getUniversalLink shortUniversalLink:\",shortUniversalLink)\n        return shortUniversalLink;\n    }else {\n        const deeplinkEncodeUrl= encodeURIComponent(deeplinkUrl);\n        console.log(\"getUniversalLink standardUniversalLink:\",standardUniversalLink)\n\n        return `${standardUniversalLink}?deeplink=${deeplinkEncodeUrl}`;\n    }*/\n    const deeplinkEncodeUrl = encodeURIComponent(deeplinkUrl);\n    console.log(\"getUniversalLink standardUniversalLink:\", protocol_1.standardUniversalLink);\n    console.log(\"getUniversalLink standardUniversalLink:\", `${protocol_1.standardUniversalLink}?deeplink=${deeplinkEncodeUrl}`);\n    return `${protocol_1.standardUniversalLink}?deeplink=${deeplinkEncodeUrl}`;\n}\nfunction openOKXDeeplink(deeplinkUrl) {\n    var _a;\n    const fullUrl = getUniversalLink(deeplinkUrl);\n    const isTelegram = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n    console.log(\"openOKXDeeplink fullUrl:\", fullUrl);\n    if (!(0, utils_1.isIos)()) {\n        let newWindow = null;\n        if (isTelegram) {\n            newWindow = window.open(deeplinkUrl, '_blank');\n        }\n        else {\n            window.location.href = deeplinkUrl;\n        }\n    }\n    else {\n        openOKXUniversalLink(fullUrl);\n    }\n}\nfunction openOKXUniversalLink(fullUrl) {\n    if (!(0, utils_1.isIos)()) {\n        // if (isTelegram) {\n        window.open(fullUrl, '_blank');\n        // } else {\n        //     window.location.href = fullUrl;\n        // }\n    }\n    else {\n        if (isInTMA()) {\n            window.open(fullUrl, '_blank');\n        }\n        else {\n            console.log(\"windowOpen[before]: \", Date.now());\n            if (window === null || window === void 0 ? void 0 : window.okxLogDebug) {\n                window.open(fullUrl, '_blank');\n            }\n            else {\n                window.open(fullUrl, '_self');\n            }\n            console.log(\"windowOpen[after]: \", Date.now());\n        }\n    }\n}\nfunction openOKXDeeplinkWithFallback(deeplinkUrl) {\n    var _a;\n    const fullUrl = getUniversalLink(deeplinkUrl);\n    const isTelegram = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n    console.log(\"openOKXDeeplinkWithFallback fullUrl:\", fullUrl);\n    let deepLinkOpened = false;\n    const timeoutDuration = 3000; // 1.5秒的等待时间\n    const downloadUrl = protocol_1.standardUniversalLink;\n    console.log(\"openOKXDeeplinkWithFallback standardUniversalLink:\", protocol_1.standardUniversalLink);\n    if (!(0, utils_1.isIos)()) {\n        let newWindow = null;\n        var fallbackToDownloadPage = () => {\n            if (!deepLinkOpened) {\n                if (newWindow) {\n                    newWindow.open(fullUrl, '_self');\n                }\n                else {\n                    window.open(fullUrl, '_blank');\n                }\n            }\n        };\n        if (isTelegram) {\n            newWindow = window.open(deeplinkUrl, '_blank');\n        }\n        else {\n            window.location.href = deeplinkUrl;\n        }\n        setTimeout(fallbackToDownloadPage, timeoutDuration);\n        window.addEventListener('blur', () => {\n            deepLinkOpened = true;\n        }, { once: true });\n        document.addEventListener('visibilitychange', () => {\n            if (document.visibilityState === 'hidden') {\n                deepLinkOpened = true;\n            }\n        });\n    }\n    else {\n        if (isTelegram) {\n            window.open(fullUrl, '_blank');\n        }\n        else {\n            console.log(\"windowOpen[before]: \", Date.now());\n            if (window === null || window === void 0 ? void 0 : window.okxLogDebug) {\n                window.open(fullUrl, '_blank');\n            }\n            else {\n                window.open(fullUrl, '_self');\n            }\n            console.log(\"windowOpen[after]: \", Date.now());\n        }\n    }\n}\nfunction getWindow() {\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    return undefined;\n}\nfunction isTelegramUrl(link) {\n    if (!link) {\n        return false;\n    }\n    const url = new URL(link);\n    return url.protocol === 'tg:' || url.hostname === 't.me';\n}\nfunction encodeTelegramUrlParameters(parameters) {\n    let encodedParameters = parameters;\n    encodedParameters = encodedParameters.replace(/\\./g, '%2E');\n    encodedParameters = encodedParameters.replace(/-/g, '%2D');\n    encodedParameters = encodedParameters.replace(/_/g, '%5F');\n    encodedParameters = encodedParameters.replace(/&/g, '-');\n    encodedParameters = encodedParameters.replace(/=/g, '__');\n    encodedParameters = encodedParameters.replace(/%/g, '--');\n    return encodedParameters;\n}\nfunction encodeConnectParams(connectRequest) {\n    const connectRequestStr = JSON.stringify(connectRequest);\n    (0, log_1.logDebug)(\"url encodeConnectParams connectRequestStr \", connectRequestStr);\n    const utf8Array = new TextEncoder().encode(connectRequestStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    // .replace(/\\+/g, '-')\n    // .replace(/\\//g, '_')\n    // .replace(/=+$/, ''); //Compatible with older versions of iOS. Cannot be added directly  (Base64 URL Safe)\n    (0, log_1.logDebug)(\"url encodeConnectParams base64Encoded \", base64Encoded);\n    return base64Encoded;\n}\nfunction encodeTWAConnectURLParams(connectRequest) {\n    const connectRequestStr = JSON.stringify({ topic: connectRequest.topic, clientId: connectRequest.clientId });\n    (0, log_1.logDebug)(\"url encodeConnectParams connectRequestStr\", connectRequestStr);\n    const utf8Array = new TextEncoder().encode(connectRequestStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    return base64Encoded;\n}\nfunction getAppWalletDeepLink(connectParam) {\n    return `${protocol_1.standardDeeplink}?param=${connectParam}`;\n}\nfunction getAppWalletShortDeepLink(topic, clientId) {\n    return `${constants_1.shortUniversalLink}?topic=${topic}${(0, utils_1.getLastSixMd5Hash)(clientId)}`;\n}\n//  make telegram okx wallet TWA url\nfunction getTelegramWalletTWAUrl(connectParam, redirectStr) {\n    let base64Content = { okxconnect: \"\", redirect: \"\", extraparams: \"\", fromtg: false };\n    if (connectParam) {\n        base64Content.okxconnect = connectParam;\n    }\n    if (redirectStr) {\n        base64Content.redirect = redirectStr;\n    }\n    if (!isInTMA()) {\n        base64Content.fromtg = false;\n    }\n    else {\n        base64Content.fromtg = true;\n    }\n    (0, log_1.logDebug)('getTelegramWalletTWAUrl redirect:', base64Content.redirect);\n    let base64ContentStr = JSON.stringify(base64Content);\n    const utf8Array = new TextEncoder().encode(base64ContentStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    const urlSafeBase64 = (0, utils_1.toSafeBase64FromBase64)(base64Encoded);\n    (0, log_1.logDebug)('[TWA] open link:', base64Content, base64Encoded);\n    if (connectParam || redirectStr) {\n        if (!isInTMA()) {\n            // return `http://localhost:5173?tgWebAppStartParam=${urlSafeBase64}`\n            if ((0, constants_1.getTestTwaUrl)()) {\n                return `${(0, constants_1.getTestTwaUrl)()}?tgWebAppStartParam=${urlSafeBase64}`;\n            }\n            else if ((0, constants_1.getTestTgTwaUrl)()) {\n                let result = (0, constants_1.getBotNameAndAppName)((0, constants_1.getTestTgTwaUrl)());\n                if (result) {\n                    let { botName, appName } = result;\n                    return `tg://resolve?domain=${botName}&appname=${appName}&startapp=${urlSafeBase64}`;\n                }\n                return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}&startapp=${urlSafeBase64}`;\n            }\n            else {\n                return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}&startapp=${urlSafeBase64}`;\n            }\n        }\n        else {\n            if ((0, constants_1.getTestTgTwaUrl)()) {\n                return `${(0, constants_1.getTestTgTwaUrl)()}?startapp=${urlSafeBase64}`;\n            }\n            else {\n                return `https://t.me/${constants_1.tgwalletName}/start?startapp=${urlSafeBase64}`;\n            }\n        }\n    }\n    if (!isInTMA()) {\n        // return \"http://localhost:5173\"\n        if ((0, constants_1.getTestTwaUrl)()) {\n            return `${(0, constants_1.getTestTwaUrl)()}`;\n        }\n        else if ((0, constants_1.getTestTgTwaUrl)()) {\n            let result = (0, constants_1.getBotNameAndAppName)((0, constants_1.getTestTgTwaUrl)());\n            if (result) {\n                let { botName, appName } = result;\n                return `tg://resolve?domain=${botName}&appname=${appName}`;\n            }\n            return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}`;\n        }\n        else {\n            return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}`;\n        }\n    }\n    else {\n        if ((0, constants_1.getTestTgTwaUrl)()) {\n            return `${(0, constants_1.getTestTgTwaUrl)()}`;\n        }\n        else {\n            return `https://t.me/${constants_1.tgwalletName}/start`;\n        }\n    }\n}\n//  open TWA url in telegram\nfunction openOKXTMAWalletlinkWithFallback(twaDeepLink) {\n    var _a, _b, _c, _d, _e;\n    (0, log_1.logDebug)('[TWA] open link:', twaDeepLink, \"isInTMA ==> \", isInTMA());\n    if (!isInTMA()) {\n        if ((0, constants_1.getTestTwaUrl)()) {\n            window.open(twaDeepLink, '_blank');\n        }\n        else {\n            window.open(twaDeepLink, '_self');\n        }\n    }\n    else {\n        if ((_b = (_a = getWindow()) === null || _a === void 0 ? void 0 : _a.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) {\n            (_e = (_d = (_c = getWindow()) === null || _c === void 0 ? void 0 : _c.Telegram) === null || _d === void 0 ? void 0 : _d.WebApp) === null || _e === void 0 ? void 0 : _e.openTelegramLink(twaDeepLink);\n        }\n        else {\n            (0, tma_api_1.sendOpenTelegramLink)(twaDeepLink);\n        }\n    }\n}\n/**\n * Returns true if the app is running in TMA.\n */\nfunction urlSafeDecode(urlencoded) {\n    try {\n        urlencoded = urlencoded.replace(/\\+/g, '%20');\n        return decodeURIComponent(urlencoded);\n    }\n    catch (e) {\n        return urlencoded;\n    }\n}\nfunction urlParseQueryString(queryString) {\n    let params = {};\n    if (!queryString.length) {\n        return params;\n    }\n    let queryStringParams = queryString.split('&');\n    let i, param, paramName, paramValue;\n    for (i = 0; i < queryStringParams.length; i++) {\n        param = queryStringParams[i].split('=');\n        paramName = urlSafeDecode(param[0]);\n        paramValue = param[1] == null ? null : urlSafeDecode(param[1]);\n        params[paramName] = paramValue;\n    }\n    return params;\n}\nfunction urlParseHashParams(locationHash) {\n    locationHash = locationHash.replace(/^#/, '');\n    let params = {};\n    if (!locationHash.length) {\n        return params;\n    }\n    if (locationHash.indexOf('=') < 0 && locationHash.indexOf('?') < 0) {\n        params._path = urlSafeDecode(locationHash);\n        return params;\n    }\n    let qIndex = locationHash.indexOf('?');\n    if (qIndex >= 0) {\n        let pathParam = locationHash.substr(0, qIndex);\n        params._path = urlSafeDecode(pathParam);\n        locationHash = locationHash.substr(qIndex + 1);\n    }\n    let query_params = urlParseQueryString(locationHash);\n    for (let k in query_params) {\n        params[k] = query_params[k];\n    }\n    return params;\n}\nlet initParams = {};\ntry {\n    let locationHash = location.hash.toString();\n    initParams = urlParseHashParams(locationHash);\n}\ncatch (e) { }\nlet tmaPlatform = 'unknown';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppPlatform) {\n    tmaPlatform = (_a = initParams.tgWebAppPlatform) !== null && _a !== void 0 ? _a : 'unknown';\n}\nif (tmaPlatform === 'unknown') {\n    const window = getWindow();\n    tmaPlatform = (_d = (_c = (_b = window === null || window === void 0 ? void 0 : window.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) === null || _c === void 0 ? void 0 : _c.platform) !== null && _d !== void 0 ? _d : 'unknown';\n}\nfunction isInTMA() {\n    var _a;\n    return tmaPlatform !== 'unknown' || !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n}\n/**\n * Returns true if the app is running in the Telegram browser.\n */\nfunction isInTelegramBrowser() {\n    var _a;\n    const isTelegramWebview = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebview);\n    return (isInTMA() || isTelegramWebview) && tmaPlatform === 'unknown';\n}\nfunction getOKXLink(connectRequest, useMini = false, tmaReturnUrl) {\n    (0, log_1.logDebug)(`url  getOKXLink() called connectRequest==> ${JSON.stringify(connectRequest)}  useMini=> ${useMini}  tmaReturnUrl==> ${tmaReturnUrl}`);\n    if (useMini) {\n        if (connectRequest) {\n            var encodeTGParams = encodeTWAConnectURLParams(connectRequest);\n            return getTelegramWalletTWAUrl(encodeTGParams, tmaReturnUrl !== null && tmaReturnUrl !== void 0 ? tmaReturnUrl : \"back\");\n        }\n        else {\n            return getTelegramWalletTWAUrl(undefined, tmaReturnUrl !== null && tmaReturnUrl !== void 0 ? tmaReturnUrl : \"back\");\n        }\n    }\n    else {\n        if ((0, utils_1.useShortLink)()) {\n            if (connectRequest) {\n                return getAppWalletShortDeepLink(connectRequest.topic, connectRequest.clientId);\n            }\n            else {\n                return constants_1.shortUniversalLink;\n            }\n        }\n        else {\n            if (connectRequest) {\n                const base64Encoded = encodeConnectParams(connectRequest);\n                return `${protocol_1.standardDeeplink}?param=${base64Encoded}`;\n            }\n            else {\n                return protocol_1.standardDeeplink;\n            }\n        }\n    }\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isValidObject = exports.RANDOM_LENGTH = exports.isBrowser = exports.resolveLocalStorage = exports.hasLocalStorage = exports.hasBuiltInWebSocket = exports.resolveWebSocketImplementation = void 0;\nexports.hexToByteArray = hexToByteArray;\nexports.getChainId = getChainId;\nexports.toHexString = toHexString;\nexports.concatUint8Arrays = concatUint8Arrays;\nexports.splitToUint8Arrays = splitToUint8Arrays;\nexports.base64encode = base64encode;\nexports.base64decode = base64decode;\nexports.checkWSUrl = checkWSUrl;\nexports.hashKey = hashKey;\nexports.generateRandomBytes32 = generateRandomBytes32;\nexports.generateTopic = generateTopic;\nexports.isIos = isIos;\nexports.getLastSixMd5Hash = getLastSixMd5Hash;\nexports.toSafeBase64FromBase64 = toSafeBase64FromBase64;\nexports.useShortLink = useShortLink;\nexports.replaceAptosChainName = replaceAptosChainName;\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst tweetnacl_util_1 = __importDefault(require(\"tweetnacl-util\"));\nconst to_string_1 = require(\"uint8arrays/to-string\");\nconst sha256_1 = require(\"@stablelib/sha256\");\nconst safejson_1 = require(\"./safejson\");\nconst log_1 = require(\"./log\");\nconst stringUtils_1 = require(\"../utils/stringUtils\");\nconst crypto_js_1 = __importDefault(require(\"crypto-js\"));\nconst BASE16 = \"base16\";\nfunction hexToByteArray(hexString) {\n    if (hexString.length % 2 !== 0) {\n        throw new Error(`Cannot convert ${hexString} to bytesArray`);\n    }\n    const result = new Uint8Array(hexString.length / 2);\n    for (let i = 0; i < hexString.length; i += 2) {\n        result[i / 2] = parseInt(hexString.slice(i, i + 2), 16);\n    }\n    return result;\n}\nfunction getChainId(chain) {\n    return chain.includes(\":\") ? chain.split(\":\")[1] : chain;\n}\nfunction toHexString(byteArray) {\n    let hexString = '';\n    byteArray.forEach(byte => {\n        hexString += ('0' + (byte & 0xff).toString(16)).slice(-2);\n    });\n    return hexString;\n}\nfunction concatUint8Arrays(buffer1, buffer2) {\n    const mergedArray = new Uint8Array(buffer1.length + buffer2.length);\n    mergedArray.set(buffer1);\n    mergedArray.set(buffer2, buffer1.length);\n    return mergedArray;\n}\nfunction splitToUint8Arrays(array, index) {\n    if (index >= array.length) {\n        throw new Error('Index is out of buffer');\n    }\n    const subArray1 = array.slice(0, index);\n    const subArray2 = array.slice(index);\n    return [subArray1, subArray2];\n}\nfunction encodeUint8Array(value, urlSafe) {\n    const encoded = tweetnacl_util_1.default.encodeBase64(value);\n    if (!urlSafe) {\n        return encoded;\n    }\n    return encodeURIComponent(encoded);\n}\nfunction decodeToUint8Array(value, urlSafe) {\n    if (urlSafe) {\n        value = decodeURIComponent(value);\n    }\n    return tweetnacl_util_1.default.decodeBase64(value);\n}\nfunction base64encode(value, urlSafe) {\n    let uint8Array;\n    if (value instanceof Uint8Array) {\n        uint8Array = value;\n    }\n    else {\n        if (typeof value !== 'string') {\n            value = (0, safejson_1.safeJsonStringify)(value);\n        }\n        uint8Array = tweetnacl_util_1.default.decodeUTF8(value);\n    }\n    return encodeUint8Array(uint8Array, urlSafe);\n}\nfunction base64decode(value, urlSafe) {\n    const decodedUint8Array = decodeToUint8Array(value, urlSafe);\n    return {\n        toString() {\n            return tweetnacl_util_1.default.encodeUTF8(decodedUint8Array);\n        },\n        toObject() {\n            try {\n                return (0, safejson_1.safeJsonParse)(tweetnacl_util_1.default.encodeUTF8(decodedUint8Array));\n            }\n            catch (e) {\n                return null;\n            }\n        },\n        toUint8Array() {\n            return decodedUint8Array;\n        }\n    };\n}\nfunction checkWSUrl(url) {\n    const match = url.match(new RegExp(/^\\w+:/, \"gi\"));\n    if (!match || !match.length) {\n        return false;\n    }\n    let scheme = match[0];\n    if (scheme === undefined) {\n        return false;\n    }\n    return new RegExp(\"^wss?:\").test(scheme);\n}\nconst resolveWebSocketImplementation = () => {\n    if (typeof WebSocket !== \"undefined\") {\n        return WebSocket;\n    }\n    else if (typeof global !== \"undefined\" && typeof global.WebSocket !== \"undefined\") {\n        return global.WebSocket;\n    }\n    else if (typeof window !== \"undefined\" && typeof window.WebSocket !== \"undefined\") {\n        return window.WebSocket;\n    }\n    else if (typeof self !== \"undefined\" && typeof self.WebSocket !== \"undefined\") {\n        return self.WebSocket;\n    }\n    return WebSocket;\n    //\n    // return require(\"ws\");\n};\nexports.resolveWebSocketImplementation = resolveWebSocketImplementation;\nconst hasBuiltInWebSocket = () => typeof WebSocket !== \"undefined\" ||\n    (typeof global !== \"undefined\" && typeof global.WebSocket !== \"undefined\") ||\n    (typeof window !== \"undefined\" && typeof window.WebSocket !== \"undefined\") ||\n    (typeof self !== \"undefined\" && typeof self.WebSocket !== \"undefined\");\nexports.hasBuiltInWebSocket = hasBuiltInWebSocket;\nconst hasLocalStorage = () => (typeof global !== \"undefined\" && (typeof global.localStorage !== \"undefined\")) ||\n    (typeof window !== \"undefined\" && typeof window.localStorage !== \"undefined\");\nexports.hasLocalStorage = hasLocalStorage;\nconst resolveLocalStorage = () => {\n    if (typeof global !== \"undefined\" && typeof global.localStorage !== \"undefined\") {\n        return global.localStorage;\n    }\n    else if (typeof window !== \"undefined\" && typeof window.localStorage !== \"undefined\") {\n        return window.localStorage;\n    }\n    return localStorage;\n};\nexports.resolveLocalStorage = resolveLocalStorage;\nconst isBrowser = () => typeof window !== \"undefined\";\nexports.isBrowser = isBrowser;\nexports.RANDOM_LENGTH = 32;\nfunction hashKey(key, encode = BASE16) {\n    (0, log_1.logDebug)(`hash key called ${key}`);\n    const result = (0, sha256_1.hash)((0, stringUtils_1.okxfromString)(key, encode));\n    return (0, to_string_1.toString)(result, encode);\n}\nfunction generateRandomBytes32() {\n    return tweetnacl_1.default.randomBytes(exports.RANDOM_LENGTH);\n}\nfunction generateTopic() {\n    let randomBytes32 = generateRandomBytes32();\n    (0, log_1.logDebug)(`generate topic called ${randomBytes32}`);\n    return hashKey((0, to_string_1.toString)(randomBytes32, BASE16));\n}\nconst isValidObject = (obj) => Object.getPrototypeOf(obj) === Object.prototype && Object.keys(obj).length;\nexports.isValidObject = isValidObject;\nfunction isIos() {\n    const userAgent = navigator.userAgent;\n    const maxTouchPoints = navigator.maxTouchPoints || 0;\n    // 检测 iPhone、iPod 和传统的 iPad\n    const isIOSDevice = /iPad|iPhone|iPod/.test(userAgent) && !window.MSStream;\n    // 针对 iPadOS 13 及以上的设备进行额外判断\n    const isIPadOS = (userAgent.includes('Mac') && maxTouchPoints > 1);\n    (0, log_1.logDebug)(`utils isIos >>>isIOSDevice: ${isIOSDevice}    >> isIPadOS: ${isIPadOS}`);\n    // 如果是 iOS 设备或者是 iPadOS 设备，返回 true\n    return isIOSDevice || isIPadOS;\n}\nfunction getLastSixMd5Hash(input) {\n    // 生成 MD5 哈希\n    const hash = crypto_js_1.default.MD5(input).toString();\n    // 获取最后六位\n    return hash.slice(-6);\n}\nfunction toSafeBase64FromBase64(base64) {\n    return base64\n        .replace(/=/g, \"\")\n        .replace(/\\+/g, \"-\")\n        .replace(/\\//g, \"_\");\n}\nfunction useShortLink() {\n    // return !!(window as any).useShortLink;\n    return true;\n}\nfunction replaceAptosChainName(chainId) {\n    let newChain = chainId;\n    if (chainId.includes(\"aptos:mainnet\")) {\n        newChain = chainId.replace(\"aptos:mainnet\", \"aptos:637\");\n    }\n    else if (chainId.includes(\"movement:testnet\")) {\n        newChain = chainId.replace(\"movement:testnet\", \"aptos:70000060\");\n    }\n    return newChain;\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.openLink = openLink;\nexports.openLinkBlank = openLinkBlank;\nexports.openDeeplinkWithFallback = openDeeplinkWithFallback;\nexports.isMobileUserAgent = isMobileUserAgent;\nexports.getUserAgent = getUserAgent;\nexports.isOS = isOS;\nexports.isBrowser = isBrowser;\nconst ua_parser_js_1 = __importDefault(require(\"ua-parser-js\"));\nconst log_1 = require(\"./log\");\nconst tma_api_1 = require(\"./tma-api\");\nfunction openLink(href, target = '_self') {\n    (0, log_1.logDebug)('openLink', href, target);\n    window.open(href, target, 'noopener noreferrer');\n}\nfunction openLinkBlank(href) {\n    openLink(href, '_blank');\n}\nfunction openDeeplinkWithFallback(href, fallback) {\n    const doFallback = () => {\n        if (isBrowser('safari') || (isOS('android') && isBrowser('firefox'))) {\n            // Safari does not support fallback to direct link.\n            return;\n        }\n        fallback();\n    };\n    const fallbackTimeout = setTimeout(() => doFallback(), 500);\n    window.addEventListener('blur', () => clearTimeout(fallbackTimeout), { once: true });\n    if (isOS('android') && (0, tma_api_1.inTg)()) {\n        openLink(href, '_blank');\n    }\n    else {\n        openLink(href, '_self');\n    }\n}\nfunction isMobileUserAgent() {\n    let check = false;\n    (function (a) {\n        if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) ||\n            /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.slice(0, 4)))\n            check = true;\n    })(navigator.userAgent ||\n        navigator.vendor ||\n        window.opera);\n    return check;\n}\nfunction getUserAgent() {\n    var _a, _b, _c;\n    const results = new ua_parser_js_1.default().getResult();\n    const osName = (_a = results.os.name) === null || _a === void 0 ? void 0 : _a.toLowerCase();\n    const deviceModel = (_b = results.device.model) === null || _b === void 0 ? void 0 : _b.toLowerCase();\n    let os;\n    switch (true) {\n        case deviceModel === 'ipad':\n            os = 'ipad';\n            break;\n        case osName === 'ios':\n            os = 'ios';\n            break;\n        case osName === 'android':\n            os = 'android';\n            break;\n        case osName === 'mac os':\n            os = 'macos';\n            break;\n        case osName === 'linux':\n            os = 'linux';\n            break;\n        case osName === null || osName === void 0 ? void 0 : osName.includes('windows'):\n            os = 'windows';\n            break;\n    }\n    const browserName = (_c = results.browser.name) === null || _c === void 0 ? void 0 : _c.toLowerCase();\n    let browser;\n    switch (true) {\n        case browserName === 'chrome':\n            browser = 'chrome';\n            break;\n        case browserName === 'firefox':\n            browser = 'firefox';\n            break;\n        case browserName === null || browserName === void 0 ? void 0 : browserName.includes('safari'):\n            browser = 'safari';\n            break;\n        case browserName === null || browserName === void 0 ? void 0 : browserName.includes('opera'):\n            browser = 'opera';\n            break;\n    }\n    return {\n        os,\n        browser\n    };\n}\nfunction isOS(...os) {\n    return os.includes(getUserAgent().os);\n}\nfunction isBrowser(...browser) {\n    return browser.includes(getUserAgent().browser);\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXSolanaProvider = void 0;\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXSolanaProvider {\n    getRealChainId(chainId) {\n        if (chainId == null) {\n            if (this.chainsSet.size == 1) {\n                let realChain = \"\";\n                let map = this.defaultChainMap;\n                this.chainsSet.forEach(function (chain) {\n                    if (map.has(chain)) {\n                        realChain = map.get(chain);\n                    }\n                });\n                if (realChain == \"\") {\n                    throw new Error(\"unsupported chainId\");\n                }\n                else {\n                    return realChain;\n                }\n            }\n            else {\n                throw new Error(\"connected to multiple solana chains,chainId can not be null\");\n            }\n        }\n        else {\n            if (chainId.startsWith(\"svm\")) {\n                return chainId;\n            }\n            else {\n                if (this.caip.includes(chainId)) {\n                    return chainId;\n                }\n                else {\n                    throw new Error(\"wrong chainId\");\n                }\n            }\n        }\n    }\n    getConnectedNamespace() {\n        var _a, _b, _c;\n        (_c = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces) === null || _b === void 0 ? void 0 : _b['solana']) === null || _c === void 0 ? void 0 : _c.chains.forEach(chain => {\n            this.chainsSet.add(chain.split(\":\")[0]);\n        });\n    }\n    constructor(provider) {\n        this.chainsSet = new Set();\n        this.caip = [\n            \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n            \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n            \"sonic:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n            \"sonic:EtWTRABZaYq6iMfeYKouRu166VU2xqa1\"\n        ];\n        this.defaultChainMap = new Map();\n        this.provider = provider;\n        this.defaultChainMap.set(\"solana\", \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\");\n        this.defaultChainMap.set(\"sonic\", \"sonic:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\");\n        this.getConnectedNamespace();\n    }\n    signMessage(message, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            let realMessage = message;\n            let tx = null;\n            try {\n                const transaction = bs58_1.default.decode(message);\n                try {\n                    tx = web3_js_1.Transaction.from(transaction);\n                }\n                catch (error) {\n                    tx = web3_js_1.VersionedTransaction.deserialize(transaction);\n                }\n            }\n            catch (e) {\n            }\n            if (tx != null) {\n                return new Promise((resolve, reject) => {\n                    reject(\"Please sign with normal message\");\n                });\n            }\n            if (((_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.wallet) === null || _b === void 0 ? void 0 : _b.appName) == \"OKX Wallet\") {\n                realMessage = bs58_1.default.encode(new TextEncoder().encode(message));\n            }\n            else {\n                realMessage = message;\n            }\n            chainId = this.getRealChainId(chainId);\n            try {\n                let data = {\n                    \"chainId\": chainId,\n                    \"method\": \"solana_signMessage\",\n                    \"params\": {\n                        \"message\": realMessage,\n                        \"pubkey\": (_c = this.getAccount(chainId)) === null || _c === void 0 ? void 0 : _c.address\n                    },\n                    injectParams: {\n                        message: message,\n                        pubkey: (_d = this.getAccount(chainId)) === null || _d === void 0 ? void 0 : _d.address\n                    }\n                };\n                let signedMessage = yield this.provider.request(data, chainId);\n                (0, core_1.logDebug)(\"signMessage111\", signedMessage);\n                if ('result' in signedMessage) {\n                    let successData = signedMessage.result;\n                    return new Promise((resolve, reject) => {\n                        var _a;\n                        resolve({\n                            \"signature\": bs58_1.default.decode(successData),\n                            \"publicKey\": (_a = this.getAccount(chainId)) === null || _a === void 0 ? void 0 : _a.address\n                        });\n                    });\n                }\n                else {\n                    (0, core_1.logDebug)(\"signMessage111\", signedMessage);\n                    return new Promise((resolve, reject) => {\n                        resolve(signedMessage.error);\n                    });\n                }\n            }\n            catch (error) {\n                console.error('方法数据回调失败 --Error--', error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d;\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['solana']) === null || _b === void 0 ? void 0 : _b.accounts[0];\n        if (chainId != null) {\n            account = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces['solana']) === null || _d === void 0 ? void 0 : _d.accounts.filter(function (account) {\n                return account.startsWith(chainId);\n            })[0];\n        }\n        (0, core_1.logDebug)(\"getAccount\", account);\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const address = account.split(':')[2];\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address,\n            publicKey: new web3_js_1.PublicKey(address)\n        };\n    }\n    signTransaction(transaction, chainId) {\n        var _a, _b;\n        (0, core_1.logDebug)(\"OKXSolanaProvider\", typeof transaction);\n        chainId = this.getRealChainId(chainId);\n        try {\n            let serializedMessage = transaction.serialize({\n                requireAllSignatures: false,\n                verifySignatures: false,\n            });\n            let data = { \"data\": bs58_1.default.encode(serializedMessage), \"from\": (_a = this.getAccount(chainId)) === null || _a === void 0 ? void 0 : _a.address };\n            return this.getSignedTransaction(\"solana_signTransaction\", data, chainId, transaction);\n        }\n        catch (e) {\n            let serializedMessage = transaction.serialize();\n            let data = { \"data\": bs58_1.default.encode(serializedMessage), \"from\": (_b = this.getAccount(chainId)) === null || _b === void 0 ? void 0 : _b.address };\n            return this.getSignedTransaction(\"solana_signTransaction\", data, chainId, transaction);\n        }\n    }\n    signAllTransactions(transactions, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getRealChainId(chainId);\n            try {\n                var array = transactions.map((tx) => {\n                    var _a;\n                    var serializedMessage;\n                    if (tx instanceof web3_js_1.VersionedTransaction) {\n                        serializedMessage = tx.serialize();\n                    }\n                    else {\n                        serializedMessage = tx.serialize({\n                            requireAllSignatures: false,\n                            verifySignatures: false,\n                        });\n                    }\n                    return { \"data\": bs58_1.default.encode(serializedMessage), \"from\": (_a = this.getAccount(chainId)) === null || _a === void 0 ? void 0 : _a.address };\n                });\n                const response = yield this.provider.request({\n                    \"method\": \"solana_signAllTransactions\",\n                    \"params\": {\n                        \"transactions\": array\n                    },\n                    injectParams: transactions\n                }, chainId);\n                if (\"result\" in response) {\n                    let result = response.result;\n                    let newTransactions = JSON.parse(result).map((s) => {\n                        let c = bs58_1.default.decode(s);\n                        try {\n                            let transaction = web3_js_1.Transaction.from(c);\n                            (0, core_1.logDebug)(\"verifySignatures\", transaction.verifySignatures());\n                            return transaction;\n                        }\n                        catch (error) {\n                            return web3_js_1.VersionedTransaction.deserialize(c);\n                        }\n                    });\n                    return new Promise((resolve, reject) => {\n                        resolve(newTransactions);\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        resolve(response);\n                    });\n                }\n            }\n            catch (error) {\n                (0, core_1.logDebug)(\"getSignedTransaction\", error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    signAndSendTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b;\n            chainId = this.getRealChainId(chainId);\n            try {\n                let data = {};\n                try {\n                    let serializedMessage = transaction.serialize({\n                        requireAllSignatures: false,\n                        verifySignatures: false,\n                    });\n                    data = { \"data\": bs58_1.default.encode(serializedMessage), \"from\": (_a = this.getAccount(chainId)) === null || _a === void 0 ? void 0 : _a.address };\n                }\n                catch (e) {\n                    let serializedMessage = transaction.serialize();\n                    data = { \"data\": bs58_1.default.encode(serializedMessage), \"from\": (_b = this.getAccount(chainId)) === null || _b === void 0 ? void 0 : _b.address };\n                }\n                let signature = yield this.provider.request({\n                    \"method\": \"solana_signAndSendTransaction\",\n                    \"params\": data,\n                    injectParams: transaction\n                }, chainId);\n                if ('result' in signature) {\n                    let successData = signature.result;\n                    return new Promise((resolve, reject) => {\n                        resolve(successData);\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        resolve(signature);\n                    });\n                }\n            }\n            catch (error) {\n                (0, core_1.logDebug)(\"getSignedTransaction\", error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n    getSignedTransaction(method, transactionStr, chainId, transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let signature = yield this.provider.request({\n                    \"method\": method,\n                    \"params\": transactionStr,\n                    injectParams: transaction\n                }, chainId);\n                if ('result' in signature) {\n                    let successData = signature.result;\n                    let c = bs58_1.default.decode(successData);\n                    let resultTx;\n                    try {\n                        resultTx = web3_js_1.Transaction.from(c);\n                    }\n                    catch (error) {\n                        resultTx = web3_js_1.VersionedTransaction.deserialize(c);\n                    }\n                    if (!(resultTx instanceof web3_js_1.VersionedTransaction)) {\n                        (0, core_1.logDebug)(\"verifySignatures\", resultTx.verifySignatures());\n                    }\n                    return new Promise((resolve, reject) => {\n                        resolve(resultTx);\n                    });\n                }\n                else if (\"injectResult\" in signature) {\n                    (0, core_1.logDebug)(\"getSignedTransaction injectResult\");\n                    let resultTx = signature.injectResult;\n                    return new Promise((resolve, reject) => {\n                        resolve(resultTx);\n                    });\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        reject(signature);\n                    });\n                }\n            }\n            catch (error) {\n                (0, core_1.logDebug)(\"getSignedTransaction\", error);\n                return new Promise((resolve, reject) => {\n                    resolve(error);\n                });\n            }\n        });\n    }\n}\nexports.OKXSolanaProvider = OKXSolanaProvider;\nexports.default = OKXSolanaProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXSolanaProvider = void 0;\nvar OKXSolanaProvider_1 = require(\"./OKXSolanaProvider\");\nObject.defineProperty(exports, \"OKXSolanaProvider\", { enumerable: true, get: function () { return OKXSolanaProvider_1.OKXSolanaProvider; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXSuiProvider = void 0;\nconst universal_provider_1 = require(\"@okxconnect/universal-provider\");\nconst transactions_1 = require(\"@mysten/sui/transactions\");\nconst utils_1 = require(\"@mysten/sui/utils\");\nconst client_1 = require(\"@mysten/sui/client\");\nclass OKXSuiProvider {\n    get defaultNetwork() {\n        let network = this.provider.requestDefaultChainWithNamespace(universal_provider_1.NameSpaceKeySui);\n        return network;\n    }\n    get suiClient() {\n        var _a;\n        let rpcUrl = (0, client_1.getFullnodeUrl)(this.defaultNetwork);\n        let suiProvider = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[universal_provider_1.NameSpaceKeySui];\n        if (suiProvider && suiProvider.rpcMap) {\n            let url = suiProvider.rpcMap[this.currentChainId];\n            if (url !== undefined) {\n                // @ts-ignore\n                rpcUrl = url;\n                console.log(\"use custom rpc======> \", rpcUrl);\n            }\n            else {\n                console.log(\"use mainnet rpc======> \", rpcUrl);\n            }\n        }\n        else {\n            console.log(\"use mainnet rpc======> \", rpcUrl);\n        }\n        return new client_1.SuiClient({ url: rpcUrl });\n    }\n    get currentChainId() {\n        return `sui:${this.defaultNetwork}`;\n    }\n    constructor(provider) {\n        this.provider = provider;\n    }\n    getAccount() {\n        var _a, _b, _c, _d, _e, _f, _g;\n        let namespaces = universal_provider_1.NameSpaceKeySui;\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[namespaces]) === null || _b === void 0 ? void 0 : _b.accounts[0];\n        console.log('====> getAccount');\n        console.log(account);\n        if (!account) {\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        console.log(\"sui_publicKey\", (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces[namespaces]) === null || _d === void 0 ? void 0 : _d.extra);\n        let extra = (_g = (_f = (_e = this.provider.session) === null || _e === void 0 ? void 0 : _e.namespaces[namespaces]) === null || _f === void 0 ? void 0 : _f.extra) === null || _g === void 0 ? void 0 : _g[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n            console.log(\"sui_publicKey\", publicKey);\n        }\n        if (!address) {\n            return undefined;\n        }\n        return {\n            address: address,\n            publicKey: publicKey\n        };\n    }\n    signTransaction(input) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const [txBytes, txSerialize] = yield this.generateTsBytesAndSerizlize(input);\n            const ret = yield this.provider.request({\n                method: \"sui_signTransactionBlock\",\n                params: {\n                    txBytes: txBytes,\n                    txSerialize: txSerialize\n                },\n                injectParams: Object.assign(Object.assign({}, input), { account: Object.assign({}, this.getAccount()) })\n            }, this.currentChainId);\n            if (\"result\" in ret) {\n                return {\n                    signature: ret.result,\n                    transactionBlockBytes: txBytes,\n                };\n            }\n            else {\n                let errorData = ret;\n                return errorData.error;\n            }\n        });\n    }\n    signAndExecuteTransaction(input) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const [txBytes, txSerialize] = yield this.generateTsBytesAndSerizlize(input);\n            let ret = (yield this.provider.request({\n                method: \"sui_signAndExecuteTransactionBlock\",\n                params: {\n                    txBytes: txBytes,\n                    txSerialize: txSerialize,\n                },\n                injectParams: Object.assign(Object.assign({}, input), { account: Object.assign({}, this.getAccount()) })\n            }, this.currentChainId));\n            if (\"result\" in ret) {\n                return {\n                    confirmedLocalExecution: false,\n                    digest: ret.result,\n                    txBytes: txBytes,\n                };\n            }\n            else {\n                let errorData = ret;\n                return errorData.error;\n            }\n        });\n    }\n    // input = {message: uint8Array }\n    signMessage(input) {\n        return __awaiter(this, void 0, void 0, function* () {\n            console.log(\"====> signMessage:\");\n            console.log(input);\n            const decoder = new TextDecoder(\"utf8\");\n            const b64encoded = btoa(decoder.decode(input.message));\n            const message = atob(b64encoded);\n            const ret = (yield this.provider.request({\n                method: \"sui_signMessage\",\n                params: {\n                    message: message\n                },\n                injectParams: Object.assign(Object.assign({}, input), { account: Object.assign({}, this.getAccount()) })\n            }, this.currentChainId));\n            if (\"result\" in ret) {\n                let successData = ret;\n                console.log(\"====> signAction result\");\n                console.log(ret);\n                const sign = successData.result;\n                return {\n                    messageBytes: b64encoded,\n                    signature: sign,\n                };\n            }\n            else {\n                console.log(\"====> signAction result error\");\n                let errorData = ret;\n                return errorData.error;\n            }\n        });\n    }\n    // input = {message: uint8Array }\n    signPersonalMessage(input) {\n        return __awaiter(this, void 0, void 0, function* () {\n            console.log(\"====> signPersonalMessage：\");\n            console.log(input);\n            const decoder = new TextDecoder(\"utf8\");\n            const b64encoded = btoa(decoder.decode(input.message));\n            const message = atob(b64encoded);\n            const ret = (yield this.provider.request({\n                method: \"sui_signPersonalMessage\",\n                params: {\n                    message: message,\n                },\n                injectParams: Object.assign(Object.assign({}, input), { account: Object.assign({}, this.getAccount()) })\n            }, this.currentChainId));\n            if (\"result\" in ret) {\n                let successData = ret;\n                console.log(\"====> signAction result\");\n                console.log(ret);\n                const sign = successData.result;\n                return {\n                    bytes: b64encoded,\n                    signature: sign,\n                };\n            }\n            else {\n                console.log(\"====> signAction result error\");\n                let errorData = ret;\n                return errorData.error;\n            }\n        });\n    }\n    /// generate txBytes and txSerialize\n    generateTsBytesAndSerizlize(input) {\n        return __awaiter(this, void 0, void 0, function* () {\n            /// txBytes and txSerialize may be constructed in advance by the dapp side\n            let resultTuple = [\"\", \"\"];\n            if (\"txBytes\" in input &&\n                input.txBytes.length > 0 &&\n                \"txSerialize\" in input &&\n                input.txSerialize.length > 0) {\n                resultTuple = [input.txBytes, input.txSerialize];\n            }\n            /// Otherwise, a transactionBlock parameter is required.\n            if (!(\"transactionBlock\" in input)) {\n                throw new universal_provider_1.OKXConnectError(universal_provider_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `params doesn't contains transactionBlock`);\n            }\n            let senderAccounts = this.provider.requestAccountsWithNamespace(universal_provider_1.NameSpaceKeySui);\n            if (senderAccounts.length == 0) {\n                throw new universal_provider_1.OKXConnectError(universal_provider_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `there is no sui account`);\n            }\n            /// sender is required\n            input.transactionBlock.setSender(senderAccounts[0]);\n            const result = yield input.transactionBlock.build({\n                client: this.suiClient,\n            });\n            const txBytes = (0, utils_1.toBase64)(result);\n            const txSerialize = yield transactions_1.Transaction.from(txBytes).toJSON();\n            resultTuple = [txBytes, txSerialize];\n            return new Promise((resolve) => {\n                resolve(resultTuple);\n            });\n        });\n    }\n}\nexports.OKXSuiProvider = OKXSuiProvider;\nexports.default = OKXSuiProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXSuiProvider = void 0;\nvar OKXSuiProvider_1 = require(\"./OKXSuiProvider\");\nObject.defineProperty(exports, \"OKXSuiProvider\", { enumerable: true, get: function () { return OKXSuiProvider_1.OKXSuiProvider; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXBtcProvider = void 0;\nconst _1 = require(\"./\");\nclass OKXBtcProvider {\n    constructor(provider) {\n        this.caip = [\n            \"btc:mainnet\",\n            \"fractal:mainnet\"\n        ];\n        this.provider = provider;\n    }\n    getAddressForChainId(chainId) {\n        var _a, _b;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let accounts = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['btc']) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        });\n        if (accounts == undefined || accounts.length < 0) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `no connected account`);\n        }\n        let account = accounts[0];\n        const address = account.split(':')[2];\n        return address;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let extra = (_c = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['btc']) === null || _b === void 0 ? void 0 : _b.extra) === null || _c === void 0 ? void 0 : _c[chainId];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"compressedPublicKey\"];\n        }\n        return {\n            address: this.getAddressForChainId(chainId),\n            publicKey: publicKey\n        };\n    }\n    /**\n     *\n     * @param signStr\n     * @param chainId\n     * @param type\n     * @returns\n     */\n    signMessage(chainId, signStr, type) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (signStr === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signMessage parmas error`);\n            }\n            let params = {\n                signStr: signStr,\n                from: this.getAddressForChainId(chainId)\n            };\n            if (type) {\n                params.type = type;\n            }\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signMessage\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param toAddress\n     * @param satoshis\n     * @param options { feeRate: 0 }\n     * @returns\n     */\n    sendBitcoin(chainId, toAddress, satoshis, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            let params = {\n                from: this.getAddressForChainId(chainId),\n                to: toAddress,\n                value: (satoshis / 100000000).toString(),\n            };\n            if (options === null || options === void 0 ? void 0 : options.feeRate) {\n                params[\"satBytes\"] = options.feeRate.toString();\n            }\n            let result = yield this.send(chainId, params);\n            if (result !== undefined && ('txhash' in result)) {\n                // return txhash directly\n                return result.txhash;\n            }\n            // or return unexpected result\n            return result;\n        });\n    }\n    //  from - string：当前连接的钱包的 BTC 地址\n    //  to - string：接受 BTC 的地址\n    //  value - string：发送 BTC 的数量\n    //  satBytes - string： (可选) 自定义费率\n    //  memo - string： (可选) 指定 outputs OP_RETURN 内容 示例\n    //  memoPos - number： (可选) 指定 outputs OP_RETURN 输出位置，如果传了 memo 则必须传入 memoPos 指定位置，否则 memo 不生效\n    send(chainId, input) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (!this.checkParameters(input, 'to', 'value')) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send parmas  error`);\n            }\n            input[\"from\"] = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: 'btc_send',\n                    params: input\n                }, chainId);\n                if ('result' in ret) {\n                    return {\n                        txhash: ret.result\n                    };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param psbtHex string 要签名的 psbt 的十六进制字符串\n     * @param options object { autoFinalized: 0 }\n     */\n    signPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.signPsbts(chainId, [psbtHex], [options]).then(psbtResults => {\n                    let results = JSON.parse(psbtResults);\n                    resolve(results[0]);\n                }).catch(error => {\n                    reject(error);\n                });\n            });\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHexs Array\n     * @param options Array [{ autoFinalized: 0 }]\n     * @returns\n     */\n    signPsbts(chainId, psbtHexs, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHexs === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHexs: psbtHexs,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signPsbts\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHex string\n     * @param options object\n     * @returns\n     */\n    signAndPushPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHex === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHex: psbtHex,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signAndPushPsbt\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return JSON.parse(ret.result);\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param address string, receiver address\n     * @param inscriptionId string, 铭文 ID + 协议，没有传协议则默认是 Ordinals NFT ，目前仅支持 Ordinals 及 Atomicals 协议\n     * @param options object, { feeRate: number } custom rates\n     */\n    sendInscription(chainId, address, inscriptionId, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let extension = {\n                address: address,\n                inscriptionId: inscriptionId,\n                options: options\n            };\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (address === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method sendInscription params error`);\n            }\n            var feeRate = 0;\n            if (options && ('feeRate' in options)) {\n                feeRate = options.feeRate;\n            }\n            let coinId = '';\n            let from = this.getAddressForChainId(chainId);\n            var protocolId = 7; //ProtocolIdBRCNFT\n            if (inscriptionId !== 'undefined') {\n                let atomicSuffix = \"-Atomicals\";\n                let ordinalsSuffix = \"-Ordinals\";\n                if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(atomicSuffix.toLowerCase())) {\n                    protocolId = 8; //WXRCProtocolIdARCNFT\n                    inscriptionId = this.removeSuffix(inscriptionId, atomicSuffix);\n                }\n                else if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(ordinalsSuffix.toLowerCase())) {\n                    inscriptionId = this.removeSuffix(inscriptionId, ordinalsSuffix);\n                }\n            }\n            let params = {\n                scenario: 5,\n                feeRate: feeRate,\n                txType: \"20\",\n                to: address,\n                batchBean: [\n                    {\n                        coinAmount: \"1\",\n                        nftId: inscriptionId,\n                        protocolId: protocolId,\n                        coinId: coinId,\n                        inscriptionId: \"\",\n                        from: from\n                    }\n                ],\n                extension: extension\n            };\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_sendInscription\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    removeSuffix(str, suffix) {\n        if (str.endsWith(suffix)) {\n            return str.slice(0, str.length - suffix.length);\n        }\n        return str;\n    }\n    checkParameters(params, ...keys) {\n        var unexistKeys = [];\n        keys.forEach(key => {\n            if (!(`${key}` in params)) {\n                unexistKeys.push(key);\n            }\n        });\n        if (unexistKeys.length > 0) {\n            console.log('not find key: ', unexistKeys.join(\",\"));\n            return false;\n        }\n        return true;\n    }\n    /**\n     *\n     * @param chainId eg. btc:mainnet\n     * @returns eg. btc\n     */\n    checkChainId(chainId) {\n        if (this.caip.includes(chainId)) {\n            let [namespaceKey, _] = chainId.split(\":\");\n            return namespaceKey;\n        }\n        return undefined;\n    }\n}\nexports.OKXBtcProvider = OKXBtcProvider;\nexports.default = OKXBtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCosmosProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXCosmosProvider {\n    constructor(provider) {\n        this.provider = provider;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e, _f;\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount chainId:\", chainId);\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount namespaces:\", JSON.stringify((_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces));\n        let account = (_c = (_b = this.provider.session) === null || _b === void 0 ? void 0 : _b.namespaces[core_1.NameSpaceKeyCosmos]) === null || _c === void 0 ? void 0 : _c.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount account:\", JSON.stringify(account));\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount address:\", address);\n        let extra = (_f = (_e = (_d = this.provider.session) === null || _d === void 0 ? void 0 : _d.namespaces[core_1.NameSpaceKeyCosmos]) === null || _e === void 0 ? void 0 : _e.extra) === null || _f === void 0 ? void 0 : _f[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n            console.log(\"aptos_publicKey\", publicKey);\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            algo: \"secp256k1\",\n            address: address,\n            bech32Address: address,\n            pubKey: this.hexToUint8Array(publicKey),\n        };\n    }\n    signArbitrary(chainId, signerAddress, data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const base64Encoded = window.btoa(data);\n            const signDoc = {\n                chain_id: \"\",\n                account_number: \"0\",\n                sequence: \"0\",\n                fee: {\n                    gas: \"0\",\n                    amount: []\n                },\n                msgs: [{\n                        \"type\": \"sign/MsgSignData\",\n                        \"value\": {\n                            \"signer\": signerAddress,\n                            \"data\": base64Encoded\n                        }\n                    }],\n                memo: \"\"\n            };\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signArbitrary\",\n                \"params\": {\n                    \"signer\": signerAddress,\n                    \"chain_id\": chainId.split(\":\")[1],\n                    \"data\": signDoc\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    if (typeof ret.result == \"string\") {\n                        return JSON.parse(ret.result);\n                    }\n                    else {\n                        return ret.result;\n                    }\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signAmino(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (signDoc.msgs[0].type == \"sign/MsgSignData\") {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signArbitrary\",\n                    \"params\": {\n                        \"signer\": signerAddress,\n                        \"chain_id\": chainId.split(\":\")[1],\n                        \"data\": signDoc\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        return ret.result;\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    return error;\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                }\n            }\n            else {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signAmino\",\n                    \"params\": {\n                        \"signer\": signerAddress,\n                        \"chainId\": chainId.split(\":\")[1],\n                        \"sign_doc\": signDoc,\n                        \"signOptions\": signOptions\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        const resData = JSON.parse(ret.result);\n                        console.log(\"signdoc\", signDoc, resData.signDoc);\n                        signDoc.fee = resData.signDoc.fee;\n                        return { signed: signDoc, signature: resData.signature };\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                    return error;\n                }\n            }\n        });\n    }\n    signDirect(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const object = {\n                bodyBytes: this.bufferToHex(signDoc.bodyBytes),\n                authInfoBytes: this.bufferToHex(signDoc.authInfoBytes),\n                chainId: signDoc.chainId,\n                accountNumber: signDoc.accountNumber ? signDoc.accountNumber.toString() : null,\n                signOptions: signOptions ? signOptions : null\n            };\n            let data = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signDirect\",\n                \"params\": {\n                    \"signer\": signerAddress,\n                    \"chainId\": chainId.split(\":\")[1],\n                    \"sign_doc\": object,\n                }\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    const res = JSON.parse(ret.result);\n                    console.log(\"signdirect result\", res);\n                    signDoc.authInfoBytes = this.messageToBuffer(res.signDoc.authInfoBytes);\n                    return { signed: signDoc, signature: res.signature };\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    messageToBuffer(message) {\n        var buffer = Uint8Array.from([]);\n        try {\n            if (typeof message === \"string\") {\n                buffer = this.hexToUint8Array(message.replace(\"0x\", \"\"));\n            }\n            else {\n                buffer = Uint8Array.from(message);\n            }\n        }\n        catch (err) {\n            console.log(`messageToBuffer error: ${err}`);\n        }\n        return buffer;\n    }\n    bufferToHex(arr) {\n        let output = [...new Uint8Array(arr)]\n            .map(x => x.toString(16).padStart(2, '0'))\n            .join('');\n        return '0x' + output;\n    }\n    hexToUint8Array(hexString) {\n        if (hexString.length % 2 !== 0) {\n            throw \"Invalid hexString\";\n        }\n        var arrayBuffer = new Uint8Array(hexString.length / 2);\n        for (var i = 0; i < hexString.length; i += 2) {\n            var byteValue = parseInt(hexString.substr(i, 2), 16);\n            if (isNaN(byteValue)) {\n                throw \"Invalid hexString\";\n            }\n            arrayBuffer[i / 2] = byteValue;\n        }\n        return arrayBuffer;\n    }\n}\nexports.OKXCosmosProvider = OKXCosmosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXStarknetProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXStarknetProvider {\n    constructor(provider) {\n        this.STARKNET_CHAIN_ID = \"starknet:mainnet\";\n        this.provider = provider;\n    }\n    getChain(chainId) {\n        if (chainId == null) {\n            chainId = this.STARKNET_CHAIN_ID;\n        }\n        if (chainId != this.STARKNET_CHAIN_ID) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, \"The chainId:\" + chainId + \"is wrong for OKXStarknetProvider\");\n        }\n        return chainId;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e;\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[core_1.NameSpaceKeyStarknet]) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        let extra = (_e = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces[core_1.NameSpaceKeyStarknet]) === null || _d === void 0 ? void 0 : _d.extra) === null || _e === void 0 ? void 0 : _e[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address,\n            pubKey: publicKey\n        };\n    }\n    /**\n     *\n     * @param chainId\n     * @param signerAddress\n     * @param data: { types, primaryType, domain, message } as TypedData\n     * @returns [signedDataR, signedDataS]\n     */\n    signMessage(signerAddress, typedData, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            if (signerAddress.length == 0) {\n                signerAddress = this.getAccount(chainId)[\"address\"];\n            }\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"starknet_signMessage\",\n                \"params\": {\n                    \"accountAddress\": signerAddress,\n                    \"typedData\": typedData\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    let results = ret.result;\n                    if (typeof results == 'string') {\n                        results = JSON.parse(results);\n                    }\n                    return [results[\"signedDataR\"], results[\"signedDataS\"]];\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     * sendTransaction\n     * @param chainId\n     * @param signerAddress\n     * @param transaction\n     * @returns { transaction_hash }\n     */\n    sendTransaction(signerAddress, transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let transactionData = {\n                \"accountAddress\": signerAddress,\n                \"executionRequest\": transaction\n            };\n            let data = {\n                \"method\": \"starknet_sendTransaction\",\n                \"params\": {\n                    \"data\": JSON.stringify(transactionData),\n                    \"from\": signerAddress\n                }\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return { transaction_hash: ret.result };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     *\n     * signMessage old API（rarely used, no need provide to external）\n     * @param chainId\n     * @param payload\n     * @returns {transaction_hash, class_hash}\n     */\n    signMessageDeclareContractPayload(payload, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            try {\n                let data = {\n                    \"method\": \"starknet_signMessage\",\n                    \"params\": payload\n                };\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return {\n                        \"transaction_hash\": ret.result[\"txHash\"],\n                        \"class_hash\": ret.result[\"classHash\"]\n                    };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     * sendTransaction old API（rarely used, no need provide to external）\n     * @param chainId\n     * @param signerAddress\n     * @param calls\n     * @param abis\n     * @param transactionsDetail\n     * @returns { transaction_hash }\n     */\n    /// todo： \n    /// 修改方法名\n    /// chainId 放后面\n    sendMessageExecuteTransactionDetail(signerAddress, calls, abis, transactionsDetail, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            const transactions = Array.isArray(calls) ? calls : [calls];\n            const executionRequest = {\n                \"calls\": transactions,\n                \"abis\": abis,\n                \"transactionsDetail\": {\n                    \"nonce\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.nonce,\n                    \"maxFee\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.nonce,\n                    \"version\": transactionsDetail === null || transactionsDetail === void 0 ? void 0 : transactionsDetail.version,\n                }\n            };\n            return this.sendTransaction(signerAddress, executionRequest, chainId);\n        });\n    }\n}\nexports.OKXStarknetProvider = OKXStarknetProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTonProvider = void 0;\nconst _1 = require(\"./\");\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXTonProvider {\n    constructor(generator) {\n        this.statusChangeSubscriptions = [];\n        this.statusChangeErrorSubscriptions = [];\n        this.provider = generator;\n        this.provider.on(\"connect\", () => {\n            let tonWallet = this.wallet();\n            (0, core_1.logDebug)(\"OKXTONProvider event connect:\", JSON.stringify(tonWallet));\n            this.statusChangeSubscriptions.forEach(callback => callback(tonWallet));\n        });\n        this.provider.on(\"reconnect\", () => {\n            let tonWallet = this.wallet();\n            (0, core_1.logDebug)(\"OKXTONProvider event reconnect:\", JSON.stringify(tonWallet));\n            this.statusChangeSubscriptions.forEach(callback => callback(tonWallet));\n        });\n        this.provider.on(\"disconnect\", () => {\n            (0, core_1.logDebug)(\"OKXTONProvider event disconnect:\");\n            this.statusChangeSubscriptions.forEach(callback => callback(null));\n        });\n        this.provider.on(\"connect_error\", (error) => {\n            (0, core_1.logDebug)(\"OKXTONProvider event connect_error:\", JSON.stringify(error));\n            this.statusChangeErrorSubscriptions.forEach(errorsHandler => errorsHandler(error));\n        });\n    }\n    connected() {\n        if (this.provider.connected()) {\n            return !!this.provider.session.namespaces[\"ton\"];\n        }\n        return false;\n    }\n    account() {\n        try {\n            if (!this.provider.session) {\n                return null;\n            }\n            let tonNameSpace = this.provider.session.namespaces['ton'];\n            if (!tonNameSpace || !tonNameSpace.payload || !tonNameSpace.payload.ton_addr) {\n                return null;\n            }\n            let ton_addr = tonNameSpace.payload.ton_addr;\n            return {\n                address: ton_addr.address,\n                chain: ton_addr.network,\n                walletStateInit: ton_addr.walletStateInit,\n                publicKey: ton_addr.publicKey,\n            };\n        }\n        catch (e) {\n            (0, core_1.logDebug)(\"OKXTONProvider account  error:\", JSON.stringify(e));\n            return null;\n        }\n    }\n    wallet() {\n        if (this.connected()) {\n            try {\n                let sessionWallet = this.provider.session.wallet;\n                let tonDeviceInfo = {\n                    platform: sessionWallet.platform,\n                    appName: sessionWallet.appName,\n                    appVersion: sessionWallet.appVersion,\n                    maxProtocolVersion: sessionWallet.maxProtocolVersion,\n                    features: ['ton_sendTransaction'],\n                };\n                const wallet = {\n                    device: tonDeviceInfo,\n                    provider: \"http\",\n                    account: this.account()\n                };\n                let tonNameSpace = this.provider.session.namespaces['ton'];\n                if (tonNameSpace && tonNameSpace.payload && tonNameSpace.payload.ton_proof) {\n                    wallet.connectItems = {\n                        tonProof: tonNameSpace.payload.ton_proof\n                    };\n                }\n                (0, core_1.logDebug)(\"OKXTONProvider wallet :\", JSON.stringify(wallet));\n                return wallet;\n            }\n            catch (e) {\n                (0, core_1.logDebug)(\"OKXTONProvider wallet  error:\", JSON.stringify(e));\n                return null;\n            }\n        }\n        return null;\n    }\n    onStatusChange(callback, errorsHandler) {\n        this.statusChangeSubscriptions.push(callback);\n        if (errorsHandler) {\n            this.statusChangeErrorSubscriptions.push(errorsHandler);\n        }\n        return () => {\n            this.statusChangeSubscriptions = this.statusChangeSubscriptions.filter(item => item !== callback);\n            if (errorsHandler) {\n                this.statusChangeErrorSubscriptions = this.statusChangeErrorSubscriptions.filter(item => item !== errorsHandler);\n            }\n        };\n    }\n    sendTransaction(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (transaction.network && transaction.network !== core_1.TONCHAIN.MAINNET) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, 'OKXTONProvider sendTransaction network error');\n            }\n            if (!transaction.network) {\n                transaction.network = core_1.TONCHAIN.MAINNET;\n            }\n            if (this.provider.session) {\n                if (!transaction.from) {\n                    const accounts = this.provider.requestAccountsWithNamespace('ton');\n                    transaction.from = accounts[0];\n                }\n            }\n            const requestParams = {\n                method: \"ton_sendTransaction\",\n                params: transaction,\n            };\n            let chain = 'ton:' + core_1.TONCHAIN.MAINNET;\n            (0, core_1.logDebug)(\"OKXTONProvider sendTransaction transaction----:\", chain, JSON.stringify(requestParams));\n            return this.provider.request(requestParams, chain);\n        });\n    }\n}\nexports.OKXTonProvider = OKXTonProvider;\nexports.default = OKXTonProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTronProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXTronProvider {\n    constructor(provider) {\n        this.TRON_CHAIN_ID = \"tron:mainnet\";\n        this.provider = provider;\n    }\n    getChain(chainId) {\n        if (chainId == null) {\n            chainId = this.TRON_CHAIN_ID;\n        }\n        if (chainId != this.TRON_CHAIN_ID) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, \"The chainId:\" + chainId + \"is wrong for OKXTronProvider\");\n        }\n        return chainId;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e;\n        chainId = this.getChain(chainId);\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[core_1.NameSpaceKeyTron]) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        let extra = (_e = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces[core_1.NameSpaceKeyTron]) === null || _d === void 0 ? void 0 : _d.extra) === null || _e === void 0 ? void 0 : _e[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address\n        };\n    }\n    stringToHex(str) {\n        let hex = '';\n        for (let i = 0; i < str.length; i++) {\n            hex += str.charCodeAt(i).toString(16).padStart(2, '0');\n        }\n        return hex;\n    }\n    signMessage(data, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"tron_signMessage\",\n                \"params\": {\n                    \"message\": this.stringToHex(data)\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signMessageV2(data, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"tron_signMessageV2\",\n                \"params\": {\n                    \"message\": data\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let data = {\n                \"method\": \"tron_signTransaction\",\n                \"params\": transaction\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    let signedTx;\n                    if (typeof ret.result == \"string\") {\n                        signedTx = JSON.parse(ret.result);\n                    }\n                    else {\n                        signedTx = ret.result;\n                    }\n                    let realSignTx = {};\n                    realSignTx.visible = signedTx.visible;\n                    realSignTx.txID = signedTx.txID;\n                    let rawData = {};\n                    rawData.contract = signedTx.raw_data.contract;\n                    rawData.expiration = signedTx.raw_data.expiration;\n                    rawData.ref_block_bytes = signedTx.raw_data.ref_block_bytes;\n                    rawData.fee_limit = signedTx.raw_data.fee_limit;\n                    rawData.ref_block_hash = signedTx.raw_data.ref_block_hash;\n                    rawData.timestamp = signedTx.raw_data.timestamp;\n                    realSignTx.raw_data = rawData;\n                    realSignTx.raw_data_hex = signedTx.raw_data_hex;\n                    realSignTx.signature = signedTx.signature;\n                    return realSignTx;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signAndSendTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let data = {\n                \"method\": \"tron_signAndSendTransaction\",\n                \"params\": transaction\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n}\nexports.OKXTronProvider = OKXTronProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXUniversalProvider = void 0;\nconst eip155_1 = require(\"./provider/providers/eip155\");\nconst sui_1 = require(\"./provider/providers/sui\");\nconst constants_1 = require(\"./provider/constants\");\nconst eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\nconst client_1 = require(\"./packages/sign-client/client\");\nconst core_1 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"./packages/utils/namespaces\");\nconst solana_1 = __importDefault(require(\"./provider/providers/solana\"));\nconst btc_1 = __importDefault(require(\"./provider/providers/btc\"));\nconst aptos_1 = __importDefault(require(\"./provider/providers/aptos\"));\nconst ton_1 = __importDefault(require(\"./provider/providers/ton\"));\nconst cosmos_1 = __importDefault(require(\"./provider/providers/cosmos\"));\nconst tron_1 = __importDefault(require(\"./provider/providers/tron\"));\nconst utils_1 = require(\"./provider/utils\");\nconst packages_1 = require(\"./packages\");\nconst provider_1 = require(\"./provider\");\nconst starknet_1 = __importDefault(require(\"./provider/providers/starknet\"));\nclass OKXUniversalProvider {\n    static init(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider init() called');\n            (0, core_1.checkMetaData)(opts.dappMetaData);\n            // ignore rpc provider check by default\n            (0, utils_1.setGlobal)('disableProviderPing', true);\n            let provider;\n            if (window && window.okxConnectUniversalinwindow && window.okxConnectUniversalinwindow instanceof OKXUniversalProvider) {\n                (0, core_1.logDebug)('OKXUniversalConnect init() old called');\n                provider = window.okxConnectUniversalinwindow;\n            }\n            else {\n                (0, core_1.logDebug)('OKXUniversalConnect init() new called');\n                provider = new OKXUniversalProvider(opts);\n                if (window) {\n                    window.okxConnectUniversalinwindow = provider;\n                }\n                yield provider.initialize();\n            }\n            (0, core_1.getDefaultReporter)().configVersionAndSide('universalprovider-1.5.2', 'dapp', provider.providerOpts.dappMetaData.name);\n            return provider;\n        });\n    }\n    constructor(opts) {\n        this.rpcProviders = {};\n        this.events = new eventemitter3_1.default();\n        if (!opts.connector || opts.connector.length == 0) {\n            opts.connector = [core_1.AppwalletConnector.getConnector(), core_1.TgwalletConnector.getConnector()];\n        }\n        this.providerOpts = opts;\n    }\n    request(args, chain) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider request() called');\n            (0, core_1.reportLog)('OKXUniversalProvider request() called');\n            if (!this.connected()) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            (0, core_1.logDebug)('OKXUniversalProvider request()  connected ');\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return yield this.getProvider(namespace).request(requestParam);\n        });\n    }\n    buildRequestParamFromRequest(args, chain) {\n        var _a;\n        (0, core_1.logDebug)(\"UniversalProvider request args >>>>>>>: \", chain, (0, core_1.safeJsonStringify)(args));\n        let [namespace, chainId] = this.validateChain(chain);\n        if (!this.session) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Please call connect() before request()\");\n        }\n        let keyArr = Object.keys(this.session.namespaces);\n        if (!chain && keyArr && keyArr.length > 1) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Multiple chains have been linked, the request method requires chain`);\n        }\n        if (namespace == \"aptos\" && chainId == \"mainnet\") {\n            namespace = \"aptos\";\n            chainId = \"637\";\n        }\n        if (namespace == \"movement\" && chainId == \"testnet\") {\n            namespace = \"aptos\";\n            chainId = \"70000060\";\n        }\n        const requestParam = Object.assign(Object.assign({}, args), { chainId: `${namespace}:${chainId}`, redirect: (_a = args.redirect) !== null && _a !== void 0 ? _a : this.sessionConfig.redirect });\n        return { namespace, requestParam };\n    }\n    enable() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.client) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (!this.session) {\n                if (this.connectOpts) {\n                    yield this.connect(this.connectOpts);\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n                }\n            }\n            const accounts = yield this.requestAccounts();\n            return accounts;\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider disconnect() called');\n            (0, core_1.reportLog)('provider disconnect called');\n            if (!this.session) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n                let called = false;\n                const onRequestSent = () => __awaiter(this, void 0, void 0, function* () {\n                    if (!called) {\n                        called = true;\n                        yield this.disconnectAndEmit();\n                        yield this.cleanup();\n                        resolve();\n                        (0, core_1.logDebug)(\"UniversalProvider disconnect Disconnected\");\n                        (0, core_1.reportLog)('provider disconnect disconnected');\n                    }\n                });\n                try {\n                    yield this.client.disconnect();\n                    yield onRequestSent();\n                }\n                catch (e) {\n                    yield onRequestSent();\n                }\n            }));\n        });\n    }\n    disconnectAndEmit() {\n        var _a, _b;\n        this.client.engine.clearData();\n        this.events.emit(\"disconnect\", { topic: (_a = this.session) === null || _a === void 0 ? void 0 : _a.topic });\n        this.events.emit(\"session_delete\", { topic: (_b = this.session) === null || _b === void 0 ? void 0 : _b.topic });\n    }\n    aptosChainNameToGeneralId(chainId) {\n        if (chainId == \"aptos:mainnet\") {\n            return \"aptos:637\";\n        }\n        else if (chainId == \"movement:testnet\") {\n            return \"aptos:70000060\";\n        }\n        else {\n            return chainId;\n        }\n    }\n    replaceAptos(opts) {\n        var _a, _b;\n        let aptosNameSpace = (_a = opts.namespaces) === null || _a === void 0 ? void 0 : _a[\"aptos\"];\n        if (aptosNameSpace != undefined) {\n            let realNS = this.replaceAptosInner(aptosNameSpace);\n            if (opts.namespaces != undefined && \"aptos\" in opts.namespaces && realNS != undefined) {\n                opts.namespaces.aptos = realNS;\n            }\n        }\n        let optionAptosNameSpace = (_b = opts.optionalNamespaces) === null || _b === void 0 ? void 0 : _b[\"aptos\"];\n        if (optionAptosNameSpace != undefined) {\n            let realOptionNS = this.replaceAptosInner(optionAptosNameSpace);\n            if (opts.optionalNamespaces != undefined && \"aptos\" in opts.optionalNamespaces && realOptionNS != undefined) {\n                opts.optionalNamespaces.aptos = realOptionNS;\n            }\n        }\n        return opts;\n    }\n    replaceAptosInner(aptosNameSpace) {\n        var _a;\n        if (aptosNameSpace != undefined) {\n            aptosNameSpace.chains = (_a = aptosNameSpace.chains) === null || _a === void 0 ? void 0 : _a.map(chainId => {\n                return this.aptosChainNameToGeneralId(chainId);\n            });\n            if (aptosNameSpace.defaultChain != undefined) {\n                aptosNameSpace.defaultChain = this.aptosChainNameToGeneralId(aptosNameSpace.defaultChain);\n            }\n        }\n        return aptosNameSpace;\n    }\n    replaceAptosGeneralIdWithNetName(chainId) {\n        if (chainId.includes(\"aptos:637\")) {\n            chainId = chainId.replace(\"aptos:637\", \"aptos:mainnet\");\n        }\n        else if (chainId.includes(\"aptos:70000060\")) {\n            chainId = chainId.replace(\"aptos:70000060\", \"movement:testnet\");\n        }\n        return chainId;\n    }\n    replaceSessionAptos(session) {\n        var _a;\n        let namespaces = (_a = session === null || session === void 0 ? void 0 : session.namespaces) === null || _a === void 0 ? void 0 : _a[\"aptos\"];\n        if (namespaces != undefined && namespaces.chains != undefined) {\n            namespaces.chains = namespaces.chains.map(chain => {\n                return this.replaceAptosGeneralIdWithNetName(chain);\n            });\n            namespaces.accounts = namespaces.accounts.map((account) => {\n                return this.replaceAptosGeneralIdWithNetName(account);\n            });\n            let extra = {};\n            Object.keys(namespaces.extra || {}).forEach((key, index) => {\n                let newKey = this.replaceAptosGeneralIdWithNetName(key);\n                extra[this.replaceAptosGeneralIdWithNetName(key)] = Object.values((session === null || session === void 0 ? void 0 : session.namespaces[\"aptos\"].extra) || {})[index];\n            });\n            namespaces.extra = extra;\n        }\n        (0, core_1.logDebug)(\"replaceSessionAptos\", session);\n    }\n    connected() {\n        (0, core_1.logDebug)('OKXUniversalProvider connected() called');\n        (0, core_1.reportLog)('provider connected called');\n        let disconnectInner = () => {\n            try {\n                this.cleanup();\n                this.client.engine.connectManagerDisconnect();\n            }\n            catch (e) {\n                (0, core_1.logDebug)(\"Error during disconnect:\", e);\n            }\n        };\n        try {\n            if (!this.session)\n                return false;\n            if (!this.client.engine.getCurrentConnectionReady(Object.keys(this.session.namespaces))) {\n                disconnectInner();\n                return false;\n            }\n            return true;\n        }\n        catch (e) {\n            disconnectInner();\n            return false;\n        }\n    }\n    connectAndSign(opts, signRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() called');\n            const updatedOpts = Object.assign(Object.assign({}, opts), { signRequest });\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() opts:', JSON.stringify(opts));\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() signRequest:', JSON.stringify(signRequest));\n            return yield this.connect(updatedOpts);\n        });\n    }\n    connect(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider connect() called');\n            (0, core_1.reportLog)('provider connect called');\n            if (!this.client) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (this.connected()) {\n                return this.session;\n            }\n            opts = this.replaceAptos(opts);\n            (0, core_1.logDebug)(`OKXUniversalProvider connect >>>>`, JSON.stringify(opts));\n            if (opts.sessionConfig === undefined) {\n                opts.sessionConfig = {};\n            }\n            if (opts.sessionConfig.openUniversalUrl === undefined) {\n                opts.sessionConfig.openUniversalUrl = (0, core_1.isMobileUserAgent)();\n            }\n            this.setNamespaces(opts);\n            try {\n                (0, core_1.logDebug)(`UniversalProvider connect opts.stringify ====> ${JSON.stringify(opts)}`);\n                let session = yield this.client.connect(opts);\n                this.replaceSessionAptos(session);\n                (0, core_1.logDebug)(`UniversalProvider connect success ====> ${JSON.stringify(session)}`);\n                if (session) {\n                    this.session = session;\n                    this.client.session = session;\n                    this.setConnectConnector();\n                    (0, core_1.logDebug)(`OKXUniversalProvider connect success opts>>>>`, JSON.stringify(opts));\n                    this.onConnect();\n                    if (opts.signRequest && opts.signRequest.length > 0) {\n                        let requestItem = opts.signRequest[0];\n                        let signResponseList = [];\n                        if (typeof window !== \"undefined\" && window && window.okxConnectUniversalUIinwindow) { //from UI\n                            (0, core_1.logDebug)(`OKXUniversalProvider connect success, us UI SDK>>>>`);\n                            if (this.session.signResponse && this.session.signResponse.length > 0) { // >=6.96\n                                signResponseList = this.session.signResponse;\n                            }\n                        }\n                        else {\n                            (0, core_1.logDebug)(`OKXUniversalProvider connect success, us Universal SDK>>>>`);\n                            if (this.session.signResponse && this.session.signResponse.length > 0) { // >=6.96\n                                signResponseList = this.session.signResponse;\n                            }\n                            else {\n                                signResponseList.push((0, packages_1.creatNotSupportMethodItemReplay)(requestItem));\n                            }\n                        }\n                        (0, core_1.logDebug)(`UniversalProvider connect success connectRequestReply ====> ${JSON.stringify(signResponseList)}`);\n                        setTimeout(() => {\n                            this.events.emit(\"connect_signResponse\", signResponseList);\n                        }, 100);\n                    }\n                    return session;\n                }\n                return undefined;\n            }\n            catch (error) {\n                (0, core_1.logDebug)(`UniversalProvider connect error ====> `, JSON.stringify(error));\n                throw error;\n            }\n        });\n    }\n    syncAllAddresses() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if ((0, provider_1.syncAddressAvailable)(this.session.wallet)) {\n                return this.client.syncAllAddress();\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n            }\n        });\n    }\n    setConnectConnector() {\n        var _a;\n        this.client.setConnectConnector((_a = this.session) === null || _a === void 0 ? void 0 : _a.wallet);\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    setDefaultChain(chain, rpcUrl) {\n        (0, core_1.logDebug)('OKXUniversalProvider setDefaultChain() called');\n        // chain = this.aptosChainNameToGeneralId(chain)\n        try {\n            // ignore without active session\n            if (!this.connected())\n                return;\n            const [namespace, chainId] = this.validateChain(chain);\n            const provider = this.getProvider(namespace);\n            provider.setDefaultChain(chainId, rpcUrl);\n        }\n        catch (error) {\n            // ignore the error if the fx is used prematurely before namespaces are set\n            if (!/Please call connect/.test(error.message))\n                throw error;\n        }\n    }\n    checkStorage() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let sessionInfoStr = yield this.getFromStore(\"connectSession\");\n            (0, core_1.logDebug)(sessionInfoStr);\n            if (sessionInfoStr) {\n                (0, core_1.logDebug)(`checkStorage error start`);\n                try {\n                    let sessionInfo = sessionInfoStr;\n                    this.session = sessionInfo;\n                    this.client.session = this.session;\n                    this.setConnectConnector();\n                    yield this.client.restoreconnect(sessionInfo);\n                    this.sessionConfig = sessionInfo.sessionConfig;\n                    this.client.sessionConfig = this.sessionConfig;\n                    (0, core_1.logDebug)('[evm u-provider] do reconnection', this.session);\n                    this.createProviders();\n                    this.registerEventListeners();\n                    setTimeout(() => {\n                        this.events.emit(\"reconnect\", { session: this.session });\n                    }, 100);\n                }\n                catch (e) {\n                    yield this.cleanup();\n                    (0, core_1.logDebug)(`checkStorage error ${JSON.stringify(e)}`);\n                }\n            }\n        });\n    }\n    initialize() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider initialize() called');\n            (0, core_1.reportLog)('provider initialize called');\n            const data = Object.assign({ url: window.location.hostname, origin: window.location.origin }, this.providerOpts.dappMetaData);\n            this.client = new client_1.SignClient(data, this.events);\n            this.registerConnector(this.providerOpts.connector);\n            yield this.checkStorage();\n        });\n    }\n    createProviders() {\n        if (!this.client) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n        }\n        if (!this.connected()) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Session not initialized. Please call connect() before enable()\");\n        }\n        const providersToCreate = [\n            ...new Set(Object.keys(this.session.namespaces)\n                .filter((namespace) => { var _a, _b; return ((_b = (_a = this.session.namespaces[namespace]) === null || _a === void 0 ? void 0 : _a.accounts) === null || _b === void 0 ? void 0 : _b.length) > 0; })\n                .map((namespace) => (0, namespaces_1.parseNamespaceKey)(namespace))),\n        ];\n        providersToCreate.forEach((namespace) => {\n            if (!this.session)\n                return;\n            const namespacesValue = this.session.namespaces;\n            const currentNameSpace = namespacesValue[namespace];\n            (0, core_1.logDebug)(\"init eip155 >> \", currentNameSpace);\n            switch (namespace) {\n                case \"eip155\":\n                    const opts = {\n                        namespace: currentNameSpace\n                    };\n                    this.rpcProviders[namespace] = new eip155_1.Eip155Provider(opts, this.client, this.events);\n                    break;\n                case \"solana\":\n                    const opts1 = {\n                        namespace: currentNameSpace\n                    };\n                    let solanaProvider = new solana_1.default(opts1, \"solana\", this.client, this.events);\n                    this.rpcProviders[namespace] = solanaProvider;\n                    let sonicProvider = new solana_1.default(opts1, \"sonic\", this.client, this.events);\n                    this.rpcProviders['sonic'] = sonicProvider;\n                    let svmProvider = new solana_1.default(opts1, \"svm\", this.client, this.events);\n                    this.rpcProviders['svm'] = svmProvider;\n                    // this.rpcProviders[namespace] = new SolanaProvider(opts1, () => { return this.session; });\n                    break;\n                case \"ton\":\n                    const optsTon = {\n                        namespace: currentNameSpace\n                    };\n                    let tonProvider = new ton_1.default(optsTon, this.client, this.events);\n                    this.rpcProviders[namespace] = tonProvider;\n                    break;\n                case \"sui\":\n                    const optsSui = {\n                        namespace: currentNameSpace\n                    };\n                    let suiProvider = new sui_1.SuiProvider(optsSui, this.client, this.events);\n                    suiProvider.name = \"sui\";\n                    this.rpcProviders[namespace] = suiProvider;\n                    break;\n                case \"btc\":\n                    const optsBtc = {\n                        namespace: currentNameSpace\n                    };\n                    let btcProvider = new btc_1.default(optsBtc, \"btc\", this.client, this.events);\n                    this.rpcProviders[\"btc\"] = btcProvider;\n                    let fbProvider = new btc_1.default(optsBtc, \"fractal\", this.client, this.events);\n                    this.rpcProviders[\"fractal\"] = fbProvider;\n                    break;\n                case \"aptos\":\n                    let aptosProvider = new aptos_1.default({\n                        namespace: currentNameSpace\n                    }, \"aptos\", this.client, this.events);\n                    this.rpcProviders[namespace] = aptosProvider;\n                    let moveProvider = new aptos_1.default({\n                        namespace: currentNameSpace\n                    }, \"movement\", this.client, this.events);\n                    this.rpcProviders[\"movement\"] = moveProvider;\n                    break;\n                case \"cosmos\":\n                    let cosmosProvider = new cosmos_1.default({\n                        namespace: currentNameSpace\n                    }, this.client, this.events);\n                    this.rpcProviders[namespace] = cosmosProvider;\n                    break;\n                case \"tron\":\n                    let tronProvider = new tron_1.default({\n                        namespace: currentNameSpace\n                    }, this.client, this.events);\n                    this.rpcProviders[namespace] = tronProvider;\n                    break;\n                case \"starknet\":\n                    let starknetProvider = new starknet_1.default({\n                        namespace: currentNameSpace\n                    }, \"starknet\", this.client, this.events);\n                    this.rpcProviders[namespace] = starknetProvider;\n                    break;\n            }\n        });\n    }\n    registerEventListeners() {\n        if (typeof this.client === \"undefined\") {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client is not initialized\");\n        }\n        this.client.engine.addDisconnectListener(() => {\n            this.disconnectAndEmit();\n            this.cleanup();\n        });\n        this.on(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, (caip2ChainId) => {\n            this.onChainChanged(caip2ChainId);\n        });\n        this.on(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, (nameSpaces) => {\n            if (nameSpaces) {\n                const nameSpacekey = Object.keys(nameSpaces)[0];\n                if (this.session) {\n                    this.session.namespaces[nameSpacekey] = nameSpaces[nameSpacekey];\n                    if (this.session) {\n                        this.persist(\"connectSession\", this.session);\n                        this.events.emit(\"session_update\", this.session);\n                    }\n                    (0, core_1.logDebug)(\"PROVIDER_EVENTS.UPDATE_NAMESPACES this.session... ->>>\", JSON.stringify(this.session));\n                }\n            }\n        });\n    }\n    getProvider(namespace) {\n        (0, core_1.logDebug)('current get providers', this.rpcProviders);\n        (0, core_1.logDebug)('query namespace: ', namespace);\n        return this.rpcProviders[namespace];\n    }\n    setNamespaces(params) {\n        this.connectOpts = params;\n        const { namespaces, sessionConfig } = params;\n        const data = {\n            origin: window.location.origin,\n            url: window.location.hostname,\n            name: this.providerOpts.dappMetaData.name,\n            icon: this.providerOpts.dappMetaData.icon,\n        };\n        this.sessionConfig = Object.assign({ dappInfo: data }, sessionConfig);\n        (0, core_1.logDebug)(\"setNamespaces sessionConfig>>>\", this.sessionConfig);\n        this.client.sessionConfig = this.sessionConfig;\n        this.persist(\"sessionConfig\", sessionConfig);\n    }\n    validateChain(chain) {\n        var _a;\n        let [namespace, chainId] = (chain === null || chain === void 0 ? void 0 : chain.split(\":\")) || [\"\", \"\"];\n        if (!this.session || !this.session.namespaces || !Object.keys(this.session.namespaces).length) {\n            (0, core_1.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        if (namespace) {\n            if (!this.isChainNamespaceInSession(namespace)) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace '${namespace}' is not configured. Please call connect() first with namespace config.`);\n            }\n            if (chainId && chain) {\n                (0, core_1.logDebug)('this.session.namespaces -->> ', namespace, JSON.stringify(this.session.namespaces));\n                const chainsArr = (_a = this.session.namespaces[namespace]) === null || _a === void 0 ? void 0 : _a.chains;\n                (0, core_1.logDebug)('get chainsArr & chain', JSON.stringify(chainsArr), chain);\n                if (chainsArr && !chainsArr.includes(chain)) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace not include the chain '${chain}'`);\n                }\n            }\n        }\n        if (namespace && chainId) {\n            (0, core_1.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        let defaultNamespace = (0, namespaces_1.parseNamespaceKey)(Object.keys(this.session.namespaces)[0]);\n        const defaultChain = this.rpcProviders[defaultNamespace].getDefaultChain();\n        (0, core_1.logDebug)('get default chain:', defaultChain);\n        return [defaultNamespace, defaultChain];\n    }\n    isChainNamespaceInSession(namespaceStr) {\n        var _a, _b;\n        if (Object.keys(((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces) || {})\n            .map((key) => (0, namespaces_1.parseNamespaceKey)(key))\n            .includes(namespaceStr)) {\n            return true;\n        }\n        let isChainNamespaceInSession = false;\n        Object.values(((_b = this.session) === null || _b === void 0 ? void 0 : _b.namespaces) || {})\n            .forEach(namespace => {\n            namespace.chains.forEach(chain => {\n                if (chain.split(\":\")[0] == namespaceStr) {\n                    isChainNamespaceInSession = true;\n                }\n            });\n        });\n        return isChainNamespaceInSession;\n    }\n    requestAccountsWithNamespace(namespace) {\n        return this.getProvider(namespace).requestAccounts();\n    }\n    requestDefaultChainWithNamespace(namespace) {\n        return this.getProvider(namespace).getDefaultChain();\n    }\n    requestAccounts() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const [namespace] = this.validateChain();\n            return yield this.getProvider(namespace).requestAccounts();\n        });\n    }\n    onChainChanged(caip2Chain) {\n        var _a;\n        if (!((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces))\n            return;\n        const [namespace, chainId] = this.validateChain(caip2Chain);\n        if (!chainId)\n            return;\n        if (this.session.namespaces[namespace]) {\n            this.session.namespaces[namespace].defaultChain = chainId;\n            this.persist(\"connectSession\", this.session);\n        }\n        this.events.emit(\"chainChanged\", chainId);\n    }\n    onConnect() {\n        this.createProviders();\n        if (this.session) {\n            this.persist(\"connectSession\", this.session);\n        }\n        this.events.emit(\"connect\", { session: this.session });\n        this.registerEventListeners();\n    }\n    cleanup() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.session = undefined;\n            this.client.session = undefined;\n            this.setConnectConnector();\n            this.sessionProperties = undefined;\n            this.persist(\"optionalNamespaces\", undefined);\n            this.persist(\"sessionProperties\", undefined);\n            this.persist(\"connectSession\", undefined);\n        });\n    }\n    persist(key, data) {\n        (0, core_1.logDebug)('[evm u-provider] persisit data', key, data);\n        return this.client.engine.saveSessionContent(key, data);\n    }\n    getFromStore(key) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.client.engine.getSessionContent(key);\n        });\n    }\n    showRequestModal(args, chain) {\n        try {\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return this.getProvider(namespace).showRequestModal(requestParam);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    openWallet(engineConnectInfo, connector) {\n        this.client.openWallet(engineConnectInfo, connector);\n    }\n    registerConnector(connectors) {\n        this.client.registerConnector(connectors);\n    }\n}\nexports.OKXUniversalProvider = OKXUniversalProvider;\nexports.default = OKXUniversalProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXStarknetProvider = exports.OKXTronProvider = exports.OKXTonProvider = exports.OKXCosmosProvider = exports.OKXBtcProvider = exports.OKXUniversalProvider = void 0;\n__exportStar(require(\"./provider/types\"), exports);\n__exportStar(require(\"./packages\"), exports);\nvar OKXUniversalProvider_1 = require(\"./OKXUniversalProvider\");\nObject.defineProperty(exports, \"OKXUniversalProvider\", { enumerable: true, get: function () { return OKXUniversalProvider_1.OKXUniversalProvider; } });\nvar OKXBtcProvider_1 = require(\"./OKXBtcProvider\");\nObject.defineProperty(exports, \"OKXBtcProvider\", { enumerable: true, get: function () { return OKXBtcProvider_1.OKXBtcProvider; } });\nvar OKXCosmosProvider_1 = require(\"./OKXCosmosProvider\");\nObject.defineProperty(exports, \"OKXCosmosProvider\", { enumerable: true, get: function () { return OKXCosmosProvider_1.OKXCosmosProvider; } });\nvar OKXTonProvider_1 = require(\"./OKXTonProvider\");\nObject.defineProperty(exports, \"OKXTonProvider\", { enumerable: true, get: function () { return OKXTonProvider_1.OKXTonProvider; } });\nvar OKXTronProvider_1 = require(\"./OKXTronProvider\");\nObject.defineProperty(exports, \"OKXTronProvider\", { enumerable: true, get: function () { return OKXTronProvider_1.OKXTronProvider; } });\nvar OKXStarknetProvider_1 = require(\"./OKXStarknetProvider\");\nObject.defineProperty(exports, \"OKXStarknetProvider\", { enumerable: true, get: function () { return OKXStarknetProvider_1.OKXStarknetProvider; } });\n__exportStar(require(\"@okxconnect/core\"), exports);\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./utils\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SignClient = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"../utils/namespaces\");\nconst ConnectMethodUtils_1 = require(\"../utils/ConnectMethodUtils\");\nconst constants_1 = require(\"../../provider/constants\");\nclass SignClient extends core_1.ISignClient {\n    constructor(metaData, events) {\n        super(metaData);\n        // ---------- Engine ----------------------------------------------- //\n        this.connect = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    var connectRequest = [];\n                    (0, core_1.logDebug)(`client connect params >>>`, JSON.stringify(params));\n                    var requestAccountItem = {\n                        name: \"requestAccounts\",\n                        requiredNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.namespaces),\n                        optionalNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.optionalNamespaces),\n                    };\n                    this.engine.setSessionConnectingListener(() => {\n                        (0, core_1.logDebug)(`sessionConnectingListener >>>`);\n                        this.events.emit(constants_1.PROVIDER_EVENTS.SESSION_CONNECTING);\n                    });\n                    if (params.signRequest) {\n                        requestAccountItem.connectRequestMethods = yield (0, ConnectMethodUtils_1.connectMethodsToConnectWalletMethods)(params.signRequest, requestAccountItem.requiredNamespaces);\n                    }\n                    connectRequest.push(requestAccountItem);\n                    (0, core_1.logDebug)(`client connect connectRequest >>>`, JSON.stringify(connectRequest));\n                    this.engine.universalConnect(connectRequest, Object.assign({ dappInfo: this.metadata }, params.sessionConfig), (info) => {\n                        if (info && info.connectRequest) {\n                            (0, core_1.logDebug)(`universalConect info.connectRequest :`, info.connectRequest);\n                            (0, core_1.logDebug)(`universalConect url:`, (0, core_1.getOKXLink)(info.connectRequest, this.sessionConfig.useMini));\n                            this.events.emit(\"display_uri\", (0, core_1.getOKXLink)(info.connectRequest, this.sessionConfig.useMini));\n                            this.events.emit(\"short_display_uri\", (0, core_1.getAppWalletShortDeepLink)(info.connectRequest.topic, info.connectRequest.clientId));\n                            (0, core_1.logDebug)(`universalConect EngineConnectInfo  ${JSON.stringify(info)}`);\n                            this.events.emit(\"okx_engine_connect_params\", info);\n                        }\n                    }).then((session) => __awaiter(this, void 0, void 0, function* () {\n                        (0, namespaces_1.fillParamsToSession)(session, params.namespaces, params.optionalNamespaces, this.sessionConfig);\n                        (0, core_1.logDebug)(`signClient: connect: session ${JSON.stringify(session)}`);\n                        if (params.signRequest) {\n                            yield (0, ConnectMethodUtils_1.connectMethodsResponseUpdate)(session, params.signRequest);\n                        }\n                        resolve(session);\n                    })).catch((e) => {\n                        (0, core_1.logDebug)(`signClient: connect: catch ${JSON.stringify(e)}`);\n                        this.events.emit(\"connect_error\", e);\n                        reject(e);\n                    });\n                }\n                catch (error) {\n                    (0, core_1.logDebug)(`signClient: connect:  ${JSON.stringify(error)}`);\n                    reject(error);\n                }\n            }));\n        });\n        this.restoreconnect = (sessionConfig) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.restoreconnect(sessionConfig, (session) => {\n                    if (session) {\n                        resolve(session);\n                    }\n                    else {\n                        reject();\n                    }\n                });\n            });\n        });\n        this.reject = (params) => __awaiter(this, void 0, void 0, function* () {\n        });\n        this.request = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                (0, core_1.logDebug)(\"clint request --params>>>> >\", (_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl, (0, core_1.safeJsonStringify)(params));\n                try {\n                    // this.sessionConfig\n                    if (((_b = this.sessionConfig) === null || _b === void 0 ? void 0 : _b.openUniversalUrl) && (0, core_1.isIos)()) {\n                        this.openOKXWallet();\n                    }\n                    yield this.engine.send(params, {\n                        resolve: (response) => {\n                            delete response.requestId;\n                            (0, core_1.logDebug)(\"clint request --response >\", (0, core_1.safeJsonStringify)(response));\n                            if (('error' in response) && response.error) {\n                                let error = response.error;\n                                reject(new core_1.OKXConnectError(response.error.code, response.method + \":\" + error.message));\n                            }\n                            else {\n                                resolve(response);\n                            }\n                        },\n                        onAck: () => {\n                            var _a;\n                            if (!(0, core_1.isIos)() && ((_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl)) {\n                                this.openOKXWallet();\n                            }\n                        }\n                    });\n                }\n                catch (e) {\n                    (0, core_1.logDebug)(\"clint request --error:\", e);\n                    reject(e);\n                }\n            }));\n        });\n        this.disconnect = () => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.send({\n                    method: \"disconnect\"\n                }, {\n                    onAck: () => {\n                        resolve();\n                    }\n                }, 86400000).catch((error) => {\n                    console.log(`disconnect : ${JSON.stringify(error)}`);\n                    reject(error);\n                });\n            });\n        });\n        this.engine = new core_1.Engine(metaData.name);\n        this.events = events;\n        this.metadata = metaData;\n    }\n    openOKXWallet() {\n        // if (this.openUniversalUrl){\n        (0, core_1.logDebug)('bridge-provider ==>> connect_5');\n        this.engine.openWallet({ tmaReturnUrl: this.sessionConfig.tmaReturnUrl });\n        // if (this.sessionConfig?.useMini){\n        //     let url = getTelegramWalletTWAUrl(undefined,this.sessionConfig.tmaReturnUrl)\n        //     openOKXTMAWalletlinkWithFallback(url)\n        // }else{\n        //     openOKXDeeplink(standardDeeplink);\n        // }\n        // }\n    }\n    syncAllAddress() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.send({\n                    method: \"sync_all_addresses\"\n                }, {\n                    resolve: (response) => {\n                        delete response.requestId;\n                        (0, core_1.logDebug)(\"clint syncAllAddress --response >\", JSON.stringify(response));\n                        if (('error' in response) && response.error) {\n                            let error = response.error;\n                            reject(new core_1.OKXConnectError(response.error.code, response.method + \":\" + error.message));\n                        }\n                        else {\n                            let allAddressStr = response.result;\n                            resolve((0, ConnectMethodUtils_1.syncResoonseToRequire)(allAddressStr));\n                        }\n                    }\n                }).catch((error) => {\n                    console.log(`disconnect : ${JSON.stringify(error)}`);\n                    reject(error);\n                });\n            });\n        });\n    }\n    registerConnector(connectors) {\n        this.engine.registerConnector(connectors);\n    }\n    openWallet(engineConnectInfo, connector) {\n        this.engine.openWallet(engineConnectInfo, connector);\n    }\n    setConnectConnector(wallet) {\n        this.engine.setConnectConnector(wallet);\n    }\n}\nexports.SignClient = SignClient;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.connectSupportMethods = void 0;\nexports.creatNotSupportMethodItemReplay = creatNotSupportMethodItemReplay;\nexports.connectMethodsAdaptOldVersion = connectMethodsAdaptOldVersion;\nexports.connectMethodsResponseUpdate = connectMethodsResponseUpdate;\nexports.connectMethodsToConnectWalletMethods = connectMethodsToConnectWalletMethods;\nexports.syncResoonseToRequire = syncResoonseToRequire;\nconst core_1 = require(\"@okxconnect/core\");\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst provider_1 = require(\"../../provider\");\nfunction isArray(value) {\n    return typeof value === \"object\" && value !== null && Array.isArray(value);\n}\nfunction isRecord(value) {\n    return typeof value === \"object\" && value !== null && !Array.isArray(value);\n}\n// \"wallet_addEthereumChain\",\n// \"solana_signMessage\",  There are risks\nexports.connectSupportMethods = Object.freeze([\n    \"personal_sign\",\n    \"sui_signMessage\",\n    \"sui_signPersonalMessage\",\n    \"btc_signMessage\",\n    \"aptos_signMessage\",\n    \"cosmos_signArbitrary\",\n    \"tron_signMessage\",\n    \"tron_signMessageV2\",\n    \"starknet_signMessage\",\n    \"sync_all_addresses\"\n]);\nfunction creatNotSupportMethodItemReplay(requestParams) {\n    let notSupportError = new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n    var errorItem = {\n        method: requestParams.method,\n        chainId: requestParams.chainId,\n        error: {\n            code: notSupportError.code,\n            message: notSupportError.message\n        },\n    };\n    return errorItem;\n}\nfunction connectMethodsAdaptOldVersion(requestParams, session) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b, _c, _d, _e;\n        try {\n            (0, core_1.logDebug)(\"connectMethodsAdaptOldVersion start params :\", JSON.stringify(requestParams));\n            let callBackParams = {};\n            if (requestParams.method === \"solana_signMessage\") {\n                let solAccount = (_a = session.namespaces[core_1.NameSpaceKeySOL]) === null || _a === void 0 ? void 0 : _a.accounts.filter(function (account1) {\n                    return account1.startsWith(requestParams.chainId);\n                })[0];\n                const solAddress = (0, provider_1.fromAccountToAddress)(solAccount);\n                if (requestParams.params && solAddress && \"message\" in requestParams.params) {\n                    let realMessage = requestParams.params.message;\n                    if (((_b = session.wallet) === null || _b === void 0 ? void 0 : _b.appName) == \"OKX Wallet\") {\n                        let encodeMessage = new TextEncoder().encode(realMessage);\n                        realMessage = bs58_1.default.encode(encodeMessage);\n                    }\n                    requestParams.params = {\n                        message: realMessage,\n                        \"pubkey\": solAddress\n                    };\n                    callBackParams = {\n                        publicKey: solAddress\n                    };\n                    (0, core_1.logDebug)(\"solana_signMessage account and address:\", JSON.stringify(solAccount), solAddress);\n                    (0, core_1.logDebug)(\"solana_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"sui_signMessage\" || requestParams.method === \"sui_signPersonalMessage\") {\n                if (\"message\" in requestParams.params && requestParams.params.message) {\n                    let suiMessage = JSON.parse(JSON.stringify(requestParams.params.message));\n                    let convertedArray = Object.values(suiMessage);\n                    let uint8Array = new Uint8Array(convertedArray);\n                    let decoder = new TextDecoder(\"utf8\");\n                    let b64encoded = btoa(decoder.decode(uint8Array));\n                    requestParams.params = {\n                        message: atob(b64encoded),\n                    };\n                    console.log(\"sui_signMessag suiMessagee suiMessageb64:>>>>\", JSON.stringify(requestParams.params), b64encoded);\n                    if (requestParams.method === \"sui_signMessage\") {\n                        callBackParams = {\n                            \"messageBytes\": b64encoded,\n                            \"signature\": \"\"\n                        };\n                    }\n                    else if (requestParams.method === \"sui_signPersonalMessage\") {\n                        callBackParams = {\n                            \"bytes\": b64encoded,\n                            \"signature\": \"\"\n                        };\n                    }\n                    (0, core_1.logDebug)(\"sui_signMessage/sui_signPersonalMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"btc_signMessage\") {\n                let btcAccounts = (_c = session.namespaces[core_1.NameSpaceKeyBtc]) === null || _c === void 0 ? void 0 : _c.accounts.filter(function (account2) {\n                    return account2.startsWith(requestParams.chainId);\n                });\n                let btcAccount = btcAccounts[0];\n                const btcAddress = (0, provider_1.fromAccountToAddress)(btcAccount);\n                (0, core_1.logDebug)(\"btc_signMessage account and address:\", JSON.stringify(btcAccount), btcAddress);\n                if (btcAddress) {\n                    if (\"message\" in requestParams.params && requestParams.params.message && typeof requestParams.params.message === 'string') {\n                        requestParams.params = {\n                            from: btcAddress,\n                            signStr: requestParams.params.message\n                        };\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                    }\n                    requestParams.params[\"from\"] = btcAddress;\n                    (0, core_1.logDebug)(\"btc_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"aptos_signMessage\") {\n                let paramData = requestParams.params;\n                let aptosAccount = (_d = session.namespaces[core_1.NameSpaceKeyAptos]) === null || _d === void 0 ? void 0 : _d.accounts.filter(function (account3) {\n                    return account3.startsWith(requestParams.chainId);\n                })[0];\n                let aptosAddress = (0, provider_1.fromAccountToAddress)(aptosAccount);\n                if (paramData && aptosAddress) {\n                    let prefix = \"APTOS\";\n                    let message = \"\", nonce = \"\";\n                    var fullMessage = prefix;\n                    let application = window.location.protocol + \"//\" + window.location.hostname;\n                    if (\"address\" in paramData && paramData.address) {\n                        fullMessage += \"\\naddress: \" + aptosAddress;\n                    }\n                    if (\"application\" in paramData && paramData.application) {\n                        fullMessage += \"\\napplication: \" + application;\n                    }\n                    let aptosChainId = 1;\n                    if (\"chainId\" in paramData && paramData.chainId) {\n                        if (paramData.chainId == \"aptos:mainnet\") {\n                            aptosChainId = 1;\n                        }\n                        else if (paramData.chainId == \"movement:testnet\") {\n                            aptosChainId = 2;\n                        }\n                        fullMessage += \"\\nchainId: \" + aptosChainId;\n                    }\n                    if (\"message\" in paramData) {\n                        fullMessage += \"\\nmessage: \" + paramData.message;\n                        message = paramData.message;\n                    }\n                    if (\"nonce\" in paramData) {\n                        fullMessage += \"\\nnonce: \" + paramData.nonce;\n                        nonce = paramData.nonce;\n                    }\n                    const utf8Array = new TextEncoder().encode(fullMessage);\n                    const hex = Array.from(utf8Array)\n                        .map(byte => byte.toString(16).padStart(2, \"0\"))\n                        .join(\"\");\n                    requestParams.params = {\n                        \"message\": hex,\n                    };\n                    (0, core_1.logDebug)(\"aptos_signMessage requestParams:\", JSON.stringify(requestParams));\n                    callBackParams = {\n                        address: aptosAddress,\n                        application: application,\n                        chainId: aptosChainId,\n                        fullMessage: fullMessage,\n                        message: message,\n                        nonce: nonce,\n                        prefix: prefix,\n                        signature: \"\",\n                    };\n                    (0, core_1.logDebug)(\"aptos_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"cosmos_signArbitrary\") {\n                let cosmosAccount = (_e = session === null || session === void 0 ? void 0 : session.namespaces[core_1.NameSpaceKeyCosmos]) === null || _e === void 0 ? void 0 : _e.accounts.filter(function (account_cosmos) {\n                    return account_cosmos.startsWith(requestParams.chainId);\n                })[0];\n                const cosmosAddress = (0, provider_1.fromAccountToAddress)(cosmosAccount);\n                let cosmosData = requestParams.params[\"message\"];\n                const cosmosBase64Encoded = btoa(cosmosData);\n                (0, core_1.logDebug)(\"cosmos_signArbitrary account and address:\", JSON.stringify(cosmosAccount), cosmosAddress);\n                (0, core_1.logDebug)(\"cosmos_signArbitrary cosmosBase64Encoded:\", cosmosBase64Encoded);\n                if (cosmosData && cosmosAddress) {\n                    const signDoc = {\n                        chain_id: \"\",\n                        account_number: \"0\",\n                        sequence: \"0\",\n                        fee: {\n                            gas: \"0\",\n                            amount: []\n                        },\n                        msgs: [{\n                                \"type\": \"sign/MsgSignData\",\n                                \"value\": {\n                                    \"signer\": cosmosAddress,\n                                    \"data\": cosmosBase64Encoded\n                                }\n                            }],\n                        memo: \"\"\n                    };\n                    requestParams.params = {\n                        \"signer\": cosmosAddress,\n                        \"chain_id\": requestParams.chainId.split(\":\")[1],\n                        \"data\": signDoc\n                    };\n                    (0, core_1.logDebug)(\"cosmos_signArbitrary callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            (0, core_1.logDebug)(\"sol_handleSignatureData end params:\", JSON.stringify(requestParams));\n        }\n        catch (error) {\n            throw error;\n        }\n    });\n}\nfunction connectMethodsResponseUpdate(session, requestParams) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a;\n        try {\n            if (session.signResponse) {\n                (0, core_1.logDebug)(\"connectMethodsResponseUpdate signResponse:\", JSON.stringify(session.signResponse));\n                (0, core_1.logDebug)(\"connectMethodsResponseUpdate session.namespaces:\", JSON.stringify(session.namespaces));\n                for (const methodItem of session.signResponse) {\n                    (0, core_1.logDebug)(\"connectMethodsResponseUpdate methodItem:\", JSON.stringify(methodItem));\n                    if (\"result\" in methodItem) {\n                        if (methodItem.method === \"solana_signMessage\") {\n                            let solanaSuccessData = methodItem.result;\n                            (0, core_1.logDebug)(\"solana_signMessage methodItem.chainId:\", methodItem.chainId);\n                            let account = (_a = session.namespaces[core_1.NameSpaceKeySOL]) === null || _a === void 0 ? void 0 : _a.accounts.filter(function (account) {\n                                (0, core_1.logDebug)(\"solana_signMessage account:\", account);\n                                return account.startsWith(methodItem.chainId);\n                            })[0];\n                            (0, core_1.logDebug)(\"solana_signMessage result account:\", solanaSuccessData, account);\n                            if (solanaSuccessData && account) {\n                                methodItem.result = {\n                                    \"signature\": bs58_1.default.decode(solanaSuccessData),\n                                    \"publicKey\": (0, provider_1.fromAccountToAddress)(account)\n                                };\n                            }\n                        }\n                        else if (methodItem.method === \"sui_signMessage\" || methodItem.method === \"sui_signPersonalMessage\") {\n                            let suiMethod = requestParams.filter(function (requestMethod) {\n                                return requestMethod.method === methodItem.method;\n                            })[0];\n                            if (suiMethod && suiMethod.params && \"message\" in suiMethod.params) {\n                                let suiMessage = suiMethod.params.message;\n                                let suiMessageb64 = btoa(suiMessage);\n                                console.log(\"sui_signMessag suiMessagee suiMessageb64:>>>>\", suiMessage, suiMessageb64);\n                                if (methodItem.method === \"sui_signMessage\") {\n                                    methodItem.result = {\n                                        \"messageBytes\": suiMessageb64,\n                                        \"signature\": methodItem.result\n                                    };\n                                }\n                                else if (methodItem.method === \"sui_signPersonalMessage\") {\n                                    methodItem.result = {\n                                        \"bytes\": suiMessageb64,\n                                        \"signature\": methodItem.result\n                                    };\n                                }\n                            }\n                        }\n                        else if (methodItem.method === \"aptos_signMessage\") {\n                            if (methodItem.chainId === \"aptos:637\") {\n                                methodItem.chainId = \"aptos:mainnet\";\n                            }\n                            else if (methodItem.chainId === \"aptos:70000060\") {\n                                methodItem.chainId = \"movement:testnet\";\n                            }\n                            methodItem.result = JSON.parse(methodItem.result);\n                            console.log(\"aptos_signMessage result methodItem.result before:>>>>\", JSON.stringify(methodItem.result));\n                            if (methodItem.result && \"signature\" in methodItem.result) {\n                                let aptosSignature = methodItem.result.signature;\n                                if (aptosSignature && aptosSignature.startsWith(\"0x\")) {\n                                    aptosSignature = aptosSignature.slice(2, aptosSignature.length);\n                                    methodItem.result.signature = aptosSignature;\n                                }\n                            }\n                            console.log(\"aptos_signMessage result methodItem.result after:>>>>\", JSON.stringify(methodItem.result));\n                        }\n                        else if (methodItem.method === \"cosmos_signArbitrary\") {\n                            methodItem.result = JSON.parse(methodItem.result);\n                        }\n                        else if (methodItem.method == 'starknet_signMessage') {\n                            let results = methodItem.result;\n                            if (typeof results == 'string') {\n                                results = JSON.parse(results);\n                            }\n                            methodItem.result = [results[\"signedDataR\"], results[\"signedDataS\"]];\n                        }\n                        else if (methodItem.method == 'sync_all_addresses') {\n                            methodItem.result = syncResoonseToRequire(methodItem.result);\n                        }\n                    }\n                }\n            }\n        }\n        catch (error) {\n            (0, core_1.logDebug)(\"connectMethodsResponseUpdate signResponse Error:\", JSON.stringify(error));\n            throw error;\n        }\n    });\n}\nfunction connectMethodsToConnectWalletMethods(params, requireNameSpace) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            (0, core_1.logDebug)(\"connectMethodsToConnectWalletMethods requestMethods:\", JSON.stringify(params));\n            const result = [];\n            //TODO  后面需要打开限制\n            if (params && params.length > 1) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connectAndSign/openModalAndSign signRequest only support one data`);\n            }\n            if (!requireNameSpace && params && params.length > 0) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error , RequestMethods cannot be added when the NameSpace is empty`);\n            }\n            // check chianId\n            for (const methodItem of params) {\n                if (methodItem.method === \"aptos_signMessage\") { //update chainId\n                    if (methodItem.chainId === \"aptos:mainnet\") {\n                        methodItem.chainId = \"aptos:637\";\n                    }\n                    else if (methodItem.chainId === \"movement:testnet\") {\n                        methodItem.chainId = \"aptos:70000060\";\n                    }\n                }\n                // check chianId\n                if (methodItem.method === \"wallet_addEthereumChain\") {\n                    var includeEip155 = requireNameSpace === null || requireNameSpace === void 0 ? void 0 : requireNameSpace.some(space => space.namespace.includes(\"eip155\"));\n                    if (!includeEip155) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error, When using '${methodItem.method}', the EVM chain needs to be included in the NameSpace`);\n                    }\n                }\n                else if (methodItem.method === \"sync_all_addresses\") {\n                    if ((0, provider_1.syncAddressHostAvailable)()) {\n                        methodItem.chainId = \"\";\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                    }\n                }\n                else {\n                    const includeChain = !!(requireNameSpace === null || requireNameSpace === void 0 ? void 0 : requireNameSpace.some(space => space.chains.some(chain => chain.includes(`${methodItem.chainId}`))));\n                    if (!includeChain) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error, When using '${methodItem.method}', NameSpace must contain '${methodItem.chainId}'`);\n                    }\n                }\n            }\n            for (const item of params) {\n                if (!exports.connectSupportMethods.includes(item.method)) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect requestMethods not support method, method: '${item.method}'`);\n                }\n                if (item.method === \"wallet_addEthereumChain\") {\n                    if (Array.isArray(item.params)) {\n                        const paramsArr = item.params;\n                        if (paramsArr && paramsArr.length === 1) {\n                            const firstParam = paramsArr[0];\n                            if (isRecord(firstParam)) {\n                                item.params = firstParam;\n                            }\n                        }\n                        else if (paramsArr && paramsArr.length > 1) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params only support one data, method: '${item.method}'`);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is nil, method: '${item.method}'`);\n                        }\n                    }\n                }\n                else if (item.method === \"personal_sign\") {\n                    if (isArray(item.params)) {\n                        if (item.params && item.params.length !== 1) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params error,  method: '${item.method}' `);\n                        }\n                        let firstObj = item.params[0];\n                        if (firstObj && typeof firstObj === 'string') {\n                            item.params = {\n                                message: firstObj\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                }\n                else if (item.method === \"sui_signMessage\" || item.method === \"sui_signPersonalMessage\") {\n                    if (isRecord(item.params) && 'message' in item.params) {\n                        if (item.params.message) {\n                            (0, core_1.logDebug)(\"sui_signMessage item.params.message :\", item.params.message);\n                            let message = JSON.parse(JSON.stringify(item.params.message));\n                            let convertedArray = Object.values(message);\n                            let uint8Array = new Uint8Array(convertedArray);\n                            let decoder = new TextDecoder(\"utf8\");\n                            let b64encoded = btoa(decoder.decode(uint8Array));\n                            item.params.message = atob(b64encoded);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"solana_signMessage\") {\n                    if (isRecord(item.params) && 'message' in item.params) {\n                        if (item.params.message && typeof item.params.message === 'string') {\n                            let encodeMessage = new TextEncoder().encode(item.params.message);\n                            item.params[\"bs58Message\"] = bs58_1.default.encode(encodeMessage);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"aptos_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (item.chainId && (item.chainId === \"aptos:637\" || item.chainId === \"aptos:70000060\")) {\n                            var aptosParams = item.params;\n                            var currentURL = window.location.protocol + \"//\" + window.location.hostname;\n                            let signChainId = 1;\n                            if (item.chainId === \"aptos:637\") {\n                            }\n                            else if (item.chainId === \"aptos:70000060\") {\n                                signChainId = 2;\n                            }\n                            item.params = {\n                                data: aptosParams,\n                                applicationUrl: currentURL,\n                                prefix: \"APTOS\",\n                                aptosChainId: signChainId\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params chainId is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"cosmos_signArbitrary\") {\n                    if (isRecord(item.params)) {\n                        if (item.params.message && typeof item.params.message === 'string') {\n                            const base64Encoded = btoa(item.params.message);\n                            let cosmosChain = item.chainId.split(\":\")[1];\n                            if (cosmosChain) {\n                                item.params = {\n                                    chain_id: cosmosChain,\n                                    data: {\n                                        chain_id: \"\",\n                                        account_number: \"0\",\n                                        sequence: \"0\",\n                                        fee: {\n                                            gas: \"0\",\n                                            amount: []\n                                        },\n                                        msgs: [{\n                                                \"type\": \"sign/MsgSignData\",\n                                                \"value\": {\n                                                    \"signer\": \"\", //address\n                                                    \"data\": base64Encoded\n                                                }\n                                            }],\n                                        memo: \"\"\n                                    }\n                                };\n                            }\n                            else {\n                                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params chainId is error,  method: '${item.method}' `);\n                            }\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params message is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method == \"tron_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (\"message\" in item.params && item.params.message && typeof item.params.message === 'string') {\n                            item.params.message = stringToHex(item.params.message);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method == \"btc_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (\"message\" in item.params && item.params.message && typeof item.params.message === 'string') {\n                            item.params = {\n                                signStr: item.params.message\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                (0, core_1.logDebug)(\"connectMethodsToConnectWalletMethods item:\", JSON.stringify(item));\n                result.push(item);\n            }\n            return result;\n        }\n        catch (error) {\n            throw error;\n        }\n    });\n}\nfunction stringToHex(str) {\n    let hex = '';\n    for (let i = 0; i < str.length; i++) {\n        hex += str.charCodeAt(i).toString(16).padStart(2, '0');\n    }\n    return hex;\n}\nfunction syncResoonseToRequire(responseAddressStr) {\n    const allAddress = JSON.parse(responseAddressStr);\n    const result = {\n        type: allAddress.type,\n        isEvm: allAddress.isEvm,\n        walletName: allAddress.walletName,\n        deriveName: allAddress.deriveName,\n        addresses: allAddress.addresses.map((addr) => ({\n            coinId: addr.ci,\n            address: addr.a && addr.a !== 'null' ? addr.a : allAddress.evmAddress,\n        })),\n    };\n    return result;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.creatNotSupportMethodItemReplay = exports.connectMethodsAdaptOldVersion = void 0;\nvar ConnectMethodUtils_1 = require(\"./ConnectMethodUtils\");\nObject.defineProperty(exports, \"connectMethodsAdaptOldVersion\", { enumerable: true, get: function () { return ConnectMethodUtils_1.connectMethodsAdaptOldVersion; } });\nObject.defineProperty(exports, \"creatNotSupportMethodItemReplay\", { enumerable: true, get: function () { return ConnectMethodUtils_1.creatNotSupportMethodItemReplay; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAccountsChains = getAccountsChains;\nexports.nameSpaceToConnectWalletNameSpace = nameSpaceToConnectWalletNameSpace;\nexports.fillParamsToSession = fillParamsToSession;\nexports.isCaipNamespace = isCaipNamespace;\nexports.parseNamespaceKey = parseNamespaceKey;\nconst core_1 = require(\"@okxconnect/core\");\nfunction getAccountsChains(accounts) {\n    const chains = [];\n    accounts.forEach((account) => {\n        const [chain, chainId] = account.split(\":\");\n        chains.push(`${chain}:${chainId}`);\n    });\n    return chains;\n}\nfunction nameSpaceToConnectWalletNameSpace(namespaces) {\n    var result = [];\n    if (!namespaces) {\n        return result;\n    }\n    Object.keys(namespaces).forEach((key) => {\n        if (key === core_1.NameSpaceKeyEip155 || key === core_1.NameSpaceKeySOL || key === core_1.NameSpaceKeySui || key === core_1.NameSpaceKeyAptos\n            || key == core_1.NameSpaceKeyBtc || key === core_1.NameSpaceKeyTON || key === core_1.NameSpaceKeyCosmos || key === core_1.NameSpaceKeyTron || key === core_1.NameSpaceKeyStarknet) {\n            if (namespaces[key].chains) {\n                result.push({\n                    namespace: key,\n                    chains: namespaces[key].chains,\n                    params: namespaces[key].params\n                });\n            }\n        }\n    });\n    return result;\n}\nfunction fillParamsToSession(session, namespaces, optionalNamespaces, sessionConfig) {\n    // Helper function to merge rpcMaps\n    const mergeRpcMap = (targetRpcMap, sourceRpcMap) => {\n        Object.assign(targetRpcMap, sourceRpcMap);\n    };\n    // Merge function for namespaces\n    const mergeNamespaces = (target, source) => {\n        for (const key in source) {\n            if (source.hasOwnProperty(key) && source[key].rpcMap) {\n                if (source[key].rpcMap) {\n                    if (!target[key].rpcMap) {\n                        target[key].rpcMap = {};\n                    }\n                    // 合并 rpcMap\n                    mergeRpcMap(target[key].rpcMap, source[key].rpcMap);\n                }\n                if (source[key].defaultChain && target[key].defaultChain === undefined) {\n                    //defaultChain need in session nameSpace\n                    if (target[key].chains.some(chain => chain.split(\":\")[1] === source[key].defaultChain)) {\n                        target[key].defaultChain = source[key].defaultChain;\n                    }\n                }\n            }\n        }\n    };\n    // 合并 namespaces\n    if (namespaces) {\n        mergeNamespaces(session.namespaces, namespaces);\n    }\n    // 合并 optionalNamespaces\n    if (optionalNamespaces) {\n        mergeNamespaces(session.namespaces, optionalNamespaces);\n    }\n    for (const key in session.namespaces) {\n        const namespace = session.namespaces[key];\n        if (!(namespace === null || namespace === void 0 ? void 0 : namespace.accounts) || namespace.accounts.length === 0) {\n            delete session.namespaces[key];\n        }\n    }\n    if (session.namespaces[core_1.NameSpaceKeyBtc] && session.wallet.appName === core_1.OKXWalletName) {\n        fixMobileBtcSession(session.namespaces[core_1.NameSpaceKeyBtc]);\n    }\n    session.sessionConfig = sessionConfig;\n}\nfunction fixMobileBtcSession(btcNameSpace) {\n    try {\n        if (btcNameSpace && btcNameSpace.extra) {\n            var data = btcNameSpace.extra;\n            Object.keys(data).forEach(key => {\n                const item = data[key];\n                if (Number(item.addressType) === 6) {\n                    item.publicKey = item.compressedPublicKey.slice(2);\n                }\n                else {\n                    item.publicKey = item.compressedPublicKey;\n                }\n            });\n        }\n    }\n    catch (e) {\n        (0, core_1.logDebug)(\"namespaces fixMobileBtcSession error\");\n    }\n}\n/**\n * util designed for Wallets that builds namespaces structure by provided supported chains, methods, events & accounts.\n * It takes required & optional namespaces provided in the session proposal\n * along with the supported chains/methods/events/accounts by the wallet and returns a structured namespaces object\n * @param {BuildApprovedNamespacesParams} params\n * @returns {SessionTypes.Namespaces}\n */\n// export function buildApprovedNamespaces(\n//   params: BuildApprovedNamespacesParams,\n// ): SessionTypes.Namespaces {\n//   const {\n//     proposal: { requiredNamespaces, optionalNamespaces = {} },\n//     supportedNamespaces,\n//   } = params;\n//   const normalizedRequired = normalizeNamespaces(requiredNamespaces);\n//   const normalizedOptional = normalizeNamespaces(optionalNamespaces);\n//\n//   // build approved namespaces\n//   const namespaces = {};\n//   Object.keys(supportedNamespaces).forEach((namespace) => {\n//     const supportedChains = supportedNamespaces[namespace].chains;\n//     const supportedMethods = supportedNamespaces[namespace].methods;\n//     const supportedEvents = supportedNamespaces[namespace].events;\n//     const supportedAccounts = supportedNamespaces[namespace].accounts;\n//\n//     supportedChains.forEach((chain) => {\n//       if (!supportedAccounts.some((account) => account.includes(chain))) {\n//         throw new Error(`No accounts provided for chain ${chain} in namespace ${namespace}`);\n//       }\n//     });\n//\n//     namespaces[namespace] = {\n//       chains: supportedChains,\n//       methods: supportedMethods,\n//       events: supportedEvents,\n//       accounts: supportedAccounts,\n//     };\n//   });\n//\n//   // verify all required namespaces are supported\n//   const err = isConformingNamespaces(requiredNamespaces, namespaces, \"approve()\");\n//   if (err) throw new Error(err.message);\n//\n//   const approvedNamespaces = {};\n//\n//   // if both required & optional namespaces are empty, return all supported namespaces by the wallet\n//   if (!Object.keys(requiredNamespaces).length && !Object.keys(optionalNamespaces).length)\n//     return namespaces;\n//\n//   // assign accounts for the required namespaces\n//   Object.keys(normalizedRequired).forEach((requiredNamespace) => {\n//     const chains = supportedNamespaces[requiredNamespace].chains.filter((chain) =>\n//       normalizedRequired[requiredNamespace]?.chains?.includes(chain),\n//     );\n//     const methods = supportedNamespaces[requiredNamespace].methods.filter((method) =>\n//       normalizedRequired[requiredNamespace]?.methods?.includes(method),\n//     );\n//     const events = supportedNamespaces[requiredNamespace].events.filter((event) =>\n//       normalizedRequired[requiredNamespace]?.events?.includes(event),\n//     );\n//\n//     const accounts = chains\n//       .map((chain: string) =>\n//         supportedNamespaces[requiredNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[requiredNamespace] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   });\n//\n//   // add optional namespaces\n//   Object.keys(normalizedOptional).forEach((optionalNamespace) => {\n//     if (!supportedNamespaces[optionalNamespace]) return;\n//\n//     const chainsToAdd = normalizedOptional[optionalNamespace]?.chains?.filter((chain) =>\n//       supportedNamespaces[optionalNamespace].chains.includes(chain),\n//     );\n//     const methodsToAdd = supportedNamespaces[optionalNamespace].methods.filter((method) =>\n//       normalizedOptional[optionalNamespace]?.methods?.includes(method),\n//     );\n//     const eventsToAdd = supportedNamespaces[optionalNamespace].events.filter((event) =>\n//       normalizedOptional[optionalNamespace]?.events?.includes(event),\n//     );\n//\n//     const accountsToAdd = chainsToAdd\n//       ?.map((chain: string) =>\n//         supportedNamespaces[optionalNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[optionalNamespace] = {\n//       chains: mergeArrays(approvedNamespaces[optionalNamespace]?.chains, chainsToAdd),\n//       methods: mergeArrays(approvedNamespaces[optionalNamespace]?.methods, methodsToAdd),\n//       events: mergeArrays(approvedNamespaces[optionalNamespace]?.events, eventsToAdd),\n//       accounts: mergeArrays(approvedNamespaces[optionalNamespace]?.accounts, accountsToAdd),\n//     };\n//   });\n//\n//   return approvedNamespaces;\n// }\nfunction isCaipNamespace(namespace) {\n    return namespace.includes(\":\");\n}\nfunction parseNamespaceKey(namespace) {\n    return isCaipNamespace(namespace) ? namespace.split(\":\")[0] : namespace;\n}\n/**\n * Converts\n * ```\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * ```\n * into\n * ```\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *```\n */\n// export function normalizeNamespaces(\n//   namespaces: ProposalTypes.RequiredNamespaces,\n// ): ProposalTypes.RequiredNamespaces {\n//   const normalizedNamespaces = {} as ProposalTypes.RequiredNamespaces;\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       methods: mergeArrays(methods, normalizedNamespaces[normalizedKey]?.methods),\n//       events: mergeArrays(events, normalizedNamespaces[normalizedKey]?.events),\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n// export function getNamespacesFromAccounts(accounts: string[]) {\n//   const namespaces = {};\n//   accounts?.forEach((account) => {\n//     const [namespace, chainId] = account.split(\":\");\n//     if (!namespaces[namespace]) {\n//       namespaces[namespace] = {\n//         accounts: [],\n//         chains: [],\n//         events: [],\n//       };\n//     }\n//     namespaces[namespace].accounts.push(account);\n//     namespaces[namespace].chains.push(`${namespace}:${chainId}`);\n//   });\n//\n//   return namespaces;\n// }\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PROVIDER_EVENTS = void 0;\nexports.PROVIDER_EVENTS = {\n    DEFAULT_CHAIN_CHANGED: \"default_chain_changed\",\n    UPDATE_NAMESPACES: \"update_name_spaces\",\n    SESSION_CONNECTING: \"session_connecting\"\n};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./values\"), exports);\n__exportStar(require(\"./events\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GENERIC_SUBPROVIDER_NAME = exports.RPC_URL = exports.STORAGE = exports.CONTEXT = exports.WC_VERSION = exports.PROTOCOL = exports.RELAY_URL = exports.LOGGER = void 0;\nexports.LOGGER = \"error\";\nexports.RELAY_URL = \"wss://relay.walletconnect.com\";\nexports.PROTOCOL = \"wc\";\nexports.WC_VERSION = 2;\nexports.CONTEXT = \"universal_provider\";\nexports.STORAGE = `${exports.PROTOCOL}@${exports.WC_VERSION}:${exports.CONTEXT}:`;\nexports.RPC_URL = \"https://rpc.walletconnect.com/v1/\";\nexports.GENERIC_SUBPROVIDER_NAME = \"generic\";\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./types\"), exports);\n__exportStar(require(\"./utils\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass AptosProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"aptos\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"aptos request --args--string>\", (0, core_1.safeJsonStringify)(args));\n            (0, core_1.logDebug)(\"aptos provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = AptosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass BtcProvider {\n    constructor(opts, name, client, events) {\n        this.name = core_1.NameSpaceKeyBtc;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"btc request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"btc provider namespace: \", JSON.stringify(this.namespace));\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = BtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass CosmosProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyCosmos;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"cosmos request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"cosmos provider namespace: \", JSON.stringify(this.namespace));\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = CosmosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Eip155Provider = void 0;\nconst utils_1 = require(\"../utils\");\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nclass Eip155Provider {\n    constructor(opts, client, events) {\n        this.name = \"eip155\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = parseInt(this.getDefaultChain());\n        // rpc\n        this.httpProviders = this.createHttpProviders();\n        (0, core_1.logDebug)(\"eip155 constructor --opts.namespace-->\", opts.namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    isArray(value) {\n        return typeof value === \"object\" && value !== null && Array.isArray(value);\n    }\n    updateRequestParams(args) {\n        let isDic = args.params && typeof args.params === 'object' && !Array.isArray(args.params);\n        if (args.method === 'wallet_switchEthereumChain') {\n            const switchChainId = args.chainId.split(\":\")[1];\n            // const hexChainId = parseInt(switchChainId, 16);\n            const decimalNumber = parseInt(switchChainId, 10);\n            if (isNaN(decimalNumber)) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid decimal number,  chainId: '${switchChainId}' `);\n            }\n            if (!args.params) {\n                args.params = { chainId: '0x' + decimalNumber.toString(16) };\n            }\n            else if (isDic) { //为 Record<string, unknown>\n                let params = args.params;\n                if (!('chainId' in params)) {\n                    params['chainId'] = '0x' + decimalNumber.toString(16);\n                    args.params = params;\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params error ,  method: '${args.method}' `);\n            }\n        }\n        else if (args.method === 'personal_sign'\n            || args.method === 'eth_signTypedData_v4'\n            || args.method === 'eth_sendTransaction'\n            || args.method === 'wallet_watchAsset') {\n            if (!args.params) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params is nil, method: '${args.method}'`);\n            }\n            if (this.isRecord(args.params)) {\n                let params = args.params;\n                (0, core_1.logDebug)(\"eip155 updateRequestParams params>\", JSON.stringify(params));\n                if ('chainId' in params) {\n                    const selectedChainId = args.chainId.split(\":\")[1];\n                    const chainNum = parseInt(selectedChainId, 10);\n                    let paramsChainString = String(params.chainId);\n                    let paramsChainId;\n                    if (paramsChainString.startsWith(this.name) && args.chainId === paramsChainString) { //为\n                        paramsChainId = chainNum;\n                    }\n                    else if (paramsChainString.startsWith(\"0x\")) {\n                        paramsChainId = parseInt(paramsChainString, 16);\n                    }\n                    else if (!isNaN(Number(paramsChainString))) { //数字\n                        paramsChainId = parseInt(paramsChainString, 10);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid params.chainId format, method: '${args.method}'`);\n                    }\n                    if (chainNum !== paramsChainId) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params.chainId not equal chain,  method: '${args.method}' `);\n                    }\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid request params type, method: '${args.method}'`);\n            }\n        }\n    }\n    //adapt array\n    adaptArray(args) {\n        if (args.method === 'wallet_switchEthereumChain'\n            || args.method === 'wallet_addEthereumChain'\n            || args.method === 'wallet_watchAsset'\n            || args.method === 'eth_sendTransaction') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr) {\n                    if (paramsArr.length === 1) {\n                        let firstParam = args.params[0];\n                        if (this.isRecord(firstParam)) {\n                            args.params = firstParam;\n                        }\n                    }\n                    else if (paramsArr.length > 1) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                    }\n                }\n            }\n        }\n        else if (args.method === 'eth_signTypedData_v4') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr && paramsArr.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                }\n                else if (paramsArr && paramsArr.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let messageObj = {};\n                if (paramsArr && paramsArr.length === 2) {\n                    let addressObj = args.params[0]; //address\n                    if (addressObj && typeof addressObj === 'string') { //check address\n                        let isEqual = false;\n                        this.namespace.accounts.forEach((account) => {\n                            let chainAddress = (0, utils_1.fromAccountToAddress)(account);\n                            if (chainAddress.toLowerCase() === addressObj.toLowerCase()) {\n                                isEqual = true;\n                            }\n                        });\n                        (0, core_1.logDebug)(\"eip155 adaptArray eth_signTypedData_v4 >>>isEqual: \", isEqual);\n                        if (!isEqual) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error, not equal,  method: '${args.method}' `);\n                        }\n                        if (this.isRecord(args.params[1])) {\n                            messageObj = args.params[1];\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error , not string,  method: '${args.method}' `);\n                    }\n                }\n                else if (paramsArr && paramsArr.length === 1) {\n                    if (this.isRecord(args.params[0])) {\n                        messageObj = args.params[0];\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                    }\n                }\n                try {\n                    let messages = JSON.stringify(messageObj);\n                    args.params = {\n                        typedDataJson: messages\n                    };\n                }\n                catch (err) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params call JSON.stringify() failed,  method: '${args.method}' `);\n                }\n            }\n        }\n        else if (args.method === 'personal_sign') {\n            if (this.isArray(args.params)) {\n                if (args.params && args.params.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params error,  method: '${args.method}' `);\n                }\n                else if (args.params && args.params.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let firstObj = args.params[0];\n                let secondObj = args.params[1];\n                if (secondObj && typeof secondObj === 'string') { //check address\n                    let isEqual = false;\n                    this.namespace.accounts.forEach((account) => {\n                        let chainAddress = (0, utils_1.fromAccountToAddress)(account);\n                        if (chainAddress.toLowerCase() === secondObj.toLowerCase()) {\n                            isEqual = true;\n                        }\n                    });\n                    (0, core_1.logDebug)(\"eip155 adaptArray personal_sign >>>isEqual: \", isEqual);\n                    if (!isEqual) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error,  method: '${args.method}' `);\n                    }\n                }\n                if (firstObj && typeof firstObj === 'string') {\n                    args.params = {\n                        message: firstObj\n                    };\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is error,  method: '${args.method}' `);\n                }\n            }\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"eth_requestAccounts\":\n            case \"eth_accounts\":\n            case \"eth_chainId\":\n                return false;\n            case \"eth_sendTransaction\":\n            case \"eth_signTransaction\":\n            case \"eth_sign\":\n            case \"personal_sign\":\n            case \"eth_signTypedData\":\n            case \"wallet_addEthereumChain\":\n            case \"wallet_watchAsset\":\n            case \"eth_signTypedData_v4\":\n                return true;\n            case \"wallet_switchEthereumChain\": {\n                this.adaptArray(args);\n                this.updateRequestParams(args);\n                const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n                return !this.isChainApproved(parsedChainId);\n            }\n            default:\n                return false;\n        }\n        return false;\n    }\n    configAddressAdaptInjectWallet(args) {\n        this.namespace.accounts.forEach((account) => {\n            if (account.includes(args.chainId)) {\n                args.address = (0, utils_1.fromAccountToAddress)(account);\n            }\n        });\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.adaptArray(args);\n            (0, core_1.logDebug)(\"eip155 request --args--string>\", JSON.stringify(args));\n            this.updateRequestParams(args);\n            (0, core_1.logDebug)(\"eip155 request --params--string>\", JSON.stringify(args));\n            this.configAddressAdaptInjectWallet(args);\n            switch (args.method) {\n                case \"eth_requestAccounts\":\n                    return this.getAccounts();\n                case \"eth_accounts\":\n                    return this.getAccounts();\n                case \"eth_chainId\":\n                    return parseInt(this.getDefaultChain());\n                case \"wallet_switchEthereumChain\": {\n                    return (yield this.handleSwitchChain(args));\n                }\n                case \"wallet_addEthereumChain\":\n                    return this.addEthereumChain(args);\n                default:\n                    break;\n            }\n            if (this.namespace.methods.includes(args.method)) {\n                // personal_sign\n                // eth_signTypedData_v4\n                // eth_sendTransaction\n                // wallet_watchAsset\n                try {\n                    const response = yield this.client.request(args);\n                    (0, core_1.logDebug)(\"eip155 request --response----string>\", JSON.stringify(response));\n                    if (this.isRecord(response)) {\n                        if ('result' in response) {\n                            let result = response.result;\n                            if (result && typeof result === 'string' && (result === \"true\" || result === \"false\")) {\n                                (0, core_1.logDebug)(\"eip155 request --wallet_watchAsset>>>>\", result === \"true\");\n                                return (result === \"true\");\n                            }\n                            return response.result;\n                        }\n                    }\n                    return response;\n                }\n                catch (e) {\n                    (0, core_1.logDebug)(`eip155 request --response --error--string> e instanceof OKXConnectError ${e instanceof core_1.OKXConnectError}`, JSON.stringify(e));\n                    throw e;\n                }\n            }\n            else {\n                (0, core_1.logDebug)('[RPC] request begin');\n                return yield this.getHttpProvider().request(args);\n            }\n        });\n    }\n    addEthereumChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let resultData = (yield this.client.request(args));\n            try {\n                if ('result' in resultData) {\n                    let successData = resultData;\n                    let account = resultData.result;\n                    if (account) {\n                        const nameSpace = account.split(\":\")[0];\n                        const chainId = account.split(\":\")[1];\n                        const chain = nameSpace + ':' + chainId;\n                        let newNameSpace = this.namespace;\n                        this.namespace.accounts.push(account);\n                        this.namespace.chains.push(chain);\n                        if (this.isRecord(args.params)) {\n                            if (\"rpcUrls\" in args.params) {\n                                let rpcUrls = args.params.rpcUrls;\n                                let rpcUrl = rpcUrls ? rpcUrls[0] : undefined;\n                                if (rpcUrl) {\n                                    if (this.namespace.rpcMap) {\n                                        this.namespace.rpcMap[chainId] = rpcUrl;\n                                    }\n                                    else {\n                                        this.namespace.rpcMap = {\n                                            [chainId]: rpcUrl\n                                        };\n                                    }\n                                    this.setHttpProvider(chainId, rpcUrl);\n                                }\n                            }\n                        }\n                        this.events.emit(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, {\n                            eip155: this.namespace\n                        });\n                    }\n                }\n                else {\n                    new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request error`);\n                }\n            }\n            catch (error) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request  error`);\n            }\n            return null;\n        });\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        this.chainId = parseInt(chainId);\n        // set rpc\n        if (!this.httpProviders[chainId]) {\n            const rpc = rpcUrl || (0, utils_1.getRpcUrl)(`${this.name}:${chainId}`, this.namespace);\n            if (!rpc) {\n                // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n                (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            }\n            else {\n                this.setHttpProvider(chainId, rpc);\n            }\n        }\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId.toString();\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // ---------- Private ----------------------------------------------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"eip155 getAccounts \", accounts, this.chainId);\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => {\n                return (0, utils_1.fromAccountToAddress)(account);\n            })),\n        ];\n    }\n    getHexChainIdFromRequest(args) {\n        let params = args.params;\n        let hexChainId = \"0x0\";\n        if (params && \"chainId\" in params) {\n            hexChainId = params.chainId;\n        }\n        hexChainId = hexChainId.startsWith(\"0x\") ? hexChainId : `0x${hexChainId}`;\n        (0, core_1.logDebug)(\"handleSwitchChain -->args \", args);\n        (0, core_1.logDebug)(\"handleSwitchChain -->hexChainId \", hexChainId);\n        const parsedChainId = parseInt(hexChainId, 16);\n        (0, core_1.logDebug)(\"handleSwitchChain -->parsedChainId \", parsedChainId);\n        return { parsedChainId, hexChainId };\n    }\n    handleSwitchChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n            if (this.isChainApproved(parsedChainId)) {\n                this.setDefaultChain(`${parsedChainId}`);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, `the method ${args.method} request  error`);\n            }\n        });\n    }\n    isChainApproved(chainId) {\n        return this.namespace.chains.includes(`${this.name}:${chainId}`);\n    }\n    // rpc\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            //   throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            (0, core_1.logDebug)('get parsed chain and rpc:', parsedChainId, parsedRpc);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        (0, core_1.logDebug)('get http providermap:', http);\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n}\nexports.Eip155Provider = Eip155Provider;\nexports.default = Eip155Provider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcConnection = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nconst DEFAULT_HTTP_HEADERS = {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n};\nconst DEFAULT_HTTP_METHOD = \"POST\";\nconst DEFAULT_FETCH_OPTS = {\n    headers: DEFAULT_HTTP_HEADERS,\n    method: DEFAULT_HTTP_METHOD,\n};\n// Source: https://nodejs.org/api/events.html#emittersetmaxlistenersn\nconst EVENT_EMITTER_MAX_LISTENERS_DEFAULT = 10;\nclass JsonRpcConnection {\n    constructor(url, disableProviderPing = false) {\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n        this.events = new eventemitter3_1.EventEmitter();\n        this.isAvailable = false;\n        this.registering = false;\n        if (!(0, core_2.isHttpUrl)(url)) {\n            throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n        }\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n    }\n    get connected() {\n        return this.isAvailable;\n    }\n    get connecting() {\n        return this.registering;\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            yield this.register(url);\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                throw new Error(\"Connection already closed\");\n            }\n            this.onClose();\n        });\n    }\n    send(payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                yield this.register();\n            }\n            try {\n                const body = (0, core_1.safeJsonStringify)(payload);\n                const res = yield (0, cross_fetch_1.default)(this.url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                const data = yield res.json();\n                this.onPayload({ data });\n            }\n            catch (e) {\n                this.onError(payload.id, e);\n            }\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    register() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            if (!(0, core_2.isHttpUrl)(url)) {\n                throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n            }\n            if (this.registering) {\n                return new Promise((resolve, reject) => {\n                    this.events.once(\"register_error\", (error) => {\n                        reject(error);\n                    });\n                    this.events.once(\"open\", () => {\n                        if (typeof this.isAvailable === \"undefined\") {\n                            return reject(new Error(\"HTTP connection is missing or invalid\"));\n                        }\n                        resolve();\n                    });\n                });\n            }\n            this.url = url;\n            this.registering = true;\n            try {\n                if (!this.disableProviderPing) {\n                    const body = (0, core_1.safeJsonStringify)({ id: 1, jsonrpc: \"2.0\", method: \"test\", params: [] });\n                    yield (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                }\n                this.onOpen();\n            }\n            catch (e) {\n                const error = this.parseError(e);\n                this.events.emit(\"register_error\", error);\n                this.onClose();\n                throw error;\n            }\n        });\n    }\n    onOpen() {\n        this.isAvailable = true;\n        this.registering = false;\n        this.events.emit(\"open\");\n    }\n    onClose() {\n        this.isAvailable = false;\n        this.registering = false;\n        this.events.emit(\"close\");\n    }\n    onPayload(e) {\n        if (typeof e.data === \"undefined\")\n            return;\n        const payload = typeof e.data === \"string\" ? (0, core_1.safeJsonParse)(e.data) : e.data;\n        this.events.emit(\"payload\", payload);\n    }\n    onError(id, e) {\n        const error = this.parseError(e);\n        const message = error.message || error.toString();\n        const payload = (0, core_2.formatJsonRpcError)(id, message);\n        this.events.emit(\"payload\", payload);\n    }\n    parseError(e, url = this.url) {\n        return (0, core_2.parseConnectionError)(e, url, \"HTTP\");\n    }\n}\nexports.JsonRpcConnection = JsonRpcConnection;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcProvider = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst types_1 = require(\"../../types\");\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nclass JsonRpcProvider extends types_1.IJSONRpcProvider {\n    constructor(connection) {\n        super(connection);\n        this.events = new eventemitter3_1.EventEmitter();\n        this.connected = false;\n        this.connecting = false;\n        this.hasRegisteredEventListeners = false;\n        this.connection = this.setConnection(connection);\n        if (this.connection.connected) {\n            this.registerEventListeners();\n        }\n    }\n    connect() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            yield this.open(connection);\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.close();\n        });\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    request(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.requestStrict((0, core_1.formatJsonRpcRequest)(request.method, request.params || [], (0, core_1.getBigIntRpcId)().toString()), // casting to any is required in order to use BigInt as rpcId\n            context);\n        });\n    }\n    // ---------- Protected ----------------------------------------------- //\n    requestStrict(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                if (!this.connection.connected) {\n                    try {\n                        yield this.open();\n                    }\n                    catch (e) {\n                        reject(e);\n                    }\n                }\n                this.events.on(`${request.id}`, (response) => {\n                    if ((0, core_1.isJsonRpcError)(response)) {\n                        reject(response.error);\n                    }\n                    else {\n                        resolve(response.result);\n                    }\n                });\n                try {\n                    (0, core_2.logDebug)('[RPC] >>> send request', request, context);\n                    yield this.connection.send(request, context);\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }));\n        });\n    }\n    setConnection(connection = this.connection) {\n        return connection;\n    }\n    onPayload(payload) {\n        this.events.emit(\"payload\", payload);\n        if ((0, core_1.isJsonRpcResponse)(payload)) {\n            this.events.emit(`${payload.id}`, payload);\n        }\n        else {\n            this.events.emit(\"message\", {\n                type: payload.method,\n                data: payload.params,\n            });\n        }\n    }\n    onClose(event) {\n        // Code 3000 indicates an abnormal closure signalled by the relay -> emit an error in this case.\n        if (event && event.code === 3000) {\n            this.events.emit(\"error\", new Error(`WebSocket connection closed abnormally with code: ${event.code} ${event.reason ? `(${event.reason})` : \"\"}`));\n        }\n        this.events.emit(\"disconnect\");\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            if (this.connection === connection && this.connection.connected)\n                return;\n            if (this.connection.connected)\n                this.close();\n            if (typeof connection === \"string\") {\n                yield this.connection.open(connection);\n                connection = this.connection;\n            }\n            this.connection = this.setConnection(connection);\n            yield this.connection.open();\n            this.registerEventListeners();\n            this.events.emit(\"connect\");\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.connection.close();\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    registerEventListeners() {\n        if (this.hasRegisteredEventListeners)\n            return;\n        this.connection.on(\"payload\", (payload) => this.onPayload(payload));\n        this.connection.on(\"close\", (event) => this.onClose(event));\n        this.connection.on(\"error\", (error) => this.events.emit(\"error\", error));\n        this.connection.on(\"register_error\", (_error) => this.onClose());\n        this.hasRegisteredEventListeners = true;\n    }\n}\nexports.JsonRpcProvider = JsonRpcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SolanaProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SolanaProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"solana\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"solana request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"solana provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    //   {\n    //     \"chains\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\" ],\n    //     \"accounts\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp:F7wnJc5wiBGy1k87jv6gyNwE3jMEWd18oTQiYsF1xVG7\"],\n    //     \"methods\": [\n    //         \"solana_signTransaction\",\n    //         \"solana_signMessage\"\n    //     ],\n    //     \"defaultChain\": \"5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\"\n    // }\n    // TODO:确认上面的defaultChain是否正确（没有solana前缀）\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"solana\"))) {\n                chainId = `solana:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.SolanaProvider = SolanaProvider;\nexports.default = SolanaProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass StarknetProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"starknet\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"starknet request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"starknet provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Wallet doesn't support\" + args.method);\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = StarknetProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SuiProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SuiProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeySui;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"sui request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"sui provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"sui\"))) {\n                chainId = `sui:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"sui_signMessage\":\n            case \"sui_signPersonalMessage\":\n            case \"sui_signTransactionBlock\":\n            case \"sui_signAndExecuteTransactionBlock\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.SuiProvider = SuiProvider;\nexports.default = SuiProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass TONProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyTON;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            (0, core_1.logDebug)(\"TONProvider request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"TONProvider request provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                if (!args.params) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params is nil\");\n                }\n                if (this.isRecord(args.params)) {\n                    const _e = args.params, { validUntil } = _e, newParams = __rest(_e, [\"validUntil\"]);\n                    let fromAddress = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n                    if ('from' in newParams) {\n                        fromAddress = newParams.from || ((_d = (_c = this.namespace.payload) === null || _c === void 0 ? void 0 : _c.ton_addr) === null || _d === void 0 ? void 0 : _d.address);\n                    }\n                    args.params['from'] = fromAddress;\n                    args.params['network'] = this.getDefaultChain();\n                    args.params['valid_until'] = validUntil;\n                    let response = yield this.client.request(args);\n                    if (this.isRecord(response) && 'result' in response) {\n                        const result = {\n                            boc: response.result.toString()\n                        };\n                        (0, core_1.logDebug)(\"TONProvider request provider response: \", JSON.stringify(response));\n                        (0, core_1.logDebug)(\"TONProvider request provider result: \", JSON.stringify(result));\n                        return result;\n                    }\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton_send request response is nil\");\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params type add nil\");\n                }\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        var _a, _b;\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"ton getAccounts accounts :\", accounts);\n        (0, core_1.logDebug)(\"ton getAccounts .namespace :\", JSON.stringify(this.namespace));\n        if (!accounts) {\n            return [];\n        }\n        let address = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n        (0, core_1.logDebug)(\"ton getAccounts address :\", address);\n        if (address) {\n            return [\n                address\n            ];\n        }\n        return [];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"ton_sendTransaction\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.default = TONProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass TronProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyTron;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"tron request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"tron provider namespace: \", JSON.stringify(this.namespace));\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = TronProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./providers\"), exports);\n__exportStar(require(\"./misc\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IJSONRpcProvider = exports.IJSONRpcConnection = void 0;\nclass IJSONRpcConnection {\n}\nexports.IJSONRpcConnection = IJSONRpcConnection;\nclass IJSONRpcProvider {\n    constructor(opt) {\n    }\n}\nexports.IJSONRpcProvider = IJSONRpcProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setGlobal = exports.getGlobal = void 0;\nconst globals = {};\nconst getGlobal = (key) => {\n    return globals[key];\n};\nexports.getGlobal = getGlobal;\nconst setGlobal = (key, value) => {\n    globals[key] = value;\n};\nexports.setGlobal = setGlobal;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./misc\"), exports);\n__exportStar(require(\"./globals\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRpcUrl = getRpcUrl;\nexports.getChainId = getChainId;\nexports.fromAccountToAddress = fromAccountToAddress;\nexports.convertChainIdToNumber = convertChainIdToNumber;\nexports.parseChainId = parseChainId;\nexports.mergeArrays = mergeArrays;\nexports.syncAddressAvailable = syncAddressAvailable;\nexports.syncAddressHostAvailable = syncAddressHostAvailable;\nconst core_1 = require(\"@okxconnect/core\");\nfunction getRpcUrl(chainId, rpc, projectId) {\n    var _a;\n    const chain = parseChainId(chainId);\n    // no default\n    return (((_a = rpc.rpcMap) === null || _a === void 0 ? void 0 : _a[chain.reference]) ||\n        ``);\n}\nfunction getChainId(chain) {\n    return chain.includes(\":\") ? chain.split(\":\")[1] : chain;\n}\nfunction fromAccountToAddress(account) {\n    if (!account) {\n        return \"\";\n    }\n    try {\n        let addressArr = account.split(\":\").slice(2);\n        let address = addressArr.length > 0 ? addressArr.join(\":\") : \"\";\n        (0, core_1.logDebug)(\"fromAccountToAddress address and account:\", address, account);\n        return address;\n    }\n    catch (e) {\n        (0, core_1.logError)(\"fromAccountToAddress error:\", account);\n        return \"\";\n    }\n}\n// export function validateChainApproval(chain: string, chains: string[]): void {\n//   if (!chains.includes(chain)) {\n//     throw new Error(\n//       `Chain '${chain}' not approved. Please use one of the following: ${chains.toString()}`,\n//     );\n//   }\n// }\n// export function getChainsFromApprovedSession(accounts: string[]): string[] {\n//   return accounts.map((address) => `${address.split(\":\")[0]}:${address.split(\":\")[1]}`);\n// }\n// export function getAccountsFromSession(namespace: string, session: SessionTypes.Struct): string[] {\n//   // match namespaces e.g. eip155 with eip155:1\n//   const matchedNamespaceKeys = Object.keys(session.namespaces).filter((key) =>\n//     key.includes(namespace),\n//   );\n//   if (!matchedNamespaceKeys.length) return [];\n//   const accounts: string[] = [];\n//   matchedNamespaceKeys.forEach((key) => {\n//     const accountsForNamespace = session.namespaces[key].accounts;\n//     accounts.push(...accountsForNamespace);\n//   });\n//   return accounts;\n// }\n// export function mergeRequiredOptionalNamespaces(\n//   required: NamespaceConfig = {},\n//   optional: NamespaceConfig = {},\n// ){\n//   const requiredNamespaces = normalizeNamespaces(required);\n//   const optionalNamespaces = normalizeNamespaces(optional);\n//    return merge.merge(requiredNamespaces,optionalNamespaces)\n// }\n/**\n * Converts\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * into\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *\n */\n// export function normalizeNamespaces(namespaces: NamespaceConfig): NamespaceConfig {\n//   const normalizedNamespaces: NamespaceConfig = {};\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const rpcMap = values.rpcMap || {};\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       ...values,\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       rpcMap: { ...rpcMap, ...normalizedNamespaces[normalizedKey]?.rpcMap },\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n//\n// export function parseCaip10Account(caip10Account: string): string {\n//   return caip10Account.includes(\":\") ? caip10Account.split(\":\")[2] : caip10Account;\n// }\n/**\n * Populates the chains array for each namespace with the chains extracted from the accounts if are otherwise missing\n */\n// export function populateNamespacesChains(\n//   namespaces: SessionTypes.Namespaces,\n// ): Record<string, SessionTypes.Namespace> {\n//   const parsedNamespaces: Record<string, SessionTypes.Namespace> = {};\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const accounts = values.accounts || [];\n//     // If the key includes a CAIP separator `:` we know it's a namespace + chainId (e.g. `eip155:1`)\n//     const chains = isCaipNamespace(key)\n//       ? [key]\n//       : values.chains\n//       ? values.chains\n//       : getChainsFromApprovedSession(values.accounts);\n//     parsedNamespaces[key] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   }\n//   return parsedNamespaces;\n// }\nfunction convertChainIdToNumber(chainId) {\n    if (typeof chainId === \"number\")\n        return chainId;\n    if (chainId.includes(\"0x\")) {\n        return parseInt(chainId, 16);\n    }\n    chainId = chainId.includes(\":\") ? chainId.split(\":\")[1] : chainId;\n    return isNaN(Number(chainId)) ? chainId : Number(chainId);\n}\nconst CAIP_DELIMITER = \":\";\nfunction parseChainId(chain) {\n    const [namespace, reference] = chain.split(CAIP_DELIMITER);\n    return { namespace, reference };\n}\nfunction mergeArrays(a = [], b = []) {\n    return [...new Set([...a, ...b])];\n}\nfunction syncAddressAvailable(wallet) {\n    if (!wallet) {\n        return false;\n    }\n    if (wallet.appName !== 'OKX Wallet') {\n        return false;\n    }\n    if ((0, core_1.versionCompare)('6.97.0', wallet.appVersion) > 0) {\n        return false;\n    }\n    return syncAddressHostAvailable();\n}\nfunction syncAddressHostAvailable() {\n    try {\n        return !!(window.okxGlobal);\n    }\n    catch (e) {\n        return false;\n    }\n}\n","<template>\n  <div id=\"app\">\n    <el-container>\n      <el-header>OKX Connect</el-header>\n      <el-main>\n        <el-card class=\"wallet-info\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Wallet Info</div>\n          </template>\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Wallet Address:</strong> {{ getWalletAddress }}\n            </el-col>\n          </el-row>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Status :</strong> {{ currentStatus }}\n            </el-col>\n          </el-row>\n\n        </el-card>\n\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Connect Params</div>\n          </template>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"12\">\n              <el-checkbox v-model=\"withUI\" @change=\"handleWithUI\">\n                Show UI\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"12\">\n              <el-checkbox v-model=\"universalToTG\" @change=\"handleUniversalToTG\">\n                Use mini wallet\n              </el-checkbox>\n            </el-col>\n          </el-row>\n\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Modals</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"modals\" placeholder=\"Modals\" @change=\"handleModalsSelect\" multiple>\n                <el-option label=\"Before\" value=\"before\"/>\n                <el-option label=\"Success\" value=\"success\"/>\n                <el-option label=\"Error\" value=\"error\"/>\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center; justify-content: space-between;\">\n            <el-col :span=\"6\" style=\"gap: 2px\">\n              <p style=\"font-size: 11pt; margin: 0px\">Return Strategy</p>\n              <p style=\"font-size: 9pt; margin: 0px\">(Mobile only)</p>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-select\n                  v-model=\"returnStrategy\"\n                  @change=\"handleReturnStrategySelect\"\n                  placeholder=\"Return Strategy\"\n              >\n                <el-option\n                    v-for=\"strategy in returnStrategies\"\n                    :key=\"`return-strategy-select-option-${strategy}`\"\n                    :label=\"strategy\"\n                    :value=\"strategy\"\n                />\n              </el-select>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-input\n                  v-if=\"returnStrategy === 'deeplink'\"\n                  v-model=\"deeplink\"\n                  @change=\"handleReturnStrategyDeeplink\"\n                  placeholder=\"Deeplink\"\n                  :disabled=\"returnStrategy !== 'deeplink'\"\n                  style=\"margin: 0px\"\n              />\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Lang</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"language\" @change=\"handleLanguageSelect\" placeholder=\"Language\">\n                <el-option v-for=\"locale in locales\" :key=\"`language-select-option-${locale}`\" :label=\"locale\"\n                           :value=\"locale\"/>\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Theme</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"theme\" @change=\"handleThemeSelect\" placeholder=\"Theme\">\n                <el-option label=\"LIGHT\" :value=\"THEME.LIGHT\"/>\n                <el-option label=\"DARK\" :value=\"THEME.DARK\"/>\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <!--          <el-row>-->\n          <!--          <el-row style=\"align-items: center\">-->\n          <!--            <el-col :span=\"4\">-->\n          <!--              <p style=\"font-size: 11pt\">Connect</p>-->\n          <!--              <p style=\"font-size: 11pt\">Methods</p>-->\n          <!--            </el-col>-->\n          <!--            <el-col :span=\"20\">-->\n          <!--              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" placeholder=\"Methods\">-->\n          <!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n          <!--                           :value=\"methods\" />-->\n\n          <!--              </el-select>-->\n          <!--            </el-col>-->\n          <!--          </el-row>-->\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Connect</p>\n              <p style=\"font-size: 11pt\">Methods</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" multiple placeholder=\"methods\">\n                <el-option\n                    v-for=\"item in connectMethods\"\n                    :key=\"item\"\n                    :label=\"item\"\n                    :value=\"item\">\n                </el-option>\n              </el-select>\n\n\n              <!--              <el-select v-model=\"selectedMethod\" placeholder=\"Methods\" @change=\"handleConnectMethodsSelect\" multiple>-->\n              <!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n              <!--                           :value=\"methods\" />-->\n              <!--              </el-select>-->\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">ton_proof</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-input v-model=\"tonProofValue\" placeholder=\"input ton_proof\"></el-input>\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" align=\"middle\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Required Chains</div>\n            </el-col>\n            <el-col\n                :span=\"6\"\n                v-for=\"item in Object.keys(availableChains)\"\n                :key=\"item\"\n            >\n              <el-checkbox\n                  v-model=\"availableChains[item].checked\"\n                  :disabled=\"!areChainsInit\"\n              >{{ availableChains[item].name }}\n              </el-checkbox\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" align=\"middle\" style=\"margin-top: 20px\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Optional Chains</div>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:43114')\" @change=\"() => handleOptionChange('eip155:43114')\">\n                AVAX\n              </el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:10')\" @change=\"() => handleOptionChange('eip155:10')\">OP</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:8453')\" @change=\"() => handleOptionChange('eip155:8453')\">\n                BASE\n              </el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('eip155:99781165')\"\n                           @change=\"() => handleOptionChange('eip155:99781165')\">Nonexist\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp')\"\n                           @change=\"() => handleOptionChange('solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp')\">Solana\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('ton:-239')\" @change=\"() => handleOptionChange('ton:-239')\">Ton\n              </el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('btc:mainnet')\"\n                           @change=\"() => handleOptionChange('btc:mainnet')\">btc\n              </el-checkbox>\n            </el-col>\n\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"initBtnClicked\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectInitStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"connectBtnClicked\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectStatusStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"syncAllAddressClick\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ syncAllAddressStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"danger\"\n                  @click=\"disconnectAction\"\n                  icon=\"el-icon-switch-button\"\n                  :disabled=\"!areChainsInit || walletAddress.length == 0\"\n              >{{ disconnectStatusStr }}\n              </el-button\n              >\n            </el-col>\n          </el-row>\n\n          <teleport to=\"body\">\n            <div v-if=\"showModal\" class=\"modal-overlay\" @click=\"closeModal\">\n              <div class=\"modal-content\" @click.stop>\n                <button class=\"close-button\" @click=\"closeModal\">\n                  &times;\n                </button>\n                <h2>Scan to connect</h2>\n                <qrcode-vue :value=\"qrValue\" :size=\"350\" level=\"L\"/>\n              </div>\n            </div>\n          </teleport>\n        </el-card>\n\n        <!-- 发送交易 -->\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Transactions</div>\n          </template>\n\n          <el-tabs v-model=\"activeTab\" type=\"border-card\" @tab-click=\"clickActiveTab\">\n            <!-- ETH -->\n            <el-tab-pane label=\"ETH\" name=\"eip155:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to Fuse)\n                  </el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send ETH)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve TONCoin)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(eth mint\n                    nft)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add SPX6900)\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TON\" name=\"ton:-239\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_getAccount\">ton_getAccount</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_sendTransaction\">ton_sendTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- solana -->\n            <el-tab-pane label=\"Sol\" name=\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- Sui-->\n            <el-tab-pane label=\"Sui\" name=\"sui:mainnet\">\n              <SuiPanel @generateTransactionParams=\"sui_generateTransactionParams\"/>\n            </el-tab-pane>\n            <!-- BTC -->\n            <el-tab-pane label=\"BTC\" name=\"btc:mainnet\">\n              <BTCPanel @generateTransactionParams=\"btc_generateTransactionParams\"/>\n            </el-tab-pane>\n\n            <!-- Fractal BTC -->\n            <el-tab-pane label=\"Fractal\" name=\"fractal:mainnet\">\n              <FractalPanel @generateTransactionParams=\"fractal_generateTransactionParams\"/>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Tron\" name=\"tron:mainnet\">\n              <TronTransactionPanel\n                  @generateTransactionParams=\"tron_generateTransactionParams\"\n                  @generateTransactionResult=\"tron_getTransactionResult\"/>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Aptos\" name=\"aptos:mainnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signTransaction\">aptos_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"aptos_signAndSubmitTransaction\">aptos_signAndSubmitTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Cosmos\" name=\"cosmos:cosmoshub-4\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <!-- Polygon-->\n            <el-tab-pane label=\"Polygon\" name=\"eip155:137\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send POL)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve sushi)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(polygon mint\n                    nft)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add LGNS)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_testRpc()\">wallet_testRpc(Polygon)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\"\n                  >eth_sendTransaction(转账FUSE)\n                  </el-button\n                  >\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\"\n                  >eth_sendTransaction(授权USDC)\n                  </el-button\n                  >\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- BSC-->\n            <el-tab-pane label=\"BNB\" name=\"eip155:56\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to BNB)\n                  </el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send BNB)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve POSI)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add FET)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_testRpc()\">wallet_testRpc(check balance on eth)</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Fuse\" name=\"eip155:122\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_swap\">eth_sendTransaction(Swap)</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Sonic testnet\" name=\"svm:70000062\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Movement\" name=\"movement:testnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"move_signTransaction\">move_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"move_signAndSubmitTransaction\">move_signAndSubmitTransaction\n                  </el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n\n            <el-tab-pane label=\"osmos\" name=\"cosmos:osmosis-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"SEI\" name=\"cosmos:pacific-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Starknet\" name=\"starknet:mainnet\">\n              <StarknetPanel ref=\"starknetPanelRef\" @generateTransactionParams=\"starknet_generateTransactionParams\"\n                             @generateTransactionResult=\"starknet_getTransactionResult\"/>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TEST \" name=\"test:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"testBase64UrlSafe\">testBase64UrlSafe</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n          </el-tabs>\n\n          <el-col :xs=\"24\" :sm=\"24\" style=\"margin: 16px 0px;\">\n            <el-row style=\"align-items: center; justify-content: space-between; margin-bottom: 8px;\">\n              <el-col :span=\"4\">\n                <p style=\"font-size: 11pt; margin: 0px; text-align: start\">Redirect param (only for ETH, Polygon, BNB,\n                  Fuse)</p>\n              </el-col>\n              <el-col :span=\"9\">\n                <el-select\n                    v-model=\"redirect\"\n                    @change=\"handleRedirectSelect\"\n                    placeholder=\"Return Strategy\"\n                    :disabled=\"!canChainAddRedirectParam()\"\n                >\n                  <el-option\n                      v-for=\"strategy in returnStrategies\"\n                      :key=\"`return-strategy-select-option-${strategy}`\"\n                      :label=\"strategy\"\n                      :value=\"strategy\"\n                  />\n                </el-select>\n              </el-col>\n              <el-col :span=\"10\">\n                <el-input\n                    v-if=\"redirect === 'deeplink'\"\n                    v-model=\"redirectDeeplink\"\n                    @change=\"handleRedirectDeeplink\"\n                    placeholder=\"Deeplink\"\n                    :disabled=\"!canChainAddRedirectParam() || redirect !== 'deeplink'\"\n                    style=\"margin: 0px\"\n                />\n              </el-col>\n            </el-row>\n            <el-button\n                type=\"primary\" @click=\"addRedirectParam()\"\n                :disabled=\"!canChainAddRedirectParam() || !testTransaction\"\n            >\n              Add redirect param to data\n            </el-button>\n          </el-col>\n\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Data:</div>\n            <el-input v-model=\"testTransaction\" type=\"textarea\" :rows=\"5\" placeholder=\"sendTransactions\"></el-input>\n          </el-col>\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Result :</div>\n            <el-input v-model=\"testboc\" type=\"textarea\" :rows=\"5\" placeholder=\"boc\"></el-input>\n          </el-col>\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button type=\"primary\" :disabled=\"sendBtnDisabled\" @click=\"sendTransaction()\">{{\n                  testTransactionStr\n                }}\n              </el-button>\n            </el-col>\n          </el-row>\n        </el-card>\n      </el-main>\n    </el-container>\n  </div>\n</template>\n\n<style scoped>\n/* 重置全局边距和内边距 */\nbody,\nhtml {\n  margin: 0;\n  padding: 0;\n  height: 100%;\n}\n\n/* 确保 app 容器占满整个视口 */\n#app {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin: 0 auto;\n  /* 居中 */\n  max-width: 600px;\n  /* 设置最大宽度 */\n  padding: 0 20px;\n  /* 添加一些左右内边距 */\n}\n\n/* 调整 el-container 样式 */\n.el-container {\n  min-height: 100vh;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n}\n\n/* 调整 el-header 样式 */\n.el-header {\n  background-color: #333333;\n  color: white;\n  height: 50px;\n  line-height: 50px;\n  font-size: 18px;\n  font-weight: bold;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1000;\n}\n\n/* 调整 el-main 样式 */\n.el-main {\n  padding: 70px 0 20px;\n  /* 增加顶部内边距以避免被固定header遮挡 */\n  flex-grow: 1;\n}\n\n.el-card {\n  margin-bottom: 20px;\n}\n\n.info-row {\n  margin-bottom: 10px;\n}\n\n.input-label {\n  margin-bottom: 5px;\n  text-align: left;\n}\n\n.el-input {\n  margin-bottom: 10px;\n}\n\n/* 通用按钮样式 */\n.wallet-actions .el-button,\n.transaction .el-button,\n.clear-cache .el-button {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 40px;\n}\n\n.wallet-actions .el-button span,\n.transaction .el-button span,\n.clear-cache .el-button span {\n  margin: 0 auto;\n}\n\n/* 按钮行间距 */\n.wallet-actions .button-row,\n.transaction .button-row {\n  margin-bottom: 8px;\n}\n\n.wallet-actions .button-row:last-child,\n.transaction .button-row:last-child {\n  margin-bottom: 0;\n}\n\n/* 调整图标和文字的对齐 */\n.wallet-actions .el-button [class^=\"el-icon-\"],\n.transaction .el-button [class^=\"el-icon-\"],\n.clear-cache .el-button [class^=\"el-icon-\"] {\n  margin-right: 5px;\n  vertical-align: middle;\n}\n\n/* 新增：调整发送交易按钮与输入框的间距 */\n.transaction .el-row:not(:last-child) {\n  margin-bottom: 10px;\n}\n\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.modal-content {\n  background-color: white;\n  padding: 20px;\n  border-radius: 8px;\n  text-align: center;\n  position: relative;\n  max-width: 90%;\n  width: 400px;\n}\n\n.close-button {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  font-size: 24px;\n  border: none;\n  background: none;\n  cursor: pointer;\n}\n\n/* 响应式调整 */\n@media (max-width: 600px) {\n  #app {\n    padding: 0 10px;\n  }\n\n  .el-main {\n    padding: 60px 0 10px;\n  }\n}\n</style>\n<script>\nimport {OKX_CONNECT_ERROR_CODES, safeJsonStringify, getAppWalletDeepLink, getUniversalLink} from \"@okxconnect/core\"\nimport {\n  OKXBtcProvider,\n  OKXUniversalProvider,\n  OKXCosmosProvider,\n  OKXTonProvider,\n  OKXTronProvider,\n  OKXStarknetProvider\n} from \"@okxconnect/universal-provider\"\nimport {OKXSolanaProvider} from \"@okxconnect/solana-provider\";\nimport {\n  Connection,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n  TransactionMessage,\n  VersionedTransaction\n} from '@solana/web3.js';\nimport {OKXSuiProvider as SuiAdapter} from \"@okxconnect/sui-provider\"\nimport QrcodeVue from 'qrcode.vue'\n\nimport {OKXAptosProvider} from \"@okxconnect/aptos-provider\";\nimport {Aptos, AptosConfig, Network} from \"@aptos-labs/ts-sdk\";\n\nimport BTCPanel from \"./components/BtcTransactionPanel.vue\";\nimport FractalPanel from \"./components/FractalTransactionPanel.vue\"\nimport SuiPanel from \"./components/SuiTransactionPanel.vue\";\nimport StarknetPanel from \"./components/StarknetTransactionPanel.vue\";\n\nimport {OKXUniversalConnectUI, THEME} from \"@okxconnect/ui\";\nimport {ethers} from 'ethers';\nimport VConsole from 'vconsole';\nimport nacl from \"tweetnacl\";\n\nconst {verifyADR36Amino} = require('@keplr-wallet/cosmos')\nconst {fromBech32} = require('@cosmjs/encoding')\nimport {verifyPersonalMessageSignature} from '@mysten/sui/verify';\nimport {useShortLink} from \"@okxconnect/core\";\nimport TronTransactionPanel from \"@/components/TronTransactionPanel.vue\";\nimport {TronWeb} from \"tronweb\";\nimport {RpcProvider as StarknetRpcProvider, Account as StarknetAccount} from \"starknet\";\nimport {ref, toRaw} from \"vue\";\n\nnew VConsole();\n\nconst allChains = {\n  1: {name: \"Eth\", checked: false},\n  56: {name: \"BNB\", checked: false},\n  137: {name: \"Polygon\", checked: false},\n  122: {name: \"Fuse\", checked: false},\n  \"ton:-239\": {name: \"TON\", checked: false},\n  \"btc:mainnet\": {name: \"BTC\", checked: false},\n  \"sui:mainnet\": {name: \"Sui\", checked: false},\n  \"aptos:mainnet\": {name: \"Aptos\", checked: false},\n  \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\": {\n    name: \"Solana\",\n    checked: false,\n  },\n  \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\": {\n    name: \"Sol testnet\",\n    checked: false,\n  },\n  \"svm:70000062\": {\n    name: \"Sonic testnet\",\n    checked: false,\n  },\n  \"movement:testnet\": {name: \"Movement\", checked: false},\n  \"fractal:mainnet\": {name: \"Fractal\", checked: false},\n  \"cosmos:osmosis-1\": {name: \"Osmos\", checked: false},\n  \"cosmos:cosmoshub-4\": {name: \"Cosmos\", checked: false},\n  \"cosmos:pacific-1\": {name: \"SEI\", checked: false},\n  \"cosmos:abvdefg\": {name: \"cosmos:abvdefg\", checked: false},\n  \"tron:mainnet\": {name: \"tron\", checked: false},\n  997865: {name: \"Non Exist chain\", checked: false},\n  2020: {name: \"Ronin\", checked: false},\n  1666600000: {name: \"Harmony\", checked: false},\n  \"starknet:mainnet\": {name: \"starknet\", checked: false}\n};\n\nconst chainsThatCanAddRedirectParam = [\n  \"eip\"\n]\n\nvar optionChains = new Set([]);\nvar selectedModals = [\"before\", \"success\", \"error\"];\nvar selectedReturnStrategy = \"none\";\nvar selectedDeepLink = \"tg://resolve\";\nvar selectedLanguage = \"en_US\";\nvar selectedTheme = THEME.LIGHT;\n\n// import QrcodeVue from 'qrcode.vue'\nexport default {\n  name: \"App\",\n  components: {\n    TronTransactionPanel,\n    QrcodeVue,\n    BTCPanel,\n    FractalPanel,\n    SuiPanel,\n    StarknetPanel\n  },\n\n  setup() {\n    const sendBtnDisabled = ref(false)\n\n    return {\n      sendBtnDisabled\n    }\n  },\n  data: () => {\n    return {\n      activeTab: \"eip155:1\",\n      testTopic: \"\",\n      testPublicKey: \"\",\n      testProofPayload: \"\",\n      tonProofValue: \"\",\n      pendingDeepLink: \"-\",\n      logList: [],\n      connectReady: false,\n      connectStatusStr: \"Connect\",\n      syncAllAddressStr: \"syncAllAddress\",\n      connectInitStr: \"init test\",\n      disconnectStatusStr: \"Disconnect\",\n      localPubKey: \"\",\n      localSecKey: \"\",\n      testTransaction: \"\",\n      selectedChain: \"eip155:1\",\n      testTransactionStr: \"Send\",\n      walletAddress: \"\",\n      testboc: \"\",\n      ProofPayloadVerify: \"\",\n      showModal: false,\n      showVerifyRow: false,\n      qrValue: \"https://www.okx.com/download\",\n      currentStatus: \"\",\n      areChainsInit: false,\n      availableChains: allChains,\n      isOptionalChecked: (chainId) => {\n        return optionChains.has(chainId);\n      },\n      withUI: localStorage.getItem(\"autoRefresh\") != \"false\",\n      universalToTG: localStorage.getItem(\"universalToTG\") != \"false\",\n      modals: selectedModals,\n      returnStrategies: [\"none\", \"back\", \"deeplink\"],\n      returnStrategy: selectedReturnStrategy,\n      deeplink: selectedDeepLink,\n      locales: [\n        \"en_US\",\n        \"ru_RU\",\n        \"zh_CN\",\n        \"zh\",\n        \"ar_AE\",\n        \"cs_CZ\",\n        \"de_DE\",\n        \"es_ES\",\n        \"es_LAT\",\n        \"fr_FR\",\n        \"id_ID\",\n        \"it_IT\",\n        \"nl_NL\",\n        \"pl_PL\",\n        \"pt_BR\",\n        \"pt_PT\",\n        \"ro_RO\",\n        \"tr_TR\",\n        \"uk_UA\",\n        \"vi_VN\",\n        \"zh_TW\"\n      ],\n      selectedMethod: [],\n      selectedMethodData: [],\n      connectMethods: [\n        \"wallet_addEthereumChain(ETH)\",\n        \"personal_sign(ETH)\",\n        \"solana_signMessage(Sol mainnet)\",\n        \"sui_signMessage(Sui mainnet)\",\n        \"sui_signPersonalMessage(Sui mainnet)\",\n        \"btc_signMessage(BTC)\",\n        \"aptos_signMessage(aptos mainnet)\",\n        \"cosmos_signArbitrary(cosmoshub)\",\n        \"test_noSupport_eth(ETH)\",\n        \"tron_signMessage\",\n        \"tron_signMessageV2\",\n        \"starknet_signMessage\",\n        \"sync_all_addresses\"\n      ],\n\n      language: selectedLanguage,\n      theme: selectedTheme,\n      THEME: THEME,\n      redirect: selectedReturnStrategy,\n      redirectDeeplink: selectedDeepLink,\n      handleWithUI: (isChecked) => {\n        localStorage.setItem(\"autoRefresh\", `${isChecked}`);\n        location.reload();\n      },\n      handleUniversalToTG: (isChecked) => {\n        localStorage.setItem(\"universalToTG\", `${isChecked}`);\n      },\n      handleOptionChange: (chainId) => {\n        console.log(\"handleOptionChange ->chainId:\",chainId)\n        if (optionChains.has(chainId)) {\n          optionChains.delete(chainId);\n        } else {\n          optionChains.add(chainId);\n        }\n      },\n      starknetPanelTypedData: ''\n    };\n  },\n  computed: {\n    getWalletAddress: function () {\n      return this.walletAddress;\n    },\n  },\n  methods: {\n    isChecked(chainId) {\n      return this.selectedChains.has(chainId);\n    },\n\n    initChains(newChains) {\n      if (newChains.length > 0) {\n        const updatedChains = Object.assign({}, this.availableChains);\n        for (const chainId of newChains) {\n          if (updatedChains[chainId]) {\n            updatedChains[chainId].checked = !updatedChains[chainId].checked;\n          }\n        }\n        this.availableChains = updatedChains;\n      }\n\n      this.areChainsInit = true;\n    },\n\n    async clickActiveTab(tab) {\n      const tabName = tab.props ? tab.props.name : tab.name;\n      this.selectedChain = tabName;\n      console.log(`已切换到链 :`, tabName);\n\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      if (tabName == \"starknet:mainnet\") {\n        this.sendBtnDisabled = true\n      } else {\n        this.sendBtnDisabled = false\n      }\n\n      window.provider.setDefaultChain(this.selectedChain);\n    },\n\n    async initBtnClicked() {\n      window.okxLogDebug = true\n      var initCall;\n      if (!this.withUI) {\n        initCall = OKXUniversalProvider.init({\n          dappMetaData: {\n            name: \"univer test dapp\",\n            icon: \"https://avatars.githubusercontent.com/u/37784886\",\n          },\n        });\n      } else {\n        initCall = OKXUniversalConnectUI.init({\n          dappMetaData: {\n            icon: \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\",\n            name: \"OKX WalletConnect UI Demo\",\n          },\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: 'all',\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme\n          },\n        });\n      }\n\n      initCall.then((provider) => {\n        window.provider = provider;\n        window.tonProvider = new OKXTonProvider(window.provider);\n        window.tonProvider.onStatusChange((walletInfo) => {\n              console.log('TONConnection onStatusChange:', JSON.stringify(walletInfo));\n            }, (err) => {\n              console.log('TONConnection onStatusChange error:', err);\n            }\n        )\n\n        if (window.provider instanceof OKXUniversalConnectUI) {\n          window.provider.onModalStateChange((state) => {\n            console.log(`onModalStateChange   ${JSON.stringify(state)}`)\n          })\n        }\n\n        console.log(\"init finished:\", provider);\n        console.log(\"init finished session:\", JSON.stringify(provider.session));\n\n        if (provider.session?.namespaces) {\n          const newChains = [];\n          console.log(\"namespaces\", provider.session.namespaces);\n          Object.entries(provider.session.namespaces).forEach(([key, value]) => {\n            if (key === \"eip155\") {\n              value.chains.forEach((chain) => {\n                newChains.push(parseInt(chain.substring(7)));\n              });\n            } else {\n              value.chains.forEach((chain) => {\n                newChains.push(chain);\n              });\n            }\n          });\n\n          console.log(\"existing chains:\", newChains);\n          this.initChains(newChains);\n        } else {\n          this.initChains([]);\n        }\n\n        provider.on(\"display_uri\", (uri) => {\n          if (!useShortLink()) {\n            if (this.isPC()) {\n              if (uri && !this.withUI && !this.universalToTG) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          }\n          console.log(\"通知>>>display_uri  ==> \", uri);\n        });\n\n        provider.on(\"connect_signResponse\", (items) => {\n          console.log(\"通知>>>connect_signResponse  ==> \", JSON.stringify(items));\n          this.verifyMessage(items)\n        })\n\n        provider.on(\"short_display_uri\", (uri) => {\n          if (useShortLink()) {\n            if (this.isPC()) {\n              if (uri && !this.withUI && !this.universalToTG) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          }\n          console.log(\"通知>>>short_display_uri  ==> \", uri);\n        });\n\n\n        provider.on(\"session_connecting\", () => {\n          console.log(\"通知>>>session_connecting  ==> \");\n        });\n\n        provider.on(\"connect\", (session) => {\n          console.log(\"通知>>>get connect session\", session);\n        });\n        provider.on(\"reconnect\", (session) => {\n          console.log(\"通知>>>get reconnect session\", session);\n          this.walletAddress = \"connected\";\n        });\n        provider.on(\"disconnect\", ({topic}) => {\n          console.log(`通知>>>get disconnect  ${topic}`);\n          this.walletAddress = \"disconnecteddddd\";\n        });\n        provider.on(\"session_delete\", ({topic}) => {\n          console.log(`通知>>>get session_delete  ${topic}`);\n        });\n        provider.on(\"session_update\", (session) => {\n          console.log(`通知>>>get session_update `, JSON.stringify(session));\n        });\n      });\n    },\n\n    async connectBtnClicked() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        this.testTonSdk();\n      } else {\n        console.log(`connectBtnClicked provider not finish init`);\n      }\n    },\n\n    async syncAllAddressClick() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        if (window.provider instanceof OKXUniversalProvider) {\n          if (window.provider.connected()) {\n            try {\n              let message = await window.provider.syncAllAddresses()\n              if (typeof message == \"string\") {\n                this.testboc = message\n              } else {\n                this.testboc = JSON.stringify(message)\n              }\n            } catch (e) {\n              this.testboc = JSON.stringify(e)\n            }\n          } else {\n            this.testboc = \"not connected\"\n          }\n        }\n\n      } else {\n        console.log(`syncAllAddress provider not finish init`);\n      }\n    },\n\n    async disconnectAction() {\n      try {\n        console.log(\"get disconnect wallet btn clicked\");\n        // await TON.disconnect();\n        var provider = window.provider;\n        await provider.disconnect();\n        this.walletAddress = \"disconnected\";\n      } catch (error) {\n        console.log(\"Disconnect  error ==>> \", error.message);\n        this.currentStatus = error.message;\n      }\n    },\n\n    async eth_requestAccounts() {\n      var data = {method: \"eth_requestAccounts\"};\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_chainId() {\n      var data = {method: \"eth_chainId\"};\n      this.testTransaction = JSON.stringify(data);\n    },\n    async wallet_switchEthereumChain() {\n      var data = {\n        method: \"wallet_switchEthereumChain\",\n        params: [\n          {\n            chainId: \"0x7a\"\n          }\n        ]\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async wallet_addEthereumChain() {\n      var data = {\n        method: \"wallet_addEthereumChain\",\n        params: {\n          blockExplorerUrls: [\"https://explorer.fuse.io\"],\n          chainId: \"0x7a\",\n          chainName: \"Fuse\",\n          nativeCurrency: {name: \"Fuse\", symbol: \"FUSE\", decimals: 18},\n          rpcUrls: [\"https://rpc.fuse.io\"],\n        },\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    fromAccountToAddress(account) {\n      if (!account) {\n        return \"\"\n      }\n      try {\n        let addressArr = account.split(\":\").slice(2);\n        let address = addressArr.length > 0 ? addressArr.join(\":\") : \"\";\n        return address;\n      } catch (e) {\n        return \"\"\n      }\n\n    },\n\n    requestEVMAccountWithSession(chainId) {\n      console.log(\"requestAccountWithSession >>>\", chainId);\n      if (window.provider && window.provider.session && chainId) {\n        let key = chainId.includes(\":\") ? chainId.split(\":\")[0] : chainId;\n        let namespace = window.provider.session.namespaces\n        if (key === \"eip155\") {\n          let evmNameSpace = namespace[key];\n          if (evmNameSpace && evmNameSpace.accounts) {\n            let accounts = evmNameSpace.accounts;\n            return [\n              ...new Set(\n                  accounts\n                      // get the accounts from the active chain\n                      .filter((account) => account.includes(chainId+\":\"))\n                      // remove namespace & chainId from the string\n                      .map((account) => {\n                        return this.fromAccountToAddress(account);\n                      })\n              ),\n            ];\n\n          }\n\n        }\n      }\n      return undefined\n    },\n\n    async personal_sign() {\n      if (this.selectedChain === \"eip155:1\") {\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0x1ca023f10e157d148deed210f8bee193657a1eaa7f187909e20a9dc3b071dbc364c41fde37960c05093359f410a061ec8a7dca8c0c39fc7c1e24de8a3329775d1b\n\n        var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n        var address = accounts[0];\n        console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n        var dataETH = {\n          method: \"personal_sign\",\n          params: [\n            \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n            address,\n          ],\n        };\n\n        this.testTransaction = JSON.stringify(dataETH);\n      } else if (\n          this.selectedChain === \"eip155:137\" ||\n          this.selectedChain === \"eip155:122\"\n      ) {\n        // method\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0xebda9cfa2af43999058dffa0107031d1ef7fc0252dca85dcbd22ea097af922ca39b64d509ef61ce42b7641c5840b8a80337ffd1411b13e87e2260a3f1b6c151c1b\n\n        var dataPolygon = {\n          method: \"personal_sign\",\n          params: {\n            message:\n                \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n        this.testTransaction = JSON.stringify(dataPolygon);\n      } else if (this.selectedChain === \"eip155:56\") {\n        var data = {\n          method: \"personal_sign\",\n          params: {\n            message:\n                \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n\n        this.testTransaction = JSON.stringify(data);\n      }\n    },\n\n    async eth_sendTransaction_swap() {\n      var data = {\n        method: \"eth_sendTransaction\",\n        chainId: \"eip155:122\",\n        params: {\n          value: \"0x38d7ea4c68000\",\n          gas: \"0x2665f\",\n          to: \"0xf2614A233c7C3e7f08b1F887Ba133a13f1eb2c55\",\n          from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n          data: \"0x2646478b000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee00000000000000000000000000000000000000000000000000038d7ea4c68000000000000000000000000000620fd5fa44be6af63715ef4e65ddfa0387ad13f5000000000000000000000000000000000000000000000000000000000000001b000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000700301ffff0201602352A9Eb5234466Eac23E59e7B99bCaE79C39c0BE9e53fd7EDaC9F859882AfdDa116645287C629040BE9e53fd7EDaC9F859882AfdDa116645287C62900602352A9Eb5234466Eac23E59e7B99bCaE79C39c01f2F3e73be57031114dd1f4E75c1DD87658be7F0E000bb800000000000000000000000000000000\",\n        },\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_signTypedData_v4() {\n      // method\n      // eth_signTypedData\n      // address\n      // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n      // valid\n      // true\n      // result\n      // 0xa8bb3c6b33a119d2d567c7632195c21988df778006082742125a591f5c633f716107883a37f7de6531a6312a5f69022135bf46fe5ab77905b62c82b3395f985e1b\n      //\n\n      // var data = {\n      //   \"method\": \"eth_signTypedData_v4\",\n      //   \"params\": {\n      //     \"typedDataJson\":\"{\\\"types\\\":{\\\"EIP712Domain\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"version\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"chainId\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"name\\\":\\\"verifyingContract\\\",\\\"type\\\":\\\"address\\\"}],\\\"Person\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"wallet\\\",\\\"type\\\":\\\"address\\\"}],\\\"Mail\\\":[{\\\"name\\\":\\\"from\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"to\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"contents\\\",\\\"type\\\":\\\"string\\\"}]},\\\"primaryType\\\":\\\"Mail\\\",\\\"domain\\\":{\\\"name\\\":\\\"Ether Mail\\\",\\\"version\\\":\\\"1\\\",\\\"chainId\\\":1,\\\"verifyingContract\\\":\\\"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\\\"},\\\"message\\\":{\\\"from\\\":{\\\"name\\\":\\\"Cow\\\",\\\"wallet\\\":\\\"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\\\"},\\\"to\\\":{\\\"name\\\":\\\"Bob\\\",\\\"wallet\\\":\\\"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\\\"},\\\"contents\\\":\\\"Hello, Bob!\\\"}}\"\n      // }}\n\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n      var data = {\n        method: \"eth_signTypedData_v4\",\n        params: [\n          address,\n          {\n            types: {\n              EIP712Domain: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"version\",\n                  type: \"string\",\n                },\n                {\n                  name: \"chainId\",\n                  type: \"uint256\",\n                },\n                {\n                  name: \"verifyingContract\",\n                  type: \"address\",\n                },\n              ],\n              Person: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"wallet\",\n                  type: \"address\",\n                },\n              ],\n              Mail: [\n                {\n                  name: \"from\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"to\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"contents\",\n                  type: \"string\",\n                },\n              ],\n            },\n            primaryType: \"Mail\",\n            domain: {\n              name: \"Ether Mail\",\n              version: \"1\",\n              chainId: 1,\n              verifyingContract: \"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\",\n            },\n            message: {\n              from: {\n                name: \"Cow\",\n                wallet: \"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\",\n              },\n              to: {\n                name: \"Bob\",\n                wallet: \"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\",\n              },\n              contents: \"Hello, Bob!\",\n            },\n          },\n        ],\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_sendTransaction_transfer() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            chainId: \"0x1\",\n            to: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            value: \"0x5af3107a4000\",\n            maxPriorityFeePerGas: \"0x3b9aca00\",\n            gas: \"0x5e56\",\n            maxFeePerGas: \"0x2643b9db8\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gasPrice: \"0x17003f6530\",\n            nonce: \"0x0d30\",\n            data: \"0x\",\n            value: \"0x00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasLimit: \"0x5208\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x5e56\",\n            value: \"0x5af3107a4000\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasPrice: \"0x3b9aca00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            chainId: \"0x38\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:122\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            value: \"0x0\",\n            chainId: \"0x7a\",\n          }\n        }\n      }\n\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"to\"] = address;\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_approve() {\n      var data = {};\n\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000000000000022d473030f116ddee9f6b43ac78ba3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x582d872a1b094fc48f5de31d3b73f2d9be47def1\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000f6f8096ac575b0\",\n            to: \"0x0b3F868E0BE5597D5DB7fEB59E1CADBb0fdDa50a\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            value: \"0x0\",\n            gas: \"0xe117\",\n            gasPrice: \"0xb2d05e00\",\n            data: \"0x095ea7b300000000000000000000000031c2f6fcff4f8759b3bd5bf0e1084a055615c768ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x5CA42204cDaa70d5c773946e69dE942b85CA6706\",\n          },\n        };\n      } else if (this.selectedChain === 'eip155:122') {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000000000000013b3\",\n            to: \"0x620fd5fa44BE6af63715Ef4E65DDFA0387aD13F5\",\n          },\n        };\n      }\n\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_mint() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x4cacb\",\n            data: \"0xa64dfa75000000000000000000000000ed688002f3797599db8b4feacfe8b1dda0df1c8d000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cecb15396825a895ff8da8fc2d2c77a234dccee00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f6261667962656968643737366b6177706e71336f6f6a6635693274787a76617737737164656b34616a776472637472703261366f626b70723773792f7b69647dan            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x30795\",\n            data: \"0xa64dfa75000000000000000000000000341b3687f0309778f08f29336b2c4b9c38b9f110000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f62616679626569686a6279676b68747a71376b68377434336266686e676e793236337668766f6578716a6d6e377161716166366e717a64743777712f7b69647dan            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      }\n\n      let str = JSON.stringify(data);\n      console.log(\"-----长度--->\", str.length);\n      var accounts = this.requestEVMAccountWithSession(this.selectedChain)\n\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async wallet_testRpc() {\n      let provider = window.provider;\n      provider.setDefaultChain(\n          `eip155:56`,\n          `https://eth-mainnet.g.alchemy.com/v2/NxUfYJUr-TQtEpLmSXhhD5pXn70GwsyV`\n      );\n      var data = {\n        method: \"eth_getBalance\",\n        params: [\"0x8D97689C9818892B700e27F316cc3E41e17fBeb9\", \"latest\"],\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async wallet_watchAsset() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xe0f63a424a4439cbe457d80e4f4b51ad25b2c56c\",\n              symbol: \"SPX6900\",\n              image:\n                  \"https://assets.coingecko.com/coins/images/31401/standard/sticker_%281%29.jpg?1702371083\",\n              decimals: 8,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xeB51D9A39AD5EEF215dC0Bf39a8821ff804A0F01\",\n              symbol: \"LGNS\",\n              image: \"https://polygonscan.com/token/images/originlgns_32.png\",\n              decimals: 9,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0x031b41e504677879370e9dbcf937283a8691fa7f\",\n              symbol: \"FET\",\n              image: \"https://bscscan.com/token/images/fetch_32.png\",\n              decimals: 18,\n            },\n          },\n        };\n      }\n\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async ton_sendTransaction() {\n      var data = {\n        \"messages\": [{\n          \"address\": \"EQARULUYsmJq1RiZ-YiH-IJLcAZUVkVff-KBPwEmmaQGH6aC\",\n          \"amount\": \"186000000\",\n          \"payload\": \"te6cckEBAgEAhgABaw+KfqUAAACKXw/PUzD0JAgA7zuZAqJxsqAciTilI8/iTnGEeq62piAAHtRKd6wOcJwQLBuBAwEAlSWThWGAEPckSDVNSvvmJOKMGCE4qb+zE0NdQGXsIPpYy63RDznGJO33ACoTmz7CXpV552d6ANFof7NJCUxG8kSbhHYZT5CrVcQGUCH+joo=\"\n        }],\n        \"validUntil\": 1736161561913,\n        \"network\": '-239'\n      }\n      this.testTransaction = JSON.stringify(data)\n    },\n    ton_getAccount() {\n      this.testTransaction = \"这里是同步获取 不再需要点击 <<发送交易>>\"\n      let result = window.tonProvider.account()\n      if (result) {\n        this.testboc = JSON.stringify(result);\n      } else {\n        this.testboc = 'null'\n      }\n    },\n\n    async tonUniversalLog() {\n      console.log(\"ton 信息: tonProvider  connected:\", window.tonProvider.connected())\n      console.log(\"ton 信息: tonProvider  account:\", JSON.stringify(window.tonProvider.account()))\n      console.log(\"ton 信息: tonProvider  wallet:\", JSON.stringify(window.tonProvider.wallet()))\n    },\n\n    async sendTransactionAlert() {\n      //\n      const response = await fetch(`https://apitest.fireverse.ai/oauth/okx/getNonce?publicAddress=0x0cecb15396825a895ff8da8fc2d2c77a234dccee`);\n      const data = await response.json();\n      console.log(\"请求数据----\", JSON.stringify(data))\n      await this.personal_sign()\n      if (confirm(\"Are you want to sign message?\")) {\n        this.sendTransaction();\n      }\n\n      // window.open(\"https://www.okx.com/download?deeplink=okx%3A%2F%2Fweb3%2Fwallet%2Fconnect\",'_self')\n    },\n\n    async sendTransaction() {\n      if (this.selectedChain.startsWith(\"aptos\")\n          || this.selectedChain.startsWith(\"movement\")\n          || this.selectedChain.startsWith(\"solana\")\n          || this.selectedChain.startsWith(\"sonic\")\n          || this.selectedChain.startsWith(\"cosmos\")) {\n        return\n      }\n      console.log(\"sendTransaction\", window.provider);\n      console.log(\"sendTransaction内容11------\", this.testTransaction);\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      if (this.testTransaction && window.provider) {\n        // eslint-disable-next-line no-undef\n        const sendData = JSON.parse(this.testTransaction);\n        try {\n          console.log(\"sendTransaction-----22method>>\", sendData.method);\n\n          let chainId = \"eip155:1\";\n          if (this.selectedChain) {\n            chainId = this.selectedChain;\n            console.log(\n                \"sendTransaction-----this.selectedChain>>\",\n                this.selectedChain\n            );\n          }\n          console.log(\"windowOpen[click_1]: \", Date.now());\n          if (chainId == \"sui:mainnet\") {\n            const adapter = new SuiAdapter(window.provider);\n            var suiResult = \"invalid result\";\n            if (this.currentSuiMethod == 'sui_getAccount') {\n              let result = adapter.getAccount()\n              if (typeof result == \"string\") {\n                this.testboc = result\n              } else {\n                this.testboc = JSON.stringify(result)\n              }\n            }\n            if (this.currentSuiMethod == \"sui_signTransaction\") {\n              suiResult = await adapter.signTransaction(\n                  this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signAndExecuteTransaction\") {\n              suiResult = await adapter.signAndExecuteTransaction(\n                  this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signMessage\") {\n              console.log(\"signMessage----\", this.currentSuiTransaction);\n              suiResult = await adapter.signMessage(this.currentSuiTransaction);\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_signPersonalMessage\") {\n              console.log(\n                  \"signPersonalMessage----\",\n                  this.currentSuiTransaction\n              );\n              suiResult = await adapter.signPersonalMessage(\n                  this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_testRpc\") {\n              console.log(\"test rpc----\", this.currentSuiTransaction);\n              console.log(\n                  `请求数据发送 rpc ----->> ${JSON.stringify(sendData)}`\n              );\n              const res = await window.provider.request(sendData, chainId);\n              console.log(`请求数据回调 rpc ----->> ${JSON.stringify(result)}`);\n              if (typeof res == \"string\") {\n                this.testboc = res;\n              } else {\n                this.testboc = JSON.stringify(res);\n              }\n            }\n            console.log(\"windowOpen[click_2]: \", Date.now());\n            return;\n          } else if (chainId === \"ton:-239\") {\n            console.log(\n                `请求数据发送 sendTransaction ---ton-->> ${JSON.stringify(sendData)}`\n            );\n            let result = await window.tonProvider.sendTransaction(sendData)\n            console.log(\n                `请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`\n            );\n            if (typeof result == \"string\") {\n              this.testboc = result;\n            } else {\n              this.testboc = JSON.stringify(result);\n            }\n            return\n          }\n\n          if (chainId == 'btc:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var btcResult = 'invalid result'\n\n            if (this.currentBtcMethod == 'btc_signMessage') {\n              btcResult = await btcAdapter.signMessage(chainId, this.currentBtcTransaction[\"signStr\"])\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_send') {\n              btcResult = await btcAdapter.send(chainId, this.currentBtcTransaction)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signPsbt') {\n              btcResult = await btcAdapter.signPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n\n              this.hexToBase64(btcResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentBtcMethod == 'btc_signPsbts') {\n              btcResult = await btcAdapter.signPsbts(chainId, this.currentBtcTransaction.psbtHexs, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_sendInscription') {\n              btcResult = await btcAdapter.sendInscription(chainId, this.currentBtcTransaction.address, this.currentBtcTransaction.inscriptionId, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signAndPushPsbt') {\n              btcResult = await btcAdapter.signAndPushPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_sendBitcoin') {\n              btcResult = await btcAdapter.sendBitcoin(chainId, this.currentBtcTransaction.toAddress, this.currentBtcTransaction.satoshis, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_getAccount') {\n              btcResult = btcAdapter.getAccount(chainId)\n              this.testboc = JSON.stringify(btcResult)\n            }\n\n            return\n          }\n\n          if (chainId == 'fractal:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var fractalResult = 'invalid result'\n\n            if (this.currentFractalMethod == 'fractal_signMessage') {\n              fractalResult = await btcAdapter.signMessage(chainId, this.currentFractalTransaction['signStr'])\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_send') {\n              fractalResult = await btcAdapter.send(chainId, this.currentFractalTransaction)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signPsbt') {\n              fractalResult = await btcAdapter.signPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.hexToBase64(fractalResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentFractalMethod == 'fractal_signPsbts') {\n              fractalResult = await btcAdapter.signPsbts(chainId, this.currentFractalTransaction.psbtHexs, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_sendInscription') {\n              fractalResult = await btcAdapter.sendInscription(chainId, this.currentFractalTransaction.address, this.currentFractalTransaction.inscriptionId, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signAndPushPsbt') {\n              fractalResult = await btcAdapter.signAndPushPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_sendBitcoin') {\n              fractalResult = await btcAdapter.sendBitcoin(chainId, this.currentFractalTransaction.toAddress, this.currentFractalTransaction.satoshis, this.currentFractalTransaction.options)\n\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_getAccount') {\n              fractalResult = btcAdapter.getAccount(chainId)\n              this.testboc = JSON.stringify(fractalResult)\n            }\n\n            return\n          }\n\n          console.log(`请求数据发送 sendTransaction ----->> ${JSON.stringify(sendData)}`)\n          var result = await window.provider.request(sendData, chainId)\n          console.log(`请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`)\n\n          console.log(\"windowOpen[click_3]: \", Date.now());\n          if (typeof result == \"string\") {\n            this.testboc = result;\n          } else {\n            this.testboc = JSON.stringify(result);\n          }\n          console.log(\"方法数据回调 --this.testboc--\", this.testboc);\n        } catch (error) {\n          console.error(\"方法数据回调失败 --Error--\", error.message);\n\n          if (error.code === OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n            this.testboc = error.message;\n          } else {\n            this.testboc = \"wrong signature！\" + error.message;\n          }\n        }\n      } else {\n        alert(\"Please input transaction data\");\n      }\n    },\n\n    hexToBase64(hexStr) {\n      var bytes = [];\n      for (var i = 0; i < hexStr.length; i += 2) {\n        bytes.push(parseInt(hexStr.substr(i, 2), 16));\n      }\n      const buffer = new Uint8Array(bytes)\n      const blob = new Blob([buffer]);\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = function (e) {\n          var base64Data = e.target.result.split(\",\")[1]\n          resolve(base64Data);\n        };\n        reader.onerror = function (e) {\n          reject(e);\n        };\n        reader.readAsDataURL(blob);\n      });\n    },\n    testBase64UrlSafe() {\n      let datatest = {\n        \"protocolVer\": 1,\n        \"topic\": \"8a7a4c3be73802d0ae2587123ade7bb79f27433b9aa3ca589a2208a2089eecfd\",\n        \"clientId\": \"5f1bbf9eac92160affa7ef04d0a710817ddb6d8c22ebbd6263e86f059930b404\",\n        \"requestId\": \"1731383250054\",\n        \"dAppInfo\": {\n          \"url\": \"connect.oker.vip\",\n          \"origin\": \"https://connect.oker.vip\",\n          \"name\": \"univer test dapp\",\n          \"icon\": \"https://avatars.githubusercontent.com/u/37784886\"\n        },\n        \"requests\": [{\n          \"name\": \"requestAccounts\",\n          \"requiredNamespaces\": [{\"namespace\": \"aptos\", \"chains\": [\"aptos:637\"]}],\n          \"optionalNamespaces\": [],\n          \"connectRequestMethods\": [{\n            \"chainId\": \"aptos:637\",\n            \"method\": \"aptos_signMessage\",\n            \"params\": {\n              \"data\": {\n                \"address\": true,\n                \"application\": true,\n                \"chainId\": true,\n                \"message\": \"123 中文测试!\",\n                \"nonce\": \"1234\"\n              }, \"applicationUrl\": \"https://connect.oker.vip\", \"prefix\": \"APTOS\", \"aptosChainId\": \"1\"\n            }\n          }]\n        }],\n        \"redirect\": \"none\"\n      }\n      let json = JSON.stringify(datatest)\n      const utf8Array = new TextEncoder().encode(json);\n      let binary = '';\n      utf8Array.forEach(byte => {\n        binary += String.fromCharCode(byte);\n      });\n\n      let firstStr = btoa(binary)\n      console.log(\"字符串编码1>>>>\", firstStr)\n      firstStr = firstStr.replace(/\\+/g, '-')  // 替换 '+'\n      console.log(\"字符串编码2>>>>\", firstStr)\n      firstStr = firstStr.replace(/\\//g, '_')  // 替换 '/'\n      console.log(\"字符串编码3>>>>\", firstStr)\n      firstStr = firstStr.replace(/=+$/, '');  // 移除 '=';\n      console.log(\"字符串编码4>>>>\", firstStr)\n\n      let showUrl = getUniversalLink(getAppWalletDeepLink(firstStr))\n      console.log(\"字符串编码5>>>>\", showUrl)\n      this.qrValue = showUrl;\n      this.showModal = true;\n    },\n\n\n    async testTonSdk() {\n      // 1. connect\n      //  create sub providers for each namespace/chain\n      let nameSpacesChains = [];\n      let optSpaceChains = [];\n\n      let solanaChains = [\n        \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n        \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n        \"svm:70000062\",\n      ];\n      let hasEip155, hasSolana, hasSui, hasBtc, hasAptos, hasTon, hasCosmos, hasTron, hasStarknet = false\n\n      let suiChains = [\n        \"sui:mainnet\",\n      ];\n\n      let btcChains = [\n        \"btc:mainnet\",\n        \"fractal:mainnet\"\n      ];\n\n      const chains = Object.entries(this.availableChains)\n          .filter((chain) => chain[1].checked)\n          .map((chain) => chain[0]);\n      console.log(`chains  ===> ${chains.values()}`)\n      chains.forEach(function (chainId) {\n        console.log(`chains.forEach chainId  ===> ${chainId}`)\n\n        if (solanaChains.includes(chainId)) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"ton\")) {\n          nameSpacesChains.push(chainId)\n          hasTon = true\n          return\n        }\n        if (typeof chainId == 'string' && (chainId.startsWith(\"aptos\") || chainId.startsWith(\"movement\"))) {\n          nameSpacesChains.push(chainId)\n          hasAptos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId)\n          hasSolana = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"cosmos\")) {\n          nameSpacesChains.push(chainId)\n          hasCosmos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"tron\")) {\n          nameSpacesChains.push(chainId)\n          hasTron = true\n          return\n        }\n\n        if (typeof chainId == 'string' && chainId.startsWith(\"starknet\")) {\n          nameSpacesChains.push(chainId)\n          hasStarknet = true\n          return\n        }\n\n        if (suiChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`);\n          nameSpacesChains.push(chainId);\n          hasSui = true;\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`)\n          nameSpacesChains.push(chainId)\n          hasBtc = true\n          return\n        }\n\n        hasEip155 = true\n        nameSpacesChains.push(`eip155:${chainId}`)\n      })\n\n\n      optionChains.forEach(function (chainId) {\n        console.log(\"optionChains.forEach 。chainId：》》\",chainId)\n        if (solanaChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n        if (typeof chainId == \"string\" && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (suiChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          optSpaceChains.push(chainId)\n          return\n        }\n        if (chainId.startsWith('ton')) {\n          optSpaceChains.push(chainId)\n          return\n        }\n\n        optSpaceChains.push(`eip155:${chainId}`)\n      })\n\n      console.log(`namespaceChains  ===> ${JSON.stringify(nameSpacesChains)}`);\n      var connectData = {};\n      if (nameSpacesChains && nameSpacesChains.length > 0) {\n        var requireData = {};\n\n        if (hasEip155) {\n          requireData.eip155 = {\n            chains: nameSpacesChains.filter((item) =>\n                item.startsWith(\"eip155\")\n            ),\n            defaultChain: nameSpacesChains.filter((item) =>\n                item.startsWith(\"eip155\")\n            )[0],\n          };\n        }\n        if (hasSolana) {\n          requireData.solana = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"solana\") ||\n                    item.startsWith(\"sonic\") ||\n                    item.startsWith(\"svm\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"solana\") ||\n                    item.startsWith(\"sonic\") ||\n                    item.startsWith(\"svm\")\n            )[0],\n          };\n        }\n\n        if (hasCosmos) {\n          requireData.cosmos = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            )[0],\n          }\n        }\n        if (hasTron) {\n          requireData.tron = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            )[0],\n          }\n        }\n        if (hasStarknet) {\n          requireData.starknet = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"starknet\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"starknet\")\n            )[0],\n          }\n        }\n        if (hasTon) {\n\n          //\n          let tonParams = {\n            manifestUrl:\"https://app.ston.fi/tonconnect-manifest.json\",\n            ton_addr: {\n              name: 'ton_addr',\n            }\n          };\n          if (this.tonProofValue) {\n            tonParams = {\n              manifestUrl:\"https://app.ston.fi/tonconnect-manifest.json\",\n              ton_addr: {\n                name: 'ton_addr',\n              },\n              ton_proof: {\n                name: 'ton_proof',\n                payload: this.tonProofValue,\n              }\n            };\n          }\n\n\n          requireData.ton = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"ton\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"ton\"))[0],\n            params: tonParams\n          };\n        }\n\n        if (hasSui) {\n          requireData.sui = {\n            chains: nameSpacesChains.filter((item) => item.startsWith(\"sui\")),\n            defaultChain: nameSpacesChains.filter((item) =>\n                item.startsWith(\"sui\")\n            )[0],\n            rpcMap: {\n              \"sui:mainnet\": \"https://www.okx.com/fullnode/sui/discover/rpc\"\n            }\n          };\n        }\n        if (hasAptos) {\n          requireData.aptos = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\"))[0]\n          }\n        }\n\n        if (hasBtc) {\n          let btcChains = nameSpacesChains.filter(item => item.startsWith(\"btc\") || item.startsWith(\"fractal\"))\n          requireData.btc = {\n            chains: btcChains,\n            defaultChain: btcChains[0]\n          }\n        }\n        console.log(`requireData  ===> ${JSON.stringify(requireData)}`)\n        connectData['namespaces'] = requireData;\n        console.log(JSON.stringify(connectData))\n      }\n\n      if (optSpaceChains && optSpaceChains.length > 0) {\n        const optData = {};\n\n        const eip155Chains = optSpaceChains.filter((item) => item.startsWith(\"eip155\"));\n        if (eip155Chains.length > 0) {\n          optData[\"eip155\"] = {\n            chains: eip155Chains,\n            defaultChain: eip155Chains[0],\n          };\n        }\n\n        const solanaChains = optSpaceChains.filter((item) => item.startsWith(\"solana\"));\n        if (solanaChains.length > 0) {\n          optData[\"solana\"] = {\n            chains: solanaChains,\n            defaultChain: solanaChains[0],\n          };\n        }\n\n        const tonChains = optSpaceChains.filter((item) => item.startsWith(\"ton\"));\n        if (tonChains.length > 0) {\n\n          let tonParams = {\n            ton_addr: {\n              name: 'ton_addr',\n            }\n          };\n          if (this.tonProofValue) {\n            tonParams = {\n              ton_addr: {\n                name: 'ton_addr',\n              },\n              ton_proof: {\n                name: 'ton_proof',\n                payload: this.tonProofValue,\n              }\n            };\n          }\n\n\n          optData[\"ton\"] = {\n            chains: tonChains,\n            defaultChain: tonChains[0],\n            params: tonParams\n          };\n        }\n\n        const btcChains = optSpaceChains.filter((item) => item.startsWith(\"btc\"));\n        if (btcChains.length > 0) {\n          optData[\"btc\"] = {\n            chains: btcChains,\n            defaultChain: btcChains[0],\n          };\n        }\n\n        connectData[\"optionalNamespaces\"] = optData;\n      }\n\n      if (nameSpacesChains.length === 0 && optSpaceChains.length === 0) {\n        //未选择链\n        alert(\"Please select a chain from above to continue\");\n        return;\n      }\n      console.log(\"=====>connectData \");\n      console.log(connectData);\n\n      var connectMethod;\n      let signMethods = this.getCurrentSelectedMethodData();\n      if (window.provider instanceof OKXUniversalConnectUI) {\n\n        if (signMethods && signMethods.length > 0) {\n          connectMethod = window.provider.openModalAndSign(connectData, JSON.parse(JSON.stringify(signMethods)));\n        } else {\n          connectMethod = window.provider.openModal(connectData);\n        }\n      } else {\n        if (this.universalToTG) {\n          connectData.sessionConfig = {\n            useMini: true,\n            openUniversalUrl: true,\n            tmaReturnUrl: 'back'\n          }\n        } else {\n          connectData.sessionConfig = {\n            redirect: selectedReturnStrategy\n          }\n        }\n        if (signMethods && signMethods.length > 0) {\n          connectMethod = window.provider.connectAndSign(connectData, JSON.parse(JSON.stringify(signMethods)));\n        } else {\n          connectMethod = window.provider.connect(connectData);\n        }\n      }\n\n      await connectMethod\n          .then((result) => {\n            // 2. set defaul chain\n            this.walletAddress = \"connected\";\n            if (this.isPC()) {\n              this.showModal = false;\n            }\n            if (result) {\n              this.testboc = JSON.stringify(result)\n            }\n\n            if (window.provider.session && window.provider.session.namespaces) {\n              let ton = window.provider.session.namespaces[\"ton\"];\n              console.log(\"是否包含ton\", ton)\n              if (ton) {\n                this.tonUniversalLog()\n              }\n            }\n          })\n          .catch((error) => {\n            if (error.code == 301) {\n              setTimeout(() => {\n                alert(error.message)\n              }, 0.5);\n            } else if (error.message) {\n              alert(error.message)\n            }\n            console.error(\"发生了错误：\", error);\n          });\n    },\n\n    getCurrentSelectedMethodData() {// 连接签名\n      var methodList = [];\n      this.selectedMethod.forEach(method => {\n        switch (method) {\n          case \"wallet_addEthereumChain(ETH)\":\n            methodList.push({\n              method: \"wallet_addEthereumChain\",\n              chainId: \"eip155:1\",\n              params: {\n                blockExplorerUrls: [\"https://explorer.fuse.io\"],\n                chainId: \"0x7a\",\n                chainName: \"Fuse\",\n                nativeCurrency: {name: \"Fuse\", symbol: \"FUSE\", decimals: 18},\n                rpcUrls: [\"https://rpc.fuse.io\"],\n              },\n            })\n            break;\n          case \"personal_sign(ETH)\":\n            methodList.push(\n                {\n                  method: \"personal_sign\",\n                  chainId: \"eip155:1\",\n                  params: [\n                    \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n                  ],\n                });\n            break;\n          case \"solana_signMessage(Sol mainnet)\":\n            methodList.push(\n                {\n                  \"chainId\": \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n                  \"method\": \"solana_signMessage\",\n                  \"params\": {\n                    \"message\": \"Hello Solana\",\n                  }\n                }\n            );\n            break;\n          case \"sui_signMessage(Sui mainnet)\":\n          case \"sui_signPersonalMessage(Sui mainnet)\": {\n            let suiData = [\n              76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n              109, 111, 118, 101,\n            ];\n            let uint8Array = new Uint8Array(suiData);\n            let currentMethod = \"sui_signMessage\";\n            this.currentSuiTransaction = {\n              message: uint8Array\n            }\n\n            if (method.startsWith(\"sui_signPersonalMessage\")) {\n              currentMethod = \"sui_signPersonalMessage\";\n            }\n            methodList.push(\n                {\n                  method: currentMethod,\n                  chainId: \"sui:mainnet\",\n                  params: {\n                    message: uint8Array,\n                  }\n                }\n            );\n            break;\n          }\n          case \"btc_signMessage(BTC)\":\n            methodList.push(\n                {\n                  method: \"btc_signMessage\",\n                  chainId: \"btc:mainnet\",\n                  params: {\n                    message: \"Welcome to BTC\"\n                  }\n                }\n            )\n            break;\n          case \"aptos_signMessage(aptos mainnet)\":\n            methodList.push(\n                {\n                  \"chainId\": \"aptos:mainnet\",\n                  \"method\": \"aptos_signMessage\",\n                  \"params\": {\n                    address: true,\n                    application: true,\n                    chainId: true,\n                    message: \"Hello Aptos\",\n                    nonce: \"1234\"\n                  }\n                }\n            )\n            break;\n          case \"cosmos_signArbitrary(cosmoshub)\":\n            methodList.push(\n                {\n                  \"chainId\": \"cosmos:cosmoshub-4\",\n                  \"method\": \"cosmos_signArbitrary\",\n                  \"params\": {\n                    message: \"test cosmos\"\n                  }\n                }\n            )\n\n            break;\n          case \"test_noSupport_eth(ETH)\":\n            methodList.push(\n                {\n                  chainId: \"eip155:1\",\n                  method: \"test_noSupport_eth\",\n                  params: {\n                    message: \"test hello\",\n                  }\n                }\n            )\n            break;\n          case \"sync_all_addresses\":\n            methodList.push(\n                {\n                  method: \"sync_all_addresses\",\n                });\n            break;\n          case \"tron_signMessage\":\n            methodList.push(\n                {\n                  chainId: \"tron:mainnet\",\n                  method: \"tron_signMessage\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n          case \"tron_signMessageV2\":\n            methodList.push(\n                {\n                  chainId: \"tron:mainnet\",\n                  method: \"tron_signMessageV2\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n\n            //\n          case \"starknet_signMessage\": {\n            const signData = {\n              \"domain\": {\n                \"chainId\": \"0x534e5f4d41494e\",\n                \"name\": \"STRKFarm\",\n                \"version\": \"1\"\n              },\n              \"message\": {\n                \"document\": \"app.strkfarm.xyz/tnc/v1\",\n                \"message\": \"Read and Agree T&C\"\n              },\n              \"primaryType\": \"Tnc\",\n              \"types\": {\n                \"StarkNetDomain\": [\n                  {\n                    \"name\": \"name\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"version\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"chainId\",\n                    \"type\": \"felt\"\n                  }\n                ],\n                \"Tnc\": [\n                  {\n                    \"name\": \"message\",\n                    \"type\": \"felt\"\n                  },\n                  {\n                    \"name\": \"document\",\n                    \"type\": \"felt\"\n                  }\n                ]\n              }\n            }\n            methodList.push({\n              chainId: \"starknet:mainnet\",\n              method: \"starknet_signMessage\",\n              params: {\n                accountAddress: \"\",\n                typedData: signData\n              }\n            })\n          }\n            break\n          default:\n\n            break;\n        }\n      })\n      this.selectedMethodData = methodList\n      return methodList\n\n    },\n\n    closeModal() {\n      this.showModal = false;\n    },\n\n    isPC() {\n      const userAgentInfo = navigator.userAgent;\n      console.log(\"current device ua is ===>\", userAgentInfo);\n\n      const Agents = [\n        \"Android\",\n        \"iPhone\",\n        \"SymbianOS\",\n        \"Windows Phone\",\n        \"iPad\",\n        \"iPod\",\n      ];\n      let flag = true;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = false;\n          break;\n        }\n      }\n      return flag;\n    },\n    isSafariOrChrome() {\n      const userAgentInfo = navigator.userAgent;\n      const Agents = [\"Safari\", \"Chrome\"];\n      let flag = false;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = true;\n          break;\n        }\n      }\n      return flag;\n    },\n\n    /// solana\n    async sol_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      try {\n        let data = {\n          method: \"solana_signMessage\",\n          params: {\n            message: \"Hello Solana\",\n            pubkey: \"\",\n          },\n        };\n        this.testTransaction = JSON.stringify(data);\n        let provider = new OKXSolanaProvider(window.provider);\n\n        let message = await provider.signMessage(\n            \"Hello Solana\",\n            this.selectedChain\n        );\n        console.log(\"solana_signMessage Result:\", JSON.stringify(message))\n        const result1 = nacl.sign.detached.verify(\n            new TextEncoder().encode(\"Hello Solana\"),\n            message.signature,\n            new PublicKey(message.publicKey).toBytes()\n        );\n        console.log(result1)\n\n        if (typeof message == \"string\") {\n          this.testboc = result1;\n        } else {\n          this.testboc = result1;\n        }\n      } catch (e) {\n        console.log(\"solana_signMessage error:\", JSON.stringify(e))\n        this.testboc = e.message\n      }\n\n    },\n\n    async aptos_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      let data = {\n        address: true,\n        application: true,\n        chainId: true,\n        message: \"Hello Aptos\",\n        nonce: \"1234\"\n      }\n\n      let provider = new OKXAptosProvider(window.provider)\n      let message = await provider.signMessage(data, this.selectedChain)\n      this.testTransaction = JSON.stringify(data)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n      try {\n        const transaction = await aptos.transaction.build.simple({\n          sender: provider.getAccount(this.selectedChain).address,\n          data: {\n            // The Move entry-function\n            function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n            // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n            typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n            functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n          },\n        });\n        console.log(\"获取地址aptos 222222：\");\n\n        this.testTransaction = safeJsonStringify(transaction)\n\n        let message = await provider.signTransaction(transaction, this.selectedChain)\n        if (typeof message == \"string\") {\n          this.testboc = message\n        } else {\n          this.testboc = JSON.stringify(message)\n        }\n      }catch (e) {\n\n        this.testboc = JSON.stringify(e)\n      }\n\n    },\n\n    async move_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async move_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({network: Network.MAINNET});\n      const aptos = new Aptos(config);\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n          functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n        },\n      });\n\n      // let data = {\n      //   \"arguments\": [\"100000\",[\"0\",\"0\",\"10533\"],[\"10\",\"5\",\"5\"],[\"false\",\"false\",\"true\"]],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x3\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\",\"0x73eb84966be67e4697fc5ae75173ca6c35089e802650f75422ab49a8729704ec::coin::DooDoo\",\"0x53a30a6e5936c0a4c5140daed34de39d17ca7fcae08f947c02e979cef98a3719::coin::LSD\",\"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::CurveV1\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x54cb0bb2c18564b86e34539b9f89cfe1186e39d89fce54e1cd007b8e61673a85::bin_steps::X80\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async sol_signVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(\n          provider.getAccount(\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\").address\n      );\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signTransaction(\n          transaction,\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAndSendVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n          transaction,\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllVersionedTransactions() {\n      let provider = new OKXSolanaProvider(window.provider);\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n          [transaction],\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signTransaction() {\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: 1000,\n          })\n      );\n\n      this.testTransaction = safeJsonStringify(transaction)\n      let result = await provider.signTransaction(\n          transaction,\n          this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllTransactions() {\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n          [transaction],\n          this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    getSolConnect() {\n      let rpc = \"https://www.okx.com/fullnode/sol/discover/rpc\"\n      if (this.selectedChain === \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\") {\n        rpc = \"https://www.okx.com//fullnode/sol/discover/rpc\"\n      } else if (this.selectedChain === \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\") {\n        rpc = \"https://www.okx.com/fullnode/soltestnet/discover/rpc\"\n      } else if (this.selectedChain === \"svm:70000062\") {\n        rpc = \"https://www.okx.com/fullnode/sonic/testnet/discover/rpc\"\n      }\n      return rpc\n    },\n\n    async sol_signAndSendTransaction() {\n\n      const connection = new Connection(this.getSolConnect())\n      const {blockhash} = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n          transaction,\n          this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async cosmos_signArbitrary() {\n      let provider = new OKXCosmosProvider(window.provider)\n      let message = await provider.signArbitrary(this.selectedChain, provider.getAccount(this.selectedChain).address, \"test cosmos\")\n      if (typeof message == \"string\") {\n        this.testboc = message;\n      } else {\n        let isValid = await this.cosmos_verifySignArbitrary(provider.getAccount(this.selectedChain).address, \"test cosmos\", message.signature, message.pub_key.value)\n        console.log(\"verify\", isValid)\n        this.testboc = \"verify:\" + isValid + JSON.stringify(message);\n      }\n    },\n\n    async cosmos_verifySignArbitrary(signer, data, signature, pubkey) {\n      try {\n        console.log(\"cosmos_verifySignArbitrary signer:\", signer)\n        console.log(\"cosmos_verifySignArbitrary data:\", JSON.stringify(data))\n        console.log(\"cosmos_verifySignArbitrary signature:\", signature)\n        console.log(\"cosmos_verifySignArbitrary pubkey:\", pubkey)\n\n        // 将bech32地址转换为公钥\n        const {prefix: prefixStr} = fromBech32(signer)\n\n        const signatureBuffer = Buffer.from(signature, 'base64');\n\n        const uint8Signature = new Uint8Array(signatureBuffer); // Convert the buffer to an Uint8Array\n\n        const pubKeyValueBuffer = Buffer.from(pubkey, 'base64'); // Decode the base64 encoded value\n\n        const pubKeyUint8Array = new Uint8Array(pubKeyValueBuffer); // Convert the buffer to an Uint8Array\n\n        // 验证签名\n        return await verifyADR36Amino(\n            prefixStr,\n            signer,\n            data,\n            pubKeyUint8Array,\n            uint8Signature\n        )\n      } catch (err) {\n        console.error('Verification failed:', err)\n        return false\n      }\n    },\n\n    async cosmos_signAmino() {\n      let provider = new OKXCosmosProvider(window.provider)\n      // const rpcUrl = 'https://osmosis-rpc.publicnode.com:443';\n      // const client = await StargateClient.connect(rpcUrl);\n      // const height = await client.getHeight();\n      // let address = provider.getAccount(this.selectedChain).address\n      // const sequence = await client.getSequence(address)\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      // let signDoc = makeSignDoc(\n      //     transaction.msgs,\n      //     transaction.fee,\n      //     this.selectedChain.split(\":\")[1],\n      //     transaction.memo,\n      //     transaction.accountNumber,\n      //     transaction.sequence,\n      // )\n      let signDoc = {\n        \"chain_id\": \"osmosis-1\",\n        \"account_number\": \"630104\",\n        \"sequence\": \"480\",\n        \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]},\n        \"msgs\": [{\n          \"type\": \"osmosis/poolmanager/swap-exact-amount-in\",\n          \"value\": {\n            \"sender\": \"osmo1u6lts9ng4etxj0zdaxsada6zgl8dudpgelmuyu\",\n            \"routes\": [{\n              \"pool_id\": \"1096\",\n              \"token_out_denom\": \"ibc/987C17B11ABC2B20019178ACE62929FE9840202CE79498E29FE8E5CB02B7C0A4\"\n            }, {\n              \"pool_id\": \"611\",\n              \"token_out_denom\": \"ibc/27394FB092D2ECCD56123C74F36E4C1F926001CEADA9CA97EA622B25F41E5EB2\"\n            }],\n            \"token_in\": {\"denom\": \"uosmo\", \"amount\": \"100\"},\n            \"token_out_min_amount\": \"8\"\n          }\n        }],\n        \"memo\": \"FE\",\n        \"timeout_height\": \"23603788\",\n        \"signOptions\": {\n          \"useOneClickTrading\": false,\n          \"preferNoSetFee\": true,\n          \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]}\n        }\n      }\n\n\n      // let signOption = {\n      //   memo: true, // optional\n      //   fee: true, // optional\n      //   gasRate: {\n      //     // optional\n      //     average: \"0.2\",\n      //     low: \"0.02\",\n      //     tiny: \"0.002\",\n      //   },\n      // }\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signAmino(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, signDoc)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    messageToBuffer(message) {\n      var buffer = Buffer.from([]);\n      try {\n        if (typeof message === \"string\") {\n          buffer = Buffer.from(message.replace(\"0x\", \"\"), \"hex\");\n        } else {\n          buffer = Buffer.from(message);\n        }\n      } catch (err) {\n        console.log(`messageToBuffer error: ${err}`);\n      }\n      return buffer;\n    },\n\n\n    async cosmos_signDirect() {\n      let provider = new OKXCosmosProvider(window.provider)\n\n      let signDoc = {\n        \"bodyBytes\": this.messageToBuffer(\"0x0ac1010a292f6962632e6170706c69636174696f6e732e7472616e736665722e76312e4d73675472616e736665721293010a087472616e7366657212096368616e6e656c2d301a0d0a05756f736d6f120431303030222b6f736d6f3175366c7473396e67346574786a307a64617873616461367a676c386475647067656c6d7579752a2d636f736d6f733175366c7473396e67346574786a307a64617873616461367a676c386475647067337967766a773207080410ebe3f90a3880b0bcafd18cec8218\"),\n        \"authInfoBytes\": this.messageToBuffer(\"0x0a510a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a2102446e19e94ac0e83ea896d2712507577eb39fbdd2d6ae9f0fc0b9759f1fbaba9012040a02080118e00312140a0e0a05756f736d6f1205323530303010859a11\"),\n        \"chainId\": \"osmosis-1\",\n        \"accountNumber\": \"630104\",\n      }\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signDirect(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, transaction)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    sui_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentSuiTransaction = params\n      this.currentSuiMethod = flag\n    },\n\n    btc_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentBtcTransaction = params\n      this.currentBtcMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n\n    fractal_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentFractalTransaction = params\n      this.currentFractalMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n    tron_getTransactionResult(result) {\n      if (typeof result == \"string\") {\n        this.testboc = result\n      } else {\n        this.testboc = JSON.stringify(result)\n      }\n    },\n    tron_generateTransactionParams(params) {\n      if (typeof params == \"string\") {\n        this.testTransaction = params\n      } else {\n        this.testTransaction = JSON.stringify(params)\n      }\n    },\n\n    starknet_getTransactionResult(result) {\n      if (typeof result == \"string\") {\n        this.testboc = result\n      } else {\n        this.testboc = JSON.stringify(result)\n      }\n    },\n\n    starknet_generateTransactionParams(params) {\n      if (typeof params == \"string\") {\n        this.testTransaction = params\n      } else {\n        this.testTransaction = JSON.stringify(params)\n      }\n    },\n\n    handleModalsSelect(modals) {\n      selectedModals = modals;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: modals.length === 3 ? \"all\" : modals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n\n    handleReturnStrategySelect(returnStrategy) {\n      selectedReturnStrategy = returnStrategy === \"deeplink\" ? this.deeplink : returnStrategy;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      } else {\n        if (window.provider.sessionConfig) {\n          window.provider.sessionConfig.redirect = selectedReturnStrategy;\n        } else {\n          window.provider.sessionConfig = {\n            redirect: selectedReturnStrategy\n          };\n        }\n      }\n    },\n\n    handleReturnStrategyDeeplink(deeplink) {\n      console.log('handleReturnStrategyDeeplink', deeplink)\n      selectedReturnStrategy = deeplink;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: deeplink,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      } else {\n        if (window.provider.sessionConfig) {\n          window.provider.sessionConfig.redirect = deeplink;\n        } else {\n          window.provider.sessionConfig = {\n            redirect: deeplink\n          };\n        }\n      }\n    },\n\n    handleLanguageSelect(language) {\n      selectedLanguage = language;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: language,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n    handleConnectMethodsSelect() {\n      console.log(\"当前的方法 this.selectedMethod>>>>\", this.selectedMethod);\n    },\n\n    eth_verifyMessage(message, signature, ethAddress) {\n      console.log(\"eth_verifyMessage   message>>>\", message)\n      console.log(\"eth_verifyMessage   signature>>>\", signature)\n      console.log(\"eth_verifyMessage   ethAddress>>>\", ethAddress)\n      if (!message || !signature) {\n        return \"\"\n      }\n      let originalMessage = message\n      if (message.startsWith(\"0x\")) {\n        originalMessage = originalMessage.replace(/^0x/, '');\n        let str = '';\n        for (let i = 0; i < originalMessage.length; i += 2) {\n          const byte = originalMessage.slice(i, i + 2);\n          str += String.fromCharCode(parseInt(byte, 16));\n        }\n        originalMessage = str\n      }\n      console.log(\"eth_verifyMessage   originalMessage>>>\", originalMessage)\n\n      // const messageHash = ethers.utils.hashMessage(originalMessage);\n      const recoveredAddress = ethers.utils.verifyMessage(originalMessage, signature);\n      console.log(\"eth_verifyMessage recoveredAddress:\", recoveredAddress);\n      return recoveredAddress.toLowerCase() === ethAddress.toLowerCase();\n    },\n\n    async verifyMessage(list) { //连接验签\n\n      if (window.provider && window.provider.session && list && list.length > 0) {\n        let verifyList = {}\n        for (let methodItem of list) {\n          if (\"result\" in methodItem && \"method\" in methodItem) {\n            let requestItme = this.selectedMethodData.filter(item => item.method === methodItem.method)[0];\n            console.log(\"验证签名 请求>>>:\", JSON.stringify(requestItme));\n            console.log(\"验证签名 结果>>>:\", JSON.stringify(methodItem));\n            if (methodItem.method === \"personal_sign\") {\n              let ethAddress = this.requestEVMAccountWithSession(methodItem.chainId)\n              ethAddress = ethAddress[0];\n              console.log(\"验证eth 钱包地址>>>:\", ethAddress);\n              let ethMessage = requestItme.params[0]\n              console.log(\"验证eth 签名消息体>>:\", JSON.stringify(ethMessage));\n              verifyList[methodItem.method] = this.eth_verifyMessage(ethMessage, methodItem.result, ethAddress)\n            } else if (methodItem.method === \"solana_signMessage\") {\n              let solanaMessage = methodItem.result\n              if (\"signature\" in solanaMessage && \"publicKey\" in solanaMessage) {\n                const verifySol = nacl.sign.detached.verify(\n                    new TextEncoder().encode(\"Hello Solana\"),\n                    solanaMessage.signature,\n                    new PublicKey(solanaMessage.publicKey).toBytes()\n                );\n                verifyList[methodItem.method] = verifySol\n              } else {\n                verifyList[methodItem.method] = false\n              }\n            } else if (methodItem.method === \"sui_signPersonalMessage\" || methodItem.method === \"sui_signMessage\") {\n              let suiResult = this.sui_verifySignature(methodItem.result);\n              verifyList[methodItem.method] = (await suiResult).result\n            } else if (methodItem.method === \"btc_signMessage\") {\n\n              verifyList[methodItem.method] = \"Not verified yet\"\n\n            } else if (methodItem.method === \"aptos_signMessage\") {\n              let aptosMessage = methodItem.result\n              let aptosProvider = new OKXAptosProvider(window.provider)\n              let aptosPublicKey = aptosProvider.getAccount(methodItem.chainId)?.publicKey\n\n              let signStr = aptosMessage.signature\n              if (signStr.startsWith(\"0x\")) {\n                signStr = signStr.slice(2, signStr.length)\n              }\n\n              console.log(\"aptos_signMessage aptosPublicKey And signStr\", aptosPublicKey, signStr)\n              verifyList[methodItem.method] = nacl.sign.detached.verify(\n                  Buffer.from(aptosMessage.fullMessage),\n                  Buffer.from(signStr, 'hex'),\n                  Buffer.from(aptosPublicKey, 'hex'),\n              );\n            } else if (methodItem.method === \"cosmos_signArbitrary\") {\n              let cosmosProvider = new OKXCosmosProvider(window.provider)\n              let cosmosAddress = cosmosProvider.getAccount(methodItem.chainId)?.address\n              let cosmosMessage = methodItem.result\n              let isValid = await this.cosmos_verifySignArbitrary(cosmosAddress, \"test cosmos\", cosmosMessage.signature, cosmosMessage.pub_key.value)\n              verifyList[methodItem.method] = isValid\n\n            } else if (methodItem.method === \"tron_signMessage\") {\n              let tronMessage = methodItem.result\n              let tronWeb = new TronWeb({\n                \"fullHost\": 'https://api.trongrid.io',\n                \"headers\": {},\n                \"privateKey\": ''\n              })\n              let provider = new OKXTronProvider(window.provider)\n              verifyList[methodItem.method] = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), tronMessage, provider.getAccount(\"tron:mainnet\").address)\n            } else if (methodItem.method === \"tron_signMessageV2\") {\n              let tronMessage = methodItem.result\n              let tronWeb = new TronWeb({\n                \"fullHost\": 'https://api.trongrid.io',\n                \"headers\": {},\n                \"privateKey\": ''\n              })\n              const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", tronMessage);\n              let provider = new OKXTronProvider(window.provider)\n\n              verifyList[methodItem.method] = base58Address === provider.getAccount(\"tron:mainnet\").address\n            } else if (methodItem.method === \"starknet_signMessage\") {\n              let res = methodItem.result\n              let signData = this.starknetPanelTypedData\n\n              const rpcProvider = new StarknetRpcProvider({nodeUrl: \"https://free-rpc.nethermind.io/mainnet-juno/v0_7\"});\n\n              let provider = new OKXStarknetProvider(window.provider)\n              let address = provider.getAccount(\"starknet:mainnet\").address\n              let pk = \"0x123\"; /// random pk\n              const account = new StarknetAccount(rpcProvider, address, pk)\n\n              let that = this\n              account.verifyMessage(signData, res).then(function (isValid) {\n                that.testTransaction = `Verifyed result: \\n${isValid}`\n              }).catch(function (error) {\n                that.testTransaction = `Verifyed failed: \\n${error}`\n              })\n              verifyList[methodItem.method] = \"starknet is verifying signature...\"\n            } else {\n              verifyList[methodItem.method] = \"Not verified yet\"\n\n            }\n          } else if (\"method\" in methodItem && \"error\" in methodItem) {\n            verifyList[methodItem.method] = methodItem.error\n          }\n\n        }\n\n        console.log(\"验证签名 最后的结果>>>:\", JSON.stringify(verifyList));\n        this.testTransaction = \"签名验证结果如下: \\n\" + JSON.stringify(verifyList)\n      } else {\n        console.log(\"验证签名 window.provider.session.connectMethodsReply 为空:\");\n\n      }\n\n    },\n\n    handleThemeSelect(theme) {\n      selectedTheme = theme;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: theme,\n          },\n        };\n      }\n    },\n\n    async sui_verifySignature(signatureResult) {\n      let resultObj = signatureResult\n      let result = false\n      let msg = ''\n      try {\n        /// 获取当前account\n        const adapter = new SuiAdapter(window.provider);\n        let account = adapter.getAccount()\n        console.log(`Account中获取的address：${account.address}`)\n\n        /// 验证签名\n        let pubKey = await verifyPersonalMessageSignature(this.currentSuiTransaction.message, resultObj.signature)\n        let address = pubKey.toSuiAddress()\n        console.log(`验签结果计算得到address：${address}`)\n\n        /// 对比pubKey\n        console.log(`account pubkey: ${account.publicKey}`,)\n        console.log(`result pubkey: ${pubKey.toBase64()}`)\n        result = (account.address === address) && (account.publicKey === pubKey.toBase64())\n\n        msg = `address verify: ${account.address === address}\\npublicKey verify: ${account.publicKey === pubKey.toBase64()}`\n        console.log(\"signature verify success: \", pubKey)\n      } catch (e) {\n        console.log(\"signature verify failed: \", e)\n      }\n      return {\n        result,\n        msg\n      }\n    },\n\n\n    handleRedirectSelect(input) {\n      this.redirect = input;\n    },\n\n    handleRedirectDeeplink(input) {\n      this.redirectDeeplink = input;\n    },\n\n    addRedirectParam() {\n      if (this.testTransaction) {\n        const newTransaction = JSON.parse(this.testTransaction);\n        newTransaction.redirect = this.redirect === 'deeplink' ? this.redirectDeeplink : this.redirect;\n        this.testTransaction = JSON.stringify(newTransaction);\n      }\n    },\n\n    canChainAddRedirectParam() {\n      return chainsThatCanAddRedirectParam.some((c) => this.selectedChain.startsWith(c));\n    }\n  },\n  created() {\n    // for (const eventName of Object.values(OKX_TON_CONNECTION_AND_TRANSACTION_EVENT)) {\n    //   console.log(eventName);\n    //   window.addEventListener(eventName, (event) => {\n    //     console.log(eventName,event.detail)\n    //     this.currentStatus = eventName\n    //   });\n    // }\n  },\n\n  mounted() {\n\n    var scriptTag = document.createElement(\"script\");\n    scriptTag.src = \"https://telegram.org/js/telegram-web-app.js\";\n    scriptTag.id = \"tgsdk\";\n    document.getElementsByTagName('head')[0].appendChild(scriptTag);\n\n    this.connectReady = true;\n    document.title = \"OKX Connect\";\n    this.initBtnClicked()\n\n    console.log(\"挂载成功:\")\n    if (this.$refs.starknetPanelRef) {\n      this.starknetPanelTypedData = toRaw(this.$refs.starknetPanelRef.signData)\n      console.log(\"111: \", this.starknetPanelTypedData)\n    } else {\n      console.log(\"222\")\n    }\n  },\n};\n</script>\n","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_getAccount()\">getAccount(BTC)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signMessage()\">signMessage(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_send()\">send(BTC)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendBitcoin()\">sendBitcoin(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signPsbt_up()\">signPsbt(上架NFT)</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"btc_signAndPushPsbt_up()\">signAndPushPsbt(上架NFT)</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在OKX App选择要上架的Btc NFT，点击【上架】\n        </li>\n        <li>\n          2. 弹出签名面板，点开高级选项，查看\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出上架流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendInscription()\">sendInscription(BTC)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Btc NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount\n    }\n  },\n  methods: {\n\n    btc_getAccount() {\n      this.$emit('generateTransactionParams', {}, \"btc_getAccount\")\n    },\n\n    btc_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to BTC\"\n      };\n      this.$emit('generateTransactionParams', params, \"btc_signMessage\")\n    },\n\n    btc_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"btc_send\")\n    },\n\n    btc_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"btc_sendBitcoin\")\n    },\n\n    btc_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"btc_signPsbt\")\n    },\n\n    btc_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"btc_signAndPushPsbt\")\n    },\n\n    btc_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"btc_sendInscription\")\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./BtcTransactionPanel.vue?vue&type=template&id=376d03bc&scoped=true\"\nimport script from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./BtcTransactionPanel.vue?vue&type=style&index=0&id=376d03bc&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-376d03bc\"]])\n\nexport default __exports__","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_getAccount()\">getAccount(Fractal)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signMessage()\">signMessage(Fractal)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_send()\">send(Fractal)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_sendBitcoin()\">sendBitcoin(Fractal)</el-button>\n\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signPsbt_up()\">signPsbt(上架NFT)</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_signAndPushPsbt_up()\">signAndPushPsbt(上架NFT)</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在OKX App选择要上架的Fractal NFT，点击【上架】\n        </li>\n        <li>\n          2. 弹出签名面板，点开高级选项，查看\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出上架流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_sendInscription()\">sendInscription(Fractal)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Fractal NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount\n    }\n  },\n  methods: {\n\n    fractal_getAccount() {\n      this.$emit('generateTransactionParams', {}, \"fractal_getAccount\")\n    },\n\n    fractal_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to UniSat!\\n\\nClick to sign in and accept the UniSat Terms of Service (https://unisat.io/terms-of-service.html) and Privacy Policy (https://unisat.io/privacy-policy.html).\\n    \\nThis request will not trigger a blockchain transaction.\\n    \\nYour authentication status will reset after 24 hours.\\n    \\nWallet address:\\nbc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\\n    \\nNonce:\\n162d70e3-8c21-4cfd-9a22-9bf0a4b7be51\\n\"\n      };\n      this.$emit('generateTransactionParams', params, \"fractal_signMessage\")\n    },\n\n    fractal_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_send\")\n    },\n\n    fractal_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_sendBitcoin\")\n    },\n\n    fractal_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"fractal_signPsbt\")\n    },\n\n    fractal_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"fractal_signAndPushPsbt\")\n    },\n\n    fractal_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"fractal_sendInscription\")\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./FractalTransactionPanel.vue?vue&type=template&id=fb2f7e38&scoped=true\"\nimport script from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./FractalTransactionPanel.vue?vue&type=style&index=0&id=fb2f7e38&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-fb2f7e38\"]])\n\nexport default __exports__","<script>\n\nimport {getFullnodeUrl, SuiClient} from \"@mysten/sui/client\";\nimport {Transaction as SuiTransaction} from '@mysten/sui/transactions';\n\nexport default {\n  name: \"SuiTransactionPanel\",\n  methods: {\n    sui_getAccount() {\n      this.$emit('generateTransactionParams', '', \"sui_getAccount\")\n    },\n\n    //对单个交易签名（不发送)\n    async sui_signMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signMessage\")\n    },\n\n    async sui_signPersonalMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signPersonalMessage\")\n    },\n\n    sui_signTransaction2() {\n      // 定义要转移的金额和目标地址\n      const amount = 109; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    async sui_requestRpc() {\n      let provider = window.provider;\n      provider.setDefaultChain(\n          `sui:mainnet`,\n          `https://fullnode.mainnet.sui.io:443`\n      );\n      var data = {\n        method: \"suix_getBalance\",\n        params: [\n          \"0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae\",\n          \"0x168da5bf1f48dafc111b0a488fa454aca95e0b5e::usdc::USDC\",\n        ],\n      };\n\n      this.$emit(\"generateTransactionParams\", data, \"sui_testRpc\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 102; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signAndExecuteTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n      this.$emit(\"generateTransactionParams\", input, \"sui_signAndExecuteTransaction\")\n    },\n\n    /// generate txBytes and txSerialize\n    async generateTsBytesAndSerizlize(input) {\n      /// txBytes and txSerialize may be constructed in advance by the dapp side\n      let resultTuple = [\"\", \"\"];\n      if (\n          \"txBytes\" in input &&\n          input.txBytes.length > 0 &&\n          \"txSerialize\" in input &&\n          input.txSerialize.length > 0\n      ) {\n        resultTuple = [input.txBytes, input.txSerialize];\n      }\n\n      /// Otherwise, a transactionBlock parameter is required.\n      if (!(\"transactionBlock\" in input)) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      // if (this.walletAddress != \"connected\") {\n      //   alert(\"请先连接钱包\");\n      //   return new Promise((resolve) => {\n      //     resolve(resultTuple);\n      //   });\n      // }\n\n      let senderAccounts = window.provider.requestAccountsWithNamespace(\"sui\");\n      if (senderAccounts.length == 0) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      try {\n        let rpcUrl = getFullnodeUrl(\"mainnet\");\n        rpcUrl = \"https://www.okx.com/fullnode/sui/discover/rpc\"\n        const suiClient = new SuiClient({ url: rpcUrl });\n\n        /// sender is required\n        input.transactionBlock.setSender(senderAccounts[0]);\n        const result = await input.transactionBlock.build({\n          client: suiClient,\n        });\n        const txBytes = Buffer(result).toString(\"base64\");\n        const txSerialize = await SuiTransaction.from(txBytes).toJSON();\n        resultTuple = [txBytes, txSerialize];\n      } catch (error) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      return new Promise((resolve) => {\n        resolve(resultTuple)\n      })\n    },\n\n    //签名并发送交易\n    sui_signAndExecuteTransaction() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n        \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.testTransaction = JSON.stringify(input);\n      this.currentSuiTransaction = input;\n      this.currentSuiMethod = \"sui_signAndExecuteTransaction\";\n    },\n  },\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_getAccount()\">getAccount(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signMessage()\">signMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signPersonalMessage()\">signPersonalMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signTransaction2()\">signTransaction(Sui)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signAndExecuteTransaction()\">sendTransaction(Sui)</el-button>\n      <div style=\"font-size: 12px; color: gray;\">(send to Rally Tiger account)</div>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_requestRpc()\">RPC_getBalance</el-button>\n      <div style=\"font-size: 12px; color: gray;\">get USDC balance of address:</div>\n      <div style=\"font-size: 12px; color: gray\">0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae</div>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signTransaction_pre_execution()\">signTransaction(prepared data)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signAndExecuteTransaction_pre_execution()\">sendTransaction(prepared data)</el-button>\n    </el-col>\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./SuiTransactionPanel.vue?vue&type=template&id=56a8eddf&scoped=true\"\nimport script from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./SuiTransactionPanel.vue?vue&type=style&index=0&id=56a8eddf&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-56a8eddf\"]])\n\nexport default __exports__","<script>\nimport { OKXStarknetProvider } from \"@okxconnect/universal-provider\";\nimport { CallData, uint256, RpcProvider, Account } from \"starknet\";\n\nexport default {\n  name: \"StarknetTransactionPanel\",\n  methods: {\n    async starknet_signMessage() {\n      this.address = this.getCurrentAddress()\n      if (this.address === \"\") {\n        alert(\"address can't be ''\");\n        return\n      }\n\n      let signData = this.signData\n      this.$emit(\"generateTransactionParams\", JSON.stringify(signData))\n      let provider = new OKXStarknetProvider(window.provider)\n      let res = await provider.signMessage(this.address, signData, \"starknet:mainnet\")\n      if (res.code) {\n        if (res.code == 301) {\n          let msg = \"Wallet address is registering, please try again later!\"\n          alert(msg)\n          this.$emit(\"generateTransactionResult\", msg, \"starknet_signMessage\")\n        }\n        this.$emit(\"generateTransactionResult\", res, \"starknet_signMessage\")\n        return\n      }\n      console.log(res)\n\n      const rpcProvider = new RpcProvider({ nodeUrl: \"https://free-rpc.nethermind.io/mainnet-juno/v0_7\" });\n      let pk = \"0x123\"; /// random pk\n      const account = new Account(rpcProvider, this.address, pk)\n      let that = this\n      account.verifyMessage(signData, res).then(function (isValid) {\n        that.$emit(\"generateTransactionResult\", \"verify:\" + isValid + \"\\n\" + res, \"starknet_signMessage\")\n      }).catch(function (error) {\n        that.$emit(\"generateTransactionResult\", \"failed:\" + error + \"\\n\" + res, \"starknet_signMessage\")\n      })\n    },\n\n    async starknet_sendTransaction() {\n      this.address = this.getCurrentAddress()\n      if (this.address === \"\") {\n        alert(\"address can't be ''\");\n        return\n      }\n\n      let val = uint256.bnToUint256(120000000000000000)\n      const transferCalldata = CallData.compile({\n        to: \"0x00b909cefa36ab6bc26f5887a867e46ef162238f0a171b1c2974b665afd4237f\",\n        value: val\n      })\n\n      // const ETHTokenAddress = \"0x049d36570d4e46f48e99674bd3fcc84644ddd6b96f7c741b1562b82f9e004dc7\"\n      // const STARKTokenAddress = \"0x04718f5a0fc34cc1af16a1cdee98ffb20c31f5cd61d6ab07201858f4287c938d\"\n      const DAITokenAddress = \"0x00da114221cb83fa859dbdb4c44beeaa0bb37c7537ad5ae66fe5e0efd20e6eb3\"\n\n      const invokeParams = {\n        calls: [\n          {\n            contract_address: DAITokenAddress,\n            entry_point: \"transfer\",\n            calldata: transferCalldata\n          }\n        ],\n      }\n\n      this.$emit(\"generateTransactionParams\", JSON.stringify(invokeParams))\n      let provider = new OKXStarknetProvider(window.provider)\n\n      let that = this\n      provider.sendTransaction(this.address, invokeParams, \"starknet:mainnet\").then(function(res){\n        console.log(\"starknet_sendTransaction result \", res)\n        that.$emit(\"generateTransactionResult\", res, \"starknet_sendTransaction\")\n      }).catch(function(error) {\n        if (error.code == 301) {\n          let msg = \"Wallet address is registering, please try again later!\"\n          alert(msg)\n          that.$emit(\"generateTransactionResult\", msg, \"starknet_sendTransaction\")\n        }else {\n          that.$emit(\"generateTransactionResult\", error, \"starknet_sendTransaction\")\n        }\n      });\n    },\n\n    getCurrentAddress() {\n      let provider = new OKXStarknetProvider(window.provider)\n      const address = provider.getAccount(\"starknet:mainnet\")?.address\n      return address\n    },\n\n    getPublicKey() {\n      let provider = new OKXStarknetProvider(window.provider)\n      const account = provider.getAccount(\"starknet:mainnet\")\n      console.log(\"获取到的account是：\")\n      console.log(account)\n      return \"05d8e5e9c1dd686246716c888159271d2f13986cb4acee46164e2c4e034629c0\"\n    }\n  },\n\n  data() {\n    const signData = {\n        \"domain\": {\n          \"chainId\": \"0x534e5f4d41494e\",\n          \"name\": \"STRKFarm\",\n          \"version\": \"1\"\n        },\n        \"message\": {\n          \"document\": \"app.strkfarm.xyz/tnc/v1\",\n          \"message\": \"Read and Agree T&C\"\n        },\n        \"primaryType\": \"Tnc\",\n        \"types\": {\n          \"StarkNetDomain\": [\n            {\n              \"name\": \"name\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"version\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"chainId\",\n              \"type\": \"felt\"\n            }\n          ],\n          \"Tnc\": [\n            {\n              \"name\": \"message\",\n              \"type\": \"felt\"\n            },\n            {\n              \"name\": \"document\",\n              \"type\": \"felt\"\n            }\n          ]\n        }\n    }\n\n    return {\n      signData\n    }\n  }\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"starknet_signMessage()\">signMessage</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 验签不成功的话，请尝试连接VPN\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"starknet_sendTransaction(true)\">\n        sendTransaction\n      </el-button>\n\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 发送0.12个DAI到0x00b9...4237f的地址\n        </li>\n        <li>\n          2. 请保证你的钱包有足够的DAI\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./StarknetTransactionPanel.vue?vue&type=template&id=082fda2b&scoped=true\"\nimport script from \"./StarknetTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./StarknetTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./StarknetTransactionPanel.vue?vue&type=style&index=0&id=082fda2b&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-082fda2b\"]])\n\nexport default __exports__","<script>\n\n\nimport {OKXTronProvider} from \"@okxconnect/universal-provider\";\nimport {TronWeb} from \"tronweb\";\n\nexport default {\n  name: \"TronTransactionPanel\",\n  methods: {\n\n    async tron_signMessage() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessage(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n\n      const verify = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), res, provider.getAccount(\"tron:mainnet\").address)\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" + res, \"tron_signMessage\")\n    },\n\n    async tron_signMessageV2() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessageV2(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", res);\n      console.log(\"tron_signMessageV2_base58Address\", base58Address)\n      console.log(\"tron_signMessageV2_address\", provider.getAccount(\"tron:mainnet\").address)\n      const verify = base58Address === provider.getAccount(\"tron:mainnet\").address\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" +  res, \"tron_signMessage\")\n    },\n\n    async tron_signTransaction(isOnlySign) {\n      let provider = new OKXTronProvider(window.provider)\n        let tronWeb = new TronWeb({\n          \"fullHost\": 'https://api.trongrid.io',\n          \"headers\": {},\n          \"privateKey\": ''\n        })\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const transaction = await tronWeb.transactionBuilder.sendTrx(\"TGBcVLMnVtvJzjPWZpPiYBgwwb7th1w3BF\", 1000, address);\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let res = await provider.signTransaction( transaction, \"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", res, \"tron_signTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async getContract() {\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41b4a428ab7092c2f1395f376ce297033b3bb446c1\"\n      \n      try {\n        const contract = await tronWeb.trx.getContract(contractAddress)\n        const abi = contract.abi.entrys;\n        console.log(\"获取到的合约：\")\n        console.log(abi)\n      } catch (error) {\n        console.log(\"Error getting contract ABI:\", error);\n      }\n    },\n    \n    async tron_signAndSendTransactionContract(isOnlySign) {\n      // this.getContract()\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41e95812d8d5b5412d2b9f3a4d5a87ca15c5c51f33\"\n      let provider = new OKXTronProvider(window.provider)\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const parameter = [\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n      ]\n      const ret = await tronWeb.transactionBuilder.triggerSmartContract(contractAddress, \"quote(uint256,uint256,uint256)\", {}, parameter, address);\n      console.log(\"=====>transaction: \")\n      console.log(ret);\n      this.$emit(\"generateTransactionParams\", ret.transaction)\n      if (isOnlySign) {\n        let tx = await provider.signTransaction( ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async tron_signAndSendTransactionApprove(isOnlySign) {\n      let contractAddress = \"41b4a428ab7092c2f1395f376ce297033b3bb446c1\"\n      let provider = new OKXTronProvider(window.provider)\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const parameter = [\n        {type: 'address', value: contractAddress},\n        {type: 'uint256', value: 1000},\n      ]\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      const ret = await tronWeb.transactionBuilder.triggerSmartContract(contractAddress, \"approve(address,uint256)\", {}, parameter, address);\n\n      let transaction = ret.transaction\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let tx = await provider.signTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n\n    }\n\n  }\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessage()\">tron_signMessage</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessageV2()\">tron_signMessageV2</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(true)\">\n        tron_signTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(true)\">\n        tron_signTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(true)\">\n        tron_signTransaction(Approve)\n      </el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(false)\">\n        tron_signAndSendTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(false)\">\n        tron_signAndSendTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(false)\">\n        tron_signAndSendTransaction(approve)\n      </el-button>\n    </el-col>\n\n\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./TronTransactionPanel.vue?vue&type=template&id=55a13ab0&scoped=true\"\nimport script from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./TronTransactionPanel.vue?vue&type=style&index=0&id=55a13ab0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-55a13ab0\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=204071b8&scoped=true\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=204071b8&scoped=true&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-204071b8\"]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport ElementPlus from 'element-plus'\nimport 'element-plus/dist/index.css'\nimport App from './App.vue'\n\nconst app = createApp(App)\n\napp.use(ElementPlus)\napp.mount('#app')","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? function(obj) { return Object.getPrototypeOf(obj); } : function(obj) { return obj.__proto__; };\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(function(key) { def[key] = function() { return value[key]; }; });\n\t}\n\tdef['default'] = function() { return value; };\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkokxconnectdemo\"] = self[\"webpackChunkokxconnectdemo\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(30649); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["require","Object","defineProperty","exports","value","AptosUtils","getTransaction","o","transaction","rawTransaction","payload","entryFunction","typeArgs","type_args","typeArguments","Array","forEach","typeTag","push","toString","realArguments","this","getTypeArguments","args","i","arguments","function","module_name","address","data","name","identifier","function_name","type","type_arguments","getArguments","array","j","length","y","values","subArray","dealArrayElements","e","Uint8Array","t","isArray","r","n","assign","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","next","rejected","result","done","then","apply","OKXAptosProvider","buffer_1","AptosUtils_1","core_1","constructor","provider","chainsSet","Set","getConnectedNamespace","defaultNetwork","network","requestDefaultChainWithNamespace","NameSpaceKeyAptos","currentChainId","getRealChainId","chainId","size","Error","_a","_b","_c","session","namespaces","chains","chain","add","getAccount","_d","_e","_f","_g","_h","_j","account","accounts","filter","startsWith","logDebug","accountArray","split","console","log","extra","publicKey","undefined","substring","signMessage","realChain","prefix","message","nonce","fullMessage","application","window","location","protocol","hostname","buffer","Buffer","from","hex","bufferToHex","injectParams","signedMessage","request","successData","signStr","slice","signature","error","signTransaction","tx","signAndSubmitTransaction","buf","OKXAptosProvider_1","enumerable","get","CONNECT_METHOD_BATCH_FETCHMSG","CONNECT_METHOD_FETCHMSG","CONNECT_METHOD_RECEIVE","CONNECT_METHOD_UNSUB","CONNECT_METHOD_SUB","CONNECT_METHOD_PUBLISH","CONNECT_METHOD_LOGIN","CONNECT_METHOD_PUSH","__createBinding","create","m","k","k2","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","__setModuleDefault","v","__importStar","ownKeys","getOwnPropertyNames","ar","prototype","hasOwnProperty","call","mod","OKXWalletConnector","constants_1","storageconstants_1","storage_1","utils_1","utils_2","eventemitter3_1","protocol_1","report_1","WS","resolveWebSocketImplementation","url","events","EventEmitter","state","ConnectorState","InitState","selectedUrlIndex","retryCount","timeOutLimit","checkWSUrl","heartbeatTimer","connectionTimeoutTimer","connectURLStorage","Storage","OKXCONNECTOR_CACHE_KEY","connecting","Connecting","onPayload","rsp","Date","now","emit","onClose","event","socket","code","onError","id","msg","onopen","onmessage","onclose","Connected","emitError","errorEvent","heartbeat","clearTimeout","OnError","readyState","WebSocket","OPEN","send","setTimeout","bind","tryRegistOpen","logError","registOpen","inRetry","toUTCString","URLSearchParams","startTimeOutTimer","hasBuiltInWebSocket","onerror","close","on","resetTimeOutTimer","OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE","FINISHED","checkMaxRetry","OKXCONNECTOR_WS_URL_LIST","connectionTryNext","nextUrl","getNextSelectUrl","CANCELED","pendingSocket","TIME_OUT","reportEvent","OKXReportType","LOG","cacheSuccessUrlSelect","saveContent","onVisibleChanged","document","visibilityState","once","err","OKXConnectError","OKX_CONNECT_ERROR_CODES","CONNECTION_ERROR","connect","removeEventListener","addEventListener","disconnect","Disconnected","currentStatus","addListener","decrypt","success","failed","listenPayloadHandler","removeListener","parsedEvent","safeJsonParse","params","rawMsg","failHandler","addPackageParse","callback","payloadHandler","param","listener","off","doLogin","safeJsonStringify","getMsgPayloadFromHistory","tmpMsg","jsonstr","onOpen","openHandler","ConnectionManager","connect_1","commands_1","jwtconstants_1","crypto_1","jwt_1","safejson_1","log_1","url_1","appname","connectStorage","OKXCONNECTOR_CACHE_KEY_DAPP","crypto","SessionCrypto","inTMA","isInTMA","reportLog","keyPairInfo","getCachedCryptoKeyPair","jwtKeyPair","getCachedJWTKeyPair","saveJWTKeyPair","connector","OKXCONNECTOR_WS_URL_1","packageId","connectedWalletPK","currentTopic","refreshPackageId","saveCryptoKeyPair","keyPair","cacheInfo","encryptStoreMsg","OKXCONNECTOR_CRYPTO_KEY","kp","getAndDecrypt","content","clearCache","strkeyPair","toHexString","secretKey","OKXCONNECTOR_JWT_KEY","strKeyPairInfo","hexToByteArray","generateKeyPair","isWalletPKReady","makeJWT","topic","signJWT","OKXCONNECTOR_JWT_SIDE","OKXCONNECTOR_JWT_TTL","parsePackage","input_1","input","ignoreACK","sendACK","getItem","OKXCONNECTOR_TOKEN_CACHE","inputObj","messageId","sendReceive","restoreConnect","getConnectInfo","generateTopic","info","channelId","clientId","stringifyKeypair","fromRestore","timeLog","getTime","lastConnectId","cachedSenderPublicKey","OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE","jwtToken","timeOne","timeF","sendFetchAndConsumeMessages","timeTh","catch","jsonrpc","CONNECT_JSONRPC_VER","method","token","replace","parsedMessage","fail","msgObj","trimStart","sendRaw","ttl","OKXCONNECTOR_MESSAGE_TTL","msg_1","encrypt","msgId_1","success_1","msgId","reason","sendConnectSessionInfo","fetchedMessages","hasMore","receivedMsgs","timeFive","cleanCache","saveSessionContent","key","OKXCONNECTOR_SESSION_PREFIX_KEY","jsonData","getSessionContent","jsonStr","object","getCurrentConnectionReady","OKXCONNECTOR_WS_URL_IDX_KEY","OKXCONNECTOR_WS_URL_3","OKXCONNECTOR_WS_URL_2","EVENT_EMITTER_MAX_LISTENERS","Engine","iconnector_1","ws_connector_1","connectionManager_1","sessionUtils_1","connector_1","wallet_info_1","appName","connectors","useConnector","connectionManager","addConnectionListener","isInject","getConnector","InjectConnector","registerConnector","WsConnector","setConnectionManager","hasWsConnector","universalConnect","sessionConfig","connectInfoAndUrl","JSON","stringify","universalRequest","item","connectInfo","requestId","openUniversalLink","openUniversalUrl","universalConnectRequest","protocolVer","Number","tonConnectSdkVersion","dAppInfo","dappInfo","requests","redirect","base64Encoded","encodeConnectParams","openOKXLink","getOKXLink","useMini","tmaReturnUrl","openMethod","OkxwalletInjectConnector","openWallet","connectRequest","openOKXTMAWalletlinkWithFallback","useShortLink","openOKXUniversalLink","openOKXDeeplinkWithFallback","isIOS","isIos","addOnConnectResultListener","response","connectResponse","buildNameSpacesByConnectResponse","UNKNOWN_ERROR","walletName","responses","wallet","tag","OKXWalletName","OKX_APP_WALLET","OKXMiniWalletName","OKX_TG_WALLET","OKXInjectWalletName","OKX_INJECT_WALLET","find","getTag","methodsResponse","connectRequestMethods","signResponse","setUseConnector","sendSession","connectResultListener","setOnConnectResultListener","engineConnectInfo","requestAnswer","clearData","addDisconnectListener","disconnecter","getTagByappName","setConnectConnector","setSessionConnectingListener","sessionConnectingListener","restoreconnect","sessionInfo","onConnectResult","restoreconnectFromTopic","namespaceKeys","connectManagerDisconnect","jsonResponse","WalletConnectionManager","walletConnectionManager_1","engine_1","__importDefault","MULTICODEC_ED25519_LENGTH","MULTICODEC_ED25519_HEADER","MULTICODEC_ED25519_BASE","MULTICODEC_ED25519_ENCODING","DID_METHOD","DID_PREFIX","DID_DELIMITER","KEY_PAIR_SEED_LENGTH","DATA_ENCODING","JSON_ENCODING","JWT_ENCODING","JWT_DELIMITER","JWT_IRIDIUM_TYP","JWT_IRIDIUM_ALG","JWTHeaderType","decodeJSON","encodeJSON","encodeIss","decodeIss","encodeSig","decodeSig","encodeData","decodeData","encodeJWT","decodeJWT","verifyJWT","ed25519","tweetnacl_1","stringUtils_1","default","sign","str","okxtoString","okxfromString","val","publicKeyStr","join","issuer","multicodec","bytes","encoded","header","jwt","sub_1","aud_1","ttl_1","keyPair_1","sub","aud","iat","Math","floor","alg","typ","iss","exp","act","detached","verify","OKXCONNECTOR_JWT_WALLET_SIDE","buildRequestAccountNameSpacesByConnectResponse","requestAccountNameSpaces","universalResponse","filterAccount","namespace","ton_addr","tonAddress","tonProof","ton_proof","addresses","methods","addressItem","addressArr","utils_3","crypto_js_1","subKey","beforeKey","localStorage","resolveLocalStorage","checkAndUpgradeCache","storeKey","cipherIV","cacheStr","cacheKey","cache","cacheObj","fromCacheKey","toCacheKey","setItem","removeItem","timestamp","saveItem","localKey","totalCacheStr","getCachedPBKDF2InfoKey","pwLen","saltLen","pw","iv","salt","OKXCONNECTOR_STORAGER_CRYPTO_SALT","randomBytes","OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD","OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV","ivBuffer","PBKDF2","iterations","storeInfo","AES","enc","Utf8","OKXCONNECTOR_STORAGE_CIPHER_METHOD","OKXCONNECTOR_TON_KEY","WalletConnectionManagerEvent","WalletConnectionManagerTopicInfoCacheKey","RECEIVE_REQUEST","walletConnectionConstants_1","communicateEvents","sessionCryptoInfoMap","Map","inLogin","isLogined","offset","topicId","isTopicPublicKeyExist","timestampStr","parseInternalMsg","internalMsg","internalObj","origin","originContent","base64decode","updateClientId","cid","lastCheck","getLastSixMd5Hash","dappPublicKey","syncCacheSessionInfo","topic_1","_k","_l","isInternalData","inner_message","inner_topic","messageObj","sessionInfoString","base64Content","inner_connection","toObject","decryptWallet","recovrySessionInfoFromCache","cacheMap","topicItem","cryptoItem","cryptoKeyPair","set","cacheSessionInfo","sync","duplicatedTopics","includes","delete","appendTopic","sessionPublicKey","subscribeTopics","confirmAppendingTopics","keys","getSessionPublicKey","getCurrentCachedTopicIdList","needPublicKey","useRaw","connectedDappPK","cryptoObject","encryptWallet","sendUnsubscribe","sendBatchFetchAndConsumeMessages","topicIdList","topics","withInternalData","finishCount","idx","AppwalletConnector","instance","super","walletNameKey","shortUniversalLink","appConnectEncodeParams","appDeepLink","getAppWalletDeepLink","isOS","openDeeplinkWithFallback","stackDeepLink","openLinkBlank","standardUniversalLink","TgwalletConnector","appwallet_connector_1","inject_connector_1","tgwallet_connector_1","okxwallet_inject_connector_1","SolProvider_1","AptosProvider_1","media_1","TONProvider_1","inject_1","sui_provider_1","disconnectListener","providerMap","enable","NameSpaceKeyEip155","Eip155Provider","NameSpaceKeySOL","SolProvider","AptosProvider","NameSpaceKeyTON","TONProvider","NameSpaceKeySui","SuiProvider","getInjectProvider","nameSpace","mapKey","entries","BAD_REQUEST_ERROR","okxwallet","requestAccounts","version","getVersion","platform","navigator","appVersion","maxProtocolVersion","responseItem","getAccountByRequestWallets","requiredNamespaces","optionalNamespaces","getRequestId","newRequest","onAck","injectProvider","USER_REJECTS_ERROR","errorResponse","CHAIN_NOT_SUPPORTED","_","allReady","every","namespaceKey","connectReady","toJSON","namespacesKey","connectWalletNameSpace","aptosChains","chainStr","aptosChain","replaceAptosChainName","allEqual","accountsItem","sessionAccounts","areEqual","sort","index","aptosAdd","needPop","walletInfo","accountResult","isDevice","walletInfoItem","connectWallet","requestWallets","allNameSpace","walletInfoFirst","itemResult","parseConnectResponse","cheeckRequire","requireItem","resultSel","resultItem","hasChainAdd","addItem","encodeTGParams","encodeTWAConnectURLParams","tgUrl","getTelegramWalletTWAUrl","pendingRequests","getDefaultReporter","beginReport","handleResponse","bindRequestForPromise","clear","nonceLength","sessionKeyPair","createKeypairFromString","createKeypair","box","createNonce","receiverPublicKey","encodedMessage","TextEncoder","encode","encrypted","concatInfo","concatUint8Arrays","hexResult","encodedResult","base64encode","senderPublicKey","messageByteArray","toUint8Array","internalMessage","splitToUint8Arrays","decrypted","open","TextDecoder","decode","__exportStar","p","hasOKXInjectedProvider","getWindowProviderNamespace","providerSearch","property","path","_provider","SuiMethods","TONMethods","AptosMethods","SOLANAMethods","Eip55Methods","InjectUtils_1","aptos","hash","METHOD_NOT_SUPPORTED","connectRequestWalletResponse","connectChain","selectedAddress","coinType","namespaceChainId","nameSpaceResponse","bs58_1","solana","bufferResult","injectResult","allResult","signAllTransactions","signAndSendResult","signAndSendTransaction","tonParams","resultMe","okxTonWallet","tonconnect","getChainId","tonResult","ton","tonItem","manifestUrl","itmes","items","restoreConnection","ethParams","typedDataJson","switchChainId","parseInt","resultSwitch","chainHex","currentChain","suiWallet","sui","checkRequireNameSpace","requireNameSpace","getSuiPublicKey","suiAccount","features","suiPublicKey","originalRarams","injectSignResult","signTransactionBlock","injectSendResult","signAndExecuteTransactionBlock","digest","injectPersonalResult","signPersonalMessage","TON_CHAINS","COSMOS_CHAINS","APTOS_CHAINS","SUI_CHAINS","SOLANA_CHAINS","BTC_CHAINS","MAINNET","FRACTAL","TESTNET","SONIC_TESTNET","COSMOS_MAINNET","IEngine","ISignClient","ISignClientEvents","IEngineEvents","client","creatOKXInjectWalletInfo","creatOKXMiniAppWalletInfo","creatOKXWalletInfo","getBigIntRpcId","formatJsonRpcRequest","isJsonRpcError","isJsonRpcResponse","parseConnectionError","isHttpUrl","formatJsonRpcError","json_rpc_1","isJsonRpcPayload","isJsonRpcRequest","isJsonRpcResult","payloadId","formatJsonRpcResult","isReservedErrorCode","getError","getErrorByCode","formatErrorMessage","isWsUrl","okx_connect_error_1","IncrementalRandomGenerator","bits","Uint16Array","Uint32Array","initialValue","getNextValue","uint8Generator","uint16Generator","date","BigInt","RESERVED_ERROR_CODES","STANDARD_ERROR_MAP","DEFAULT_ERROR","match","INTERNAL_ERROR","SERVER_ERROR","getUrlProtocol","matches","RegExp","matchRegexProtocol","regex","test","CONNECT_ITEM_ERROR_CODES","TONCHAIN","connect_wallet_1","connect_event_1","getTestTwaUrl","okxTesttwaUrl","getTestTgTwaUrl","okxTestTgtwaUrl","getBotNameAndAppName","urlObj","URL","pathnameParts","pathname","Boolean","botName","OKX_MINI_WALLET_NAME","OKX_APP_WALLET_NAME","tgwalletAppName","tgwalletName","standardDeeplink","downloadUrl","okxDeeplink","SERVER_ERROR_CODE_RANGE","INVALID_PARAMS","METHOD_NOT_FOUND","INVALID_REQUEST","PARSE_ERROR","getDefaultMessageByCode","setPrototypeOf","ALREADY_CONNECTED_ERROR","NOT_CONNECTED_ERROR","UNKNOWN_APP_ERROR","USER_REJECTS_ERROR_CAUSE_REGISTER","NameSpaceKeyStarknet","NameSpaceKeyTron","NameSpaceKeyCosmos","NameSpaceKeyBtc","misc_1","chains_1","callForSuccess","fn","options","attempts","delayMs","lastError","delay","timeout","signal","aborted","timeoutId","checkMetaData","versionCompare","isBrowser","isMobileUserAgent","openLink","toSafeBase64FromBase64","isValidObject","getAppWalletShortDeepLink","encodeTelegramUrlParameters","isTelegramUrl","openOKXDeeplink","getUniversalLink","logWarning","call_for_success_1","web_api_1","tma_api_1","request_1","debug","forceReport","defaultReporter","OKXReporter","packageJson","okxLogDebug","reduce","sendRecordContent","warn","action","content_1","mediaNotTouch","mediaTouch","maxWidth","media","mediaMin","mediaMax","mediaMinMax","device","getWindow","isTmaPlatform","width","innerWidth","tablet","mobile","isMobile","isTelegram","TelegramWebviewProxy","maxTouchPoints","px","pxMin","pxMax","OKXReportSide","versionStr","cross_fetch_1","localforage_1","reportApiList","reportCacheKey","reportUUIDKey","MAX_LIMIT_REPORTCOUNT","DEFAULT_HTTP_HEADERS","Accept","DEFAULT_HTTP_METHOD","DEFAULT_FETCH_OPTS","headers","PAGE_IN","PAGE_OUT","CLICK","DAPP","WALLET","fetchListWithTimeout","urls_1","args_1","urls","controller","AbortController","fetchPromise","timeoutPromise","abort","race","ok","status","currentSide","currentVersion","storage","createInstance","recordList","currentUUID","configVersionAndSide","side","recordCacheKey","reportPlatform","startErrorCatching","records","uuid","sendCachedRecords","cachedErrors","sendRecord","record","body","res","language","ua","userAgent","reportItem","lang","markRecordItem","sendList","map","allSettled","results","keepIndex","splice","markRecord","Report_WalletType_Key","Report_Proceed_QRCode_Click","Report_ChooseType_Download_Click","Report_ChooseType_ConnectWallet_Click","Report_Proceed_Retry_Click","Report_ChooseType_ConnectWallet_View","Report_Loading_ConnectWallet_View","Report_Proceed_QRCode_View","Report_Proceed_Proceed_View","dappMetaData","icon","JSONStringify","JSONParse","json","numbersBiggerThanMaxInt","serializedData","group","parse","isCustomFormatBigInt","alloc","allocUnsafe","basics_1","string","encoding","base","BASES","decoder","encoder","createCodec","ascii","bufNum","String","fromCharCode","charCodeAt","utf8","bases","base16","latin1","binary","inTg","isInTelegramBrowser","sendExpand","sendOpenTelegramLink","initParams","locationHash","urlParseHashParams","tmaPlatform","tgWebAppPlatform","Telegram","WebApp","webAppVersion","tgWebAppVersion","platforms","isTelegramWebview","TelegramWebview","postEvent","link","fallback","pathFull","search","isIframe","versionAtLeast","path_full","parent","eventType","eventData","external","notify","trustedTarget","postMessage","indexOf","_path","urlSafeDecode","qIndex","pathParam","substr","query_params","urlParseQueryString","urlencoded","decodeURIComponent","queryString","paramName","paramValue","queryStringParams","v1","v2","a","p1","p2","v1List","v2List","max","ver","removeUrlLastSlash","addPathToUrl","deeplinkUrl","useStandardUniversalLink","deeplinkEncodeUrl","encodeURIComponent","fullUrl","newWindow","href","deepLinkOpened","timeoutDuration","fallbackToDownloadPage","parameters","encodedParameters","connectRequestStr","utf8Array","btoa","connectParam","redirectStr","okxconnect","extraparams","fromtg","base64ContentStr","urlSafeBase64","twaDeepLink","openTelegramLink","RANDOM_LENGTH","hasLocalStorage","hashKey","generateRandomBytes32","tweetnacl_util_1","to_string_1","sha256_1","BASE16","hexString","byteArray","byte","buffer1","buffer2","mergedArray","subArray1","subArray2","encodeUint8Array","urlSafe","encodeBase64","decodeToUint8Array","decodeBase64","uint8Array","decodeUTF8","decodedUint8Array","encodeUTF8","scheme","global","self","randomBytes32","obj","getPrototypeOf","isIOSDevice","MSStream","isIPadOS","MD5","base64","newChain","getUserAgent","ua_parser_js_1","target","doFallback","fallbackTimeout","check","vendor","opera","getResult","osName","os","toLowerCase","deviceModel","model","browserName","browser","OKXSolanaProvider","web3_js_1","defaultChainMap","has","caip","realMessage","Transaction","VersionedTransaction","deserialize","pubkey","PublicKey","serializedMessage","serialize","requireAllSignatures","verifySignatures","getSignedTransaction","transactions","newTransactions","s","c","transactionStr","resultTx","OKXSolanaProvider_1","OKXSuiProvider","universal_provider_1","transactions_1","client_1","suiClient","rpcUrl","getFullnodeUrl","suiProvider","rpcMap","SuiClient","txBytes","txSerialize","generateTsBytesAndSerizlize","ret","transactionBlockBytes","errorData","signAndExecuteTransaction","confirmedLocalExecution","b64encoded","atob","messageBytes","resultTuple","senderAccounts","requestAccountsWithNamespace","transactionBlock","setSender","build","toBase64","OKXSuiProvider_1","OKXBtcProvider","_1","getAddressForChainId","ns","checkChainId","sendBitcoin","toAddress","satoshis","to","feeRate","txhash","checkParameters","signPsbt","psbtHex","signPsbts","psbtResults","psbtHexs","signAndPushPsbt","sendInscription","inscriptionId","extension","coinId","protocolId","atomicSuffix","ordinalsSuffix","endsWith","removeSuffix","scenario","txType","batchBean","coinAmount","nftId","suffix","unexistKeys","OKXCosmosProvider","algo","bech32Address","pubKey","hexToUint8Array","signArbitrary","signerAddress","signDoc","chain_id","account_number","sequence","fee","gas","amount","msgs","memo","signData","signAmino","signOptions","resData","signed","signDirect","bodyBytes","authInfoBytes","accountNumber","messageToBuffer","arr","output","x","padStart","arrayBuffer","byteValue","isNaN","OKXStarknetProvider","STARKNET_CHAIN_ID","getChain","typedData","sendTransaction","transactionData","transaction_hash","signMessageDeclareContractPayload","sendMessageExecuteTransactionDetail","calls","abis","transactionsDetail","executionRequest","OKXTonProvider","statusChangeSubscriptions","statusChangeErrorSubscriptions","tonWallet","errorsHandler","connected","tonNameSpace","walletStateInit","sessionWallet","tonDeviceInfo","connectItems","onStatusChange","requestParams","OKXTronProvider","TRON_CHAIN_ID","stringToHex","signMessageV2","signedTx","realSignTx","visible","txID","rawData","contract","raw_data","expiration","ref_block_bytes","fee_limit","ref_block_hash","raw_data_hex","OKXUniversalProvider","eip155_1","sui_1","namespaces_1","solana_1","btc_1","aptos_1","ton_1","cosmos_1","tron_1","packages_1","provider_1","starknet_1","init","opts","setGlobal","okxConnectUniversalinwindow","initialize","providerOpts","rpcProviders","requestParam","buildRequestParamFromRequest","getProvider","validateChain","keyArr","connectOpts","called","onRequestSent","disconnectAndEmit","cleanup","engine","aptosChainNameToGeneralId","replaceAptos","aptosNameSpace","realNS","replaceAptosInner","optionAptosNameSpace","realOptionNS","defaultChain","replaceAptosGeneralIdWithNetName","replaceSessionAptos","disconnectInner","connectAndSign","signRequest","updatedOpts","setNamespaces","onConnect","requestItem","signResponseList","okxConnectUniversalUIinwindow","creatNotSupportMethodItemReplay","syncAllAddresses","syncAddressAvailable","syncAllAddress","setDefaultChain","checkStorage","sessionInfoStr","getFromStore","createProviders","registerEventListeners","SignClient","providersToCreate","parseNamespaceKey","namespacesValue","currentNameSpace","opts1","solanaProvider","sonicProvider","svmProvider","optsTon","tonProvider","optsSui","optsBtc","btcProvider","fbProvider","aptosProvider","moveProvider","cosmosProvider","tronProvider","starknetProvider","PROVIDER_EVENTS","DEFAULT_CHAIN_CHANGED","caip2ChainId","onChainChanged","UPDATE_NAMESPACES","nameSpaces","nameSpacekey","persist","isChainNamespaceInSession","chainsArr","defaultNamespace","getDefaultChain","namespaceStr","caip2Chain","sessionProperties","showRequestModal","OKXUniversalProvider_1","OKXBtcProvider_1","OKXCosmosProvider_1","OKXTonProvider_1","OKXTronProvider_1","OKXStarknetProvider_1","ConnectMethodUtils_1","metaData","requestAccountItem","nameSpaceToConnectWalletNameSpace","SESSION_CONNECTING","connectMethodsToConnectWalletMethods","metadata","fillParamsToSession","connectMethodsResponseUpdate","openOKXWallet","allAddressStr","syncResoonseToRequire","connectSupportMethods","connectMethodsAdaptOldVersion","isRecord","notSupportError","errorItem","callBackParams","solAccount","account1","solAddress","fromAccountToAddress","encodeMessage","suiMessage","convertedArray","btcAccounts","account2","btcAccount","btcAddress","paramData","aptosAccount","account3","aptosAddress","aptosChainId","cosmosAccount","account_cosmos","cosmosAddress","cosmosData","cosmosBase64Encoded","methodItem","solanaSuccessData","suiMethod","requestMethod","suiMessageb64","aptosSignature","includeEip155","some","space","syncAddressHostAvailable","includeChain","paramsArr","firstParam","firstObj","aptosParams","currentURL","signChainId","applicationUrl","cosmosChain","responseAddressStr","allAddress","isEvm","deriveName","addr","ci","evmAddress","freeze","getAccountsChains","isCaipNamespace","mergeRpcMap","targetRpcMap","sourceRpcMap","mergeNamespaces","source","fixMobileBtcSession","btcNameSpace","addressType","compressedPublicKey","GENERIC_SUBPROVIDER_NAME","RPC_URL","STORAGE","CONTEXT","WC_VERSION","PROTOCOL","RELAY_URL","LOGGER","JsonRpcConnection_1","JsonRpcProvider_1","httpProviders","createHttpProviders","updateNamespace","getAccounts","setHttpProvider","http","parsedChainId","parsedRpc","getRpcUrl","httpProvider","createHttpProvider","getHttpProvider","rpc","JsonRpcProvider","JsonRpcConnection","getGlobal","BtcProvider","CosmosProvider","updateRequestParams","isDic","decimalNumber","selectedChainId","chainNum","paramsChainId","paramsChainString","adaptArray","addressObj","isEqual","chainAddress","messages","secondObj","hexChainId","getHexChainIdFromRequest","isChainApproved","configAddressAdaptInjectWallet","handleSwitchChain","addEthereumChain","resultData","rpcUrls","eip155","core_2","disableProviderPing","isAvailable","registering","register","parseError","types_1","IJSONRpcProvider","connection","hasRegisteredEventListeners","setConnection","context","requestStrict","_error","SolanaProvider","getPubkey","getWalletAddress","components","StarknetProvider","__rest","getOwnPropertySymbols","propertyIsEnumerable","validUntil","newParams","fromAddress","boc","TronProvider","IJSONRpcConnection","opt","globals","convertChainIdToNumber","parseChainId","mergeArrays","projectId","reference","CAIP_DELIMITER","b","okxGlobal","_createElementBlock","_hoisted_1","_createVNode","_component_el_container","_withCtx","_component_el_header","_cache","_createTextVNode","_component_el_main","_component_el_card","class","_createElementVNode","style","_component_el_row","_component_el_col","span","_toDisplayString","$options","_ctx","_component_el_checkbox","modelValue","withUI","$event","onChange","handleWithUI","universalToTG","handleUniversalToTG","_component_el_select","modals","placeholder","handleModalsSelect","multiple","_component_el_option","label","returnStrategy","handleReturnStrategySelect","_Fragment","_renderList","returnStrategies","strategy","_createBlock","_component_el_input","deeplink","handleReturnStrategyDeeplink","disabled","_createCommentVNode","handleLanguageSelect","locales","locale","theme","handleThemeSelect","THEME","LIGHT","DARK","selectedMethod","handleConnectMethodsSelect","connectMethods","tonProofValue","gutter","align","availableChains","checked","areChainsInit","isOptionalChecked","handleOptionChange","_component_el_button","onClick","initBtnClicked","connectInitStr","connectBtnClicked","connectStatusStr","syncAllAddressClick","syncAllAddressStr","disconnectAction","walletAddress","disconnectStatusStr","_Teleport","showModal","closeModal","_withModifiers","_component_qrcode_vue","qrValue","level","_component_el_tabs","activeTab","onTabClick","clickActiveTab","_component_el_tab_pane","eth_requestAccounts","eth_chainId","wallet_switchEthereumChain","wallet_addEthereumChain","personal_sign","eth_signTypedData_v4","eth_sendTransaction_transfer","eth_sendTransaction_approve","eth_sendTransaction_mint","wallet_watchAsset","ton_getAccount","ton_sendTransaction","sol_signMessage","sol_signTransaction","sol_signVersionedTransaction","sol_signAllTransactions","sol_signAllVersionedTransactions","sol_signAndSendTransaction","sol_signAndSendVersionedTransaction","_component_SuiPanel","onGenerateTransactionParams","sui_generateTransactionParams","_component_BTCPanel","btc_generateTransactionParams","_component_FractalPanel","fractal_generateTransactionParams","_component_TronTransactionPanel","tron_generateTransactionParams","onGenerateTransactionResult","tron_getTransactionResult","aptos_signMessage","aptos_signTransaction","aptos_signAndSubmitTransaction","cosmos_signArbitrary","cosmos_signAmino","cosmos_signDirect","wallet_testRpc","eth_sendTransaction_swap","move_signTransaction","move_signAndSubmitTransaction","_component_StarknetPanel","ref","starknet_generateTransactionParams","starknet_getTransactionResult","testBase64UrlSafe","xs","sm","handleRedirectSelect","canChainAddRedirectParam","redirectDeeplink","handleRedirectDeeplink","addRedirectParam","testTransaction","rows","testboc","$setup","sendBtnDisabled","testTransactionStr","btc_getAccount","btc_signMessage","sendAmount","clearable","btc_send","sendSatoshisAmount","btc_sendBitcoin","btc_signPsbt_up","btc_signAndPushPsbt_up","receiver","btc_sendInscription","props","setup","$emit","alert","autoFinalized","__exports__","fractal_getAccount","fractal_signMessage","fractal_send","fractal_sendBitcoin","fractal_signPsbt_up","fractal_signAndPushPsbt_up","fractal_sendInscription","sui_getAccount","sui_signMessage","sui_signPersonalMessage","sui_signTransaction2","sui_signAndExecuteTransaction","sui_requestRpc","sui_signTransaction_pre_execution","sui_signAndExecuteTransaction_pre_execution","recipientAddress","SuiTransaction","coin","splitCoins","transferObjects","showEffects","currentSuiTransaction","currentSuiMethod","starknet_signMessage","starknet_sendTransaction","getCurrentAddress","rpcProvider","RpcProvider","nodeUrl","pk","Account","that","verifyMessage","isValid","uint256","bnToUint256","transferCalldata","CallData","compile","DAITokenAddress","invokeParams","contract_address","entry_point","calldata","getPublicKey","tron_signMessage","tron_signMessageV2","tron_signTransaction","tron_signAndSendTransactionContract","tron_signAndSendTransactionApprove","tronWeb","TronWeb","trx","base58Address","verifyMessageV2","isOnlySign","transactionBuilder","sendTrx","getContract","contractAddress","abi","entrys","parameter","triggerSmartContract","verifyADR36Amino","fromBech32","VConsole","allChains","chainsThatCanAddRedirectParam","optionChains","selectedModals","selectedReturnStrategy","selectedDeepLink","selectedLanguage","selectedTheme","TronTransactionPanel","QrcodeVue","BTCPanel","FractalPanel","SuiPanel","StarknetPanel","testTopic","testPublicKey","testProofPayload","pendingDeepLink","logList","localPubKey","localSecKey","selectedChain","ProofPayloadVerify","showVerifyRow","selectedMethodData","isChecked","reload","starknetPanelTypedData","computed","selectedChains","initChains","newChains","updatedChains","tab","tabName","initCall","OKXUniversalConnectUI","actionsConfiguration","uiPreferences","onModalStateChange","uri","isPC","testTonSdk","blockExplorerUrls","chainName","nativeCurrency","symbol","decimals","requestEVMAccountWithSession","evmNameSpace","dataETH","dataPolygon","types","EIP712Domain","Person","Mail","primaryType","domain","verifyingContract","contents","maxPriorityFeePerGas","maxFeePerGas","gasPrice","gasLimit","image","tonUniversalLog","sendTransactionAlert","fetch","confirm","sendData","adapter","SuiAdapter","suiResult","sui_verifySignature","btcAdapter","btcResult","currentBtcMethod","currentBtcTransaction","hexToBase64","bs64Str","fractalResult","currentFractalMethod","currentFractalTransaction","hexStr","blob","Blob","reader","FileReader","onload","base64Data","readAsDataURL","datatest","firstStr","showUrl","hasEip155","hasSolana","hasSui","hasBtc","hasAptos","hasTon","hasCosmos","hasTron","nameSpacesChains","optSpaceChains","solanaChains","hasStarknet","suiChains","btcChains","connectMethod","connectData","requireData","cosmos","tron","starknet","btc","optData","eip155Chains","tonChains","signMethods","getCurrentSelectedMethodData","openModalAndSign","openModal","methodList","suiData","currentMethod","accountAddress","userAgentInfo","Agents","flag","isSafariOrChrome","result1","nacl","toBytes","config","AptosConfig","Network","Aptos","simple","sender","functionArguments","Connection","getSolConnect","blockhash","getLatestBlockhash","versionedTransactionMessage","TransactionMessage","payerKey","recentBlockhash","instructions","SystemProgram","transfer","fromPubkey","toPubkey","lamports","compileToV0Message","feePayer","cosmos_verifySignArbitrary","pub_key","signer","prefixStr","signatureBuffer","uint8Signature","pubKeyValueBuffer","pubKeyUint8Array","uiOptions","eth_verifyMessage","ethAddress","originalMessage","recoveredAddress","ethers","list","verifyList","requestItme","ethMessage","solanaMessage","verifySol","aptosMessage","aptosPublicKey","cosmosMessage","tronMessage","StarknetRpcProvider","StarknetAccount","signatureResult","resultObj","verifyPersonalMessageSignature","toSuiAddress","newTransaction","created","mounted","scriptTag","createElement","src","getElementsByTagName","appendChild","title","$refs","starknetPanelRef","toRaw","render","app","createApp","App","use","ElementPlus","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","loaded","__webpack_modules__","amdO","deferred","O","chunkIds","priority","notFulfilled","Infinity","getter","d","leafPrototypes","getProto","__proto__","mode","def","current","definition","g","globalThis","Function","prop","Symbol","toStringTag","nmd","paths","children","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}