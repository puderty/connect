{"version":3,"file":"js/app.ec85aa4b.js","mappings":"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","sources":["webpack://okxconnectdemo/../packages/core/src/connect/commands.js","webpack://okxconnectdemo/../packages/core/src/connect/connect.js","webpack://okxconnectdemo/../packages/core/src/connect/connectionManager.js","webpack://okxconnectdemo/../packages/core/src/connect/constants.js","webpack://okxconnectdemo/../packages/core/src/connect/engine.js","webpack://okxconnectdemo/../packages/core/src/connect/index.js","webpack://okxconnectdemo/../packages/core/src/connect/jwt.js","webpack://okxconnectdemo/../packages/core/src/connect/jwtconstants.js","webpack://okxconnectdemo/../packages/core/src/connect/sessionUtils.js","webpack://okxconnectdemo/../packages/core/src/connect/storage.js","webpack://okxconnectdemo/../packages/core/src/connect/storageconstants.js","webpack://okxconnectdemo/../packages/core/src/connect/walletConnectionConstants.js","webpack://okxconnectdemo/../packages/core/src/connect/walletConnectionManager.js","webpack://okxconnectdemo/../packages/core/src/connector/appwallet-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/iconnector.js","webpack://okxconnectdemo/../packages/core/src/connector/index.js","webpack://okxconnectdemo/../packages/core/src/connector/inject-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/okxwallet-inject-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/tgwallet-connector.js","webpack://okxconnectdemo/../packages/core/src/connector/ws-connector.js","webpack://okxconnectdemo/../packages/core/src/crypto/crypto.js","webpack://okxconnectdemo/../packages/core/src/index.js","webpack://okxconnectdemo/../packages/core/src/inject/InjectUtils.js","webpack://okxconnectdemo/../packages/core/src/inject/index.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/AptosPrivider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/SolProvider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/eip155Provider.js","webpack://okxconnectdemo/../packages/core/src/inject/provider/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/chains.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/engine.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/json-rpc.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/connect-event.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/connect-wallet.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/ton/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/connect/wallet-info.js","webpack://okxconnectdemo/../packages/core/src/protocol/constants.js","webpack://okxconnectdemo/../packages/core/src/protocol/error/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/error/okx-connect.error.js","webpack://okxconnectdemo/../packages/core/src/protocol/index.js","webpack://okxconnectdemo/../packages/core/src/protocol/misc.js","webpack://okxconnectdemo/../packages/core/src/utils/call-for-success.js","webpack://okxconnectdemo/../packages/core/src/utils/index.js","webpack://okxconnectdemo/../packages/core/src/utils/log.js","webpack://okxconnectdemo/../packages/core/src/utils/report.js","webpack://okxconnectdemo/../packages/core/src/utils/reportconstants.js","webpack://okxconnectdemo/../packages/core/src/utils/request.js","webpack://okxconnectdemo/../packages/core/src/utils/safejson.js","webpack://okxconnectdemo/../packages/core/src/utils/stringUtils.js","webpack://okxconnectdemo/../packages/core/src/utils/tma-api.js","webpack://okxconnectdemo/../packages/core/src/utils/url.js","webpack://okxconnectdemo/../packages/core/src/utils/utils.js","webpack://okxconnectdemo/../packages/core/src/utils/web-api.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXBtcProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXCosmosProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXTonProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXTronProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/OKXUniversalProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/sign-client/client.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/ConnectMethodUtils.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/packages/utils/namespaces.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/events.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/constants/values.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/aptos.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/btc.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/cosmos.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/eip155.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcConnection.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/rpc/JsonRpcProvider.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/solana.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/sui.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/ton.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/providers/tron.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/misc.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/types/providers.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/globals.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/index.js","webpack://okxconnectdemo/../packages/universal-provider/src/provider/utils/misc.js","webpack://okxconnectdemo/./src/App.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue","webpack://okxconnectdemo/./src/components/BtcTransactionPanel.vue?1b44","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue","webpack://okxconnectdemo/./src/components/FractalTransactionPanel.vue?e4fb","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue","webpack://okxconnectdemo/./src/components/SuiTransactionPanel.vue?aa83","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue","webpack://okxconnectdemo/./src/components/TronTransactionPanel.vue?089a","webpack://okxconnectdemo/./src/App.vue?7ccd","webpack://okxconnectdemo/./src/main.js","webpack://okxconnectdemo/webpack/bootstrap","webpack://okxconnectdemo/webpack/runtime/amd options","webpack://okxconnectdemo/webpack/runtime/chunk loaded","webpack://okxconnectdemo/webpack/runtime/compat get default export","webpack://okxconnectdemo/webpack/runtime/define property getters","webpack://okxconnectdemo/webpack/runtime/global","webpack://okxconnectdemo/webpack/runtime/hasOwnProperty shorthand","webpack://okxconnectdemo/webpack/runtime/make namespace object","webpack://okxconnectdemo/webpack/runtime/node module decorator","webpack://okxconnectdemo/webpack/runtime/jsonp chunk loading","webpack://okxconnectdemo/webpack/startup"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_METHOD_BATCH_FETCHMSG = exports.CONNECT_METHOD_FETCHMSG = exports.CONNECT_METHOD_RECEIVE = exports.CONNECT_METHOD_UNSUB = exports.CONNECT_METHOD_SUB = exports.CONNECT_METHOD_PUBLISH = exports.CONNECT_METHOD_LOGIN = exports.CONNECT_METHOD_PUSH = void 0;\n// --------------- ws methods -------------\nexports.CONNECT_METHOD_PUSH = \"push\";\nexports.CONNECT_METHOD_LOGIN = \"login\";\nexports.CONNECT_METHOD_PUBLISH = \"publish\";\nexports.CONNECT_METHOD_SUB = \"subscribe\";\nexports.CONNECT_METHOD_UNSUB = \"unsubscribe\";\nexports.CONNECT_METHOD_RECEIVE = \"receive\";\nexports.CONNECT_METHOD_FETCHMSG = \"fetchMessages\";\nexports.CONNECT_METHOD_BATCH_FETCHMSG = \"batchFetchMessages\";\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXWalletConnector = void 0;\nconst constants_1 = require(\"./constants\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils\");\nconst utils_2 = require(\"../utils/utils\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst log = __importStar(require(\"../utils/log\"));\nconst protocol_1 = require(\"../protocol\");\nconst WS = (0, utils_2.resolveWebSocketImplementation)();\nclass OKXWalletConnector {\n    constructor(url) {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.state = constants_1.ConnectorState.InitState;\n        this.selectedUrlIndex = 0;\n        // reconnect\n        this.retryCount = 0;\n        // default timeout limit: 8 sec\n        this.timeOutLimit = 8000;\n        if (!(0, utils_2.checkWSUrl)(url)) {\n            throw new Error(`CONNECTOR: invalid url ${url}`);\n        }\n        this.url = url;\n        this.heartbeatTimer = null;\n        this.connectionTimeoutTimer = null;\n        this.connectURLStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY + storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n    }\n    get connecting() {\n        return this.state == constants_1.ConnectorState.Connecting;\n    }\n    // ------------------------------------------------------\n    onPayload(e) {\n        if (typeof e.data === \"undefined\")\n            return;\n        log.logDebug('get received data');\n        log.logDebug(e);\n        if (typeof e.data === \"string\") {\n            let rsp = e.data;\n            if (rsp === \"pong\") {\n                log.logDebug(`CONNECT: receive pong ${Date.now().toString()}`);\n                return;\n            }\n        }\n        this.events.emit(\"payload\", e.data);\n    }\n    onClose(event) {\n        var _a;\n        log.logDebug('socket get closed: ', (_a = this.socket) === null || _a === void 0 ? void 0 : _a.url, event.code);\n        this.socket = undefined;\n        this.events.emit(\"close\", event);\n    }\n    onError(id, e) {\n        const payload = { id: id, msg: e.toString() };\n        this.events.emit(\"payload\", payload);\n    }\n    onopen(socket) {\n        socket.onmessage = (event) => this.onPayload(event);\n        socket.onclose = (event) => this.onClose(event);\n        this.socket = socket;\n        this.state = constants_1.ConnectorState.Connected;\n        this.events.emit(\"open\");\n    }\n    // ------------------------------------------------------\n    emitError(errorEvent) {\n        this.events.emit(\"fail\", errorEvent);\n    }\n    // ------------------------------------------------------\n    heartbeat() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.heartbeatTimer) {\n                clearTimeout(this.heartbeatTimer);\n            }\n            if (this.state != constants_1.ConnectorState.Connected && this.state != constants_1.ConnectorState.OnError) {\n                log.logDebug('heart beat close');\n                return;\n            }\n            if (!this.socket) {\n                log.logDebug('socket not exist');\n                if (this.state == constants_1.ConnectorState.Connected || this.state == constants_1.ConnectorState.OnError) {\n                    log.logDebug('socket reconnect by heartbeat');\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                        this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n                    }\n                }\n                return;\n            }\n            if (this.socket.readyState !== WebSocket.OPEN) {\n                log.logDebug('socket not ready');\n                if (this.state == constants_1.ConnectorState.Connected || this.state == constants_1.ConnectorState.OnError) {\n                    log.logDebug('socket reconnect by heartbeat with state', this.state, this.socket.readyState);\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                        this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n                    }\n                }\n                return;\n            }\n            log.logDebug(`send ping heart beat: ${Date.now().toString()}, ${this.socket}`);\n            this.socket.send(\"ping\");\n            this.heartbeatTimer = setTimeout(this.heartbeat.bind(this), 5000);\n        });\n    }\n    registOpen(url = this.url, inRetry = false) {\n        if (!(0, utils_2.checkWSUrl)(url)) {\n            throw new Error(`CONNECTOR: invalid url ${url}`);\n        }\n        this.url = url;\n        if (!inRetry) {\n            log.logDebug('Connection connect:', this.url, new Date().toUTCString());\n        }\n        this.state = constants_1.ConnectorState.Connecting;\n        const origin = new URLSearchParams(url).get(\"origin\");\n        return new Promise((resolve, reject) => {\n            const socket = new WS(url, []);\n            log.logDebug('Connection connect Begin:', this.url, new Date().toUTCString());\n            this.startTimeOutTimer(socket);\n            if ((0, utils_2.hasBuiltInWebSocket)()) {\n                log.logDebug('Add socket error handler');\n                socket.onerror = () => {\n                    reject(new Error('socket error'));\n                    socket.close();\n                };\n            }\n            else {\n                log.logDebug('Add socket error handler');\n                socket.on(\"error\", () => {\n                    reject(new Error('socket error'));\n                    socket.close();\n                });\n            }\n            socket.onopen = () => {\n                log.logDebug('socket opened');\n                this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.FINISHED);\n                this.onopen(socket);\n                this.heartbeat();\n                resolve(socket);\n            };\n        });\n    }\n    checkMaxRetry() {\n        log.logDebug('current retry count:', this.retryCount, 'of', constants_1.OKXCONNECTOR_WS_URL_LIST.length);\n        return this.retryCount > constants_1.OKXCONNECTOR_WS_URL_LIST.length;\n    }\n    connectionTryNext() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.checkMaxRetry()) {\n                //TODO: mark descent\n                this.retryCount += 1;\n                let nextUrl = this.getNextSelectUrl();\n                log.logDebug('Connection retry:', nextUrl, new Date().toUTCString());\n                return this.registOpen(nextUrl, true);\n            }\n            else {\n                log.logDebug('Max Connection retry ', this.retryCount, new Date().toUTCString());\n            }\n        });\n    }\n    startTimeOutTimer(socket) {\n        if (this.connectionTimeoutTimer) {\n            this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.CANCELED);\n        }\n        this.pendingSocket = socket;\n        this.connectionTimeoutTimer = setTimeout(() => {\n            if (this.pendingSocket) {\n                this.resetTimeOutTimer(constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.TIME_OUT);\n            }\n        }, this.timeOutLimit);\n    }\n    resetTimeOutTimer(code) {\n        var _a;\n        // 1. cancel connecting pending sockets\n        if (code != constants_1.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE.FINISHED) {\n            (_a = this.pendingSocket) === null || _a === void 0 ? void 0 : _a.close(code);\n        }\n        this.pendingSocket = undefined;\n        // 2. remove timer\n        clearTimeout(this.connectionTimeoutTimer);\n    }\n    cacheSuccessUrlSelect() {\n        this.connectURLStorage.saveContent(this.selectedUrlIndex.toString(), storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n    }\n    // private getSuccessUrlSelect(): string {\n    //     let selectIndex = this.connectURLStorage.getItem(OKXCONNECTOR_CACHE_KEY)?.content\n    //     let index = 0\n    //     if (selectIndex) {\n    //         index = Number(selectIndex)\n    //     }\n    //     this.selectedUrlIndex = index\n    //     return OKXCONNECTOR_WS_URL_LIST[index]\n    // }\n    getNextSelectUrl() {\n        this.selectedUrlIndex += 1;\n        this.selectedUrlIndex = this.selectedUrlIndex % constants_1.OKXCONNECTOR_WS_URL_LIST.length;\n        return constants_1.OKXCONNECTOR_WS_URL_LIST[this.selectedUrlIndex];\n    }\n    // ------------------------------------------------------\n    onVisibleChanged() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (document.visibilityState === 'visible') {\n                // check and restore\n                log.logDebug(`get changed ${this.state}, ${this.socket}`);\n                if (this.state == constants_1.ConnectorState.Connected && typeof this.socket === \"undefined\") {\n                    log.logDebug('CONNECTION need reopen');\n                    try {\n                        yield this.tryRegistOpen();\n                    }\n                    catch (e) {\n                        log.logError('regist open failed');\n                    }\n                    return;\n                }\n            }\n        });\n    }\n    tryRegistOpen() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            if (this.connecting) {\n                log.logDebug('tryRegistOpen => connecting state');\n                return new Promise((resolve, reject) => {\n                    this.events.once('fail', (e) => {\n                        log.logDebug('tryRegistOpen => connecting fail listener', e);\n                        return reject(e);\n                    });\n                    this.events.once(\"open\", () => {\n                        if (typeof this.socket == \"undefined\") {\n                            return reject(new Error(\"Connect lost\"));\n                        }\n                        return resolve(this.socket);\n                    });\n                });\n            }\n            log.logDebug('tryRegistOpen => try registOpen until retry limit is hit');\n            let inRetry = false;\n            while (!this.checkMaxRetry() && !this.socket) {\n                try {\n                    log.logDebug('tryRegistOpen => call registOpen, try count:', this.retryCount, inRetry);\n                    yield this.registOpen(url, inRetry);\n                }\n                catch (err) {\n                    log.logDebug('tryRegistOpen => registOpen failed', err);\n                    this.retryCount += 1;\n                    url = this.getNextSelectUrl();\n                    inRetry = true;\n                }\n            }\n            log.logDebug('tryRegistOpen => exit while loop', this.retryCount, this.socket);\n            if (!this.socket && this.checkMaxRetry()) {\n                log.logDebug('tryRegistOpen => failed to open a socket', this.retryCount, this.socket);\n                this.retryCount = 0;\n                this.state = constants_1.ConnectorState.OnError;\n                this.emitError(new Error('tryRegistOpen failed'));\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CONNECTION_ERROR, \"Failed to connect\");\n            }\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this.tryRegistOpen();\n                // listener for reconnect\n                document.removeEventListener('visibilitychange', this.onVisibleChanged.bind(this));\n                document.addEventListener('visibilitychange', this.onVisibleChanged.bind(this));\n            }\n            catch (e) {\n                log.logDebug('connect => failed to connect', e);\n                throw e;\n            }\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.state = constants_1.ConnectorState.Disconnected;\n            return new Promise((resolve, reject) => {\n                if (typeof this.socket === \"undefined\") {\n                    // reject(new Error(\"CONNECTION closed\"))\n                    resolve();\n                    return;\n                }\n                this.socket.onclose = (event) => {\n                    this.onClose(event);\n                    resolve();\n                };\n                this.socket.close();\n                if (this.heartbeatTimer) {\n                    clearTimeout(this.heartbeatTimer);\n                }\n            });\n        });\n    }\n    currentStatus() {\n        return {\n            state: this.state,\n            url: this.url\n        };\n    }\n    // event will be jsonstr\n    /// @params Promise\n    /// @params success/failed callback\n    addListener(event, decrypt, success, failed) {\n        if (this.listenPayloadHandler) {\n            this.events.removeListener(\"payload\", this.listenPayloadHandler);\n        }\n        this.listenPayloadHandler = (e) => {\n            var _a;\n            log.logDebug(`<<< get payload ${e}`);\n            let parsedEvent = (0, utils_1.safeJsonParse)(e);\n            // parse the data to chose success or failed\n            if (parsedEvent.params && parsedEvent.params.data) {\n                let rawMsg = (_a = parsedEvent.params.data) === null || _a === void 0 ? void 0 : _a.message;\n                if (rawMsg) {\n                    try {\n                        let msg = decrypt(rawMsg);\n                        if (msg === undefined) {\n                            log.logDebug(`CONNECT: decrypt undefined`);\n                            failed(event, 'Decrypt undefined');\n                        }\n                        else {\n                            success(event, msg);\n                        }\n                    }\n                    catch (e) {\n                        log.logDebug(`CONNECT: decrypt failed: ${e}`);\n                        failed(event, e.message);\n                    }\n                }\n            }\n        };\n        this.events.on(\"payload\", this.listenPayloadHandler);\n        if (this.failHandler) {\n            this.events.removeListener(\"fail\", this.failHandler);\n        }\n        this.failHandler = (e) => {\n            if (e) {\n                log.logDebug(`CONNECT failed: ${e}`);\n                failed(event, e.message);\n            }\n            else {\n                failed(event, \"Unkonow error\");\n            }\n        };\n        this.events.on(\"fail\", this.failHandler);\n    }\n    addPackageParse(callback) {\n        if (this.payloadHandler) {\n            this.events.removeListener(\"payload\", this.payloadHandler);\n        }\n        this.payloadHandler = (e) => __awaiter(this, void 0, void 0, function* () {\n            // parse the data to chose success or failed\n            log.logDebug(`CONNECTION @[${new Date().toUTCString()}] <<<< received e:${e}`);\n            let param = (0, utils_1.safeJsonParse)(e);\n            yield callback(param);\n        });\n        this.events.on(\"payload\", this.payloadHandler);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    send(doLogin, payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (typeof this.socket === \"undefined\") {\n                    log.logDebug(`>>> send payload undefined ${payload}`);\n                    // this.socket = await this.registOpen();\n                    yield doLogin();\n                }\n                log.logDebug(`CONNECTION @[${new Date().toUTCString()}]>>> send payload ${(0, utils_1.safeJsonStringify)(payload)}`);\n                if (this.socket) {\n                    this.socket.send((0, utils_1.safeJsonStringify)(payload));\n                }\n            }\n            catch (e) {\n                this.onError(payload.id, e);\n            }\n        });\n    }\n    getMsgPayloadFromHistory(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof msg === \"undefined\")\n                return;\n            let tmpMsg = {\n                params: {\n                    data: msg\n                }\n            };\n            let jsonstr = (0, utils_1.safeJsonStringify)(msg);\n            log.logDebug('get received data from history');\n            log.logDebug(jsonstr);\n            jsonstr = (0, utils_1.safeJsonStringify)(tmpMsg);\n            this.events.emit(\"payload\", jsonstr);\n        });\n    }\n    onOpen(callback) {\n        if (this.openHandler) {\n            this.events.removeListener(\"open\", this.openHandler);\n        }\n        this.openHandler = () => __awaiter(this, void 0, void 0, function* () {\n            log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> ws opened: `);\n            yield callback();\n        });\n        this.events.on(\"open\", this.openHandler);\n        this.cacheSuccessUrlSelect();\n    }\n}\nexports.OKXWalletConnector = OKXWalletConnector;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionManager = void 0;\nconst connect_1 = require(\"./connect\");\nconst commands_1 = require(\"./commands\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst jwtconstants_1 = require(\"./jwtconstants\");\nconst constants_1 = require(\"./constants\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils/utils\");\nconst crypto_1 = require(\"../crypto/crypto\");\nconst jwt_1 = require(\"./jwt\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst report_1 = require(\"../utils/report\");\nconst url_1 = require(\"../utils/url\");\nclass ConnectionManager {\n    constructor(appname = undefined) {\n        this.events = new eventemitter3_1.EventEmitter();\n        // local storage\n        this.connectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY_DAPP + appname, storageconstants_1.OKXCONNECTOR_CACHE_KEY_DAPP);\n        this.crypto = new crypto_1.SessionCrypto();\n        let inTMA = (0, url_1.isInTMA)();\n        (0, log_1.logDebug)('do init:', inTMA);\n        log.reportLog('connection manager do init');\n        if (inTMA) {\n            // recovery from cache\n            const keyPairInfo = this.getCachedCryptoKeyPair();\n            (0, log_1.logDebug)('use same pk:', keyPairInfo);\n            this.crypto = new crypto_1.SessionCrypto(keyPairInfo);\n        }\n        this.jwtKeyPair = this.getCachedJWTKeyPair();\n        this.saveJWTKeyPair(this.jwtKeyPair);\n        // wss connection\n        this.connector = new connect_1.OKXWalletConnector(constants_1.OKXCONNECTOR_WS_URL_1);\n        this.packageId = Date.now();\n        // connection state\n        this.connectedWalletPK = '';\n        this.currentTopic = '';\n        log.logDebug(`this.connectedWalletPK  constructor   ${this.connectedWalletPK}`);\n    }\n    refreshPackageId() {\n        this.packageId = Date.now();\n    }\n    saveCryptoKeyPair(keyPair) {\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(keyPair);\n        // encrypt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_CRYPTO_KEY);\n    }\n    getCachedCryptoKeyPair() {\n        // decrypt kp\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_CRYPTO_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            log.logDebug('get cached crypto key:');\n            log.logDebug(content);\n            let keyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            return keyPairInfo;\n        }\n        else {\n            this.connectStorage.clearCache();\n        }\n        return null;\n    }\n    saveJWTKeyPair(keyPair) {\n        var strkeyPair = {\n            publicKey: (0, utils_1.toHexString)(keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(keyPair.secretKey)\n        };\n        log.logDebug('save jwt kp');\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(strkeyPair);\n        log.logDebug(cacheInfo);\n        // encrypt jwt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_JWT_KEY);\n    }\n    getCachedJWTKeyPair() {\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            // TODO: decrypt jwt kp\n            log.logDebug('get cached jwt kp:');\n            log.logDebug(content);\n            let strKeyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            log.logDebug('save jwt kp');\n            log.logDebug(strKeyPairInfo);\n            var keyPair = {\n                publicKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.publicKey),\n                secretKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.secretKey)\n            };\n            return keyPair;\n        }\n        else {\n            return (0, jwt_1.generateKeyPair)();\n        }\n    }\n    isWalletPKReady() {\n        log.logDebug(`isWalletPKReady  ===> ${this.connectedWalletPK}`);\n        return this.connectedWalletPK.length > 0;\n    }\n    makeJWT(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, jwt_1.signJWT)(topic, jwtconstants_1.OKXCONNECTOR_JWT_SIDE, jwtconstants_1.OKXCONNECTOR_JWT_TTL, // 24h\n            this.jwtKeyPair);\n        });\n    }\n    parsePackage(input_1) {\n        return __awaiter(this, arguments, void 0, function* (input, ignoreACK = false) {\n            var _a, _b, _c, _d, _e;\n            this.events.emit(input.id, input);\n            // send back ACK\n            if (!ignoreACK) {\n                yield this.sendACK(input.id, true);\n                let topic = (_a = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE)) === null || _a === void 0 ? void 0 : _a.content;\n                if (topic) {\n                    let inputObj = input;\n                    if ((_c = (_b = inputObj.params) === null || _b === void 0 ? void 0 : _b.data) === null || _c === void 0 ? void 0 : _c.messageId) {\n                        this.refreshPackageId();\n                        yield this.sendReceive(this.packageId.toString(), (_e = (_d = inputObj.params) === null || _d === void 0 ? void 0 : _d.data) === null || _e === void 0 ? void 0 : _e.messageId, topic);\n                    }\n                }\n            }\n        });\n    }\n    restoreConnect(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.reportLog('connection manager restore connection');\n            log.logDebug(`connectionManager  restoreConenct   ${topic}`);\n            if ((typeof topic !== 'string') || topic.length === 0) {\n                throw new Error('CONNECTION: invalid topic');\n            }\n            log.logDebug(`connectionManager  restoreConenct   disconnect`);\n            yield this.disconnect(true);\n            this.connectStorage.saveContent(topic, storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`connectionManager  restoreConenct   conect`);\n            yield this.connect(true);\n        });\n    }\n    getConnectInfo() {\n        var topic = (0, utils_1.generateTopic)();\n        log.logDebug(`generate topic token: ${topic}`);\n        log.reportLog('connection manager generate connection info');\n        this.currentTopic = topic;\n        const info = {\n            channelId: topic,\n            clientId: this.crypto.stringifyKeypair().publicKey,\n        };\n        return info;\n    }\n    connect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            this.timeLog = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---enter->\", this.timeLog);\n            log.reportLog('connection manager begin connect');\n            let lastConnectId = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            //1. generate topic & jwt\n            var topic = this.currentTopic;\n            log.logDebug(`generate topic token: ${topic}`);\n            // crypto keypair\n            if (fromRestore) {\n                if (typeof lastConnectId !== 'undefined' && lastConnectId !== null) {\n                    log.logDebug(`read last connect id: ${lastConnectId}`);\n                    topic = lastConnectId.content;\n                }\n                var cachedSenderPublicKey = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                if (cachedSenderPublicKey) {\n                    this.connectedWalletPK = cachedSenderPublicKey.content;\n                    (0, log_1.logDebug)(`connectionManager connect() this.connectedWalletPK : ${this.connectedWalletPK}`);\n                }\n                log.reportLog('connection manager do restore connection');\n            }\n            if (fromRestore) {\n                // recovery from cache\n                const keyPairInfo = this.getCachedCryptoKeyPair();\n                if (keyPairInfo) {\n                    this.crypto = new crypto_1.SessionCrypto(keyPairInfo);\n                }\n            }\n            log.logDebug(`use crypto client id: ${this.crypto.stringifyKeypair().publicKey}`);\n            // cache topic\n            this.connectStorage.saveContent(topic, storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            var jwtToken = yield this.makeJWT(topic);\n            log.logDebug(`generate jwt token: ${jwtToken}`);\n            this.connectStorage.saveContent(jwtToken, 'jwt');\n            return new Promise((resolve, reject) => {\n                // 1. when websocket opened\n                this.connector.onOpen(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug(`1. connector on open`);\n                    log.reportLog('1. connect ws open');\n                    const timeOne = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---open->\", timeOne - this.timeLog);\n                    //2. send jwt to login\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when login');\n                            log.reportLog('2. connect login failed');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // throw error\n                            reject(error);\n                        }\n                        //3. send subscribe\n                        this.refreshPackageId();\n                        this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                            // ack\n                            if (rsp && rsp.error) {\n                                log.logError('failed when subscribe');\n                                log.reportLog('3. connect subscribe failed');\n                                yield this.connector.disconnect();\n                                var error = new Error();\n                                error.message = rsp.error.message;\n                                error.name = rsp.error.code.toString();\n                                // throw error\n                                reject(error);\n                            }\n                            this.refreshPackageId();\n                            log.logDebug(`4. subscribe callback then send fetch: ${this.packageId}`);\n                            log.reportLog('4. subscribe callback then send fetch');\n                            const timeF = new Date().getTime();\n                            (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n                            // 4. fetch messages\n                            yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                            resolve();\n                        }));\n                        log.logDebug(`3. login callback then send subscribe: ${this.packageId}`);\n                        log.reportLog('3. connect subscribe failed');\n                        const timeTh = new Date().getTime();\n                        (0, log_1.logDebug)(\"ConnectTime---login callback->\", timeTh - this.timeLog);\n                        yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                            log.logDebug('CONNECT: reconnect before send');\n                            yield this.connector.connect()\n                                .catch((err) => {\n                                (0, log_1.logDebug)('ConnectionManager connect error', err);\n                                reject(err);\n                            });\n                        }), {\n                            id: this.packageId.toString(),\n                            jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                            method: commands_1.CONNECT_METHOD_SUB,\n                            params: {\n                                topic: topic\n                            }\n                        });\n                    }));\n                    log.logDebug(`2. login called`);\n                    log.reportLog('2. connection manager connect call login');\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        yield this.connector.connect()\n                            .catch((err) => {\n                            (0, log_1.logDebug)('ConnectionManager connect error', err);\n                            reject(err);\n                        });\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_LOGIN,\n                        params: {\n                            token: jwtToken\n                        }\n                    });\n                    // 4. listen when dapp back to front, receive wallet public key\n                    this.connector.addPackageParse((event) => {\n                        var _a;\n                        log.logDebug(`connect: parse package`);\n                        log.logDebug(event);\n                        if (!(\"params\" in event) || !(\"data\" in event[\"params\"])) {\n                            this.parsePackage(event, true);\n                            return;\n                        }\n                        let rawMsg = (_a = event.params.data) === null || _a === void 0 ? void 0 : _a.message;\n                        if (typeof rawMsg !== 'undefined') {\n                            rawMsg = rawMsg.replace(/'/g, '\"');\n                            let parsedMessage = (0, safejson_1.safeJsonParse)(rawMsg);\n                            if (typeof parsedMessage !== 'string' && \"clientId\" in parsedMessage && parsedMessage.clientId && parsedMessage.clientId.length > 0) {\n                                this.connectedWalletPK = parsedMessage.clientId;\n                                log.logDebug(`this.connectedWalletPK  addPackageParse   ${this.connectedWalletPK}`);\n                                // exchange sender public key\n                                // cache wallet public key\n                                this.connectStorage.saveContent(this.connectedWalletPK, storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                                // cache crypto keypair\n                                this.saveCryptoKeyPair(this.crypto.stringifyKeypair());\n                            }\n                        }\n                        // ignore receive echo\n                        this.parsePackage(event, event.method === commands_1.CONNECT_METHOD_RECEIVE);\n                    });\n                }));\n                this.connector.connect().catch((err) => {\n                    (0, log_1.logDebug)('ConnectionManager connect error', err);\n                    reject(err);\n                });\n            });\n        });\n    }\n    disconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            yield this.connector.disconnect();\n            log.reportLog('connect disconnect');\n            //clean cached topic\n            //如果是恢复连接，就不清理解密public key\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            if (!fromRestore) {\n                this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                this.connectedWalletPK = '';\n                (0, log_1.logDebug)(`connectionManager disconnect() this.connectedWalletPK : ${this.connectedWalletPK}`);\n            }\n        });\n    }\n    addListener(event, success, fail) {\n        this.connector.addListener((0, safejson_1.safeJsonStringify)(event), (rawMsg) => {\n            rawMsg = rawMsg.replace(/'/g, '\"');\n            log.logDebug(`addListener ===> ${rawMsg}`);\n            if (typeof rawMsg !== 'undefined') {\n                var msgObj = (0, safejson_1.safeJsonParse)(rawMsg);\n                var msg = msgObj.message;\n                let result;\n                if (msg.trimStart().startsWith('{')) {\n                    result = msg;\n                }\n                else {\n                    if (msgObj.clientId && msgObj.clientId.length > 0) {\n                        this.connectedWalletPK = msgObj.clientId;\n                        this.connectStorage.saveContent(this.connectedWalletPK, storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n                        log.logDebug(`this.connectedWalletPK  addListener   ${this.connectedWalletPK}`);\n                        log.logDebug(`this.cryptoKey  addListener   ${(0, utils_1.toHexString)(this.crypto.keyPair.publicKey)}`);\n                        // cache crypto keypair\n                        this.saveCryptoKeyPair(this.crypto.stringifyKeypair());\n                    }\n                    result = this.crypto.decrypt(msg, this.connectedWalletPK);\n                }\n                log.logDebug(`addListener ===> ${result}`);\n                return result;\n            }\n            return undefined;\n        }, success, fail);\n    }\n    sendRaw(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.logDebug(`message send =====> ${msg}`);\n            log.reportLog('connect send raw msg');\n            let message = msg;\n            log.logDebug(`message send =====encrypt message.length>>>> ${message.length}`);\n            // only one topic\n            let topic = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`message send =====topic>>>> ${topic === null || topic === void 0 ? void 0 : topic.content}`);\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                method: commands_1.CONNECT_METHOD_PUBLISH,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                params: {\n                    message: {\n                        topic: topic === null || topic === void 0 ? void 0 : topic.content,\n                        message: message,\n                        ttl: constants_1.OKXCONNECTOR_MESSAGE_TTL\n                    }\n                } // crypted\n            };\n            this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                // ack\n                if (rsp && rsp.error) {\n                    log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                }\n                else if (rsp && !rsp.error) {\n                    log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                }\n            }));\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n            return this.packageId;\n        });\n    }\n    send(msg_1) {\n        return __awaiter(this, arguments, void 0, function* (msg, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL) {\n            // make send msg payload\n            log.logDebug(`message send =====> ${msg}`);\n            log.reportLog('connect send msg');\n            if (!this.isWalletPKReady()) {\n                // channel not ready\n                throw new Error('connection not finish');\n            }\n            let message = this.crypto.encrypt(msg, this.connectedWalletPK);\n            log.logDebug(`message send =====encrypt message.length>>>> ${message.length}`);\n            log.reportEvent(report_1.OKXReportType.LOG, 'msg_size', message.length.toString());\n            // only one topic\n            let topic = this.connectStorage.getItem(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            log.logDebug(`message send =====topic>>>> ${topic === null || topic === void 0 ? void 0 : topic.content}`);\n            this.refreshPackageId();\n            const payload = {\n                id: this.packageId.toString(),\n                method: commands_1.CONNECT_METHOD_PUBLISH,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                params: {\n                    message: {\n                        topic: topic === null || topic === void 0 ? void 0 : topic.content,\n                        message: message,\n                        ttl: ttl\n                    }\n                } // crypted\n            };\n            this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                // ack\n                if (rsp && rsp.error) {\n                    log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                }\n                else if (rsp && !rsp.error) {\n                    log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                }\n            }));\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n            return this.packageId;\n        });\n    }\n    sendACK(msgId_1, success_1) {\n        return __awaiter(this, arguments, void 0, function* (msgId, success, reason = undefined) {\n            if (success === true) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    result: true\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n            else if (reason) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    error: {\n                        code: reason.code, //int\n                        message: reason.message\n                    }\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    // send receive\n    sendReceive(msgId, messageId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECEIVE,\n                params: {\n                    data: {\n                        messageId: messageId,\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendConnectSessionInfo(msgId, messageId, topic, params) {\n        return __awaiter(this, void 0, void 0, function* () {\n        });\n    }\n    // send receive\n    // 1. fetch all \n    // 2. send back receive\n    // 3. check has more, if so, repeat from 1st step\n    sendFetchAndConsumeMessages(msgId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(msgId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic == topic) {\n                                let messageId = msg.messageId;\n                                log.reportLog('5. get fetch result');\n                                yield this.connector.getMsgPayloadFromHistory(msg);\n                                // send receive command to relay server\n                                this.refreshPackageId();\n                                yield this.sendReceive(this.packageId.toString(), messageId, topic);\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            log.reportLog('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_FETCHMSG,\n                params: {\n                    data: {\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    cleanCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            log.reportLog('connection cache clean called');\n            this.connectStorage.clearCache();\n        });\n    }\n    saveSessionContent(key, data) {\n        if (!data) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(data);\n        this.connectStorage.encryptStoreMsg(jsonData, storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n    }\n    getSessionContent(key) {\n        let jsonStr = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        if (jsonStr) {\n            let object = (0, safejson_1.safeJsonParse)(jsonStr);\n            return object;\n        }\n        return undefined;\n    }\n    getCurrentConnectionReady() {\n        return this.isWalletPKReady();\n    }\n}\nexports.ConnectionManager = ConnectionManager;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectorState = exports.CONNECT_JSONRPC_VER = exports.OKXCONNECTOR_MESSAGE_TTL = exports.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE = exports.OKXCONNECTOR_WS_URL_LIST = exports.OKXCONNECTOR_WS_URL_IDX_KEY = exports.OKXCONNECTOR_WS_URL_3 = exports.OKXCONNECTOR_WS_URL_2 = exports.OKXCONNECTOR_WS_URL_1 = exports.EVENT_EMITTER_MAX_LISTENERS = void 0;\nexports.EVENT_EMITTER_MAX_LISTENERS = 10;\nexports.OKXCONNECTOR_WS_URL_1 = \"wss://wsdexpri.okx.com/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_2 = \"wss://wsdexpri.okx.ac/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_3 = \"wss://wsdexpri.coinall.ltd/ws/v1/wallet-connect-relay\";\nexports.OKXCONNECTOR_WS_URL_IDX_KEY = \"wuik\";\nexports.OKXCONNECTOR_WS_URL_LIST = [\n    exports.OKXCONNECTOR_WS_URL_1,\n    exports.OKXCONNECTOR_WS_URL_2,\n    exports.OKXCONNECTOR_WS_URL_3,\n];\nexports.OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE = {\n    TIME_OUT: 3990,\n    CANCELED: 3991,\n    FINISHED: 3992,\n};\nexports.OKXCONNECTOR_MESSAGE_TTL = 300000;\n// --------------- JSON RPC ---------------\nexports.CONNECT_JSONRPC_VER = \"2.0\";\nexports.ConnectorState = {\n    InitState: 0,\n    Connecting: 1,\n    Connected: 2,\n    Disconnected: 3,\n    OnError: 4,\n};\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Engine = void 0;\nconst protocol_1 = require(\"../protocol\");\nconst utils_1 = require(\"../utils\");\nconst iconnector_1 = require(\"../connector/iconnector\");\nconst ws_connector_1 = require(\"../connector/ws-connector\");\nconst connectionManager_1 = require(\"./connectionManager\");\nconst sessionUtils_1 = require(\"./sessionUtils\");\nconst connector_1 = require(\"../connector\");\nconst wallet_info_1 = require(\"../protocol/connect/wallet-info\");\nclass Engine {\n    constructor(appName) {\n        this.connectors = [];\n        this.useConnector = undefined;\n        this.connectionManager = new connectionManager_1.ConnectionManager(appName);\n    }\n    isInject() {\n        return this.getConnector() instanceof connector_1.InjectConnector;\n    }\n    getConnector() {\n        if (this.useConnector) {\n            return this.useConnector;\n        }\n    }\n    registerConnector(connectors) {\n        this.connectors = connectors;\n        for (const connector of connectors) {\n            if (connector instanceof ws_connector_1.WsConnector) {\n                connector.setConnectionManager(this.connectionManager);\n            }\n        }\n    }\n    hasWsConnector() {\n        for (const connector of this.connectors) {\n            if (connector instanceof ws_connector_1.WsConnector) {\n                return true;\n            }\n        }\n        return false;\n    }\n    universalConnect(request, sessionConfig, connectInfoAndUrl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b, _c, _d, _e;\n                try {\n                    (0, utils_1.logDebug)(\"engine universalConnect request :\", JSON.stringify(request));\n                    (0, utils_1.logDebug)(\"engine universalConnect sessionConfig :\", JSON.stringify(sessionConfig));\n                    let tonRequest = [];\n                    let universalRequest = [];\n                    request.forEach((item) => {\n                        let name = item.name;\n                        if (name.startsWith(\"requestAccounts\")) {\n                            universalRequest.push(item);\n                        }\n                        else if (name.startsWith(\"ton\")) {\n                            tonRequest.push(item);\n                        }\n                    });\n                    (0, utils_1.logDebug)(\"engine universalConnect tonRequest :\", JSON.stringify(tonRequest));\n                    (0, utils_1.logDebug)(\"engine universalConnect universalRequest :\", JSON.stringify(universalRequest));\n                    const connectInfo = this.connectionManager.getConnectInfo();\n                    const requestId = Date.now().toString();\n                    let openUniversalLink = (_a = sessionConfig.openUniversalUrl) !== null && _a !== void 0 ? _a : false;\n                    const universalConnectRequest = {\n                        protocolVer: Number(protocol_1.tonConnectSdkVersion),\n                        topic: connectInfo.channelId,\n                        clientId: connectInfo.clientId,\n                        requestId: requestId,\n                        dAppInfo: sessionConfig.dappInfo,\n                        requests: universalRequest,\n                        redirect: (_b = sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect) !== null && _b !== void 0 ? _b : \"none\"\n                    };\n                    const universalConnectRequestbase64Encoded = (0, utils_1.encodeConnectParams)(universalConnectRequest);\n                    universalConnectRequest.redirect = (_c = sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect) !== null && _c !== void 0 ? _c : \"none\";\n                    const tonConnectRequest = {\n                        protocolVer: Number(protocol_1.tonConnectSdkVersion),\n                        topic: connectInfo.channelId,\n                        clientId: connectInfo.clientId,\n                        requestId: requestId,\n                        dAppInfo: sessionConfig.dappInfo,\n                        requests: tonRequest,\n                        redirect: (_d = sessionConfig === null || sessionConfig === void 0 ? void 0 : sessionConfig.redirect) !== null && _d !== void 0 ? _d : \"none\"\n                    };\n                    let isFromTonSDK = false;\n                    if (tonRequest.length > 0) { //from tonsdk\n                        isFromTonSDK = true;\n                    }\n                    let defaultConnectRequest = isFromTonSDK ? tonConnectRequest : universalConnectRequest;\n                    (0, utils_1.logDebug)('engine universalConnect ==>>defaultConnectRequest:', isFromTonSDK, JSON.stringify(defaultConnectRequest));\n                    var openOKXLink = \"\";\n                    // open app wallet\n                    if (openUniversalLink) {\n                        openOKXLink = (0, utils_1.getOKXLink)(defaultConnectRequest, sessionConfig.useMini, sessionConfig.tmaReturnUrl);\n                        (0, utils_1.logDebug)('engine universalConnect ==>>openOKXLink:', openOKXLink);\n                    }\n                    const openMethod = () => {\n                        if (this.connectors.length == 1 && this.connectors[0] instanceof connector_1.OkxwalletInjectConnector) {\n                            return this.connectors[0].openWallet({\n                                connectRequest: universalConnectRequest\n                            });\n                        }\n                        else {\n                            if (sessionConfig.useMini) {\n                                return (0, utils_1.openOKXTMAWalletlinkWithFallback)(openOKXLink);\n                            }\n                            if ((0, utils_1.useShortLink)()) {\n                                return (0, utils_1.openOKXUniversalLink)(openOKXLink);\n                            }\n                            return (0, utils_1.openOKXDeeplinkWithFallback)(openOKXLink);\n                        }\n                    };\n                    (0, utils_1.logDebug)('engine universalConnect ==>>openOKXLink:', openOKXLink);\n                    const isIOS = (0, utils_1.isIos)();\n                    if (isIOS && openUniversalLink) {\n                        (0, utils_1.logDebug)(`engine universalConnect ==>>isIOS: ${isIOS}   openUniversalLink: ${openUniversalLink}`);\n                        openMethod();\n                    }\n                    this.addOnConnectResultListener((response, connector) => {\n                        var _a, _b, _c;\n                        try {\n                            let connectResponse = response;\n                            if (connectResponse.method == \"connect\") {\n                                (0, utils_1.logDebug)(\"engin  universalConnect success connectResponse:>>>\", JSON.stringify(connectResponse));\n                                let namespaces = (0, sessionUtils_1.buildNameSpacesByConnectResponse)(connectResponse);\n                                if (namespaces) {\n                                    let walletName = undefined;\n                                    if (((_b = (_a = connectResponse.payload) === null || _a === void 0 ? void 0 : _a.responses) === null || _b === void 0 ? void 0 : _b[0]) && \"walletName\" in connectResponse.payload.responses[0]) {\n                                        walletName = connectResponse.payload.responses[0]['walletName'];\n                                    }\n                                    let session = Object.assign({ topic: connectInfo.channelId, sessionConfig: sessionConfig, namespaces: namespaces }, (connectResponse.payload && {\n                                        wallet: Object.assign(Object.assign({}, connectResponse.payload.wallet), { walletName: walletName })\n                                    }));\n                                    let methodsResponse = connectResponse.payload.responses.find(item => item.name === 'requestAccounts');\n                                    if (methodsResponse && methodsResponse.connectRequestMethods) {\n                                        session.signResponse = methodsResponse.connectRequestMethods;\n                                    }\n                                    (0, utils_1.logDebug)(\"engin  universalConnect success session:>>>\", JSON.stringify(session));\n                                    resolve(session);\n                                    this.useConnector = connector;\n                                }\n                                else {\n                                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR);\n                                }\n                            }\n                            else if (connectResponse.method == \"connect_error\" && ((_c = connectResponse.payload) === null || _c === void 0 ? void 0 : _c.code)) {\n                                throw new protocol_1.OKXConnectError(connectResponse.payload.code);\n                            }\n                        }\n                        catch (e) {\n                            reject(e);\n                        }\n                    });\n                    if (this.hasWsConnector()) {\n                        yield ((_e = this.connectionManager) === null || _e === void 0 ? void 0 : _e.disconnect(false));\n                        try {\n                            yield this.connectionManager.connect();\n                        }\n                        catch (e) {\n                            (0, utils_1.logDebug)('Engine universalConnect error', e);\n                            throw e;\n                        }\n                        (0, utils_1.logDebug)('engin  universalConnect ==>> connectInfoAndUrl:', connectInfoAndUrl);\n                        this.sendSession(universalConnectRequestbase64Encoded);\n                    }\n                    if (!isIOS && openUniversalLink) {\n                        openMethod();\n                    }\n                    if (connectInfoAndUrl) {\n                        const info = {\n                            connectRequest: universalConnectRequest,\n                            redirect: sessionConfig.redirect,\n                            tmaReturnUrl: sessionConfig.tmaReturnUrl,\n                        };\n                        if (isFromTonSDK) {\n                            info.tonConnectRequest = tonConnectRequest;\n                        }\n                        (0, utils_1.logDebug)(\"universalConnect connectInfoAndUrl info :\", JSON.stringify(info));\n                        connectInfoAndUrl(info);\n                    }\n                }\n                catch (error) {\n                    (0, utils_1.logDebug)(\"Engine universalConnect catch error\", error);\n                    reject(error);\n                }\n            }));\n        });\n    }\n    addOnConnectResultListener(connectResultListener) {\n        for (const connector of this.connectors) {\n            connector.setOnConnectResultListener(connectResultListener);\n        }\n    }\n    openWallet(engineConnectInfo, connector) {\n        var _a;\n        if (connector) {\n            connector.openWallet(engineConnectInfo);\n        }\n        else {\n            (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.openWallet(engineConnectInfo);\n        }\n    }\n    send(request, requestAnswer, ttl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            return (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.send(request, requestAnswer, ttl);\n        });\n    }\n    clearData() {\n        var _a;\n        (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.clearData();\n    }\n    addDisconnectListener(disconnecter) {\n        var _a;\n        (_a = this.getConnector()) === null || _a === void 0 ? void 0 : _a.addDisconnectListener(disconnecter);\n    }\n    saveSessionContent(key, data) {\n        this.connectionManager.saveSessionContent(key, data);\n    }\n    getSessionContent(key) {\n        var _a;\n        var session = this.connectionManager.getSessionContent(key);\n        if (session) {\n            var tag = \"\";\n            if (typeof session === \"object\") {\n                tag = this.getTagByappName((_a = session.wallet) === null || _a === void 0 ? void 0 : _a.appName);\n            }\n            if (this.connectors.find((connector) => {\n                return connector.getTag() === tag;\n            })) {\n                return session;\n            }\n        }\n        return undefined;\n    }\n    getTagByappName(appName) {\n        var tag = '';\n        if (appName) {\n            switch (appName) {\n                case wallet_info_1.OKXWalletName:\n                    tag = iconnector_1.OKX_APP_WALLET;\n                    break;\n                case wallet_info_1.OKXMiniWalletName:\n                    tag = iconnector_1.OKX_TG_WALLET;\n                    break;\n                case wallet_info_1.OKXInjectWalletName:\n                    tag = iconnector_1.OKX_INJECT_WALLET;\n            }\n        }\n        return tag;\n    }\n    setConnectConnector(wallet) {\n        var tag = this.getTagByappName(wallet === null || wallet === void 0 ? void 0 : wallet.appName);\n        if (!tag)\n            return;\n        this.useConnector = this.connectors.find((connector) => {\n            return connector.getTag() === tag;\n        });\n    }\n    // for es connect\n    setSessionConnectingListener(sessionConnectingListener) {\n        if (this.getConnector() instanceof ws_connector_1.WsConnector) {\n            this.getConnector().setSessionConnectingListener(sessionConnectingListener);\n        }\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.getConnector() instanceof ws_connector_1.WsConnector) {\n                yield this.getConnector().restoreconnect(sessionInfo, onConnectResult);\n            }\n            else {\n                onConnectResult(sessionInfo);\n            }\n        });\n    }\n    restoreconnectFromTopic(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.getConnector() instanceof ws_connector_1.WsConnector) {\n                yield this.getConnector().restoreconnectFromTopic(topic);\n            }\n        });\n    }\n    getCurrentConnectionReady() {\n        if (this.isInject()) {\n            return true;\n        }\n        else {\n            return this.getConnector().getCurrentConnectionReady();\n        }\n    }\n    connectManagerDisconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            if (this.getConnector() instanceof ws_connector_1.WsConnector) {\n                yield this.getConnector().connectManagerDisconnect(fromRestore);\n            }\n        });\n    }\n    sendSession(sessionInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, utils_1.logDebug)('[Connect] sendSession called:', sessionInfo);\n            const requestId = Date.now().toString();\n            let request = {\n                method: 'session_info',\n                params: { sessionInfo: sessionInfo }\n            };\n            yield this.connectionManager.sendRaw(JSON.stringify(Object.assign(Object.assign({}, request), { requestId: requestId })));\n        });\n    }\n}\nexports.Engine = Engine;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Storage = exports.Engine = exports.WalletConnectionManager = exports.ConnectionManager = exports.OKXWalletConnector = void 0;\nvar connect_1 = require(\"./connect\");\nObject.defineProperty(exports, \"OKXWalletConnector\", { enumerable: true, get: function () { return connect_1.OKXWalletConnector; } });\nvar connectionManager_1 = require(\"./connectionManager\");\nObject.defineProperty(exports, \"ConnectionManager\", { enumerable: true, get: function () { return connectionManager_1.ConnectionManager; } });\nvar walletConnectionManager_1 = require(\"./walletConnectionManager\");\nObject.defineProperty(exports, \"WalletConnectionManager\", { enumerable: true, get: function () { return walletConnectionManager_1.WalletConnectionManager; } });\nvar engine_1 = require(\"./engine\");\nObject.defineProperty(exports, \"Engine\", { enumerable: true, get: function () { return engine_1.Engine; } });\nvar storage_1 = require(\"./storage\");\nObject.defineProperty(exports, \"Storage\", { enumerable: true, get: function () { return storage_1.Storage; } });\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MULTICODEC_ED25519_LENGTH = exports.MULTICODEC_ED25519_HEADER = exports.MULTICODEC_ED25519_BASE = exports.MULTICODEC_ED25519_ENCODING = exports.DID_METHOD = exports.DID_PREFIX = exports.DID_DELIMITER = exports.KEY_PAIR_SEED_LENGTH = exports.DATA_ENCODING = exports.JSON_ENCODING = exports.JWT_ENCODING = exports.JWT_DELIMITER = exports.JWT_IRIDIUM_TYP = exports.JWT_IRIDIUM_ALG = exports.JWTHeaderType = void 0;\nexports.generateKeyPair = generateKeyPair;\nexports.decodeJSON = decodeJSON;\nexports.encodeJSON = encodeJSON;\nexports.encodeIss = encodeIss;\nexports.decodeIss = decodeIss;\nexports.encodeSig = encodeSig;\nexports.decodeSig = decodeSig;\nexports.encodeData = encodeData;\nexports.decodeData = decodeData;\nexports.encodeJWT = encodeJWT;\nexports.decodeJWT = decodeJWT;\nexports.signJWT = signJWT;\nexports.verifyJWT = verifyJWT;\nconst ed25519 = __importStar(require(\"@stablelib/ed25519\"));\nconst safejson_1 = require(\"../utils/safejson\");\nconst utils_1 = require(\"../utils/utils\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst log = __importStar(require(\"../utils/log\"));\nconst stringUtils_1 = require(\"../utils/stringUtils\");\nexports.JWTHeaderType = \"dapp\";\nexports.JWT_IRIDIUM_ALG = \"EdDSA\";\nexports.JWT_IRIDIUM_TYP = \"JWT\";\nexports.JWT_DELIMITER = \".\";\nexports.JWT_ENCODING = \"base64url\";\nexports.JSON_ENCODING = \"utf8\";\nexports.DATA_ENCODING = \"utf8\";\nexports.KEY_PAIR_SEED_LENGTH = 32;\nexports.DID_DELIMITER = \":\";\nexports.DID_PREFIX = \"did\";\nexports.DID_METHOD = \"key\";\nexports.MULTICODEC_ED25519_ENCODING = \"base58btc\";\nexports.MULTICODEC_ED25519_BASE = \"z\";\nexports.MULTICODEC_ED25519_HEADER = \"K36\";\nexports.MULTICODEC_ED25519_LENGTH = 32;\nfunction generateKeyPair() {\n    // let local_seed = randomBytes(KEY_PAIR_SEED_LENGTH)\n    // return ed25519.generateKeyPairFromSeed(local_seed);\n    return tweetnacl_1.default.sign.keyPair();\n}\nfunction decodeJSON(str) {\n    return (0, safejson_1.safeJsonParse)((0, stringUtils_1.okxtoString)((0, stringUtils_1.okxfromString)(str, exports.JWT_ENCODING), exports.JSON_ENCODING));\n}\nfunction encodeJSON(val) {\n    return (0, stringUtils_1.okxtoString)((0, stringUtils_1.okxfromString)((0, safejson_1.safeJsonStringify)(val), exports.JSON_ENCODING), exports.JWT_ENCODING);\n}\nfunction encodeIss(publicKey) {\n    log.logDebug(`publicKey: ${(0, utils_1.toHexString)(publicKey)}`);\n    var publicKeyStr = (0, stringUtils_1.okxtoString)(publicKey, exports.MULTICODEC_ED25519_ENCODING);\n    return [exports.DID_PREFIX, exports.DID_METHOD, publicKeyStr].join(exports.DID_DELIMITER);\n}\nfunction decodeIss(issuer) {\n    const [prefix, method, multicodec] = issuer.split(exports.DID_DELIMITER);\n    if (prefix !== exports.DID_PREFIX || method !== exports.DID_METHOD) {\n        throw new Error(`Issuer must be a DID with method \"key\"`);\n    }\n    if (multicodec === undefined) {\n        throw new Error('multicodec is undefined');\n    }\n    const publicKey = (0, stringUtils_1.okxfromString)(multicodec, exports.MULTICODEC_ED25519_ENCODING);\n    if (publicKey === undefined || publicKey.length !== exports.MULTICODEC_ED25519_LENGTH) {\n        throw new Error(`Issuer must be a public key with length 32 bytes`);\n    }\n    return publicKey;\n}\n// ---------- Signature ----------------------------------------------- //\nfunction encodeSig(bytes) {\n    return (0, stringUtils_1.okxtoString)(bytes, exports.JWT_ENCODING);\n}\nfunction decodeSig(encoded) {\n    return (0, stringUtils_1.okxfromString)(encoded, exports.JWT_ENCODING);\n}\n// ---------- Data ----------------------------------------------- //\nfunction encodeData(params) {\n    return (0, stringUtils_1.okxfromString)([encodeJSON(params.header), encodeJSON(params.payload)].join(exports.JWT_DELIMITER), exports.DATA_ENCODING);\n}\nfunction decodeData(data) {\n    var _a, _b;\n    const params = (0, stringUtils_1.okxtoString)(data, exports.DATA_ENCODING).split(exports.JWT_DELIMITER);\n    const header = decodeJSON((_a = params[0]) !== null && _a !== void 0 ? _a : '{}');\n    const payload = decodeJSON((_b = params[1]) !== null && _b !== void 0 ? _b : '{}');\n    return { header, payload };\n}\n// ---------- JWT ----------------------------------------------- //\nfunction encodeJWT(params) {\n    return [encodeJSON(params.header), encodeJSON(params.payload), encodeSig(params.signature)].join(exports.JWT_DELIMITER);\n}\nfunction decodeJWT(jwt) {\n    var _a, _b, _c;\n    const params = jwt.split(exports.JWT_DELIMITER);\n    const header = decodeJSON((_a = params[0]) !== null && _a !== void 0 ? _a : '{}');\n    const payload = decodeJSON((_b = params[1]) !== null && _b !== void 0 ? _b : '{}');\n    const signature = decodeSig((_c = params[2]) !== null && _c !== void 0 ? _c : '{}');\n    const data = (0, stringUtils_1.okxfromString)(params.slice(0, 2).join(exports.JWT_DELIMITER), exports.DATA_ENCODING);\n    return { header, payload, signature, data };\n}\nfunction signJWT(sub_1, aud_1, ttl_1, keyPair_1) {\n    return __awaiter(this, arguments, void 0, function* (sub, aud, ttl, keyPair, iat = Math.floor(Date.now())) {\n        const header = { alg: exports.JWT_IRIDIUM_ALG, typ: exports.JWT_IRIDIUM_TYP };\n        const iss = encodeIss(keyPair.publicKey);\n        const exp = iat + ttl;\n        const act = \"authenticate user\";\n        const payload = { iss, sub, aud, act, iat, exp };\n        const data = encodeData({ header, payload });\n        // const signature = ed25519.sign(keyPair.secretKey, data);\n        log.logDebug(`get sec kp: ${keyPair.secretKey} {${keyPair.secretKey.length}}`);\n        const signature = tweetnacl_1.default.sign.detached(data, keyPair.secretKey);\n        return encodeJWT({ header, payload, signature });\n    });\n}\nfunction verifyJWT(jwt) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { header, payload, data, signature } = decodeJWT(jwt);\n        if (header.alg !== exports.JWT_IRIDIUM_ALG || header.typ !== exports.JWT_IRIDIUM_TYP) {\n            throw new Error(\"JWT must use EdDSA algorithm\");\n        }\n        const publicKey = decodeIss(payload.iss);\n        return ed25519.verify(publicKey, data, signature);\n    });\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCONNECTOR_JWT_TTL = exports.OKXCONNECTOR_JWT_WALLET_SIDE = exports.OKXCONNECTOR_JWT_SIDE = void 0;\nexports.OKXCONNECTOR_JWT_SIDE = \"wallet\";\nexports.OKXCONNECTOR_JWT_WALLET_SIDE = \"dapp\";\nexports.OKXCONNECTOR_JWT_TTL = 86400000;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.buildNameSpacesByConnectResponse = buildNameSpacesByConnectResponse;\nexports.buildRequestAccountNameSpacesByConnectResponse = buildRequestAccountNameSpacesByConnectResponse;\nconst log_1 = require(\"../utils/log\");\nfunction buildNameSpacesByConnectResponse(connectResponse) {\n    let requestAccountNameSpaces = buildRequestAccountNameSpacesByConnectResponse(connectResponse);\n    return requestAccountNameSpaces;\n}\nfunction buildRequestAccountNameSpacesByConnectResponse(connectResponse) {\n    let result = {};\n    (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse start connectResponse>>', JSON.stringify(connectResponse));\n    let universalResponse = connectResponse.payload.responses.find(item => item.name === 'requestAccounts');\n    const tonAddress = connectResponse.payload.responses.find(item => item.name === 'ton_addr');\n    const tonProof = connectResponse.payload.responses.find(item => item.name === 'ton_proof');\n    if (tonAddress && !universalResponse) { //adapt tonsdk\n        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse adapt ton data >>');\n        let address = tonAddress.address;\n        address = 'ton:' + tonAddress.network + \":\" + address;\n        let data = {\n            ton_addr: tonAddress\n        };\n        if (tonProof) {\n            data.ton_proof = tonProof;\n        }\n        universalResponse = {\n            name: \"requestAccounts\",\n            accounts: [{\n                    namespace: 'ton',\n                    addresses: [address],\n                    methods: ['ton_sendTransaction'],\n                    extra: {},\n                    data: data,\n                }]\n        };\n    }\n    (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse end universalResponse>>>', JSON.stringify(universalResponse));\n    universalResponse.accounts.forEach(item => {\n        var chains = [];\n        var accounts = [];\n        item.addresses.forEach(addressItem => {\n            var addressArr = addressItem.split(\":\");\n            (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse addressArr>>', addressArr.length);\n            if (addressArr.length >= 3) {\n                let chain = addressArr.slice(0, 2).join(\":\");\n                chains.push(chain);\n                accounts.push(addressItem);\n                (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse chain:>>', chain, \"addressItem:\", addressItem);\n            }\n        });\n        if (item.data && item.data.ton_addr) {\n            item.data.ton_addr.name = 'ton_addr';\n        }\n        if (item.data && item.data.ton_proof) {\n            item.data.ton_proof.name = 'ton_proof';\n        }\n        result[item.namespace] = {\n            chains: chains,\n            accounts: accounts,\n            methods: item.methods,\n            extra: item.extra,\n            payload: item.data\n        };\n        (0, log_1.logDebug)('buildRequestAccountNameSpacesByConnectResponse result>>', JSON.stringify(result));\n    });\n    return result;\n}\n/*export function buildTonNameSpaceByConnectResponse(connectResponse: ConnectResponseSuccess): Namespaces | undefined {\n    const tonAddrItem: TonAddressItemReply = connectResponse.payload.responses.find(\n        item => item.name === 'ton_addr'\n    ) as TonAddressItemReply;\n\n    const tonProfItem: TonProofItemReply = connectResponse.payload.responses.find(\n        item => item.name === 'ton_proof'\n    ) as TonProofItemReply;\n\n    if (!tonAddrItem) {\n        return undefined\n    }\n\n    return {\n        NameSpaceKeyTON: {\n            chains: [tonAddrItem.network],\n            accounts: [],\n            methods: connectResponse.payload.wallet.features?.ton,\n            payload: {\n                tonAccount: {\n                    address: tonAddrItem.address,\n                    chain: tonAddrItem.network,\n                    walletStateInit: tonAddrItem.walletStateInit,\n                    publicKey: tonAddrItem.publicKey\n                },\n                tonProof: tonProfItem\n            }\n        }\n    }\n}*/\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Storage = void 0;\nconst storageconstants_1 = require(\"./storageconstants\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst utils_1 = require(\"../utils/utils\");\nconst utils_2 = require(\"../utils\");\nconst log = __importStar(require(\"../utils/log\"));\nconst utils_3 = require(\"../utils\");\nconst crypto_js_1 = require(\"crypto-js\");\nclass Storage {\n    constructor(subKey, beforeKey = undefined) {\n        const localStorage = (0, utils_1.resolveLocalStorage)();\n        // 0. check and upgrade beforeKey\n        log.logDebug('------ update before cache ------');\n        if (beforeKey) {\n            this.checkAndUpgradeCache(beforeKey, subKey);\n        }\n        // 1. load data from local storage\n        this.storeKey = '';\n        this.cipherIV = '';\n        this.subKey = subKey;\n        log.logDebug('--------get current local storage --------');\n        log.logDebug(localStorage);\n        const cacheStr = localStorage.getItem(Storage.cacheKey + subKey);\n        if (typeof cacheStr === \"undefined\" || cacheStr === null) {\n            log.logDebug(\"with no cache\");\n            this.cache = {};\n            return;\n        }\n        log.logDebug(cacheStr);\n        if ((cacheStr === null || cacheStr === void 0 ? void 0 : cacheStr.length) > 0) {\n            var cacheObj = (0, utils_2.safeJsonParse)(cacheStr);\n            this.cache = cacheObj;\n        }\n        log.logDebug(`get cache obj: ${this.cache}`);\n        if (typeof this.cache === 'undefined' || this.cache == null) {\n            this.cache = {};\n        }\n    }\n    checkAndUpgradeCache(fromCacheKey, toCacheKey) {\n        if (fromCacheKey && fromCacheKey.length > 0 && toCacheKey && toCacheKey.length > 0) {\n            // 1. get all infos from from-cache-key\n            log.logDebug('--------get current local storage --------');\n            log.logDebug(localStorage);\n            const cacheStr = localStorage.getItem(Storage.cacheKey + fromCacheKey);\n            if (typeof cacheStr === \"undefined\" || cacheStr === null) {\n                log.logDebug(\"no pre cache content\");\n                return;\n            }\n            log.logDebug(cacheStr);\n            if ((cacheStr === null || cacheStr === void 0 ? void 0 : cacheStr.length) > 0) {\n                // 2. save to to-cache-key\n                log.logDebug(\"write in cache content: \", fromCacheKey, '->', toCacheKey);\n                localStorage.setItem(Storage.cacheKey + toCacheKey, cacheStr);\n                // 3. clean from item\n                log.logDebug(\"clean in cache content: \", fromCacheKey);\n                localStorage.removeItem(Storage.cacheKey + fromCacheKey);\n            }\n        }\n        else {\n            log.logDebug('no pre cache key:', fromCacheKey);\n        }\n    }\n    saveContent(content, key, id = '-') {\n        let item = {\n            id: id,\n            timestamp: Date.now().toString(),\n            content: content\n        };\n        this.saveItem(item, key);\n    }\n    saveItem(item, key) {\n        let localKey = Storage.cacheKey + this.subKey;\n        const localStorage = (0, utils_1.resolveLocalStorage)();\n        log.logDebug(this.cache);\n        log.logDebug(`get cache obj: ${this.cache}, ${key}, ${item}`);\n        this.cache[key] = item;\n        let totalCacheStr = (0, utils_2.safeJsonStringify)(this.cache);\n        log.logDebug(`STORAGE: ${key} @ ${this.cache}`);\n        localStorage.setItem(localKey, totalCacheStr);\n    }\n    getItem(key) {\n        log.logDebug(`STORAGE >> getItem: ${key} @ ${this.cache}`);\n        return this.cache[key];\n    }\n    getCachedPBKDF2InfoKey() {\n        var _a, _b, _c, _d;\n        const pwLen = 32;\n        const saltLen = 24;\n        if (this.storeKey.length > 0 && ((_a = this.cipherIV) === null || _a === void 0 ? void 0 : _a.length) > 0) {\n            return {\n                pw: this.storeKey,\n                iv: this.cipherIV\n            };\n        }\n        let salt = (_b = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGER_CRYPTO_SALT)) === null || _b === void 0 ? void 0 : _b.content;\n        if (!salt) {\n            salt = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(saltLen));\n            this.saveContent(salt, storageconstants_1.OKXCONNECTOR_STORAGER_CRYPTO_SALT);\n        }\n        let pw = (_c = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD)) === null || _c === void 0 ? void 0 : _c.content;\n        if (!pw) {\n            pw = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(pwLen));\n            this.saveContent(pw, storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD);\n        }\n        let cipherIV = (_d = this.getItem(storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV)) === null || _d === void 0 ? void 0 : _d.content;\n        if (!cipherIV) {\n            // let ivBuffer = Buffer.from(nacl.randomBytes(16))\n            let ivBuffer = tweetnacl_1.default.randomBytes(16);\n            cipherIV = (0, utils_1.toHexString)(ivBuffer);\n            this.saveContent(cipherIV, storageconstants_1.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV);\n        }\n        this.cipherIV = cipherIV;\n        this.storeKey = (0, crypto_js_1.PBKDF2)(pw, salt, { iterations: 10 }).toString();\n        return {\n            pw: this.storeKey,\n            iv: this.cipherIV\n        };\n    }\n    encryptStoreMsg(msg, key) {\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg start ${Date.now()}`);\n        let storeInfo = this.getCachedPBKDF2InfoKey();\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg mid ${Date.now()}`);\n        var result = crypto_js_1.AES.encrypt(msg, storeInfo.pw).toString();\n        this.saveContent(result, key);\n        (0, utils_3.logDebug)(`encryptStoreMsg  encryptStoreMsg end ${Date.now()}`);\n    }\n    getAndDecrypt(key) {\n        (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt start ${Date.now()}`);\n        let item = this.getItem(key);\n        if (item && item.content) {\n            let storeInfo = this.getCachedPBKDF2InfoKey();\n            (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt mid ${Date.now()}`);\n            let result = crypto_js_1.AES.decrypt(item.content, storeInfo.pw).toString(crypto_js_1.enc.Utf8);\n            (0, utils_3.logDebug)(`encryptStoreMsg  getAndDecrypt end ${Date.now()}`);\n            return result;\n        }\n        return null;\n    }\n    clearCache(key = undefined) {\n        if (key === undefined) {\n            // clean all\n            this.cache = {};\n            let localKey = Storage.cacheKey + this.subKey;\n            localStorage.setItem(localKey, '');\n        }\n        else {\n            let localKey = Storage.cacheKey + this.subKey;\n            const localStorage = (0, utils_1.resolveLocalStorage)();\n            log.logDebug(this.cache);\n            this.cache[key] = null;\n            let totalCacheStr = (0, utils_2.safeJsonStringify)(this.cache);\n            log.logDebug(`STORAGE: clean key ${key} @ ${this.cache}`);\n            localStorage.setItem(localKey, totalCacheStr);\n        }\n    }\n}\nexports.Storage = Storage;\nStorage.cacheKey = 'OKXStorageKey';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCONNECTOR_STORAGE_CIPHER_METHOD = exports.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV = exports.OKXCONNECTOR_STORAGER_CRYPTO_SALT = exports.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD = exports.OKXCONNECTOR_TON_KEY = exports.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE = exports.OKXCONNECTOR_TOKEN_CACHE = exports.OKXCONNECTOR_JWT_KEY = exports.OKXCONNECTOR_SESSION_PREFIX_KEY = exports.OKXCONNECTOR_CRYPTO_KEY = exports.OKXCONNECTOR_CACHE_KEY_DAPP = exports.OKXCONNECTOR_CACHE_KEY = void 0;\nexports.OKXCONNECTOR_CACHE_KEY = \"ck\";\nexports.OKXCONNECTOR_CACHE_KEY_DAPP = \"ck_dapp\";\nexports.OKXCONNECTOR_CRYPTO_KEY = \"cck_k\";\nexports.OKXCONNECTOR_SESSION_PREFIX_KEY = \"cspk_\";\nexports.OKXCONNECTOR_JWT_KEY = \"cjk_k\";\nexports.OKXCONNECTOR_TOKEN_CACHE = \"ct\";\nexports.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE = \"csp\";\nexports.OKXCONNECTOR_TON_KEY = \"OKXStorage_ctc\";\nexports.OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD = \"scp\";\nexports.OKXCONNECTOR_STORAGER_CRYPTO_SALT = \"scs\";\nexports.OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV = \"scpc\";\nexports.OKXCONNECTOR_STORAGE_CIPHER_METHOD = \"aes-256-cbc\";\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletConnectionManagerEvent = exports.WalletConnectionManagerTopicInfoCacheKey = void 0;\nexports.WalletConnectionManagerTopicInfoCacheKey = \"wcmtic\";\nexports.WalletConnectionManagerEvent = {\n    RECEIVE_REQUEST: \"payload\"\n};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletConnectionManager = void 0;\nconst connect_1 = require(\"./connect\");\nconst commands_1 = require(\"./commands\");\nconst storageconstants_1 = require(\"./storageconstants\");\nconst jwtconstants_1 = require(\"./jwtconstants\");\nconst constants_1 = require(\"./constants\");\nconst walletConnectionConstants_1 = require(\"./walletConnectionConstants\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst storage_1 = require(\"./storage\");\nconst utils_1 = require(\"../utils/utils\");\nconst crypto_1 = require(\"../crypto/crypto\");\nconst jwt_1 = require(\"./jwt\");\nconst safejson_1 = require(\"../utils/safejson\");\nconst log = __importStar(require(\"../utils/log\"));\nconst log_1 = require(\"../utils/log\");\nconst utils_2 = require(\"../utils\");\nclass WalletConnectionManager {\n    constructor() {\n        this.events = new eventemitter3_1.EventEmitter();\n        this.communicateEvents = new eventemitter3_1.EventEmitter();\n        log.logDebug('connect manager construct');\n        // local storage\n        this.connectStorage = new storage_1.Storage(storageconstants_1.OKXCONNECTOR_CACHE_KEY);\n        // this.crypto = new SessionCrypto()\n        this.jwtKeyPair = this.getCachedJWTKeyPair();\n        this.saveJWTKeyPair(this.jwtKeyPair);\n        // wss connection\n        this.connector = new connect_1.OKXWalletConnector(constants_1.OKXCONNECTOR_WS_URL_1);\n        this.packageId = Date.now();\n        // connection state\n        this.sessionCryptoInfoMap = new Map();\n        // log.logDebug(`this.connectedWalletPK  constructor   ${this.connectedWalletPK}`)\n        this.inLogin = false;\n        this.isLogined = false;\n    }\n    refreshPackageId(offset = 0) {\n        this.packageId = Date.now() + offset;\n    }\n    saveCryptoKeyPair(topicId, keyPair) {\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(keyPair);\n        // encrypt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_CRYPTO_KEY + topicId);\n    }\n    getCachedCryptoKeyPair(topicId) {\n        // decrypt kp\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_CRYPTO_KEY + topicId);\n        const content = kp;\n        if (typeof content == 'string') {\n            log.logDebug('get cached crypto key:');\n            log.logDebug(content);\n            let keyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            return keyPairInfo;\n        }\n        else {\n            this.connectStorage.clearCache();\n        }\n        return null;\n    }\n    saveJWTKeyPair(keyPair) {\n        var strkeyPair = {\n            publicKey: (0, utils_1.toHexString)(keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(keyPair.secretKey)\n        };\n        log.logDebug('save jwt kp');\n        let cacheInfo = (0, safejson_1.safeJsonStringify)(strkeyPair);\n        log.logDebug(cacheInfo);\n        // encrypt jwt kp\n        this.connectStorage.encryptStoreMsg(cacheInfo, storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        log.logDebug('after save jwt kp');\n    }\n    getCachedJWTKeyPair() {\n        const kp = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_JWT_KEY);\n        const content = kp;\n        if (typeof content == 'string') {\n            // TODO: decrypt jwt kp\n            log.logDebug('get cached jwt kp:');\n            log.logDebug(content);\n            let strKeyPairInfo = (0, safejson_1.safeJsonParse)(content);\n            log.logDebug('save jwt kp');\n            log.logDebug(strKeyPairInfo);\n            var keyPair = {\n                publicKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.publicKey),\n                secretKey: (0, utils_1.hexToByteArray)(strKeyPairInfo.secretKey)\n            };\n            return keyPair;\n        }\n        else {\n            return (0, jwt_1.generateKeyPair)();\n        }\n    }\n    isTopicPublicKeyExist(topicId) {\n        log.logDebug(`isTopicPublicKeyExist  ===> ${topicId}`);\n        return this.sessionCryptoInfoMap.get(topicId);\n    }\n    makeJWT(timestampStr) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, jwt_1.signJWT)(timestampStr, jwtconstants_1.OKXCONNECTOR_JWT_WALLET_SIDE, jwtconstants_1.OKXCONNECTOR_JWT_TTL, // 24h\n            this.jwtKeyPair);\n        });\n    }\n    parseInternalMsg(internalMsg) {\n        try {\n            let internalObj = (0, safejson_1.safeJsonParse)(internalMsg);\n            let origin = internalObj['ivur-igbfft-ptjip'];\n            if (origin && origin.length > 0) {\n                let originContent = (0, utils_2.base64decode)(origin, true);\n                return originContent.toString();\n            }\n        }\n        catch (error) {\n            log.logError('parse internal msg', error);\n        }\n    }\n    updateClientId(topic, clientId) {\n        let sessionInfo = this.sessionCryptoInfoMap.get(topic);\n        (0, log_1.logDebug)('updateClientId', sessionInfo, topic, clientId);\n        if (sessionInfo && clientId && clientId.length > 0) {\n            if (sessionInfo.cid) {\n                // check\n                let lastCheck = (0, utils_1.getLastSixMd5Hash)(clientId);\n                if (sessionInfo.cid == lastCheck) {\n                    sessionInfo.dappPublicKey = clientId;\n                }\n                else {\n                    log.logError('cid check failed', sessionInfo, topic, clientId);\n                }\n            }\n            else {\n                sessionInfo.dappPublicKey = clientId;\n            }\n            // \n            this.syncCacheSessionInfo();\n        }\n        return false;\n    }\n    parsePackage(topic_1, input_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, input, ignoreACK = false) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;\n            this.events.emit(input.id, input);\n            // emit event\n            let sessionInfo = this.sessionCryptoInfoMap.get(topic);\n            log.logDebug('get sessionInfo for decrypt topic:', topic);\n            log.logDebug('get sessionInfo for decrypt:', input.id, topic, sessionInfo, this.sessionCryptoInfoMap);\n            if (sessionInfo && input.params.data) {\n                if ((_a = input.params.data) === null || _a === void 0 ? void 0 : _a.message) {\n                    // try parse internal message\n                    if ((_b = input.params.data) === null || _b === void 0 ? void 0 : _b.isInternalData) {\n                        let inner_message = (_c = input.params.data) === null || _c === void 0 ? void 0 : _c.message;\n                        let inner_topic = (_d = input.params.data) === null || _d === void 0 ? void 0 : _d.topic;\n                        let originContent = this.parseInternalMsg(inner_message);\n                        (0, log_1.logDebug)('parse internal origin: ', originContent);\n                        if (originContent && originContent.length > 0) {\n                            this.communicateEvents.emit(\"origin\", originContent, inner_topic);\n                        }\n                    }\n                    else {\n                        // try parse message base64\n                        try {\n                            let message = (_e = input.params.data) === null || _e === void 0 ? void 0 : _e.message;\n                            if (message.trimStart().startsWith('{')) {\n                                let messageObj = (0, safejson_1.safeJsonParse)(message);\n                                if (messageObj.method) {\n                                    if (messageObj.method == 'session_info') {\n                                        let sessionInfoString = messageObj.params.sessionInfo;\n                                        let base64Content = (0, utils_2.base64decode)(sessionInfoString, false);\n                                        (0, log_1.logDebug)(\"wallet connection manager requset base64Content:\", base64Content);\n                                        (0, log_1.logDebug)(\"base64Content:\" + base64Content);\n                                        let inner_connection = base64Content.toObject();\n                                        this.updateClientId(topic, inner_connection.clientId);\n                                    }\n                                    (0, log_1.logDebug)('<<< parse raw msg:', topic, messageObj);\n                                    this.communicateEvents.emit(topic, message);\n                                }\n                            }\n                            else {\n                                let message = sessionInfo.crypto.decryptWallet((_f = input.params.data) === null || _f === void 0 ? void 0 : _f.message, sessionInfo.dappPublicKey);\n                                (0, log_1.logDebug)('<<< receive msg:', topic, message);\n                                this.communicateEvents.emit(topic, message);\n                            }\n                        }\n                        catch (error) {\n                            let message = sessionInfo.crypto.decryptWallet((_g = input.params.data) === null || _g === void 0 ? void 0 : _g.message, sessionInfo.dappPublicKey);\n                            (0, log_1.logDebug)('<<< receive msg:', topic, message);\n                            this.communicateEvents.emit(topic, message);\n                        }\n                    }\n                }\n                else {\n                }\n            }\n            // send back ACK\n            if (!ignoreACK) {\n                yield this.sendACK(input.id, true);\n                if (topic) {\n                    let inputObj = input;\n                    if ((_j = (_h = inputObj.params) === null || _h === void 0 ? void 0 : _h.data) === null || _j === void 0 ? void 0 : _j.messageId) {\n                        this.refreshPackageId();\n                        yield this.sendReceive(this.packageId.toString(), (_l = (_k = inputObj.params) === null || _k === void 0 ? void 0 : _k.data) === null || _l === void 0 ? void 0 : _l.messageId, topic);\n                    }\n                }\n            }\n        });\n    }\n    recovrySessionInfoFromCache() {\n        // get topic ids and keys from session\n        // WalletConnectionCryptoCacheMap\n        // {[topicId]: {cryptoKeypair: {publicKey:string, secretKey:string}, dappPublicKey:clientId}}\n        let jsonStr = this.connectStorage.getAndDecrypt(walletConnectionConstants_1.WalletConnectionManagerTopicInfoCacheKey);\n        log.logDebug('get cached sessionInfos:', jsonStr);\n        if (jsonStr) {\n            let cacheMap = (0, safejson_1.safeJsonParse)(jsonStr);\n            for (let topicId in cacheMap) {\n                let topicItem = cacheMap[topicId];\n                log.logDebug('make topicItem:', topicItem);\n                let cryptoItem = {\n                    topic: topicId,\n                    crypto: new crypto_1.SessionCrypto({\n                        publicKey: topicItem.cryptoKeyPair.publicKey,\n                        secretKey: topicItem.cryptoKeyPair.secretKey\n                    }),\n                    dappPublicKey: topicItem.dappPublicKey,\n                    cid: topicItem.cid\n                };\n                this.sessionCryptoInfoMap.set(topicId, cryptoItem);\n            }\n        }\n        log.logDebug('get cached sessionInfos map:', this.sessionCryptoInfoMap);\n    }\n    syncCacheSessionInfo() {\n        let cacheMap = {};\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            log.logDebug('for each Keys', topicId);\n            if (cryptoItem) {\n                cacheMap[topicId] = {\n                    cryptoKeyPair: cryptoItem.crypto.stringifyKeypair(),\n                    dappPublicKey: cryptoItem.dappPublicKey,\n                    cid: cryptoItem.cid\n                };\n            }\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(cacheMap);\n        log.logDebug('sync cache sessionInfos:', jsonData);\n        this.connectStorage.encryptStoreMsg(jsonData, walletConnectionConstants_1.WalletConnectionManagerTopicInfoCacheKey);\n    }\n    cacheSessionInfo(topic, sessionInfo, sync = true) {\n        let dappPublicKey = sessionInfo.dappPublicKey;\n        // 1. search dapp public related topic ids\n        let duplicatedTopics = [];\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            log.logDebug('for each Keys', topicId);\n            if (cryptoItem.dappPublicKey == dappPublicKey) {\n                log.logDebug('duplicated dapp public key:', topicId, dappPublicKey);\n                duplicatedTopics.push(topicId);\n            }\n        }\n        for (let [topicId, cryptoItem] of this.sessionCryptoInfoMap) {\n            if (duplicatedTopics.includes(topicId)) {\n                this.sessionCryptoInfoMap.delete(topicId);\n            }\n        }\n        // discard useless topics\n        log.logDebug('cleaned connect session cache:', this.sessionCryptoInfoMap);\n        // 2. remove previous connected topic ids\n        // 3. write in current topic\n        this.sessionCryptoInfoMap.set(topic, sessionInfo);\n        // TODO: search domain info and then delete \n        log.logDebug('cache sessionInfo:', topic, sessionInfo, this.sessionCryptoInfoMap);\n        if (sync) {\n            this.syncCacheSessionInfo();\n        }\n        return duplicatedTopics;\n    }\n    // add and subscribe topic\n    appendTopic(topic, sessionPublicKey, cid) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)('4.1. get append Topic:', topic);\n            // 1. check if connected\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                if (!this.isLogined) {\n                    var error = new Error();\n                    error.message = \"connection is not logined\";\n                    error.name = \"append error\";\n                    // throw error\n                    reject(error);\n                    return;\n                }\n                // 2. subscribe topic and session public key\n                let cryptoItem = {\n                    topic: topic,\n                    crypto: new crypto_1.SessionCrypto(),\n                    dappPublicKey: sessionPublicKey ? sessionPublicKey : \"\",\n                    cid: cid\n                };\n                let duplicatedTopics = this.cacheSessionInfo(topic, cryptoItem, false);\n                // make sure cache session info before subscribe\n                yield this.subscribeTopics(Array.from([topic]));\n                this.refreshPackageId();\n                log.logDebug(`5. subscribe callback then fetch append message: ${this.packageId}, ${topic}`);\n                log.reportLog(`5. subscribe callback then fetch append message`);\n                const timeF = new Date().getTime();\n                (0, log_1.logDebug)(\"Append --subscribe callback->\", timeF - this.timeLog);\n                resolve(duplicatedTopics);\n            }));\n        });\n    }\n    confirmAppendingTopics() {\n        this.syncCacheSessionInfo();\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.timeLog = new Date().getTime();\n            (0, log_1.logDebug)(\"[Wallet] ConnectTime---enter->\", this.timeLog);\n            log.reportLog('wallet connect connect called');\n            // 0. get cached topics and infos\n            let timestampStr = Date.now().toString();\n            var jwtToken = yield this.makeJWT(timestampStr);\n            log.logDebug(`generate jwt token: ${jwtToken}`);\n            this.connectStorage.saveContent(jwtToken, 'jwt');\n            this.recovrySessionInfoFromCache();\n            // 1.\n            return new Promise((resolve, reject) => {\n                // 1. when websocket opened\n                this.inLogin = true;\n                this.connector.onOpen(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug(`1. connector on open`);\n                    log.reportLog('1. wallet connect connect on open');\n                    const timeOne = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---open->\", timeOne - this.timeLog);\n                    //2. send jwt to login\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when login');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // throw error\n                            reject(error);\n                        }\n                        else {\n                            this.isLogined = true;\n                            resolve();\n                            // 3. subscribe cached topics\n                            log.logDebug('3. subscribe cached topics', this.sessionCryptoInfoMap);\n                            log.reportLog('3. wallet connect connect subscribe cached topics');\n                            if (this.sessionCryptoInfoMap.size > 0) {\n                                yield this.subscribeTopics(Array.from(this.sessionCryptoInfoMap.keys()));\n                            }\n                        }\n                    }));\n                    log.logDebug(`2. login called`);\n                    log.reportLog('2. wallet connect login called');\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        return yield this.connector.connect();\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_LOGIN,\n                        params: {\n                            token: jwtToken\n                        }\n                    });\n                }));\n                this.connector.connect().catch((err) => {\n                    (0, log_1.logDebug)('WalletConnectionManager connect error', err);\n                    reject(err);\n                });\n                // add callback\n                this.connector.addPackageParse((event) => {\n                    var _a, _b;\n                    log.logDebug(`connect: parse package`);\n                    log.logDebug(event);\n                    if (!(\"params\" in event) || !(\"data\" in event[\"params\"])) {\n                        this.parsePackage(\"\", event, true);\n                        return;\n                    }\n                    // ignore receive echo\n                    if ((_a = event.params.data) === null || _a === void 0 ? void 0 : _a.topic) {\n                        this.parsePackage((_b = event.params.data) === null || _b === void 0 ? void 0 : _b.topic, event, event.method === commands_1.CONNECT_METHOD_RECEIVE);\n                    }\n                });\n                // this.connector.addListener(safeJsonStringify(event), (rawMsg: string)=> {\n                //    rawMsg = rawMsg.replace(/'/g, '\"')\n                //    log.logDebug(`addListener ===> ${rawMsg}`)\n                //    if (typeof rawMsg !== 'undefined') {\n                //       var msgObj = safeJsonParse(rawMsg)\n                //       var msg = msgObj.message\n                //       let crypto = \n                //       var result = this.crypto.decrypt(msg, this.connectedWalletPK)\n                //       log.logDebug(`addListener ===> ${result}`)\n                //       return result\n                //    }\n                //    return undefined\n                // }, ()=>{\n                //    // emit success\n                // }, ()=>{\n                //    // emit fail\n                // })\n            });\n        });\n    }\n    // 获取对应topic session下的钱包公钥\n    // 在返回approve时需要填充到clientId字段中\n    getSessionPublicKey(topicId) {\n        if (this.isTopicPublicKeyExist(topicId)) {\n            let item = this.sessionCryptoInfoMap.get(topicId);\n            if (item) {\n                return (0, utils_1.toHexString)(item.crypto.keyPair.publicKey);\n            }\n        }\n        return undefined;\n    }\n    getCurrentCachedTopicIdList() {\n        return Array.from(this.sessionCryptoInfoMap.keys());\n    }\n    disconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            yield this.connector.disconnect();\n            //clean cached topic\n            //如果是恢复连接，就不清理解密public key\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_TOKEN_CACHE);\n            if (!fromRestore) {\n                this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE);\n            }\n        });\n    }\n    send(topic_1, msg_1) {\n        return __awaiter(this, arguments, void 0, function* (topic, msg, needPublicKey = false, ttl = constants_1.OKXCONNECTOR_MESSAGE_TTL, useRaw = false) {\n            var _a, _b;\n            // make send msg payload\n            log.logDebug(`message send =====> ${msg}`);\n            if (!this.isTopicPublicKeyExist(topic)) {\n                // channel not ready\n                throw new Error('connection not finish');\n            }\n            let connectedDappPK = (_a = this.sessionCryptoInfoMap.get(topic)) === null || _a === void 0 ? void 0 : _a.dappPublicKey;\n            let cryptoObject = (_b = this.sessionCryptoInfoMap.get(topic)) === null || _b === void 0 ? void 0 : _b.crypto;\n            let messageObj = undefined;\n            if (useRaw) {\n                messageObj = {\n                    message: msg,\n                };\n            }\n            if (cryptoObject && connectedDappPK && !useRaw) {\n                let message = cryptoObject.encryptWallet(msg, connectedDappPK);\n                messageObj = {\n                    message: message,\n                };\n            }\n            if (messageObj) {\n                if (needPublicKey && cryptoObject) {\n                    messageObj.clientId = (0, utils_1.toHexString)(cryptoObject.keyPair.publicKey);\n                    // let privateKey = toHexString(cryptoObject.keyPair.secretKey)\n                    // log.logDebug(`message send use dapp publicKey =====> ${connectedDappPK}`)\n                    // log.logDebug(`message send use publicKey =====> ${messageObj.clientId}`)\n                    // log.logDebug(`message send use secretKey =====> ${privateKey}`)\n                }\n                this.refreshPackageId();\n                const payload = {\n                    id: this.packageId.toString(),\n                    method: commands_1.CONNECT_METHOD_PUBLISH,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    params: {\n                        message: {\n                            topic: topic,\n                            message: (0, safejson_1.safeJsonStringify)(messageObj),\n                            ttl: ttl\n                        }\n                    } // crypted\n                };\n                this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                    // ack\n                    if (rsp && rsp.error) {\n                        log.logError(`@${new Date().toUTCString()} >>> failed when send msg`);\n                    }\n                    else if (rsp && !rsp.error) {\n                        log.logDebug(`CONNECTION @[${new Date().toUTCString()}] >>> send msg with id ${this.packageId} successed`);\n                    }\n                }));\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n                return this.packageId;\n            }\n        });\n    }\n    sendACK(msgId_1, success_1) {\n        return __awaiter(this, arguments, void 0, function* (msgId, success, reason = undefined) {\n            if (success === true) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    result: true\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n            else if (reason) {\n                const payload = {\n                    id: msgId,\n                    jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                    error: {\n                        code: reason.code, //int\n                        message: reason.message\n                    }\n                };\n                yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                    log.logDebug('CONNECT: reconnect before send');\n                    return yield this.connector.connect();\n                }), payload);\n            }\n        });\n    }\n    // send receive\n    sendReceive(msgId, messageId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_RECEIVE,\n                params: {\n                    data: {\n                        messageId: messageId,\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendUnsubscribe(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO: make disconnect payload\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), {\n                id: this.packageId.toString(),\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_UNSUB,\n                params: {\n                    topic: topic\n                }\n            });\n            // remove topicId\n            this.sessionCryptoInfoMap.delete(topic);\n            this.syncCacheSessionInfo();\n        });\n    }\n    // send receive\n    // 1. fetch all \n    // 2. send back receive\n    // 3. check has more, if so, repeat from 1st step\n    sendFetchAndConsumeMessages(msgId, topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(msgId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic == topic) {\n                                let messageId = msg.messageId;\n                                yield this.connector.getMsgPayloadFromHistory(msg);\n                                // send receive command to relay server\n                                this.refreshPackageId();\n                                yield this.sendReceive(this.packageId.toString(), messageId, topic);\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendFetchAndConsumeMessages(this.packageId.toString(), topic);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: msgId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_FETCHMSG,\n                params: {\n                    data: {\n                        topic: topic\n                    }\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                return yield this.connector.connect();\n            }), payload);\n        });\n    }\n    sendBatchFetchAndConsumeMessages(packageId, topicIdList) {\n        return __awaiter(this, void 0, void 0, function* () {\n            //1. send fetch\n            this.events.once(packageId, (fetchedMessages) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                //2. consume received messages\n                if (fetchedMessages.result) {\n                    var hasMore = fetchedMessages.result.hasMore;\n                    var receivedMsgs = fetchedMessages.result.data;\n                    if (receivedMsgs) {\n                        for (let i = 0; i < receivedMsgs.length; i++) {\n                            let msg = receivedMsgs[i];\n                            if (msg && msg.topic) {\n                                let messageId = msg.messageId;\n                                yield this.connector.getMsgPayloadFromHistory(msg);\n                                // send receive command to relay server\n                                this.refreshPackageId(i);\n                                yield this.sendReceive(this.packageId.toString(), messageId, msg.topic);\n                            }\n                        }\n                    }\n                    // 3. check hasmore\n                    if (hasMore) {\n                        this.refreshPackageId();\n                        yield this.sendBatchFetchAndConsumeMessages(this.packageId.toString(), topicIdList);\n                    }\n                }\n                else {\n                    log.logDebug(`CONNECT: get error rsp ${(_a = fetchedMessages.error) === null || _a === void 0 ? void 0 : _a.code} : ${(_b = fetchedMessages.error) === null || _b === void 0 ? void 0 : _b.message}`);\n                }\n            }));\n            log.logDebug('5. send fetch more');\n            log.reportLog('5. send fetch more');\n            const timeFive = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime---5->\", timeFive - this.timeLog);\n            const payload = {\n                id: packageId,\n                jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                method: commands_1.CONNECT_METHOD_BATCH_FETCHMSG,\n                params: {\n                    topics: topicIdList,\n                    withInternalData: true\n                }\n            };\n            yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                log.logDebug('CONNECT: reconnect before send');\n                yield this.connector.connect();\n            }), payload);\n        });\n    }\n    cleanCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.connectStorage.clearCache();\n        });\n    }\n    saveSessionContent(key, data) {\n        if (!data) {\n            this.connectStorage.clearCache(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        }\n        let jsonData = (0, safejson_1.safeJsonStringify)(data);\n        this.connectStorage.encryptStoreMsg(jsonData, storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n    }\n    getSessionContent(key) {\n        let jsonStr = this.connectStorage.getAndDecrypt(storageconstants_1.OKXCONNECTOR_SESSION_PREFIX_KEY + key);\n        if (jsonStr) {\n            let object = (0, safejson_1.safeJsonParse)(jsonStr);\n            return object;\n        }\n        return undefined;\n    }\n    // subscribe then fetch messages for each topics\n    subscribeTopics(topicIdList) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, log_1.logDebug)(\"4. topicid list\", topicIdList);\n            log.reportLog(\"4. topicid list\");\n            this.refreshPackageId();\n            const timeF = new Date().getTime();\n            (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let finishCount = 0;\n                //3. send subscribe\n                for (let idx = 0; idx < topicIdList.length; ++idx) {\n                    let topicId = topicIdList[idx];\n                    this.refreshPackageId(idx);\n                    this.events.once(this.packageId.toString(), (rsp) => __awaiter(this, void 0, void 0, function* () {\n                        // ack\n                        if (rsp && rsp.error) {\n                            log.logError('failed when subscribe');\n                            yield this.connector.disconnect();\n                            var error = new Error();\n                            error.message = rsp.error.message;\n                            error.name = rsp.error.code.toString();\n                            // reject(error)\n                            finishCount += 1;\n                            if (finishCount == topicIdList.length) {\n                                resolve();\n                            }\n                        }\n                        this.refreshPackageId(idx);\n                        const timeF = new Date().getTime();\n                        (0, log_1.logDebug)(\"ConnectTime--subscribe callback->\", timeF - this.timeLog);\n                        finishCount += 1;\n                        if (finishCount == topicIdList.length) {\n                            // 4. fetch messages\n                            log.logDebug(`5. send fetch msg: ${this.packageId}, ${topicId}`);\n                            yield this.sendBatchFetchAndConsumeMessages(this.packageId.toString(), topicIdList);\n                            resolve();\n                        }\n                    }));\n                    log.logDebug(`3. login callback then send subscribe: ${this.packageId}, ${topicId}`);\n                    log.reportLog('3. login callback then send subscribe');\n                    const timeTh = new Date().getTime();\n                    (0, log_1.logDebug)(\"ConnectTime---login callback->\", timeTh - this.timeLog);\n                    yield this.connector.send(() => __awaiter(this, void 0, void 0, function* () {\n                        log.logDebug('CONNECT: reconnect before send');\n                        return yield this.connector.connect();\n                    }), {\n                        id: this.packageId.toString(),\n                        jsonrpc: constants_1.CONNECT_JSONRPC_VER,\n                        method: commands_1.CONNECT_METHOD_SUB,\n                        params: {\n                            topic: topicId\n                        }\n                    });\n                }\n            }));\n        });\n    }\n}\nexports.WalletConnectionManager = WalletConnectionManager;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AppwalletConnector = void 0;\nconst ws_connector_1 = require(\"./ws-connector\");\nconst iconnector_1 = require(\"./iconnector\");\nconst utils_1 = require(\"../utils\");\nconst constants_1 = require(\"../protocol/constants\");\nclass AppwalletConnector extends ws_connector_1.WsConnector {\n    static getConnector() {\n        if (!this.instance) {\n            this.instance = new AppwalletConnector();\n        }\n        return this.instance;\n    }\n    constructor() {\n        super();\n        this.walletName = 'OKX App Wallet';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectApp';\n    }\n    getTag() {\n        return iconnector_1.OKX_APP_WALLET;\n    }\n    openWallet(engineConnectInfo) {\n        var _a;\n        if (engineConnectInfo) {\n            var connectRequest = engineConnectInfo.connectRequest;\n            var tonConnectRequest = engineConnectInfo.tonConnectRequest;\n            if (!tonConnectRequest) {\n                connectRequest = tonConnectRequest;\n            }\n            if ((0, utils_1.useShortLink)()) {\n                var shortUniversalLink = (0, utils_1.getOKXLink)(connectRequest);\n                (0, utils_1.openOKXUniversalLink)(shortUniversalLink);\n            }\n            else {\n                var appConnectEncodeParams = (0, utils_1.encodeConnectParams)(Object.assign(Object.assign({}, connectRequest), { redirect: (_a = engineConnectInfo.redirect) !== null && _a !== void 0 ? _a : \"none\" }));\n                var appDeepLink = (0, utils_1.getAppWalletDeepLink)(appConnectEncodeParams);\n                (0, utils_1.openOKXDeeplinkWithFallback)(appDeepLink);\n            }\n        }\n        else {\n            if ((0, utils_1.isOS)('android')) {\n                (0, utils_1.openDeeplinkWithFallback)(constants_1.stackDeepLink, () => { });\n            }\n            else {\n                (0, utils_1.openLinkBlank)(constants_1.standardUniversalLink);\n            }\n        }\n    }\n}\nexports.AppwalletConnector = AppwalletConnector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_TG_WALLET = exports.OKX_APP_WALLET = exports.OKX_INJECT_WALLET = void 0;\nexports.OKX_INJECT_WALLET = \"okx_inject_wallet\";\nexports.OKX_APP_WALLET = \"okx_app_wallet\";\nexports.OKX_TG_WALLET = \"okx_tg_wallet\";\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OkxwalletInjectConnector = exports.WsConnector = exports.TgwalletConnector = exports.InjectConnector = exports.OKX_INJECT_WALLET = exports.OKX_APP_WALLET = exports.OKX_TG_WALLET = exports.AppwalletConnector = void 0;\nvar appwallet_connector_1 = require(\"./appwallet-connector\");\nObject.defineProperty(exports, \"AppwalletConnector\", { enumerable: true, get: function () { return appwallet_connector_1.AppwalletConnector; } });\nvar iconnector_1 = require(\"./iconnector\");\nObject.defineProperty(exports, \"OKX_TG_WALLET\", { enumerable: true, get: function () { return iconnector_1.OKX_TG_WALLET; } });\nObject.defineProperty(exports, \"OKX_APP_WALLET\", { enumerable: true, get: function () { return iconnector_1.OKX_APP_WALLET; } });\nObject.defineProperty(exports, \"OKX_INJECT_WALLET\", { enumerable: true, get: function () { return iconnector_1.OKX_INJECT_WALLET; } });\nvar inject_connector_1 = require(\"./inject-connector\");\nObject.defineProperty(exports, \"InjectConnector\", { enumerable: true, get: function () { return inject_connector_1.InjectConnector; } });\nvar tgwallet_connector_1 = require(\"./tgwallet-connector\");\nObject.defineProperty(exports, \"TgwalletConnector\", { enumerable: true, get: function () { return tgwallet_connector_1.TgwalletConnector; } });\nvar ws_connector_1 = require(\"./ws-connector\");\nObject.defineProperty(exports, \"WsConnector\", { enumerable: true, get: function () { return ws_connector_1.WsConnector; } });\nvar okxwallet_inject_connector_1 = require(\"./okxwallet-inject-connector\");\nObject.defineProperty(exports, \"OkxwalletInjectConnector\", { enumerable: true, get: function () { return okxwallet_inject_connector_1.OkxwalletInjectConnector; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InjectConnector = void 0;\nconst protocol_1 = require(\"../protocol\");\nconst utils_1 = require(\"../utils\");\nconst provider_1 = require(\"../inject/provider\");\nconst iconnector_1 = require(\"./iconnector\");\nconst SolProvider_1 = require(\"../inject/provider/SolProvider\");\nconst wallet_info_1 = require(\"../protocol/connect/wallet-info\");\nconst inject_1 = require(\"../inject\");\nconst AptosPrivider_1 = require(\"../inject/provider/AptosPrivider\");\nclass InjectConnector {\n    constructor() {\n        this.disconnectListener = [];\n        this.providerMap = new Map();\n        this.walletName = \"\";\n        this.walletNameKey = '';\n        this.enable = true;\n        this.providerMap.set(protocol_1.NameSpaceKeyEip155, new provider_1.Eip155Provider());\n        this.providerMap.set(protocol_1.NameSpaceKeySOL, new SolProvider_1.SolProvider());\n        this.providerMap.set(protocol_1.NameSpaceKeyAptos, new AptosPrivider_1.AptosProvider());\n    }\n    getInjectProvider(nameSpace) {\n        for (const [mapKey, value] of this.providerMap.entries()) {\n            if (nameSpace.includes(mapKey)) {\n                return value;\n            }\n        }\n        return undefined;\n    }\n    openWallet(engineConnectInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b;\n            (0, utils_1.logDebug)(\"InjectEngine connect begin:\", JSON.stringify(engineConnectInfo));\n            if (!engineConnectInfo) {\n                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR);\n            }\n            var universalConnectRequest = engineConnectInfo.connectRequest;\n            try {\n                if (window && window.okxwallet) {\n                    if (universalConnectRequest.requests) {\n                        let requestAccounts = universalConnectRequest.requests\n                            .find(item => item.name === \"requestAccounts\");\n                        let nameSpaceArr = [...((_a = requestAccounts.requiredNamespaces) !== null && _a !== void 0 ? _a : []), ...((_b = requestAccounts.optionalNamespaces) !== null && _b !== void 0 ? _b : [])];\n                        let result = {\n                            method: \"connect\",\n                            requestId: universalConnectRequest.requestId,\n                            payload: {\n                                wallet: {\n                                    platform: \"ios\",\n                                    appName: wallet_info_1.OKXInjectWalletName,\n                                    appVersion: \"0\",\n                                    maxProtocolVersion: 1,\n                                },\n                                responses: []\n                            },\n                        };\n                        let responseItem = {\n                            name: \"requestAccounts\",\n                            accounts: [],\n                        };\n                        result.payload.responses.push(responseItem);\n                        yield window.okxwallet.disconnect();\n                        var walletInfo = [];\n                        if ((0, utils_1.isMobileUserAgent)()) {\n                            var requiredNamespaces = engineConnectInfo.connectRequest.requests[0].requiredNamespaces;\n                            var optionalNamespaces = engineConnectInfo.connectRequest.requests[0].optionalNamespaces;\n                            walletInfo = (yield window.okxwallet.requestWallets(true, {\n                                requiredNamespaces: requiredNamespaces,\n                                optionalNamespaces: optionalNamespaces\n                            }));\n                        }\n                        else {\n                            walletInfo = (yield window.okxwallet.requestWallets(true));\n                        }\n                        let walletInfoFirst = walletInfo[0];\n                        (0, utils_1.logDebug)(\"InjectEngine connect connectAccounts:\", JSON.stringify(walletInfoFirst));\n                        if (nameSpaceArr && walletInfoFirst && walletInfoFirst.address) {\n                            for (let i = 0; i < nameSpaceArr.length; i++) {\n                                let item = nameSpaceArr[i];\n                                let addresses = [];\n                                let itemChains = item.chains;\n                                switch (item.namespace) {\n                                    case protocol_1.NameSpaceKeyEip155:\n                                        {\n                                            itemChains.forEach((chainStr) => {\n                                                let currentChain = (0, utils_1.getChainId)(chainStr);\n                                                let selectedAddress = walletInfoFirst.address.find((addressItem) => {\n                                                    return addressItem.chainId === currentChain && addressItem.coinType === 60;\n                                                });\n                                                if (selectedAddress) {\n                                                    addresses.push(chainStr + \":\" + selectedAddress.address);\n                                                }\n                                            });\n                                            if (addresses && addresses.length > 0) {\n                                                let nameSpaceResponse = {\n                                                    namespace: item.namespace,\n                                                    addresses: addresses,\n                                                    methods: [...inject_1.Eip55Methods],\n                                                    extra: {}\n                                                };\n                                                responseItem.accounts.push(nameSpaceResponse);\n                                            }\n                                        }\n                                        break;\n                                    case protocol_1.NameSpaceKeySOL:\n                                        {\n                                            itemChains.forEach((chainStr) => {\n                                                let selectedAddress = walletInfoFirst.address.find((addressItem) => {\n                                                    return addressItem.chainId === \"501\" && addressItem.coinType === 501;\n                                                });\n                                                if (selectedAddress) {\n                                                    addresses.push(chainStr + \":\" + selectedAddress.address);\n                                                }\n                                            });\n                                            if (addresses && addresses.length > 0) {\n                                                let nameSpaceResponse = {\n                                                    namespace: item.namespace,\n                                                    addresses: addresses,\n                                                    methods: [...inject_1.SOLANAMethods],\n                                                    extra: {}\n                                                };\n                                                responseItem.accounts.push(nameSpaceResponse);\n                                            }\n                                        }\n                                        break;\n                                    case protocol_1.NameSpaceKeyAptos:\n                                        {\n                                            itemChains.forEach((chainStr) => {\n                                                let selectedAddress = walletInfoFirst.address.find((addressItem) => {\n                                                    return addressItem.chainId === \"637\" && addressItem.coinType === 637;\n                                                });\n                                                if (selectedAddress) {\n                                                    addresses.push(chainStr + \":\" + selectedAddress.address);\n                                                }\n                                            });\n                                            if (addresses && addresses.length > 0) {\n                                                let nameSpaceResponse = {\n                                                    namespace: item.namespace,\n                                                    addresses: addresses,\n                                                    methods: [...inject_1.AptosMethods],\n                                                    extra: {}\n                                                };\n                                                responseItem.accounts.push(nameSpaceResponse);\n                                            }\n                                        }\n                                        break;\n                                    default:\n                                        break;\n                                }\n                            }\n                            if (responseItem.accounts.length === 0) {\n                                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"connect connectAccounts is null\");\n                            }\n                        }\n                        else {\n                            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"connect requestWallets is null\");\n                        }\n                        if (this.connectResultListener) {\n                            this.connectResultListener(result, this);\n                        }\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR);\n                }\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n    disconnect() {\n    }\n    getRequestId() {\n        const requestId = Date.now().toString();\n        (0, utils_1.logDebug)('InjectEngine ==>> getRequestId ==>', requestId);\n        return requestId;\n    }\n    send(request, requestAnswer) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                (0, utils_1.logDebug)(\"InjectEngine send  > request:\", (0, utils_1.safeJsonStringify)(request));\n                let newRequest = request;\n                if (newRequest.method === 'disconnect') {\n                    //todu\n                    this.disconnect();\n                    (_a = requestAnswer.onAck) === null || _a === void 0 ? void 0 : _a.call(requestAnswer);\n                    return;\n                }\n                const injectProvider = this.getInjectProvider(newRequest.chainId);\n                if (injectProvider) {\n                    injectProvider.send(newRequest).then(result => {\n                        var _a;\n                        (0, utils_1.logDebug)(\"InjectEngine ==>> send > result:\", result);\n                        (_a = requestAnswer.resolve) === null || _a === void 0 ? void 0 : _a.call(requestAnswer, result);\n                    }).catch(error => {\n                        var _a;\n                        let code = error.code;\n                        if (code === 4001) {\n                            code = protocol_1.OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR;\n                        }\n                        let errorResponse = {\n                            requestId: this.getRequestId(),\n                            method: request.method,\n                            error: {\n                                code: code,\n                                message: error.message\n                            }\n                        };\n                        (0, utils_1.logDebug)(\"InjectEngine ==>> send > errorResponse:\", JSON.stringify(errorResponse));\n                        (_a = requestAnswer.resolve) === null || _a === void 0 ? void 0 : _a.call(requestAnswer, errorResponse);\n                    });\n                    return;\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"InjectEngine ==>> send  ===> error:\", error);\n                return Promise.reject(error);\n            }\n        });\n    }\n    clearData() {\n        this.connectResultListener = undefined;\n    }\n    addDisconnectListener(disconnecter) {\n        this.disconnectListener.push(disconnecter);\n    }\n    setOnConnectResultListener(connectResultListener) {\n        this.connectResultListener = connectResultListener;\n    }\n    getTag() {\n        return iconnector_1.OKX_INJECT_WALLET;\n    }\n    toJSON() {\n        return \"inject-connector\";\n    }\n}\nexports.InjectConnector = InjectConnector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OkxwalletInjectConnector = void 0;\nconst inject_connector_1 = require(\"./inject-connector\");\nclass OkxwalletInjectConnector extends inject_connector_1.InjectConnector {\n    static getConnector() {\n        if (!this.instance) {\n            this.instance = new OkxwalletInjectConnector();\n        }\n        return this.instance;\n    }\n    constructor() {\n        super();\n        this.walletName = 'Connect OKX Wallet';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectInject';\n    }\n}\nexports.OkxwalletInjectConnector = OkxwalletInjectConnector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TgwalletConnector = void 0;\nconst ws_connector_1 = require(\"./ws-connector\");\nconst iconnector_1 = require(\"./iconnector\");\nconst utils_1 = require(\"../utils\");\nclass TgwalletConnector extends ws_connector_1.WsConnector {\n    static getConnector() {\n        if (!this.instance) {\n            this.instance = new TgwalletConnector();\n        }\n        return this.instance;\n    }\n    constructor() {\n        super();\n        this.walletName = 'OKX Mini Wallet';\n        this.walletNameKey = 'walletModal.mobileConnectionModal.connectMini';\n    }\n    getTag() {\n        return iconnector_1.OKX_TG_WALLET;\n    }\n    openWallet(engineConnectInfo) {\n        var _a;\n        var encodeTGParams;\n        if (engineConnectInfo && engineConnectInfo.connectRequest) {\n            encodeTGParams = (0, utils_1.encodeTWAConnectURLParams)(Object.assign(Object.assign({}, engineConnectInfo.connectRequest), { redirect: \"none\" }));\n        }\n        var tgUrl = (0, utils_1.getTelegramWalletTWAUrl)(encodeTGParams, (_a = engineConnectInfo === null || engineConnectInfo === void 0 ? void 0 : engineConnectInfo.tmaReturnUrl) !== null && _a !== void 0 ? _a : \"back\");\n        (0, utils_1.openOKXTMAWalletlinkWithFallback)(tgUrl);\n    }\n}\nexports.TgwalletConnector = TgwalletConnector;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WsConnector = void 0;\nconst safejson_1 = require(\"../utils/safejson\");\nconst log_1 = require(\"../utils/log\");\nclass WsConnector {\n    constructor() {\n        this.disconnectListener = [];\n        this.walletName = '';\n        this.walletNameKey = '';\n        this.enable = true;\n        this.pendingRequests = new Map();\n        // report api begin\n        (0, log_1.getDefaultReporter)().beginReport();\n    }\n    setConnectionManager(connectionManager) {\n        this.connectionManager = connectionManager;\n        this.connectionManager.addListener(\"sdk_response\", (event, msg) => {\n            var jsonResponse = (0, safejson_1.safeJsonParse)(msg);\n            (0, log_1.logDebug)(`Engine ==>> addListener ==> success ==> ${jsonResponse}`);\n            this.handleResponse(event, jsonResponse);\n        }, function () {\n        });\n    }\n    setSessionConnectingListener(sessionConnectingListener) {\n        this.sessionConnectingListener = sessionConnectingListener;\n    }\n    addDisconnectListener(disconnecter) {\n        this.disconnectListener.push(disconnecter);\n    }\n    connectManagerDisconnect() {\n        return __awaiter(this, arguments, void 0, function* (fromRestore = false) {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.disconnect(fromRestore));\n        });\n    }\n    universalConnect(connectParams) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.disconnect(false));\n            try {\n                yield ((_b = this.connectionManager) === null || _b === void 0 ? void 0 : _b.connect());\n            }\n            catch (e) {\n                (0, log_1.logDebug)('Engine universalConnect error', e);\n                throw e;\n            }\n            (0, log_1.logDebug)('engin  universalConnect ==>> connectParams:', JSON.stringify(connectParams));\n            this.sendSession(connectParams);\n        });\n    }\n    openWallet(engineConnectInfo) {\n    }\n    sendSession(sessionInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            (0, log_1.logDebug)('[Connect] sendSession called:', sessionInfo);\n            const requestId = this.getRequestId();\n            let request = {\n                method: 'session_info',\n                params: { sessionInfo: sessionInfo }\n            };\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.sendRaw(JSON.stringify(Object.assign(Object.assign({}, request), { requestId: requestId }))));\n        });\n    }\n    bindRequestForPromise(requestId, resolve) {\n        this.pendingRequests.set(requestId, resolve);\n    }\n    send(request, requestAnswer, ttl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b;\n            (0, log_1.logDebug)('Engine ==>> send  request==>', JSON.stringify(request));\n            const requestId = this.getRequestId();\n            try {\n                let packageId = yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.send(JSON.stringify(Object.assign(Object.assign({}, request), { requestId: requestId })), ttl));\n                if (packageId) {\n                    (_b = this.connectionManager) === null || _b === void 0 ? void 0 : _b.events.once(packageId.toString(), (event) => {\n                        var _a;\n                        (0, log_1.logDebug)(`Engine ==> send => onAck => ${(0, safejson_1.safeJsonStringify)(event)}`);\n                        if (event && event.result) {\n                            (_a = requestAnswer.onAck) === null || _a === void 0 ? void 0 : _a.call(requestAnswer);\n                        }\n                    });\n                }\n                if (requestAnswer.resolve) {\n                    this.bindRequestForPromise(requestId, requestAnswer.resolve);\n                }\n            }\n            catch (e) {\n                return Promise.reject(e);\n            }\n        });\n    }\n    restoreconnect(sessionInfo, onConnectResult) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.restoreConnect(sessionInfo.topic));\n            onConnectResult(sessionInfo);\n        });\n    }\n    restoreconnectFromTopic(topic) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield ((_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.restoreConnect(topic));\n        });\n    }\n    getRequestId() {\n        const requestId = Date.now().toString();\n        (0, log_1.logDebug)('Engine ==>> getRequestId ==>', requestId);\n        return requestId;\n    }\n    handleResponse(event, response) {\n        (0, log_1.logDebug)(`Engine ==>> handleResponse_1  ======>response: ${(0, safejson_1.safeJsonStringify)(response)}`, event);\n        if (\"requestId\" in response) {\n            (0, log_1.logDebug)(\"Engine ==>> handleResponse_2  ===> in response\");\n            let requestId = response.requestId;\n            const resolve = this.pendingRequests.get(requestId);\n            if (resolve) {\n                (0, log_1.logDebug)(\"Engine ==>> handleResponse_3  ===> find resolve:\", resolve);\n                resolve(response);\n                // 从pendingRequests中删除这个Promise\n                this.pendingRequests.delete(requestId);\n            }\n            else {\n                (0, log_1.logDebug)(\"Engine ==>> handleResponse_3  ===> not find resolve:\");\n                if (response.method === 'connect') {\n                    if (this.connectResultListener) {\n                        this.connectResultListener(response, this);\n                    }\n                }\n                else if (response.method === \"disconnect\") {\n                    this.disconnectListener.forEach(listener => listener());\n                    this.disconnectListener = [];\n                    this.clearData();\n                }\n                else if (response.method === \"session_connecting\") {\n                    (0, log_1.logDebug)(\"Engine ==>> handleResponse_4  ===> sessionConnectingListener\");\n                    if (this.sessionConnectingListener) {\n                        (0, log_1.logDebug)(\"Engine ==>> handleResponse_4  ===> sessionConnectingListener not null\");\n                        this.sessionConnectingListener();\n                        this.sessionConnectingListener = undefined;\n                    }\n                }\n            }\n        }\n    }\n    getCurrentConnectionReady() {\n        var _a;\n        return (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getCurrentConnectionReady();\n    }\n    saveSessionContent(key, data) {\n        var _a;\n        (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.saveSessionContent(key, data);\n    }\n    getSessionContent(key) {\n        var _a;\n        return (_a = this.connectionManager) === null || _a === void 0 ? void 0 : _a.getSessionContent(key);\n    }\n    setOnConnectResultListener(connectResultListener) {\n        this.connectResultListener = connectResultListener;\n    }\n    getTag() {\n        return \"\";\n    }\n    toJSON() {\n        return \"ws-connector\";\n    }\n    clearData() {\n        this.pendingRequests.clear();\n    }\n}\nexports.WsConnector = WsConnector;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SessionCrypto = void 0;\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst utils_1 = require(\"../utils/utils\");\nclass SessionCrypto {\n    constructor(keyPair = undefined) {\n        this.nonceLength = 24;\n        this.sessionKeyPair = keyPair ? this.createKeypairFromString(keyPair) : this.createKeypair();\n    }\n    createKeypair() {\n        return tweetnacl_1.default.box.keyPair();\n    }\n    createKeypairFromString(keyPair) {\n        return {\n            publicKey: (0, utils_1.hexToByteArray)(keyPair.publicKey),\n            secretKey: (0, utils_1.hexToByteArray)(keyPair.secretKey),\n        };\n    }\n    createNonce() {\n        return tweetnacl_1.default.randomBytes(this.nonceLength);\n    }\n    get keyPair() {\n        return this.sessionKeyPair;\n    }\n    // dapp 加密:\n    // base64(hex（nonce+加密内容）)\n    encrypt(message, receiverPublicKey) {\n        const encodedMessage = new TextEncoder().encode(message);\n        const nonce = this.createNonce();\n        const encrypted = tweetnacl_1.default.box(encodedMessage, nonce, (0, utils_1.hexToByteArray)(receiverPublicKey), this.keyPair.secretKey);\n        let concatInfo = (0, utils_1.concatUint8Arrays)(nonce, encrypted);\n        var hexResult = (0, utils_1.toHexString)(concatInfo);\n        var encodedResult = new TextEncoder().encode(hexResult);\n        return (0, utils_1.base64encode)(encodedResult, false);\n    }\n    // 钱包加密内容\n    // 注意：没有中间hex的环节\n    // base64（nonce+加密内容)\n    encryptWallet(message, receiverPublicKey) {\n        const encodedMessage = new TextEncoder().encode(message);\n        const nonce = this.createNonce();\n        const encrypted = tweetnacl_1.default.box(encodedMessage, nonce, (0, utils_1.hexToByteArray)(receiverPublicKey), this.keyPair.secretKey);\n        let concatInfo = (0, utils_1.concatUint8Arrays)(nonce, encrypted);\n        return (0, utils_1.base64encode)(concatInfo, false);\n    }\n    // dapp 解密\n    // base64(split(nonce+加密内容))\n    decrypt(message, senderPublicKey) {\n        let base64Content = (0, utils_1.base64decode)(message, true);\n        let messageByteArray = base64Content.toUint8Array();\n        const [nonce, internalMessage] = (0, utils_1.splitToUint8Arrays)(messageByteArray, this.nonceLength);\n        const decrypted = tweetnacl_1.default.box.open(internalMessage, nonce, (0, utils_1.hexToByteArray)(senderPublicKey), this.keyPair.secretKey);\n        if (!decrypted) {\n            throw new Error(`Decryption error: \\n message: ${message.toString()} \\n sender pubkey: ${senderPublicKey.toString()} \\n keypair pubkey: ${(0, utils_1.toHexString)(this.keyPair.publicKey)} \\n keypair secretkey: ${(0, utils_1.toHexString)(this.keyPair.secretKey)}`);\n        }\n        return new TextDecoder().decode(decrypted);\n    }\n    // dapp 解密\n    // base64(hextoByte(split(nonce+加密内容)))\n    decryptWallet(message, senderPublicKey) {\n        let base64Content = (0, utils_1.base64decode)(message, true);\n        let messageByteArray = (0, utils_1.hexToByteArray)(base64Content.toString());\n        const [nonce, internalMessage] = (0, utils_1.splitToUint8Arrays)(messageByteArray, this.nonceLength);\n        const decrypted = tweetnacl_1.default.box.open(internalMessage, nonce, (0, utils_1.hexToByteArray)(senderPublicKey), this.keyPair.secretKey);\n        if (!decrypted) {\n            throw new Error(`Decryption error: \\n message: ${message.toString()} \\n sender pubkey: ${senderPublicKey.toString()} \\n keypair pubkey: ${(0, utils_1.toHexString)(this.keyPair.publicKey)} \\n keypair secretkey: ${(0, utils_1.toHexString)(this.keyPair.secretKey)}`);\n        }\n        return new TextDecoder().decode(decrypted);\n    }\n    stringifyKeypair() {\n        return {\n            publicKey: (0, utils_1.toHexString)(this.keyPair.publicKey),\n            secretKey: (0, utils_1.toHexString)(this.keyPair.secretKey)\n        };\n    }\n}\nexports.SessionCrypto = SessionCrypto;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./connect\"), exports);\n__exportStar(require(\"./protocol\"), exports);\n__exportStar(require(\"./utils\"), exports);\n__exportStar(require(\"./inject\"), exports);\n__exportStar(require(\"./connector\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AptosMethods = exports.SOLANAMethods = exports.Eip55Methods = void 0;\nexports.hasOKXInjectedProvider = hasOKXInjectedProvider;\nfunction hasOKXInjectedProvider() {\n    if (typeof getWindowProviderNamespace(\"okxwallet\") !== 'undefined') {\n        return true;\n    }\n    return false;\n}\nfunction getWindowProviderNamespace(namespace) {\n    const providerSearch = (provider, namespace) => {\n        const [property, ...path] = namespace.split('.');\n        const _provider = provider[property];\n        if (_provider) {\n            if (path.length === 0)\n                return _provider;\n            return providerSearch(_provider, path.join('.'));\n        }\n    };\n    if (typeof window !== 'undefined')\n        return providerSearch(window, namespace);\n}\nexports.Eip55Methods = [\n    \"personal_sign\",\n    \"eth_signTypedData_v4\",\n    \"eth_sendTransaction\",\n    \"wallet_addEthereumChain\",\n    \"wallet_watchAsset\",\n    \"wallet_switchEthereumChain\",\n    \"eth_requestAccounts\",\n    \"eth_accounts\",\n    \"eth_chainId\"\n];\nexports.SOLANAMethods = [\n    \"solana_signTransaction\",\n    \"solana_signMessage\",\n    \"solana_signAllTransactions\",\n    \"solana_signAndSendTransaction\"\n];\nexports.AptosMethods = [\n    \"aptos_signMessage\",\n    \"aptos_signTransaction\",\n    \"aptos_signAndSubmitTransaction\"\n];\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./InjectUtils\"), exports);\n__exportStar(require(\"./provider\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AptosProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nclass AptosProvider {\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                (0, utils_1.logDebug)(\"AptosProvider send request:\", (0, utils_1.safeJsonStringify)(request));\n                const method = request.method;\n                let result;\n                switch (method) {\n                    case \"aptos_signMessage\":\n                        {\n                            if (request.injectParams) {\n                                let message = yield window.okxwallet.aptos.signMessage(request.injectParams);\n                                result = {\n                                    method: request.method,\n                                    result: message.signature,\n                                };\n                                (0, utils_1.logDebug)(\"AptosProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                                return result;\n                            }\n                            else {\n                                throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `param is error method: '${method}'`);\n                            }\n                        }\n                        break;\n                    case \"aptos_signTransaction\":\n                        {\n                            (0, utils_1.logDebug)(\"AptosProvider Method>>>> :\", method);\n                            let message = yield window.okxwallet.aptos.signTransaction(request.params);\n                            result = {\n                                method: request.method,\n                                result: message,\n                            };\n                            (0, utils_1.logDebug)(\"AptosProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                            return result;\n                        }\n                        break;\n                    case \"aptos_signAndSubmitTransaction\":\n                        {\n                            (0, utils_1.logDebug)(\"AptosProvider Method>>>> :\", method);\n                            let message = yield window.okxwallet.aptos.signAndSubmitTransaction(request.params);\n                            result = {\n                                method: request.method,\n                                result: message.hash,\n                            };\n                            (0, utils_1.logDebug)(\"AptosProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                            return result;\n                        }\n                        break;\n                    default:\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, ` method: '${method}'`);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"AptosProvider send error:\", error);\n                throw error;\n            }\n        });\n    }\n}\nexports.AptosProvider = AptosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SolProvider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nconst bs58_1 = __importDefault(require(\"bs58\"));\nclass SolProvider {\n    // TOOD\n    // 问题: 是否需要切链  不切链, 主网 测试网络  sonic 如何区别\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                (0, utils_1.logDebug)(\"SolProvider send request:\", JSON.stringify(request));\n                const method = request.method;\n                let result;\n                if (request.injectParams) {\n                    switch (method) {\n                        case \"solana_signMessage\":\n                            {\n                                if (request.injectParams && typeof request.injectParams === 'object' && 'message' in request.injectParams) {\n                                    var message = (_a = request.injectParams) === null || _a === void 0 ? void 0 : _a.message;\n                                    const encodedMessage = new TextEncoder().encode(message);\n                                    const signedMessage = yield window.okxwallet.solana.signMessage(encodedMessage, \"utf8\");\n                                    result = {\n                                        method: request.method,\n                                        result: bs58_1.default.encode(signedMessage.signature),\n                                    };\n                                    (0, utils_1.logDebug)(\"SolProvider send result:\", JSON.stringify(signedMessage));\n                                    return result;\n                                }\n                                else {\n                                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `param is error method: '${method}'`);\n                                }\n                            }\n                            break;\n                        case \"solana_signTransaction\":\n                            {\n                                let bufferResult = yield window.okxwallet.solana.signTransaction(request.injectParams);\n                                (0, utils_1.logDebug)(\"SolProvider send bufferResult:\", JSON.stringify(bufferResult));\n                                result = {\n                                    method: request.method,\n                                    injectResult: bufferResult,\n                                };\n                                (0, utils_1.logDebug)(\"SolProvider send result:\", (0, utils_1.safeJsonStringify)(result));\n                                return result;\n                            }\n                            break;\n                        case \"solana_signAllTransactions\":\n                            {\n                                let allResult = yield window.okxwallet.solana.signAllTransactions(request.injectParams);\n                                (0, utils_1.logDebug)(\"SolProvider send result:\", (0, utils_1.safeJsonStringify)(allResult));\n                                result = {\n                                    method: request.method,\n                                    injectResult: allResult,\n                                };\n                                return result;\n                            }\n                            break;\n                        case \"solana_signAndSendTransaction\":\n                            {\n                                var signAndSendResult = yield window.okxwallet.solana.signAndSendTransaction(request.injectParams);\n                                (0, utils_1.logDebug)(\"SolProvider send result:\", (0, utils_1.safeJsonStringify)(signAndSendResult));\n                                result = {\n                                    method: request.method,\n                                    injectResult: signAndSendResult,\n                                };\n                                return result;\n                            }\n                            break;\n                        default:\n                            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, `method: '${method}'`);\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `param is error method: '${method}'`);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"SolProvider send error:\", error);\n                throw error;\n            }\n        });\n    }\n}\nexports.SolProvider = SolProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Eip155Provider = void 0;\nconst protocol_1 = require(\"../../protocol\");\nconst utils_1 = require(\"../../utils\");\nclass Eip155Provider {\n    send(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                (0, utils_1.logDebug)(\"Eip155Provider send request:\", (0, utils_1.safeJsonStringify)(request));\n                let ethParams = null;\n                switch (request.method) {\n                    case \"personal_sign\":\n                        if (request.params && \"message\" in request.params) {\n                            ethParams = {\n                                method: request.method,\n                                params: [\n                                    request.params.message,\n                                    request.address,\n                                ],\n                            };\n                        }\n                        break;\n                    case \"eth_sendTransaction\":\n                    case \"wallet_addEthereumChain\":\n                    case \"wallet_switchEthereumChain\":\n                        {\n                            if (request.params) {\n                                ethParams = {\n                                    method: request.method,\n                                    params: [request.params],\n                                };\n                            }\n                        }\n                        break;\n                    case \"eth_signTypedData_v4\":\n                        {\n                            if (request.params && \"typedDataJson\" in request.params && ((_a = request.params) === null || _a === void 0 ? void 0 : _a.typedDataJson) && typeof request.params.typedDataJson === \"string\") {\n                                ethParams = {\n                                    method: request.method,\n                                    params: [\n                                        request.address,\n                                        request.params.typedDataJson,\n                                    ],\n                                };\n                            }\n                        }\n                        break;\n                    case \"wallet_watchAsset\":\n                        {\n                            if (request.params) {\n                                ethParams = {\n                                    method: request.method,\n                                    params: request.params,\n                                };\n                            }\n                        }\n                        break;\n                    default:\n                        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n                if (ethParams) {\n                    // 特殊处理 \"wallet_switchEthereumChain\"\n                    if ((request.method === \"wallet_switchEthereumChain\" || request.method === \"wallet_addEthereumChain\")\n                        && request.params\n                        && \"chainId\" in request.params) {\n                        (0, utils_1.logDebug)(\"Eip155Provider send request switch requestParams:\", (0, utils_1.safeJsonStringify)(ethParams));\n                        const switchChainId = parseInt(request.params.chainId, 16).toString();\n                        yield window.okxwallet.request(ethParams);\n                        const resultSwitch = `eip155:${switchChainId}:${request.address}`;\n                        (0, utils_1.logDebug)(\"Eip155Provider send request switch result:\", resultSwitch);\n                        return {\n                            result: resultSwitch,\n                            method: request.method,\n                        };\n                    }\n                    else {\n                        const chain = (0, utils_1.getChainId)(request.chainId);\n                        const chainHex = `0x${Number(chain).toString(16)}`;\n                        (0, utils_1.logDebug)(\"Eip155Provider current chainId:\", chain, chainHex);\n                        if (chainHex) {\n                            yield window.okxwallet.request({\n                                method: \"wallet_switchEthereumChain\",\n                                params: [{ chainId: chainHex }],\n                            });\n                            (0, utils_1.logDebug)(\"Eip155Provider send request requestParams:\", chainHex, (0, utils_1.safeJsonStringify)(ethParams));\n                            const resultMe = yield window.okxwallet.request(ethParams);\n                            (0, utils_1.logDebug)(\"Eip155Provider send request result:\", (0, utils_1.safeJsonStringify)(resultMe));\n                            return {\n                                result: resultMe,\n                                method: request.method,\n                            };\n                        }\n                    }\n                }\n                else {\n                    throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            catch (error) {\n                (0, utils_1.logDebug)(\"Eip155Provider encountered an error:\", error);\n                throw error;\n            }\n        });\n    }\n}\nexports.Eip155Provider = Eip155Provider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./eip155Provider\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HIDE_INJECTED_WALLET_CHAINS = exports.TON_CHAINS = exports.COSMOS_CHAINS = exports.APTOS_CHAINS = exports.SUI_CHAINS = exports.SOLANA_CHAINS = exports.BTC_CHAINS = void 0;\nexports.BTC_CHAINS = {\n    MAINNET: 'btc:mainnet',\n    FRACTAL: 'fractal:mainnet',\n};\nexports.SOLANA_CHAINS = {\n    MAINNET: 'solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp',\n    TESTNET: 'solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z',\n    SONIC_TESTNET: 'sonic:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z'\n};\nexports.SUI_CHAINS = {\n    MAINNET: 'sui:mainnet'\n};\nexports.APTOS_CHAINS = {\n    MAINNET: 'aptos:mainnet' // aptos mainnet\n};\nexports.COSMOS_CHAINS = {\n    COSMOS_MAINNET: 'cosmos:cosmoshub-4'\n};\nexports.TON_CHAINS = {\n    MAINNET: 'ton:-239', // mainnet\n};\nexports.HIDE_INJECTED_WALLET_CHAINS = [\n    exports.SOLANA_CHAINS.SONIC_TESTNET,\n    exports.SOLANA_CHAINS.TESTNET\n];\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IEngine = exports.ISignClient = exports.ISignClientEvents = exports.IEngineEvents = void 0;\nconst eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\nclass IEngineEvents extends eventemitter3_1.default {\n    constructor() {\n        super();\n    }\n}\nexports.IEngineEvents = IEngineEvents;\nclass ISignClientEvents extends eventemitter3_1.default {\n    constructor() {\n        super();\n    }\n}\nexports.ISignClientEvents = ISignClientEvents;\nclass ISignClient {\n    constructor(data) {\n        this.data = data;\n    }\n}\nexports.ISignClient = ISignClient;\nclass IEngine {\n    constructor(client) {\n        this.client = client;\n    }\n}\nexports.IEngine = IEngine;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.creatOKXInjectWalletInfo = exports.creatOKXMiniAppWalletInfo = exports.creatOKXWalletInfo = exports.ISignClientEvents = exports.IEngine = exports.IEngineEvents = exports.ISignClient = exports.getBigIntRpcId = exports.formatJsonRpcRequest = exports.isJsonRpcError = exports.isJsonRpcResponse = exports.parseConnectionError = exports.isHttpUrl = exports.formatJsonRpcError = void 0;\nvar json_rpc_1 = require(\"./json-rpc\");\nObject.defineProperty(exports, \"formatJsonRpcError\", { enumerable: true, get: function () { return json_rpc_1.formatJsonRpcError; } });\nObject.defineProperty(exports, \"isHttpUrl\", { enumerable: true, get: function () { return json_rpc_1.isHttpUrl; } });\nObject.defineProperty(exports, \"parseConnectionError\", { enumerable: true, get: function () { return json_rpc_1.parseConnectionError; } });\nObject.defineProperty(exports, \"isJsonRpcResponse\", { enumerable: true, get: function () { return json_rpc_1.isJsonRpcResponse; } });\nObject.defineProperty(exports, \"isJsonRpcError\", { enumerable: true, get: function () { return json_rpc_1.isJsonRpcError; } });\nObject.defineProperty(exports, \"formatJsonRpcRequest\", { enumerable: true, get: function () { return json_rpc_1.formatJsonRpcRequest; } });\nObject.defineProperty(exports, \"getBigIntRpcId\", { enumerable: true, get: function () { return json_rpc_1.getBigIntRpcId; } });\nvar engine_1 = require(\"./engine\");\nObject.defineProperty(exports, \"ISignClient\", { enumerable: true, get: function () { return engine_1.ISignClient; } });\nObject.defineProperty(exports, \"IEngineEvents\", { enumerable: true, get: function () { return engine_1.IEngineEvents; } });\nObject.defineProperty(exports, \"IEngine\", { enumerable: true, get: function () { return engine_1.IEngine; } });\nObject.defineProperty(exports, \"ISignClientEvents\", { enumerable: true, get: function () { return engine_1.ISignClientEvents; } });\n__exportStar(require(\"./ton\"), exports);\nvar wallet_info_1 = require(\"./wallet-info\");\nObject.defineProperty(exports, \"creatOKXWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXWalletInfo; } });\nObject.defineProperty(exports, \"creatOKXMiniAppWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXMiniAppWalletInfo; } });\nObject.defineProperty(exports, \"creatOKXInjectWalletInfo\", { enumerable: true, get: function () { return wallet_info_1.creatOKXInjectWalletInfo; } });\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isJsonRpcPayload = isJsonRpcPayload;\nexports.isJsonRpcRequest = isJsonRpcRequest;\nexports.isJsonRpcResponse = isJsonRpcResponse;\nexports.isJsonRpcResult = isJsonRpcResult;\nexports.isJsonRpcError = isJsonRpcError;\nexports.payloadId = payloadId;\nexports.getBigIntRpcId = getBigIntRpcId;\nexports.formatJsonRpcRequest = formatJsonRpcRequest;\nexports.formatJsonRpcResult = formatJsonRpcResult;\nexports.formatJsonRpcError = formatJsonRpcError;\nexports.isReservedErrorCode = isReservedErrorCode;\nexports.getError = getError;\nexports.getErrorByCode = getErrorByCode;\nexports.formatErrorMessage = formatErrorMessage;\nexports.isHttpUrl = isHttpUrl;\nexports.isWsUrl = isWsUrl;\nexports.parseConnectionError = parseConnectionError;\nfunction isJsonRpcPayload(payload) {\n    return (typeof payload === \"object\" &&\n        \"id\" in payload &&\n        \"jsonrpc\" in payload &&\n        payload.jsonrpc === \"2.0\");\n}\nfunction isJsonRpcRequest(payload) {\n    return isJsonRpcPayload(payload) && \"method\" in payload;\n}\nfunction isJsonRpcResponse(payload) {\n    return isJsonRpcPayload(payload) && (isJsonRpcResult(payload) || isJsonRpcError(payload));\n}\nfunction isJsonRpcResult(payload) {\n    return \"result\" in payload;\n}\nfunction isJsonRpcError(payload) {\n    return \"error\" in payload;\n}\nconst okx_connect_error_1 = require(\"../error/okx-connect.error\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nclass IncrementalRandomGenerator {\n    constructor(bits) {\n        this.i = 1;\n        const typedArray = bits === 8 ? new Uint8Array(1) : bits === 16 ? new Uint16Array(1) : new Uint32Array(1);\n        if (bits) {\n            this.initialValue = tweetnacl_1.default.randomBytes(bits / 8)[0];\n        }\n        else {\n            this.initialValue = 0;\n        }\n    }\n    getNextValue() {\n        return this.initialValue + this.i++;\n    }\n}\nconst uint8Generator = new IncrementalRandomGenerator(8);\nconst uint16Generator = new IncrementalRandomGenerator(16);\nfunction payloadId() {\n    const date = Date.now() * 1000;\n    const extra = uint8Generator.getNextValue();\n    return date + extra;\n}\nfunction getBigIntRpcId() {\n    const date = BigInt(Date.now()) * BigInt(1000000);\n    const extra = BigInt(uint16Generator.getNextValue());\n    return date + extra;\n}\nfunction formatJsonRpcRequest(method, params, id) {\n    return {\n        id: id || payloadId(),\n        jsonrpc: \"2.0\",\n        method,\n        params,\n    };\n}\nfunction formatJsonRpcResult(id, result) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        result,\n    };\n}\nfunction formatJsonRpcError(id, error, data) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        error: formatErrorMessage(error, data),\n    };\n}\nfunction isReservedErrorCode(code) {\n    return okx_connect_error_1.RESERVED_ERROR_CODES.includes(code);\n}\nfunction getError(type) {\n    if (!Object.keys(okx_connect_error_1.STANDARD_ERROR_MAP).includes(type)) {\n        return okx_connect_error_1.STANDARD_ERROR_MAP[okx_connect_error_1.DEFAULT_ERROR];\n    }\n    return okx_connect_error_1.STANDARD_ERROR_MAP[type];\n}\nfunction getErrorByCode(code) {\n    const match = Object.values(okx_connect_error_1.STANDARD_ERROR_MAP).find((e) => e.code === code);\n    if (!match) {\n        return okx_connect_error_1.STANDARD_ERROR_MAP[okx_connect_error_1.DEFAULT_ERROR];\n    }\n    return match;\n}\nfunction formatErrorMessage(error, data) {\n    if (typeof error === \"undefined\") {\n        return getError(okx_connect_error_1.INTERNAL_ERROR);\n    }\n    if (typeof error === \"string\") {\n        error = Object.assign(Object.assign({}, getError(okx_connect_error_1.SERVER_ERROR)), { message: error });\n    }\n    if (typeof data !== \"undefined\") {\n        error.data = data;\n    }\n    if (isReservedErrorCode(error.code)) {\n        error = getErrorByCode(error.code);\n    }\n    return error;\n}\nfunction getUrlProtocol(url) {\n    const matches = url.match(new RegExp(/^\\w+:/, \"gi\"));\n    if (!matches || !matches.length)\n        return;\n    return matches[0];\n}\nfunction matchRegexProtocol(url, regex) {\n    const protocol = getUrlProtocol(url);\n    if (typeof protocol === \"undefined\")\n        return false;\n    return new RegExp(regex).test(protocol);\n}\nfunction isHttpUrl(url) {\n    return matchRegexProtocol(url, \"^https?:\");\n}\nfunction isWsUrl(url) {\n    return matchRegexProtocol(url, \"^wss?:\");\n}\nfunction parseConnectionError(e, url, type) {\n    return e.message.includes(\"getaddrinfo ENOTFOUND\") || e.message.includes(\"connect ECONNREFUSED\")\n        ? new Error(`Unavailable ${type} RPC url at ${url}`)\n        : e;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_ITEM_ERROR_CODES = void 0;\nvar CONNECT_ITEM_ERROR_CODES;\n(function (CONNECT_ITEM_ERROR_CODES) {\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n})(CONNECT_ITEM_ERROR_CODES || (exports.CONNECT_ITEM_ERROR_CODES = CONNECT_ITEM_ERROR_CODES = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TONCHAIN = void 0;\nvar TONCHAIN;\n(function (TONCHAIN) {\n    TONCHAIN[\"MAINNET\"] = \"-239\";\n})(TONCHAIN || (exports.TONCHAIN = TONCHAIN = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CONNECT_ITEM_ERROR_CODES = exports.TONCHAIN = void 0;\nvar connect_wallet_1 = require(\"./connect-wallet\");\nObject.defineProperty(exports, \"TONCHAIN\", { enumerable: true, get: function () { return connect_wallet_1.TONCHAIN; } });\nvar connect_event_1 = require(\"./connect-event\");\nObject.defineProperty(exports, \"CONNECT_ITEM_ERROR_CODES\", { enumerable: true, get: function () { return connect_event_1.CONNECT_ITEM_ERROR_CODES; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXInjectWalletName = exports.OKXMiniWalletName = exports.OKXWalletName = void 0;\nexports.creatOKXWalletInfo = creatOKXWalletInfo;\nexports.creatOKXMiniAppWalletInfo = creatOKXMiniAppWalletInfo;\nexports.creatOKXInjectWalletInfo = creatOKXInjectWalletInfo;\nexports.OKXWalletName = \"OKX Wallet\";\nexports.OKXMiniWalletName = \"OKX Mini Wallet\";\nexports.OKXInjectWalletName = \"OKX Inject Wallet\";\nfunction creatOKXWalletInfo() {\n    return {\n        \"appName\": \"okxAppWallet\",\n        \"name\": exports.OKXWalletName,\n        \"imageUrl\": \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\"\n    };\n}\nfunction creatOKXMiniAppWalletInfo() {\n    return {\n        \"appName\": \"okxMiniApp\",\n        \"name\": exports.OKXMiniWalletName,\n        \"imageUrl\": \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\"\n    };\n}\nfunction creatOKXInjectWalletInfo() {\n    return {\n        \"appName\": \"okxInjectWallet\",\n        \"name\": exports.OKXInjectWalletName,\n        \"imageUrl\": \"\"\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.stackDeepLink = exports.tgwalletAppName = exports.tgwalletName = exports.tonConnectSdkVersion = exports.shortUniversalLink = exports.standardDeeplink = exports.downloadUrl = exports.standardUniversalLink = exports.okxDeeplink = void 0;\nexports.getTestTwaUrl = getTestTwaUrl;\nexports.getTestTgTwaUrl = getTestTgTwaUrl;\nexports.okxDeeplink = 'okx://web3';\nexports.standardUniversalLink = typeof window !== \"undefined\" && window.location.hostname.includes(\"okx.com\")\n    ? \"https://link.okx.com/download\"\n    : \"https://www.okx.com/download\";\nexports.downloadUrl = \"https://www.okx.com/download\";\n// export const standardUniversalLink = 'http://localhost:5173';\nexports.standardDeeplink = `${exports.okxDeeplink}/wallet/connect`;\nexports.shortUniversalLink = `https://www.okx.com/ul/connect`;\n// export const standardDeeplink = 'http://localhost:5173';\nexports.tonConnectSdkVersion = '1';\n// export const tgwalletName: string = \"TCTestqdqwdqwdqBot\"\nexports.tgwalletName = \"OKX_WALLET_BOT\";\nexports.tgwalletAppName = \"start\";\n// https://t.me/OKX_WALLET_BOT/start\nexports.stackDeepLink = 'okx://web3?stack=true';\nfunction getTestTwaUrl() {\n    return window.okxTesttwaUrl;\n}\nfunction getTestTgTwaUrl() {\n    return window.okxTestTgtwaUrl;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKX_CONNECT_ERROR_CODES = exports.OKXConnectError = void 0;\nvar okx_connect_error_1 = require(\"./okx-connect.error\");\nObject.defineProperty(exports, \"OKXConnectError\", { enumerable: true, get: function () { return okx_connect_error_1.OKXConnectError; } });\nObject.defineProperty(exports, \"OKX_CONNECT_ERROR_CODES\", { enumerable: true, get: function () { return okx_connect_error_1.OKX_CONNECT_ERROR_CODES; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEFAULT_ERROR = exports.STANDARD_ERROR_MAP = exports.SERVER_ERROR_CODE_RANGE = exports.RESERVED_ERROR_CODES = exports.SERVER_ERROR = exports.INTERNAL_ERROR = exports.INVALID_PARAMS = exports.METHOD_NOT_FOUND = exports.INVALID_REQUEST = exports.PARSE_ERROR = exports.OKX_CONNECT_ERROR_CODES = exports.OKXConnectError = void 0;\nclass OKXConnectError extends Error {\n    constructor(code, message) {\n        if (message == undefined) {\n            message = getDefaultMessageByCode(code);\n        }\n        super(message);\n        this.code = code;\n        this.message = `${OKXConnectError.prefix} ${message ? '\\n' + message : ''}`;\n        Object.setPrototypeOf(this, OKXConnectError.prototype);\n    }\n    toJSON() {\n        return {\n            message: this.message,\n            code: this.code\n        };\n    }\n}\nexports.OKXConnectError = OKXConnectError;\nOKXConnectError.prefix = '[OKX_CONNECT_SDK_ERROR]';\nfunction getDefaultMessageByCode(code) {\n    if (code == OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR) {\n        return \"unknown error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR) {\n        return \"bad request error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.ALREADY_CONNECTED_ERROR) {\n        return \"already connected error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR) {\n        return \"not connected error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.UNKNOWN_APP_ERROR) {\n        return \"unknown app error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n        return \"user rejects error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED) {\n        return \"method not supported\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.CONNECTION_ERROR) {\n        return \"connect error\";\n    }\n    else if (code == OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED) {\n        return \"chain not supported\";\n    }\n    return \"unknown error\";\n}\nvar OKX_CONNECT_ERROR_CODES;\n(function (OKX_CONNECT_ERROR_CODES) {\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"BAD_REQUEST_ERROR\"] = 1] = \"BAD_REQUEST_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"ALREADY_CONNECTED_ERROR\"] = 11] = \"ALREADY_CONNECTED_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"NOT_CONNECTED_ERROR\"] = 12] = \"NOT_CONNECTED_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"UNKNOWN_APP_ERROR\"] = 100] = \"UNKNOWN_APP_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"USER_REJECTS_ERROR\"] = 300] = \"USER_REJECTS_ERROR\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"CHAIN_NOT_SUPPORTED\"] = 500] = \"CHAIN_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"WALLET_NOT_SUPPORTED\"] = 600] = \"WALLET_NOT_SUPPORTED\";\n    OKX_CONNECT_ERROR_CODES[OKX_CONNECT_ERROR_CODES[\"CONNECTION_ERROR\"] = 700] = \"CONNECTION_ERROR\";\n})(OKX_CONNECT_ERROR_CODES || (exports.OKX_CONNECT_ERROR_CODES = OKX_CONNECT_ERROR_CODES = {}));\nexports.PARSE_ERROR = \"PARSE_ERROR\";\nexports.INVALID_REQUEST = \"INVALID_REQUEST\";\nexports.METHOD_NOT_FOUND = \"METHOD_NOT_FOUND\";\nexports.INVALID_PARAMS = \"INVALID_PARAMS\";\nexports.INTERNAL_ERROR = \"INTERNAL_ERROR\";\nexports.SERVER_ERROR = \"SERVER_ERROR\";\nexports.RESERVED_ERROR_CODES = [-32700, -32600, -32601, -32602, -32603];\nexports.SERVER_ERROR_CODE_RANGE = [-32000, -32099];\nexports.STANDARD_ERROR_MAP = {\n    [exports.PARSE_ERROR]: { code: -32700, message: \"Parse error\" },\n    [exports.INVALID_REQUEST]: { code: -32600, message: \"Invalid Request\" },\n    [exports.METHOD_NOT_FOUND]: { code: -32601, message: \"Method not found\" },\n    [exports.INVALID_PARAMS]: { code: -32602, message: \"Invalid params\" },\n    [exports.INTERNAL_ERROR]: { code: -32603, message: \"Internal error\" },\n    [exports.SERVER_ERROR]: { code: -32000, message: \"Server error\" },\n};\nexports.DEFAULT_ERROR = exports.SERVER_ERROR;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HIDE_INJECTED_WALLET_CHAINS = exports.TON_CHAINS = exports.COSMOS_CHAINS = exports.APTOS_CHAINS = exports.SUI_CHAINS = exports.SOLANA_CHAINS = exports.BTC_CHAINS = exports.downloadUrl = exports.okxDeeplink = exports.tonConnectSdkVersion = exports.standardDeeplink = exports.standardUniversalLink = exports.NameSpaceKeyTron = exports.NameSpaceKeyCosmos = exports.NameSpaceKeyAptos = exports.NameSpaceKeyBtc = exports.NameSpaceKeySui = exports.NameSpaceKeyTON = exports.NameSpaceKeySOL = exports.NameSpaceKeyEip155 = void 0;\n__exportStar(require(\"./error\"), exports);\nvar misc_1 = require(\"./misc\");\nObject.defineProperty(exports, \"NameSpaceKeyEip155\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyEip155; } });\nObject.defineProperty(exports, \"NameSpaceKeySOL\", { enumerable: true, get: function () { return misc_1.NameSpaceKeySOL; } });\nObject.defineProperty(exports, \"NameSpaceKeyTON\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyTON; } });\nObject.defineProperty(exports, \"NameSpaceKeySui\", { enumerable: true, get: function () { return misc_1.NameSpaceKeySui; } });\nObject.defineProperty(exports, \"NameSpaceKeyBtc\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyBtc; } });\nObject.defineProperty(exports, \"NameSpaceKeyAptos\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyAptos; } });\nObject.defineProperty(exports, \"NameSpaceKeyCosmos\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyCosmos; } });\nObject.defineProperty(exports, \"NameSpaceKeyTron\", { enumerable: true, get: function () { return misc_1.NameSpaceKeyTron; } });\nvar constants_1 = require(\"./constants\");\nObject.defineProperty(exports, \"standardUniversalLink\", { enumerable: true, get: function () { return constants_1.standardUniversalLink; } });\nObject.defineProperty(exports, \"standardDeeplink\", { enumerable: true, get: function () { return constants_1.standardDeeplink; } });\nObject.defineProperty(exports, \"tonConnectSdkVersion\", { enumerable: true, get: function () { return constants_1.tonConnectSdkVersion; } });\nObject.defineProperty(exports, \"okxDeeplink\", { enumerable: true, get: function () { return constants_1.okxDeeplink; } });\nObject.defineProperty(exports, \"downloadUrl\", { enumerable: true, get: function () { return constants_1.downloadUrl; } });\n__exportStar(require(\"./connect\"), exports);\nvar chains_1 = require(\"./chains\");\nObject.defineProperty(exports, \"BTC_CHAINS\", { enumerable: true, get: function () { return chains_1.BTC_CHAINS; } });\nObject.defineProperty(exports, \"SOLANA_CHAINS\", { enumerable: true, get: function () { return chains_1.SOLANA_CHAINS; } });\nObject.defineProperty(exports, \"SUI_CHAINS\", { enumerable: true, get: function () { return chains_1.SUI_CHAINS; } });\nObject.defineProperty(exports, \"APTOS_CHAINS\", { enumerable: true, get: function () { return chains_1.APTOS_CHAINS; } });\nObject.defineProperty(exports, \"COSMOS_CHAINS\", { enumerable: true, get: function () { return chains_1.COSMOS_CHAINS; } });\nObject.defineProperty(exports, \"TON_CHAINS\", { enumerable: true, get: function () { return chains_1.TON_CHAINS; } });\nObject.defineProperty(exports, \"HIDE_INJECTED_WALLET_CHAINS\", { enumerable: true, get: function () { return chains_1.HIDE_INJECTED_WALLET_CHAINS; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NameSpaceKeyTron = exports.NameSpaceKeyCosmos = exports.NameSpaceKeyAptos = exports.NameSpaceKeyBtc = exports.NameSpaceKeySui = exports.NameSpaceKeyTON = exports.NameSpaceKeySOL = exports.NameSpaceKeyEip155 = void 0;\nexports.NameSpaceKeyEip155 = \"eip155\";\nexports.NameSpaceKeySOL = \"solana\";\nexports.NameSpaceKeyTON = \"ton\";\nexports.NameSpaceKeySui = \"sui\";\nexports.NameSpaceKeyBtc = \"btc\";\nexports.NameSpaceKeyAptos = \"aptos\";\nexports.NameSpaceKeyCosmos = \"cosmos\";\nexports.NameSpaceKeyTron = \"tron\";\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.callForSuccess = callForSuccess;\nexports.delay = delay;\n/**\n * Function to call ton api until we get response.\n * Because ton network is pretty unstable we need to make sure response is final.\n * @param {T} fn - function to call\n * @param {CallForSuccessOptions} [options] - optional configuration options\n */\nfunction callForSuccess(fn, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b;\n        const attempts = (_a = options === null || options === void 0 ? void 0 : options.attempts) !== null && _a !== void 0 ? _a : 3;\n        const delayMs = (_b = options === null || options === void 0 ? void 0 : options.delayMs) !== null && _b !== void 0 ? _b : 800;\n        if (typeof fn !== 'function') {\n            throw new Error(`Expected a function, got ${typeof fn}`);\n        }\n        let i = 0;\n        let lastError;\n        while (i < attempts) {\n            try {\n                return yield fn();\n            }\n            catch (err) {\n                lastError = err;\n                i++;\n                if (i < attempts) {\n                    yield delay(delayMs);\n                }\n            }\n        }\n        throw lastError;\n    });\n}\n/**\n * Delays the execution of code for a specified number of milliseconds.\n * @param {number} timeout - The number of milliseconds to delay the execution.\n * @param {DelayOptions} [options] - Optional configuration options for the delay.\n * @return {Promise<void>} - A promise that resolves after the specified delay, or rejects if the delay is aborted.\n */\nfunction delay(timeout, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            var _a, _b;\n            if ((_a = options === null || options === void 0 ? void 0 : options.signal) === null || _a === void 0 ? void 0 : _a.aborted) {\n                reject(new Error('Delay aborted'));\n                return;\n            }\n            const timeoutId = setTimeout(() => resolve(), timeout);\n            (_b = options === null || options === void 0 ? void 0 : options.signal) === null || _b === void 0 ? void 0 : _b.addEventListener('abort', () => {\n                clearTimeout(timeoutId);\n                reject(new Error('Delay aborted'));\n            });\n        });\n    });\n}\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkMetaData = exports.versionCompare = exports.isBrowser = exports.isOS = exports.isMobileUserAgent = exports.openDeeplinkWithFallback = exports.openLinkBlank = exports.openLink = exports.getChainId = exports.useShortLink = exports.toSafeBase64FromBase64 = exports.isValidObject = exports.isIos = exports.base64decode = exports.base64encode = exports.splitToUint8Arrays = exports.concatUint8Arrays = exports.toHexString = exports.hexToByteArray = exports.getOKXLink = exports.openOKXUniversalLink = exports.getAppWalletShortDeepLink = exports.encodeTWAConnectURLParams = exports.encodeConnectParams = exports.openOKXTMAWalletlinkWithFallback = exports.getTelegramWalletTWAUrl = exports.getAppWalletDeepLink = exports.encodeTelegramUrlParameters = exports.isTelegramUrl = exports.openOKXDeeplinkWithFallback = exports.openOKXDeeplink = exports.getUniversalLink = exports.safeJsonStringify = exports.safeJsonParse = exports.getDefaultReporter = exports.reportEvent = exports.reportLog = exports.logWarning = exports.logError = exports.logDebug = exports.callForSuccess = void 0;\nvar call_for_success_1 = require(\"./call-for-success\");\nObject.defineProperty(exports, \"callForSuccess\", { enumerable: true, get: function () { return call_for_success_1.callForSuccess; } });\nvar log_1 = require(\"./log\");\nObject.defineProperty(exports, \"logDebug\", { enumerable: true, get: function () { return log_1.logDebug; } });\nObject.defineProperty(exports, \"logError\", { enumerable: true, get: function () { return log_1.logError; } });\nObject.defineProperty(exports, \"logWarning\", { enumerable: true, get: function () { return log_1.logWarning; } });\nObject.defineProperty(exports, \"reportLog\", { enumerable: true, get: function () { return log_1.reportLog; } });\nObject.defineProperty(exports, \"reportEvent\", { enumerable: true, get: function () { return log_1.reportEvent; } });\nObject.defineProperty(exports, \"getDefaultReporter\", { enumerable: true, get: function () { return log_1.getDefaultReporter; } });\n__exportStar(require(\"./reportconstants\"), exports);\n__exportStar(require(\"./report\"), exports);\nvar safejson_1 = require(\"./safejson\");\nObject.defineProperty(exports, \"safeJsonParse\", { enumerable: true, get: function () { return safejson_1.safeJsonParse; } });\nObject.defineProperty(exports, \"safeJsonStringify\", { enumerable: true, get: function () { return safejson_1.safeJsonStringify; } });\nvar url_1 = require(\"./url\");\nObject.defineProperty(exports, \"getUniversalLink\", { enumerable: true, get: function () { return url_1.getUniversalLink; } });\nObject.defineProperty(exports, \"openOKXDeeplink\", { enumerable: true, get: function () { return url_1.openOKXDeeplink; } });\nObject.defineProperty(exports, \"openOKXDeeplinkWithFallback\", { enumerable: true, get: function () { return url_1.openOKXDeeplinkWithFallback; } });\nObject.defineProperty(exports, \"isTelegramUrl\", { enumerable: true, get: function () { return url_1.isTelegramUrl; } });\nObject.defineProperty(exports, \"encodeTelegramUrlParameters\", { enumerable: true, get: function () { return url_1.encodeTelegramUrlParameters; } });\nObject.defineProperty(exports, \"getAppWalletDeepLink\", { enumerable: true, get: function () { return url_1.getAppWalletDeepLink; } });\nObject.defineProperty(exports, \"getTelegramWalletTWAUrl\", { enumerable: true, get: function () { return url_1.getTelegramWalletTWAUrl; } });\nObject.defineProperty(exports, \"openOKXTMAWalletlinkWithFallback\", { enumerable: true, get: function () { return url_1.openOKXTMAWalletlinkWithFallback; } });\nObject.defineProperty(exports, \"encodeConnectParams\", { enumerable: true, get: function () { return url_1.encodeConnectParams; } });\nObject.defineProperty(exports, \"encodeTWAConnectURLParams\", { enumerable: true, get: function () { return url_1.encodeTWAConnectURLParams; } });\nObject.defineProperty(exports, \"getAppWalletShortDeepLink\", { enumerable: true, get: function () { return url_1.getAppWalletShortDeepLink; } });\nObject.defineProperty(exports, \"openOKXUniversalLink\", { enumerable: true, get: function () { return url_1.openOKXUniversalLink; } });\nObject.defineProperty(exports, \"getOKXLink\", { enumerable: true, get: function () { return url_1.getOKXLink; } });\nvar utils_1 = require(\"./utils\");\nObject.defineProperty(exports, \"hexToByteArray\", { enumerable: true, get: function () { return utils_1.hexToByteArray; } });\nObject.defineProperty(exports, \"toHexString\", { enumerable: true, get: function () { return utils_1.toHexString; } });\nObject.defineProperty(exports, \"concatUint8Arrays\", { enumerable: true, get: function () { return utils_1.concatUint8Arrays; } });\nObject.defineProperty(exports, \"splitToUint8Arrays\", { enumerable: true, get: function () { return utils_1.splitToUint8Arrays; } });\nObject.defineProperty(exports, \"base64encode\", { enumerable: true, get: function () { return utils_1.base64encode; } });\nObject.defineProperty(exports, \"base64decode\", { enumerable: true, get: function () { return utils_1.base64decode; } });\nObject.defineProperty(exports, \"isIos\", { enumerable: true, get: function () { return utils_1.isIos; } });\nObject.defineProperty(exports, \"isValidObject\", { enumerable: true, get: function () { return utils_1.isValidObject; } });\nObject.defineProperty(exports, \"toSafeBase64FromBase64\", { enumerable: true, get: function () { return utils_1.toSafeBase64FromBase64; } });\nObject.defineProperty(exports, \"useShortLink\", { enumerable: true, get: function () { return utils_1.useShortLink; } });\nObject.defineProperty(exports, \"getChainId\", { enumerable: true, get: function () { return utils_1.getChainId; } });\nvar web_api_1 = require(\"./web-api\");\nObject.defineProperty(exports, \"openLink\", { enumerable: true, get: function () { return web_api_1.openLink; } });\nObject.defineProperty(exports, \"openLinkBlank\", { enumerable: true, get: function () { return web_api_1.openLinkBlank; } });\nObject.defineProperty(exports, \"openDeeplinkWithFallback\", { enumerable: true, get: function () { return web_api_1.openDeeplinkWithFallback; } });\nObject.defineProperty(exports, \"isMobileUserAgent\", { enumerable: true, get: function () { return web_api_1.isMobileUserAgent; } });\nObject.defineProperty(exports, \"isOS\", { enumerable: true, get: function () { return web_api_1.isOS; } });\nObject.defineProperty(exports, \"isBrowser\", { enumerable: true, get: function () { return web_api_1.isBrowser; } });\nvar tma_api_1 = require(\"./tma-api\");\nObject.defineProperty(exports, \"versionCompare\", { enumerable: true, get: function () { return tma_api_1.versionCompare; } });\nvar request_1 = require(\"./request\");\nObject.defineProperty(exports, \"checkMetaData\", { enumerable: true, get: function () { return request_1.checkMetaData; } });\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getDefaultReporter = getDefaultReporter;\nexports.logDebug = logDebug;\nexports.logError = logError;\nexports.logWarning = logWarning;\nexports.reportEvent = reportEvent;\nexports.reportLog = reportLog;\nconst debug = false;\nconst forceReport = false;\nconst report_1 = require(\"./report\");\nconst defaultReporter = new report_1.OKXReporter();\nfunction getDefaultReporter() {\n    return defaultReporter;\n}\nconst packageJson = require('../../package.json');\nconst version = packageJson.version;\nfunction logDebug(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.log(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction logError(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.error(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n            if (forceReport || !debug) {\n                let content = '';\n                content += [...args].reduce((result, item) => {\n                    if (typeof item == 'string') {\n                        result += ',' + item;\n                    }\n                    else if (typeof item == 'object') {\n                        result += JSON.stringify(item);\n                    }\n                });\n                defaultReporter.sendRecordContent(content, report_1.OKXReportType.LOG, '');\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction logWarning(...args) {\n    if (typeof console != 'undefined') {\n        try {\n            if (debug || (window === null || window === void 0 ? void 0 : window.okxLogDebug)) {\n                console.warn(`[OKX_CONNECT_SDK] ${version} `, ...args);\n            }\n        }\n        catch (_a) { }\n    }\n}\nfunction reportEvent(type, action, content) {\n    return __awaiter(this, void 0, void 0, function* () {\n        yield defaultReporter.sendRecordContent(content, type, action);\n    });\n}\nfunction reportLog(content_1) {\n    return __awaiter(this, arguments, void 0, function* (content, action = 'default') {\n        // await defaultReporter.sendRecordContent(content, OKXReportType.LOG, action)\n    });\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXReporter = exports.OKXReportSide = exports.OKXReportType = exports.versionStr = void 0;\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nconst log_1 = require(\"./log\");\nconst url_1 = require(\"./url\");\nconst utils_1 = require(\"../utils\");\nconst localforage_1 = __importDefault(require(\"localforage\"));\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nexports.versionStr = '1.6.0';\nconst reportApiList = [\n    'https://www.okx.com/dappstat/wallet-connect',\n    'https://www.okx.ac/dappstat/wallet-connect'\n];\nconst reportCacheKey = 'OKX_RP_CK';\nconst reportUUIDKey = 'OKX_RP_UUID_CK';\nconst MAX_LIMIT_REPORTCOUNT = 100;\nconst DEFAULT_HTTP_HEADERS = {\n    Accept: \"*/*\",\n    \"Content-Type\": \"text/plain\",\n};\nconst DEFAULT_HTTP_METHOD = \"POST\";\nconst DEFAULT_FETCH_OPTS = {\n    headers: DEFAULT_HTTP_HEADERS,\n    method: DEFAULT_HTTP_METHOD,\n};\nexports.OKXReportType = {\n    PAGE_IN: 'page_in',\n    PAGE_OUT: 'page_out',\n    CLICK: 'click',\n    LOG: 'log',\n};\nexports.OKXReportSide = {\n    DAPP: 'dapp',\n    WALLET: 'wallet',\n};\nclass IReporter {\n}\nconst fetchWithTimeout = (url, options, timeout = 5000) => {\n    const controller = new AbortController();\n    const signal = controller.signal;\n    const fetchPromise = (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, options), { signal }));\n    const timeoutPromise = new Promise((_, reject) => setTimeout(() => {\n        controller.abort();\n        reject(new Error('Request timed out'));\n    }, timeout));\n    return Promise.race([fetchPromise, timeoutPromise]);\n};\nconst fetchListWithTimeout = (urls_1, ...args_1) => __awaiter(void 0, [urls_1, ...args_1], void 0, function* (urls, options = {}, timeout = 5000) {\n    for (const url of urls) {\n        try {\n            const controller = new AbortController();\n            const signal = controller.signal;\n            const fetchPromise = (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, options), { signal }));\n            const timeoutPromise = new Promise((_, reject) => setTimeout(() => {\n                controller.abort();\n                reject(new Error('Request timed out'));\n            }, timeout));\n            const response = yield Promise.race([fetchPromise, timeoutPromise]);\n            if (response.ok) {\n                return response;\n            }\n            if (response.status == 502) {\n                console.error(`Fetch error status 502`, url);\n                return response;\n            }\n        }\n        catch (error) {\n            console.error(`Fetch error for ${url}:`, error);\n        }\n    }\n    console.error(`'All fetch attempts failed.'`);\n    throw new Error('All fetch attempts failed.');\n});\nclass OKXReporter {\n    constructor() {\n        this.currentSide = exports.OKXReportSide.DAPP;\n        this.currentVersion = exports.versionStr;\n        this.storage = localforage_1.default.createInstance({\n            name: \"OKXReporter\"\n        });\n        this.recordList = new Array();\n        this.currentUUID = (0, utils_1.toHexString)(tweetnacl_1.default.randomBytes(16));\n    }\n    configVersionAndSide(version, side, appname) {\n        this.currentVersion = version;\n        this.currentSide = side;\n        this.appName = appname;\n    }\n    get recordCacheKey() {\n        return reportCacheKey + \"@\" + this.appName;\n    }\n    get reportPlatform() {\n        if ((0, utils_1.isMobileUserAgent)()) {\n            if ((0, utils_1.isIos)()) {\n                return 'iOS';\n            }\n            else {\n                return 'android';\n            }\n        }\n        else {\n            return 'pc';\n        }\n    }\n    beginReport() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.startErrorCatching();\n            let records = yield this.storage.getItem(this.recordCacheKey);\n            let uuid = yield this.storage.getItem(reportUUIDKey);\n            if (uuid) {\n                this.currentUUID = uuid;\n            }\n            else {\n                this.storage.setItem(reportUUIDKey, this.currentUUID);\n            }\n            if (records) {\n                this.recordList = records;\n                (0, log_1.logDebug)('resume records from cache length: ', this.recordList.length);\n                yield this.sendCachedRecords();\n            }\n        });\n    }\n    startErrorCatching() {\n        let window = (0, url_1.getWindow)();\n        if (window) {\n            (0, log_1.logDebug)('begin capture console error');\n            // window.onerror = (event: Event | string, source?: string, lineno?: number, colno?: number, error?: Error) => {\n            //     logDebug('capture error info:', error, source)\n            //     this.markRecord(error?.message+'/'+error?.name+'/'+error?.stack, OKXReportType.LOG, '', this.currentSide)\n            // }\n        }\n    }\n    cachedErrors() {\n        return this.recordList;\n    }\n    sendRecord(record) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    const body = JSON.stringify(record);\n                    (0, log_1.logDebug)('[REPORT] record: ', body);\n                    const res = yield fetchListWithTimeout(reportApiList, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body: body }));\n                    (0, log_1.logDebug)('[REPORT] get rsp:', res);\n                    if (res && res.status && res.status == 200) {\n                        this.recordList = this.recordList.filter((item) => {\n                            return item.timestamp != record.timestamp || item.content != record.content;\n                        });\n                        yield this.storage.setItem(this.recordCacheKey, this.recordList);\n                        resolve(true);\n                    }\n                    else {\n                        reject(false);\n                    }\n                }\n                catch (e) {\n                    (0, log_1.logDebug)('send record error:', e);\n                    resolve(true);\n                    // reject(e)\n                }\n            }));\n        });\n    }\n    sendRecordContent(content, type, action) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            let path = (_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.location.pathname;\n            let location = (_b = (0, url_1.getWindow)()) === null || _b === void 0 ? void 0 : _b.location.origin;\n            if (path && location) {\n                location = location + path;\n            }\n            let language = (_c = (0, url_1.getWindow)()) === null || _c === void 0 ? void 0 : _c.navigator.language;\n            let ua = (_d = (0, url_1.getWindow)()) === null || _d === void 0 ? void 0 : _d.navigator.userAgent;\n            let platform = this.reportPlatform;\n            let reportItem = {\n                uuid: this.currentUUID,\n                version: this.currentVersion,\n                content: content,\n                action: action,\n                side: this.currentSide,\n                timestamp: new Date().getTime(),\n                url: location,\n                lang: language,\n                type: type,\n                platform: platform,\n                \"user-agent\": ua\n            };\n            yield this.markRecordItem(reportItem);\n            yield this.sendRecord(reportItem);\n        });\n    }\n    sendCachedRecords() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let sendList = this.recordList.map(record => this.sendRecord(record));\n                (0, log_1.logDebug)('[REPORT] submit & clean recorded caches begin @', new Date().toUTCString());\n                Promise.allSettled(sendList).then((results) => {\n                    (0, log_1.logDebug)('[REPORT] submit & clean recorded caches ends @', new Date().toUTCString());\n                    let keepIndex = [];\n                    results.forEach((result, index) => {\n                        if (result.status == \"rejected\") {\n                            keepIndex.push(index);\n                        }\n                    });\n                    this.recordList = this.recordList.filter((_, index) => !keepIndex.includes(index));\n                    this.storage.setItem(this.recordCacheKey, this.recordList).then(function (value) {\n                        resolve();\n                    }).catch(function (err) {\n                        reject(err);\n                    });\n                });\n            }));\n        });\n    }\n    markRecordItem(item) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.recordList.push(item);\n            if (this.recordList.length > MAX_LIMIT_REPORTCOUNT) {\n                let offset = this.recordList.length - MAX_LIMIT_REPORTCOUNT;\n                this.recordList.splice(0, offset);\n            }\n            return new Promise((resolve, reject) => {\n                this.storage.setItem(this.recordCacheKey, this.recordList).then(function (value) {\n                    resolve(item);\n                }).catch(function (err) {\n                    reject(err);\n                });\n            });\n        });\n    }\n    markRecord(content, type, action, side) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            let path = (_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.location.pathname;\n            let location = (_b = (0, url_1.getWindow)()) === null || _b === void 0 ? void 0 : _b.location.origin;\n            if (path && location) {\n                location = location + path;\n            }\n            let language = (_c = (0, url_1.getWindow)()) === null || _c === void 0 ? void 0 : _c.navigator.language;\n            let platform = this.reportPlatform;\n            let ua = (_d = (0, url_1.getWindow)()) === null || _d === void 0 ? void 0 : _d.navigator.userAgent;\n            let reportItem = {\n                uuid: this.currentUUID,\n                version: this.currentVersion,\n                content: content,\n                action: action,\n                side: side,\n                timestamp: new Date().getTime(),\n                url: location,\n                lang: language,\n                type: type,\n                platform: platform,\n                \"user-agent\": ua\n            };\n            return yield this.markRecordItem(reportItem);\n        });\n    }\n}\nexports.OKXReporter = OKXReporter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Report_WalletType_Key = exports.Report_Proceed_QRCode_Click = exports.Report_ChooseType_Download_Click = exports.Report_ChooseType_ConnectWallet_Click = exports.Report_Proceed_Retry_Click = exports.Report_ChooseType_ConnectWallet_View = exports.Report_Loading_ConnectWallet_View = exports.Report_Proceed_QRCode_View = exports.Report_Proceed_Proceed_View = void 0;\nexports.Report_Proceed_Proceed_View = \"OKXConnectSDK_Proceed_Proceed_View\";\nexports.Report_Proceed_QRCode_View = \"OKXConnectSDK_Proceed_QRCode_View\";\nexports.Report_Loading_ConnectWallet_View = \"OKXConnectSDK_Loading_ConnectWallet_View\";\nexports.Report_ChooseType_ConnectWallet_View = \"OKXConnectSDK_ChooseType_ConnectWallet_View\";\nexports.Report_Proceed_Retry_Click = \"OKXConnectSDK_Proceed_Retry_Click\";\nexports.Report_ChooseType_ConnectWallet_Click = \"OKXConnectSDK_ChooseType_ConnectWallet_Click\";\nexports.Report_ChooseType_Download_Click = \"OKXConnectSDK_ChooseType_Download_Click\";\nexports.Report_Proceed_QRCode_Click = \"OKXConnectSDK_Proceed_QRCode_Click\";\nexports.Report_WalletType_Key = 'wallet_type';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkMetaData = checkMetaData;\nconst protocol_1 = require(\"../protocol\");\nfunction checkMetaData(dappMetaData) {\n    if (!dappMetaData) {\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"You have to specify a `dappMetaData`in the options.\");\n    }\n    if (!dappMetaData.name) {\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"dappName is required\");\n    }\n    if (!dappMetaData.icon) {\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.BAD_REQUEST_ERROR, \"icon is required\");\n    }\n    return true;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.safeJsonParse = safeJsonParse;\nexports.safeJsonStringify = safeJsonStringify;\nconst log_1 = require(\"./log\");\nconst JSONStringify = (data) => JSON.stringify(data, (_, value) => (typeof value === \"bigint\" ? value.toString() + \"n\" : value));\n/*\n  Function to parse JSON.\n  If JSON has values in our custom format BigInt (strings with \"n\" character at the end), we just parse them to BigInt values.\n  If JSON has big number values, but not in our custom format, we copy it, and in a copy we convert those values to our custom format,\n  then parse them to BigInt values.\n  Other values (not big numbers and not our custom format BigInt values) are not affected and parsed as native JSON.parse() would parse them.\n*/\nconst JSONParse = (json) => {\n    /*\n      Big numbers are found and marked using Regex with this condition:\n      Number's length is bigger than 16 || Number's length is 16 and any numerical digit of the number is greater than that of the Number.MAX_SAFE_INTEGER\n      Additionally, it skips values that are strings (between double quotes).\n      */\n    // prettier-ignore\n    // eslint-disable-next-line no-useless-escape\n    const numbersBiggerThanMaxInt = /:(\\b\\d{17,}|\\b(?:[9](?:[1-9]07199254740991|0[1-9]7199254740991|00[8-9]199254740991|007[2-9]99254740991|007199[3-9]54740991|0071992[6-9]4740991|00719925[5-9]740991|007199254[8-9]40991|0071992547[5-9]0991|00719925474[1-9]991|00719925474099[2-9])))(?=[,\\}\\]]|$)/g;\n    const serializedData = json.replace(numbersBiggerThanMaxInt, (match, group) => `:\"${group}n\"`);\n    try {\n        return JSON.parse(serializedData, (_, value) => {\n            const isCustomFormatBigInt = typeof value === \"string\" && value.match(/^\\d+n$/);\n            if (isCustomFormatBigInt)\n                return BigInt(value.substring(0, value.length - 1));\n            return value;\n        });\n    }\n    catch (e) {\n        return JSON.parse(json);\n    }\n};\nfunction safeJsonParse(value) {\n    if (typeof value !== \"string\") {\n        (0, log_1.logDebug)(value);\n        throw new Error(`Cannot safe json parse value of type ${typeof value}`);\n    }\n    try {\n        return JSONParse(value);\n    }\n    catch (e) {\n        // eslint-disable-next-line no-console\n        console.error(\"safeJsonParse error:\", e);\n        return value;\n    }\n}\nfunction safeJsonStringify(value) {\n    return typeof value === \"string\" ? value : JSONStringify(value) || \"\";\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.okxfromString = okxfromString;\nexports.okxtoString = okxtoString;\nexports.alloc = alloc;\nexports.allocUnsafe = allocUnsafe;\nconst basics_1 = require(\"multiformats/basics\");\nconst log_1 = require(\"../utils/log\");\nfunction okxfromString(string, encoding = 'utf8') {\n    const base = BASES[encoding];\n    (0, log_1.logDebug)(\"okxfromstring ====> \");\n    if (!base) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    return base.decoder.decode(`${base.prefix}${string}`);\n}\nfunction okxtoString(array, encoding = 'utf8') {\n    const base = BASES[encoding];\n    (0, log_1.logDebug)(\"okxtoString ====> \");\n    if (!base) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    return base.encoder.encode(array).substring(1);\n}\nfunction alloc(size = 0) {\n    return new Uint8Array(size);\n}\nfunction allocUnsafe(size = 0) {\n    return new Uint8Array(size);\n}\nfunction createCodec(name, prefix, encode, decode) {\n    return {\n        name,\n        prefix,\n        encoder: {\n            name,\n            prefix,\n            encode\n        },\n        decoder: { decode }\n    };\n}\nconst string = createCodec('utf8', 'u', buf => {\n    const decoder = new TextDecoder('utf8');\n    return 'u' + decoder.decode(buf);\n}, str => {\n    const encoder = new TextEncoder();\n    return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', buf => {\n    let result = 'a';\n    for (let i = 0; i < buf.length; i++) {\n        let bufNum = buf[i];\n        if (bufNum && String.fromCharCode(bufNum)) {\n            result += String.fromCharCode(bufNum);\n        }\n    }\n    return result;\n}, str => {\n    str = str.substring(1);\n    const buf = allocUnsafe(str.length);\n    for (let i = 0; i < str.length; i++) {\n        buf[i] = str.charCodeAt(i);\n    }\n    return buf;\n});\nconst BASES = Object.assign({ utf8: string, 'utf-8': string, hex: basics_1.bases.base16, latin1: ascii, ascii: ascii, binary: ascii }, basics_1.bases);\n","\"use strict\";\nvar _a, _b, _c, _d, _e, _f, _g;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isTmaPlatform = isTmaPlatform;\nexports.isInTMA = isInTMA;\nexports.inTg = inTg;\nexports.isInTelegramBrowser = isInTelegramBrowser;\nexports.sendExpand = sendExpand;\nexports.sendOpenTelegramLink = sendOpenTelegramLink;\nexports.versionCompare = versionCompare;\nconst url_1 = require(\"./url\");\nconst log_1 = require(\"./log\");\nconst protocol_1 = require(\"../protocol\");\nconst web_api_1 = require(\"./web-api\");\nlet initParams = {};\ntry {\n    let locationHash = location.hash.toString();\n    initParams = urlParseHashParams(locationHash);\n}\ncatch (e) { }\nlet tmaPlatform = 'unknown';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppPlatform) {\n    tmaPlatform = (_a = initParams.tgWebAppPlatform) !== null && _a !== void 0 ? _a : 'unknown';\n}\nif (tmaPlatform === 'unknown') {\n    const window = (0, url_1.getWindow)();\n    tmaPlatform = (_d = (_c = (_b = window === null || window === void 0 ? void 0 : window.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) === null || _c === void 0 ? void 0 : _c.platform) !== null && _d !== void 0 ? _d : 'unknown';\n}\nlet webAppVersion = '6.0';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppVersion) {\n    webAppVersion = initParams.tgWebAppVersion;\n}\nif (!webAppVersion) {\n    const window = (0, url_1.getWindow)();\n    webAppVersion = (_g = (_f = (_e = window === null || window === void 0 ? void 0 : window.Telegram) === null || _e === void 0 ? void 0 : _e.WebApp) === null || _f === void 0 ? void 0 : _f.version) !== null && _g !== void 0 ? _g : '6.0';\n}\n/**\n * Returns true if the app is running in TMA on the specified platform.\n * @param platforms\n */\nfunction isTmaPlatform(...platforms) {\n    return platforms.includes(tmaPlatform);\n}\n/**\n * Returns true if the app is running in TMA.\n */\nfunction isInTMA() {\n    var _a;\n    return tmaPlatform !== 'unknown' || !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n}\nfunction inTg() {\n    // return true\n    return isInTelegramBrowser() || isInTMA();\n}\n/**\n * Returns true if the app is running in the Telegram browser.\n */\nfunction isInTelegramBrowser() {\n    var _a;\n    const isTelegramWebview = !!((_a = (0, url_1.getWindow)()) === null || _a === void 0 ? void 0 : _a.TelegramWebview);\n    return (isInTMA() || isTelegramWebview) && tmaPlatform === 'unknown';\n}\n/**\n * Expand the app window.\n */\nfunction sendExpand() {\n    postEvent('web_app_expand', {});\n}\n/**\n * Opens link in TMA or in new tab and returns a function that closes the tab.\n * @param link The link to open.\n * @param fallback The function to call if the link can't be opened in TMA.\n */\nfunction sendOpenTelegramLink(link, fallback) {\n    const url = new URL(link);\n    if (url.protocol !== 'http:' && url.protocol !== 'https:') {\n        if (fallback) {\n            return fallback();\n        }\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Url protocol is not supported: ${url}`);\n    }\n    if (url.hostname !== 't.me') {\n        if (fallback) {\n            return fallback();\n        }\n        throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Url host is not supported: ${url}`);\n    }\n    const pathFull = url.pathname + url.search;\n    if (isIframe() || versionAtLeast('6.1')) {\n        postEvent('web_app_open_tg_link', { path_full: pathFull });\n    }\n    else {\n        (0, web_api_1.openLinkBlank)('https://t.me' + pathFull);\n    }\n}\nfunction isIframe() {\n    try {\n        const window = (0, url_1.getWindow)();\n        if (!window) {\n            return false;\n        }\n        return window.parent != null && window !== window.parent;\n    }\n    catch (e) {\n        return false;\n    }\n}\nfunction postEvent(eventType, eventData) {\n    try {\n        const window = (0, url_1.getWindow)();\n        if (!window) {\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Can't post event to parent window: window is not defined`);\n        }\n        if (window.TelegramWebviewProxy !== undefined) {\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.TelegramWebviewProxy.postEvent(eventType, JSON.stringify(eventData));\n        }\n        else if (window.external && 'notify' in window.external) {\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.external.notify(JSON.stringify({ eventType: eventType, eventData: eventData }));\n        }\n        else if (isIframe()) {\n            const trustedTarget = '*';\n            const message = JSON.stringify({ eventType: eventType, eventData: eventData });\n            (0, log_1.logDebug)('postEvent', eventType, eventData);\n            window.parent.postMessage(message, trustedTarget);\n        }\n        else {\n            throw new protocol_1.OKXConnectError(protocol_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Can't post event to TMA`);\n        }\n    }\n    catch (e) {\n        (0, log_1.logError)(`Can't post event to parent window: ${e}`);\n    }\n}\nfunction urlParseHashParams(locationHash) {\n    locationHash = locationHash.replace(/^#/, '');\n    let params = {};\n    if (!locationHash.length) {\n        return params;\n    }\n    if (locationHash.indexOf('=') < 0 && locationHash.indexOf('?') < 0) {\n        params._path = urlSafeDecode(locationHash);\n        return params;\n    }\n    let qIndex = locationHash.indexOf('?');\n    if (qIndex >= 0) {\n        let pathParam = locationHash.substr(0, qIndex);\n        params._path = urlSafeDecode(pathParam);\n        locationHash = locationHash.substr(qIndex + 1);\n    }\n    let query_params = urlParseQueryString(locationHash);\n    for (let k in query_params) {\n        params[k] = query_params[k];\n    }\n    return params;\n}\nfunction urlSafeDecode(urlencoded) {\n    try {\n        urlencoded = urlencoded.replace(/\\+/g, '%20');\n        return decodeURIComponent(urlencoded);\n    }\n    catch (e) {\n        return urlencoded;\n    }\n}\nfunction urlParseQueryString(queryString) {\n    let params = {};\n    if (!queryString.length) {\n        return params;\n    }\n    let queryStringParams = queryString.split('&');\n    let i, param, paramName, paramValue;\n    for (i = 0; i < queryStringParams.length; i++) {\n        param = queryStringParams[i].split('=');\n        paramName = urlSafeDecode(param[0]);\n        paramValue = param[1] == null ? null : urlSafeDecode(param[1]);\n        params[paramName] = paramValue;\n    }\n    return params;\n}\nfunction versionCompare(v1, v2) {\n    if (typeof v1 !== 'string')\n        v1 = '';\n    if (typeof v2 !== 'string')\n        v2 = '';\n    let v1List = v1.replace(/^\\s+|\\s+$/g, '').split('.');\n    let v2List = v2.replace(/^\\s+|\\s+$/g, '').split('.');\n    let a, i, p1, p2;\n    a = Math.max(v1List.length, v2List.length);\n    for (i = 0; i < a; i++) {\n        p1 = parseInt(v1List[i]) || 0;\n        p2 = parseInt(v2List[i]) || 0;\n        if (p1 === p2)\n            continue;\n        if (p1 > p2)\n            return 1;\n        return -1;\n    }\n    return 0;\n}\nfunction versionAtLeast(ver) {\n    return versionCompare(webAppVersion, ver) >= 0;\n}\n","\"use strict\";\nvar _a, _b, _c, _d;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.removeUrlLastSlash = removeUrlLastSlash;\nexports.addPathToUrl = addPathToUrl;\nexports.getUniversalLink = getUniversalLink;\nexports.openOKXDeeplink = openOKXDeeplink;\nexports.openOKXUniversalLink = openOKXUniversalLink;\nexports.openOKXDeeplinkWithFallback = openOKXDeeplinkWithFallback;\nexports.getWindow = getWindow;\nexports.isTelegramUrl = isTelegramUrl;\nexports.encodeTelegramUrlParameters = encodeTelegramUrlParameters;\nexports.encodeConnectParams = encodeConnectParams;\nexports.encodeTWAConnectURLParams = encodeTWAConnectURLParams;\nexports.getAppWalletDeepLink = getAppWalletDeepLink;\nexports.getAppWalletShortDeepLink = getAppWalletShortDeepLink;\nexports.getTelegramWalletTWAUrl = getTelegramWalletTWAUrl;\nexports.openOKXTMAWalletlinkWithFallback = openOKXTMAWalletlinkWithFallback;\nexports.isInTMA = isInTMA;\nexports.isInTelegramBrowser = isInTelegramBrowser;\nexports.getOKXLink = getOKXLink;\nconst protocol_1 = require(\"../protocol\");\nconst log_1 = require(\"./log\");\nconst constants_1 = require(\"../protocol/constants\");\nconst utils_1 = require(\"./utils\");\nconst tma_api_1 = require(\"./tma-api\");\nfunction removeUrlLastSlash(url) {\n    if (url.slice(-1) === '/') {\n        return url.slice(0, -1);\n    }\n    return url;\n}\nfunction addPathToUrl(url, path) {\n    return removeUrlLastSlash(url) + '/' + path;\n}\nfunction getUniversalLink(deeplinkUrl, useStandardUniversalLink = false) {\n    console.log(\"getUniversalLink deeplinkUrl:\", deeplinkUrl, \", useStandardUniversalLink:\", useStandardUniversalLink);\n    const replaceStrWithParam = `${protocol_1.standardDeeplink}?param=`;\n    if (!useStandardUniversalLink && deeplinkUrl.startsWith(replaceStrWithParam)) {\n        const cleanUrl = deeplinkUrl.replace(replaceStrWithParam, '');\n        (0, log_1.logDebug)(\"getUniversalLink cleanUrl:\", cleanUrl);\n        const deeplinkEncodeUrl = encodeURIComponent(cleanUrl);\n        (0, log_1.logDebug)(\"getUniversalLink standardUniversalLink:\", protocol_1.standardUniversalLink);\n        (0, log_1.logDebug)(\"getUniversalLink `${shortUniversalLink}?param=${deeplinkEncodeUrl}`:\", `${constants_1.shortUniversalLink}?param=${deeplinkEncodeUrl}`);\n        return `${constants_1.shortUniversalLink}?param=${deeplinkEncodeUrl}`;\n    }\n    else if (!useStandardUniversalLink && deeplinkUrl == protocol_1.standardDeeplink) {\n        (0, log_1.logDebug)(\"getUniversalLink shortUniversalLink:\", constants_1.shortUniversalLink);\n        return constants_1.shortUniversalLink;\n    }\n    else {\n        const deeplinkEncodeUrl = encodeURIComponent(deeplinkUrl);\n        console.log(\"getUniversalLink standardUniversalLink:\", protocol_1.standardUniversalLink);\n        return `${protocol_1.standardUniversalLink}?deeplink=${deeplinkEncodeUrl}`;\n    }\n}\nfunction openOKXDeeplink(deeplinkUrl) {\n    var _a;\n    const fullUrl = getUniversalLink(deeplinkUrl);\n    const isTelegram = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n    console.log(\"openOKXDeeplink fullUrl:\", fullUrl);\n    if (!(0, utils_1.isIos)()) {\n        let newWindow = null;\n        if (isTelegram) {\n            newWindow = window.open(deeplinkUrl, '_blank');\n        }\n        else {\n            window.location.href = deeplinkUrl;\n        }\n    }\n    else {\n        openOKXUniversalLink(fullUrl);\n    }\n}\nfunction openOKXUniversalLink(fullUrl) {\n    if (!(0, utils_1.isIos)()) {\n        // if (isTelegram) {\n        window.open(fullUrl, '_blank');\n        // } else {\n        //     window.location.href = fullUrl;\n        // }\n    }\n    else {\n        if (isInTMA()) {\n            window.open(fullUrl, '_blank');\n        }\n        else {\n            console.log(\"windowOpen[before]: \", Date.now());\n            if (window === null || window === void 0 ? void 0 : window.okxLogDebug) {\n                window.open(fullUrl, '_blank');\n            }\n            else {\n                window.open(fullUrl, '_self');\n            }\n            console.log(\"windowOpen[after]: \", Date.now());\n        }\n    }\n}\nfunction openOKXDeeplinkWithFallback(deeplinkUrl) {\n    var _a;\n    const fullUrl = getUniversalLink(deeplinkUrl);\n    const isTelegram = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n    console.log(\"openOKXDeeplinkWithFallback fullUrl:\", fullUrl);\n    let deepLinkOpened = false;\n    const timeoutDuration = 3000; // 1.5秒的等待时间\n    const downloadUrl = protocol_1.standardUniversalLink;\n    console.log(\"openOKXDeeplinkWithFallback standardUniversalLink:\", protocol_1.standardUniversalLink);\n    if (!(0, utils_1.isIos)()) {\n        let newWindow = null;\n        var fallbackToDownloadPage = () => {\n            if (!deepLinkOpened) {\n                if (newWindow) {\n                    newWindow.open(fullUrl, '_self');\n                }\n                else {\n                    window.open(fullUrl, '_blank');\n                }\n            }\n        };\n        if (isTelegram) {\n            newWindow = window.open(deeplinkUrl, '_blank');\n        }\n        else {\n            window.location.href = deeplinkUrl;\n        }\n        setTimeout(fallbackToDownloadPage, timeoutDuration);\n        window.addEventListener('blur', () => {\n            deepLinkOpened = true;\n        }, { once: true });\n        document.addEventListener('visibilitychange', () => {\n            if (document.visibilityState === 'hidden') {\n                deepLinkOpened = true;\n            }\n        });\n    }\n    else {\n        if (isTelegram) {\n            window.open(fullUrl, '_blank');\n        }\n        else {\n            console.log(\"windowOpen[before]: \", Date.now());\n            if (window === null || window === void 0 ? void 0 : window.okxLogDebug) {\n                window.open(fullUrl, '_blank');\n            }\n            else {\n                window.open(fullUrl, '_self');\n            }\n            console.log(\"windowOpen[after]: \", Date.now());\n        }\n    }\n}\nfunction getWindow() {\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    return undefined;\n}\nfunction isTelegramUrl(link) {\n    if (!link) {\n        return false;\n    }\n    const url = new URL(link);\n    return url.protocol === 'tg:' || url.hostname === 't.me';\n}\nfunction encodeTelegramUrlParameters(parameters) {\n    let encodedParameters = parameters;\n    encodedParameters = encodedParameters.replace(/\\./g, '%2E');\n    encodedParameters = encodedParameters.replace(/-/g, '%2D');\n    encodedParameters = encodedParameters.replace(/_/g, '%5F');\n    encodedParameters = encodedParameters.replace(/&/g, '-');\n    encodedParameters = encodedParameters.replace(/=/g, '__');\n    encodedParameters = encodedParameters.replace(/%/g, '--');\n    return encodedParameters;\n}\nfunction encodeConnectParams(connectRequest) {\n    const connectRequestStr = JSON.stringify(connectRequest);\n    (0, log_1.logDebug)(\"url encodeConnectParams connectRequestStr \", connectRequestStr);\n    const utf8Array = new TextEncoder().encode(connectRequestStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    // .replace(/\\+/g, '-')\n    // .replace(/\\//g, '_')\n    // .replace(/=+$/, ''); //Compatible with older versions of iOS. Cannot be added directly  (Base64 URL Safe)\n    (0, log_1.logDebug)(\"url encodeConnectParams base64Encoded \", base64Encoded);\n    return base64Encoded;\n}\nfunction encodeTWAConnectURLParams(connectRequest) {\n    const connectRequestStr = JSON.stringify({ topic: connectRequest.topic, clientId: connectRequest.clientId });\n    (0, log_1.logDebug)(\"url encodeConnectParams connectRequestStr\", connectRequestStr);\n    const utf8Array = new TextEncoder().encode(connectRequestStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    return base64Encoded;\n}\nfunction getAppWalletDeepLink(connectParam) {\n    return `${protocol_1.standardDeeplink}?param=${connectParam}`;\n}\nfunction getAppWalletShortDeepLink(topic, clientId) {\n    return `${constants_1.shortUniversalLink}?topic=${topic}${(0, utils_1.getLastSixMd5Hash)(clientId)}`;\n}\n//  make telegram okx wallet TWA url\nfunction getTelegramWalletTWAUrl(connectParam, redirectStr) {\n    let base64Content = { okxconnect: \"\", redirect: \"\", extraparams: \"\" };\n    if (connectParam) {\n        base64Content.okxconnect = connectParam;\n    }\n    if (redirectStr) {\n        base64Content.redirect = redirectStr;\n    }\n    let base64ContentStr = JSON.stringify(base64Content);\n    const utf8Array = new TextEncoder().encode(base64ContentStr);\n    const base64Encoded = btoa(String.fromCharCode(...utf8Array));\n    const urlSafeBase64 = (0, utils_1.toSafeBase64FromBase64)(base64Encoded);\n    (0, log_1.logDebug)('[TWA] open link:', base64Content, base64Encoded);\n    if (connectParam || redirectStr) {\n        if (!isInTMA()) {\n            // return `http://localhost:5173?tgWebAppStartParam=${urlSafeBase64}`\n            if ((0, constants_1.getTestTwaUrl)()) {\n                return `${(0, constants_1.getTestTwaUrl)()}?tgWebAppStartParam=${urlSafeBase64}`;\n            }\n            else {\n                return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}&startapp=${urlSafeBase64}`;\n            }\n        }\n        else {\n            if ((0, constants_1.getTestTgTwaUrl)()) {\n                return `${(0, constants_1.getTestTgTwaUrl)()}?startapp=${urlSafeBase64}`;\n            }\n            else {\n                return `https://t.me/${constants_1.tgwalletName}/start?startapp=${urlSafeBase64}`;\n            }\n        }\n    }\n    if (!isInTMA()) {\n        // return \"http://localhost:5173\"\n        if ((0, constants_1.getTestTwaUrl)()) {\n            return `${(0, constants_1.getTestTwaUrl)()}`;\n        }\n        else {\n            return `tg://resolve?domain=${constants_1.tgwalletName}&appname=${constants_1.tgwalletAppName}`;\n        }\n    }\n    else {\n        if ((0, constants_1.getTestTgTwaUrl)()) {\n            return `${(0, constants_1.getTestTgTwaUrl)()}`;\n        }\n        else {\n            return `https://t.me/${constants_1.tgwalletName}/start`;\n        }\n    }\n}\n//  open TWA url in telegram\nfunction openOKXTMAWalletlinkWithFallback(twaDeepLink) {\n    var _a, _b, _c, _d, _e;\n    (0, log_1.logDebug)('[TWA] open link:', twaDeepLink, \"isInTMA ==> \", isInTMA());\n    if (!isInTMA()) {\n        if ((0, constants_1.getTestTwaUrl)()) {\n            window.open(twaDeepLink, '_blank');\n        }\n        else {\n            window.open(twaDeepLink, '_self');\n        }\n    }\n    else {\n        if ((_b = (_a = getWindow()) === null || _a === void 0 ? void 0 : _a.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) {\n            (_e = (_d = (_c = getWindow()) === null || _c === void 0 ? void 0 : _c.Telegram) === null || _d === void 0 ? void 0 : _d.WebApp) === null || _e === void 0 ? void 0 : _e.openTelegramLink(twaDeepLink);\n        }\n        else {\n            (0, tma_api_1.sendOpenTelegramLink)(twaDeepLink);\n        }\n    }\n}\n/**\n * Returns true if the app is running in TMA.\n */\nfunction urlSafeDecode(urlencoded) {\n    try {\n        urlencoded = urlencoded.replace(/\\+/g, '%20');\n        return decodeURIComponent(urlencoded);\n    }\n    catch (e) {\n        return urlencoded;\n    }\n}\nfunction urlParseQueryString(queryString) {\n    let params = {};\n    if (!queryString.length) {\n        return params;\n    }\n    let queryStringParams = queryString.split('&');\n    let i, param, paramName, paramValue;\n    for (i = 0; i < queryStringParams.length; i++) {\n        param = queryStringParams[i].split('=');\n        paramName = urlSafeDecode(param[0]);\n        paramValue = param[1] == null ? null : urlSafeDecode(param[1]);\n        params[paramName] = paramValue;\n    }\n    return params;\n}\nfunction urlParseHashParams(locationHash) {\n    locationHash = locationHash.replace(/^#/, '');\n    let params = {};\n    if (!locationHash.length) {\n        return params;\n    }\n    if (locationHash.indexOf('=') < 0 && locationHash.indexOf('?') < 0) {\n        params._path = urlSafeDecode(locationHash);\n        return params;\n    }\n    let qIndex = locationHash.indexOf('?');\n    if (qIndex >= 0) {\n        let pathParam = locationHash.substr(0, qIndex);\n        params._path = urlSafeDecode(pathParam);\n        locationHash = locationHash.substr(qIndex + 1);\n    }\n    let query_params = urlParseQueryString(locationHash);\n    for (let k in query_params) {\n        params[k] = query_params[k];\n    }\n    return params;\n}\nlet initParams = {};\ntry {\n    let locationHash = location.hash.toString();\n    initParams = urlParseHashParams(locationHash);\n}\ncatch (e) { }\nlet tmaPlatform = 'unknown';\nif (initParams === null || initParams === void 0 ? void 0 : initParams.tgWebAppPlatform) {\n    tmaPlatform = (_a = initParams.tgWebAppPlatform) !== null && _a !== void 0 ? _a : 'unknown';\n}\nif (tmaPlatform === 'unknown') {\n    const window = getWindow();\n    tmaPlatform = (_d = (_c = (_b = window === null || window === void 0 ? void 0 : window.Telegram) === null || _b === void 0 ? void 0 : _b.WebApp) === null || _c === void 0 ? void 0 : _c.platform) !== null && _d !== void 0 ? _d : 'unknown';\n}\nfunction isInTMA() {\n    var _a;\n    return tmaPlatform !== 'unknown' || !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebviewProxy);\n}\n/**\n * Returns true if the app is running in the Telegram browser.\n */\nfunction isInTelegramBrowser() {\n    var _a;\n    const isTelegramWebview = !!((_a = getWindow()) === null || _a === void 0 ? void 0 : _a.TelegramWebview);\n    return (isInTMA() || isTelegramWebview) && tmaPlatform === 'unknown';\n}\nfunction getOKXLink(connectRequest, useMini = false, tmaReturnUrl) {\n    (0, log_1.logDebug)(`url  getOKXLink() called connectRequest==> ${JSON.stringify(connectRequest)}  useMini=> ${useMini}  tmaReturnUrl==> ${tmaReturnUrl}`);\n    if (useMini) {\n        var encodeTGParams = encodeTWAConnectURLParams(connectRequest);\n        return getTelegramWalletTWAUrl(encodeTGParams, tmaReturnUrl !== null && tmaReturnUrl !== void 0 ? tmaReturnUrl : \"back\");\n    }\n    else {\n        if ((0, utils_1.useShortLink)()) {\n            return getAppWalletShortDeepLink(connectRequest.topic, connectRequest.clientId);\n        }\n        else {\n            const base64Encoded = encodeConnectParams(connectRequest);\n            return `${protocol_1.standardDeeplink}?param=${base64Encoded}`;\n        }\n    }\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isValidObject = exports.RANDOM_LENGTH = exports.isBrowser = exports.resolveLocalStorage = exports.hasLocalStorage = exports.hasBuiltInWebSocket = exports.resolveWebSocketImplementation = void 0;\nexports.hexToByteArray = hexToByteArray;\nexports.getChainId = getChainId;\nexports.toHexString = toHexString;\nexports.concatUint8Arrays = concatUint8Arrays;\nexports.splitToUint8Arrays = splitToUint8Arrays;\nexports.base64encode = base64encode;\nexports.base64decode = base64decode;\nexports.checkWSUrl = checkWSUrl;\nexports.hashKey = hashKey;\nexports.generateRandomBytes32 = generateRandomBytes32;\nexports.generateTopic = generateTopic;\nexports.isIos = isIos;\nexports.getLastSixMd5Hash = getLastSixMd5Hash;\nexports.toSafeBase64FromBase64 = toSafeBase64FromBase64;\nexports.useShortLink = useShortLink;\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst tweetnacl_util_1 = __importDefault(require(\"tweetnacl-util\"));\nconst to_string_1 = require(\"uint8arrays/to-string\");\nconst sha256_1 = require(\"@stablelib/sha256\");\nconst safejson_1 = require(\"./safejson\");\nconst log_1 = require(\"./log\");\nconst stringUtils_1 = require(\"../utils/stringUtils\");\nconst crypto_js_1 = __importDefault(require(\"crypto-js\"));\nconst BASE16 = \"base16\";\nfunction hexToByteArray(hexString) {\n    if (hexString.length % 2 !== 0) {\n        throw new Error(`Cannot convert ${hexString} to bytesArray`);\n    }\n    const result = new Uint8Array(hexString.length / 2);\n    for (let i = 0; i < hexString.length; i += 2) {\n        result[i / 2] = parseInt(hexString.slice(i, i + 2), 16);\n    }\n    return result;\n}\nfunction getChainId(chain) {\n    return chain.includes(\":\") ? chain.split(\":\")[1] : chain;\n}\nfunction toHexString(byteArray) {\n    let hexString = '';\n    byteArray.forEach(byte => {\n        hexString += ('0' + (byte & 0xff).toString(16)).slice(-2);\n    });\n    return hexString;\n}\nfunction concatUint8Arrays(buffer1, buffer2) {\n    const mergedArray = new Uint8Array(buffer1.length + buffer2.length);\n    mergedArray.set(buffer1);\n    mergedArray.set(buffer2, buffer1.length);\n    return mergedArray;\n}\nfunction splitToUint8Arrays(array, index) {\n    if (index >= array.length) {\n        throw new Error('Index is out of buffer');\n    }\n    const subArray1 = array.slice(0, index);\n    const subArray2 = array.slice(index);\n    return [subArray1, subArray2];\n}\nfunction encodeUint8Array(value, urlSafe) {\n    const encoded = tweetnacl_util_1.default.encodeBase64(value);\n    if (!urlSafe) {\n        return encoded;\n    }\n    return encodeURIComponent(encoded);\n}\nfunction decodeToUint8Array(value, urlSafe) {\n    if (urlSafe) {\n        value = decodeURIComponent(value);\n    }\n    return tweetnacl_util_1.default.decodeBase64(value);\n}\nfunction base64encode(value, urlSafe) {\n    let uint8Array;\n    if (value instanceof Uint8Array) {\n        uint8Array = value;\n    }\n    else {\n        if (typeof value !== 'string') {\n            value = (0, safejson_1.safeJsonStringify)(value);\n        }\n        uint8Array = tweetnacl_util_1.default.decodeUTF8(value);\n    }\n    return encodeUint8Array(uint8Array, urlSafe);\n}\nfunction base64decode(value, urlSafe) {\n    const decodedUint8Array = decodeToUint8Array(value, urlSafe);\n    return {\n        toString() {\n            return tweetnacl_util_1.default.encodeUTF8(decodedUint8Array);\n        },\n        toObject() {\n            try {\n                return (0, safejson_1.safeJsonParse)(tweetnacl_util_1.default.encodeUTF8(decodedUint8Array));\n            }\n            catch (e) {\n                return null;\n            }\n        },\n        toUint8Array() {\n            return decodedUint8Array;\n        }\n    };\n}\nfunction checkWSUrl(url) {\n    const match = url.match(new RegExp(/^\\w+:/, \"gi\"));\n    if (!match || !match.length) {\n        return false;\n    }\n    let scheme = match[0];\n    if (scheme === undefined) {\n        return false;\n    }\n    return new RegExp(\"^wss?:\").test(scheme);\n}\nconst resolveWebSocketImplementation = () => {\n    if (typeof WebSocket !== \"undefined\") {\n        return WebSocket;\n    }\n    else if (typeof global !== \"undefined\" && typeof global.WebSocket !== \"undefined\") {\n        return global.WebSocket;\n    }\n    else if (typeof window !== \"undefined\" && typeof window.WebSocket !== \"undefined\") {\n        return window.WebSocket;\n    }\n    else if (typeof self !== \"undefined\" && typeof self.WebSocket !== \"undefined\") {\n        return self.WebSocket;\n    }\n    return WebSocket;\n    //\n    // return require(\"ws\");\n};\nexports.resolveWebSocketImplementation = resolveWebSocketImplementation;\nconst hasBuiltInWebSocket = () => typeof WebSocket !== \"undefined\" ||\n    (typeof global !== \"undefined\" && typeof global.WebSocket !== \"undefined\") ||\n    (typeof window !== \"undefined\" && typeof window.WebSocket !== \"undefined\") ||\n    (typeof self !== \"undefined\" && typeof self.WebSocket !== \"undefined\");\nexports.hasBuiltInWebSocket = hasBuiltInWebSocket;\nconst hasLocalStorage = () => (typeof global !== \"undefined\" && (typeof global.localStorage !== \"undefined\")) ||\n    (typeof window !== \"undefined\" && typeof window.localStorage !== \"undefined\");\nexports.hasLocalStorage = hasLocalStorage;\nconst resolveLocalStorage = () => {\n    if (typeof global !== \"undefined\" && typeof global.localStorage !== \"undefined\") {\n        return global.localStorage;\n    }\n    else if (typeof window !== \"undefined\" && typeof window.localStorage !== \"undefined\") {\n        return window.localStorage;\n    }\n    return localStorage;\n};\nexports.resolveLocalStorage = resolveLocalStorage;\nconst isBrowser = () => typeof window !== \"undefined\";\nexports.isBrowser = isBrowser;\nexports.RANDOM_LENGTH = 32;\nfunction hashKey(key, encode = BASE16) {\n    (0, log_1.logDebug)(`hash key called ${key}`);\n    const result = (0, sha256_1.hash)((0, stringUtils_1.okxfromString)(key, encode));\n    return (0, to_string_1.toString)(result, encode);\n}\nfunction generateRandomBytes32() {\n    return tweetnacl_1.default.randomBytes(exports.RANDOM_LENGTH);\n}\nfunction generateTopic() {\n    let randomBytes32 = generateRandomBytes32();\n    (0, log_1.logDebug)(`generate topic called ${randomBytes32}`);\n    return hashKey((0, to_string_1.toString)(randomBytes32, BASE16));\n}\nconst isValidObject = (obj) => Object.getPrototypeOf(obj) === Object.prototype && Object.keys(obj).length;\nexports.isValidObject = isValidObject;\nfunction isIos() {\n    const userAgent = navigator.userAgent;\n    const maxTouchPoints = navigator.maxTouchPoints || 0;\n    // 检测 iPhone、iPod 和传统的 iPad\n    const isIOSDevice = /iPad|iPhone|iPod/.test(userAgent) && !window.MSStream;\n    // 针对 iPadOS 13 及以上的设备进行额外判断\n    const isIPadOS = (userAgent.includes('Mac') && maxTouchPoints > 1);\n    (0, log_1.logDebug)(`utils isIos >>>isIOSDevice: ${isIOSDevice}    >> isIPadOS: ${isIPadOS}`);\n    // 如果是 iOS 设备或者是 iPadOS 设备，返回 true\n    return isIOSDevice || isIPadOS;\n}\nfunction getLastSixMd5Hash(input) {\n    // 生成 MD5 哈希\n    const hash = crypto_js_1.default.MD5(input).toString();\n    // 获取最后六位\n    return hash.slice(-6);\n}\nfunction toSafeBase64FromBase64(base64) {\n    return base64\n        .replace(/=/g, \"\")\n        .replace(/\\+/g, \"-\")\n        .replace(/\\//g, \"_\");\n}\nfunction useShortLink() {\n    return !!window.useShortLink;\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.openLink = openLink;\nexports.openLinkBlank = openLinkBlank;\nexports.openDeeplinkWithFallback = openDeeplinkWithFallback;\nexports.isMobileUserAgent = isMobileUserAgent;\nexports.getUserAgent = getUserAgent;\nexports.isOS = isOS;\nexports.isBrowser = isBrowser;\nconst ua_parser_js_1 = __importDefault(require(\"ua-parser-js\"));\nconst log_1 = require(\"./log\");\nconst tma_api_1 = require(\"./tma-api\");\nfunction openLink(href, target = '_self') {\n    (0, log_1.logDebug)('openLink', href, target);\n    window.open(href, target, 'noopener noreferrer');\n}\nfunction openLinkBlank(href) {\n    openLink(href, '_blank');\n}\nfunction openDeeplinkWithFallback(href, fallback) {\n    const doFallback = () => {\n        if (isBrowser('safari') || (isOS('android') && isBrowser('firefox'))) {\n            // Safari does not support fallback to direct link.\n            return;\n        }\n        fallback();\n    };\n    const fallbackTimeout = setTimeout(() => doFallback(), 500);\n    window.addEventListener('blur', () => clearTimeout(fallbackTimeout), { once: true });\n    if (isOS('android') && (0, tma_api_1.inTg)()) {\n        openLink(href, '_blank');\n    }\n    else {\n        openLink(href, '_self');\n    }\n}\nfunction isMobileUserAgent() {\n    let check = false;\n    (function (a) {\n        if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) ||\n            /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.slice(0, 4)))\n            check = true;\n    })(navigator.userAgent ||\n        navigator.vendor ||\n        window.opera);\n    return check;\n}\nfunction getUserAgent() {\n    var _a, _b, _c;\n    const results = new ua_parser_js_1.default().getResult();\n    const osName = (_a = results.os.name) === null || _a === void 0 ? void 0 : _a.toLowerCase();\n    const deviceModel = (_b = results.device.model) === null || _b === void 0 ? void 0 : _b.toLowerCase();\n    let os;\n    switch (true) {\n        case deviceModel === 'ipad':\n            os = 'ipad';\n            break;\n        case osName === 'ios':\n            os = 'ios';\n            break;\n        case osName === 'android':\n            os = 'android';\n            break;\n        case osName === 'mac os':\n            os = 'macos';\n            break;\n        case osName === 'linux':\n            os = 'linux';\n            break;\n        case osName === null || osName === void 0 ? void 0 : osName.includes('windows'):\n            os = 'windows';\n            break;\n    }\n    const browserName = (_c = results.browser.name) === null || _c === void 0 ? void 0 : _c.toLowerCase();\n    let browser;\n    switch (true) {\n        case browserName === 'chrome':\n            browser = 'chrome';\n            break;\n        case browserName === 'firefox':\n            browser = 'firefox';\n            break;\n        case browserName === null || browserName === void 0 ? void 0 : browserName.includes('safari'):\n            browser = 'safari';\n            break;\n        case browserName === null || browserName === void 0 ? void 0 : browserName.includes('opera'):\n            browser = 'opera';\n            break;\n    }\n    return {\n        os,\n        browser\n    };\n}\nfunction isOS(...os) {\n    return os.includes(getUserAgent().os);\n}\nfunction isBrowser(...browser) {\n    return browser.includes(getUserAgent().browser);\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXBtcProvider = void 0;\nconst _1 = require(\"./\");\nclass OKXBtcProvider {\n    constructor(provider) {\n        this.caip = [\n            \"btc:mainnet\",\n            \"fractal:mainnet\"\n        ];\n        this.provider = provider;\n    }\n    getAddressForChainId(chainId) {\n        var _a, _b;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let accounts = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['btc']) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        });\n        if (accounts == undefined || accounts.length < 0) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `no connected account`);\n        }\n        let account = accounts[0];\n        const address = account.split(':')[2];\n        return address;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c;\n        let ns = this.checkChainId(chainId);\n        if (ns == undefined) {\n            throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n        }\n        let extra = (_c = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces['btc']) === null || _b === void 0 ? void 0 : _b.extra) === null || _c === void 0 ? void 0 : _c[chainId];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"compressedPublicKey\"];\n        }\n        return {\n            address: this.getAddressForChainId(chainId),\n            publicKey: publicKey\n        };\n    }\n    /**\n     *\n     * @param signStr\n     * @param chainId\n     * @param type\n     * @returns\n     */\n    signMessage(chainId, signStr, type) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (signStr === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signMessage parmas error`);\n            }\n            let params = {\n                signStr: signStr,\n                from: this.getAddressForChainId(chainId)\n            };\n            if (type) {\n                params.type = type;\n            }\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signMessage\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param toAddress\n     * @param satoshis\n     * @param options { feeRate: 0 }\n     * @returns\n     */\n    sendBitcoin(chainId, toAddress, satoshis, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            let params = {\n                from: this.getAddressForChainId(chainId),\n                to: toAddress,\n                value: (satoshis / 100000000).toString(),\n            };\n            if (options === null || options === void 0 ? void 0 : options.feeRate) {\n                params[\"satBytes\"] = options.feeRate.toString();\n            }\n            let result = yield this.send(chainId, params);\n            if (result !== undefined && ('txhash' in result)) {\n                // return txhash directly\n                return result.txhash;\n            }\n            // or return unexpected result\n            return result;\n        });\n    }\n    //  from - string：当前连接的钱包的 BTC 地址\n    //  to - string：接受 BTC 的地址\n    //  value - string：发送 BTC 的数量\n    //  satBytes - string： (可选) 自定义费率\n    //  memo - string： (可选) 指定 outputs OP_RETURN 内容 示例\n    //  memoPos - number： (可选) 指定 outputs OP_RETURN 输出位置，如果传了 memo 则必须传入 memoPos 指定位置，否则 memo 不生效\n    send(chainId, input) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (!this.checkParameters(input, 'to', 'value')) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send parmas  error`);\n            }\n            input[\"from\"] = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: 'btc_send',\n                    params: input\n                }, chainId);\n                if ('result' in ret) {\n                    return {\n                        txhash: ret.result\n                    };\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param psbtHex string 要签名的 psbt 的十六进制字符串\n     * @param options object { autoFinalized: 0 }\n     */\n    signPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.signPsbts(chainId, [psbtHex], [options]).then(psbtResults => {\n                    let results = JSON.parse(psbtResults);\n                    resolve(results[0]);\n                }).catch(error => {\n                    reject(error);\n                });\n            });\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHexs Array\n     * @param options Array [{ autoFinalized: 0 }]\n     * @returns\n     */\n    signPsbts(chainId, psbtHexs, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHexs === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHexs: psbtHexs,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signPsbts\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param chainId\n     * @param psbtHex string\n     * @param options object\n     * @returns\n     */\n    signAndPushPsbt(chainId, psbtHex, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (psbtHex === undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signPsbts params error`);\n            }\n            let params = {\n                psbtHex: psbtHex,\n                options: options\n            };\n            params.from = this.getAddressForChainId(chainId);\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_signAndPushPsbt\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return JSON.parse(ret.result);\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method send request error: ${error}`);\n            }\n        });\n    }\n    /**\n     *\n     * @param address string, receiver address\n     * @param inscriptionId string, 铭文 ID + 协议，没有传协议则默认是 Ordinals NFT ，目前仅支持 Ordinals 及 Atomicals 协议\n     * @param options object, { feeRate: number } custom rates\n     */\n    sendInscription(chainId, address, inscriptionId, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let extension = {\n                address: address,\n                inscriptionId: inscriptionId,\n                options: options\n            };\n            let ns = this.checkChainId(chainId);\n            if (ns == undefined) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `invalid chainId`);\n            }\n            if (address === 'undefined') {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method sendInscription params error`);\n            }\n            var feeRate = 0;\n            if (options && ('feeRate' in options)) {\n                feeRate = options.feeRate;\n            }\n            let coinId = '';\n            let from = this.getAddressForChainId(chainId);\n            var protocolId = 7; //ProtocolIdBRCNFT\n            if (inscriptionId !== 'undefined') {\n                let atomicSuffix = \"-Atomicals\";\n                let ordinalsSuffix = \"-Ordinals\";\n                if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(atomicSuffix.toLowerCase())) {\n                    protocolId = 8; //WXRCProtocolIdARCNFT\n                    inscriptionId = this.removeSuffix(inscriptionId, atomicSuffix);\n                }\n                else if (inscriptionId === null || inscriptionId === void 0 ? void 0 : inscriptionId.toLowerCase().endsWith(ordinalsSuffix.toLowerCase())) {\n                    inscriptionId = this.removeSuffix(inscriptionId, ordinalsSuffix);\n                }\n            }\n            let params = {\n                scenario: 5,\n                feeRate: feeRate,\n                txType: \"20\",\n                to: address,\n                batchBean: [\n                    {\n                        coinAmount: \"1\",\n                        nftId: inscriptionId,\n                        protocolId: protocolId,\n                        coinId: coinId,\n                        inscriptionId: \"\",\n                        from: from\n                    }\n                ],\n                extension: extension\n            };\n            try {\n                const ret = yield this.provider.request({\n                    method: \"btc_sendInscription\",\n                    params: params\n                }, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                if (error instanceof _1.OKXConnectError) {\n                    throw error;\n                }\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    removeSuffix(str, suffix) {\n        if (str.endsWith(suffix)) {\n            return str.slice(0, str.length - suffix.length);\n        }\n        return str;\n    }\n    checkParameters(params, ...keys) {\n        var unexistKeys = [];\n        keys.forEach(key => {\n            if (!(`${key}` in params)) {\n                unexistKeys.push(key);\n            }\n        });\n        if (unexistKeys.length > 0) {\n            console.log('not find key: ', unexistKeys.join(\",\"));\n            return false;\n        }\n        return true;\n    }\n    /**\n     *\n     * @param chainId eg. btc:mainnet\n     * @returns eg. btc\n     */\n    checkChainId(chainId) {\n        if (this.caip.includes(chainId)) {\n            let [namespaceKey, _] = chainId.split(\":\");\n            return namespaceKey;\n        }\n        return undefined;\n    }\n}\nexports.OKXBtcProvider = OKXBtcProvider;\nexports.default = OKXBtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXCosmosProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXCosmosProvider {\n    constructor(provider) {\n        this.provider = provider;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e, _f;\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount chainId:\", chainId);\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount namespaces:\", JSON.stringify((_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces));\n        let account = (_c = (_b = this.provider.session) === null || _b === void 0 ? void 0 : _b.namespaces[core_1.NameSpaceKeyCosmos]) === null || _c === void 0 ? void 0 : _c.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount account:\", JSON.stringify(account));\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        (0, core_1.logDebug)(\"OKXCosmosProvider getAccount address:\", address);\n        let extra = (_f = (_e = (_d = this.provider.session) === null || _d === void 0 ? void 0 : _d.namespaces[core_1.NameSpaceKeyCosmos]) === null || _e === void 0 ? void 0 : _e.extra) === null || _f === void 0 ? void 0 : _f[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n            console.log(\"aptos_publicKey\", publicKey);\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            algo: \"secp256k1\",\n            address: address,\n            bech32Address: address,\n            pubKey: this.hexToUint8Array(publicKey),\n        };\n    }\n    signArbitrary(chainId, signerAddress, data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const base64Encoded = window.btoa(data);\n            const signDoc = {\n                chain_id: \"\",\n                account_number: \"0\",\n                sequence: \"0\",\n                fee: {\n                    gas: \"0\",\n                    amount: []\n                },\n                msgs: [{\n                        \"type\": \"sign/MsgSignData\",\n                        \"value\": {\n                            \"signer\": signerAddress,\n                            \"data\": base64Encoded\n                        }\n                    }],\n                memo: \"\"\n            };\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signArbitrary\",\n                \"params\": {\n                    \"signer\": signerAddress,\n                    \"chain_id\": chainId.split(\":\")[1],\n                    \"data\": signDoc\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    if (typeof ret.result == \"string\") {\n                        return JSON.parse(ret.result);\n                    }\n                    else {\n                        return ret.result;\n                    }\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signAmino(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (signDoc.msgs[0].type == \"sign/MsgSignData\") {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signArbitrary\",\n                    \"params\": {\n                        \"signer\": signerAddress,\n                        \"chain_id\": chainId.split(\":\")[1],\n                        \"data\": signDoc\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        return ret.result;\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    return error;\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                }\n            }\n            else {\n                let signData = {\n                    \"chainId\": chainId,\n                    \"method\": \"cosmos_signAmino\",\n                    \"params\": {\n                        \"signer\": signerAddress,\n                        \"chainId\": chainId.split(\":\")[1],\n                        \"sign_doc\": signDoc,\n                        \"signOptions\": signOptions\n                    }\n                };\n                try {\n                    const ret = yield this.provider.request(signData, chainId);\n                    if ('result' in ret) {\n                        const resData = JSON.parse(ret.result);\n                        console.log(\"signdoc\", signDoc, resData.signDoc);\n                        signDoc.fee = resData.signDoc.fee;\n                        return { signed: signDoc, signature: resData.signature };\n                    }\n                    else {\n                        let errorData = ret;\n                        return errorData.error;\n                    }\n                }\n                catch (error) {\n                    // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signAmino request error`);\n                    return error;\n                }\n            }\n        });\n    }\n    signDirect(chainId, signerAddress, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const object = {\n                bodyBytes: this.bufferToHex(signDoc.bodyBytes),\n                authInfoBytes: this.bufferToHex(signDoc.authInfoBytes),\n                chainId: signDoc.chainId,\n                accountNumber: signDoc.accountNumber ? signDoc.accountNumber.toString() : null,\n                signOptions: signOptions ? signOptions : null\n            };\n            let data = {\n                \"chainId\": chainId,\n                \"method\": \"cosmos_signDirect\",\n                \"params\": {\n                    \"signer\": signerAddress,\n                    \"chainId\": chainId.split(\":\")[1],\n                    \"sign_doc\": object,\n                }\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    const res = JSON.parse(ret.result);\n                    console.log(\"signdirect result\", res);\n                    signDoc.authInfoBytes = this.messageToBuffer(res.signDoc.authInfoBytes);\n                    return { signed: signDoc, signature: res.signature };\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    messageToBuffer(message) {\n        var buffer = Uint8Array.from([]);\n        try {\n            if (typeof message === \"string\") {\n                buffer = this.hexToUint8Array(message.replace(\"0x\", \"\"));\n            }\n            else {\n                buffer = Uint8Array.from(message);\n            }\n        }\n        catch (err) {\n            console.log(`messageToBuffer error: ${err}`);\n        }\n        return buffer;\n    }\n    bufferToHex(arr) {\n        let output = [...new Uint8Array(arr)]\n            .map(x => x.toString(16).padStart(2, '0'))\n            .join('');\n        return '0x' + output;\n    }\n    hexToUint8Array(hexString) {\n        if (hexString.length % 2 !== 0) {\n            throw \"Invalid hexString\";\n        }\n        var arrayBuffer = new Uint8Array(hexString.length / 2);\n        for (var i = 0; i < hexString.length; i += 2) {\n            var byteValue = parseInt(hexString.substr(i, 2), 16);\n            if (isNaN(byteValue)) {\n                throw \"Invalid hexString\";\n            }\n            arrayBuffer[i / 2] = byteValue;\n        }\n        return arrayBuffer;\n    }\n}\nexports.OKXCosmosProvider = OKXCosmosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTonProvider = void 0;\nconst _1 = require(\"./\");\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXTonProvider {\n    constructor(generator) {\n        this.statusChangeSubscriptions = [];\n        this.statusChangeErrorSubscriptions = [];\n        this.provider = generator;\n        this.provider.on(\"connect\", () => {\n            let tonWallet = this.wallet();\n            (0, core_1.logDebug)(\"OKXTONProvider event connect:\", JSON.stringify(tonWallet));\n            this.statusChangeSubscriptions.forEach(callback => callback(tonWallet));\n        });\n        this.provider.on(\"reconnect\", () => {\n            let tonWallet = this.wallet();\n            (0, core_1.logDebug)(\"OKXTONProvider event reconnect:\", JSON.stringify(tonWallet));\n            this.statusChangeSubscriptions.forEach(callback => callback(tonWallet));\n        });\n        this.provider.on(\"disconnect\", () => {\n            (0, core_1.logDebug)(\"OKXTONProvider event disconnect:\");\n            this.statusChangeSubscriptions.forEach(callback => callback(null));\n        });\n        this.provider.on(\"connect_error\", (error) => {\n            (0, core_1.logDebug)(\"OKXTONProvider event connect_error:\", JSON.stringify(error));\n            this.statusChangeErrorSubscriptions.forEach(errorsHandler => errorsHandler(error));\n        });\n    }\n    connected() {\n        if (this.provider.connected()) {\n            return !!this.provider.session.namespaces[\"ton\"];\n        }\n        return false;\n    }\n    account() {\n        try {\n            if (!this.provider.session) {\n                return null;\n            }\n            let tonNameSpace = this.provider.session.namespaces['ton'];\n            if (!tonNameSpace || !tonNameSpace.payload || !tonNameSpace.payload.ton_addr) {\n                return null;\n            }\n            let ton_addr = tonNameSpace.payload.ton_addr;\n            return {\n                address: ton_addr.address,\n                chain: ton_addr.network,\n                walletStateInit: ton_addr.walletStateInit,\n                publicKey: ton_addr.publicKey,\n            };\n        }\n        catch (e) {\n            (0, core_1.logDebug)(\"OKXTONProvider account  error:\", JSON.stringify(e));\n            return null;\n        }\n    }\n    wallet() {\n        if (this.connected()) {\n            try {\n                let sessionWallet = this.provider.session.wallet;\n                let tonDeviceInfo = {\n                    platform: sessionWallet.platform,\n                    appName: sessionWallet.appName,\n                    appVersion: sessionWallet.appVersion,\n                    maxProtocolVersion: sessionWallet.maxProtocolVersion,\n                    features: ['ton_sendTransaction'],\n                };\n                const wallet = {\n                    device: tonDeviceInfo,\n                    provider: \"http\",\n                    account: this.account()\n                };\n                let tonNameSpace = this.provider.session.namespaces['ton'];\n                if (tonNameSpace && tonNameSpace.payload && tonNameSpace.payload.ton_proof) {\n                    wallet.connectItems = {\n                        tonProof: tonNameSpace.payload.ton_proof\n                    };\n                }\n                (0, core_1.logDebug)(\"OKXTONProvider wallet :\", JSON.stringify(wallet));\n                return wallet;\n            }\n            catch (e) {\n                (0, core_1.logDebug)(\"OKXTONProvider wallet  error:\", JSON.stringify(e));\n                return null;\n            }\n        }\n        return null;\n    }\n    onStatusChange(callback, errorsHandler) {\n        this.statusChangeSubscriptions.push(callback);\n        if (errorsHandler) {\n            this.statusChangeErrorSubscriptions.push(errorsHandler);\n        }\n        return () => {\n            this.statusChangeSubscriptions = this.statusChangeSubscriptions.filter(item => item !== callback);\n            if (errorsHandler) {\n                this.statusChangeErrorSubscriptions = this.statusChangeErrorSubscriptions.filter(item => item !== errorsHandler);\n            }\n        };\n    }\n    sendTransaction(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (transaction.network && transaction.network !== core_1.TONCHAIN.MAINNET) {\n                throw new _1.OKXConnectError(_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, 'OKXTONProvider sendTransaction network error');\n            }\n            if (!transaction.network) {\n                transaction.network = core_1.TONCHAIN.MAINNET;\n            }\n            if (this.provider.session) {\n                if (!transaction.from) {\n                    const accounts = this.provider.requestAccountsWithNamespace('ton');\n                    transaction.from = accounts[0];\n                }\n            }\n            const requestParams = {\n                method: \"ton_sendTransaction\",\n                params: transaction,\n            };\n            let chain = 'ton:' + core_1.TONCHAIN.MAINNET;\n            (0, core_1.logDebug)(\"OKXTONProvider sendTransaction transaction----:\", chain, JSON.stringify(requestParams));\n            return this.provider.request(requestParams, chain);\n        });\n    }\n}\nexports.OKXTonProvider = OKXTonProvider;\nexports.default = OKXTonProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTronProvider = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nclass OKXTronProvider {\n    constructor(provider) {\n        this.TRON_CHAIN_ID = \"tron:mainnet\";\n        this.provider = provider;\n    }\n    getChain(chainId) {\n        if (chainId == null) {\n            chainId = this.TRON_CHAIN_ID;\n        }\n        if (chainId != this.TRON_CHAIN_ID) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.CHAIN_NOT_SUPPORTED, \"The chainId:\" + chainId + \"is wrong for OKXTronProvider\");\n        }\n        return chainId;\n    }\n    getAccount(chainId) {\n        var _a, _b, _c, _d, _e;\n        chainId = this.getChain(chainId);\n        let account = (_b = (_a = this.provider.session) === null || _a === void 0 ? void 0 : _a.namespaces[core_1.NameSpaceKeyTron]) === null || _b === void 0 ? void 0 : _b.accounts.filter(function (account) {\n            return account.startsWith(chainId);\n        })[0];\n        if (!account) {\n            // if (required) {\n            //      throw new Error('Account not found')\n            // }\n            return undefined;\n        }\n        const accountArray = account.split(':');\n        const address = account.split(':')[2];\n        let extra = (_e = (_d = (_c = this.provider.session) === null || _c === void 0 ? void 0 : _c.namespaces[core_1.NameSpaceKeyTron]) === null || _d === void 0 ? void 0 : _d.extra) === null || _e === void 0 ? void 0 : _e[(`${accountArray[0]}:${accountArray[1]}`)];\n        let publicKey = \"\";\n        if (extra != undefined) {\n            publicKey = extra[\"publicKey\"];\n        }\n        if (!address) {\n            // if (required) {\n            //     throw new Error('Address not found')\n            // }\n            return undefined;\n        }\n        return {\n            address: address\n        };\n    }\n    stringToHex(str) {\n        let hex = '';\n        for (let i = 0; i < str.length; i++) {\n            hex += str.charCodeAt(i).toString(16).padStart(2, '0');\n        }\n        return hex;\n    }\n    signMessage(data, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"tron_signMessage\",\n                \"params\": {\n                    \"message\": this.stringToHex(data)\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signMessageV2(data, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let signData = {\n                \"chainId\": chainId,\n                \"method\": \"tron_signMessageV2\",\n                \"params\": {\n                    \"message\": data\n                }\n            };\n            try {\n                const ret = yield this.provider.request(signData, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n                else {\n                    let errorData = ret;\n                    return errorData.error;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let data = {\n                \"method\": \"tron_signTransaction\",\n                \"params\": transaction\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    let signedTx;\n                    if (typeof ret.result == \"string\") {\n                        signedTx = JSON.parse(ret.result);\n                    }\n                    else {\n                        signedTx = ret.result;\n                    }\n                    let realSignTx = {};\n                    realSignTx.visible = signedTx.visible;\n                    realSignTx.txID = signedTx.txID;\n                    let rawData = {};\n                    rawData.contract = signedTx.raw_data.contract;\n                    rawData.expiration = signedTx.raw_data.expiration;\n                    rawData.ref_block_bytes = signedTx.raw_data.ref_block_bytes;\n                    rawData.fee_limit = signedTx.raw_data.fee_limit;\n                    rawData.ref_block_hash = signedTx.raw_data.ref_block_hash;\n                    rawData.timestamp = signedTx.raw_data.timestamp;\n                    realSignTx.raw_data = rawData;\n                    realSignTx.raw_data_hex = signedTx.raw_data_hex;\n                    realSignTx.signature = signedTx.signature;\n                    return realSignTx;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n    signAndSendTransaction(transaction, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            chainId = this.getChain(chainId);\n            let data = {\n                \"method\": \"tron_signAndSendTransaction\",\n                \"params\": transaction\n            };\n            try {\n                const ret = yield this.provider.request(data, chainId);\n                if ('result' in ret) {\n                    return ret.result;\n                }\n            }\n            catch (error) {\n                return error;\n                // throw new OKXConnectError(OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method signTransaction request error`);\n            }\n        });\n    }\n}\nexports.OKXTronProvider = OKXTronProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXUniversalProvider = void 0;\nconst eip155_1 = require(\"./provider/providers/eip155\");\nconst sui_1 = require(\"./provider/providers/sui\");\nconst constants_1 = require(\"./provider/constants\");\nconst eventemitter3_1 = __importDefault(require(\"eventemitter3\"));\nconst client_1 = require(\"./packages/sign-client/client\");\nconst core_1 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"./packages/utils/namespaces\");\nconst solana_1 = __importDefault(require(\"./provider/providers/solana\"));\nconst btc_1 = __importDefault(require(\"./provider/providers/btc\"));\nconst aptos_1 = __importDefault(require(\"./provider/providers/aptos\"));\nconst ton_1 = __importDefault(require(\"./provider/providers/ton\"));\nconst cosmos_1 = __importDefault(require(\"./provider/providers/cosmos\"));\nconst tron_1 = __importDefault(require(\"./provider/providers/tron\"));\nconst utils_1 = require(\"./provider/utils\");\nconst packages_1 = require(\"./packages\");\nconst provider_1 = require(\"./provider\");\nclass OKXUniversalProvider {\n    static init(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider init() called');\n            (0, core_1.checkMetaData)(opts.dappMetaData);\n            // ignore rpc provider check by default\n            (0, utils_1.setGlobal)('disableProviderPing', true);\n            let provider;\n            if (window && window.okxConnectUniversalinwindow && window.okxConnectUniversalinwindow instanceof OKXUniversalProvider) {\n                (0, core_1.logDebug)('OKXUniversalConnect init() old called');\n                provider = window.okxConnectUniversalinwindow;\n            }\n            else {\n                (0, core_1.logDebug)('OKXUniversalConnect init() new called');\n                provider = new OKXUniversalProvider(opts);\n                yield provider.initialize();\n                if (window) {\n                    window.okxConnectUniversalinwindow = provider;\n                }\n            }\n            (0, core_1.getDefaultReporter)().configVersionAndSide('universalprovider-1.5.2', 'dapp', provider.providerOpts.dappMetaData.name);\n            return provider;\n        });\n    }\n    constructor(opts) {\n        this.rpcProviders = {};\n        this.events = new eventemitter3_1.default();\n        if (!opts.connector || opts.connector.length == 0) {\n            opts.connector = [core_1.AppwalletConnector.getConnector(), core_1.TgwalletConnector.getConnector()];\n        }\n        this.providerOpts = opts;\n    }\n    request(args, chain) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider request() called');\n            (0, core_1.reportLog)('OKXUniversalProvider request() called');\n            if (!this.connected()) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            (0, core_1.logDebug)('OKXUniversalProvider request()  connected ');\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return yield this.getProvider(namespace).request(requestParam);\n        });\n    }\n    buildRequestParamFromRequest(args, chain) {\n        var _a;\n        (0, core_1.logDebug)(\"UniversalProvider request args >>>>>>>: \", chain, (0, core_1.safeJsonStringify)(args));\n        let [namespace, chainId] = this.validateChain(chain);\n        if (!this.session) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Please call connect() before request()\");\n        }\n        let keyArr = Object.keys(this.session.namespaces);\n        if (!chain && keyArr && keyArr.length > 1) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Multiple chains have been linked, the request method requires chain`);\n        }\n        if (namespace == \"aptos\" && chainId == \"mainnet\") {\n            namespace = \"aptos\";\n            chainId = \"637\";\n        }\n        if (namespace == \"movement\" && chainId == \"testnet\") {\n            namespace = \"aptos\";\n            chainId = \"70000060\";\n        }\n        const requestParam = Object.assign(Object.assign({}, args), { chainId: `${namespace}:${chainId}`, redirect: (_a = args.redirect) !== null && _a !== void 0 ? _a : this.sessionConfig.redirect });\n        return { namespace, requestParam };\n    }\n    enable() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.client) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (!this.session) {\n                if (this.connectOpts) {\n                    yield this.connect(this.connectOpts);\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n                }\n            }\n            const accounts = yield this.requestAccounts();\n            return accounts;\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider disconnect() called');\n            (0, core_1.reportLog)('provider disconnect called');\n            if (!this.session) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR);\n            }\n            return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n                let called = false;\n                const onRequestSent = () => __awaiter(this, void 0, void 0, function* () {\n                    if (!called) {\n                        called = true;\n                        yield this.disconnectAndEmit();\n                        yield this.cleanup();\n                        resolve();\n                        (0, core_1.logDebug)(\"UniversalProvider disconnect Disconnected\");\n                        (0, core_1.reportLog)('provider disconnect disconnected');\n                    }\n                });\n                try {\n                    yield this.client.disconnect();\n                    yield onRequestSent();\n                }\n                catch (e) {\n                    yield onRequestSent();\n                }\n            }));\n        });\n    }\n    disconnectAndEmit() {\n        var _a, _b;\n        this.client.engine.clearData();\n        this.events.emit(\"disconnect\", { topic: (_a = this.session) === null || _a === void 0 ? void 0 : _a.topic });\n        this.events.emit(\"session_delete\", { topic: (_b = this.session) === null || _b === void 0 ? void 0 : _b.topic });\n    }\n    aptosChainNameToGeneralId(chainId) {\n        if (chainId == \"aptos:mainnet\") {\n            return \"aptos:637\";\n        }\n        else if (chainId == \"movement:testnet\") {\n            return \"aptos:70000060\";\n        }\n        else {\n            return chainId;\n        }\n    }\n    replaceAptos(opts) {\n        var _a, _b;\n        let aptosNameSpace = (_a = opts.namespaces) === null || _a === void 0 ? void 0 : _a[\"aptos\"];\n        if (aptosNameSpace != undefined) {\n            let realNS = this.replaceAptosInner(aptosNameSpace);\n            if (opts.namespaces != undefined && \"aptos\" in opts.namespaces && realNS != undefined) {\n                opts.namespaces.aptos = realNS;\n            }\n        }\n        let optionAptosNameSpace = (_b = opts.optionalNamespaces) === null || _b === void 0 ? void 0 : _b[\"aptos\"];\n        if (optionAptosNameSpace != undefined) {\n            let realOptionNS = this.replaceAptosInner(optionAptosNameSpace);\n            if (opts.optionalNamespaces != undefined && \"aptos\" in opts.optionalNamespaces && realOptionNS != undefined) {\n                opts.optionalNamespaces.aptos = realOptionNS;\n            }\n        }\n        return opts;\n    }\n    replaceAptosInner(aptosNameSpace) {\n        var _a;\n        if (aptosNameSpace != undefined) {\n            aptosNameSpace.chains = (_a = aptosNameSpace.chains) === null || _a === void 0 ? void 0 : _a.map(chainId => {\n                return this.aptosChainNameToGeneralId(chainId);\n            });\n            if (aptosNameSpace.defaultChain != undefined) {\n                aptosNameSpace.defaultChain = this.aptosChainNameToGeneralId(aptosNameSpace.defaultChain);\n            }\n        }\n        return aptosNameSpace;\n    }\n    replaceAptosGeneralIdWithNetName(chainId) {\n        if (chainId.includes(\"aptos:637\")) {\n            chainId = chainId.replace(\"aptos:637\", \"aptos:mainnet\");\n        }\n        else if (chainId.includes(\"aptos:70000060\")) {\n            chainId = chainId.replace(\"aptos:70000060\", \"movement:testnet\");\n        }\n        return chainId;\n    }\n    replaceSessionAptos(session) {\n        var _a;\n        let namespaces = (_a = session === null || session === void 0 ? void 0 : session.namespaces) === null || _a === void 0 ? void 0 : _a[\"aptos\"];\n        if (namespaces != undefined && namespaces.chains != undefined) {\n            namespaces.chains = namespaces.chains.map(chain => {\n                return this.replaceAptosGeneralIdWithNetName(chain);\n            });\n            namespaces.accounts = namespaces.accounts.map((account) => {\n                return this.replaceAptosGeneralIdWithNetName(account);\n            });\n            let extra = {};\n            Object.keys(namespaces.extra || {}).forEach((key, index) => {\n                let newKey = this.replaceAptosGeneralIdWithNetName(key);\n                extra[this.replaceAptosGeneralIdWithNetName(key)] = Object.values((session === null || session === void 0 ? void 0 : session.namespaces[\"aptos\"].extra) || {})[index];\n            });\n            namespaces.extra = extra;\n        }\n        (0, core_1.logDebug)(\"replaceSessionAptos\", session);\n    }\n    connected() {\n        (0, core_1.logDebug)('OKXUniversalProvider connected() called');\n        (0, core_1.reportLog)('provider connected called');\n        let disconnectInner = () => {\n            try {\n                this.cleanup();\n                this.client.engine.connectManagerDisconnect();\n            }\n            catch (e) {\n                (0, core_1.logDebug)(\"Error during disconnect:\", e);\n            }\n        };\n        try {\n            if (!this.session)\n                return false;\n            if (!this.client.engine.getCurrentConnectionReady()) {\n                disconnectInner();\n                return false;\n            }\n            return true;\n        }\n        catch (e) {\n            disconnectInner();\n            return false;\n        }\n    }\n    connectAndSign(opts, signRequest) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() called');\n            const updatedOpts = Object.assign(Object.assign({}, opts), { signRequest });\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() opts:', JSON.stringify(opts));\n            (0, core_1.logDebug)('OKXUniversalProvider connectAndSign() signRequest:', JSON.stringify(signRequest));\n            return yield this.connect(updatedOpts);\n        });\n    }\n    connect(opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider connect() called');\n            (0, core_1.reportLog)('provider connect called');\n            if (!this.client) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n            }\n            if (this.connected()) {\n                return this.session;\n            }\n            opts = this.replaceAptos(opts);\n            (0, core_1.logDebug)(`OKXUniversalProvider connect >>>>`, JSON.stringify(opts));\n            if (opts.sessionConfig === undefined) {\n                opts.sessionConfig = {};\n            }\n            if (opts.sessionConfig.openUniversalUrl === undefined) {\n                opts.sessionConfig.openUniversalUrl = (0, core_1.isMobileUserAgent)();\n            }\n            this.setNamespaces(opts);\n            try {\n                (0, core_1.logDebug)(`UniversalProvider connect opts.stringify ====> ${JSON.stringify(opts)}`);\n                let session = yield this.client.connect(opts);\n                this.replaceSessionAptos(session);\n                (0, core_1.logDebug)(`UniversalProvider connect success ====> ${JSON.stringify(session)}`);\n                if (session) {\n                    this.session = session;\n                    this.client.session = session;\n                    this.setConnectConnector();\n                    (0, core_1.logDebug)(`OKXUniversalProvider connect success opts>>>>`, JSON.stringify(opts));\n                    this.onConnect();\n                    if (opts.signRequest && opts.signRequest.length > 0) {\n                        let requestItem = opts.signRequest[0];\n                        let signResponseList = [];\n                        if (typeof window !== \"undefined\" && window && window.okxConnectUniversalUIinwindow) { //from UI\n                            (0, core_1.logDebug)(`OKXUniversalProvider connect success, us UI SDK>>>>`);\n                            if (this.session.signResponse && this.session.signResponse.length > 0) { // >=6.96\n                                signResponseList = this.session.signResponse;\n                            }\n                        }\n                        else {\n                            (0, core_1.logDebug)(`OKXUniversalProvider connect success, us Universal SDK>>>>`);\n                            if (this.session.signResponse && this.session.signResponse.length > 0) { // >=6.96\n                                signResponseList = this.session.signResponse;\n                            }\n                            else {\n                                signResponseList.push((0, packages_1.creatNotSupportMethodItemReplay)(requestItem));\n                            }\n                        }\n                        (0, core_1.logDebug)(`UniversalProvider connect success connectRequestReply ====> ${JSON.stringify(signResponseList)}`);\n                        setTimeout(() => {\n                            this.events.emit(\"connect_signResponse\", signResponseList);\n                        }, 100);\n                    }\n                    return session;\n                }\n                return undefined;\n            }\n            catch (error) {\n                (0, core_1.logDebug)(`UniversalProvider connect error ====> `, JSON.stringify(error));\n                throw error;\n            }\n        });\n    }\n    syncAllAddresses() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if ((0, provider_1.syncAddressAvailable)(this.session.wallet)) {\n                return this.client.syncAllAddress();\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n            }\n        });\n    }\n    setConnectConnector() {\n        var _a;\n        this.client.setConnectConnector((_a = this.session) === null || _a === void 0 ? void 0 : _a.wallet);\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    setDefaultChain(chain, rpcUrl) {\n        (0, core_1.logDebug)('OKXUniversalProvider setDefaultChain() called');\n        // chain = this.aptosChainNameToGeneralId(chain)\n        try {\n            // ignore without active session\n            if (!this.connected())\n                return;\n            const [namespace, chainId] = this.validateChain(chain);\n            const provider = this.getProvider(namespace);\n            provider.setDefaultChain(chainId, rpcUrl);\n        }\n        catch (error) {\n            // ignore the error if the fx is used prematurely before namespaces are set\n            if (!/Please call connect/.test(error.message))\n                throw error;\n        }\n    }\n    checkStorage() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let sessionInfoStr = yield this.getFromStore(\"connectSession\");\n            (0, core_1.logDebug)(sessionInfoStr);\n            if (sessionInfoStr) {\n                let sessionInfo = sessionInfoStr;\n                this.session = sessionInfo;\n                this.client.session = this.session;\n                this.setConnectConnector();\n                this.sessionConfig = sessionInfo.sessionConfig;\n                this.client.sessionConfig = this.sessionConfig;\n                (0, core_1.logDebug)('[evm u-provider] do reconnection', this.session);\n                yield this.client.restoreconnect(sessionInfo);\n                this.createProviders();\n                this.registerEventListeners();\n                setTimeout(() => {\n                    this.events.emit(\"reconnect\", { session: this.session });\n                }, 100);\n                this.registerEventListeners();\n            }\n        });\n    }\n    initialize() {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)('OKXUniversalProvider initialize() called');\n            (0, core_1.reportLog)('provider initialize called');\n            const data = Object.assign({ url: window.location.hostname, origin: window.location.origin }, this.providerOpts.dappMetaData);\n            this.client = new client_1.SignClient(data, this.events);\n            this.registerConnector(this.providerOpts.connector);\n            yield this.checkStorage();\n        });\n    }\n    createProviders() {\n        if (!this.client) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client not initialized\");\n        }\n        if (!this.connected()) {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Session not initialized. Please call connect() before enable()\");\n        }\n        const providersToCreate = [\n            ...new Set(Object.keys(this.session.namespaces)\n                .filter((namespace) => { var _a, _b; return ((_b = (_a = this.session.namespaces[namespace]) === null || _a === void 0 ? void 0 : _a.accounts) === null || _b === void 0 ? void 0 : _b.length) > 0; })\n                .map((namespace) => (0, namespaces_1.parseNamespaceKey)(namespace))),\n        ];\n        providersToCreate.forEach((namespace) => {\n            if (!this.session)\n                return;\n            const namespacesValue = this.session.namespaces;\n            const currentNameSpace = namespacesValue[namespace];\n            (0, core_1.logDebug)(\"init eip155 >> \", currentNameSpace);\n            switch (namespace) {\n                case \"eip155\":\n                    const opts = {\n                        namespace: currentNameSpace\n                    };\n                    this.rpcProviders[namespace] = new eip155_1.Eip155Provider(opts, this.client, this.events);\n                    break;\n                case \"solana\":\n                    const opts1 = {\n                        namespace: currentNameSpace\n                    };\n                    let solanaProvider = new solana_1.default(opts1, \"solana\", this.client, this.events);\n                    this.rpcProviders[namespace] = solanaProvider;\n                    let sonicProvider = new solana_1.default(opts1, \"sonic\", this.client, this.events);\n                    this.rpcProviders['sonic'] = sonicProvider;\n                    let svmProvider = new solana_1.default(opts1, \"svm\", this.client, this.events);\n                    this.rpcProviders['svm'] = svmProvider;\n                    // this.rpcProviders[namespace] = new SolanaProvider(opts1, () => { return this.session; });\n                    break;\n                case \"ton\":\n                    const optsTon = {\n                        namespace: currentNameSpace\n                    };\n                    let tonProvider = new ton_1.default(optsTon, this.client, this.events);\n                    this.rpcProviders[namespace] = tonProvider;\n                    break;\n                case \"sui\":\n                    const optsSui = {\n                        namespace: currentNameSpace\n                    };\n                    let suiProvider = new sui_1.SuiProvider(optsSui, this.client, this.events);\n                    suiProvider.name = \"sui\";\n                    this.rpcProviders[namespace] = suiProvider;\n                    break;\n                case \"btc\":\n                    const optsBtc = {\n                        namespace: currentNameSpace\n                    };\n                    let btcProvider = new btc_1.default(optsBtc, \"btc\", this.client, this.events);\n                    this.rpcProviders[\"btc\"] = btcProvider;\n                    let fbProvider = new btc_1.default(optsBtc, \"fractal\", this.client, this.events);\n                    this.rpcProviders[\"fractal\"] = fbProvider;\n                    break;\n                case \"aptos\":\n                    let aptosProvider = new aptos_1.default({\n                        namespace: currentNameSpace\n                    }, \"aptos\", this.client, this.events);\n                    this.rpcProviders[namespace] = aptosProvider;\n                    let moveProvider = new aptos_1.default({\n                        namespace: currentNameSpace\n                    }, \"movement\", this.client, this.events);\n                    this.rpcProviders[\"movement\"] = moveProvider;\n                    break;\n                case \"cosmos\":\n                    let cosmosProvider = new cosmos_1.default({\n                        namespace: currentNameSpace\n                    }, this.client, this.events);\n                    this.rpcProviders[namespace] = cosmosProvider;\n                    break;\n                case \"tron\":\n                    let tronProvider = new tron_1.default({\n                        namespace: currentNameSpace\n                    }, this.client, this.events);\n                    this.rpcProviders[namespace] = tronProvider;\n                    break;\n            }\n        });\n    }\n    registerEventListeners() {\n        if (typeof this.client === \"undefined\") {\n            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"Sign Client is not initialized\");\n        }\n        this.client.engine.addDisconnectListener(() => {\n            this.disconnectAndEmit();\n            this.cleanup();\n        });\n        this.on(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, (caip2ChainId) => {\n            this.onChainChanged(caip2ChainId);\n        });\n        this.on(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, (nameSpaces) => {\n            if (nameSpaces) {\n                const nameSpacekey = Object.keys(nameSpaces)[0];\n                if (this.session) {\n                    this.session.namespaces[nameSpacekey] = nameSpaces[nameSpacekey];\n                    if (this.session) {\n                        this.persist(\"connectSession\", this.session);\n                        this.events.emit(\"session_update\", this.session);\n                    }\n                    (0, core_1.logDebug)(\"PROVIDER_EVENTS.UPDATE_NAMESPACES this.session... ->>>\", JSON.stringify(this.session));\n                }\n            }\n        });\n    }\n    getProvider(namespace) {\n        (0, core_1.logDebug)('current get providers', this.rpcProviders);\n        (0, core_1.logDebug)('query namespace: ', namespace);\n        return this.rpcProviders[namespace];\n    }\n    setNamespaces(params) {\n        this.connectOpts = params;\n        const { namespaces, sessionConfig } = params;\n        const data = {\n            origin: window.location.origin,\n            url: window.location.hostname,\n            name: this.providerOpts.dappMetaData.name,\n            icon: this.providerOpts.dappMetaData.icon,\n        };\n        this.sessionConfig = Object.assign({ dappInfo: data }, sessionConfig);\n        (0, core_1.logDebug)(\"setNamespaces sessionConfig>>>\", this.sessionConfig);\n        this.client.sessionConfig = this.sessionConfig;\n        this.persist(\"sessionConfig\", sessionConfig);\n    }\n    validateChain(chain) {\n        var _a;\n        let [namespace, chainId] = (chain === null || chain === void 0 ? void 0 : chain.split(\":\")) || [\"\", \"\"];\n        if (!this.session || !this.session.namespaces || !Object.keys(this.session.namespaces).length) {\n            (0, core_1.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        if (namespace) {\n            if (!this.isChainNamespaceInSession(namespace)) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace '${namespace}' is not configured. Please call connect() first with namespace config.`);\n            }\n            if (chainId && chain) {\n                (0, core_1.logDebug)('this.session.namespaces -->> ', namespace, JSON.stringify(this.session.namespaces));\n                const chainsArr = (_a = this.session.namespaces[namespace]) === null || _a === void 0 ? void 0 : _a.chains;\n                (0, core_1.logDebug)('get chainsArr & chain', JSON.stringify(chainsArr), chain);\n                if (chainsArr && !chainsArr.includes(chain)) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Namespace not include the chain '${chain}'`);\n                }\n            }\n        }\n        if (namespace && chainId) {\n            (0, core_1.logDebug)('get name & chain', namespace, chainId);\n            return [namespace, chainId];\n        }\n        let defaultNamespace = (0, namespaces_1.parseNamespaceKey)(Object.keys(this.session.namespaces)[0]);\n        const defaultChain = this.rpcProviders[defaultNamespace].getDefaultChain();\n        (0, core_1.logDebug)('get default chain:', defaultChain);\n        return [defaultNamespace, defaultChain];\n    }\n    isChainNamespaceInSession(namespaceStr) {\n        var _a, _b;\n        if (Object.keys(((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces) || {})\n            .map((key) => (0, namespaces_1.parseNamespaceKey)(key))\n            .includes(namespaceStr)) {\n            return true;\n        }\n        let isChainNamespaceInSession = false;\n        Object.values(((_b = this.session) === null || _b === void 0 ? void 0 : _b.namespaces) || {})\n            .forEach(namespace => {\n            namespace.chains.forEach(chain => {\n                if (chain.split(\":\")[0] == namespaceStr) {\n                    isChainNamespaceInSession = true;\n                }\n            });\n        });\n        return isChainNamespaceInSession;\n    }\n    requestAccountsWithNamespace(namespace) {\n        return this.getProvider(namespace).requestAccounts();\n    }\n    requestDefaultChainWithNamespace(namespace) {\n        return this.getProvider(namespace).getDefaultChain();\n    }\n    requestAccounts() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const [namespace] = this.validateChain();\n            return yield this.getProvider(namespace).requestAccounts();\n        });\n    }\n    onChainChanged(caip2Chain) {\n        var _a;\n        if (!((_a = this.session) === null || _a === void 0 ? void 0 : _a.namespaces))\n            return;\n        const [namespace, chainId] = this.validateChain(caip2Chain);\n        if (!chainId)\n            return;\n        if (this.session.namespaces[namespace]) {\n            this.session.namespaces[namespace].defaultChain = chainId;\n            this.persist(\"connectSession\", this.session);\n        }\n        this.events.emit(\"chainChanged\", chainId);\n    }\n    onConnect() {\n        this.createProviders();\n        if (this.session) {\n            this.persist(\"connectSession\", this.session);\n        }\n        this.events.emit(\"connect\", { session: this.session });\n        this.registerEventListeners();\n    }\n    cleanup() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.session = undefined;\n            this.client.session = undefined;\n            this.setConnectConnector();\n            this.sessionProperties = undefined;\n            this.persist(\"optionalNamespaces\", undefined);\n            this.persist(\"sessionProperties\", undefined);\n            this.persist(\"connectSession\", undefined);\n        });\n    }\n    persist(key, data) {\n        (0, core_1.logDebug)('[evm u-provider] persisit data', key, data);\n        return this.client.engine.saveSessionContent(key, data);\n    }\n    getFromStore(key) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.client.engine.getSessionContent(key);\n        });\n    }\n    showRequestModal(args, chain) {\n        try {\n            const { namespace, requestParam } = this.buildRequestParamFromRequest(args, chain);\n            return this.getProvider(namespace).showRequestModal(requestParam);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    openWallet(engineConnectInfo, connector) {\n        this.client.openWallet(engineConnectInfo, connector);\n    }\n    registerConnector(connectors) {\n        this.client.registerConnector(connectors);\n    }\n}\nexports.OKXUniversalProvider = OKXUniversalProvider;\nexports.default = OKXUniversalProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OKXTronProvider = exports.OKXTonProvider = exports.OKXCosmosProvider = exports.OKXBtcProvider = exports.OKXUniversalProvider = void 0;\n__exportStar(require(\"./provider/types\"), exports);\n__exportStar(require(\"./packages\"), exports);\nvar OKXUniversalProvider_1 = require(\"./OKXUniversalProvider\");\nObject.defineProperty(exports, \"OKXUniversalProvider\", { enumerable: true, get: function () { return OKXUniversalProvider_1.OKXUniversalProvider; } });\nvar OKXBtcProvider_1 = require(\"./OKXBtcProvider\");\nObject.defineProperty(exports, \"OKXBtcProvider\", { enumerable: true, get: function () { return OKXBtcProvider_1.OKXBtcProvider; } });\nvar OKXCosmosProvider_1 = require(\"./OKXCosmosProvider\");\nObject.defineProperty(exports, \"OKXCosmosProvider\", { enumerable: true, get: function () { return OKXCosmosProvider_1.OKXCosmosProvider; } });\nvar OKXTonProvider_1 = require(\"./OKXTonProvider\");\nObject.defineProperty(exports, \"OKXTonProvider\", { enumerable: true, get: function () { return OKXTonProvider_1.OKXTonProvider; } });\nvar OKXTronProvider_1 = require(\"./OKXTronProvider\");\nObject.defineProperty(exports, \"OKXTronProvider\", { enumerable: true, get: function () { return OKXTronProvider_1.OKXTronProvider; } });\n__exportStar(require(\"@okxconnect/core\"), exports);\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./utils\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SignClient = void 0;\nconst core_1 = require(\"@okxconnect/core\");\nconst namespaces_1 = require(\"../utils/namespaces\");\nconst ConnectMethodUtils_1 = require(\"../utils/ConnectMethodUtils\");\nconst constants_1 = require(\"../../provider/constants\");\nclass SignClient extends core_1.ISignClient {\n    constructor(metaData, events) {\n        super(metaData);\n        // ---------- Engine ----------------------------------------------- //\n        this.connect = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    var connectRequest = [];\n                    (0, core_1.logDebug)(`client connect params >>>`, JSON.stringify(params));\n                    var requestAccountItem = {\n                        name: \"requestAccounts\",\n                        requiredNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.namespaces),\n                        optionalNamespaces: (0, namespaces_1.nameSpaceToConnectWalletNameSpace)(params.optionalNamespaces),\n                    };\n                    this.engine.setSessionConnectingListener(() => {\n                        (0, core_1.logDebug)(`sessionConnectingListener >>>`);\n                        this.events.emit(constants_1.PROVIDER_EVENTS.SESSION_CONNECTING);\n                    });\n                    if (params.signRequest) {\n                        requestAccountItem.connectRequestMethods = yield (0, ConnectMethodUtils_1.connectMethodsToConnectWalletMethods)(params.signRequest, requestAccountItem.requiredNamespaces);\n                    }\n                    connectRequest.push(requestAccountItem);\n                    (0, core_1.logDebug)(`client connect connectRequest >>>`, JSON.stringify(connectRequest));\n                    this.engine.universalConnect(connectRequest, Object.assign({ dappInfo: this.metadata }, params.sessionConfig), (info) => {\n                        if (info && info.connectRequest) {\n                            (0, core_1.logDebug)(`universalConect info.connectRequest :`, info.connectRequest);\n                            (0, core_1.logDebug)(`universalConect url:`, (0, core_1.getOKXLink)(info.connectRequest, this.sessionConfig.useMini));\n                            this.events.emit(\"display_uri\", (0, core_1.getOKXLink)(info.connectRequest, this.sessionConfig.useMini));\n                            this.events.emit(\"short_display_uri\", (0, core_1.getAppWalletShortDeepLink)(info.connectRequest.topic, info.connectRequest.clientId));\n                            (0, core_1.logDebug)(`universalConect EngineConnectInfo  ${JSON.stringify(info)}`);\n                            this.events.emit(\"okx_engine_connect_params\", info);\n                        }\n                    }).then((session) => __awaiter(this, void 0, void 0, function* () {\n                        (0, namespaces_1.fillParamsToSession)(session, params.namespaces, params.optionalNamespaces, this.sessionConfig);\n                        (0, core_1.logDebug)(`signClient: connect: session ${JSON.stringify(session)}`);\n                        if (params.signRequest) {\n                            yield (0, ConnectMethodUtils_1.connectMethodsResponseUpdate)(session, params.signRequest);\n                        }\n                        resolve(session);\n                    })).catch((e) => {\n                        (0, core_1.logDebug)(`signClient: connect: catch ${JSON.stringify(e)}`);\n                        this.events.emit(\"connect_error\", e);\n                        reject(e);\n                    });\n                }\n                catch (error) {\n                    (0, core_1.logDebug)(`signClient: connect:  ${JSON.stringify(error)}`);\n                    reject(error);\n                }\n            }));\n        });\n        this.restoreconnect = (sessionConfig) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.restoreconnect(sessionConfig, (session) => {\n                    resolve(session);\n                });\n            });\n        });\n        this.reject = (params) => __awaiter(this, void 0, void 0, function* () {\n        });\n        this.request = (params) => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                (0, core_1.logDebug)(\"clint request --params>>>> >\", this.engine.getCurrentConnectionReady(), (_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl, (0, core_1.safeJsonStringify)(params));\n                try {\n                    // this.sessionConfig\n                    if (((_b = this.sessionConfig) === null || _b === void 0 ? void 0 : _b.openUniversalUrl) && (0, core_1.isIos)()) {\n                        this.openOKXWallet();\n                    }\n                    yield this.engine.send(params, {\n                        resolve: (response) => {\n                            delete response.requestId;\n                            (0, core_1.logDebug)(\"clint request --response >\", (0, core_1.safeJsonStringify)(response));\n                            if (('error' in response) && response.error) {\n                                let error = response.error;\n                                reject(new core_1.OKXConnectError(response.error.code, response.method + \":\" + error.message));\n                            }\n                            else {\n                                resolve(response);\n                            }\n                        },\n                        onAck: () => {\n                            var _a;\n                            if (!(0, core_1.isIos)() && ((_a = this.sessionConfig) === null || _a === void 0 ? void 0 : _a.openUniversalUrl)) {\n                                this.openOKXWallet();\n                            }\n                        }\n                    });\n                }\n                catch (e) {\n                    (0, core_1.logDebug)(\"clint request --error:\", e);\n                    reject(e);\n                }\n            }));\n        });\n        this.disconnect = () => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.send({\n                    method: \"disconnect\"\n                }, {\n                    onAck: () => {\n                        resolve();\n                    }\n                }, 86400000).catch((error) => {\n                    console.log(`disconnect : ${JSON.stringify(error)}`);\n                    reject(error);\n                });\n            });\n        });\n        this.engine = new core_1.Engine(metaData.name);\n        this.events = events;\n        this.metadata = metaData;\n    }\n    openOKXWallet() {\n        // if (this.openUniversalUrl){\n        (0, core_1.logDebug)('bridge-provider ==>> connect_5');\n        this.engine.openWallet({ tmaReturnUrl: this.sessionConfig.tmaReturnUrl });\n        // if (this.sessionConfig?.useMini){\n        //     let url = getTelegramWalletTWAUrl(undefined,this.sessionConfig.tmaReturnUrl)\n        //     openOKXTMAWalletlinkWithFallback(url)\n        // }else{\n        //     openOKXDeeplink(standardDeeplink);\n        // }\n        // }\n    }\n    syncAllAddress() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.engine.send({\n                    method: \"sync_all_addresses\"\n                }, {\n                    resolve: (response) => {\n                        delete response.requestId;\n                        (0, core_1.logDebug)(\"clint syncAllAddress --response >\", JSON.stringify(response));\n                        if (('error' in response) && response.error) {\n                            let error = response.error;\n                            reject(new core_1.OKXConnectError(response.error.code, response.method + \":\" + error.message));\n                        }\n                        else {\n                            let allAddressStr = response.result;\n                            resolve((0, ConnectMethodUtils_1.syncResoonseToRequire)(allAddressStr));\n                        }\n                    }\n                }).catch((error) => {\n                    console.log(`disconnect : ${JSON.stringify(error)}`);\n                    reject(error);\n                });\n            });\n        });\n    }\n    registerConnector(connectors) {\n        this.engine.registerConnector(connectors);\n    }\n    openWallet(engineConnectInfo, connector) {\n        this.engine.openWallet(engineConnectInfo, connector);\n    }\n    setConnectConnector(wallet) {\n        this.engine.setConnectConnector(wallet);\n    }\n}\nexports.SignClient = SignClient;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.connectSupportMethods = void 0;\nexports.creatNotSupportMethodItemReplay = creatNotSupportMethodItemReplay;\nexports.connectMethodsAdaptOldVersion = connectMethodsAdaptOldVersion;\nexports.connectMethodsResponseUpdate = connectMethodsResponseUpdate;\nexports.connectMethodsToConnectWalletMethods = connectMethodsToConnectWalletMethods;\nexports.syncResoonseToRequire = syncResoonseToRequire;\nconst core_1 = require(\"@okxconnect/core\");\nconst bs58_1 = __importDefault(require(\"bs58\"));\nconst uint8array_extras_1 = require(\"uint8array-extras\");\nconst provider_1 = require(\"../../provider\");\nfunction isArray(value) {\n    return typeof value === \"object\" && value !== null && Array.isArray(value);\n}\nfunction isRecord(value) {\n    return typeof value === \"object\" && value !== null && !Array.isArray(value);\n}\n// \"wallet_addEthereumChain\",\nexports.connectSupportMethods = Object.freeze([\n    \"personal_sign\",\n    \"solana_signMessage\",\n    \"sui_signMessage\",\n    \"sui_signPersonalMessage\",\n    \"btc_signMessage\",\n    \"aptos_signMessage\",\n    \"cosmos_signArbitrary\",\n    \"tron_signMessage\",\n    \"tron_signMessageV2\",\n    \"sync_all_addresses\"\n]);\nfunction creatNotSupportMethodItemReplay(requestParams) {\n    let notSupportError = new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n    var errorItem = {\n        method: requestParams.method,\n        chainId: requestParams.chainId,\n        error: {\n            code: notSupportError.code,\n            message: notSupportError.message\n        },\n    };\n    return errorItem;\n}\nfunction connectMethodsAdaptOldVersion(requestParams, session) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b, _c, _d, _e;\n        try {\n            (0, core_1.logDebug)(\"connectMethodsAdaptOldVersion start params :\", JSON.stringify(requestParams));\n            let callBackParams = {};\n            if (requestParams.method === \"solana_signMessage\") {\n                let solAccount = (_a = session.namespaces[core_1.NameSpaceKeySOL]) === null || _a === void 0 ? void 0 : _a.accounts.filter(function (account1) {\n                    return account1.startsWith(requestParams.chainId);\n                })[0];\n                const solAddress = (0, provider_1.fromAccountToAddress)(solAccount);\n                if (requestParams.params && solAddress && \"message\" in requestParams.params) {\n                    let realMessage = requestParams.params.message;\n                    if (((_b = session.wallet) === null || _b === void 0 ? void 0 : _b.appName) == \"OKX Wallet\") {\n                        realMessage = bs58_1.default.encode((0, uint8array_extras_1.stringToUint8Array)(realMessage));\n                    }\n                    requestParams.params = {\n                        message: realMessage,\n                        \"pubkey\": solAddress\n                    };\n                    callBackParams = {\n                        publicKey: solAddress\n                    };\n                    (0, core_1.logDebug)(\"solana_signMessage account and address:\", JSON.stringify(solAccount), solAddress);\n                    (0, core_1.logDebug)(\"solana_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"sui_signMessage\" || requestParams.method === \"sui_signPersonalMessage\") {\n                if (\"message\" in requestParams.params && requestParams.params.message) {\n                    let suiMessage = JSON.parse(JSON.stringify(requestParams.params.message));\n                    let convertedArray = Object.values(suiMessage);\n                    let uint8Array = new Uint8Array(convertedArray);\n                    let decoder = new TextDecoder(\"utf8\");\n                    let b64encoded = btoa(decoder.decode(uint8Array));\n                    requestParams.params = {\n                        message: atob(b64encoded),\n                    };\n                    console.log(\"sui_signMessag suiMessagee suiMessageb64:>>>>\", JSON.stringify(requestParams.params), b64encoded);\n                    if (requestParams.method === \"sui_signMessage\") {\n                        callBackParams = {\n                            \"messageBytes\": b64encoded,\n                            \"signature\": \"\"\n                        };\n                    }\n                    else if (requestParams.method === \"sui_signPersonalMessage\") {\n                        callBackParams = {\n                            \"bytes\": b64encoded,\n                            \"signature\": \"\"\n                        };\n                    }\n                    (0, core_1.logDebug)(\"sui_signMessage/sui_signPersonalMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"btc_signMessage\") {\n                let btcAccounts = (_c = session.namespaces[core_1.NameSpaceKeyBtc]) === null || _c === void 0 ? void 0 : _c.accounts.filter(function (account2) {\n                    return account2.startsWith(requestParams.chainId);\n                });\n                let btcAccount = btcAccounts[0];\n                const btcAddress = (0, provider_1.fromAccountToAddress)(btcAccount);\n                (0, core_1.logDebug)(\"btc_signMessage account and address:\", JSON.stringify(btcAccount), btcAddress);\n                if (btcAddress) {\n                    if (\"message\" in requestParams.params && requestParams.params.message && typeof requestParams.params.message === 'string') {\n                        requestParams.params = {\n                            from: btcAddress,\n                            signStr: requestParams.params.message\n                        };\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                    }\n                    requestParams.params[\"from\"] = btcAddress;\n                    (0, core_1.logDebug)(\"btc_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"aptos_signMessage\") {\n                let paramData = requestParams.params;\n                let aptosAccount = (_d = session.namespaces[core_1.NameSpaceKeyAptos]) === null || _d === void 0 ? void 0 : _d.accounts.filter(function (account3) {\n                    return account3.startsWith(requestParams.chainId);\n                })[0];\n                let aptosAddress = (0, provider_1.fromAccountToAddress)(aptosAccount);\n                if (paramData && aptosAddress) {\n                    let prefix = \"APTOS\";\n                    let message = \"\", nonce = \"\";\n                    var fullMessage = prefix;\n                    let application = window.location.protocol + \"//\" + window.location.hostname;\n                    if (\"address\" in paramData && paramData.address) {\n                        fullMessage += \"\\naddress: \" + aptosAddress;\n                    }\n                    if (\"application\" in paramData && paramData.application) {\n                        fullMessage += \"\\napplication: \" + application;\n                    }\n                    let aptosChainId = 1;\n                    if (\"chainId\" in paramData && paramData.chainId) {\n                        if (paramData.chainId == \"aptos:mainnet\") {\n                            aptosChainId = 1;\n                        }\n                        else if (paramData.chainId == \"movement:testnet\") {\n                            aptosChainId = 2;\n                        }\n                        fullMessage += \"\\nchainId: \" + aptosChainId;\n                    }\n                    if (\"message\" in paramData) {\n                        fullMessage += \"\\nmessage: \" + paramData.message;\n                        message = paramData.message;\n                    }\n                    if (\"nonce\" in paramData) {\n                        fullMessage += \"\\nnonce: \" + paramData.nonce;\n                        nonce = paramData.nonce;\n                    }\n                    const utf8Array = new TextEncoder().encode(fullMessage);\n                    const hex = Array.from(utf8Array)\n                        .map(byte => byte.toString(16).padStart(2, \"0\"))\n                        .join(\"\");\n                    requestParams.params = {\n                        \"message\": hex,\n                    };\n                    (0, core_1.logDebug)(\"aptos_signMessage requestParams:\", JSON.stringify(requestParams));\n                    callBackParams = {\n                        address: aptosAddress,\n                        application: application,\n                        chainId: aptosChainId,\n                        fullMessage: fullMessage,\n                        message: message,\n                        nonce: nonce,\n                        prefix: prefix,\n                        signature: \"\",\n                    };\n                    (0, core_1.logDebug)(\"aptos_signMessage callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            else if (requestParams.method === \"cosmos_signArbitrary\") {\n                let cosmosAccount = (_e = session === null || session === void 0 ? void 0 : session.namespaces[core_1.NameSpaceKeyCosmos]) === null || _e === void 0 ? void 0 : _e.accounts.filter(function (account_cosmos) {\n                    return account_cosmos.startsWith(requestParams.chainId);\n                })[0];\n                const cosmosAddress = (0, provider_1.fromAccountToAddress)(cosmosAccount);\n                let cosmosData = requestParams.params[\"message\"];\n                const cosmosBase64Encoded = (0, uint8array_extras_1.stringToBase64)(cosmosData);\n                (0, core_1.logDebug)(\"cosmos_signArbitrary account and address:\", JSON.stringify(cosmosAccount), cosmosAddress);\n                (0, core_1.logDebug)(\"cosmos_signArbitrary cosmosBase64Encoded:\", cosmosBase64Encoded);\n                if (cosmosData && cosmosAddress) {\n                    const signDoc = {\n                        chain_id: \"\",\n                        account_number: \"0\",\n                        sequence: \"0\",\n                        fee: {\n                            gas: \"0\",\n                            amount: []\n                        },\n                        msgs: [{\n                                \"type\": \"sign/MsgSignData\",\n                                \"value\": {\n                                    \"signer\": cosmosAddress,\n                                    \"data\": cosmosBase64Encoded\n                                }\n                            }],\n                        memo: \"\"\n                    };\n                    requestParams.params = {\n                        \"signer\": cosmosAddress,\n                        \"chain_id\": requestParams.chainId.split(\":\")[1],\n                        \"data\": signDoc\n                    };\n                    (0, core_1.logDebug)(\"cosmos_signArbitrary callBackParams:\", JSON.stringify(callBackParams));\n                    return callBackParams;\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                }\n            }\n            (0, core_1.logDebug)(\"sol_handleSignatureData end params:\", JSON.stringify(requestParams));\n        }\n        catch (error) {\n            throw error;\n        }\n    });\n}\nfunction connectMethodsResponseUpdate(session, requestParams) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a;\n        try {\n            if (session.signResponse) {\n                (0, core_1.logDebug)(\"connectMethodsResponseUpdate signResponse:\", JSON.stringify(session.signResponse));\n                (0, core_1.logDebug)(\"connectMethodsResponseUpdate session.namespaces:\", JSON.stringify(session.namespaces));\n                for (const methodItem of session.signResponse) {\n                    (0, core_1.logDebug)(\"connectMethodsResponseUpdate methodItem:\", JSON.stringify(methodItem));\n                    if (\"result\" in methodItem) {\n                        if (methodItem.method === \"solana_signMessage\") {\n                            let solanaSuccessData = methodItem.result;\n                            (0, core_1.logDebug)(\"solana_signMessage methodItem.chainId:\", methodItem.chainId);\n                            let account = (_a = session.namespaces[core_1.NameSpaceKeySOL]) === null || _a === void 0 ? void 0 : _a.accounts.filter(function (account) {\n                                (0, core_1.logDebug)(\"solana_signMessage account:\", account);\n                                return account.startsWith(methodItem.chainId);\n                            })[0];\n                            (0, core_1.logDebug)(\"solana_signMessage result account:\", solanaSuccessData, account);\n                            if (solanaSuccessData && account) {\n                                methodItem.result = {\n                                    \"signature\": bs58_1.default.decode(solanaSuccessData),\n                                    \"publicKey\": (0, provider_1.fromAccountToAddress)(account)\n                                };\n                            }\n                        }\n                        else if (methodItem.method === \"sui_signMessage\" || methodItem.method === \"sui_signPersonalMessage\") {\n                            let suiMethod = requestParams.filter(function (requestMethod) {\n                                return requestMethod.method === methodItem.method;\n                            })[0];\n                            if (suiMethod && suiMethod.params && \"message\" in suiMethod.params) {\n                                let suiMessage = suiMethod.params.message;\n                                let suiMessageb64 = btoa(suiMessage);\n                                console.log(\"sui_signMessag suiMessagee suiMessageb64:>>>>\", suiMessage, suiMessageb64);\n                                if (methodItem.method === \"sui_signMessage\") {\n                                    methodItem.result = {\n                                        \"messageBytes\": suiMessageb64,\n                                        \"signature\": methodItem.result\n                                    };\n                                }\n                                else if (methodItem.method === \"sui_signPersonalMessage\") {\n                                    methodItem.result = {\n                                        \"bytes\": suiMessageb64,\n                                        \"signature\": methodItem.result\n                                    };\n                                }\n                            }\n                        }\n                        else if (methodItem.method === \"aptos_signMessage\") {\n                            if (methodItem.chainId === \"aptos:637\") {\n                                methodItem.chainId = \"aptos:mainnet\";\n                            }\n                            else if (methodItem.chainId === \"aptos:70000060\") {\n                                methodItem.chainId = \"movement:testnet\";\n                            }\n                            methodItem.result = JSON.parse(methodItem.result);\n                            console.log(\"aptos_signMessage result methodItem.result before:>>>>\", JSON.stringify(methodItem.result));\n                            if (methodItem.result && \"signature\" in methodItem.result) {\n                                let aptosSignature = methodItem.result.signature;\n                                if (aptosSignature && aptosSignature.startsWith(\"0x\")) {\n                                    aptosSignature = aptosSignature.slice(2, aptosSignature.length);\n                                    methodItem.result.signature = aptosSignature;\n                                }\n                            }\n                            console.log(\"aptos_signMessage result methodItem.result after:>>>>\", JSON.stringify(methodItem.result));\n                        }\n                        else if (methodItem.method === \"cosmos_signArbitrary\") {\n                            methodItem.result = JSON.parse(methodItem.result);\n                        }\n                        else if (methodItem.method == 'sync_all_addresses') {\n                            methodItem.result = syncResoonseToRequire(methodItem.result);\n                        }\n                    }\n                }\n            }\n        }\n        catch (error) {\n            (0, core_1.logDebug)(\"connectMethodsResponseUpdate signResponse Error:\", JSON.stringify(error));\n            throw error;\n        }\n    });\n}\nfunction connectMethodsToConnectWalletMethods(params, requireNameSpace) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            (0, core_1.logDebug)(\"connectMethodsToConnectWalletMethods requestMethods:\", JSON.stringify(params));\n            const result = [];\n            //TODO  后面需要打开限制\n            if (params && params.length > 1) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connectAndSign/openModalAndSign signRequest only support one data`);\n            }\n            if (!requireNameSpace && params && params.length > 0) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error , RequestMethods cannot be added when the NameSpace is empty`);\n            }\n            // check chianId\n            for (const methodItem of params) {\n                if (methodItem.method === \"aptos_signMessage\") { //update chainId\n                    if (methodItem.chainId === \"aptos:mainnet\") {\n                        methodItem.chainId = \"aptos:637\";\n                    }\n                    else if (methodItem.chainId === \"movement:testnet\") {\n                        methodItem.chainId = \"aptos:70000060\";\n                    }\n                }\n                // check chianId\n                if (methodItem.method === \"wallet_addEthereumChain\") {\n                    var includeEip155 = requireNameSpace === null || requireNameSpace === void 0 ? void 0 : requireNameSpace.some(space => space.namespace.includes(\"eip155\"));\n                    if (!includeEip155) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error, When using '${methodItem.method}', the EVM chain needs to be included in the NameSpace`);\n                    }\n                }\n                else if (methodItem.method === \"sync_all_addresses\") {\n                    if ((0, provider_1.syncAddressHostAvailable)()) {\n                        methodItem.chainId = \"\";\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED);\n                    }\n                }\n                else {\n                    const includeChain = !!(requireNameSpace === null || requireNameSpace === void 0 ? void 0 : requireNameSpace.some(space => space.chains.some(chain => chain.includes(`${methodItem.chainId}`))));\n                    if (!includeChain) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Connect request params error, When using '${methodItem.method}', NameSpace must contain '${methodItem.chainId}'`);\n                    }\n                }\n            }\n            for (const item of params) {\n                if (!exports.connectSupportMethods.includes(item.method)) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect requestMethods not support method, method: '${item.method}'`);\n                }\n                if (item.method === \"wallet_addEthereumChain\") {\n                    if (Array.isArray(item.params)) {\n                        const paramsArr = item.params;\n                        if (paramsArr && paramsArr.length === 1) {\n                            const firstParam = paramsArr[0];\n                            if (isRecord(firstParam)) {\n                                item.params = firstParam;\n                            }\n                        }\n                        else if (paramsArr && paramsArr.length > 1) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params only support one data, method: '${item.method}'`);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is nil, method: '${item.method}'`);\n                        }\n                    }\n                }\n                else if (item.method === \"personal_sign\") {\n                    if (isArray(item.params)) {\n                        if (item.params && item.params.length !== 1) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params error,  method: '${item.method}' `);\n                        }\n                        let firstObj = item.params[0];\n                        if (firstObj && typeof firstObj === 'string') {\n                            item.params = {\n                                message: firstObj\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                }\n                else if (item.method === \"sui_signMessage\" || item.method === \"sui_signPersonalMessage\") {\n                    if (isRecord(item.params) && 'message' in item.params) {\n                        if (item.params.message) {\n                            (0, core_1.logDebug)(\"sui_signMessage item.params.message :\", item.params.message);\n                            let message = JSON.parse(JSON.stringify(item.params.message));\n                            let convertedArray = Object.values(message);\n                            let uint8Array = new Uint8Array(convertedArray);\n                            let decoder = new TextDecoder(\"utf8\");\n                            let b64encoded = btoa(decoder.decode(uint8Array));\n                            item.params.message = atob(b64encoded);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"solana_signMessage\") {\n                    if (isRecord(item.params) && 'message' in item.params) {\n                        if (item.params.message && typeof item.params.message === 'string') {\n                            item.params[\"bs58Message\"] = bs58_1.default.encode((0, uint8array_extras_1.stringToUint8Array)(item.params.message));\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"aptos_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (item.chainId && (item.chainId === \"aptos:637\" || item.chainId === \"aptos:70000060\")) {\n                            var aptosParams = item.params;\n                            var currentURL = window.location.protocol + \"//\" + window.location.hostname;\n                            let signChainId = 1;\n                            if (item.chainId === \"aptos:637\") {\n                            }\n                            else if (item.chainId === \"aptos:70000060\") {\n                                signChainId = 2;\n                            }\n                            item.params = {\n                                data: aptosParams,\n                                applicationUrl: currentURL,\n                                prefix: \"APTOS\",\n                                aptosChainId: signChainId\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params chainId is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method === \"cosmos_signArbitrary\") {\n                    if (isRecord(item.params)) {\n                        if (item.params.message && typeof item.params.message === 'string') {\n                            const base64Encoded = (0, uint8array_extras_1.stringToBase64)(item.params.message);\n                            let cosmosChain = item.chainId.split(\":\")[1];\n                            if (cosmosChain) {\n                                item.params = {\n                                    chain_id: cosmosChain,\n                                    data: {\n                                        chain_id: \"\",\n                                        account_number: \"0\",\n                                        sequence: \"0\",\n                                        fee: {\n                                            gas: \"0\",\n                                            amount: []\n                                        },\n                                        msgs: [{\n                                                \"type\": \"sign/MsgSignData\",\n                                                \"value\": {\n                                                    \"signer\": \"\", //address\n                                                    \"data\": base64Encoded\n                                                }\n                                            }],\n                                        memo: \"\"\n                                    }\n                                };\n                            }\n                            else {\n                                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params chainId is error,  method: '${item.method}' `);\n                            }\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params message is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method == \"tron_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (\"message\" in item.params && item.params.message && typeof item.params.message === 'string') {\n                            item.params.message = stringToHex(item.params.message);\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                else if (item.method == \"btc_signMessage\") {\n                    if (isRecord(item.params)) {\n                        if (\"message\" in item.params && item.params.message && typeof item.params.message === 'string') {\n                            item.params = {\n                                signStr: item.params.message\n                            };\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `connect request params is error,  method: '${item.method}' `);\n                    }\n                }\n                (0, core_1.logDebug)(\"connectMethodsToConnectWalletMethods item:\", JSON.stringify(item));\n                result.push(item);\n            }\n            return result;\n        }\n        catch (error) {\n            throw error;\n        }\n    });\n}\nfunction stringToHex(str) {\n    let hex = '';\n    for (let i = 0; i < str.length; i++) {\n        hex += str.charCodeAt(i).toString(16).padStart(2, '0');\n    }\n    return hex;\n}\nfunction syncResoonseToRequire(responseAddressStr) {\n    const allAddress = JSON.parse(responseAddressStr);\n    const result = {\n        type: allAddress.type,\n        isEvm: allAddress.isEvm,\n        walletName: allAddress.walletName,\n        deriveName: allAddress.deriveName,\n        addresses: allAddress.addresses.map((addr) => ({\n            coinId: addr.ci,\n            address: addr.a && addr.a !== 'null' ? addr.a : allAddress.evmAddress,\n        })),\n    };\n    return result;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.creatNotSupportMethodItemReplay = exports.connectMethodsAdaptOldVersion = void 0;\nvar ConnectMethodUtils_1 = require(\"./ConnectMethodUtils\");\nObject.defineProperty(exports, \"connectMethodsAdaptOldVersion\", { enumerable: true, get: function () { return ConnectMethodUtils_1.connectMethodsAdaptOldVersion; } });\nObject.defineProperty(exports, \"creatNotSupportMethodItemReplay\", { enumerable: true, get: function () { return ConnectMethodUtils_1.creatNotSupportMethodItemReplay; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAccountsChains = getAccountsChains;\nexports.nameSpaceToConnectWalletNameSpace = nameSpaceToConnectWalletNameSpace;\nexports.fillParamsToSession = fillParamsToSession;\nexports.isCaipNamespace = isCaipNamespace;\nexports.parseNamespaceKey = parseNamespaceKey;\nconst core_1 = require(\"@okxconnect/core\");\nfunction getAccountsChains(accounts) {\n    const chains = [];\n    accounts.forEach((account) => {\n        const [chain, chainId] = account.split(\":\");\n        chains.push(`${chain}:${chainId}`);\n    });\n    return chains;\n}\nfunction nameSpaceToConnectWalletNameSpace(namespaces) {\n    var result = [];\n    if (!namespaces) {\n        return result;\n    }\n    Object.keys(namespaces).forEach((key) => {\n        if (key === core_1.NameSpaceKeyEip155 || key === core_1.NameSpaceKeySOL || key === core_1.NameSpaceKeySui || key === core_1.NameSpaceKeyAptos\n            || key == core_1.NameSpaceKeyBtc || key === core_1.NameSpaceKeyTON || key === core_1.NameSpaceKeyCosmos || key === core_1.NameSpaceKeyTron) {\n            if (namespaces[key].chains) {\n                result.push({\n                    namespace: key,\n                    chains: namespaces[key].chains,\n                    params: namespaces[key].params\n                });\n            }\n        }\n    });\n    return result;\n}\nfunction fillParamsToSession(session, namespaces, optionalNamespaces, sessionConfig) {\n    // Helper function to merge rpcMaps\n    const mergeRpcMap = (targetRpcMap, sourceRpcMap) => {\n        Object.assign(targetRpcMap, sourceRpcMap);\n    };\n    // Merge function for namespaces\n    const mergeNamespaces = (target, source) => {\n        for (const key in source) {\n            if (source.hasOwnProperty(key) && source[key].rpcMap) {\n                if (source[key].rpcMap) {\n                    if (!target[key].rpcMap) {\n                        target[key].rpcMap = {};\n                    }\n                    // 合并 rpcMap\n                    mergeRpcMap(target[key].rpcMap, source[key].rpcMap);\n                }\n                if (source[key].defaultChain && target[key].defaultChain === undefined) {\n                    //defaultChain need in session nameSpace\n                    if (target[key].chains.some(chain => chain.split(\":\")[1] === source[key].defaultChain)) {\n                        target[key].defaultChain = source[key].defaultChain;\n                    }\n                }\n            }\n        }\n    };\n    // 合并 namespaces\n    if (namespaces) {\n        mergeNamespaces(session.namespaces, namespaces);\n    }\n    // 合并 optionalNamespaces\n    if (optionalNamespaces) {\n        mergeNamespaces(session.namespaces, optionalNamespaces);\n    }\n    for (const key in session.namespaces) {\n        const namespace = session.namespaces[key];\n        if (!(namespace === null || namespace === void 0 ? void 0 : namespace.accounts) || namespace.accounts.length === 0) {\n            delete session.namespaces[key];\n        }\n    }\n    session.sessionConfig = sessionConfig;\n}\n/**\n * util designed for Wallets that builds namespaces structure by provided supported chains, methods, events & accounts.\n * It takes required & optional namespaces provided in the session proposal\n * along with the supported chains/methods/events/accounts by the wallet and returns a structured namespaces object\n * @param {BuildApprovedNamespacesParams} params\n * @returns {SessionTypes.Namespaces}\n */\n// export function buildApprovedNamespaces(\n//   params: BuildApprovedNamespacesParams,\n// ): SessionTypes.Namespaces {\n//   const {\n//     proposal: { requiredNamespaces, optionalNamespaces = {} },\n//     supportedNamespaces,\n//   } = params;\n//   const normalizedRequired = normalizeNamespaces(requiredNamespaces);\n//   const normalizedOptional = normalizeNamespaces(optionalNamespaces);\n//\n//   // build approved namespaces\n//   const namespaces = {};\n//   Object.keys(supportedNamespaces).forEach((namespace) => {\n//     const supportedChains = supportedNamespaces[namespace].chains;\n//     const supportedMethods = supportedNamespaces[namespace].methods;\n//     const supportedEvents = supportedNamespaces[namespace].events;\n//     const supportedAccounts = supportedNamespaces[namespace].accounts;\n//\n//     supportedChains.forEach((chain) => {\n//       if (!supportedAccounts.some((account) => account.includes(chain))) {\n//         throw new Error(`No accounts provided for chain ${chain} in namespace ${namespace}`);\n//       }\n//     });\n//\n//     namespaces[namespace] = {\n//       chains: supportedChains,\n//       methods: supportedMethods,\n//       events: supportedEvents,\n//       accounts: supportedAccounts,\n//     };\n//   });\n//\n//   // verify all required namespaces are supported\n//   const err = isConformingNamespaces(requiredNamespaces, namespaces, \"approve()\");\n//   if (err) throw new Error(err.message);\n//\n//   const approvedNamespaces = {};\n//\n//   // if both required & optional namespaces are empty, return all supported namespaces by the wallet\n//   if (!Object.keys(requiredNamespaces).length && !Object.keys(optionalNamespaces).length)\n//     return namespaces;\n//\n//   // assign accounts for the required namespaces\n//   Object.keys(normalizedRequired).forEach((requiredNamespace) => {\n//     const chains = supportedNamespaces[requiredNamespace].chains.filter((chain) =>\n//       normalizedRequired[requiredNamespace]?.chains?.includes(chain),\n//     );\n//     const methods = supportedNamespaces[requiredNamespace].methods.filter((method) =>\n//       normalizedRequired[requiredNamespace]?.methods?.includes(method),\n//     );\n//     const events = supportedNamespaces[requiredNamespace].events.filter((event) =>\n//       normalizedRequired[requiredNamespace]?.events?.includes(event),\n//     );\n//\n//     const accounts = chains\n//       .map((chain: string) =>\n//         supportedNamespaces[requiredNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[requiredNamespace] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   });\n//\n//   // add optional namespaces\n//   Object.keys(normalizedOptional).forEach((optionalNamespace) => {\n//     if (!supportedNamespaces[optionalNamespace]) return;\n//\n//     const chainsToAdd = normalizedOptional[optionalNamespace]?.chains?.filter((chain) =>\n//       supportedNamespaces[optionalNamespace].chains.includes(chain),\n//     );\n//     const methodsToAdd = supportedNamespaces[optionalNamespace].methods.filter((method) =>\n//       normalizedOptional[optionalNamespace]?.methods?.includes(method),\n//     );\n//     const eventsToAdd = supportedNamespaces[optionalNamespace].events.filter((event) =>\n//       normalizedOptional[optionalNamespace]?.events?.includes(event),\n//     );\n//\n//     const accountsToAdd = chainsToAdd\n//       ?.map((chain: string) =>\n//         supportedNamespaces[optionalNamespace].accounts.filter((account: string) =>\n//           account.includes(`${chain}:`),\n//         ),\n//       )\n//       .flat();\n//\n//     approvedNamespaces[optionalNamespace] = {\n//       chains: mergeArrays(approvedNamespaces[optionalNamespace]?.chains, chainsToAdd),\n//       methods: mergeArrays(approvedNamespaces[optionalNamespace]?.methods, methodsToAdd),\n//       events: mergeArrays(approvedNamespaces[optionalNamespace]?.events, eventsToAdd),\n//       accounts: mergeArrays(approvedNamespaces[optionalNamespace]?.accounts, accountsToAdd),\n//     };\n//   });\n//\n//   return approvedNamespaces;\n// }\nfunction isCaipNamespace(namespace) {\n    return namespace.includes(\":\");\n}\nfunction parseNamespaceKey(namespace) {\n    return isCaipNamespace(namespace) ? namespace.split(\":\")[0] : namespace;\n}\n/**\n * Converts\n * ```\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * ```\n * into\n * ```\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *```\n */\n// export function normalizeNamespaces(\n//   namespaces: ProposalTypes.RequiredNamespaces,\n// ): ProposalTypes.RequiredNamespaces {\n//   const normalizedNamespaces = {} as ProposalTypes.RequiredNamespaces;\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       methods: mergeArrays(methods, normalizedNamespaces[normalizedKey]?.methods),\n//       events: mergeArrays(events, normalizedNamespaces[normalizedKey]?.events),\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n// export function getNamespacesFromAccounts(accounts: string[]) {\n//   const namespaces = {};\n//   accounts?.forEach((account) => {\n//     const [namespace, chainId] = account.split(\":\");\n//     if (!namespaces[namespace]) {\n//       namespaces[namespace] = {\n//         accounts: [],\n//         chains: [],\n//         events: [],\n//       };\n//     }\n//     namespaces[namespace].accounts.push(account);\n//     namespaces[namespace].chains.push(`${namespace}:${chainId}`);\n//   });\n//\n//   return namespaces;\n// }\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PROVIDER_EVENTS = void 0;\nexports.PROVIDER_EVENTS = {\n    DEFAULT_CHAIN_CHANGED: \"default_chain_changed\",\n    UPDATE_NAMESPACES: \"update_name_spaces\",\n    SESSION_CONNECTING: \"session_connecting\"\n};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./values\"), exports);\n__exportStar(require(\"./events\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GENERIC_SUBPROVIDER_NAME = exports.RPC_URL = exports.STORAGE = exports.CONTEXT = exports.WC_VERSION = exports.PROTOCOL = exports.RELAY_URL = exports.LOGGER = void 0;\nexports.LOGGER = \"error\";\nexports.RELAY_URL = \"wss://relay.walletconnect.com\";\nexports.PROTOCOL = \"wc\";\nexports.WC_VERSION = 2;\nexports.CONTEXT = \"universal_provider\";\nexports.STORAGE = `${exports.PROTOCOL}@${exports.WC_VERSION}:${exports.CONTEXT}:`;\nexports.RPC_URL = \"https://rpc.walletconnect.com/v1/\";\nexports.GENERIC_SUBPROVIDER_NAME = \"generic\";\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./types\"), exports);\n__exportStar(require(\"./utils\"), exports);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass AptosProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"aptos\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"aptos request --args--string>\", (0, core_1.safeJsonStringify)(args));\n            (0, core_1.logDebug)(\"aptos provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = AptosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass BtcProvider {\n    constructor(opts, name, client, events) {\n        this.name = core_1.NameSpaceKeyBtc;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"btc request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"btc provider namespace: \", JSON.stringify(this.namespace));\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = BtcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass CosmosProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyCosmos;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"cosmos request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"cosmos provider namespace: \", JSON.stringify(this.namespace));\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = CosmosProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Eip155Provider = void 0;\nconst utils_1 = require(\"../utils\");\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nclass Eip155Provider {\n    constructor(opts, client, events) {\n        this.name = \"eip155\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = parseInt(this.getDefaultChain());\n        // rpc\n        this.httpProviders = this.createHttpProviders();\n        (0, core_1.logDebug)(\"eip155 constructor --opts.namespace-->\", opts.namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    isArray(value) {\n        return typeof value === \"object\" && value !== null && Array.isArray(value);\n    }\n    updateRequestParams(args) {\n        let isDic = args.params && typeof args.params === 'object' && !Array.isArray(args.params);\n        if (args.method === 'wallet_switchEthereumChain') {\n            const switchChainId = args.chainId.split(\":\")[1];\n            // const hexChainId = parseInt(switchChainId, 16);\n            const decimalNumber = parseInt(switchChainId, 10);\n            if (isNaN(decimalNumber)) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid decimal number,  chainId: '${switchChainId}' `);\n            }\n            if (!args.params) {\n                args.params = { chainId: '0x' + decimalNumber.toString(16) };\n            }\n            else if (isDic) { //为 Record<string, unknown>\n                let params = args.params;\n                if (!('chainId' in params)) {\n                    params['chainId'] = '0x' + decimalNumber.toString(16);\n                    args.params = params;\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params error ,  method: '${args.method}' `);\n            }\n        }\n        else if (args.method === 'personal_sign'\n            || args.method === 'eth_signTypedData_v4'\n            || args.method === 'eth_sendTransaction'\n            || args.method === 'wallet_watchAsset') {\n            if (!args.params) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params is nil, method: '${args.method}'`);\n            }\n            if (this.isRecord(args.params)) {\n                let params = args.params;\n                (0, core_1.logDebug)(\"eip155 updateRequestParams params>\", JSON.stringify(params));\n                if ('chainId' in params) {\n                    const selectedChainId = args.chainId.split(\":\")[1];\n                    const chainNum = parseInt(selectedChainId, 10);\n                    let paramsChainString = String(params.chainId);\n                    let paramsChainId;\n                    if (paramsChainString.startsWith(this.name) && args.chainId === paramsChainString) { //为\n                        paramsChainId = chainNum;\n                    }\n                    else if (paramsChainString.startsWith(\"0x\")) {\n                        paramsChainId = parseInt(paramsChainString, 16);\n                    }\n                    else if (!isNaN(Number(paramsChainString))) { //数字\n                        paramsChainId = parseInt(paramsChainString, 10);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid params.chainId format, method: '${args.method}'`);\n                    }\n                    if (chainNum !== paramsChainId) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Request params.chainId not equal chain,  method: '${args.method}' `);\n                    }\n                }\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.NOT_CONNECTED_ERROR, `Invalid request params type, method: '${args.method}'`);\n            }\n        }\n    }\n    //adapt array\n    adaptArray(args) {\n        if (args.method === 'wallet_switchEthereumChain'\n            || args.method === 'wallet_addEthereumChain'\n            || args.method === 'wallet_watchAsset'\n            || args.method === 'eth_sendTransaction') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr) {\n                    if (paramsArr.length === 1) {\n                        let firstParam = args.params[0];\n                        if (this.isRecord(firstParam)) {\n                            args.params = firstParam;\n                        }\n                    }\n                    else if (paramsArr.length > 1) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                    }\n                }\n            }\n        }\n        else if (args.method === 'eth_signTypedData_v4') {\n            if (this.isArray(args.params)) {\n                let paramsArr = args.params;\n                if (paramsArr && paramsArr.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params only Support one data,  method: '${args.method}' `);\n                }\n                else if (paramsArr && paramsArr.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let messageObj = {};\n                if (paramsArr && paramsArr.length === 2) {\n                    let addressObj = args.params[0]; //address\n                    if (addressObj && typeof addressObj === 'string') { //check address\n                        let isEqual = false;\n                        this.namespace.accounts.forEach((account) => {\n                            let chainAddress = (0, utils_1.fromAccountToAddress)(account);\n                            if (chainAddress.toLowerCase() === addressObj.toLowerCase()) {\n                                isEqual = true;\n                            }\n                        });\n                        (0, core_1.logDebug)(\"eip155 adaptArray eth_signTypedData_v4 >>>isEqual: \", isEqual);\n                        if (!isEqual) {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error, not equal,  method: '${args.method}' `);\n                        }\n                        if (this.isRecord(args.params[1])) {\n                            messageObj = args.params[1];\n                        }\n                        else {\n                            throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                        }\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error , not string,  method: '${args.method}' `);\n                    }\n                }\n                else if (paramsArr && paramsArr.length === 1) {\n                    if (this.isRecord(args.params[0])) {\n                        messageObj = args.params[0];\n                    }\n                    else {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params message data error,  method: '${args.method}' `);\n                    }\n                }\n                try {\n                    let messages = JSON.stringify(messageObj);\n                    args.params = {\n                        typedDataJson: messages\n                    };\n                }\n                catch (err) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params call JSON.stringify() failed,  method: '${args.method}' `);\n                }\n            }\n        }\n        else if (args.method === 'personal_sign') {\n            if (this.isArray(args.params)) {\n                if (args.params && args.params.length > 2) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params error,  method: '${args.method}' `);\n                }\n                else if (args.params && args.params.length === 0) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is nil,  method: '${args.method}' `);\n                }\n                let firstObj = args.params[0];\n                let secondObj = args.params[1];\n                if (secondObj && typeof secondObj === 'string') { //check address\n                    let isEqual = false;\n                    this.namespace.accounts.forEach((account) => {\n                        let chainAddress = (0, utils_1.fromAccountToAddress)(account);\n                        if (chainAddress.toLowerCase() === secondObj.toLowerCase()) {\n                            isEqual = true;\n                        }\n                    });\n                    (0, core_1.logDebug)(\"eip155 adaptArray personal_sign >>>isEqual: \", isEqual);\n                    if (!isEqual) {\n                        throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params address error,  method: '${args.method}' `);\n                    }\n                }\n                if (firstObj && typeof firstObj === 'string') {\n                    args.params = {\n                        message: firstObj\n                    };\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `Request params is error,  method: '${args.method}' `);\n                }\n            }\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"eth_requestAccounts\":\n            case \"eth_accounts\":\n            case \"eth_chainId\":\n                return false;\n            case \"eth_sendTransaction\":\n            case \"eth_signTransaction\":\n            case \"eth_sign\":\n            case \"personal_sign\":\n            case \"eth_signTypedData\":\n            case \"wallet_addEthereumChain\":\n            case \"wallet_watchAsset\":\n            case \"eth_signTypedData_v4\":\n                return true;\n            case \"wallet_switchEthereumChain\": {\n                this.adaptArray(args);\n                this.updateRequestParams(args);\n                const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n                return !this.isChainApproved(parsedChainId);\n            }\n            default:\n                return false;\n        }\n        return false;\n    }\n    configAddressAdaptInjectWallet(args) {\n        this.namespace.accounts.forEach((account) => {\n            if (account.includes(args.chainId)) {\n                args.address = (0, utils_1.fromAccountToAddress)(account);\n            }\n        });\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.adaptArray(args);\n            (0, core_1.logDebug)(\"eip155 request --args--string>\", JSON.stringify(args));\n            this.updateRequestParams(args);\n            (0, core_1.logDebug)(\"eip155 request --params--string>\", JSON.stringify(args));\n            this.configAddressAdaptInjectWallet(args);\n            switch (args.method) {\n                case \"eth_requestAccounts\":\n                    return this.getAccounts();\n                case \"eth_accounts\":\n                    return this.getAccounts();\n                case \"eth_chainId\":\n                    return parseInt(this.getDefaultChain());\n                case \"wallet_switchEthereumChain\": {\n                    return (yield this.handleSwitchChain(args));\n                }\n                case \"wallet_addEthereumChain\":\n                    return this.addEthereumChain(args);\n                default:\n                    break;\n            }\n            if (this.namespace.methods.includes(args.method)) {\n                // personal_sign\n                // eth_signTypedData_v4\n                // eth_sendTransaction\n                // wallet_watchAsset\n                try {\n                    const response = yield this.client.request(args);\n                    (0, core_1.logDebug)(\"eip155 request --response----string>\", JSON.stringify(response));\n                    if (this.isRecord(response)) {\n                        if ('result' in response) {\n                            let result = response.result;\n                            if (result && typeof result === 'string' && (result === \"true\" || result === \"false\")) {\n                                (0, core_1.logDebug)(\"eip155 request --wallet_watchAsset>>>>\", result === \"true\");\n                                return (result === \"true\");\n                            }\n                            return response.result;\n                        }\n                    }\n                    return response;\n                }\n                catch (e) {\n                    (0, core_1.logDebug)(`eip155 request --response --error--string> e instanceof OKXConnectError ${e instanceof core_1.OKXConnectError}`, JSON.stringify(e));\n                    throw e;\n                }\n            }\n            else {\n                (0, core_1.logDebug)('[RPC] request begin');\n                return yield this.getHttpProvider().request(args);\n            }\n        });\n    }\n    addEthereumChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let resultData = (yield this.client.request(args));\n            try {\n                if ('result' in resultData) {\n                    let successData = resultData;\n                    let account = resultData.result;\n                    if (account) {\n                        const nameSpace = account.split(\":\")[0];\n                        const chainId = account.split(\":\")[1];\n                        const chain = nameSpace + ':' + chainId;\n                        let newNameSpace = this.namespace;\n                        this.namespace.accounts.push(account);\n                        this.namespace.chains.push(chain);\n                        if (this.isRecord(args.params)) {\n                            if (\"rpcUrls\" in args.params) {\n                                let rpcUrls = args.params.rpcUrls;\n                                let rpcUrl = rpcUrls ? rpcUrls[0] : undefined;\n                                if (rpcUrl) {\n                                    if (this.namespace.rpcMap) {\n                                        this.namespace.rpcMap[chainId] = rpcUrl;\n                                    }\n                                    else {\n                                        this.namespace.rpcMap = {\n                                            [chainId]: rpcUrl\n                                        };\n                                    }\n                                    this.setHttpProvider(chainId, rpcUrl);\n                                }\n                            }\n                        }\n                        this.events.emit(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, {\n                            eip155: this.namespace\n                        });\n                    }\n                }\n                else {\n                    new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request error`);\n                }\n            }\n            catch (error) {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request  error`);\n            }\n            return null;\n        });\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        this.chainId = parseInt(chainId);\n        // set rpc\n        if (!this.httpProviders[chainId]) {\n            const rpc = rpcUrl || (0, utils_1.getRpcUrl)(`${this.name}:${chainId}`, this.namespace);\n            if (!rpc) {\n                // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n                (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            }\n            else {\n                this.setHttpProvider(chainId, rpc);\n            }\n        }\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId.toString();\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // ---------- Private ----------------------------------------------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"eip155 getAccounts \", accounts, this.chainId);\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => {\n                return (0, utils_1.fromAccountToAddress)(account);\n            })),\n        ];\n    }\n    getHexChainIdFromRequest(args) {\n        let params = args.params;\n        let hexChainId = \"0x0\";\n        if (params && \"chainId\" in params) {\n            hexChainId = params.chainId;\n        }\n        hexChainId = hexChainId.startsWith(\"0x\") ? hexChainId : `0x${hexChainId}`;\n        (0, core_1.logDebug)(\"handleSwitchChain -->args \", args);\n        (0, core_1.logDebug)(\"handleSwitchChain -->hexChainId \", hexChainId);\n        const parsedChainId = parseInt(hexChainId, 16);\n        (0, core_1.logDebug)(\"handleSwitchChain -->parsedChainId \", parsedChainId);\n        return { parsedChainId, hexChainId };\n    }\n    handleSwitchChain(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { parsedChainId, hexChainId } = this.getHexChainIdFromRequest(args);\n            if (this.isChainApproved(parsedChainId)) {\n                this.setDefaultChain(`${parsedChainId}`);\n            }\n            else {\n                try {\n                    const resultData = (yield this.client.request(Object.assign(Object.assign({}, args), { params: {\n                            chainId: hexChainId,\n                        } })));\n                    if ('result' in resultData) {\n                        let successData = resultData;\n                        let account = resultData.result;\n                        if (account) {\n                            const nameSpace = account.split(\":\")[0];\n                            const chainId = account.split(\":\")[1];\n                            const chain = nameSpace + ':' + chainId;\n                            let newNameSpace = this.namespace;\n                            this.namespace.accounts.push(account);\n                            this.namespace.chains.push(chain);\n                            (0, core_1.logDebug)(\"handleSwitchChain -->wallet_switchEthereumChain \", resultData);\n                            this.setDefaultChain(`${parsedChainId}`);\n                            this.events.emit(constants_1.PROVIDER_EVENTS.UPDATE_NAMESPACES, {\n                                eip155: this.namespace\n                            });\n                        }\n                    }\n                    else {\n                        new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request error`);\n                    }\n                }\n                catch (error) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, `the method ${args.method} request  error`);\n                }\n            }\n            return null;\n        });\n    }\n    isChainApproved(chainId) {\n        return this.namespace.chains.includes(`${this.name}:${chainId}`);\n    }\n    // rpc\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            //   throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            (0, core_1.logDebug)('get parsed chain and rpc:', parsedChainId, parsedRpc);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        (0, core_1.logDebug)('get http providermap:', http);\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n}\nexports.Eip155Provider = Eip155Provider;\nexports.default = Eip155Provider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcConnection = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nconst DEFAULT_HTTP_HEADERS = {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n};\nconst DEFAULT_HTTP_METHOD = \"POST\";\nconst DEFAULT_FETCH_OPTS = {\n    headers: DEFAULT_HTTP_HEADERS,\n    method: DEFAULT_HTTP_METHOD,\n};\n// Source: https://nodejs.org/api/events.html#emittersetmaxlistenersn\nconst EVENT_EMITTER_MAX_LISTENERS_DEFAULT = 10;\nclass JsonRpcConnection {\n    constructor(url, disableProviderPing = false) {\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n        this.events = new eventemitter3_1.EventEmitter();\n        this.isAvailable = false;\n        this.registering = false;\n        if (!(0, core_2.isHttpUrl)(url)) {\n            throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n        }\n        this.url = url;\n        this.disableProviderPing = disableProviderPing;\n    }\n    get connected() {\n        return this.isAvailable;\n    }\n    get connecting() {\n        return this.registering;\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            yield this.register(url);\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                throw new Error(\"Connection already closed\");\n            }\n            this.onClose();\n        });\n    }\n    send(payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isAvailable) {\n                yield this.register();\n            }\n            try {\n                const body = (0, core_1.safeJsonStringify)(payload);\n                const res = yield (0, cross_fetch_1.default)(this.url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                const data = yield res.json();\n                this.onPayload({ data });\n            }\n            catch (e) {\n                this.onError(payload.id, e);\n            }\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    register() {\n        return __awaiter(this, arguments, void 0, function* (url = this.url) {\n            if (!(0, core_2.isHttpUrl)(url)) {\n                throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n            }\n            if (this.registering) {\n                return new Promise((resolve, reject) => {\n                    this.events.once(\"register_error\", (error) => {\n                        reject(error);\n                    });\n                    this.events.once(\"open\", () => {\n                        if (typeof this.isAvailable === \"undefined\") {\n                            return reject(new Error(\"HTTP connection is missing or invalid\"));\n                        }\n                        resolve();\n                    });\n                });\n            }\n            this.url = url;\n            this.registering = true;\n            try {\n                if (!this.disableProviderPing) {\n                    const body = (0, core_1.safeJsonStringify)({ id: 1, jsonrpc: \"2.0\", method: \"test\", params: [] });\n                    yield (0, cross_fetch_1.default)(url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n                }\n                this.onOpen();\n            }\n            catch (e) {\n                const error = this.parseError(e);\n                this.events.emit(\"register_error\", error);\n                this.onClose();\n                throw error;\n            }\n        });\n    }\n    onOpen() {\n        this.isAvailable = true;\n        this.registering = false;\n        this.events.emit(\"open\");\n    }\n    onClose() {\n        this.isAvailable = false;\n        this.registering = false;\n        this.events.emit(\"close\");\n    }\n    onPayload(e) {\n        if (typeof e.data === \"undefined\")\n            return;\n        const payload = typeof e.data === \"string\" ? (0, core_1.safeJsonParse)(e.data) : e.data;\n        this.events.emit(\"payload\", payload);\n    }\n    onError(id, e) {\n        const error = this.parseError(e);\n        const message = error.message || error.toString();\n        const payload = (0, core_2.formatJsonRpcError)(id, message);\n        this.events.emit(\"payload\", payload);\n    }\n    parseError(e, url = this.url) {\n        return (0, core_2.parseConnectionError)(e, url, \"HTTP\");\n    }\n}\nexports.JsonRpcConnection = JsonRpcConnection;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcProvider = void 0;\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst types_1 = require(\"../../types\");\nconst core_1 = require(\"@okxconnect/core\");\nconst core_2 = require(\"@okxconnect/core\");\nclass JsonRpcProvider extends types_1.IJSONRpcProvider {\n    constructor(connection) {\n        super(connection);\n        this.events = new eventemitter3_1.EventEmitter();\n        this.connected = false;\n        this.connecting = false;\n        this.hasRegisteredEventListeners = false;\n        this.connection = this.setConnection(connection);\n        if (this.connection.connected) {\n            this.registerEventListeners();\n        }\n    }\n    connect() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            yield this.open(connection);\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.close();\n        });\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    request(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.requestStrict((0, core_1.formatJsonRpcRequest)(request.method, request.params || [], (0, core_1.getBigIntRpcId)().toString()), // casting to any is required in order to use BigInt as rpcId\n            context);\n        });\n    }\n    // ---------- Protected ----------------------------------------------- //\n    requestStrict(request, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                if (!this.connection.connected) {\n                    try {\n                        yield this.open();\n                    }\n                    catch (e) {\n                        reject(e);\n                    }\n                }\n                this.events.on(`${request.id}`, (response) => {\n                    if ((0, core_1.isJsonRpcError)(response)) {\n                        reject(response.error);\n                    }\n                    else {\n                        resolve(response.result);\n                    }\n                });\n                try {\n                    (0, core_2.logDebug)('[RPC] >>> send request', request, context);\n                    yield this.connection.send(request, context);\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }));\n        });\n    }\n    setConnection(connection = this.connection) {\n        return connection;\n    }\n    onPayload(payload) {\n        this.events.emit(\"payload\", payload);\n        if ((0, core_1.isJsonRpcResponse)(payload)) {\n            this.events.emit(`${payload.id}`, payload);\n        }\n        else {\n            this.events.emit(\"message\", {\n                type: payload.method,\n                data: payload.params,\n            });\n        }\n    }\n    onClose(event) {\n        // Code 3000 indicates an abnormal closure signalled by the relay -> emit an error in this case.\n        if (event && event.code === 3000) {\n            this.events.emit(\"error\", new Error(`WebSocket connection closed abnormally with code: ${event.code} ${event.reason ? `(${event.reason})` : \"\"}`));\n        }\n        this.events.emit(\"disconnect\");\n    }\n    open() {\n        return __awaiter(this, arguments, void 0, function* (connection = this.connection) {\n            if (this.connection === connection && this.connection.connected)\n                return;\n            if (this.connection.connected)\n                this.close();\n            if (typeof connection === \"string\") {\n                yield this.connection.open(connection);\n                connection = this.connection;\n            }\n            this.connection = this.setConnection(connection);\n            yield this.connection.open();\n            this.registerEventListeners();\n            this.events.emit(\"connect\");\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.connection.close();\n        });\n    }\n    // ---------- Private ----------------------------------------------- //\n    registerEventListeners() {\n        if (this.hasRegisteredEventListeners)\n            return;\n        this.connection.on(\"payload\", (payload) => this.onPayload(payload));\n        this.connection.on(\"close\", (event) => this.onClose(event));\n        this.connection.on(\"error\", (error) => this.events.emit(\"error\", error));\n        this.connection.on(\"register_error\", (_error) => this.onClose());\n        this.hasRegisteredEventListeners = true;\n    }\n}\nexports.JsonRpcProvider = JsonRpcProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SolanaProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SolanaProvider {\n    constructor(opts, name, client, events) {\n        this.name = \"solana\";\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n        this.name = name;\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"solana request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"solana provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    //   {\n    //     \"chains\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\" ],\n    //     \"accounts\": [\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp:F7wnJc5wiBGy1k87jv6gyNwE3jMEWd18oTQiYsF1xVG7\"],\n    //     \"methods\": [\n    //         \"solana_signTransaction\",\n    //         \"solana_signMessage\"\n    //     ],\n    //     \"defaultChain\": \"5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\"\n    // }\n    // TODO:确认上面的defaultChain是否正确（没有solana前缀）\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"solana\"))) {\n                chainId = `solana:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.SolanaProvider = SolanaProvider;\nexports.default = SolanaProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SuiProvider = void 0;\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass SuiProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeySui;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"sui request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"sui provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    getPubkey(chainId) {\n        return this.getWalletAddress(chainId);\n    }\n    getWalletAddress(chainId) {\n        if (!chainId) {\n            chainId = this.namespace.defaultChain;\n            if (!(chainId === null || chainId === void 0 ? void 0 : chainId.startsWith(\"sui\"))) {\n                chainId = `sui:${chainId}`;\n            }\n        }\n        return this.namespace.accounts.filter(function (account) {\n            let components = account.split(\":\");\n            return components.length > 2 && account.startsWith(chainId);\n        }).map(function (account) {\n            let components = account.split(\":\");\n            return components[2];\n        })[0];\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"sui_signMessage\":\n            case \"sui_signPersonalMessage\":\n            case \"sui_signTransactionBlock\":\n            case \"sui_signAndExecuteTransactionBlock\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.SuiProvider = SuiProvider;\nexports.default = SuiProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass TONProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyTON;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    isRecord(value) {\n        return typeof value === \"object\" && value !== null && !Array.isArray(value);\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            (0, core_1.logDebug)(\"TONProvider request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"TONProvider request provider namespace: \", this.namespace);\n            if (this.namespace.methods.includes(args.method)) {\n                if (!args.params) {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params is nil\");\n                }\n                if (this.isRecord(args.params)) {\n                    const _e = args.params, { validUntil } = _e, newParams = __rest(_e, [\"validUntil\"]);\n                    let fromAddress = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n                    if ('from' in newParams) {\n                        fromAddress = newParams.from || ((_d = (_c = this.namespace.payload) === null || _c === void 0 ? void 0 : _c.ton_addr) === null || _d === void 0 ? void 0 : _d.address);\n                    }\n                    args.params['from'] = fromAddress;\n                    args.params['network'] = this.getDefaultChain();\n                    args.params['valid_until'] = validUntil;\n                    let response = yield this.client.request(args);\n                    if (this.isRecord(response) && 'result' in response) {\n                        const result = {\n                            boc: response.result.toString()\n                        };\n                        (0, core_1.logDebug)(\"TONProvider request provider response: \", JSON.stringify(response));\n                        (0, core_1.logDebug)(\"TONProvider request provider result: \", JSON.stringify(result));\n                        return result;\n                    }\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton_send request response is nil\");\n                }\n                else {\n                    throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.UNKNOWN_ERROR, \"ton request params type add nil\");\n                }\n            }\n            return this.getHttpProvider().request(args);\n        });\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        var _a, _b;\n        const accounts = this.namespace.accounts;\n        (0, core_1.logDebug)(\"ton getAccounts accounts :\", accounts);\n        (0, core_1.logDebug)(\"ton getAccounts .namespace :\", JSON.stringify(this.namespace));\n        if (!accounts) {\n            return [];\n        }\n        let address = (_b = (_a = this.namespace.payload) === null || _a === void 0 ? void 0 : _a.ton_addr) === null || _b === void 0 ? void 0 : _b.address;\n        (0, core_1.logDebug)(\"ton getAccounts address :\", address);\n        if (address) {\n            return [\n                address\n            ];\n        }\n        return [];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        (0, core_1.logDebug)('[RPC] get http provider:', chain, http);\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            (0, core_1.logDebug)(\"setHttpProvider\", chainId, rpcUrl);\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            (0, core_1.logError)(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        switch (args.method) {\n            case \"ton_sendTransaction\":\n                return true;\n            default:\n                return false;\n        }\n        return false;\n    }\n}\nexports.default = TONProvider;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst core_1 = require(\"@okxconnect/core\");\nconst utils_1 = require(\"../utils\");\nconst JsonRpcConnection_1 = require(\"./rpc/JsonRpcConnection\");\nconst JsonRpcProvider_1 = require(\"./rpc/JsonRpcProvider\");\nclass TronProvider {\n    constructor(opts, client, events) {\n        this.name = core_1.NameSpaceKeyTron;\n        this.namespace = opts.namespace;\n        this.events = events;\n        this.client = client;\n        this.chainId = this.getDefaultChain();\n        this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(namespace) {\n        this.namespace = Object.assign(this.namespace, namespace);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            (0, core_1.logDebug)(\"tron request --args--string>\", JSON.stringify(args));\n            (0, core_1.logDebug)(\"tron provider namespace: \", JSON.stringify(this.namespace));\n            if (this.namespace.methods.includes(args.method)) {\n                return this.client.request(args);\n            }\n            else {\n                throw new core_1.OKXConnectError(core_1.OKX_CONNECT_ERROR_CODES.METHOD_NOT_SUPPORTED, \"Please upgrade OKX APP\");\n            }\n        });\n    }\n    setDefaultChain(chainId, rpcUrl) {\n        // http provider exists so just set the chainId\n        if (!this.httpProviders[chainId]) {\n            this.setHttpProvider(chainId, rpcUrl);\n        }\n        this.chainId = chainId;\n        this.events.emit(constants_1.PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId)\n            return this.chainId;\n        if (this.namespace.defaultChain)\n            return this.namespace.defaultChain;\n        const chainId = this.namespace.chains[0];\n        if (!chainId)\n            throw new Error(`ChainId not found`);\n        return chainId.split(\":\")[1];\n    }\n    // --------- PRIVATE --------- //\n    getAccounts() {\n        const accounts = this.namespace.accounts;\n        if (!accounts) {\n            return [];\n        }\n        return [\n            ...new Set(accounts\n                // get the accounts from the active chain\n                .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n                // remove namespace & chainId from the string\n                .map((account) => account.split(\":\")[2])),\n        ];\n    }\n    createHttpProviders() {\n        const http = {};\n        this.namespace.chains.forEach((chain) => {\n            const parsedChainId = (0, utils_1.getChainId)(chain);\n            const parsedRpc = (0, utils_1.getRpcUrl)(chain, this.namespace);\n            let httpProvider = this.createHttpProvider(parsedChainId, parsedRpc);\n            if (httpProvider) {\n                http[parsedChainId] = httpProvider;\n            }\n        });\n        return http;\n    }\n    getHttpProvider() {\n        const chain = `${this.chainId}`;\n        const http = this.httpProviders[chain];\n        if (typeof http === \"undefined\") {\n            throw new Error(`JSON-RPC provider for ${chain} not found`);\n        }\n        return http;\n    }\n    setHttpProvider(chainId, rpcUrl) {\n        const http = this.createHttpProvider(chainId, rpcUrl);\n        if (http) {\n            this.httpProviders[chainId] = http;\n        }\n    }\n    createHttpProvider(chainId, rpcUrl) {\n        // 没有备用rpc对外提供\n        const rpc = rpcUrl;\n        if (!rpc) {\n            // logError(`No RPC url provided for chainId: ${chainId}`);\n            // throw new Error(`No RPC url provided for chainId: ${chainId}`);\n        }\n        else {\n            const http = new JsonRpcProvider_1.JsonRpcProvider(new JsonRpcConnection_1.JsonRpcConnection(rpc, (0, utils_1.getGlobal)(\"disableProviderPing\")));\n            return http;\n        }\n    }\n    showRequestModal(args) {\n        return true;\n    }\n}\nexports.default = TronProvider;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./providers\"), exports);\n__exportStar(require(\"./misc\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IJSONRpcProvider = exports.IJSONRpcConnection = void 0;\nclass IJSONRpcConnection {\n}\nexports.IJSONRpcConnection = IJSONRpcConnection;\nclass IJSONRpcProvider {\n    constructor(opt) {\n    }\n}\nexports.IJSONRpcProvider = IJSONRpcProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setGlobal = exports.getGlobal = void 0;\nconst globals = {};\nconst getGlobal = (key) => {\n    return globals[key];\n};\nexports.getGlobal = getGlobal;\nconst setGlobal = (key, value) => {\n    globals[key] = value;\n};\nexports.setGlobal = setGlobal;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./misc\"), exports);\n__exportStar(require(\"./globals\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRpcUrl = getRpcUrl;\nexports.getChainId = getChainId;\nexports.fromAccountToAddress = fromAccountToAddress;\nexports.convertChainIdToNumber = convertChainIdToNumber;\nexports.parseChainId = parseChainId;\nexports.mergeArrays = mergeArrays;\nexports.syncAddressAvailable = syncAddressAvailable;\nexports.syncAddressHostAvailable = syncAddressHostAvailable;\nconst core_1 = require(\"@okxconnect/core\");\nfunction getRpcUrl(chainId, rpc, projectId) {\n    var _a;\n    const chain = parseChainId(chainId);\n    // no default\n    return (((_a = rpc.rpcMap) === null || _a === void 0 ? void 0 : _a[chain.reference]) ||\n        ``);\n}\nfunction getChainId(chain) {\n    return chain.includes(\":\") ? chain.split(\":\")[1] : chain;\n}\nfunction fromAccountToAddress(account) {\n    if (!account) {\n        return \"\";\n    }\n    try {\n        let addressArr = account.split(\":\").slice(2);\n        let address = addressArr.length > 0 ? addressArr.join(\":\") : \"\";\n        (0, core_1.logDebug)(\"fromAccountToAddress address and account:\", address, account);\n        return address;\n    }\n    catch (e) {\n        (0, core_1.logError)(\"fromAccountToAddress error:\", account);\n        return \"\";\n    }\n}\n// export function validateChainApproval(chain: string, chains: string[]): void {\n//   if (!chains.includes(chain)) {\n//     throw new Error(\n//       `Chain '${chain}' not approved. Please use one of the following: ${chains.toString()}`,\n//     );\n//   }\n// }\n// export function getChainsFromApprovedSession(accounts: string[]): string[] {\n//   return accounts.map((address) => `${address.split(\":\")[0]}:${address.split(\":\")[1]}`);\n// }\n// export function getAccountsFromSession(namespace: string, session: SessionTypes.Struct): string[] {\n//   // match namespaces e.g. eip155 with eip155:1\n//   const matchedNamespaceKeys = Object.keys(session.namespaces).filter((key) =>\n//     key.includes(namespace),\n//   );\n//   if (!matchedNamespaceKeys.length) return [];\n//   const accounts: string[] = [];\n//   matchedNamespaceKeys.forEach((key) => {\n//     const accountsForNamespace = session.namespaces[key].accounts;\n//     accounts.push(...accountsForNamespace);\n//   });\n//   return accounts;\n// }\n// export function mergeRequiredOptionalNamespaces(\n//   required: NamespaceConfig = {},\n//   optional: NamespaceConfig = {},\n// ){\n//   const requiredNamespaces = normalizeNamespaces(required);\n//   const optionalNamespaces = normalizeNamespaces(optional);\n//    return merge.merge(requiredNamespaces,optionalNamespaces)\n// }\n/**\n * Converts\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * into\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *\n */\n// export function normalizeNamespaces(namespaces: NamespaceConfig): NamespaceConfig {\n//   const normalizedNamespaces: NamespaceConfig = {};\n//   if (!isValidObject(namespaces)) return normalizedNamespaces;\n//\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const chains = isCaipNamespace(key) ? [key] : values.chains;\n//     const rpcMap = values.rpcMap || {};\n//     const normalizedKey = parseNamespaceKey(key);\n//     normalizedNamespaces[normalizedKey] = {\n//       ...normalizedNamespaces[normalizedKey],\n//       ...values,\n//       chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n//       rpcMap: { ...rpcMap, ...normalizedNamespaces[normalizedKey]?.rpcMap },\n//     };\n//   }\n//   return normalizedNamespaces;\n// }\n//\n// export function parseCaip10Account(caip10Account: string): string {\n//   return caip10Account.includes(\":\") ? caip10Account.split(\":\")[2] : caip10Account;\n// }\n/**\n * Populates the chains array for each namespace with the chains extracted from the accounts if are otherwise missing\n */\n// export function populateNamespacesChains(\n//   namespaces: SessionTypes.Namespaces,\n// ): Record<string, SessionTypes.Namespace> {\n//   const parsedNamespaces: Record<string, SessionTypes.Namespace> = {};\n//   for (const [key, values] of Object.entries(namespaces)) {\n//     const methods = values.methods || [];\n//     const events = values.events || [];\n//     const accounts = values.accounts || [];\n//     // If the key includes a CAIP separator `:` we know it's a namespace + chainId (e.g. `eip155:1`)\n//     const chains = isCaipNamespace(key)\n//       ? [key]\n//       : values.chains\n//       ? values.chains\n//       : getChainsFromApprovedSession(values.accounts);\n//     parsedNamespaces[key] = {\n//       chains,\n//       methods,\n//       events,\n//       accounts,\n//     };\n//   }\n//   return parsedNamespaces;\n// }\nfunction convertChainIdToNumber(chainId) {\n    if (typeof chainId === \"number\")\n        return chainId;\n    if (chainId.includes(\"0x\")) {\n        return parseInt(chainId, 16);\n    }\n    chainId = chainId.includes(\":\") ? chainId.split(\":\")[1] : chainId;\n    return isNaN(Number(chainId)) ? chainId : Number(chainId);\n}\nconst CAIP_DELIMITER = \":\";\nfunction parseChainId(chain) {\n    const [namespace, reference] = chain.split(CAIP_DELIMITER);\n    return { namespace, reference };\n}\nfunction mergeArrays(a = [], b = []) {\n    return [...new Set([...a, ...b])];\n}\nfunction syncAddressAvailable(wallet) {\n    if (!wallet) {\n        return false;\n    }\n    if (wallet.appName !== 'OKX Wallet') {\n        return false;\n    }\n    if ((0, core_1.versionCompare)('6.97.0', wallet.appVersion) > 0) {\n        return false;\n    }\n    return syncAddressHostAvailable();\n}\nfunction syncAddressHostAvailable() {\n    try {\n        return !!(window.okxGlobal);\n    }\n    catch (e) {\n        return false;\n    }\n}\n","<template>\n  <div id=\"app\">\n    <el-container>\n      <el-header>OKX Connect</el-header>\n      <el-main>\n        <el-card class=\"wallet-info\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Wallet Info</div>\n          </template>\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Wallet Address:</strong> {{ getWalletAddress }}\n            </el-col>\n          </el-row>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"24\">\n              <strong>Status :</strong> {{ currentStatus }}\n            </el-col>\n          </el-row>\n\n        </el-card>\n\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Connect Params</div>\n          </template>\n\n          <el-row class=\"info-row\">\n            <el-col :span=\"12\">\n              <el-checkbox v-model=\"withUI\" @change=\"handleWithUI\">\n                Show UI</el-checkbox>\n            </el-col>\n\n            <el-col :span=\"12\">\n              <el-checkbox v-model=\"universalToTG\" @change=\"handleUniversalToTG\">\n                Use mini wallet</el-checkbox>\n            </el-col>\n          </el-row>\n\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Modals</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"modals\" placeholder=\"Modals\" @change=\"handleModalsSelect\" multiple>\n                <el-option label=\"Before\" value=\"before\" />\n                <el-option label=\"Success\" value=\"success\" />\n                <el-option label=\"Error\" value=\"error\" />\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center; justify-content: space-between;\">\n            <el-col :span=\"6\" style=\"gap: 2px\">\n              <p style=\"font-size: 11pt; margin: 0px\">Return Strategy</p>\n              <p style=\"font-size: 9pt; margin: 0px\">(Mobile only)</p>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-select\n                v-model=\"returnStrategy\"\n                @change=\"handleReturnStrategySelect\"\n                placeholder=\"Return Strategy\"\n              >\n                <el-option\n                  v-for=\"strategy in returnStrategies\"\n                  :key=\"`return-strategy-select-option-${strategy}`\"\n                  :label=\"strategy\"\n                  :value=\"strategy\"\n                />\n              </el-select>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-input\n                v-if=\"returnStrategy === 'deeplink'\"\n                v-model=\"deeplink\"\n                @change=\"handleReturnStrategyDeeplink\"\n                placeholder=\"Deeplink\"\n                :disabled=\"returnStrategy !== 'deeplink'\"\n                style=\"margin: 0px\"\n              />\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Lang</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"language\" @change=\"handleLanguageSelect\" placeholder=\"Language\">\n                <el-option v-for=\"locale in locales\" :key=\"`language-select-option-${locale}`\" :label=\"locale\"\n                  :value=\"locale\" />\n              </el-select>\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Theme</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"theme\" @change=\"handleThemeSelect\" placeholder=\"Theme\">\n                <el-option label=\"LIGHT\" :value=\"THEME.LIGHT\" />\n                <el-option label=\"DARK\" :value=\"THEME.DARK\" />\n              </el-select>\n            </el-col>\n          </el-row>\n\n<!--          <el-row>-->\n<!--          <el-row style=\"align-items: center\">-->\n<!--            <el-col :span=\"4\">-->\n<!--              <p style=\"font-size: 11pt\">Connect</p>-->\n<!--              <p style=\"font-size: 11pt\">Methods</p>-->\n<!--            </el-col>-->\n<!--            <el-col :span=\"20\">-->\n<!--              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" placeholder=\"Methods\">-->\n<!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n<!--                           :value=\"methods\" />-->\n\n<!--              </el-select>-->\n<!--            </el-col>-->\n<!--          </el-row>-->\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">Connect</p>\n              <p style=\"font-size: 11pt\">Methods</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-select v-model=\"selectedMethod\" @change=\"handleConnectMethodsSelect\" multiple placeholder=\"methods\">\n                <el-option\n                    v-for=\"item in connectMethods\"\n                    :key=\"item\"\n                    :label=\"item\"\n                    :value=\"item\">\n                </el-option>\n              </el-select>\n\n\n<!--              <el-select v-model=\"selectedMethod\" placeholder=\"Methods\" @change=\"handleConnectMethodsSelect\" multiple>-->\n<!--                <el-option v-for=\"methods in connectMethods\" :key=\"`handleConnectMethodsSelect-${methods}`\" :label=\"methods\"-->\n<!--                           :value=\"methods\" />-->\n<!--              </el-select>-->\n            </el-col>\n          </el-row>\n\n          <el-row style=\"align-items: center\">\n            <el-col :span=\"4\">\n              <p style=\"font-size: 11pt\">ton_proof</p>\n            </el-col>\n            <el-col :span=\"20\">\n              <el-input v-model=\"tonProofValue\"  placeholder=\"input ton_proof\"></el-input>\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" align=\"middle\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Required Chains</div>\n            </el-col>\n            <el-col\n              :span=\"6\"\n              v-for=\"item in Object.keys(availableChains)\"\n              :key=\"item\"\n            >\n              <el-checkbox\n                v-model=\"availableChains[item].checked\"\n                :disabled=\"!areChainsInit\"\n                >{{ availableChains[item].name }}</el-checkbox\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" align=\"middle\" style=\"margin-top: 20px\">\n            <el-col :span=\"20\">\n              <div style=\"font-weight: bold;\">Select Optional Chains</div>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(43114)\" @change=\"() => handleOptionChange(43114)\">\n                AVAX</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(10)\" @change=\"() => handleOptionChange(10)\">OP</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(8453)\" @change=\"() => handleOptionChange(8453)\">\n                BASE</el-checkbox>\n            </el-col>\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked(99781165)\"\n                @change=\"() => handleOptionChange(99781165)\">Nonexist</el-checkbox>\n            </el-col>\n\n            <el-col :span=\"5\">\n              <el-checkbox :checked=\"isOptionalChecked('solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp')\" @change=\"() => handleOptionChange('solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp')\">Solana</el-checkbox>\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"initBtnClicked\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ connectInitStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                type=\"primary\"\n                @click=\"connectBtnClicked\"\n                icon=\"el-icon-connection\"\n                :disabled=\"!areChainsInit\"\n                >{{ connectStatusStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                  type=\"primary\"\n                  @click=\"syncAllAddressClick\"\n                  icon=\"el-icon-connection\"\n                  :disabled=\"!areChainsInit\"\n              >{{ syncAllAddressStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button\n                type=\"danger\"\n                @click=\"disconnectAction\"\n                icon=\"el-icon-switch-button\"\n                :disabled=\"!areChainsInit || walletAddress.length == 0\"\n                >{{ disconnectStatusStr }}</el-button\n              >\n            </el-col>\n          </el-row>\n\n          <teleport to=\"body\">\n            <div v-if=\"showModal\" class=\"modal-overlay\" @click=\"closeModal\">\n              <div class=\"modal-content\" @click.stop>\n                <button class=\"close-button\" @click=\"closeModal\">\n                  &times;\n                </button>\n                <h2>Scan to connect</h2>\n                <qrcode-vue :value=\"qrValue\" :size=\"350\" level=\"L\" />\n              </div>\n            </div>\n          </teleport>\n        </el-card>\n\n        <!-- 发送交易 -->\n        <el-card class=\"wallet-actions\">\n          <template #header>\n            <div style=\"font-weight: bold;\">Transactions</div>\n          </template>\n\n          <el-tabs v-model=\"activeTab\" type=\"border-card\" @tab-click=\"clickActiveTab\">\n            <!-- ETH -->\n            <el-tab-pane label=\"ETH\" name=\"eip155:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to ETH)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send ETH)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve TONCoin)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(eth mint\n                    nft)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add SPX6900)\n                  </el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TON\" name=\"ton:-239\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_getAccount\">ton_getAccount</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"ton_sendTransaction\">ton_sendTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- solana -->\n            <el-tab-pane label=\"Sol\" name=\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signVersionedTransaction\">solana_signVersionedTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAllVersionedTransactions\">sol_signAllVersionedTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- Sui-->\n            <el-tab-pane label=\"Sui\" name=\"sui:mainnet\">\n              <SuiPanel @generateTransactionParams=\"sui_generateTransactionParams\" />\n            </el-tab-pane>\n            <!-- BTC -->\n            <el-tab-pane label=\"BTC\" name=\"btc:mainnet\">\n              <BTCPanel @generateTransactionParams=\"btc_generateTransactionParams\" />\n            </el-tab-pane>\n\n            <!-- Fractal BTC -->\n            <el-tab-pane label=\"Fractal\" name=\"fractal:mainnet\">\n              <FractalPanel @generateTransactionParams=\"fractal_generateTransactionParams\" />\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Tron\" name=\"tron:mainnet\">\n              <TronTransactionPanel\n                  @generateTransactionParams=\"tron_generateTransactionParams\"\n                  @generateTransactionResult=\"tron_getTransactionResult\" />\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Aptos\" name=\"aptos:mainnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signTransaction\">aptos_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"aptos_signAndSubmitTransaction\">aptos_signAndSubmitTransaction</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Cosmos\" name=\"cosmos:cosmoshub-4\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <!-- Polygon-->\n            <el-tab-pane label=\"Polygon\" name=\"eip155:137\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send POL)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve sushi)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_mint\">eth_sendTransaction(polygon mint\n                    nft)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add LGNS)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_testRpc()\">wallet_testRpc(Polygon)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\"\n                  >eth_sendTransaction(转账FUSE)</el-button\n                  >\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_approve\"\n                  >eth_sendTransaction(授权USDC)</el-button\n                  >\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <!-- BSC-->\n            <el-tab-pane label=\"BNB\" name=\"eip155:56\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId(BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"wallet_switchEthereumChain()\">wallet_switchEthereumChain(switch to BNB)</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_addEthereumChain()\">wallet_addEthereumChain</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_transfer\">eth_sendTransaction(send BNB)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"eth_sendTransaction_approve\">eth_sendTransaction(approve POSI)</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_watchAsset()\">wallet_watchAsset(add FET)\n                  </el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"wallet_testRpc()\">wallet_testRpc(check balance on eth)</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Fuse\" name=\"eip155:122\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_requestAccounts\">eth_requestAccounts</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_chainId()\">eth_chainId</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"personal_sign()\">personal_sign</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_signTypedData_v4()\">eth_signTypedData_v4</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"eth_sendTransaction_swap\">eth_sendTransaction(Swap)</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Sonic testnet\" name=\"svm:70000062\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signMessage\">solana_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signTransaction\">solana_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAllTransactions\">sol_signAllTransactions</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"sol_signAndSendTransaction\">sol_signAndSendTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                             @click=\"sol_signAndSendVersionedTransaction\">signAndSendVersionedTransaction</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n\n            <el-tab-pane label=\"Movement\" name=\"movement:testnet\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"aptos_signMessage\">aptos_signMessage</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"move_signTransaction\">move_signTransaction</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\"\n                    @click=\"move_signAndSubmitTransaction\">move_signAndSubmitTransaction</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n\n            <el-tab-pane label=\"osmos\" name=\"cosmos:osmosis-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"SEI\" name=\"cosmos:pacific-1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signArbitrary\">cosmos_signArbitrary</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signAmino\">cosmos_signAmino</el-button>\n                </el-col>\n              </el-row>\n\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"cosmos_signDirect\">cosmos_signDirect</el-button>\n                </el-col>\n              </el-row>\n\n            </el-tab-pane>\n\n            <el-tab-pane label=\"TEST \" name=\"test:1\">\n              <el-row :gutter=\"12\" class=\"button-row\">\n                <el-col :span=\"24\">\n                  <el-button type=\"primary\" @click=\"testBase64UrlSafe\">testBase64UrlSafe</el-button>\n                </el-col>\n              </el-row>\n            </el-tab-pane>\n          </el-tabs>\n\n          <el-col :xs=\"24\" :sm=\"24\" style=\"margin: 16px 0px;\">\n            <el-row style=\"align-items: center; justify-content: space-between; margin-bottom: 8px;\">\n              <el-col :span=\"4\">\n                <p style=\"font-size: 11pt; margin: 0px; text-align: start\">Redirect param (only for ETH, Polygon, BNB, Fuse)</p>\n              </el-col>\n              <el-col :span=\"9\">\n                <el-select\n                  v-model=\"redirect\"\n                  @change=\"handleRedirectSelect\"\n                  placeholder=\"Return Strategy\"\n                  :disabled=\"!canChainAddRedirectParam()\"\n                  >\n                  <el-option\n                    v-for=\"strategy in returnStrategies\"\n                    :key=\"`return-strategy-select-option-${strategy}`\"\n                    :label=\"strategy\"\n                    :value=\"strategy\"\n                  />\n                </el-select>\n              </el-col>\n              <el-col :span=\"10\">\n                <el-input\n                  v-if=\"redirect === 'deeplink'\"\n                  v-model=\"redirectDeeplink\"\n                  @change=\"handleRedirectDeeplink\"\n                  placeholder=\"Deeplink\"\n                  :disabled=\"!canChainAddRedirectParam() || redirect !== 'deeplink'\"\n                  style=\"margin: 0px\"\n                />\n              </el-col>\n            </el-row>\n            <el-button\n              type=\"primary\" @click=\"addRedirectParam()\"\n              :disabled=\"!canChainAddRedirectParam() || !testTransaction\"\n            >\n              Add redirect param to data\n            </el-button>\n          </el-col>\n\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Data:</div>\n            <el-input v-model=\"testTransaction\" type=\"textarea\" :rows=\"5\" placeholder=\"sendTransactions\"></el-input>\n          </el-col>\n          <el-col :xs=\"24\" :sm=\"12\">\n            <div class=\"input-label\">Result :</div>\n            <el-input v-model=\"testboc\" type=\"textarea\" :rows=\"5\" placeholder=\"boc\"></el-input>\n          </el-col>\n          <el-row :gutter=\"12\" class=\"button-row\">\n            <el-col :span=\"24\">\n              <el-button type=\"primary\" @click=\"sendTransaction()\">{{\n                testTransactionStr\n                }}</el-button>\n            </el-col>\n          </el-row>\n        </el-card>\n      </el-main>\n    </el-container>\n  </div>\n</template>\n\n<style scoped>\n/* 重置全局边距和内边距 */\nbody,\nhtml {\n  margin: 0;\n  padding: 0;\n  height: 100%;\n}\n\n/* 确保 app 容器占满整个视口 */\n#app {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin: 0 auto;\n  /* 居中 */\n  max-width: 600px;\n  /* 设置最大宽度 */\n  padding: 0 20px;\n  /* 添加一些左右内边距 */\n}\n\n/* 调整 el-container 样式 */\n.el-container {\n  min-height: 100vh;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n}\n\n/* 调整 el-header 样式 */\n.el-header {\n  background-color: #333333;\n  color: white;\n  height: 50px;\n  line-height: 50px;\n  font-size: 18px;\n  font-weight: bold;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1000;\n}\n\n/* 调整 el-main 样式 */\n.el-main {\n  padding: 70px 0 20px;\n  /* 增加顶部内边距以避免被固定header遮挡 */\n  flex-grow: 1;\n}\n\n.el-card {\n  margin-bottom: 20px;\n}\n\n.info-row {\n  margin-bottom: 10px;\n}\n\n.input-label {\n  margin-bottom: 5px;\n  text-align: left;\n}\n\n.el-input {\n  margin-bottom: 10px;\n}\n\n/* 通用按钮样式 */\n.wallet-actions .el-button,\n.transaction .el-button,\n.clear-cache .el-button {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 40px;\n}\n\n.wallet-actions .el-button span,\n.transaction .el-button span,\n.clear-cache .el-button span {\n  margin: 0 auto;\n}\n\n/* 按钮行间距 */\n.wallet-actions .button-row,\n.transaction .button-row {\n  margin-bottom: 8px;\n}\n\n.wallet-actions .button-row:last-child,\n.transaction .button-row:last-child {\n  margin-bottom: 0;\n}\n\n/* 调整图标和文字的对齐 */\n.wallet-actions .el-button [class^=\"el-icon-\"],\n.transaction .el-button [class^=\"el-icon-\"],\n.clear-cache .el-button [class^=\"el-icon-\"] {\n  margin-right: 5px;\n  vertical-align: middle;\n}\n\n/* 新增：调整发送交易按钮与输入框的间距 */\n.transaction .el-row:not(:last-child) {\n  margin-bottom: 10px;\n}\n\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.modal-content {\n  background-color: white;\n  padding: 20px;\n  border-radius: 8px;\n  text-align: center;\n  position: relative;\n  max-width: 90%;\n  width: 400px;\n}\n\n.close-button {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  font-size: 24px;\n  border: none;\n  background: none;\n  cursor: pointer;\n}\n\n/* 响应式调整 */\n@media (max-width: 600px) {\n  #app {\n    padding: 0 10px;\n  }\n\n  .el-main {\n    padding: 60px 0 10px;\n  }\n}\n</style>\n<script>\nimport {OKX_CONNECT_ERROR_CODES, safeJsonStringify,getAppWalletDeepLink,getUniversalLink} from \"@okxconnect/core\"\nimport {\n  OKXBtcProvider,\n  OKXUniversalProvider,\n  OKXCosmosProvider,\n  OKXTonProvider,\n  OKXTronProvider\n} from \"@okxconnect/universal-provider\"\nimport {OKXSolanaProvider} from \"@okxconnect/solana-provider\";\nimport {\n  Connection,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n  TransactionMessage,\n  VersionedTransaction\n} from '@solana/web3.js';\nimport {OKXSuiProvider as SuiAdapter} from \"@okxconnect/sui-provider\"\nimport QrcodeVue from 'qrcode.vue'\n\nimport {OKXAptosProvider} from \"@okxconnect/aptos-provider\";\nimport {Aptos, AptosConfig, Network} from \"@aptos-labs/ts-sdk\";\n\nimport BTCPanel from \"./components/BtcTransactionPanel.vue\";\nimport FractalPanel from \"./components/FractalTransactionPanel.vue\"\nimport SuiPanel from \"./components/SuiTransactionPanel.vue\";\n\nimport {OKXUniversalConnectUI, THEME} from \"@okxconnect/ui\";\nimport { ethers } from 'ethers';\nimport VConsole from 'vconsole';\nimport nacl from \"tweetnacl\";\nconst { verifyADR36Amino } = require('@keplr-wallet/cosmos')\nconst { fromBech32 } = require('@cosmjs/encoding')\nimport { verifyPersonalMessageSignature } from '@mysten/sui/verify';\nimport {useShortLink} from \"@okxconnect/core\";\nimport TronTransactionPanel from \"@/components/TronTransactionPanel.vue\";\nimport {TronWeb} from \"tronweb\";\nnew VConsole();\n\nconst allChains = {\n  1: { name: \"Eth\", checked: false },\n  56: { name: \"BNB\", checked: false },\n  137: { name: \"Polygon\", checked: false },\n  122: { name: \"Fuse\", checked: false },\n  \"ton:-239\":{name: \"TON\",checked: false},\n  \"btc:mainnet\": { name: \"BTC\", checked: false },\n  \"sui:mainnet\": { name: \"Sui\", checked: false },\n  \"aptos:mainnet\": { name: \"Aptos\", checked: false },\n  \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\": {\n    name: \"Solana\",\n    checked: false,\n  },\n  \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\": {\n    name: \"Sol testnet\",\n    checked: false,\n  },\n  \"svm:70000062\": {\n    name: \"Sonic testnet\",\n    checked: false,\n  },\n  \"movement:testnet\": { name: \"Movement\", checked: false },\n  \"fractal:mainnet\": { name: \"Fractal\", checked: false },\n  \"cosmos:osmosis-1\": {name: \"Osmos\", checked: false},\n  \"cosmos:cosmoshub-4\": {name: \"Cosmos\", checked: false},\n  \"cosmos:pacific-1\": {name: \"SEI\", checked: false},\n  \"cosmos:abvdefg\": {name: \"cosmos:abvdefg\", checked: false},\n  \"tron:mainnet\": {name: \"tron\", checked: false},\n  997865: { name: \"Non Exist chain\", checked: false },\n  2020: { name: \"Ronin\", checked: false },\n  1666600000: { name: \"Harmony\", checked: false },\n};\n\nconst chainsThatCanAddRedirectParam = [\n  \"eip\"\n]\n\nvar optionChains = new Set([]);\nvar selectedModals = [\"before\", \"success\", \"error\"];\nvar selectedReturnStrategy = \"none\";\nvar selectedDeepLink = \"tg://resolve\";\nvar selectedLanguage = \"en_US\";\nvar selectedTheme = THEME.LIGHT;\n\n// import QrcodeVue from 'qrcode.vue'\nexport default {\n  name: \"App\",\n  components: {\n    TronTransactionPanel,\n    QrcodeVue,\n    BTCPanel,\n    FractalPanel,\n    SuiPanel\n  },\n\n  data: () => {\n    return {\n      activeTab: \"eip155:1\",\n      testTopic: \"\",\n      testPublicKey: \"\",\n      testProofPayload: \"\",\n      tonProofValue:\"\",\n      pendingDeepLink: \"-\",\n      logList: [],\n      connectReady: false,\n      connectStatusStr: \"Connect\",\n      syncAllAddressStr: \"syncAllAddress\",\n      connectInitStr: \"init test\",\n      disconnectStatusStr: \"Disconnect\",\n      localPubKey: \"\",\n      localSecKey: \"\",\n      testTransaction: \"\",\n      selectedChain: \"eip155:1\",\n      testTransactionStr: \"Send\",\n      walletAddress: \"\",\n      testboc: \"\",\n      ProofPayloadVerify: \"\",\n      showModal: false,\n      showVerifyRow: false,\n      qrValue: \"https://www.okx.com/download\",\n      currentStatus: \"\",\n      areChainsInit: false,\n      availableChains: allChains,\n      isOptionalChecked: (chainId) => {\n        return optionChains.has(chainId);\n      },\n      withUI: localStorage.getItem(\"autoRefresh\") != \"false\",\n      universalToTG: localStorage.getItem(\"universalToTG\") != \"false\",\n      modals: selectedModals,\n      returnStrategies: [\"none\", \"back\", \"deeplink\"],\n      returnStrategy: selectedReturnStrategy,\n      deeplink: selectedDeepLink,\n      locales: [\n        \"en_US\",\n        \"ru_RU\",\n        \"zh_CN\",\n        \"zh\",\n        \"ar_AE\",\n        \"cs_CZ\",\n        \"de_DE\",\n        \"es_ES\",\n        \"es_LAT\",\n        \"fr_FR\",\n        \"id_ID\",\n        \"it_IT\",\n        \"nl_NL\",\n        \"pl_PL\",\n        \"pt_BR\",\n        \"pt_PT\",\n        \"ro_RO\",\n        \"tr_TR\",\n        \"uk_UA\",\n        \"vi_VN\",\n        \"zh_TW\"\n      ],\n      selectedMethod:[],\n      selectedMethodData:[],\n      connectMethods:[\n        \"wallet_addEthereumChain(ETH)\",\n        \"personal_sign(ETH)\",\n        \"solana_signMessage(Sol mainnet)\",\n        \"sui_signMessage(Sui mainnet)\",\n        \"sui_signPersonalMessage(Sui mainnet)\",\n        \"btc_signMessage(BTC)\",\n        \"aptos_signMessage(aptos mainnet)\",\n        \"cosmos_signArbitrary(cosmoshub)\",\n        \"test_noSupport_eth(ETH)\",\n        \"tron_signMessage\",\n        \"tron_signMessageV2\",\n        \"sync_all_addresses\"\n      ],\n\n      language: selectedLanguage,\n      theme: selectedTheme,\n      THEME: THEME,\n      redirect: selectedReturnStrategy,\n      redirectDeeplink: selectedDeepLink,\n      handleWithUI: (isChecked) => {\n        localStorage.setItem(\"autoRefresh\", `${isChecked}`);\n        location.reload();\n      },\n      handleUniversalToTG: (isChecked) => {\n        localStorage.setItem(\"universalToTG\", `${isChecked}`);\n      },\n      handleOptionChange: (chainId) => {\n        if (optionChains.has(chainId)) {\n          optionChains.delete(chainId);\n        } else {\n          optionChains.add(chainId);\n        }\n      },\n    };\n  },\n  computed: {\n    getWalletAddress: function () {\n      return this.walletAddress;\n    },\n  },\n  methods: {\n    isChecked(chainId) {\n      return this.selectedChains.has(chainId);\n    },\n\n    initChains(newChains) {\n      if (newChains.length > 0) {\n        const updatedChains = Object.assign({}, this.availableChains);\n        for (const chainId of newChains) {\n          if (updatedChains[chainId]){\n            updatedChains[chainId].checked = !updatedChains[chainId].checked;\n          }\n        }\n        this.availableChains = updatedChains;\n      }\n\n      this.areChainsInit = true;\n    },\n\n    async clickActiveTab(tab) {\n      const tabName = tab.props ? tab.props.name : tab.name;\n      this.selectedChain = tabName;\n      console.log(`已切换到链 :`, tabName);\n\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      window.provider.setDefaultChain(this.selectedChain);\n    },\n\n    async initBtnClicked() {\n      window.okxLogDebug = true\n      var initCall;\n      if (!this.withUI) {\n        initCall = OKXUniversalProvider.init({\n          dappMetaData: {\n            name: \"univer test dapp\",\n            icon: \"https://avatars.githubusercontent.com/u/37784886\",\n          },\n        });\n      } else {\n        initCall = OKXUniversalConnectUI.init({\n          dappMetaData: {\n            icon: \"https://static.okx.com/cdn/assets/imgs/247/58E63FEA47A2B7D7.png\",\n            name: \"OKX WalletConnect UI Demo\",\n          },\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: 'all',\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme\n          },\n        });\n      }\n\n      initCall.then((provider) => {\n        window.provider = provider;\n        window.tonProvider = new OKXTonProvider(window.provider);\n        window.tonProvider.onStatusChange((walletInfo) => {\n              console.log('TONConnection onStatusChange:', JSON.stringify(walletInfo));\n            }, (err) => {\n              console.log('TONConnection onStatusChange error:', err);\n            }\n        )\n\n        if (window.provider instanceof OKXUniversalConnectUI) {\n          window.provider.onModalStateChange((state)=>{\n            console.log(`onModalStateChange   ${JSON.stringify(state)}`)\n          })\n        }\n\n        console.log(\"init finished:\", provider);\n        console.log(\"init finished session:\", JSON.stringify(provider.session));\n\n        if (provider.session?.namespaces) {\n          const newChains = [];\n          console.log(\"namespaces\", provider.session.namespaces);\n          Object.entries(provider.session.namespaces).forEach(([key, value]) => {\n            if (key === \"eip155\") {\n              value.chains.forEach((chain) => {\n                newChains.push(parseInt(chain.substring(7)));\n              });\n            }\n            else {\n              value.chains.forEach((chain) => {\n                newChains.push(chain);\n              });\n            }\n          });\n\n          console.log(\"existing chains:\", newChains);\n          this.initChains(newChains);\n        } else {\n          this.initChains([]);\n        }\n\n        provider.on(\"display_uri\", (uri) => {\n          if (!useShortLink()){\n            if (this.isPC()) {\n              if (uri && !this.withUI && !this.universalToTG) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          }\n          console.log(\"通知>>>display_uri  ==> \", uri);\n        });\n\n        provider.on(\"connect_signResponse\", (items) => {\n          console.log(\"通知>>>connect_signResponse  ==> \", JSON.stringify(items));\n          this.verifyMessage(items)\n        })\n\n        provider.on(\"short_display_uri\", (uri) => {\n          if (useShortLink()){\n            if (this.isPC()) {\n              if (uri && !this.withUI && !this.universalToTG) {\n                this.qrValue = uri;\n                this.showModal = true;\n              }\n            }\n          }\n          console.log(\"通知>>>short_display_uri  ==> \", uri);\n        });\n\n\n        provider.on(\"session_connecting\", () => {\n          if (useShortLink()){\n            alert(\"session_connecting\")\n          }\n          console.log(\"通知>>>session_connecting  ==> \");\n        });\n\n        provider.on(\"connect\", (session) => {\n          console.log(\"通知>>>get connect session\", session);\n        });\n        provider.on(\"reconnect\", (session) => {\n          console.log(\"通知>>>get reconnect session\", session);\n          this.walletAddress = \"connected\";\n        });\n        provider.on(\"disconnect\", ({ topic }) => {\n          console.log(`通知>>>get disconnect  ${topic}`);\n          this.walletAddress = \"disconnecteddddd\";\n        });\n        provider.on(\"session_delete\", ({ topic }) => {\n          console.log(`通知>>>get session_delete  ${topic}`);\n        });\n        provider.on(\"session_update\", (session) => {\n          console.log(`通知>>>get session_update `, JSON.stringify(session));\n        });\n      });\n    },\n\n    async connectBtnClicked() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        this.testTonSdk();\n      } else {\n        console.log(`connectBtnClicked provider not finish init`);\n      }\n    },\n\n    async syncAllAddressClick() {\n      console.log(`encryptStoreMsg   connectBtnClicked  ${Date.now()}`);\n      if (window.provider) {\n        if (window.provider instanceof OKXUniversalProvider){\n          if (window.provider.connected()){\n            try {\n              let message = await window.provider.syncAllAddresses()\n              if (typeof message == \"string\") {\n                this.testboc = message\n              } else {\n                this.testboc = JSON.stringify(message)\n              }\n            }catch (e) {\n              this.testboc = JSON.stringify(e)\n            }\n          }else{\n            this.testboc = \"not connected\"\n          }\n        }\n\n      } else {\n        console.log(`syncAllAddress provider not finish init`);\n      }\n    },\n\n    async disconnectAction() {\n      try {\n        console.log(\"get disconnect wallet btn clicked\");\n        // await TON.disconnect();\n        var provider = window.provider;\n        await provider.disconnect();\n        this.walletAddress = \"disconnected\";\n      } catch (error) {\n        console.log(\"Disconnect  error ==>> \", error.message);\n        this.currentStatus = error.message;\n      }\n    },\n\n    async eth_requestAccounts() {\n      var data = { method: \"eth_requestAccounts\" };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_chainId() {\n      var data = { method: \"eth_chainId\" };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async wallet_switchEthereumChain() {\n      var data = { method: \"wallet_switchEthereumChain\" };\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async wallet_addEthereumChain() {\n      var data = {\n        method: \"wallet_addEthereumChain\",\n        params: {\n          blockExplorerUrls: [\"https://explorer.fuse.io\"],\n          chainId: \"0x7a\",\n          chainName: \"Fuse\",\n          nativeCurrency: { name: \"Fuse\", symbol: \"FUSE\", decimals: 18 },\n          rpcUrls: [\"https://rpc.fuse.io\"],\n        },\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n    async personal_sign() {\n      if (this.selectedChain === \"eip155:1\") {\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0x1ca023f10e157d148deed210f8bee193657a1eaa7f187909e20a9dc3b071dbc364c41fde37960c05093359f410a061ec8a7dca8c0c39fc7c1e24de8a3329775d1b\n\n        var accounts = await window.provider.request(\n          { method: \"eth_requestAccounts\" },\n          \"eip155:1\"\n        );\n        var address = accounts[0];\n        console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n        var dataETH = {\n          method: \"personal_sign\",\n          params: [\n            \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n            address,\n          ],\n        };\n\n        this.testTransaction = JSON.stringify(dataETH);\n      } else if (\n        this.selectedChain === \"eip155:137\" ||\n        this.selectedChain === \"eip155:122\"\n      ) {\n        // method\n        // personal_sign\n        // address\n        // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n        // valid\n        // true\n        // result\n        // 0xebda9cfa2af43999058dffa0107031d1ef7fc0252dca85dcbd22ea097af922ca39b64d509ef61ce42b7641c5840b8a80337ffd1411b13e87e2260a3f1b6c151c1b\n\n        var dataPolygon = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n        this.testTransaction = JSON.stringify(dataPolygon);\n      } else if (this.selectedChain === \"eip155:56\") {\n        var data = {\n          method: \"personal_sign\",\n          params: {\n            message:\n              \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937353831303437\",\n          },\n        };\n\n        this.testTransaction = JSON.stringify(data);\n      }\n    },\n\n    async eth_sendTransaction_swap() {\n      var data = {\n        method: \"eth_sendTransaction\",\n        chainId: \"eip155:122\",\n        params: {\n          value: \"0x38d7ea4c68000\",\n          gas: \"0x2665f\",\n          to: \"0xf2614A233c7C3e7f08b1F887Ba133a13f1eb2c55\",\n          from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n          data: \"0x2646478b000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee00000000000000000000000000000000000000000000000000038d7ea4c68000000000000000000000000000620fd5fa44be6af63715ef4e65ddfa0387ad13f5000000000000000000000000000000000000000000000000000000000000001b000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000700301ffff0201602352A9Eb5234466Eac23E59e7B99bCaE79C39c0BE9e53fd7EDaC9F859882AfdDa116645287C629040BE9e53fd7EDaC9F859882AfdDa116645287C62900602352A9Eb5234466Eac23E59e7B99bCaE79C39c01f2F3e73be57031114dd1f4E75c1DD87658be7F0E000bb800000000000000000000000000000000\",\n        },\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_signTypedData_v4() {\n      // method\n      // eth_signTypedData\n      // address\n      // 0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\n      // valid\n      // true\n      // result\n      // 0xa8bb3c6b33a119d2d567c7632195c21988df778006082742125a591f5c633f716107883a37f7de6531a6312a5f69022135bf46fe5ab77905b62c82b3395f985e1b\n      //\n\n      // var data = {\n      //   \"method\": \"eth_signTypedData_v4\",\n      //   \"params\": {\n      //     \"typedDataJson\":\"{\\\"types\\\":{\\\"EIP712Domain\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"version\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"chainId\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"name\\\":\\\"verifyingContract\\\",\\\"type\\\":\\\"address\\\"}],\\\"Person\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"wallet\\\",\\\"type\\\":\\\"address\\\"}],\\\"Mail\\\":[{\\\"name\\\":\\\"from\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"to\\\",\\\"type\\\":\\\"Person\\\"},{\\\"name\\\":\\\"contents\\\",\\\"type\\\":\\\"string\\\"}]},\\\"primaryType\\\":\\\"Mail\\\",\\\"domain\\\":{\\\"name\\\":\\\"Ether Mail\\\",\\\"version\\\":\\\"1\\\",\\\"chainId\\\":1,\\\"verifyingContract\\\":\\\"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\\\"},\\\"message\\\":{\\\"from\\\":{\\\"name\\\":\\\"Cow\\\",\\\"wallet\\\":\\\"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\\\"},\\\"to\\\":{\\\"name\\\":\\\"Bob\\\",\\\"wallet\\\":\\\"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\\\"},\\\"contents\\\":\\\"Hello, Bob!\\\"}}\"\n      // }}\n\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n        this.selectedChain\n      );\n      var address = accounts[0];\n      console.log(\"签名地址>>>\", address, JSON.stringify(accounts));\n\n      var data = {\n        method: \"eth_signTypedData_v4\",\n        params: [\n          address,\n          {\n            types: {\n              EIP712Domain: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"version\",\n                  type: \"string\",\n                },\n                {\n                  name: \"chainId\",\n                  type: \"uint256\",\n                },\n                {\n                  name: \"verifyingContract\",\n                  type: \"address\",\n                },\n              ],\n              Person: [\n                {\n                  name: \"name\",\n                  type: \"string\",\n                },\n                {\n                  name: \"wallet\",\n                  type: \"address\",\n                },\n              ],\n              Mail: [\n                {\n                  name: \"from\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"to\",\n                  type: \"Person\",\n                },\n                {\n                  name: \"contents\",\n                  type: \"string\",\n                },\n              ],\n            },\n            primaryType: \"Mail\",\n            domain: {\n              name: \"Ether Mail\",\n              version: \"1\",\n              chainId: 1,\n              verifyingContract: \"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\",\n            },\n            message: {\n              from: {\n                name: \"Cow\",\n                wallet: \"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\",\n              },\n              to: {\n                name: \"Bob\",\n                wallet: \"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\",\n              },\n              contents: \"Hello, Bob!\",\n            },\n          },\n        ],\n      };\n\n      this.testTransaction = JSON.stringify(data);\n    },\n    async eth_sendTransaction_transfer() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            chainId: \"0x1\",\n            to: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n            value: \"0x5af3107a4000\",\n            maxPriorityFeePerGas: \"0x3b9aca00\",\n            gas: \"0x5e56\",\n            maxFeePerGas: \"0x2643b9db8\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gasPrice: \"0x17003f6530\",\n            nonce: \"0x0d30\",\n            data: \"0x\",\n            value: \"0x00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasLimit: \"0x5208\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x5e56\",\n            value: \"0x5af3107a4000\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            gasPrice: \"0x3b9aca00\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            chainId: \"0x38\",\n          },\n        };\n      }else if(this.selectedChain === \"eip155:122\"){\n         data =   {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            to: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n            value: \"0x0\",\n            chainId: \"0x7a\",\n          }\n        }\n      }\n\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n        this.selectedChain\n      );\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"to\"] = address;\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_approve() {\n      var data = {};\n\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000000000000022d473030f116ddee9f6b43ac78ba3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x582d872a1b094fc48f5de31d3b73f2d9be47def1\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0xf2F3e73be57031114dd1f4E75c1DD87658be7F0E\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000f6f8096ac575b0\",\n            to: \"0x0b3F868E0BE5597D5DB7fEB59E1CADBb0fdDa50a\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            value: \"0x0\",\n            gas: \"0xe117\",\n            gasPrice: \"0xb2d05e00\",\n            data: \"0x095ea7b300000000000000000000000031c2f6fcff4f8759b3bd5bf0e1084a055615c768ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n            to: \"0x5CA42204cDaa70d5c773946e69dE942b85CA6706\",\n          },\n        };\n      }else if (this.selectedChain === 'eip155:122'){\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            from: \"0x0cecb15396825A895FF8DA8fC2D2C77A234dcCee\",\n            data: \"0x095ea7b3000000000000000000000000f2614a233c7c3e7f08b1f887ba133a13f1eb2c5500000000000000000000000000000000000000000000000000000000000013b3\",\n            to: \"0x620fd5fa44BE6af63715Ef4E65DDFA0387aD13F5\",\n          },\n        };\n      }\n\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n        this.selectedChain\n      );\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async eth_sendTransaction_mint() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x4cacb\",\n            data: \"0xa64dfa75000000000000000000000000ed688002f3797599db8b4feacfe8b1dda0df1c8d000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cecb15396825a895ff8da8fc2d2c77a234dccee00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f6261667962656968643737366b6177706e71336f6f6a6635693274787a76617737737164656b34616a776472637472703261366f626b70723773792f7b69647dan            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0x0cecb15396825a895ff8da8fc2d2c77a234dccee\",\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"eth_sendTransaction\",\n          params: {\n            gas: \"0x30795\",\n            data: \"0xa64dfa75000000000000000000000000341b3687f0309778f08f29336b2c4b9c38b9f110000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000032000000000000000000000000000000000000000000000000000000000000003a000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003ea000000000000000000000000000000000000000000000000000000000000005c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f2f3e73be57031114dd1f4e75c1dd87658be7f0e00000000000000000000000000000000000000000000000000000000000005e0000000000000000000000000000000000000000000000000000000000000062000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000047697066733a2f2f62616679626569686a6279676b68747a71376b68377434336266686e676e793236337668766f6578716a6d6e377161716166366e717a64743777712f7b69647dan            to: \"0x864baa13e01d8f9e26549dc91b458cd15e34eb7c\",\n            value: \"0x0\",\n            from: \"0xf2f3e73be57031114dd1f4e75c1dd87658be7f0e\",\n          },\n        };\n      }\n\n      let str = JSON.stringify(data);\n      console.log(\"-----长度--->\", str.length);\n      var accounts = await window.provider.request(\n        { method: \"eth_requestAccounts\" },\n          this.selectedChain\n      );\n      var address = accounts[0];\n      console.log(\"当前钱包地址------\", address);\n      data.params[\"from\"] = address;\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async wallet_testRpc() {\n      let provider = window.provider;\n      provider.setDefaultChain(\n        `eip155:56`,\n        `https://eth-mainnet.g.alchemy.com/v2/NxUfYJUr-TQtEpLmSXhhD5pXn70GwsyV`\n      );\n      var data = {\n        method: \"eth_getBalance\",\n        params: [\"0x8D97689C9818892B700e27F316cc3E41e17fBeb9\", \"latest\"],\n      };\n      this.testTransaction = JSON.stringify(data);\n    },\n    async wallet_watchAsset() {\n      var data = {};\n      if (this.selectedChain === \"eip155:1\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xe0f63a424a4439cbe457d80e4f4b51ad25b2c56c\",\n              symbol: \"SPX6900\",\n              image:\n                \"https://assets.coingecko.com/coins/images/31401/standard/sticker_%281%29.jpg?1702371083\",\n              decimals: 8,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:137\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0xeB51D9A39AD5EEF215dC0Bf39a8821ff804A0F01\",\n              symbol: \"LGNS\",\n              image: \"https://polygonscan.com/token/images/originlgns_32.png\",\n              decimals: 9,\n            },\n          },\n        };\n      } else if (this.selectedChain === \"eip155:56\") {\n        data = {\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\",\n            options: {\n              address: \"0x031b41e504677879370e9dbcf937283a8691fa7f\",\n              symbol: \"FET\",\n              image: \"https://bscscan.com/token/images/fetch_32.png\",\n              decimals: 18,\n            },\n          },\n        };\n      }\n\n      this.testTransaction = JSON.stringify(data);\n    },\n\n    async ton_sendTransaction() {\n      var data  = {\n        \"messages\":[{\"address\":\"EQARULUYsmJq1RiZ-YiH-IJLcAZUVkVff-KBPwEmmaQGH6aC\",\"amount\":\"205000000\",\"payload\":\"te6cckEBAgEAhwABbQ+KfqUAAADNgG7tIEATEtAIAO87mQKicbKgHIk4pSPP4k5xhHqutqYgAB7USnesDnCcECwbgQMBAJUlk4VhgBD3JEg1TUr75iTijBghOKm/sxNDXUBl7CD6WMut0Q85x4RafwA/Es89DBXoTxuqxVFxyBbzt9Rav2HBUKl7hmkvLuKHLBCW57aK\"}],\n        \"validUntil\":1792481054,\n        \"network\":'-239'}\n      this.testTransaction = JSON.stringify(data)\n    },\n    ton_getAccount() {\n      this.testTransaction = \"这里是同步获取 不再需要点击 <<发送交易>>\"\n      let result =   window.tonProvider.account()\n      if (result) {\n        this.testboc = JSON.stringify(result);\n      } else {\n        this.testboc = 'null'\n      }\n    },\n\n    async tonUniversalLog() {\n      console.log(\"ton 信息: tonProvider  connected:\",window.tonProvider.connected())\n      console.log(\"ton 信息: tonProvider  account:\",JSON.stringify(window.tonProvider.account()))\n      console.log(\"ton 信息: tonProvider  wallet:\",JSON.stringify(window.tonProvider.wallet()))\n    },\n\n    async sendTransactionAlert() {\n      //\n      const response = await fetch(`https://apitest.fireverse.ai/oauth/okx/getNonce?publicAddress=0x0cecb15396825a895ff8da8fc2d2c77a234dccee`);\n      const data = await response.json();\n      console.log(\"请求数据----\",JSON.stringify(data))\n      await this.personal_sign()\n      if (confirm(\"Are you want to sign message?\")) {\n        this.sendTransaction();\n      }\n\n      // window.open(\"https://www.okx.com/download?deeplink=okx%3A%2F%2Fweb3%2Fwallet%2Fconnect\",'_self')\n    },\n\n    async sendTransaction() {\n      if (this.selectedChain.startsWith(\"aptos\")\n          || this.selectedChain.startsWith(\"movement\")\n          || this.selectedChain.startsWith(\"solana\")\n          || this.selectedChain.startsWith(\"sonic\")\n          || this.selectedChain.startsWith(\"cosmos\")) {\n        return\n      }\n      console.log(\"sendTransaction\", window.provider);\n      console.log(\"sendTransaction内容11------\", this.testTransaction);\n      if (!window.provider) {\n        console.error(\"钱包 未初始化完成\");\n      }\n\n      if (this.testTransaction && window.provider) {\n        // eslint-disable-next-line no-undef\n        const sendData = JSON.parse(this.testTransaction);\n        try {\n          console.log(\"sendTransaction-----22method>>\", sendData.method);\n\n          let chainId = \"eip155:1\";\n          if (this.selectedChain) {\n            chainId = this.selectedChain;\n            console.log(\n              \"sendTransaction-----this.selectedChain>>\",\n              this.selectedChain\n            );\n          }\n          console.log(\"windowOpen[click_1]: \", Date.now());\n          if (chainId == \"sui:mainnet\") {\n            const adapter = new SuiAdapter(window.provider);\n            var suiResult = \"invalid result\";\n            if (this.currentSuiMethod == 'sui_getAccount') {\n              let result = adapter.getAccount()\n              if (typeof result == \"string\") {\n                this.testboc = result\n              } else {\n                this.testboc = JSON.stringify(result)\n              }\n            }\n            if (this.currentSuiMethod == \"sui_signTransaction\") {\n              suiResult = await adapter.signTransaction(\n                this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signAndExecuteTransaction\") {\n              suiResult = await adapter.signAndExecuteTransaction(\n                this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n            } else if (this.currentSuiMethod == \"sui_signMessage\") {\n              console.log(\"signMessage----\", this.currentSuiTransaction);\n              suiResult = await adapter.signMessage(this.currentSuiTransaction);\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_signPersonalMessage\") {\n              console.log(\n                \"signPersonalMessage----\",\n                this.currentSuiTransaction\n              );\n              suiResult = await adapter.signPersonalMessage(\n                this.currentSuiTransaction\n              );\n              this.testboc = JSON.stringify(suiResult);\n\n              this.sui_verifySignature(suiResult).then(ret => {\n                this.testboc = `signature verify: ${ret.result}\\n${ret.msg}\\n\\n${this.testboc}`\n              })\n            } else if (this.currentSuiMethod == \"sui_testRpc\") {\n              console.log(\"test rpc----\", this.currentSuiTransaction);\n              console.log(\n                `请求数据发送 rpc ----->> ${JSON.stringify(sendData)}`\n              );\n              const res = await window.provider.request(sendData, chainId);\n              console.log(`请求数据回调 rpc ----->> ${JSON.stringify(result)}`);\n              if (typeof res == \"string\") {\n                this.testboc = res;\n              } else {\n                this.testboc = JSON.stringify(res);\n              }\n            }\n            console.log(\"windowOpen[click_2]: \", Date.now());\n            return;\n          }else if(chainId === \"ton:-239\"){\n            console.log(\n                `请求数据发送 sendTransaction ---ton-->> ${JSON.stringify(sendData)}`\n            );\n            let result =  await window.tonProvider.sendTransaction(sendData)\n            console.log(\n                `请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`\n            );\n            if (typeof result == \"string\") {\n              this.testboc = result;\n            } else {\n              this.testboc = JSON.stringify(result);\n            }\n            return\n          }\n\n          if (chainId == 'btc:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var btcResult = 'invalid result'\n\n            if (this.currentBtcMethod == 'btc_signMessage') {\n              btcResult = await btcAdapter.signMessage(chainId, this.currentBtcTransaction[\"signStr\"])\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_send') {\n              btcResult = await btcAdapter.send(chainId, this.currentBtcTransaction)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signPsbt') {\n              btcResult = await btcAdapter.signPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n\n              this.hexToBase64(btcResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentBtcMethod == 'btc_signPsbts') {\n              btcResult = await btcAdapter.signPsbts(chainId, this.currentBtcTransaction.psbtHexs, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_sendInscription') {\n              btcResult = await btcAdapter.sendInscription(chainId, this.currentBtcTransaction.address, this.currentBtcTransaction.inscriptionId, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            } else if (this.currentBtcMethod == 'btc_signAndPushPsbt') {\n              btcResult = await btcAdapter.signAndPushPsbt(chainId, this.currentBtcTransaction.psbtHex, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            }else if (this.currentBtcMethod == 'btc_sendBitcoin') {\n              btcResult = await btcAdapter.sendBitcoin(chainId, this.currentBtcTransaction.toAddress, this.currentBtcTransaction.satoshis, this.currentBtcTransaction.options)\n              this.testboc = JSON.stringify(btcResult)\n            }else if (this.currentBtcMethod == 'btc_getAccount'){\n              btcResult = btcAdapter.getAccount(chainId)\n              this.testboc = JSON.stringify(btcResult)\n            }\n\n            return\n          }\n\n          if (chainId == 'fractal:mainnet') {\n            const btcAdapter = new OKXBtcProvider(window.provider)\n            var fractalResult = 'invalid result'\n\n            if (this.currentFractalMethod == 'fractal_signMessage') {\n              fractalResult = await btcAdapter.signMessage(chainId, this.currentFractalTransaction['signStr'])\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_send') {\n              fractalResult = await btcAdapter.send(chainId, this.currentFractalTransaction)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signPsbt') {\n              fractalResult = await btcAdapter.signPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.hexToBase64(fractalResult).then(bs64Str => {\n                this.testboc = JSON.stringify(bs64Str)\n              }).catch(error => {\n                this.testboc = error\n              })\n            } else if (this.currentFractalMethod == 'fractal_signPsbts') {\n              fractalResult = await btcAdapter.signPsbts(chainId, this.currentFractalTransaction.psbtHexs, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_sendInscription') {\n              fractalResult = await btcAdapter.sendInscription(chainId, this.currentFractalTransaction.address, this.currentFractalTransaction.inscriptionId, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            } else if (this.currentFractalMethod == 'fractal_signAndPushPsbt') {\n              fractalResult = await btcAdapter.signAndPushPsbt(chainId, this.currentFractalTransaction.psbtHex, this.currentFractalTransaction.options)\n              this.testboc = JSON.stringify(fractalResult)\n            }else if (this.currentFractalMethod == 'fractal_sendBitcoin') {\n              fractalResult = await btcAdapter.sendBitcoin(chainId, this.currentFractalTransaction.toAddress, this.currentFractalTransaction.satoshis, this.currentFractalTransaction.options)\n\n              this.testboc = JSON.stringify(fractalResult)\n            }else if (this.currentFractalMethod == 'fractal_getAccount'){\n              fractalResult = btcAdapter.getAccount(chainId)\n              this.testboc = JSON.stringify(fractalResult)\n            }\n\n            return\n          }\n\n          console.log(`请求数据发送 sendTransaction ----->> ${JSON.stringify(sendData)}`)\n          var result = await window.provider.request(sendData, chainId)\n          console.log(`请求数据回调 sendTransaction ----->> ${JSON.stringify(result)}`)\n\n          console.log(\"windowOpen[click_3]: \", Date.now());\n          if (typeof result == \"string\") {\n            this.testboc = result;\n          } else {\n            this.testboc = JSON.stringify(result);\n          }\n          console.log(\"方法数据回调 --this.testboc--\", this.testboc);\n        } catch (error) {\n          console.error(\"方法数据回调失败 --Error--\", error.message);\n\n          if (error.code === OKX_CONNECT_ERROR_CODES.USER_REJECTS_ERROR) {\n            this.testboc = error.message;\n          } else {\n            this.testboc = \"wrong signature！\" + error.message;\n          }\n        }\n      } else {\n        alert(\"Please input transaction data\");\n      }\n    },\n\n    hexToBase64(hexStr) {\n      var bytes = [];\n      for (var i = 0; i < hexStr.length; i += 2) {\n        bytes.push(parseInt(hexStr.substr(i, 2), 16));\n      }\n      const buffer = new Uint8Array(bytes)\n      const blob = new Blob([buffer]);\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = function (e) {\n          var base64Data = e.target.result.split(\",\")[1]\n          resolve(base64Data);\n        };\n        reader.onerror = function (e) {\n          reject(e);\n        };\n        reader.readAsDataURL(blob);\n      });\n    },\n    testBase64UrlSafe(){\n      let datatest = {\"protocolVer\":1,\"topic\":\"8a7a4c3be73802d0ae2587123ade7bb79f27433b9aa3ca589a2208a2089eecfd\",\"clientId\":\"5f1bbf9eac92160affa7ef04d0a710817ddb6d8c22ebbd6263e86f059930b404\",\"requestId\":\"1731383250054\",\"dAppInfo\":{\"url\":\"connect.oker.vip\",\"origin\":\"https://connect.oker.vip\",\"name\":\"univer test dapp\",\"icon\":\"https://avatars.githubusercontent.com/u/37784886\"},\"requests\":[{\"name\":\"requestAccounts\",\"requiredNamespaces\":[{\"namespace\":\"aptos\",\"chains\":[\"aptos:637\"]}],\"optionalNamespaces\":[],\"connectRequestMethods\":[{\"chainId\":\"aptos:637\",\"method\":\"aptos_signMessage\",\"params\":{\"data\":{\"address\":true,\"application\":true,\"chainId\":true,\"message\":\"123 中文测试!\",\"nonce\":\"1234\"},\"applicationUrl\":\"https://connect.oker.vip\",\"prefix\":\"APTOS\",\"aptosChainId\":\"1\"}}]}],\"redirect\":\"none\"}\n      let json = JSON.stringify(datatest)\n      const utf8Array = new TextEncoder().encode(json);\n      let binary = '';\n      utf8Array.forEach(byte => {\n        binary += String.fromCharCode(byte);\n      });\n\n      let firstStr =  btoa(binary)\n      console.log(\"字符串编码1>>>>\",firstStr)\n      firstStr = firstStr.replace(/\\+/g, '-')  // 替换 '+'\n      console.log(\"字符串编码2>>>>\",firstStr)\n      firstStr = firstStr.replace(/\\//g, '_')  // 替换 '/'\n      console.log(\"字符串编码3>>>>\",firstStr)\n      firstStr = firstStr.replace(/=+$/, '');  // 移除 '=';\n      console.log(\"字符串编码4>>>>\",firstStr)\n\n      let showUrl =  getUniversalLink(getAppWalletDeepLink(firstStr))\n      console.log(\"字符串编码5>>>>\",showUrl)\n      this.qrValue = showUrl;\n      this.showModal = true;\n    },\n\n\n    async testTonSdk() {\n      // 1. connect\n      //  create sub providers for each namespace/chain\n      let nameSpacesChains = [];\n      let optSpaceChains = [];\n\n      let solanaChains = [\n        \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n        \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\",\n        \"svm:70000062\",\n      ];\n      let hasEip155, hasSolana, hasSui, hasBtc, hasAptos, hasTon, hasCosmos, hasTron = false\n\n      let suiChains = [\n        \"sui:mainnet\",\n      ];\n\n      let btcChains = [\n        \"btc:mainnet\",\n        \"fractal:mainnet\"\n      ];\n\n      const chains = Object.entries(this.availableChains)\n          .filter((chain) => chain[1].checked)\n          .map((chain) => chain[0]);\n      console.log(`chains  ===> ${chains.values()}`)\n      chains.forEach(function (chainId) {\n        console.log(`chains.forEach chainId  ===> ${chainId}`)\n\n        if (solanaChains.includes(chainId)) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"ton\")) {\n          nameSpacesChains.push(chainId)\n          hasTon = true\n          return\n        }\n        if (typeof chainId == 'string' && (chainId.startsWith(\"aptos\") || chainId.startsWith(\"movement\"))) {\n          nameSpacesChains.push(chainId)\n          hasAptos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId)\n          hasSolana = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"cosmos\")) {\n          nameSpacesChains.push(chainId)\n          hasCosmos = true\n          return\n        }\n        if (typeof chainId == 'string' && chainId.startsWith(\"tron\")) {\n          nameSpacesChains.push(chainId)\n          hasTron = true\n          return\n        }\n\n        if (suiChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`);\n          nameSpacesChains.push(chainId);\n          hasSui = true;\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          console.log(`nameSpacesChains.push  ===> ${chainId}`)\n          nameSpacesChains.push(chainId)\n          hasBtc = true\n          return\n        }\n\n        hasEip155 = true\n        nameSpacesChains.push(`eip155:${chainId}`)\n      })\n\n\n      optionChains.forEach(function (chainId) {\n        if (solanaChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n        if (typeof chainId == \"string\" && chainId.startsWith(\"svm\")) {\n          nameSpacesChains.push(chainId);\n          hasSolana = true;\n          return;\n        }\n        if (suiChains.includes(chainId)) {\n          optSpaceChains.push(chainId);\n          return;\n        }\n\n        if (btcChains.includes(chainId)) {\n          optSpaceChains.push(chainId)\n          return\n        }\n\n        optSpaceChains.push(`eip155:${chainId}`)\n      })\n\n      console.log(`namespaceChains  ===> ${JSON.stringify(nameSpacesChains)}`);\n      var connectData = {};\n      if (nameSpacesChains && nameSpacesChains.length > 0) {\n        var requireData = {};\n\n        if (hasEip155) {\n          requireData.eip155 = {\n            chains: nameSpacesChains.filter((item) =>\n              item.startsWith(\"eip155\")\n            ),\n            defaultChain: nameSpacesChains.filter((item) =>\n              item.startsWith(\"eip155\")\n            )[0],\n          };\n        }\n        if (hasSolana) {\n          requireData.solana = {\n            chains: nameSpacesChains.filter(\n              (item) =>\n                item.startsWith(\"solana\") ||\n                item.startsWith(\"sonic\") ||\n                item.startsWith(\"svm\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n              (item) =>\n                item.startsWith(\"solana\") ||\n                item.startsWith(\"sonic\") ||\n                item.startsWith(\"svm\")\n            )[0],\n          };\n        }\n\n        if (hasCosmos) {\n          requireData.cosmos = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"cosmos\")\n            )[0],\n          }\n        }\n        if (hasTron) {\n          requireData.tron = {\n            chains: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            ),\n            defaultChain: nameSpacesChains.filter(\n                (item) =>\n                    item.startsWith(\"tron\")\n            )[0],\n          }\n        }\n        if (hasTon) {\n\n          //\n          let tonParams = {\n            ton_addr:{\n              name: 'ton_addr',\n            }\n          };\n          if (this.tonProofValue){\n            tonParams = {\n              ton_addr:{\n                name: 'ton_addr',\n              },\n              ton_proof:{\n                name: 'ton_proof',\n                payload: this.tonProofValue,\n              }\n            };\n          }\n\n\n          requireData.ton = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"ton\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"ton\"))[0],\n            params:tonParams\n          };\n        }\n\n        if (hasSui) {\n          requireData.sui = {\n            chains: nameSpacesChains.filter((item) => item.startsWith(\"sui\")),\n            defaultChain: nameSpacesChains.filter((item) =>\n              item.startsWith(\"sui\")\n            )[0],\n            rpcMap: {\n              \"sui:mainnet\": \"https://www.okx.com/fullnode/sui/discover/rpc\"\n            }\n          };\n        }\n        if (hasAptos) {\n          requireData.aptos = {\n            chains: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\")),\n            defaultChain: nameSpacesChains.filter(item => item.startsWith(\"aptos\") || item.startsWith(\"movement\"))[0]\n          }\n        }\n\n        if (hasBtc) {\n          let btcChains = nameSpacesChains.filter(item => item.startsWith(\"btc\") || item.startsWith(\"fractal\"))\n          requireData.btc = {\n            chains: btcChains,\n            defaultChain: btcChains[0]\n          }\n        }\n        console.log(`requireData  ===> ${JSON.stringify(requireData)}`)\n        connectData['namespaces'] = requireData;\n        console.log(JSON.stringify(connectData))\n      }\n\n      if (optSpaceChains && optSpaceChains.length > 0) {\n        const optData = {};\n\n        const eip155Chains = optSpaceChains.filter((item) => item.startsWith(\"eip155\"));\n        if (eip155Chains.length > 0) {\n          optData[\"eip155\"] = {\n            chains: eip155Chains,\n            defaultChain: eip155Chains[0],\n          };\n        }\n\n        const solanaChains = optSpaceChains.filter((item) => item.startsWith(\"solana\"));\n        if (solanaChains.length > 0) {\n          optData[\"solana\"] = {\n            chains: solanaChains,\n            defaultChain: solanaChains[0],\n          };\n        }\n\n        connectData[\"optionalNamespaces\"] = optData;\n      }\n\n      if (nameSpacesChains.length === 0 && optSpaceChains.length === 0) {\n        //未选择链\n        alert(\"Please select a chain from above to continue\");\n        return;\n      }\n      console.log(\"=====>connectData \");\n      console.log(connectData);\n\n      var connectMethod;\n      let signMethods = this.getCurrentSelectedMethodData();\n      if (window.provider instanceof OKXUniversalConnectUI) {\n        if (signMethods && signMethods.length>0){\n          connectMethod = window.provider.openModalAndSign(connectData,JSON.parse(JSON.stringify(signMethods)));\n        }else {\n          connectMethod = window.provider.openModal(connectData);\n        }\n      } else {\n        if (this.universalToTG){\n          connectData.sessionConfig = {\n            useMini:true,\n            openUniversalUrl:true,\n            tmaReturnUrl:'back'\n          }\n        }else{\n          connectData.sessionConfig = {\n            redirect: selectedReturnStrategy\n          }\n        }\n        if (signMethods && signMethods.length>0){\n          connectMethod = window.provider.connectAndSign(connectData,JSON.parse(JSON.stringify(signMethods)));\n        }else {\n          connectMethod = window.provider.connect(connectData);\n        }\n      }\n\n      await connectMethod\n        .then((result) => {\n          // 2. set defaul chain\n          this.walletAddress = \"connected\";\n          if (this.isPC()) {\n            this.showModal = false;\n          }\n          if (result){\n            this.testboc = JSON.stringify(result)\n          }\n\n          if (window.provider.session && window.provider.session.namespaces){\n            let ton = window.provider.session.namespaces[\"ton\"];\n          console.log(\"是否包含ton\",ton)\n            if (ton){\n              this.tonUniversalLog()\n            }\n          }\n\n\n\n        })\n        .catch((error) => {\n          if (error.message){\n            alert(error.message)\n          }\n\n          console.error(\"发生了错误：\", error);\n        });\n    },\n\n    getCurrentSelectedMethodData(){// 连接签名\n      var methodList = [];\n      this.selectedMethod.forEach(method =>{\n        switch (method) {\n          case \"wallet_addEthereumChain(ETH)\":\n            methodList.push({\n              method: \"wallet_addEthereumChain\",\n              chainId:\"eip155:1\",\n              params: {\n                blockExplorerUrls: [\"https://explorer.fuse.io\"],\n                chainId: \"0x7a\",\n                chainName: \"Fuse\",\n                nativeCurrency: { name: \"Fuse\", symbol: \"FUSE\", decimals: 18 },\n                rpcUrls: [\"https://rpc.fuse.io\"],\n              },\n            })\n            break;\n          case \"personal_sign(ETH)\":\n            methodList.push(\n              {\n                method: \"personal_sign\",\n                chainId: \"eip155:1\",\n                params: [\n                  \"0x4d7920656d61696c206973206a6f686e40646f652e636f6d202d2031373237353937343537313336\",\n                ],\n              });\n            break;\n          case \"solana_signMessage(Sol mainnet)\":\n            methodList.push(\n              {\n                \"chainId\": \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\",\n                \"method\": \"solana_signMessage\",\n                \"params\": {\n                  \"message\": \"Hello Solana\",\n                }\n              }\n            );\n            break;\n          case \"sui_signMessage(Sui mainnet)\":\n          case \"sui_signPersonalMessage(Sui mainnet)\": {\n            let suiData = [\n              76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n              109, 111, 118, 101,\n            ];\n            let uint8Array = new Uint8Array(suiData);\n            let currentMethod = \"sui_signMessage\";\n            this.currentSuiTransaction = {\n              message:uint8Array\n            }\n\n            if(method.startsWith(\"sui_signPersonalMessage\")){\n              currentMethod = \"sui_signPersonalMessage\";\n            }\n            methodList.push(\n                {\n                  method: currentMethod,\n                  chainId: \"sui:mainnet\",\n                  params: {\n                    message: uint8Array,\n                  }\n                }\n            );\n            break;\n          }\n          case \"btc_signMessage(BTC)\":\n            methodList.push(\n              {\n                method: \"btc_signMessage\",\n                chainId: \"btc:mainnet\",\n                params: {\n                  message: \"Welcome to BTC\"\n                }\n              }\n            )\n            break;\n          case \"aptos_signMessage(aptos mainnet)\":\n            methodList.push(\n              {\n                \"chainId\": \"aptos:mainnet\",\n                \"method\": \"aptos_signMessage\",\n                \"params\": {\n                  address: true,\n                  application: true,\n                  chainId: true,\n                  message: \"Hello Aptos\",\n                  nonce: \"1234\"\n                }\n              }\n            )\n            break;\n          case \"cosmos_signArbitrary(cosmoshub)\":\n            methodList.push(\n                {\n                  \"chainId\": \"cosmos:cosmoshub-4\",\n                  \"method\": \"cosmos_signArbitrary\",\n                  \"params\": {\n                    message: \"test cosmos\"\n                  }\n                }\n            )\n\n            break;\n          case \"test_noSupport_eth(ETH)\":\n            methodList.push(\n                {\n                  chainId: \"eip155:1\",\n                  method: \"test_noSupport_eth\",\n                  params: {\n                    message: \"test hello\",\n                  }\n                }\n            )\n            break;\n          case \"sync_all_addresses\":\n            methodList.push(\n                {\n                  method: \"sync_all_addresses\",\n                });\n            break;\n          case \"tron_signMessage\":\n            methodList.push(\n                {\n                  chainId:\"tron:mainnet\",\n                  method: \"tron_signMessage\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n          case \"tron_signMessageV2\":\n            methodList.push(\n                {\n                  chainId:\"tron:mainnet\",\n                  method: \"tron_signMessageV2\",\n                  params: {\n                    message: \"Hello Tron\",\n                  }\n                }\n            )\n            break\n            //\n          default:\n\n            break;\n        }\n      })\n      this.selectedMethodData = methodList\n      return methodList\n\n    },\n\n\n    closeModal() {\n      this.showModal = false;\n    },\n\n    isPC() {\n      const userAgentInfo = navigator.userAgent;\n      console.log(\"current device ua is ===>\", userAgentInfo);\n\n      const Agents = [\n        \"Android\",\n        \"iPhone\",\n        \"SymbianOS\",\n        \"Windows Phone\",\n        \"iPad\",\n        \"iPod\",\n      ];\n      let flag = true;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = false;\n          break;\n        }\n      }\n      return flag;\n    },\n    isSafariOrChrome() {\n      const userAgentInfo = navigator.userAgent;\n      const Agents = [\"Safari\", \"Chrome\"];\n      let flag = false;\n      for (let v = 0; v < Agents.length; v++) {\n        if (userAgentInfo.indexOf(Agents[v]) > 0) {\n          flag = true;\n          break;\n        }\n      }\n      return flag;\n    },\n\n    /// solana\n    async sol_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      let data = {\n        method: \"solana_signMessage\",\n        params: {\n          message: \"Hello Solana\",\n          pubkey: \"\",\n        },\n      };\n      this.testTransaction = JSON.stringify(data);\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let message = await provider.signMessage(\n          \"Hello Solana\",\n          this.selectedChain\n      );\n      console.log(\"solana_signMessage Result:\",JSON.stringify(message))\n      const result1 = nacl.sign.detached.verify(\n          new TextEncoder().encode(\"Hello Solana\"),\n          message.signature,\n          new PublicKey(message.publicKey).toBytes()\n      );\n      console.log(result1)\n\n      if (typeof message == \"string\") {\n        this.testboc = result1;\n      } else {\n        this.testboc = result1;\n      }\n    },\n\n    async aptos_signMessage() {\n      //  if (this.selectedChain === \"eip155:56\") {\n      let data = {\n        address: true,\n        application: true,\n        chainId: true,\n        message: \"Hello Aptos\",\n        nonce: \"1234\"\n      }\n\n      let provider = new OKXAptosProvider(window.provider)\n      let message = await provider.signMessage(data, this.selectedChain)\n      this.testTransaction = JSON.stringify(data)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n          functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async move_signTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async move_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      // const transaction = await aptos.transferCoinTransaction({\n      //   sender: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\"\n      //   recipient: provider.getAccount(this.selectedChain).address, //\"0x07897a0496703c27954fa3cc8310f134dd1f7621edf5e88b5bf436e4af70cfc6\",\n      //   amount: 100,\n      // });\n      // this.testTransaction = safeJsonStringify(transaction)\n\n      // let data = {\n      //   \"arguments\": [\"100000\", [\"10164\"],\n      //     [\"0\"],\n      //     [\"false\"]\n      //   ],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\", \"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\", \"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n\n\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::scripts::swap\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x275f508689de8756169d1ee02d889c777de1cebda3a7bbcce63ba8a27c563c6f::tokens::WBTC\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\"],\n          functionArguments: [\"10000\", \"12\"],\n        },\n      });\n\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async aptos_signAndSubmitTransaction() {\n      let provider = new OKXAptosProvider(window.provider)\n      const config = new AptosConfig({ network: Network.MAINNET });\n      const aptos = new Aptos(config);\n      const transaction = await aptos.transaction.build.simple({\n        sender: provider.getAccount(this.selectedChain).address,\n        data: {\n          // The Move entry-function\n          function: \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x1\",\n          // typeArguments: [parseTypeTag(\"0x1::aptos_coin::AptosCoin\")],\n          typeArguments: [\"0x1::aptos_coin::AptosCoin\", \"0x111ae3e5bc816a5e63c2da97d0aa3886519e0cd5e4b046659fa35796bd11542a::stapt_token::StakedApt\", \"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\", \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"],\n          functionArguments: [\"10000\", [\"9104\"], [\"5\"], [\"true\"]],\n        },\n      });\n\n      // let data = {\n      //   \"arguments\": [\"100000\",[\"0\",\"0\",\"10533\"],[\"10\",\"5\",\"5\"],[\"false\",\"false\",\"true\"]],\n      //   \"function\": \"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::swap_exact_coin_for_coin_x3\",\n      //   \"type\": \"entry_function_payload\",\n      //   \"type_arguments\": [\"0x1::aptos_coin::AptosCoin\",\"0x73eb84966be67e4697fc5ae75173ca6c35089e802650f75422ab49a8729704ec::coin::DooDoo\",\"0x53a30a6e5936c0a4c5140daed34de39d17ca7fcae08f947c02e979cef98a3719::coin::LSD\",\"0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::CurveV1\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x0163df34fccbf003ce219d3f1d9e70d140b60622cb9dd47599c25fb2f797ba6e::curves::Uncorrelated\",\"0x54cb0bb2c18564b86e34539b9f89cfe1186e39d89fce54e1cd007b8e61673a85::bin_steps::X80\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\",\"0x80273859084bc47f92a6c2d3e9257ebb2349668a1b0fb3db1d759a04c7628855::router::BinStepV0V05\"]\n      // }\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let message = await provider.signAndSubmitTransaction(transaction, this.selectedChain)\n      if (typeof message == \"string\") {\n        this.testboc = message\n      } else {\n        this.testboc = JSON.stringify(message)\n      }\n    },\n\n    async sol_signVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(\n        provider.getAccount(\"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\").address\n      );\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n         recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signTransaction(\n        transaction,\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAndSendVersionedTransaction() {\n      let provider = new OKXSolanaProvider(window.provider);\n\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n        transaction,\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllVersionedTransactions() {\n      let provider = new OKXSolanaProvider(window.provider);\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      let pubkey = new PublicKey(provider.getAccount().address);\n      const versionedTransactionMessage = new TransactionMessage({\n        payerKey: pubkey,\n        recentBlockhash: blockhash,\n        instructions: [\n          SystemProgram.transfer({\n            fromPubkey: new PublicKey(provider.getAccount().address),\n            toPubkey: new PublicKey(provider.getAccount().address),\n            lamports: \"100\",\n          }),\n        ],\n      }).compileToV0Message();\n\n      let transaction = new VersionedTransaction(versionedTransactionMessage);\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n        [transaction],\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signTransaction() {\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n         recentBlockhash: blockhash,\n      }).add(\n        SystemProgram.transfer({\n          fromPubkey: new PublicKey(provider.getAccount().address),\n          toPubkey: new PublicKey(provider.getAccount().address),\n          lamports: 1000,\n        })\n      );\n\n      this.testTransaction = safeJsonStringify(transaction)\n      let result = await provider.signTransaction(\n        transaction,\n        this.selectedChain\n      );\n      console.log(\"sol_signTransaction result\", JSON.stringify(result));\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async sol_signAllTransactions() {\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n        SystemProgram.transfer({\n          fromPubkey: new PublicKey(provider.getAccount().address),\n          toPubkey: new PublicKey(provider.getAccount().address),\n          lamports: \"100\",\n        })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAllTransactions(\n        [transaction],\n        this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    getSolConnect() {\n      let rpc = \"https://www.okx.com/fullnode/sol/discover/rpc\"\n      if (this.selectedChain === \"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp\") {\n        rpc = \"https://www.okx.com//fullnode/sol/discover/rpc\"\n      } else if (this.selectedChain === \"solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z\"){\n        rpc = \"https://www.okx.com/fullnode/soltestnet/discover/rpc\"\n      } else if (this.selectedChain === \"svm:70000062\") {\n        rpc = \"https://www.okx.com/fullnode/sonic/testnet/discover/rpc\"\n      }\n      return rpc\n    },\n\n    async sol_signAndSendTransaction() {\n\n      const connection = new Connection(this.getSolConnect())\n      const { blockhash } = await connection.getLatestBlockhash();\n\n      let provider = new OKXSolanaProvider(window.provider);\n      const transaction = new Transaction({\n        feePayer: new PublicKey(provider.getAccount().address),\n        recentBlockhash: blockhash,\n      }).add(\n        SystemProgram.transfer({\n          fromPubkey: new PublicKey(provider.getAccount().address),\n          toPubkey: new PublicKey(provider.getAccount().address),\n          lamports: \"100\",\n        })\n      );\n      this.testTransaction = safeJsonStringify(transaction)\n\n      let result = await provider.signAndSendTransaction(\n        transaction,\n        this.selectedChain\n      );\n      if (typeof result == \"string\") {\n        this.testboc = result;\n      } else {\n        this.testboc = JSON.stringify(result);\n      }\n    },\n\n    async cosmos_signArbitrary() {\n      let provider = new OKXCosmosProvider(window.provider)\n      let message = await provider.signArbitrary(this.selectedChain, provider.getAccount(this.selectedChain).address, \"test cosmos\")\n      if (typeof message == \"string\") {\n        this.testboc = message;\n      } else {\n        let isValid =  await this.cosmos_verifySignArbitrary(provider.getAccount(this.selectedChain).address,\"test cosmos\",message.signature, message.pub_key.value)\n        console.log(\"verify\",isValid)\n        this.testboc = \"verify:\" + isValid + JSON.stringify(message);\n      }\n    },\n\n    async cosmos_verifySignArbitrary(signer, data, signature, pubkey) {\n      try {\n        console.log(\"cosmos_verifySignArbitrary signer:\",signer)\n        console.log(\"cosmos_verifySignArbitrary data:\",JSON.stringify(data))\n        console.log(\"cosmos_verifySignArbitrary signature:\",signature)\n        console.log(\"cosmos_verifySignArbitrary pubkey:\",pubkey)\n\n        // 将bech32地址转换为公钥\n        const {prefix: prefixStr} = fromBech32(signer)\n\n        const signatureBuffer = Buffer.from(signature, 'base64');\n\n        const uint8Signature = new Uint8Array(signatureBuffer); // Convert the buffer to an Uint8Array\n\n        const pubKeyValueBuffer = Buffer.from(pubkey, 'base64'); // Decode the base64 encoded value\n\n        const pubKeyUint8Array = new Uint8Array(pubKeyValueBuffer); // Convert the buffer to an Uint8Array\n\n        // 验证签名\n        return await verifyADR36Amino(\n            prefixStr,\n            signer,\n            data,\n            pubKeyUint8Array,\n            uint8Signature\n        )\n      } catch (err) {\n        console.error('Verification failed:', err)\n        return false\n      }\n    },\n\n    async cosmos_signAmino(){\n      let provider = new OKXCosmosProvider(window.provider)\n      // const rpcUrl = 'https://osmosis-rpc.publicnode.com:443';\n      // const client = await StargateClient.connect(rpcUrl);\n      // const height = await client.getHeight();\n      // let address = provider.getAccount(this.selectedChain).address\n      // const sequence = await client.getSequence(address)\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      // let signDoc = makeSignDoc(\n      //     transaction.msgs,\n      //     transaction.fee,\n      //     this.selectedChain.split(\":\")[1],\n      //     transaction.memo,\n      //     transaction.accountNumber,\n      //     transaction.sequence,\n      // )\n      let signDoc = {\n        \"chain_id\": \"osmosis-1\",\n        \"account_number\": \"630104\",\n        \"sequence\": \"480\",\n        \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]},\n        \"msgs\": [{\n          \"type\": \"osmosis/poolmanager/swap-exact-amount-in\",\n          \"value\": {\n            \"sender\": \"osmo1u6lts9ng4etxj0zdaxsada6zgl8dudpgelmuyu\",\n            \"routes\": [{\n              \"pool_id\": \"1096\",\n              \"token_out_denom\": \"ibc/987C17B11ABC2B20019178ACE62929FE9840202CE79498E29FE8E5CB02B7C0A4\"\n            }, {\n              \"pool_id\": \"611\",\n              \"token_out_denom\": \"ibc/27394FB092D2ECCD56123C74F36E4C1F926001CEADA9CA97EA622B25F41E5EB2\"\n            }],\n            \"token_in\": {\"denom\": \"uosmo\", \"amount\": \"100\"},\n            \"token_out_min_amount\": \"8\"\n          }\n        }],\n        \"memo\": \"FE\",\n        \"timeout_height\": \"23603788\",\n        \"signOptions\": {\n          \"useOneClickTrading\": false,\n          \"preferNoSetFee\": true,\n          \"fee\": {\"gas\": \"683300\", \"amount\": [{\"denom\": \"uosmo\", \"amount\": \"2818\"}]}\n        }\n      }\n\n\n\n\n\n\n\n      // let signOption = {\n      //   memo: true, // optional\n      //   fee: true, // optional\n      //   gasRate: {\n      //     // optional\n      //     average: \"0.2\",\n      //     low: \"0.02\",\n      //     tiny: \"0.002\",\n      //   },\n      // }\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signAmino(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, signDoc)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    messageToBuffer(message) {\n      var buffer = Buffer.from([]);\n      try {\n        if (typeof message === \"string\") {\n          buffer = Buffer.from(message.replace(\"0x\", \"\"), \"hex\");\n        } else {\n          buffer = Buffer.from(message);\n        }\n      } catch (err) {\n        console.log(`messageToBuffer error: ${err}`);\n      }\n      return buffer;\n    },\n\n\n\n    async cosmos_signDirect() {\n      let provider = new OKXCosmosProvider(window.provider)\n\n      let signDoc = {\n        \"bodyBytes\": this.messageToBuffer(\"0x0ac1010a292f6962632e6170706c69636174696f6e732e7472616e736665722e76312e4d73675472616e736665721293010a087472616e7366657212096368616e6e656c2d301a0d0a05756f736d6f120431303030222b6f736d6f3175366c7473396e67346574786a307a64617873616461367a676c386475647067656c6d7579752a2d636f736d6f733175366c7473396e67346574786a307a64617873616461367a676c386475647067337967766a773207080410ebe3f90a3880b0bcafd18cec8218\"),\n        \"authInfoBytes\": this.messageToBuffer(\"0x0a510a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a2102446e19e94ac0e83ea896d2712507577eb39fbdd2d6ae9f0fc0b9759f1fbaba9012040a02080118e00312140a0e0a05756f736d6f1205323530303010859a11\"),\n        \"chainId\": \"osmosis-1\",\n        \"accountNumber\": \"630104\",\n      }\n\n      // let transaction = await CosmosUtils.getTransaction(provider.getAccount(this.selectedChain).address, this.selectedChain.split(\":\")[1])\n      this.testTransaction = safeJsonStringify(signDoc)\n      let res = await provider.signDirect(this.selectedChain, provider.getAccount(this.selectedChain).address, signDoc)\n      if (typeof res == \"string\") {\n        this.testboc = res;\n      } else {\n        // let tx = await CosmosUtils.getCosmosSignedTx(res.signature.signature, provider.getAccount(this.selectedChain).address, provider.getAccount(this.selectedChain).pubKey, transaction)\n        // await CosmosUtils.sendCosmosTransaction(tx)\n        this.testboc = JSON.stringify(res);\n      }\n    },\n\n    sui_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentSuiTransaction = params\n      this.currentSuiMethod = flag\n    },\n\n    btc_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentBtcTransaction = params\n      this.currentBtcMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n\n    fractal_generateTransactionParams(params, flag) {\n      this.testTransaction = JSON.stringify(params)\n      this.currentFractalTransaction = params\n      this.currentFractalMethod = flag\n      console.log(\"参数是: \", params)\n      console.log(\"flag: \", flag)\n    },\n    tron_getTransactionResult(result) {\n      if (typeof result == \"string\") {\n        this.testboc = result\n      } else {\n        this.testboc = JSON.stringify(result)\n      }\n    },\n    tron_generateTransactionParams(params){\n      if (typeof params == \"string\") {\n        this.testTransaction = params\n      } else {\n        this.testTransaction = JSON.stringify(params)\n      }\n    },\n    handleModalsSelect(modals) {\n      selectedModals = modals;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: modals.length === 3 ? \"all\" : modals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n\n    handleReturnStrategySelect(returnStrategy) {\n      selectedReturnStrategy = returnStrategy === \"deeplink\" ? this.deeplink : returnStrategy;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      } else {\n        if (window.provider.sessionConfig) {\n          window.provider.sessionConfig.redirect = selectedReturnStrategy;\n        } else {\n          window.provider.sessionConfig = {\n            redirect: selectedReturnStrategy\n          };\n        }\n      }\n    },\n\n    handleReturnStrategyDeeplink(deeplink) {\n      console.log('handleReturnStrategyDeeplink', deeplink)\n      selectedReturnStrategy = deeplink;\n\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: deeplink,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      } else {\n        if (window.provider.sessionConfig) {\n          window.provider.sessionConfig.redirect = deeplink;\n        } else {\n          window.provider.sessionConfig = {\n            redirect: deeplink\n          };\n        }\n      }\n    },\n\n    handleLanguageSelect(language) {\n      selectedLanguage = language;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: language,\n          uiPreferences: {\n            theme: selectedTheme,\n          },\n        };\n      }\n    },\n    handleConnectMethodsSelect() {\n      console.log(\"当前的方法 this.selectedMethod>>>>\",this.selectedMethod);\n    },\n\n    eth_verifyMessage(message, signature,ethAddress) {\n      console.log(\"eth_verifyMessage   message>>>\",message)\n      console.log(\"eth_verifyMessage   signature>>>\",signature)\n      console.log(\"eth_verifyMessage   ethAddress>>>\",ethAddress)\n      if (!message || !signature){\n        return \"\"\n      }\n      let originalMessage = message\n      if (message.startsWith(\"0x\")){\n        originalMessage = originalMessage.replace(/^0x/, '');\n        let str = '';\n        for (let i = 0; i < originalMessage.length; i += 2) {\n          const byte = originalMessage.slice(i, i + 2);\n          str += String.fromCharCode(parseInt(byte, 16));\n        }\n        originalMessage = str\n      }\n      console.log(\"eth_verifyMessage   originalMessage>>>\",originalMessage)\n\n      // const messageHash = ethers.utils.hashMessage(originalMessage);\n      const recoveredAddress = ethers.utils.verifyMessage(originalMessage, signature);\n      console.log(\"eth_verifyMessage recoveredAddress:\", recoveredAddress);\n      return recoveredAddress.toLowerCase() === ethAddress.toLowerCase();\n    },\n\n    async verifyMessage(list){ //连接验签\n\n        if (window.provider && window.provider.session && list && list.length>0){\n          let verifyList = {}\n          for (let methodItem of list){\n            if (\"result\" in methodItem && \"method\" in methodItem){\n              let requestItme = this.selectedMethodData.filter(item => item.method === methodItem.method)[0];\n              console.log(\"验证签名 请求>>>:\", JSON.stringify(requestItme));\n              console.log(\"验证签名 结果>>>:\", JSON.stringify(methodItem));\n              if (methodItem.method === \"personal_sign\"){\n                let ethAddress = await window.provider.request({ method: \"eth_requestAccounts\" },methodItem.chainId)\n                ethAddress = ethAddress[0];\n                console.log(\"验证eth 钱包地址>>>:\", ethAddress);\n                let ethMessage = requestItme.params[0]\n                console.log(\"验证eth 签名消息体>>:\", JSON.stringify(ethMessage));\n                verifyList[methodItem.method] = this.eth_verifyMessage(ethMessage,methodItem.result,ethAddress)\n              }else if(methodItem.method === \"solana_signMessage\"){\n                let solanaMessage = methodItem.result\n                if (\"signature\" in solanaMessage && \"publicKey\" in solanaMessage){\n                  const verifySol = nacl.sign.detached.verify(\n                      new TextEncoder().encode(\"Hello Solana\"),\n                      solanaMessage.signature,\n                      new PublicKey(solanaMessage.publicKey).toBytes()\n                  );\n                  verifyList[methodItem.method] = verifySol\n                }else {\n                  verifyList[methodItem.method] = false\n                }\n              }else if(methodItem.method === \"sui_signPersonalMessage\" || methodItem.method === \"sui_signMessage\"){\n                let suiResult =  this.sui_verifySignature(methodItem.result);\n                  verifyList[methodItem.method] = (await suiResult).result\n              }else if(methodItem.method === \"btc_signMessage\"){\n\n                verifyList[methodItem.method] = \"Not verified yet\"\n\n              }else if(methodItem.method === \"aptos_signMessage\"){\n                let aptosMessage = methodItem.result\n                let aptosProvider = new OKXAptosProvider(window.provider)\n                let  aptosPublicKey  = aptosProvider.getAccount(methodItem.chainId)?.publicKey\n\n                let signStr = aptosMessage.signature\n                if (signStr.startsWith(\"0x\")) {\n                  signStr = signStr.slice(2, signStr.length)\n                }\n\n                console.log(\"aptos_signMessage aptosPublicKey And signStr\",aptosPublicKey,signStr)\n                verifyList[methodItem.method] = nacl.sign.detached.verify(\n                    Buffer.from(aptosMessage.fullMessage),\n                    Buffer.from(signStr, 'hex'),\n                    Buffer.from(aptosPublicKey, 'hex'),\n                );\n              }else if(methodItem.method === \"cosmos_signArbitrary\"){\n                let cosmosProvider = new OKXCosmosProvider(window.provider)\n                let cosmosAddress = cosmosProvider.getAccount(methodItem.chainId)?.address\n                let cosmosMessage = methodItem.result\n                let isValid =  await this.cosmos_verifySignArbitrary(cosmosAddress,\"test cosmos\",cosmosMessage.signature, cosmosMessage.pub_key.value)\n                verifyList[methodItem.method] = isValid\n\n              }else if (methodItem.method === \"tron_signMessage\") {\n                let tronMessage = methodItem.result\n                let tronWeb = new TronWeb({\n                  \"fullHost\": 'https://api.trongrid.io',\n                  \"headers\": {},\n                  \"privateKey\": ''\n                })\n                let provider = new OKXTronProvider(window.provider)\n                verifyList[methodItem.method] = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), tronMessage, provider.getAccount(\"tron:mainnet\").address)\n              } else if (methodItem.method === \"tron_signMessageV2\") {\n                let tronMessage = methodItem.result\n                let tronWeb = new TronWeb({\n                  \"fullHost\": 'https://api.trongrid.io',\n                  \"headers\": {},\n                  \"privateKey\": ''\n                })\n                const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", tronMessage);\n                let provider = new OKXTronProvider(window.provider)\n\n                verifyList[methodItem.method] = base58Address === provider.getAccount(\"tron:mainnet\").address\n              }\n              else {\n                verifyList[methodItem.method] = \"Not verified yet\"\n\n              }\n            }else if(\"method\" in methodItem && \"error\" in methodItem) {\n              verifyList[methodItem.method] = methodItem.error\n            }\n\n          }\n\n          console.log(\"验证签名 最后的结果>>>:\", JSON.stringify(verifyList));\n          this.testTransaction = \"签名验证结果如下: \\n\" + JSON.stringify(verifyList)\n        }else {\n          console.log(\"验证签名 window.provider.session.connectMethodsReply 为空:\");\n\n        }\n\n    },\n\n    handleThemeSelect(theme) {\n      selectedTheme = theme;\n      if (this.withUI) {\n        window.provider.uiOptions = {\n          actionsConfiguration: {\n            returnStrategy: selectedReturnStrategy,\n            modals: selectedModals.length === 3 ? \"all\" : selectedModals,\n          },\n          language: selectedLanguage,\n          uiPreferences: {\n            theme: theme,\n          },\n        };\n      }\n    },\n\n    async sui_verifySignature(signatureResult) {\n      let resultObj = signatureResult\n      let result = false\n      let msg = ''\n      try {\n        /// 获取当前account\n        const adapter = new SuiAdapter(window.provider);\n        let account = adapter.getAccount()\n        console.log(`Account中获取的address：${account.address}`)\n\n        /// 验证签名\n        let pubKey = await verifyPersonalMessageSignature(this.currentSuiTransaction.message, resultObj.signature)\n        let address = pubKey.toSuiAddress()\n        console.log(`验签结果计算得到address：${address}`)\n\n        /// 对比pubKey\n        console.log(`account pubkey: ${account.publicKey}`,)\n        console.log(`result pubkey: ${pubKey.toBase64()}`)\n        result = (account.address === address) && (account.publicKey === pubKey.toBase64())\n\n        msg = `address verify: ${account.address === address}\\npublicKey verify: ${account.publicKey === pubKey.toBase64()}`\n        console.log(\"signature verify success: \", pubKey)\n      } catch (e) {\n        console.log(\"signature verify failed: \", e)\n      }\n      return {\n        result,\n        msg\n      }\n    },\n\n\n    handleRedirectSelect(input) {\n      this.redirect = input;\n    },\n\n    handleRedirectDeeplink(input) {\n      this.redirectDeeplink = input;\n    },\n\n    addRedirectParam() {\n      if (this.testTransaction) {\n        const newTransaction = JSON.parse(this.testTransaction);\n        newTransaction.redirect = this.redirect === 'deeplink' ? this.redirectDeeplink : this.redirect;\n        this.testTransaction = JSON.stringify(newTransaction);\n      }\n    },\n\n    canChainAddRedirectParam() {\n      return chainsThatCanAddRedirectParam.some((c) => this.selectedChain.startsWith(c));\n    }\n  },\n  created() {\n    // for (const eventName of Object.values(OKX_TON_CONNECTION_AND_TRANSACTION_EVENT)) {\n    //   console.log(eventName);\n    //   window.addEventListener(eventName, (event) => {\n    //     console.log(eventName,event.detail)\n    //     this.currentStatus = eventName\n    //   });\n    // }\n  },\n\n  mounted() {\n\n    var scriptTag = document.createElement(\"script\");\n    scriptTag.src = \"https://telegram.org/js/telegram-web-app.js\";\n    scriptTag.id = \"tgsdk\";\n    document.getElementsByTagName('head')[0].appendChild(scriptTag);\n\n    this.connectReady = true;\n    document.title = \"OKX Connect\";\n    this.initBtnClicked()\n  },\n};\n</script>\n","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_getAccount()\">getAccount(BTC)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signMessage()\">signMessage(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_send()\">send(BTC)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendBitcoin()\">sendBitcoin(BTC)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_signPsbt_up()\">signPsbt(上架NFT)</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"btc_signAndPushPsbt_up()\">signAndPushPsbt(上架NFT)</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在OKX App选择要上架的Btc NFT，点击【上架】\n        </li>\n        <li>\n          2. 弹出签名面板，点开高级选项，查看\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出上架流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"btc_sendInscription()\">sendInscription(BTC)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Btc NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount\n    }\n  },\n  methods: {\n\n    btc_getAccount() {\n      this.$emit('generateTransactionParams', {}, \"btc_getAccount\")\n    },\n\n    btc_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to BTC\"\n      };\n      this.$emit('generateTransactionParams', params, \"btc_signMessage\")\n    },\n\n    btc_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"btc_send\")\n    },\n\n    btc_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"btc_sendBitcoin\")\n    },\n\n    btc_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"btc_signPsbt\")\n    },\n\n    btc_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"btc_signAndPushPsbt\")\n    },\n\n    btc_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"btc_sendInscription\")\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./BtcTransactionPanel.vue?vue&type=template&id=376d03bc&scoped=true\"\nimport script from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./BtcTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./BtcTransactionPanel.vue?vue&type=style&index=0&id=376d03bc&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-376d03bc\"]])\n\nexport default __exports__","<template>\n  <el-row :gutter=\"12\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_getAccount()\">getAccount(Fractal)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signMessage()\">signMessage(Fractal)</el-button>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <div style=\"font-size: 12px; color: gray;\">(发送到Pattern测试钱包的legacy地址)</div>\n      <el-input class=\"grid-content\" v-model=\"sendAmount\" clearable placeholder=\"请输入要发送的数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_send()\">send(Fractal)</el-button>\n      <br>\n      <el-input class=\"grid-content\" v-model=\"sendSatoshisAmount\" clearable placeholder=\"请输入要发送的satoshi数量\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_sendBitcoin()\">sendBitcoin(Fractal)</el-button>\n\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"psbtHex\" clearable placeholder=\"请输入要签名的Psbt\" />\n      <el-button class=\"grid-content\" type=\"warning\" @click=\"fractal_signPsbt_up()\">signPsbt(上架NFT)</el-button>\n      <br>\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_signAndPushPsbt_up()\">signAndPushPsbt(上架NFT)</el-button>\n      <br>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在OKX App选择要上架的Fractal NFT，点击【上架】\n        </li>\n        <li>\n          2. 弹出签名面板，点开高级选项，查看\n        </li>\n        <li>\n          3. 单击复制，就可以得到psbt。然后退出上架流程。\n        </li>\n        <li>\n          4. 验证 https://chainquery.com/bitcoin-cli/decodepsbt\n        </li>\n      </div>\n    </el-col>\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-input class=\"grid-content\" v-model=\"nftId\" clearable placeholder=\"请输入要转移的NFT ID\" />\n      <el-input class=\"grid-content\" v-model=\"receiver\" clearable placeholder=\"接收者钱包地址\" />\n      <el-button class=\"grid-content\" type=\"warning\"\n        @click=\"fractal_sendInscription()\">sendInscription(Fractal)</el-button>\n      <div style=\"font-size: 12px;margin-top: 12px; margin-left: 4px; color: gray; text-align: left;\">\n        <li>\n          1. 在web端NFT界面，选择要发送的Fractal NFT，打开详情\n        </li>\n        <li>\n          2. 从NFT详情页URL中获取NFT id（url最后一部分）\n        </li>\n        <li>\n          3. 复制到上面输入框中，再点击sendInscription按钮\n        </li>\n      </div>\n    </el-col>\n  </el-row>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  name: 'BtcTransactionPanel',\n  props: {\n    msg: String\n  },\n  setup() {\n    const nftId = ref('')\n    const sendAmount = ref(0.000015)\n    const sendSatoshisAmount = ref(17100)\n    const psbtHex = ref('')\n    const receiver = ref('')\n    return {\n      nftId,\n      receiver,\n      psbtHex,\n      sendAmount,\n      sendSatoshisAmount\n    }\n  },\n  methods: {\n\n    fractal_getAccount() {\n      this.$emit('generateTransactionParams', {}, \"fractal_getAccount\")\n    },\n\n    fractal_signMessage() {\n      let params = {\n        from: \"bc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\",\n        signStr: \"Welcome to UniSat!\\n\\nClick to sign in and accept the UniSat Terms of Service (https://unisat.io/terms-of-service.html) and Privacy Policy (https://unisat.io/privacy-policy.html).\\n    \\nThis request will not trigger a blockchain transaction.\\n    \\nYour authentication status will reset after 24 hours.\\n    \\nWallet address:\\nbc1p7pgnqe87red4cvd7ml6rh9pl9ufpr522k2y3dpeyrvfc6g2g3r3s3ae9dr\\n    \\nNonce:\\n162d70e3-8c21-4cfd-9a22-9bf0a4b7be51\\n\"\n      };\n      this.$emit('generateTransactionParams', params, \"fractal_signMessage\")\n    },\n\n    fractal_send() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n      let params = {\n        from: '',\n        to: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        value: `${this.sendAmount}`\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_send\")\n    },\n\n    fractal_sendBitcoin() {\n      if (this.sendAmount == 0) {\n        alert(\"不能为零\")\n        return\n      }\n\n      let params = {\n        from: '',\n        toAddress: '1NKnZ3uAuQLnmExA3WY44u1efwCgTiAxBn', // pattern测试钱包的legacy地址\n        satoshis: `${this.sendSatoshisAmount}`,\n        options: {\n          feeRate: 16\n        }\n      }\n      this.$emit('generateTransactionParams', params, \"fractal_sendBitcoin\")\n    },\n\n    fractal_signPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: false\n        }\n      }, \"fractal_signPsbt\")\n    },\n\n    fractal_signAndPushPsbt_up() {\n      if (!this.psbtHex) {\n        alert(\"请输入psbt\")\n        return\n      }\n      this.$emit('generateTransactionParams', {\n        psbtHex: this.psbtHex,\n        options: {\n          autoFinalized: true\n        }\n      }, \"fractal_signAndPushPsbt\")\n    },\n\n    fractal_sendInscription() {\n      if (!this.nftId) {\n        alert(\"请输入NFT ID\")\n        return\n      }\n\n      if (!this.receiver) {\n        alert(\"请输入接收者地址\")\n        return\n      }\n\n      this.$emit('generateTransactionParams', {\n        address: this.receiver,\n        inscriptionId: this.nftId,\n        options: {\n          feeRate: \"15\"\n        }\n      }, \"fractal_sendInscription\")\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>\n","import { render } from \"./FractalTransactionPanel.vue?vue&type=template&id=fb2f7e38&scoped=true\"\nimport script from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./FractalTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./FractalTransactionPanel.vue?vue&type=style&index=0&id=fb2f7e38&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-fb2f7e38\"]])\n\nexport default __exports__","<script>\n\nimport {getFullnodeUrl, SuiClient} from \"@mysten/sui/client\";\nimport {Transaction as SuiTransaction} from '@mysten/sui/transactions';\n\nexport default {\n  name: \"SuiTransactionPanel\",\n  methods: {\n    sui_getAccount() {\n      this.$emit('generateTransactionParams', '', \"sui_getAccount\")\n    },\n\n    //对单个交易签名（不发送)\n    async sui_signMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signMessage\")\n    },\n\n    async sui_signPersonalMessage() {\n      const data = [\n        76, 111, 103, 105, 110, 32, 119, 105, 116, 104, 32, 66, 108, 117, 101,\n        109, 111, 118, 101,\n      ];\n      const uint8Array = new Uint8Array(data);\n      let input = {\n        message: uint8Array,\n      };\n      this.$emit(\"generateTransactionParams\", input, \"sui_signPersonalMessage\")\n    },\n\n    sui_signTransaction2() {\n      // 定义要转移的金额和目标地址\n      const amount = 109; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    async sui_requestRpc() {\n      let provider = window.provider;\n      provider.setDefaultChain(\n          `sui:mainnet`,\n          `https://fullnode.mainnet.sui.io:443`\n      );\n      var data = {\n        method: \"suix_getBalance\",\n        params: [\n          \"0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae\",\n          \"0x168da5bf1f48dafc111b0a488fa454aca95e0b5e::usdc::USDC\",\n        ],\n      };\n\n      this.$emit(\"generateTransactionParams\", data, \"sui_testRpc\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 102; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n\n      this.$emit(\"generateTransactionParams\", input, \"sui_signTransaction\")\n    },\n\n    /// 预执行，提前生成txBytes和txSerizalize\n    async sui_signAndExecuteTransaction_pre_execution() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n          \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n\n      const input = {\n        transactionBlock: tx,\n        options: {\n          showEffects: true,\n        },\n      };\n\n      /// 预执行，生成txBytes和txSerialize\n      const [txBytes, txSerialize] = await this.generateTsBytesAndSerizlize(\n          input\n      );\n      input.txBytes = txBytes;\n      input.txSerialize = txSerialize;\n      this.$emit(\"generateTransactionParams\", input, \"sui_signAndExecuteTransaction\")\n    },\n\n    /// generate txBytes and txSerialize\n    async generateTsBytesAndSerizlize(input) {\n      /// txBytes and txSerialize may be constructed in advance by the dapp side\n      let resultTuple = [\"\", \"\"];\n      if (\n          \"txBytes\" in input &&\n          input.txBytes.length > 0 &&\n          \"txSerialize\" in input &&\n          input.txSerialize.length > 0\n      ) {\n        resultTuple = [input.txBytes, input.txSerialize];\n      }\n\n      /// Otherwise, a transactionBlock parameter is required.\n      if (!(\"transactionBlock\" in input)) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      // if (this.walletAddress != \"connected\") {\n      //   alert(\"请先连接钱包\");\n      //   return new Promise((resolve) => {\n      //     resolve(resultTuple);\n      //   });\n      // }\n\n      let senderAccounts = window.provider.requestAccountsWithNamespace(\"sui\");\n      if (senderAccounts.length == 0) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      try {\n        let rpcUrl = getFullnodeUrl(\"mainnet\");\n        rpcUrl = \"https://www.okx.com/fullnode/sui/discover/rpc\"\n        const suiClient = new SuiClient({ url: rpcUrl });\n\n        /// sender is required\n        input.transactionBlock.setSender(senderAccounts[0]);\n        const result = await input.transactionBlock.build({\n          client: suiClient,\n        });\n        const txBytes = Buffer(result).toString(\"base64\");\n        const txSerialize = await SuiTransaction.from(txBytes).toJSON();\n        resultTuple = [txBytes, txSerialize];\n      } catch (error) {\n        return new Promise((resolve) => {\n          resolve(resultTuple);\n        });\n      }\n\n      return new Promise((resolve) => {\n        resolve(resultTuple)\n      })\n    },\n\n    //签名并发送交易\n    sui_signAndExecuteTransaction() {\n      // 定义要转移的金额和目标地址\n      const amount = 115; // 需要转移的金额\n      /// Rally Tiger钱包地址\n      const recipientAddress =\n        \"0x72f798f8b709902453d4bb55c65661e9e04154a506765f2333dfb7e7834056d2\"; // 目标地址\n\n      /// 构造一个转账的交易\n      const tx = new SuiTransaction();\n      const [coin] = tx.splitCoins(tx.gas, [amount]);\n      tx.transferObjects([coin], recipientAddress);\n      const input = {\n        transactionBlock: tx,\n        account: {},\n        chain: \"sui:mainnet\",\n        options: {\n          showEffects: true,\n        },\n      };\n\n      this.testTransaction = JSON.stringify(input);\n      this.currentSuiTransaction = input;\n      this.currentSuiMethod = \"sui_signAndExecuteTransaction\";\n    },\n  },\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_getAccount()\">getAccount(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signMessage()\">signMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signPersonalMessage()\">signPersonalMessage(Sui)</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signTransaction2()\">signTransaction(Sui)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_signAndExecuteTransaction()\">sendTransaction(Sui)</el-button>\n      <div style=\"font-size: 12px; color: gray;\">(send to Rally Tiger account)</div>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"sui_requestRpc()\">RPC_getBalance</el-button>\n      <div style=\"font-size: 12px; color: gray;\">get USDC balance of address:</div>\n      <div style=\"font-size: 12px; color: gray\">0x51ceab2edc89f74730e683ebee65578cb3bc9237ba6fca019438a9737cf156ae</div>\n    </el-col>\n\n    <div class=\"line\"></div>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signTransaction_pre_execution()\">signTransaction(prepared data)</el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\"\n                 @click=\"sui_signAndExecuteTransaction_pre_execution()\">sendTransaction(prepared data)</el-button>\n    </el-col>\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./SuiTransactionPanel.vue?vue&type=template&id=56a8eddf&scoped=true\"\nimport script from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./SuiTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./SuiTransactionPanel.vue?vue&type=style&index=0&id=56a8eddf&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-56a8eddf\"]])\n\nexport default __exports__","<script>\n\n\nimport {OKXTronProvider} from \"@okxconnect/universal-provider\";\nimport {TronWeb} from \"tronweb\";\n\nexport default {\n  name: \"TronTransactionPanel\",\n  methods: {\n\n    async tron_signMessage() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessage(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n\n      const verify = await tronWeb.trx.verifyMessage(\"0x\" + Buffer.from(\"Hello Tron\").toString(\"hex\"), res, provider.getAccount(\"tron:mainnet\").address)\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" + res, \"tron_signMessage\")\n    },\n\n    async tron_signMessageV2() {\n      this.$emit(\"generateTransactionParams\", \"Hello Tron\")\n      let provider = new OKXTronProvider(window.provider)\n      let res = await provider.signMessageV2(\"Hello Tron\", \"tron:mainnet\")\n      if (res.code) {\n        this.$emit(\"generateTransactionResult\", res, \"tron_signMessage\")\n        return\n      }\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      const base58Address = await tronWeb.trx.verifyMessageV2(\"Hello Tron\", res);\n      console.log(\"tron_signMessageV2_base58Address\", base58Address)\n      console.log(\"tron_signMessageV2_address\", provider.getAccount(\"tron:mainnet\").address)\n      const verify = base58Address === provider.getAccount(\"tron:mainnet\").address\n      this.$emit(\"generateTransactionResult\", \"verify:\" + verify + \"\\n\" +  res, \"tron_signMessage\")\n    },\n\n    async tron_signTransaction(isOnlySign) {\n      let provider = new OKXTronProvider(window.provider)\n        let tronWeb = new TronWeb({\n          \"fullHost\": 'https://api.trongrid.io',\n          \"headers\": {},\n          \"privateKey\": ''\n        })\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const transaction = await tronWeb.transactionBuilder.sendTrx(\"TGBcVLMnVtvJzjPWZpPiYBgwwb7th1w3BF\", 1000, address);\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let res = await provider.signTransaction( transaction, \"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", res, \"tron_signTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async getContract() {\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41e95812d8d5b5412d2b9f3a4d5a87ca15c5c51f33\"\n      \n      try {\n        const contract = await tronWeb.trx.getContract(contractAddress)\n        const abi = contract.abi.entrys;\n        console.log(\"获取到的合约：\")\n        console.log(abi)\n      } catch (error) {\n        console.log(\"Error getting contract ABI:\", error);\n      }\n    },\n    \n    async tron_signAndSendTransactionContract(isOnlySign) {\n      // this.getContract()\n      let tronWeb = new TronWeb({\n        \"fullHost\": 'https://api.trongrid.io',\n        \"headers\": {},\n        \"privateKey\": ''\n      })\n      let contractAddress = \"41e95812d8d5b5412d2b9f3a4d5a87ca15c5c51f33\"\n      let provider = new OKXTronProvider(window.provider)\n      let address = provider.getAccount(\"tron:mainnet\").address\n      const parameter = [\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n        {type: 'uint256', value: 1},\n      ]\n      const ret = await tronWeb.transactionBuilder.triggerSmartContract(contractAddress, \"quote(uint256,uint256,uint256)\", {}, parameter, address);\n      console.log(\"=====>transaction: \")\n      console.log(ret);\n      this.$emit(\"generateTransactionParams\", ret.transaction)\n      if (isOnlySign) {\n        let tx = await provider.signTransaction( ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(ret.transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n    },\n\n    async tron_signAndSendTransactionApprove(isOnlySign) {\n      let provider = new OKXTronProvider(window.provider)\n\n      let transaction = {\n        \"visible\": false,\n        \"txID\": \"d1ed31b6abd2c37e248254681d3ee61b2e628fbd776def753b5592712ebd98c5\",\n        \"raw_data\": {\n          \"contract\": [{\n            \"parameter\": {\n              \"value\": {\n                \"data\": \"095ea7b3000000000000000000000000e95812d8d5b5412d2b9f3a4d5a87ca15c5c51f33ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n                \"owner_address\": \"4157c140be01fa2bbabf7f055ab879d0c05725293c\",\n                \"contract_address\": \"41b4a428ab7092c2f1395f376ce297033b3bb446c1\"\n              },\n              \"type_url\": \"type.googleapis.com/protocol.TriggerSmartContract\"\n            },\n            \"type\": \"TriggerSmartContract\"\n          }],\n          \"ref_block_bytes\": \"1bde\",\n          \"ref_block_hash\": \"af71fa1aa01b5bd1\",\n          \"expiration\": Date.now() + 60000,\n          \"fee_limit\": 250000000,\n          \"timestamp\": Date.now()\n        },\n        \"raw_data_hex\": \"0a021bde2208af71fa1aa01b5bd140f8b1fa98b4325aae01081f12a9010a31747970652e676f6f676c65617069732e636f6d2f70726f746f636f6c2e54726967676572536d617274436f6e747261637412740a154157c140be01fa2bbabf7f055ab879d0c05725293c121541b4a428ab7092c2f1395f376ce297033b3bb446c12244095ea7b3000000000000000000000000e95812d8d5b5412d2b9f3a4d5a87ca15c5c51f33ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff70f1e6f698b432900180e59a77\"\n      }\n      this.$emit(\"generateTransactionParams\", transaction)\n\n      if (isOnlySign) {\n        let tx = await provider.signTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      } else {\n        let tx = await provider.signAndSendTransaction(transaction,\"tron:mainnet\")\n        this.$emit(\"generateTransactionResult\", tx, \"tron_sendRawTransaction\")\n      }\n\n    }\n\n  }\n}\n</script>\n\n<template>\n  <el-row :gutter=\"12\" class=\"button-row\">\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessage()\">tron_signMessage</el-button>\n    </el-col>\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signMessageV2()\">tron_signMessageV2</el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(true)\">\n        tron_signTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(true)\">\n        tron_signTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(true)\">\n        tron_signTransaction(Approve)\n      </el-button>\n    </el-col>\n\n    <div class=\"line\"></div>\n\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signTransaction(false)\">\n        tron_signAndSendTransaction(transfer)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionContract(false)\">\n        tron_signAndSendTransaction(contract)\n      </el-button>\n    </el-col>\n\n    <el-col :span=\"24\">\n      <el-button class=\"grid-content\" type=\"primary\" @click=\"tron_signAndSendTransactionApprove(false)\">\n        tron_signAndSendTransaction(approve)\n      </el-button>\n    </el-col>\n\n\n  </el-row>\n</template>\n\n<style scoped>\n.grid-content {\n  margin-top: 8px;\n  height: 40px;\n  width: 100%;\n}\n\n.line {\n  height: 2px;\n  width: 100%;\n  margin: 20px 0px;\n  background-color: gray;\n}\n</style>","import { render } from \"./TronTransactionPanel.vue?vue&type=template&id=eaaccc08&scoped=true\"\nimport script from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\nexport * from \"./TronTransactionPanel.vue?vue&type=script&lang=js\"\n\nimport \"./TronTransactionPanel.vue?vue&type=style&index=0&id=eaaccc08&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-eaaccc08\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=225206a1&scoped=true\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=225206a1&scoped=true&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-225206a1\"]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport ElementPlus from 'element-plus'\nimport 'element-plus/dist/index.css'\nimport App from './App.vue'\n\nconst app = createApp(App)\n\napp.use(ElementPlus)\napp.mount('#app')","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkokxconnectdemo\"] = self[\"webpackChunkokxconnectdemo\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(61685); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["Object","defineProperty","exports","value","CONNECT_METHOD_BATCH_FETCHMSG","CONNECT_METHOD_FETCHMSG","CONNECT_METHOD_RECEIVE","CONNECT_METHOD_UNSUB","CONNECT_METHOD_SUB","CONNECT_METHOD_PUBLISH","CONNECT_METHOD_LOGIN","CONNECT_METHOD_PUSH","require","__createBinding","this","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","__setModuleDefault","v","__importStar","mod","result","prototype","hasOwnProperty","call","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","next","e","rejected","done","then","apply","OKXWalletConnector","constants_1","storageconstants_1","storage_1","utils_1","utils_2","eventemitter3_1","log","protocol_1","WS","resolveWebSocketImplementation","constructor","url","events","EventEmitter","state","ConnectorState","InitState","selectedUrlIndex","retryCount","timeOutLimit","checkWSUrl","Error","heartbeatTimer","connectionTimeoutTimer","connectURLStorage","Storage","OKXCONNECTOR_CACHE_KEY","connecting","Connecting","onPayload","data","logDebug","rsp","Date","now","toString","emit","onClose","event","_a","socket","code","onError","id","payload","msg","onopen","onmessage","onclose","Connected","emitError","errorEvent","heartbeat","clearTimeout","OnError","readyState","WebSocket","OPEN","send","setTimeout","bind","tryRegistOpen","logError","registOpen","inRetry","toUTCString","URLSearchParams","startTimeOutTimer","hasBuiltInWebSocket","onerror","close","on","resetTimeOutTimer","OKXCONNECTOR_WS_URL_PENDING_CLOSE_CODE","FINISHED","checkMaxRetry","OKXCONNECTOR_WS_URL_LIST","length","connectionTryNext","nextUrl","getNextSelectUrl","CANCELED","pendingSocket","TIME_OUT","cacheSuccessUrlSelect","saveContent","onVisibleChanged","document","visibilityState","arguments","once","err","OKXConnectError","OKX_CONNECT_ERROR_CODES","CONNECTION_ERROR","connect","removeEventListener","addEventListener","disconnect","Disconnected","currentStatus","addListener","decrypt","success","failed","listenPayloadHandler","removeListener","parsedEvent","safeJsonParse","params","rawMsg","message","failHandler","addPackageParse","callback","payloadHandler","param","listener","off","doLogin","safeJsonStringify","getMsgPayloadFromHistory","tmpMsg","jsonstr","onOpen","openHandler","ConnectionManager","connect_1","commands_1","jwtconstants_1","crypto_1","jwt_1","safejson_1","log_1","report_1","url_1","appname","connectStorage","OKXCONNECTOR_CACHE_KEY_DAPP","crypto","SessionCrypto","inTMA","isInTMA","reportLog","keyPairInfo","getCachedCryptoKeyPair","jwtKeyPair","getCachedJWTKeyPair","saveJWTKeyPair","connector","OKXCONNECTOR_WS_URL_1","packageId","connectedWalletPK","currentTopic","refreshPackageId","saveCryptoKeyPair","keyPair","cacheInfo","encryptStoreMsg","OKXCONNECTOR_CRYPTO_KEY","kp","getAndDecrypt","content","clearCache","strkeyPair","publicKey","toHexString","secretKey","OKXCONNECTOR_JWT_KEY","strKeyPairInfo","hexToByteArray","generateKeyPair","isWalletPKReady","makeJWT","topic","signJWT","OKXCONNECTOR_JWT_SIDE","OKXCONNECTOR_JWT_TTL","parsePackage","input_1","input","ignoreACK","_b","_c","_d","_e","sendACK","getItem","OKXCONNECTOR_TOKEN_CACHE","inputObj","messageId","sendReceive","restoreConnect","getConnectInfo","generateTopic","info","channelId","clientId","stringifyKeypair","fromRestore","timeLog","getTime","lastConnectId","cachedSenderPublicKey","OKXCONNECTOR_CRYPTO_SENDER_PK_CACHE","jwtToken","timeOne","error","name","timeF","sendFetchAndConsumeMessages","timeTh","catch","jsonrpc","CONNECT_JSONRPC_VER","method","token","replace","parsedMessage","fail","msgObj","trimStart","startsWith","sendRaw","ttl","OKXCONNECTOR_MESSAGE_TTL","msg_1","encrypt","reportEvent","OKXReportType","LOG","msgId_1","success_1","msgId","reason","sendConnectSessionInfo","fetchedMessages","hasMore","receivedMsgs","i","timeFive","cleanCache","saveSessionContent","key","OKXCONNECTOR_SESSION_PREFIX_KEY","jsonData","getSessionContent","jsonStr","object","getCurrentConnectionReady","OKXCONNECTOR_WS_URL_IDX_KEY","OKXCONNECTOR_WS_URL_3","OKXCONNECTOR_WS_URL_2","EVENT_EMITTER_MAX_LISTENERS","Engine","iconnector_1","ws_connector_1","connectionManager_1","sessionUtils_1","connector_1","wallet_info_1","appName","connectors","useConnector","connectionManager","isInject","getConnector","InjectConnector","registerConnector","WsConnector","setConnectionManager","hasWsConnector","universalConnect","request","sessionConfig","connectInfoAndUrl","JSON","stringify","tonRequest","universalRequest","forEach","item","push","connectInfo","requestId","openUniversalLink","openUniversalUrl","universalConnectRequest","protocolVer","Number","tonConnectSdkVersion","dAppInfo","dappInfo","requests","redirect","universalConnectRequestbase64Encoded","encodeConnectParams","tonConnectRequest","isFromTonSDK","defaultConnectRequest","openOKXLink","getOKXLink","useMini","tmaReturnUrl","openMethod","OkxwalletInjectConnector","openWallet","connectRequest","openOKXTMAWalletlinkWithFallback","useShortLink","openOKXUniversalLink","openOKXDeeplinkWithFallback","isIOS","isIos","addOnConnectResultListener","response","connectResponse","namespaces","buildNameSpacesByConnectResponse","UNKNOWN_ERROR","walletName","responses","session","assign","wallet","methodsResponse","find","connectRequestMethods","signResponse","sendSession","connectResultListener","setOnConnectResultListener","engineConnectInfo","requestAnswer","clearData","addDisconnectListener","disconnecter","tag","getTagByappName","getTag","OKXWalletName","OKX_APP_WALLET","OKXMiniWalletName","OKX_TG_WALLET","OKXInjectWalletName","OKX_INJECT_WALLET","setConnectConnector","setSessionConnectingListener","sessionConnectingListener","restoreconnect","sessionInfo","onConnectResult","restoreconnectFromTopic","connectManagerDisconnect","WalletConnectionManager","walletConnectionManager_1","engine_1","__importDefault","MULTICODEC_ED25519_LENGTH","MULTICODEC_ED25519_HEADER","MULTICODEC_ED25519_BASE","MULTICODEC_ED25519_ENCODING","DID_METHOD","DID_PREFIX","DID_DELIMITER","KEY_PAIR_SEED_LENGTH","DATA_ENCODING","JSON_ENCODING","JWT_ENCODING","JWT_DELIMITER","JWT_IRIDIUM_TYP","JWT_IRIDIUM_ALG","JWTHeaderType","decodeJSON","encodeJSON","encodeIss","decodeIss","encodeSig","decodeSig","encodeData","decodeData","encodeJWT","decodeJWT","verifyJWT","ed25519","tweetnacl_1","stringUtils_1","default","sign","str","okxtoString","okxfromString","val","publicKeyStr","join","issuer","prefix","multicodec","split","bytes","encoded","header","signature","jwt","slice","sub_1","aud_1","ttl_1","keyPair_1","sub","aud","iat","Math","floor","alg","typ","iss","exp","act","detached","verify","OKXCONNECTOR_JWT_WALLET_SIDE","buildRequestAccountNameSpacesByConnectResponse","requestAccountNameSpaces","universalResponse","tonAddress","tonProof","address","network","ton_addr","ton_proof","accounts","namespace","addresses","methods","extra","chains","addressItem","addressArr","chain","utils_3","crypto_js_1","subKey","beforeKey","localStorage","resolveLocalStorage","checkAndUpgradeCache","storeKey","cipherIV","cacheStr","cacheKey","cache","cacheObj","fromCacheKey","toCacheKey","setItem","removeItem","timestamp","saveItem","localKey","totalCacheStr","getCachedPBKDF2InfoKey","pwLen","saltLen","pw","iv","salt","OKXCONNECTOR_STORAGER_CRYPTO_SALT","randomBytes","OKXCONNECTOR_STORAGE_CRYPTO_PASSWORD","OKXCONNECTOR_STORAGE_CRYPTO_CIPHERIV","ivBuffer","PBKDF2","iterations","storeInfo","AES","enc","Utf8","OKXCONNECTOR_STORAGE_CIPHER_METHOD","OKXCONNECTOR_TON_KEY","WalletConnectionManagerEvent","WalletConnectionManagerTopicInfoCacheKey","RECEIVE_REQUEST","walletConnectionConstants_1","communicateEvents","sessionCryptoInfoMap","Map","inLogin","isLogined","offset","topicId","isTopicPublicKeyExist","timestampStr","parseInternalMsg","internalMsg","internalObj","origin","originContent","base64decode","updateClientId","cid","lastCheck","getLastSixMd5Hash","dappPublicKey","syncCacheSessionInfo","topic_1","_f","_g","_h","_j","_k","_l","isInternalData","inner_message","inner_topic","messageObj","sessionInfoString","base64Content","inner_connection","toObject","decryptWallet","recovrySessionInfoFromCache","cacheMap","topicItem","cryptoItem","cryptoKeyPair","set","cacheSessionInfo","sync","duplicatedTopics","includes","delete","appendTopic","sessionPublicKey","subscribeTopics","Array","from","confirmAppendingTopics","size","keys","getSessionPublicKey","getCurrentCachedTopicIdList","needPublicKey","useRaw","connectedDappPK","cryptoObject","encryptWallet","sendUnsubscribe","sendBatchFetchAndConsumeMessages","topicIdList","topics","withInternalData","finishCount","idx","AppwalletConnector","instance","super","walletNameKey","shortUniversalLink","appConnectEncodeParams","appDeepLink","getAppWalletDeepLink","isOS","openDeeplinkWithFallback","stackDeepLink","openLinkBlank","standardUniversalLink","TgwalletConnector","appwallet_connector_1","inject_connector_1","tgwallet_connector_1","okxwallet_inject_connector_1","provider_1","SolProvider_1","inject_1","AptosPrivider_1","disconnectListener","providerMap","enable","NameSpaceKeyEip155","Eip155Provider","NameSpaceKeySOL","SolProvider","NameSpaceKeyAptos","AptosProvider","getInjectProvider","nameSpace","mapKey","entries","BAD_REQUEST_ERROR","window","okxwallet","requestAccounts","nameSpaceArr","requiredNamespaces","optionalNamespaces","platform","appVersion","maxProtocolVersion","responseItem","walletInfo","isMobileUserAgent","requestWallets","walletInfoFirst","itemChains","chainStr","currentChain","getChainId","selectedAddress","chainId","coinType","nameSpaceResponse","Eip55Methods","SOLANAMethods","AptosMethods","getRequestId","newRequest","onAck","injectProvider","USER_REJECTS_ERROR","errorResponse","CHAIN_NOT_SUPPORTED","toJSON","encodeTGParams","encodeTWAConnectURLParams","tgUrl","getTelegramWalletTWAUrl","pendingRequests","getDefaultReporter","beginReport","jsonResponse","handleResponse","connectParams","bindRequestForPromise","clear","nonceLength","sessionKeyPair","createKeypairFromString","createKeypair","box","createNonce","receiverPublicKey","encodedMessage","TextEncoder","encode","nonce","encrypted","concatInfo","concatUint8Arrays","hexResult","encodedResult","base64encode","senderPublicKey","messageByteArray","toUint8Array","internalMessage","splitToUint8Arrays","decrypted","open","TextDecoder","decode","__exportStar","p","hasOKXInjectedProvider","getWindowProviderNamespace","providerSearch","provider","property","path","_provider","injectParams","aptos","signMessage","signTransaction","signAndSubmitTransaction","hash","METHOD_NOT_SUPPORTED","bs58_1","signedMessage","solana","bufferResult","injectResult","allResult","signAllTransactions","signAndSendResult","signAndSendTransaction","ethParams","typedDataJson","switchChainId","parseInt","resultSwitch","chainHex","resultMe","HIDE_INJECTED_WALLET_CHAINS","TON_CHAINS","COSMOS_CHAINS","APTOS_CHAINS","SUI_CHAINS","SOLANA_CHAINS","BTC_CHAINS","MAINNET","FRACTAL","TESTNET","SONIC_TESTNET","COSMOS_MAINNET","IEngine","ISignClient","ISignClientEvents","IEngineEvents","client","creatOKXInjectWalletInfo","creatOKXMiniAppWalletInfo","creatOKXWalletInfo","getBigIntRpcId","formatJsonRpcRequest","isJsonRpcError","isJsonRpcResponse","parseConnectionError","isHttpUrl","formatJsonRpcError","json_rpc_1","isJsonRpcPayload","isJsonRpcRequest","isJsonRpcResult","payloadId","formatJsonRpcResult","isReservedErrorCode","getError","getErrorByCode","formatErrorMessage","isWsUrl","okx_connect_error_1","IncrementalRandomGenerator","bits","Uint8Array","Uint16Array","Uint32Array","initialValue","getNextValue","uint8Generator","uint16Generator","date","BigInt","RESERVED_ERROR_CODES","type","STANDARD_ERROR_MAP","DEFAULT_ERROR","match","values","INTERNAL_ERROR","SERVER_ERROR","getUrlProtocol","matches","RegExp","matchRegexProtocol","regex","protocol","test","CONNECT_ITEM_ERROR_CODES","TONCHAIN","connect_wallet_1","connect_event_1","getTestTwaUrl","okxTesttwaUrl","getTestTgTwaUrl","okxTestTgtwaUrl","tgwalletAppName","tgwalletName","standardDeeplink","downloadUrl","okxDeeplink","location","hostname","SERVER_ERROR_CODE_RANGE","INVALID_PARAMS","METHOD_NOT_FOUND","INVALID_REQUEST","PARSE_ERROR","getDefaultMessageByCode","setPrototypeOf","ALREADY_CONNECTED_ERROR","NOT_CONNECTED_ERROR","UNKNOWN_APP_ERROR","NameSpaceKeyTron","NameSpaceKeyCosmos","NameSpaceKeyBtc","NameSpaceKeySui","NameSpaceKeyTON","misc_1","chains_1","callForSuccess","fn","options","attempts","delayMs","lastError","delay","timeout","signal","aborted","timeoutId","checkMetaData","versionCompare","isBrowser","openLink","toSafeBase64FromBase64","isValidObject","getAppWalletShortDeepLink","encodeTelegramUrlParameters","isTelegramUrl","openOKXDeeplink","getUniversalLink","logWarning","call_for_success_1","web_api_1","tma_api_1","request_1","debug","forceReport","defaultReporter","OKXReporter","packageJson","version","args","console","okxLogDebug","reduce","sendRecordContent","warn","action","content_1","OKXReportSide","versionStr","cross_fetch_1","localforage_1","reportApiList","reportCacheKey","reportUUIDKey","MAX_LIMIT_REPORTCOUNT","DEFAULT_HTTP_HEADERS","Accept","DEFAULT_HTTP_METHOD","DEFAULT_FETCH_OPTS","headers","PAGE_IN","PAGE_OUT","CLICK","DAPP","WALLET","fetchListWithTimeout","urls_1","args_1","urls","controller","AbortController","fetchPromise","timeoutPromise","_","abort","race","ok","status","currentSide","currentVersion","storage","createInstance","recordList","currentUUID","configVersionAndSide","side","recordCacheKey","reportPlatform","startErrorCatching","records","uuid","sendCachedRecords","getWindow","cachedErrors","sendRecord","record","body","res","filter","pathname","language","navigator","ua","userAgent","reportItem","lang","markRecordItem","sendList","map","allSettled","results","keepIndex","index","splice","markRecord","Report_WalletType_Key","Report_Proceed_QRCode_Click","Report_ChooseType_Download_Click","Report_ChooseType_ConnectWallet_Click","Report_Proceed_Retry_Click","Report_ChooseType_ConnectWallet_View","Report_Loading_ConnectWallet_View","Report_Proceed_QRCode_View","Report_Proceed_Proceed_View","dappMetaData","icon","JSONStringify","JSONParse","json","numbersBiggerThanMaxInt","serializedData","group","parse","isCustomFormatBigInt","substring","alloc","allocUnsafe","basics_1","string","encoding","base","BASES","decoder","array","encoder","createCodec","buf","ascii","bufNum","String","fromCharCode","charCodeAt","utf8","hex","bases","base16","latin1","binary","isTmaPlatform","inTg","isInTelegramBrowser","sendExpand","sendOpenTelegramLink","initParams","locationHash","urlParseHashParams","tmaPlatform","tgWebAppPlatform","Telegram","WebApp","webAppVersion","tgWebAppVersion","platforms","TelegramWebviewProxy","isTelegramWebview","TelegramWebview","postEvent","link","fallback","URL","pathFull","search","isIframe","versionAtLeast","path_full","parent","eventType","eventData","external","notify","trustedTarget","postMessage","indexOf","_path","urlSafeDecode","qIndex","pathParam","substr","query_params","urlParseQueryString","urlencoded","decodeURIComponent","queryString","paramName","paramValue","queryStringParams","v1","v2","a","p1","p2","v1List","v2List","max","ver","removeUrlLastSlash","addPathToUrl","deeplinkUrl","useStandardUniversalLink","replaceStrWithParam","cleanUrl","deeplinkEncodeUrl","encodeURIComponent","fullUrl","isTelegram","newWindow","href","deepLinkOpened","timeoutDuration","fallbackToDownloadPage","parameters","encodedParameters","connectRequestStr","utf8Array","base64Encoded","btoa","connectParam","redirectStr","okxconnect","extraparams","base64ContentStr","urlSafeBase64","twaDeepLink","openTelegramLink","RANDOM_LENGTH","hasLocalStorage","hashKey","generateRandomBytes32","tweetnacl_util_1","to_string_1","sha256_1","BASE16","hexString","byteArray","byte","buffer1","buffer2","mergedArray","subArray1","subArray2","encodeUint8Array","urlSafe","encodeBase64","decodeToUint8Array","decodeBase64","uint8Array","decodeUTF8","decodedUint8Array","encodeUTF8","scheme","global","self","randomBytes32","obj","getPrototypeOf","maxTouchPoints","isIOSDevice","MSStream","isIPadOS","MD5","base64","getUserAgent","ua_parser_js_1","target","doFallback","fallbackTimeout","check","vendor","opera","getResult","osName","os","toLowerCase","deviceModel","device","model","browserName","browser","OKXBtcProvider","_1","caip","getAddressForChainId","ns","checkChainId","account","getAccount","signStr","ret","errorData","sendBitcoin","toAddress","satoshis","to","feeRate","txhash","checkParameters","signPsbt","psbtHex","signPsbts","psbtResults","psbtHexs","signAndPushPsbt","sendInscription","inscriptionId","extension","coinId","protocolId","atomicSuffix","ordinalsSuffix","endsWith","removeSuffix","scenario","txType","batchBean","coinAmount","nftId","suffix","unexistKeys","namespaceKey","OKXCosmosProvider","core_1","accountArray","algo","bech32Address","pubKey","hexToUint8Array","signArbitrary","signerAddress","signDoc","chain_id","account_number","sequence","fee","gas","amount","msgs","memo","signData","signAmino","signOptions","resData","signed","signDirect","bodyBytes","bufferToHex","authInfoBytes","accountNumber","messageToBuffer","buffer","arr","output","x","padStart","arrayBuffer","byteValue","isNaN","OKXTonProvider","statusChangeSubscriptions","statusChangeErrorSubscriptions","tonWallet","errorsHandler","connected","tonNameSpace","walletStateInit","sessionWallet","tonDeviceInfo","features","connectItems","onStatusChange","sendTransaction","transaction","requestAccountsWithNamespace","requestParams","OKXTronProvider","TRON_CHAIN_ID","getChain","stringToHex","signMessageV2","signedTx","realSignTx","visible","txID","rawData","contract","raw_data","expiration","ref_block_bytes","fee_limit","ref_block_hash","raw_data_hex","OKXUniversalProvider","eip155_1","sui_1","client_1","namespaces_1","solana_1","btc_1","aptos_1","ton_1","cosmos_1","tron_1","packages_1","init","opts","setGlobal","okxConnectUniversalinwindow","initialize","providerOpts","rpcProviders","requestParam","buildRequestParamFromRequest","getProvider","validateChain","keyArr","connectOpts","called","onRequestSent","disconnectAndEmit","cleanup","engine","aptosChainNameToGeneralId","replaceAptos","aptosNameSpace","realNS","replaceAptosInner","optionAptosNameSpace","realOptionNS","defaultChain","replaceAptosGeneralIdWithNetName","replaceSessionAptos","disconnectInner","connectAndSign","signRequest","updatedOpts","setNamespaces","onConnect","requestItem","signResponseList","okxConnectUniversalUIinwindow","creatNotSupportMethodItemReplay","syncAllAddresses","syncAddressAvailable","syncAllAddress","setDefaultChain","rpcUrl","checkStorage","sessionInfoStr","getFromStore","createProviders","registerEventListeners","SignClient","providersToCreate","Set","parseNamespaceKey","namespacesValue","currentNameSpace","opts1","solanaProvider","sonicProvider","svmProvider","optsTon","tonProvider","optsSui","suiProvider","SuiProvider","optsBtc","btcProvider","fbProvider","aptosProvider","moveProvider","cosmosProvider","tronProvider","PROVIDER_EVENTS","DEFAULT_CHAIN_CHANGED","caip2ChainId","onChainChanged","UPDATE_NAMESPACES","nameSpaces","nameSpacekey","persist","isChainNamespaceInSession","chainsArr","defaultNamespace","getDefaultChain","namespaceStr","requestDefaultChainWithNamespace","caip2Chain","sessionProperties","showRequestModal","OKXUniversalProvider_1","OKXBtcProvider_1","OKXCosmosProvider_1","OKXTonProvider_1","OKXTronProvider_1","ConnectMethodUtils_1","metaData","requestAccountItem","nameSpaceToConnectWalletNameSpace","SESSION_CONNECTING","connectMethodsToConnectWalletMethods","metadata","fillParamsToSession","connectMethodsResponseUpdate","openOKXWallet","allAddressStr","syncResoonseToRequire","connectSupportMethods","connectMethodsAdaptOldVersion","uint8array_extras_1","isArray","isRecord","notSupportError","errorItem","callBackParams","solAccount","account1","solAddress","fromAccountToAddress","realMessage","stringToUint8Array","suiMessage","convertedArray","b64encoded","atob","btcAccounts","account2","btcAccount","btcAddress","paramData","aptosAccount","account3","aptosAddress","fullMessage","application","aptosChainId","cosmosAccount","account_cosmos","cosmosAddress","cosmosData","cosmosBase64Encoded","stringToBase64","methodItem","solanaSuccessData","suiMethod","requestMethod","suiMessageb64","aptosSignature","requireNameSpace","includeEip155","some","space","syncAddressHostAvailable","includeChain","paramsArr","firstParam","firstObj","aptosParams","currentURL","signChainId","applicationUrl","cosmosChain","responseAddressStr","allAddress","isEvm","deriveName","addr","ci","evmAddress","freeze","getAccountsChains","isCaipNamespace","mergeRpcMap","targetRpcMap","sourceRpcMap","mergeNamespaces","source","rpcMap","GENERIC_SUBPROVIDER_NAME","RPC_URL","STORAGE","CONTEXT","WC_VERSION","PROTOCOL","RELAY_URL","LOGGER","JsonRpcConnection_1","JsonRpcProvider_1","httpProviders","createHttpProviders","updateNamespace","getAccounts","setHttpProvider","http","parsedChainId","parsedRpc","getRpcUrl","httpProvider","createHttpProvider","getHttpProvider","rpc","JsonRpcProvider","JsonRpcConnection","getGlobal","BtcProvider","CosmosProvider","updateRequestParams","isDic","decimalNumber","selectedChainId","chainNum","paramsChainId","paramsChainString","adaptArray","addressObj","isEqual","chainAddress","messages","secondObj","hexChainId","getHexChainIdFromRequest","isChainApproved","configAddressAdaptInjectWallet","handleSwitchChain","addEthereumChain","resultData","rpcUrls","eip155","core_2","disableProviderPing","isAvailable","registering","register","parseError","types_1","IJSONRpcProvider","connection","hasRegisteredEventListeners","setConnection","context","requestStrict","_error","SolanaProvider","getPubkey","getWalletAddress","components","__rest","s","t","getOwnPropertySymbols","propertyIsEnumerable","TONProvider","validUntil","newParams","fromAddress","boc","TronProvider","IJSONRpcConnection","opt","globals","convertChainIdToNumber","parseChainId","mergeArrays","projectId","reference","CAIP_DELIMITER","b","okxGlobal","_createElementBlock","_hoisted_1","_createVNode","_component_el_container","_withCtx","_component_el_header","_cache","_createTextVNode","_component_el_main","_component_el_card","class","_createElementVNode","style","_component_el_row","_component_el_col","span","_toDisplayString","$options","_ctx","_component_el_checkbox","modelValue","withUI","$event","onChange","handleWithUI","universalToTG","handleUniversalToTG","_component_el_select","modals","placeholder","handleModalsSelect","multiple","_component_el_option","label","returnStrategy","handleReturnStrategySelect","_Fragment","_renderList","returnStrategies","strategy","_createBlock","_component_el_input","deeplink","handleReturnStrategyDeeplink","disabled","_createCommentVNode","handleLanguageSelect","locales","locale","theme","handleThemeSelect","THEME","LIGHT","DARK","selectedMethod","handleConnectMethodsSelect","connectMethods","tonProofValue","gutter","align","availableChains","checked","areChainsInit","isOptionalChecked","handleOptionChange","_component_el_button","onClick","initBtnClicked","connectInitStr","connectBtnClicked","connectStatusStr","syncAllAddressClick","syncAllAddressStr","disconnectAction","walletAddress","disconnectStatusStr","_Teleport","showModal","closeModal","_withModifiers","_component_qrcode_vue","qrValue","level","_component_el_tabs","activeTab","onTabClick","clickActiveTab","_component_el_tab_pane","eth_requestAccounts","eth_chainId","wallet_switchEthereumChain","wallet_addEthereumChain","personal_sign","eth_signTypedData_v4","eth_sendTransaction_transfer","eth_sendTransaction_approve","eth_sendTransaction_mint","wallet_watchAsset","ton_getAccount","ton_sendTransaction","sol_signMessage","sol_signTransaction","sol_signVersionedTransaction","sol_signAllTransactions","sol_signAllVersionedTransactions","sol_signAndSendTransaction","sol_signAndSendVersionedTransaction","_component_SuiPanel","onGenerateTransactionParams","sui_generateTransactionParams","_component_BTCPanel","btc_generateTransactionParams","_component_FractalPanel","fractal_generateTransactionParams","_component_TronTransactionPanel","tron_generateTransactionParams","onGenerateTransactionResult","tron_getTransactionResult","aptos_signMessage","aptos_signTransaction","aptos_signAndSubmitTransaction","cosmos_signArbitrary","cosmos_signAmino","cosmos_signDirect","wallet_testRpc","eth_sendTransaction_swap","move_signTransaction","move_signAndSubmitTransaction","testBase64UrlSafe","xs","sm","handleRedirectSelect","canChainAddRedirectParam","redirectDeeplink","handleRedirectDeeplink","addRedirectParam","testTransaction","rows","testboc","testTransactionStr","btc_getAccount","btc_signMessage","$setup","sendAmount","clearable","btc_send","sendSatoshisAmount","btc_sendBitcoin","btc_signPsbt_up","btc_signAndPushPsbt_up","receiver","btc_sendInscription","props","setup","ref","$emit","alert","autoFinalized","__exports__","fractal_getAccount","fractal_signMessage","fractal_send","fractal_sendBitcoin","fractal_signPsbt_up","fractal_signAndPushPsbt_up","fractal_sendInscription","sui_getAccount","sui_signMessage","sui_signPersonalMessage","sui_signTransaction2","sui_signAndExecuteTransaction","sui_requestRpc","sui_signTransaction_pre_execution","sui_signAndExecuteTransaction_pre_execution","recipientAddress","tx","SuiTransaction","coin","splitCoins","transferObjects","transactionBlock","showEffects","txBytes","txSerialize","generateTsBytesAndSerizlize","resultTuple","senderAccounts","getFullnodeUrl","suiClient","SuiClient","setSender","build","Buffer","currentSuiTransaction","currentSuiMethod","tron_signMessage","tron_signMessageV2","tron_signTransaction","tron_signAndSendTransactionContract","tron_signAndSendTransactionApprove","tronWeb","TronWeb","trx","verifyMessage","base58Address","verifyMessageV2","isOnlySign","transactionBuilder","sendTrx","getContract","contractAddress","abi","entrys","parameter","triggerSmartContract","verifyADR36Amino","fromBech32","VConsole","allChains","chainsThatCanAddRedirectParam","optionChains","selectedModals","selectedReturnStrategy","selectedDeepLink","selectedLanguage","selectedTheme","TronTransactionPanel","QrcodeVue","BTCPanel","FractalPanel","SuiPanel","testTopic","testPublicKey","testProofPayload","pendingDeepLink","logList","connectReady","localPubKey","localSecKey","selectedChain","ProofPayloadVerify","showVerifyRow","has","selectedMethodData","isChecked","reload","add","computed","selectedChains","initChains","newChains","updatedChains","tab","tabName","initCall","OKXUniversalConnectUI","actionsConfiguration","uiPreferences","onModalStateChange","uri","isPC","items","testTonSdk","blockExplorerUrls","chainName","nativeCurrency","symbol","decimals","dataETH","dataPolygon","types","EIP712Domain","Person","Mail","primaryType","domain","verifyingContract","contents","maxPriorityFeePerGas","maxFeePerGas","gasPrice","gasLimit","image","tonUniversalLog","sendTransactionAlert","fetch","confirm","sendData","adapter","SuiAdapter","suiResult","signAndExecuteTransaction","sui_verifySignature","signPersonalMessage","btcAdapter","btcResult","currentBtcMethod","currentBtcTransaction","hexToBase64","bs64Str","fractalResult","currentFractalMethod","currentFractalTransaction","hexStr","blob","Blob","reader","FileReader","onload","base64Data","readAsDataURL","datatest","firstStr","showUrl","hasEip155","hasSolana","hasSui","hasBtc","hasAptos","hasTon","hasCosmos","nameSpacesChains","optSpaceChains","solanaChains","hasTron","suiChains","btcChains","connectMethod","connectData","requireData","cosmos","tron","tonParams","ton","sui","btc","optData","eip155Chains","signMethods","getCurrentSelectedMethodData","openModalAndSign","openModal","methodList","suiData","currentMethod","userAgentInfo","Agents","flag","isSafariOrChrome","pubkey","OKXSolanaProvider","result1","nacl","PublicKey","toBytes","OKXAptosProvider","config","AptosConfig","Network","Aptos","simple","sender","function","typeArguments","functionArguments","Connection","getSolConnect","blockhash","getLatestBlockhash","versionedTransactionMessage","TransactionMessage","payerKey","recentBlockhash","instructions","SystemProgram","transfer","fromPubkey","toPubkey","lamports","compileToV0Message","VersionedTransaction","Transaction","feePayer","isValid","cosmos_verifySignArbitrary","pub_key","signer","prefixStr","signatureBuffer","uint8Signature","pubKeyValueBuffer","pubKeyUint8Array","uiOptions","eth_verifyMessage","ethAddress","originalMessage","recoveredAddress","ethers","list","verifyList","requestItme","ethMessage","solanaMessage","verifySol","aptosMessage","aptosPublicKey","cosmosMessage","tronMessage","signatureResult","resultObj","verifyPersonalMessageSignature","toSuiAddress","toBase64","newTransaction","c","created","mounted","scriptTag","createElement","src","getElementsByTagName","appendChild","title","render","app","createApp","App","use","ElementPlus","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","loaded","__webpack_modules__","amdO","deferred","O","chunkIds","priority","notFulfilled","Infinity","j","every","r","n","getter","d","definition","g","globalThis","Function","prop","Symbol","toStringTag","nmd","paths","children","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}